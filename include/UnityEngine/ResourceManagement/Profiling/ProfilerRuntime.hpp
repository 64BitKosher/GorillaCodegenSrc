// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Guid
#include "System/Guid.hpp"
// Including type: System.Int32
#include "System/Int32.hpp"
// Including type: Unity.Profiling.ProfilerCounterValue`1
#include "Unity/Profiling/ProfilerCounterValue_1.hpp"
// Including type: UnityEngine.Hash128
#include "UnityEngine/Hash128.hpp"
// Including type: UnityEngine.ResourceManagement.Profiling.CatalogFrameData
#include "UnityEngine/ResourceManagement/Profiling/CatalogFrameData.hpp"
// Including type: UnityEngine.ResourceManagement.Profiling.BundleFrameData
#include "UnityEngine/ResourceManagement/Profiling/BundleFrameData.hpp"
// Including type: UnityEngine.ResourceManagement.Profiling.AssetFrameData
#include "UnityEngine/ResourceManagement/Profiling/AssetFrameData.hpp"
// Including type: System.ValueTuple`2
#include "System/ValueTuple_2.hpp"
// Including type: UnityEngine.ResourceManagement.ResourceProviders.SceneInstance
#include "UnityEngine/ResourceManagement/ResourceProviders/SceneInstance.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::ResourceManagement::Profiling
namespace UnityEngine::ResourceManagement::Profiling {
  // Forward declaring type: ProfilerFrameData`2<T1, T2>
  template<typename T1, typename T2>
  class ProfilerFrameData_2;
  // Skipping declaration: ContentStatus because it is already included!
}
// Forward declaring namespace: UnityEngine::ResourceManagement::AsyncOperations
namespace UnityEngine::ResourceManagement::AsyncOperations {
  // Forward declaring type: IAsyncOperation
  class IAsyncOperation;
  // Forward declaring type: AsyncOperationHandle`1<TObject>
  template<typename TObject>
  struct AsyncOperationHandle_1;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: Dictionary`2<TKey, TValue>
  template<typename TKey, typename TValue>
  class Dictionary_2;
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Forward declaring namespace: UnityEngine::ResourceManagement::ResourceProviders
namespace UnityEngine::ResourceManagement::ResourceProviders {
  // Forward declaring type: ProvideHandle
  struct ProvideHandle;
  // Forward declaring type: AssetBundleRequestOptions
  class AssetBundleRequestOptions;
}
// Forward declaring namespace: UnityEngine::ResourceManagement::Util
namespace UnityEngine::ResourceManagement::Util {
  // Skipping declaration: BundleSource because it is already included!
}
// Forward declaring namespace: UnityEngine::ResourceManagement::ResourceLocations
namespace UnityEngine::ResourceManagement::ResourceLocations {
  // Forward declaring type: IResourceLocation
  class IResourceLocation;
}
// Completed forward declares
// Type namespace: UnityEngine.ResourceManagement.Profiling
namespace UnityEngine::ResourceManagement::Profiling {
  // Forward declaring type: ProfilerRuntime
  class ProfilerRuntime;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::ResourceManagement::Profiling::ProfilerRuntime);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::ResourceManagement::Profiling::ProfilerRuntime*, "UnityEngine.ResourceManagement.Profiling", "ProfilerRuntime");
// Type namespace: UnityEngine.ResourceManagement.Profiling
namespace UnityEngine::ResourceManagement::Profiling {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.ResourceManagement.Profiling.ProfilerRuntime
  // [TokenAttribute] Offset: FFFFFFFF
  class ProfilerRuntime : public ::Il2CppObject {
    public:
    // Get static field: static public readonly System.Guid kResourceManagerProfilerGuid
    static ::System::Guid _get_kResourceManagerProfilerGuid();
    // Set static field: static public readonly System.Guid kResourceManagerProfilerGuid
    static void _set_kResourceManagerProfilerGuid(::System::Guid value);
    // static field const value: static public System.Int32 kCatalogTag
    static constexpr const int kCatalogTag = 0;
    // Get static field: static public System.Int32 kCatalogTag
    static int _get_kCatalogTag();
    // Set static field: static public System.Int32 kCatalogTag
    static void _set_kCatalogTag(int value);
    // static field const value: static public System.Int32 kBundleDataTag
    static constexpr const int kBundleDataTag = 1;
    // Get static field: static public System.Int32 kBundleDataTag
    static int _get_kBundleDataTag();
    // Set static field: static public System.Int32 kBundleDataTag
    static void _set_kBundleDataTag(int value);
    // static field const value: static public System.Int32 kAssetDataTag
    static constexpr const int kAssetDataTag = 2;
    // Get static field: static public System.Int32 kAssetDataTag
    static int _get_kAssetDataTag();
    // Set static field: static public System.Int32 kAssetDataTag
    static void _set_kAssetDataTag(int value);
    // static field const value: static public System.Int32 kSceneDataTag
    static constexpr const int kSceneDataTag = 3;
    // Get static field: static public System.Int32 kSceneDataTag
    static int _get_kSceneDataTag();
    // Set static field: static public System.Int32 kSceneDataTag
    static void _set_kSceneDataTag(int value);
    // Get static field: static private Unity.Profiling.ProfilerCounterValue`1<System.Int32> CatalogLoadCounter
    static ::Unity::Profiling::ProfilerCounterValue_1<int> _get_CatalogLoadCounter();
    // Set static field: static private Unity.Profiling.ProfilerCounterValue`1<System.Int32> CatalogLoadCounter
    static void _set_CatalogLoadCounter(::Unity::Profiling::ProfilerCounterValue_1<int> value);
    // Get static field: static private Unity.Profiling.ProfilerCounterValue`1<System.Int32> AssetBundleLoadCounter
    static ::Unity::Profiling::ProfilerCounterValue_1<int> _get_AssetBundleLoadCounter();
    // Set static field: static private Unity.Profiling.ProfilerCounterValue`1<System.Int32> AssetBundleLoadCounter
    static void _set_AssetBundleLoadCounter(::Unity::Profiling::ProfilerCounterValue_1<int> value);
    // Get static field: static private Unity.Profiling.ProfilerCounterValue`1<System.Int32> AssetLoadCounter
    static ::Unity::Profiling::ProfilerCounterValue_1<int> _get_AssetLoadCounter();
    // Set static field: static private Unity.Profiling.ProfilerCounterValue`1<System.Int32> AssetLoadCounter
    static void _set_AssetLoadCounter(::Unity::Profiling::ProfilerCounterValue_1<int> value);
    // Get static field: static private Unity.Profiling.ProfilerCounterValue`1<System.Int32> SceneLoadCounter
    static ::Unity::Profiling::ProfilerCounterValue_1<int> _get_SceneLoadCounter();
    // Set static field: static private Unity.Profiling.ProfilerCounterValue`1<System.Int32> SceneLoadCounter
    static void _set_SceneLoadCounter(::Unity::Profiling::ProfilerCounterValue_1<int> value);
    // Get static field: static private UnityEngine.ResourceManagement.Profiling.ProfilerFrameData`2<UnityEngine.Hash128,UnityEngine.ResourceManagement.Profiling.CatalogFrameData> m_CatalogData
    static ::UnityEngine::ResourceManagement::Profiling::ProfilerFrameData_2<::UnityEngine::Hash128, ::UnityEngine::ResourceManagement::Profiling::CatalogFrameData>* _get_m_CatalogData();
    // Set static field: static private UnityEngine.ResourceManagement.Profiling.ProfilerFrameData`2<UnityEngine.Hash128,UnityEngine.ResourceManagement.Profiling.CatalogFrameData> m_CatalogData
    static void _set_m_CatalogData(::UnityEngine::ResourceManagement::Profiling::ProfilerFrameData_2<::UnityEngine::Hash128, ::UnityEngine::ResourceManagement::Profiling::CatalogFrameData>* value);
    // Get static field: static private UnityEngine.ResourceManagement.Profiling.ProfilerFrameData`2<UnityEngine.ResourceManagement.AsyncOperations.IAsyncOperation,UnityEngine.ResourceManagement.Profiling.BundleFrameData> m_BundleData
    static ::UnityEngine::ResourceManagement::Profiling::ProfilerFrameData_2<::UnityEngine::ResourceManagement::AsyncOperations::IAsyncOperation*, ::UnityEngine::ResourceManagement::Profiling::BundleFrameData>* _get_m_BundleData();
    // Set static field: static private UnityEngine.ResourceManagement.Profiling.ProfilerFrameData`2<UnityEngine.ResourceManagement.AsyncOperations.IAsyncOperation,UnityEngine.ResourceManagement.Profiling.BundleFrameData> m_BundleData
    static void _set_m_BundleData(::UnityEngine::ResourceManagement::Profiling::ProfilerFrameData_2<::UnityEngine::ResourceManagement::AsyncOperations::IAsyncOperation*, ::UnityEngine::ResourceManagement::Profiling::BundleFrameData>* value);
    // Get static field: static private UnityEngine.ResourceManagement.Profiling.ProfilerFrameData`2<UnityEngine.ResourceManagement.AsyncOperations.IAsyncOperation,UnityEngine.ResourceManagement.Profiling.AssetFrameData> m_AssetData
    static ::UnityEngine::ResourceManagement::Profiling::ProfilerFrameData_2<::UnityEngine::ResourceManagement::AsyncOperations::IAsyncOperation*, ::UnityEngine::ResourceManagement::Profiling::AssetFrameData>* _get_m_AssetData();
    // Set static field: static private UnityEngine.ResourceManagement.Profiling.ProfilerFrameData`2<UnityEngine.ResourceManagement.AsyncOperations.IAsyncOperation,UnityEngine.ResourceManagement.Profiling.AssetFrameData> m_AssetData
    static void _set_m_AssetData(::UnityEngine::ResourceManagement::Profiling::ProfilerFrameData_2<::UnityEngine::ResourceManagement::AsyncOperations::IAsyncOperation*, ::UnityEngine::ResourceManagement::Profiling::AssetFrameData>* value);
    // Get static field: static private UnityEngine.ResourceManagement.Profiling.ProfilerFrameData`2<UnityEngine.ResourceManagement.AsyncOperations.IAsyncOperation,UnityEngine.ResourceManagement.Profiling.AssetFrameData> m_SceneData
    static ::UnityEngine::ResourceManagement::Profiling::ProfilerFrameData_2<::UnityEngine::ResourceManagement::AsyncOperations::IAsyncOperation*, ::UnityEngine::ResourceManagement::Profiling::AssetFrameData>* _get_m_SceneData();
    // Set static field: static private UnityEngine.ResourceManagement.Profiling.ProfilerFrameData`2<UnityEngine.ResourceManagement.AsyncOperations.IAsyncOperation,UnityEngine.ResourceManagement.Profiling.AssetFrameData> m_SceneData
    static void _set_m_SceneData(::UnityEngine::ResourceManagement::Profiling::ProfilerFrameData_2<::UnityEngine::ResourceManagement::AsyncOperations::IAsyncOperation*, ::UnityEngine::ResourceManagement::Profiling::AssetFrameData>* value);
    // Get static field: static private System.Collections.Generic.Dictionary`2<System.String,UnityEngine.ResourceManagement.AsyncOperations.IAsyncOperation> m_BundleNameToOperation
    static ::System::Collections::Generic::Dictionary_2<::StringW, ::UnityEngine::ResourceManagement::AsyncOperations::IAsyncOperation*>* _get_m_BundleNameToOperation();
    // Set static field: static private System.Collections.Generic.Dictionary`2<System.String,UnityEngine.ResourceManagement.AsyncOperations.IAsyncOperation> m_BundleNameToOperation
    static void _set_m_BundleNameToOperation(::System::Collections::Generic::Dictionary_2<::StringW, ::UnityEngine::ResourceManagement::AsyncOperations::IAsyncOperation*>* value);
    // Get static field: static private System.Collections.Generic.Dictionary`2<System.String,System.Collections.Generic.List`1<UnityEngine.ResourceManagement.AsyncOperations.IAsyncOperation>> m_BundleNameToAssetOperations
    static ::System::Collections::Generic::Dictionary_2<::StringW, ::System::Collections::Generic::List_1<::UnityEngine::ResourceManagement::AsyncOperations::IAsyncOperation*>*>* _get_m_BundleNameToAssetOperations();
    // Set static field: static private System.Collections.Generic.Dictionary`2<System.String,System.Collections.Generic.List`1<UnityEngine.ResourceManagement.AsyncOperations.IAsyncOperation>> m_BundleNameToAssetOperations
    static void _set_m_BundleNameToAssetOperations(::System::Collections::Generic::Dictionary_2<::StringW, ::System::Collections::Generic::List_1<::UnityEngine::ResourceManagement::AsyncOperations::IAsyncOperation*>*>* value);
    // Get static field: static private System.Collections.Generic.Dictionary`2<UnityEngine.ResourceManagement.AsyncOperations.IAsyncOperation,System.ValueTuple`2<System.Int32,System.Single>> m_DataChange
    static ::System::Collections::Generic::Dictionary_2<::UnityEngine::ResourceManagement::AsyncOperations::IAsyncOperation*, ::System::ValueTuple_2<int, float>>* _get_m_DataChange();
    // Set static field: static private System.Collections.Generic.Dictionary`2<UnityEngine.ResourceManagement.AsyncOperations.IAsyncOperation,System.ValueTuple`2<System.Int32,System.Single>> m_DataChange
    static void _set_m_DataChange(::System::Collections::Generic::Dictionary_2<::UnityEngine::ResourceManagement::AsyncOperations::IAsyncOperation*, ::System::ValueTuple_2<int, float>>* value);
    // static public System.Void Initialise()
    // Offset: 0x53254E8
    static void Initialise();
    // static private System.Void InstanceOnOnLateUpdateDelegate(System.Single deltaTime)
    // Offset: 0x533D200
    static void InstanceOnOnLateUpdateDelegate(float deltaTime);
    // static public System.Void AddCatalog(UnityEngine.Hash128 buildHash)
    // Offset: 0x533D2A4
    static void AddCatalog(::UnityEngine::Hash128 buildHash);
    // static public System.Void AddBundleOperation(UnityEngine.ResourceManagement.ResourceProviders.ProvideHandle handle, UnityEngine.ResourceManagement.ResourceProviders.AssetBundleRequestOptions requestOptions, UnityEngine.ResourceManagement.Profiling.ContentStatus status, UnityEngine.ResourceManagement.Util.BundleSource source)
    // Offset: 0x5332EC4
    static void AddBundleOperation(::UnityEngine::ResourceManagement::ResourceProviders::ProvideHandle handle, ::UnityEngine::ResourceManagement::ResourceProviders::AssetBundleRequestOptions* requestOptions, ::UnityEngine::ResourceManagement::Profiling::ContentStatus status, ::UnityEngine::ResourceManagement::Util::BundleSource source);
    // static public System.Void BundleReleased(System.String bundleName)
    // Offset: 0x5332BC8
    static void BundleReleased(::StringW bundleName);
    // static public System.Void AddAssetOperation(UnityEngine.ResourceManagement.ResourceProviders.ProvideHandle handle, UnityEngine.ResourceManagement.Profiling.ContentStatus status)
    // Offset: 0x5337434
    static void AddAssetOperation(::UnityEngine::ResourceManagement::ResourceProviders::ProvideHandle handle, ::UnityEngine::ResourceManagement::Profiling::ContentStatus status);
    // static private System.String GetContainingBundleNameForLocation(UnityEngine.ResourceManagement.ResourceLocations.IResourceLocation location)
    // Offset: 0x533D358
    static ::StringW GetContainingBundleNameForLocation(::UnityEngine::ResourceManagement::ResourceLocations::IResourceLocation* location);
    // static public System.Void AddSceneOperation(UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationHandle`1<UnityEngine.ResourceManagement.ResourceProviders.SceneInstance> handle, UnityEngine.ResourceManagement.ResourceLocations.IResourceLocation location, UnityEngine.ResourceManagement.Profiling.ContentStatus status)
    // Offset: 0x533AE3C
    static void AddSceneOperation(::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<::UnityEngine::ResourceManagement::ResourceProviders::SceneInstance> handle, ::UnityEngine::ResourceManagement::ResourceLocations::IResourceLocation* location, ::UnityEngine::ResourceManagement::Profiling::ContentStatus status);
    // static public System.Void SceneReleased(UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationHandle`1<UnityEngine.ResourceManagement.ResourceProviders.SceneInstance> handle)
    // Offset: 0x533B4B4
    static void SceneReleased(::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<::UnityEngine::ResourceManagement::ResourceProviders::SceneInstance> handle);
    // static private System.Void PushToProfilerStream()
    // Offset: 0x533D24C
    static void PushToProfilerStream();
    // static private System.Void RefreshChangedReferenceCounts()
    // Offset: 0x533D6B4
    static void RefreshChangedReferenceCounts();
    // static private System.Boolean ShouldUpdateFrameDataWithOperationData(UnityEngine.ResourceManagement.AsyncOperations.IAsyncOperation activeOperation, System.Int32 frameReferenceCount, System.Single framePercentComplete, out System.ValueTuple`2<System.Int32,System.Single> newDataOut)
    // Offset: 0x533E1D4
    static bool ShouldUpdateFrameDataWithOperationData(::UnityEngine::ResourceManagement::AsyncOperations::IAsyncOperation* activeOperation, int frameReferenceCount, float framePercentComplete, ByRef<::System::ValueTuple_2<int, float>> newDataOut);
    // static private System.Void .cctor()
    // Offset: 0x533E4DC
    static void _cctor();
  }; // UnityEngine.ResourceManagement.Profiling.ProfilerRuntime
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::ResourceManagement::Profiling::ProfilerRuntime::Initialise
// Il2CppName: Initialise
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&UnityEngine::ResourceManagement::Profiling::ProfilerRuntime::Initialise)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ResourceManagement::Profiling::ProfilerRuntime*), "Initialise", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::ResourceManagement::Profiling::ProfilerRuntime::InstanceOnOnLateUpdateDelegate
// Il2CppName: InstanceOnOnLateUpdateDelegate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(float)>(&UnityEngine::ResourceManagement::Profiling::ProfilerRuntime::InstanceOnOnLateUpdateDelegate)> {
  static const MethodInfo* get() {
    static auto* deltaTime = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ResourceManagement::Profiling::ProfilerRuntime*), "InstanceOnOnLateUpdateDelegate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{deltaTime});
  }
};
// Writing MetadataGetter for method: UnityEngine::ResourceManagement::Profiling::ProfilerRuntime::AddCatalog
// Il2CppName: AddCatalog
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::Hash128)>(&UnityEngine::ResourceManagement::Profiling::ProfilerRuntime::AddCatalog)> {
  static const MethodInfo* get() {
    static auto* buildHash = &::il2cpp_utils::GetClassFromName("UnityEngine", "Hash128")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ResourceManagement::Profiling::ProfilerRuntime*), "AddCatalog", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{buildHash});
  }
};
// Writing MetadataGetter for method: UnityEngine::ResourceManagement::Profiling::ProfilerRuntime::AddBundleOperation
// Il2CppName: AddBundleOperation
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::ResourceManagement::ResourceProviders::ProvideHandle, ::UnityEngine::ResourceManagement::ResourceProviders::AssetBundleRequestOptions*, ::UnityEngine::ResourceManagement::Profiling::ContentStatus, ::UnityEngine::ResourceManagement::Util::BundleSource)>(&UnityEngine::ResourceManagement::Profiling::ProfilerRuntime::AddBundleOperation)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("UnityEngine.ResourceManagement.ResourceProviders", "ProvideHandle")->byval_arg;
    static auto* requestOptions = &::il2cpp_utils::GetClassFromName("UnityEngine.ResourceManagement.ResourceProviders", "AssetBundleRequestOptions")->byval_arg;
    static auto* status = &::il2cpp_utils::GetClassFromName("UnityEngine.ResourceManagement.Profiling", "ContentStatus")->byval_arg;
    static auto* source = &::il2cpp_utils::GetClassFromName("UnityEngine.ResourceManagement.Util", "BundleSource")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ResourceManagement::Profiling::ProfilerRuntime*), "AddBundleOperation", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle, requestOptions, status, source});
  }
};
// Writing MetadataGetter for method: UnityEngine::ResourceManagement::Profiling::ProfilerRuntime::BundleReleased
// Il2CppName: BundleReleased
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::StringW)>(&UnityEngine::ResourceManagement::Profiling::ProfilerRuntime::BundleReleased)> {
  static const MethodInfo* get() {
    static auto* bundleName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ResourceManagement::Profiling::ProfilerRuntime*), "BundleReleased", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{bundleName});
  }
};
// Writing MetadataGetter for method: UnityEngine::ResourceManagement::Profiling::ProfilerRuntime::AddAssetOperation
// Il2CppName: AddAssetOperation
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::ResourceManagement::ResourceProviders::ProvideHandle, ::UnityEngine::ResourceManagement::Profiling::ContentStatus)>(&UnityEngine::ResourceManagement::Profiling::ProfilerRuntime::AddAssetOperation)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("UnityEngine.ResourceManagement.ResourceProviders", "ProvideHandle")->byval_arg;
    static auto* status = &::il2cpp_utils::GetClassFromName("UnityEngine.ResourceManagement.Profiling", "ContentStatus")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ResourceManagement::Profiling::ProfilerRuntime*), "AddAssetOperation", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle, status});
  }
};
// Writing MetadataGetter for method: UnityEngine::ResourceManagement::Profiling::ProfilerRuntime::GetContainingBundleNameForLocation
// Il2CppName: GetContainingBundleNameForLocation
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::UnityEngine::ResourceManagement::ResourceLocations::IResourceLocation*)>(&UnityEngine::ResourceManagement::Profiling::ProfilerRuntime::GetContainingBundleNameForLocation)> {
  static const MethodInfo* get() {
    static auto* location = &::il2cpp_utils::GetClassFromName("UnityEngine.ResourceManagement.ResourceLocations", "IResourceLocation")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ResourceManagement::Profiling::ProfilerRuntime*), "GetContainingBundleNameForLocation", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{location});
  }
};
// Writing MetadataGetter for method: UnityEngine::ResourceManagement::Profiling::ProfilerRuntime::AddSceneOperation
// Il2CppName: AddSceneOperation
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<::UnityEngine::ResourceManagement::ResourceProviders::SceneInstance>, ::UnityEngine::ResourceManagement::ResourceLocations::IResourceLocation*, ::UnityEngine::ResourceManagement::Profiling::ContentStatus)>(&UnityEngine::ResourceManagement::Profiling::ProfilerRuntime::AddSceneOperation)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("UnityEngine.ResourceManagement.AsyncOperations", "AsyncOperationHandle`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.ResourceManagement.ResourceProviders", "SceneInstance")})->byval_arg;
    static auto* location = &::il2cpp_utils::GetClassFromName("UnityEngine.ResourceManagement.ResourceLocations", "IResourceLocation")->byval_arg;
    static auto* status = &::il2cpp_utils::GetClassFromName("UnityEngine.ResourceManagement.Profiling", "ContentStatus")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ResourceManagement::Profiling::ProfilerRuntime*), "AddSceneOperation", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle, location, status});
  }
};
// Writing MetadataGetter for method: UnityEngine::ResourceManagement::Profiling::ProfilerRuntime::SceneReleased
// Il2CppName: SceneReleased
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<::UnityEngine::ResourceManagement::ResourceProviders::SceneInstance>)>(&UnityEngine::ResourceManagement::Profiling::ProfilerRuntime::SceneReleased)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("UnityEngine.ResourceManagement.AsyncOperations", "AsyncOperationHandle`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.ResourceManagement.ResourceProviders", "SceneInstance")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ResourceManagement::Profiling::ProfilerRuntime*), "SceneReleased", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle});
  }
};
// Writing MetadataGetter for method: UnityEngine::ResourceManagement::Profiling::ProfilerRuntime::PushToProfilerStream
// Il2CppName: PushToProfilerStream
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&UnityEngine::ResourceManagement::Profiling::ProfilerRuntime::PushToProfilerStream)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ResourceManagement::Profiling::ProfilerRuntime*), "PushToProfilerStream", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::ResourceManagement::Profiling::ProfilerRuntime::RefreshChangedReferenceCounts
// Il2CppName: RefreshChangedReferenceCounts
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&UnityEngine::ResourceManagement::Profiling::ProfilerRuntime::RefreshChangedReferenceCounts)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ResourceManagement::Profiling::ProfilerRuntime*), "RefreshChangedReferenceCounts", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::ResourceManagement::Profiling::ProfilerRuntime::ShouldUpdateFrameDataWithOperationData
// Il2CppName: ShouldUpdateFrameDataWithOperationData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::UnityEngine::ResourceManagement::AsyncOperations::IAsyncOperation*, int, float, ByRef<::System::ValueTuple_2<int, float>>)>(&UnityEngine::ResourceManagement::Profiling::ProfilerRuntime::ShouldUpdateFrameDataWithOperationData)> {
  static const MethodInfo* get() {
    static auto* activeOperation = &::il2cpp_utils::GetClassFromName("UnityEngine.ResourceManagement.AsyncOperations", "IAsyncOperation")->byval_arg;
    static auto* frameReferenceCount = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* framePercentComplete = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* newDataOut = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "ValueTuple`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Int32"), ::il2cpp_utils::GetClassFromName("System", "Single")})->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ResourceManagement::Profiling::ProfilerRuntime*), "ShouldUpdateFrameDataWithOperationData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{activeOperation, frameReferenceCount, framePercentComplete, newDataOut});
  }
};
// Writing MetadataGetter for method: UnityEngine::ResourceManagement::Profiling::ProfilerRuntime::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&UnityEngine::ResourceManagement::Profiling::ProfilerRuntime::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ResourceManagement::Profiling::ProfilerRuntime*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
