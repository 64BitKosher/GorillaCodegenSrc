// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.ResourceManagement.AsyncOperations.IAsyncOperation
#include "UnityEngine/ResourceManagement/AsyncOperations/IAsyncOperation.hpp"
// Including type: UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationStatus
#include "UnityEngine/ResourceManagement/AsyncOperations/AsyncOperationStatus.hpp"
// Including type: UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationHandle`1
#include "UnityEngine/ResourceManagement/AsyncOperations/AsyncOperationHandle_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::ResourceManagement::AsyncOperations
namespace UnityEngine::ResourceManagement::AsyncOperations {
  // Skipping declaration: <>c__DisplayClass60_0 because it is already included!
  // Skipping declaration: <>c__DisplayClass61_0 because it is already included!
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Exception
  class Exception;
  // Forward declaring type: Action`1<T>
  template<typename T>
  class Action_1;
  // Forward declaring type: Action
  class Action;
  // Forward declaring type: Type
  class Type;
}
// Forward declaring namespace: UnityEngine::ResourceManagement
namespace UnityEngine::ResourceManagement {
  // Forward declaring type: ResourceManager
  class ResourceManager;
}
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: DelegateList`1<T>
  template<typename T>
  class DelegateList_1;
}
// Forward declaring namespace: System::Threading::Tasks
namespace System::Threading::Tasks {
  // Forward declaring type: TaskCompletionSource`1<TResult>
  template<typename TResult>
  class TaskCompletionSource_1;
  // Forward declaring type: Task`1<TResult>
  template<typename TResult>
  class Task_1;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
  // Forward declaring type: HashSet`1<T>
  template<typename T>
  class HashSet_1;
}
// Completed forward declares
// Type namespace: UnityEngine.ResourceManagement.AsyncOperations
namespace UnityEngine::ResourceManagement::AsyncOperations {
  // Forward declaring type: AsyncOperationBase`1<TObject>
  template<typename TObject>
  class AsyncOperationBase_1;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE_GENERIC_CLASS(::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1, "UnityEngine.ResourceManagement.AsyncOperations", "AsyncOperationBase`1");
// Type namespace: UnityEngine.ResourceManagement.AsyncOperations
namespace UnityEngine::ResourceManagement::AsyncOperations {
  // WARNING Size may be invalid!
  // Autogenerated type: UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationBase`1
  // [TokenAttribute] Offset: FFFFFFFF
  template<typename TObject>
  class AsyncOperationBase_1 : public ::Il2CppObject/*, public ::UnityEngine::ResourceManagement::AsyncOperations::IAsyncOperation*/ {
    public:
    // Nested type: ::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1::$$c__DisplayClass60_0<TObject>
    class $$c__DisplayClass60_0;
    // Nested type: ::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1::$$c__DisplayClass61_0<TObject>
    class $$c__DisplayClass61_0;
    // WARNING Size may be invalid!
    // Autogenerated type: UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationBase`1/<>c__DisplayClass60_0
    // [TokenAttribute] Offset: FFFFFFFF
    // [CompilerGeneratedAttribute] Offset: FFFFFFFF
    class $$c__DisplayClass60_0 : public ::il2cpp_utils::il2cpp_type_check::NestedType, public ::Il2CppObject {
      public:
      using declaring_type = AsyncOperationBase_1<TObject>*;
      static constexpr std::string_view NESTED_NAME = "<>c__DisplayClass60_0";
      static constexpr bool IS_VALUE_TYPE = false;
      public:
      // public System.Action`1<UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationHandle> value
      // Size: 0x8
      // Offset: 0x0
      ::System::Action_1<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle>* value;
      // Field size check
      static_assert(sizeof(::System::Action_1<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle>*) == 0x8);
      public:
      // Creating conversion operator: operator ::System::Action_1<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle>*
      constexpr operator ::System::Action_1<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle>*() const noexcept {
        return value;
      }
      // Autogenerated instance field getter
      // Get instance field: public System.Action`1<UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationHandle> value
      [[deprecated("Use field access instead!")]] ::System::Action_1<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle>*& dyn_value() {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1::$$c__DisplayClass60_0::dyn_value");
        auto ___internal__instance = this;
        static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value"))->offset;
        return *reinterpret_cast<::System::Action_1<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
      }
      // public System.Void .ctor()
      // Offset: 0xFFFFFFFFFFFFFFFF
      template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
      static typename AsyncOperationBase_1<TObject>::$$c__DisplayClass60_0* New_ctor() {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1::$$c__DisplayClass60_0::.ctor");
        return THROW_UNLESS((::il2cpp_utils::New<typename AsyncOperationBase_1<TObject>::$$c__DisplayClass60_0*, creationType>()));
      }
      // System.Void <add_CompletedTypeless>b__0(UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationHandle`1<TObject> s)
      // Offset: 0xFFFFFFFFFFFFFFFF
      void $add_CompletedTypeless$b__0(::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<TObject> s) {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1::$$c__DisplayClass60_0::<add_CompletedTypeless>b__0");
        static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<add_CompletedTypeless>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
        ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, s);
      }
    }; // UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationBase`1/<>c__DisplayClass60_0
    // Could not write size check! Type: UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationBase`1/<>c__DisplayClass60_0 is generic, or has no fields that are valid for size checks!
    // WARNING Size may be invalid!
    // Autogenerated type: UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationBase`1/<>c__DisplayClass61_0
    // [TokenAttribute] Offset: FFFFFFFF
    // [CompilerGeneratedAttribute] Offset: FFFFFFFF
    class $$c__DisplayClass61_0 : public ::il2cpp_utils::il2cpp_type_check::NestedType, public ::Il2CppObject {
      public:
      using declaring_type = AsyncOperationBase_1<TObject>*;
      static constexpr std::string_view NESTED_NAME = "<>c__DisplayClass61_0";
      static constexpr bool IS_VALUE_TYPE = false;
      public:
      // public System.Action`1<UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationHandle> value
      // Size: 0x8
      // Offset: 0x0
      ::System::Action_1<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle>* value;
      // Field size check
      static_assert(sizeof(::System::Action_1<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle>*) == 0x8);
      public:
      // Creating conversion operator: operator ::System::Action_1<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle>*
      constexpr operator ::System::Action_1<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle>*() const noexcept {
        return value;
      }
      // Autogenerated instance field getter
      // Get instance field: public System.Action`1<UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationHandle> value
      [[deprecated("Use field access instead!")]] ::System::Action_1<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle>*& dyn_value() {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1::$$c__DisplayClass61_0::dyn_value");
        auto ___internal__instance = this;
        static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value"))->offset;
        return *reinterpret_cast<::System::Action_1<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
      }
      // public System.Void .ctor()
      // Offset: 0xFFFFFFFFFFFFFFFF
      template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
      static typename AsyncOperationBase_1<TObject>::$$c__DisplayClass61_0* New_ctor() {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1::$$c__DisplayClass61_0::.ctor");
        return THROW_UNLESS((::il2cpp_utils::New<typename AsyncOperationBase_1<TObject>::$$c__DisplayClass61_0*, creationType>()));
      }
      // System.Void <remove_CompletedTypeless>b__0(UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationHandle`1<TObject> s)
      // Offset: 0xFFFFFFFFFFFFFFFF
      void $remove_CompletedTypeless$b__0(::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<TObject> s) {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1::$$c__DisplayClass61_0::<remove_CompletedTypeless>b__0");
        static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<remove_CompletedTypeless>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
        ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, s);
      }
    }; // UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationBase`1/<>c__DisplayClass61_0
    // Could not write size check! Type: UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationBase`1/<>c__DisplayClass61_0 is generic, or has no fields that are valid for size checks!
    public:
    // private TObject <Result>k__BackingField
    // Size: 0xFFFFFFFF
    // Offset: 0x0
    TObject Result;
    // private System.Int32 m_referenceCount
    // Size: 0x4
    // Offset: 0x0
    int m_referenceCount;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationStatus m_Status
    // Size: 0x4
    // Offset: 0x0
    ::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationStatus m_Status;
    // Field size check
    static_assert(sizeof(::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationStatus) == 0x4);
    // System.Exception m_Error
    // Size: 0x8
    // Offset: 0x0
    ::System::Exception* m_Error;
    // Field size check
    static_assert(sizeof(::System::Exception*) == 0x8);
    // UnityEngine.ResourceManagement.ResourceManager m_RM
    // Size: 0x8
    // Offset: 0x0
    ::UnityEngine::ResourceManagement::ResourceManager* m_RM;
    // Field size check
    static_assert(sizeof(::UnityEngine::ResourceManagement::ResourceManager*) == 0x8);
    // System.Int32 m_Version
    // Size: 0x4
    // Offset: 0x0
    int m_Version;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private DelegateList`1<UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationHandle> m_DestroyedAction
    // Size: 0x8
    // Offset: 0x0
    ::GlobalNamespace::DelegateList_1<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle>* m_DestroyedAction;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::DelegateList_1<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle>*) == 0x8);
    // private DelegateList`1<UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationHandle`1<TObject>> m_CompletedActionT
    // Size: 0x8
    // Offset: 0x0
    ::GlobalNamespace::DelegateList_1<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<TObject>>* m_CompletedActionT;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::DelegateList_1<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<TObject>>*) == 0x8);
    // private System.Action`1<UnityEngine.ResourceManagement.AsyncOperations.IAsyncOperation> m_OnDestroyAction
    // Size: 0x8
    // Offset: 0x0
    ::System::Action_1<::UnityEngine::ResourceManagement::AsyncOperations::IAsyncOperation*>* m_OnDestroyAction;
    // Field size check
    static_assert(sizeof(::System::Action_1<::UnityEngine::ResourceManagement::AsyncOperations::IAsyncOperation*>*) == 0x8);
    // private System.Action`1<UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationHandle> m_dependencyCompleteAction
    // Size: 0x8
    // Offset: 0x0
    ::System::Action_1<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle>* m_dependencyCompleteAction;
    // Field size check
    static_assert(sizeof(::System::Action_1<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle>*) == 0x8);
    // protected internal System.Boolean HasExecuted
    // Size: 0x1
    // Offset: 0x0
    bool HasExecuted;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Action Executed
    // Size: 0x8
    // Offset: 0x0
    ::System::Action* Executed;
    // Field size check
    static_assert(sizeof(::System::Action*) == 0x8);
    // private System.Boolean <IsRunning>k__BackingField
    // Size: 0x1
    // Offset: 0x0
    bool IsRunning;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Threading.Tasks.TaskCompletionSource`1<TObject> m_taskCompletionSource
    // Size: 0x8
    // Offset: 0x0
    ::System::Threading::Tasks::TaskCompletionSource_1<TObject>* m_taskCompletionSource;
    // Field size check
    static_assert(sizeof(::System::Threading::Tasks::TaskCompletionSource_1<TObject>*) == 0x8);
    // private System.Threading.Tasks.TaskCompletionSource`1<System.Object> m_taskCompletionSourceTypeless
    // Size: 0x8
    // Offset: 0x0
    ::System::Threading::Tasks::TaskCompletionSource_1<::Il2CppObject*>* m_taskCompletionSourceTypeless;
    // Field size check
    static_assert(sizeof(::System::Threading::Tasks::TaskCompletionSource_1<::Il2CppObject*>*) == 0x8);
    // private System.Boolean m_InDeferredCallbackQueue
    // Size: 0x1
    // Offset: 0x0
    bool m_InDeferredCallbackQueue;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private DelegateList`1<System.Single> m_UpdateCallbacks
    // Size: 0x8
    // Offset: 0x0
    ::GlobalNamespace::DelegateList_1<float>* m_UpdateCallbacks;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::DelegateList_1<float>*) == 0x8);
    // private System.Action`1<System.Single> m_UpdateCallback
    // Size: 0x8
    // Offset: 0x0
    ::System::Action_1<float>* m_UpdateCallback;
    // Field size check
    static_assert(sizeof(::System::Action_1<float>*) == 0x8);
    public:
    // Creating interface conversion operator: operator ::UnityEngine::ResourceManagement::AsyncOperations::IAsyncOperation
    operator ::UnityEngine::ResourceManagement::AsyncOperations::IAsyncOperation() noexcept {
      return *reinterpret_cast<::UnityEngine::ResourceManagement::AsyncOperations::IAsyncOperation*>(this);
    }
    // Autogenerated instance field getter
    // Get instance field: private TObject <Result>k__BackingField
    [[deprecated("Use field access instead!")]] TObject& dyn_$Result$k__BackingField() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1::dyn_$Result$k__BackingField");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Result>k__BackingField"))->offset;
      return *reinterpret_cast<TObject*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: private System.Int32 m_referenceCount
    [[deprecated("Use field access instead!")]] int& dyn_m_referenceCount() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1::dyn_m_referenceCount");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_referenceCount"))->offset;
      return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationStatus m_Status
    [[deprecated("Use field access instead!")]] ::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationStatus& dyn_m_Status() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1::dyn_m_Status");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Status"))->offset;
      return *reinterpret_cast<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationStatus*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: System.Exception m_Error
    [[deprecated("Use field access instead!")]] ::System::Exception*& dyn_m_Error() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1::dyn_m_Error");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Error"))->offset;
      return *reinterpret_cast<::System::Exception**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: UnityEngine.ResourceManagement.ResourceManager m_RM
    [[deprecated("Use field access instead!")]] ::UnityEngine::ResourceManagement::ResourceManager*& dyn_m_RM() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1::dyn_m_RM");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_RM"))->offset;
      return *reinterpret_cast<::UnityEngine::ResourceManagement::ResourceManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: System.Int32 m_Version
    [[deprecated("Use field access instead!")]] int& dyn_m_Version() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1::dyn_m_Version");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Version"))->offset;
      return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: private DelegateList`1<UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationHandle> m_DestroyedAction
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::DelegateList_1<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle>*& dyn_m_DestroyedAction() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1::dyn_m_DestroyedAction");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_DestroyedAction"))->offset;
      return *reinterpret_cast<::GlobalNamespace::DelegateList_1<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: private DelegateList`1<UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationHandle`1<TObject>> m_CompletedActionT
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::DelegateList_1<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<TObject>>*& dyn_m_CompletedActionT() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1::dyn_m_CompletedActionT");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_CompletedActionT"))->offset;
      return *reinterpret_cast<::GlobalNamespace::DelegateList_1<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<TObject>>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: private System.Action`1<UnityEngine.ResourceManagement.AsyncOperations.IAsyncOperation> m_OnDestroyAction
    [[deprecated("Use field access instead!")]] ::System::Action_1<::UnityEngine::ResourceManagement::AsyncOperations::IAsyncOperation*>*& dyn_m_OnDestroyAction() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1::dyn_m_OnDestroyAction");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_OnDestroyAction"))->offset;
      return *reinterpret_cast<::System::Action_1<::UnityEngine::ResourceManagement::AsyncOperations::IAsyncOperation*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: private System.Action`1<UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationHandle> m_dependencyCompleteAction
    [[deprecated("Use field access instead!")]] ::System::Action_1<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle>*& dyn_m_dependencyCompleteAction() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1::dyn_m_dependencyCompleteAction");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_dependencyCompleteAction"))->offset;
      return *reinterpret_cast<::System::Action_1<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: protected internal System.Boolean HasExecuted
    [[deprecated("Use field access instead!")]] bool& dyn_HasExecuted() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1::dyn_HasExecuted");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "HasExecuted"))->offset;
      return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: private System.Action Executed
    [[deprecated("Use field access instead!")]] ::System::Action*& dyn_Executed() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1::dyn_Executed");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Executed"))->offset;
      return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: private System.Boolean <IsRunning>k__BackingField
    [[deprecated("Use field access instead!")]] bool& dyn_$IsRunning$k__BackingField() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1::dyn_$IsRunning$k__BackingField");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<IsRunning>k__BackingField"))->offset;
      return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: private System.Threading.Tasks.TaskCompletionSource`1<TObject> m_taskCompletionSource
    [[deprecated("Use field access instead!")]] ::System::Threading::Tasks::TaskCompletionSource_1<TObject>*& dyn_m_taskCompletionSource() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1::dyn_m_taskCompletionSource");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_taskCompletionSource"))->offset;
      return *reinterpret_cast<::System::Threading::Tasks::TaskCompletionSource_1<TObject>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: private System.Threading.Tasks.TaskCompletionSource`1<System.Object> m_taskCompletionSourceTypeless
    [[deprecated("Use field access instead!")]] ::System::Threading::Tasks::TaskCompletionSource_1<::Il2CppObject*>*& dyn_m_taskCompletionSourceTypeless() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1::dyn_m_taskCompletionSourceTypeless");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_taskCompletionSourceTypeless"))->offset;
      return *reinterpret_cast<::System::Threading::Tasks::TaskCompletionSource_1<::Il2CppObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: private System.Boolean m_InDeferredCallbackQueue
    [[deprecated("Use field access instead!")]] bool& dyn_m_InDeferredCallbackQueue() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1::dyn_m_InDeferredCallbackQueue");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_InDeferredCallbackQueue"))->offset;
      return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: private DelegateList`1<System.Single> m_UpdateCallbacks
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::DelegateList_1<float>*& dyn_m_UpdateCallbacks() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1::dyn_m_UpdateCallbacks");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_UpdateCallbacks"))->offset;
      return *reinterpret_cast<::GlobalNamespace::DelegateList_1<float>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: private System.Action`1<System.Single> m_UpdateCallback
    [[deprecated("Use field access instead!")]] ::System::Action_1<float>*& dyn_m_UpdateCallback() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1::dyn_m_UpdateCallback");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_UpdateCallback"))->offset;
      return *reinterpret_cast<::System::Action_1<float>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // protected System.Void Execute()
    // Offset: 0xFFFFFFFFFFFFFFFF
    void Execute() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1::Execute");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1<TObject>*), -1));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
    }
    // protected System.Void Destroy()
    // Offset: 0xFFFFFFFFFFFFFFFF
    void Destroy() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1::Destroy");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1<TObject>*), -1));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
    }
    // protected System.Single get_Progress()
    // Offset: 0xFFFFFFFFFFFFFFFF
    float get_Progress() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1::get_Progress");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1<TObject>*), -1));
      return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
    }
    // protected System.String get_DebugName()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::StringW get_DebugName() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1::get_DebugName");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1<TObject>*), -1));
      return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
    }
    // public System.Void GetDependencies(System.Collections.Generic.List`1<UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationHandle> dependencies)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void GetDependencies(::System::Collections::Generic::List_1<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle>* dependencies) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1::GetDependencies");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1<TObject>*), -1));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, dependencies);
    }
    // public TObject get_Result()
    // Offset: 0xFFFFFFFFFFFFFFFF
    TObject get_Result() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1::get_Result");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Result", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      return ::il2cpp_utils::RunMethodRethrow<TObject, false>(this, ___internal__method);
    }
    // public System.Void set_Result(TObject value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void set_Result(TObject value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1::set_Result");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Result", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
    }
    // System.Int32 get_Version()
    // Offset: 0xFFFFFFFFFFFFFFFF
    int get_Version() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1::get_Version");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Version", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
    }
    // System.Boolean get_CompletedEventHasListeners()
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool get_CompletedEventHasListeners() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1::get_CompletedEventHasListeners");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CompletedEventHasListeners", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
    }
    // System.Boolean get_DestroyedEventHasListeners()
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool get_DestroyedEventHasListeners() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1::get_DestroyedEventHasListeners");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DestroyedEventHasListeners", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
    }
    // System.Void set_OnDestroy(System.Action`1<UnityEngine.ResourceManagement.AsyncOperations.IAsyncOperation> value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void set_OnDestroy(::System::Action_1<::UnityEngine::ResourceManagement::AsyncOperations::IAsyncOperation*>* value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1::set_OnDestroy");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
    }
    // System.Void add_Executed(System.Action value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void add_Executed(::System::Action* value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1::add_Executed");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_Executed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
    }
    // System.Void remove_Executed(System.Action value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void remove_Executed(::System::Action* value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1::remove_Executed");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_Executed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
    }
    // protected internal System.Int32 get_ReferenceCount()
    // Offset: 0xFFFFFFFFFFFFFFFF
    int get_ReferenceCount() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1::get_ReferenceCount");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ReferenceCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
    }
    // public System.Boolean get_IsRunning()
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool get_IsRunning() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1::get_IsRunning");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1<TObject>*), -1));
      return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
    }
    // System.Void set_IsRunning(System.Boolean value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void set_IsRunning(bool value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1::set_IsRunning");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IsRunning", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
    }
    // protected System.Void .ctor()
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static AsyncOperationBase_1<TObject>* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<AsyncOperationBase_1<TObject>*, creationType>()));
    }
    // static System.String ShortenPath(System.String p, System.Boolean keepExtension)
    // Offset: 0xFFFFFFFFFFFFFFFF
    static ::StringW ShortenPath(::StringW p, bool keepExtension) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1::ShortenPath");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<AsyncOperationBase_1<TObject>*>::get(), "ShortenPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p), ::il2cpp_utils::ExtractType(keepExtension)})));
      return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, p, keepExtension);
    }
    // public System.Void WaitForCompletion()
    // Offset: 0xFFFFFFFFFFFFFFFF
    void WaitForCompletion() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1::WaitForCompletion");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1<TObject>*), -1));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
    }
    // protected System.Boolean InvokeWaitForCompletion()
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool InvokeWaitForCompletion() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1::InvokeWaitForCompletion");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1<TObject>*), -1));
      return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
    }
    // protected internal System.Void IncrementReferenceCount()
    // Offset: 0xFFFFFFFFFFFFFFFF
    void IncrementReferenceCount() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1::IncrementReferenceCount");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IncrementReferenceCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
    }
    // protected internal System.Void DecrementReferenceCount()
    // Offset: 0xFFFFFFFFFFFFFFFF
    void DecrementReferenceCount() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1::DecrementReferenceCount");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DecrementReferenceCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
    }
    // System.Threading.Tasks.Task`1<TObject> get_Task()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::System::Threading::Tasks::Task_1<TObject>* get_Task() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1::get_Task");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Task", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<TObject>*, false>(this, ___internal__method);
    }
    // private System.Threading.Tasks.Task`1<System.Object> UnityEngine.ResourceManagement.AsyncOperations.IAsyncOperation.get_Task()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::System::Threading::Tasks::Task_1<::Il2CppObject*>* UnityEngine_ResourceManagement_AsyncOperations_IAsyncOperation_get_Task() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1::UnityEngine.ResourceManagement.AsyncOperations.IAsyncOperation.get_Task");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1<TObject>*), -1));
      return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::Il2CppObject*>*, false>(this, ___internal__method);
    }
    // private System.Void RegisterForDeferredCallbackEvent(System.Boolean incrementReferenceCount)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void RegisterForDeferredCallbackEvent(bool incrementReferenceCount) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1::RegisterForDeferredCallbackEvent");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RegisterForDeferredCallbackEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(incrementReferenceCount)})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, incrementReferenceCount);
    }
    // System.Void add_Completed(System.Action`1<UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationHandle`1<TObject>> value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void add_Completed(::System::Action_1<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<TObject>>* value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1::add_Completed");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_Completed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
    }
    // System.Void remove_Completed(System.Action`1<UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationHandle`1<TObject>> value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void remove_Completed(::System::Action_1<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<TObject>>* value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1::remove_Completed");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_Completed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
    }
    // System.Void add_Destroyed(System.Action`1<UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationHandle> value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void add_Destroyed(::System::Action_1<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle>* value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1::add_Destroyed");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_Destroyed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
    }
    // System.Void remove_Destroyed(System.Action`1<UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationHandle> value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void remove_Destroyed(::System::Action_1<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle>* value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1::remove_Destroyed");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_Destroyed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
    }
    // System.Void add_CompletedTypeless(System.Action`1<UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationHandle> value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void add_CompletedTypeless(::System::Action_1<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle>* value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1::add_CompletedTypeless");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_CompletedTypeless", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
    }
    // System.Void remove_CompletedTypeless(System.Action`1<UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationHandle> value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void remove_CompletedTypeless(::System::Action_1<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle>* value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1::remove_CompletedTypeless");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_CompletedTypeless", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
    }
    // UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationStatus get_Status()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationStatus get_Status() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1::get_Status");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Status", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationStatus, false>(this, ___internal__method);
    }
    // System.Exception get_OperationException()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::System::Exception* get_OperationException() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1::get_OperationException");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_OperationException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method);
    }
    // private System.Void set_OperationException(System.Exception value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void set_OperationException(::System::Exception* value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1::set_OperationException");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_OperationException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
    }
    // System.Boolean MoveNext()
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool MoveNext() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1::MoveNext");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
    }
    // System.Void Reset()
    // Offset: 0xFFFFFFFFFFFFFFFF
    void Reset() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1::Reset");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
    }
    // System.Object get_Current()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::Il2CppObject* get_Current() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1::get_Current");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
    }
    // System.Boolean get_IsDone()
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool get_IsDone() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1::get_IsDone");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsDone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
    }
    // System.Single get_PercentComplete()
    // Offset: 0xFFFFFFFFFFFFFFFF
    float get_PercentComplete() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1::get_PercentComplete");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PercentComplete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
    }
    // System.Void InvokeCompletionEvent()
    // Offset: 0xFFFFFFFFFFFFFFFF
    void InvokeCompletionEvent() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1::InvokeCompletionEvent");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokeCompletionEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
    }
    // UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationHandle`1<TObject> get_Handle()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<TObject> get_Handle() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1::get_Handle");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Handle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<TObject>, false>(this, ___internal__method);
    }
    // private System.Void UpdateCallback(System.Single unscaledDeltaTime)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void UpdateCallback(float unscaledDeltaTime) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1::UpdateCallback");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(unscaledDeltaTime)})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, unscaledDeltaTime);
    }
    // public System.Void Complete(TObject result, System.Boolean success, System.String errorMsg)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void Complete(TObject result, bool success, ::StringW errorMsg) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1::Complete");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Complete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result), ::il2cpp_utils::ExtractType(success), ::il2cpp_utils::ExtractType(errorMsg)})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result, success, errorMsg);
    }
    // public System.Void Complete(TObject result, System.Boolean success, System.String errorMsg, System.Boolean releaseDependenciesOnFailure)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void Complete(TObject result, bool success, ::StringW errorMsg, bool releaseDependenciesOnFailure) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1::Complete");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Complete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result), ::il2cpp_utils::ExtractType(success), ::il2cpp_utils::ExtractType(errorMsg), ::il2cpp_utils::ExtractType(releaseDependenciesOnFailure)})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result, success, errorMsg, releaseDependenciesOnFailure);
    }
    // public System.Void Complete(TObject result, System.Boolean success, System.Exception exception, System.Boolean releaseDependenciesOnFailure)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void Complete(TObject result, bool success, ::System::Exception* exception, bool releaseDependenciesOnFailure) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1::Complete");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Complete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result), ::il2cpp_utils::ExtractType(success), ::il2cpp_utils::ExtractType(exception), ::il2cpp_utils::ExtractType(releaseDependenciesOnFailure)})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result, success, exception, releaseDependenciesOnFailure);
    }
    // System.Void Start(UnityEngine.ResourceManagement.ResourceManager rm, UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationHandle dependency, DelegateList`1<System.Single> updateCallbacks)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void Start(::UnityEngine::ResourceManagement::ResourceManager* rm, ::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle dependency, ::GlobalNamespace::DelegateList_1<float>* updateCallbacks) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1::Start");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rm), ::il2cpp_utils::ExtractType(dependency), ::il2cpp_utils::ExtractType(updateCallbacks)})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, rm, dependency, updateCallbacks);
    }
    // System.Void InvokeExecute()
    // Offset: 0xFFFFFFFFFFFFFFFF
    void InvokeExecute() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1::InvokeExecute");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokeExecute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
    }
    // private System.Void UnityEngine.ResourceManagement.AsyncOperations.IAsyncOperation.add_CompletedTypeless(System.Action`1<UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationHandle> value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void UnityEngine_ResourceManagement_AsyncOperations_IAsyncOperation_add_CompletedTypeless(::System::Action_1<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle>* value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1::UnityEngine.ResourceManagement.AsyncOperations.IAsyncOperation.add_CompletedTypeless");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1<TObject>*), -1));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
    }
    // private System.Void UnityEngine.ResourceManagement.AsyncOperations.IAsyncOperation.remove_CompletedTypeless(System.Action`1<UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationHandle> value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void UnityEngine_ResourceManagement_AsyncOperations_IAsyncOperation_remove_CompletedTypeless(::System::Action_1<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle>* value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1::UnityEngine.ResourceManagement.AsyncOperations.IAsyncOperation.remove_CompletedTypeless");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1<TObject>*), -1));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
    }
    // private System.Void UnityEngine.ResourceManagement.AsyncOperations.IAsyncOperation.add_Destroyed(System.Action`1<UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationHandle> value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void UnityEngine_ResourceManagement_AsyncOperations_IAsyncOperation_add_Destroyed(::System::Action_1<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle>* value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1::UnityEngine.ResourceManagement.AsyncOperations.IAsyncOperation.add_Destroyed");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1<TObject>*), -1));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
    }
    // private System.Void UnityEngine.ResourceManagement.AsyncOperations.IAsyncOperation.remove_Destroyed(System.Action`1<UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationHandle> value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void UnityEngine_ResourceManagement_AsyncOperations_IAsyncOperation_remove_Destroyed(::System::Action_1<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle>* value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1::UnityEngine.ResourceManagement.AsyncOperations.IAsyncOperation.remove_Destroyed");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1<TObject>*), -1));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
    }
    // private System.Int32 UnityEngine.ResourceManagement.AsyncOperations.IAsyncOperation.get_Version()
    // Offset: 0xFFFFFFFFFFFFFFFF
    int UnityEngine_ResourceManagement_AsyncOperations_IAsyncOperation_get_Version() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1::UnityEngine.ResourceManagement.AsyncOperations.IAsyncOperation.get_Version");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1<TObject>*), -1));
      return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
    }
    // private System.Int32 UnityEngine.ResourceManagement.AsyncOperations.IAsyncOperation.get_ReferenceCount()
    // Offset: 0xFFFFFFFFFFFFFFFF
    int UnityEngine_ResourceManagement_AsyncOperations_IAsyncOperation_get_ReferenceCount() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1::UnityEngine.ResourceManagement.AsyncOperations.IAsyncOperation.get_ReferenceCount");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1<TObject>*), -1));
      return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
    }
    // private System.Single UnityEngine.ResourceManagement.AsyncOperations.IAsyncOperation.get_PercentComplete()
    // Offset: 0xFFFFFFFFFFFFFFFF
    float UnityEngine_ResourceManagement_AsyncOperations_IAsyncOperation_get_PercentComplete() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1::UnityEngine.ResourceManagement.AsyncOperations.IAsyncOperation.get_PercentComplete");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1<TObject>*), -1));
      return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
    }
    // private UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationStatus UnityEngine.ResourceManagement.AsyncOperations.IAsyncOperation.get_Status()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationStatus UnityEngine_ResourceManagement_AsyncOperations_IAsyncOperation_get_Status() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1::UnityEngine.ResourceManagement.AsyncOperations.IAsyncOperation.get_Status");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1<TObject>*), -1));
      return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationStatus, false>(this, ___internal__method);
    }
    // private System.Exception UnityEngine.ResourceManagement.AsyncOperations.IAsyncOperation.get_OperationException()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::System::Exception* UnityEngine_ResourceManagement_AsyncOperations_IAsyncOperation_get_OperationException() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1::UnityEngine.ResourceManagement.AsyncOperations.IAsyncOperation.get_OperationException");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1<TObject>*), -1));
      return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method);
    }
    // private System.Boolean UnityEngine.ResourceManagement.AsyncOperations.IAsyncOperation.get_IsDone()
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool UnityEngine_ResourceManagement_AsyncOperations_IAsyncOperation_get_IsDone() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1::UnityEngine.ResourceManagement.AsyncOperations.IAsyncOperation.get_IsDone");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1<TObject>*), -1));
      return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
    }
    // private UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationHandle UnityEngine.ResourceManagement.AsyncOperations.IAsyncOperation.get_Handle()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle UnityEngine_ResourceManagement_AsyncOperations_IAsyncOperation_get_Handle() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1::UnityEngine.ResourceManagement.AsyncOperations.IAsyncOperation.get_Handle");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1<TObject>*), -1));
      return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle, false>(this, ___internal__method);
    }
    // private System.Void UnityEngine.ResourceManagement.AsyncOperations.IAsyncOperation.set_OnDestroy(System.Action`1<UnityEngine.ResourceManagement.AsyncOperations.IAsyncOperation> value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void UnityEngine_ResourceManagement_AsyncOperations_IAsyncOperation_set_OnDestroy(::System::Action_1<::UnityEngine::ResourceManagement::AsyncOperations::IAsyncOperation*>* value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1::UnityEngine.ResourceManagement.AsyncOperations.IAsyncOperation.set_OnDestroy");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1<TObject>*), -1));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
    }
    // private System.String UnityEngine.ResourceManagement.AsyncOperations.IAsyncOperation.get_DebugName()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::StringW UnityEngine_ResourceManagement_AsyncOperations_IAsyncOperation_get_DebugName() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1::UnityEngine.ResourceManagement.AsyncOperations.IAsyncOperation.get_DebugName");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1<TObject>*), -1));
      return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
    }
    // private System.Object UnityEngine.ResourceManagement.AsyncOperations.IAsyncOperation.GetResultAsObject()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::Il2CppObject* UnityEngine_ResourceManagement_AsyncOperations_IAsyncOperation_GetResultAsObject() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1::UnityEngine.ResourceManagement.AsyncOperations.IAsyncOperation.GetResultAsObject");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1<TObject>*), -1));
      return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
    }
    // private System.Type UnityEngine.ResourceManagement.AsyncOperations.IAsyncOperation.get_ResultType()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::System::Type* UnityEngine_ResourceManagement_AsyncOperations_IAsyncOperation_get_ResultType() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1::UnityEngine.ResourceManagement.AsyncOperations.IAsyncOperation.get_ResultType");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1<TObject>*), -1));
      return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
    }
    // private System.Void UnityEngine.ResourceManagement.AsyncOperations.IAsyncOperation.GetDependencies(System.Collections.Generic.List`1<UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationHandle> deps)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void UnityEngine_ResourceManagement_AsyncOperations_IAsyncOperation_GetDependencies(::System::Collections::Generic::List_1<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle>* deps) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1::UnityEngine.ResourceManagement.AsyncOperations.IAsyncOperation.GetDependencies");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1<TObject>*), -1));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, deps);
    }
    // private System.Void UnityEngine.ResourceManagement.AsyncOperations.IAsyncOperation.DecrementReferenceCount()
    // Offset: 0xFFFFFFFFFFFFFFFF
    void UnityEngine_ResourceManagement_AsyncOperations_IAsyncOperation_DecrementReferenceCount() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1::UnityEngine.ResourceManagement.AsyncOperations.IAsyncOperation.DecrementReferenceCount");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1<TObject>*), -1));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
    }
    // private System.Void UnityEngine.ResourceManagement.AsyncOperations.IAsyncOperation.IncrementReferenceCount()
    // Offset: 0xFFFFFFFFFFFFFFFF
    void UnityEngine_ResourceManagement_AsyncOperations_IAsyncOperation_IncrementReferenceCount() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1::UnityEngine.ResourceManagement.AsyncOperations.IAsyncOperation.IncrementReferenceCount");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1<TObject>*), -1));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
    }
    // private System.Void UnityEngine.ResourceManagement.AsyncOperations.IAsyncOperation.InvokeCompletionEvent()
    // Offset: 0xFFFFFFFFFFFFFFFF
    void UnityEngine_ResourceManagement_AsyncOperations_IAsyncOperation_InvokeCompletionEvent() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1::UnityEngine.ResourceManagement.AsyncOperations.IAsyncOperation.InvokeCompletionEvent");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1<TObject>*), -1));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
    }
    // private System.Void UnityEngine.ResourceManagement.AsyncOperations.IAsyncOperation.Start(UnityEngine.ResourceManagement.ResourceManager rm, UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationHandle dependency, DelegateList`1<System.Single> updateCallbacks)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void UnityEngine_ResourceManagement_AsyncOperations_IAsyncOperation_Start(::UnityEngine::ResourceManagement::ResourceManager* rm, ::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle dependency, ::GlobalNamespace::DelegateList_1<float>* updateCallbacks) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1::UnityEngine.ResourceManagement.AsyncOperations.IAsyncOperation.Start");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1<TObject>*), -1));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, rm, dependency, updateCallbacks);
    }
    // System.Void ReleaseDependencies()
    // Offset: 0xFFFFFFFFFFFFFFFF
    void ReleaseDependencies() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1::ReleaseDependencies");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1<TObject>*), -1));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
    }
    // private UnityEngine.ResourceManagement.AsyncOperations.DownloadStatus UnityEngine.ResourceManagement.AsyncOperations.IAsyncOperation.GetDownloadStatus(System.Collections.Generic.HashSet`1<System.Object> visited)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::UnityEngine::ResourceManagement::AsyncOperations::DownloadStatus UnityEngine_ResourceManagement_AsyncOperations_IAsyncOperation_GetDownloadStatus(::System::Collections::Generic::HashSet_1<::Il2CppObject*>* visited) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1::UnityEngine.ResourceManagement.AsyncOperations.IAsyncOperation.GetDownloadStatus");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1<TObject>*), -1));
      return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::ResourceManagement::AsyncOperations::DownloadStatus, false>(this, ___internal__method, visited);
    }
    // UnityEngine.ResourceManagement.AsyncOperations.DownloadStatus GetDownloadStatus(System.Collections.Generic.HashSet`1<System.Object> visited)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::UnityEngine::ResourceManagement::AsyncOperations::DownloadStatus GetDownloadStatus(::System::Collections::Generic::HashSet_1<::Il2CppObject*>* visited) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1::GetDownloadStatus");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1<TObject>*), -1));
      return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::ResourceManagement::AsyncOperations::DownloadStatus, false>(this, ___internal__method, visited);
    }
    // private System.Void <.ctor>b__38_0(UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationHandle o)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void $_ctor$b__38_0(::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle o) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1::<.ctor>b__38_0");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.ctor>b__38_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(o)})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, o);
    }
    // public override System.String ToString()
    // Offset: 0xFFFFFFFFFFFFFFFF
    // Implemented from: System.Object
    // Base method: System.String Object::ToString()
    ::StringW ToString() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1::ToString");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), -1));
      return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
    }
  }; // UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationBase`1
  // Could not write size check! Type: UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationBase`1 is generic, or has no fields that are valid for size checks!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
