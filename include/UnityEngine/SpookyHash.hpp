// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
}
// Completed forward declares
// Type namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: SpookyHash
  class SpookyHash;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::SpookyHash);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::SpookyHash*, "UnityEngine", "SpookyHash");
// Type namespace: UnityEngine
namespace UnityEngine {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.SpookyHash
  // [TokenAttribute] Offset: FFFFFFFF
  class SpookyHash : public ::Il2CppObject {
    public:
    // Nested type: ::UnityEngine::SpookyHash::U
    struct U;
    // Get static field: static private readonly System.Boolean AllowUnalignedRead
    static bool _get_AllowUnalignedRead();
    // Set static field: static private readonly System.Boolean AllowUnalignedRead
    static void _set_AllowUnalignedRead(bool value);
    // static private System.Boolean AttemptDetectAllowUnalignedRead()
    // Offset: 0x54B2508
    static bool AttemptDetectAllowUnalignedRead();
    // static public System.Void Hash(System.Void* message, System.UInt64 length, System.UInt64* hash1, System.UInt64* hash2)
    // Offset: 0x54B2200
    static void Hash(void* message, uint64_t length, uint64_t* hash1, uint64_t* hash2);
    // static private System.Void End(System.UInt64* data, ref System.UInt64 h0, ref System.UInt64 h1, ref System.UInt64 h2, ref System.UInt64 h3, ref System.UInt64 h4, ref System.UInt64 h5, ref System.UInt64 h6, ref System.UInt64 h7, ref System.UInt64 h8, ref System.UInt64 h9, ref System.UInt64 h10, ref System.UInt64 h11)
    // Offset: 0x54B2E4C
    static void End(uint64_t* data, ByRef<uint64_t> h0, ByRef<uint64_t> h1, ByRef<uint64_t> h2, ByRef<uint64_t> h3, ByRef<uint64_t> h4, ByRef<uint64_t> h5, ByRef<uint64_t> h6, ByRef<uint64_t> h7, ByRef<uint64_t> h8, ByRef<uint64_t> h9, ByRef<uint64_t> h10, ByRef<uint64_t> h11);
    // static private System.Void EndPartial(ref System.UInt64 h0, ref System.UInt64 h1, ref System.UInt64 h2, ref System.UInt64 h3, ref System.UInt64 h4, ref System.UInt64 h5, ref System.UInt64 h6, ref System.UInt64 h7, ref System.UInt64 h8, ref System.UInt64 h9, ref System.UInt64 h10, ref System.UInt64 h11)
    // Offset: 0x54B30B8
    static void EndPartial(ByRef<uint64_t> h0, ByRef<uint64_t> h1, ByRef<uint64_t> h2, ByRef<uint64_t> h3, ByRef<uint64_t> h4, ByRef<uint64_t> h5, ByRef<uint64_t> h6, ByRef<uint64_t> h7, ByRef<uint64_t> h8, ByRef<uint64_t> h9, ByRef<uint64_t> h10, ByRef<uint64_t> h11);
    // static private System.Void Rot64(ref System.UInt64 x, System.Int32 k)
    // Offset: 0x54B3350
    static void Rot64(ByRef<uint64_t> x, int k);
    // static private System.Void Short(System.Void* message, System.UInt64 length, System.UInt64* hash1, System.UInt64* hash2)
    // Offset: 0x54B2590
    static void Short(void* message, uint64_t length, uint64_t* hash1, uint64_t* hash2);
    // static private System.Void ShortMix(ref System.UInt64 h0, ref System.UInt64 h1, ref System.UInt64 h2, ref System.UInt64 h3)
    // Offset: 0x54B3364
    static void ShortMix(ByRef<uint64_t> h0, ByRef<uint64_t> h1, ByRef<uint64_t> h2, ByRef<uint64_t> h3);
    // static private System.Void ShortEnd(ref System.UInt64 h0, ref System.UInt64 h1, ref System.UInt64 h2, ref System.UInt64 h3)
    // Offset: 0x54B3580
    static void ShortEnd(ByRef<uint64_t> h0, ByRef<uint64_t> h1, ByRef<uint64_t> h2, ByRef<uint64_t> h3);
    // static private System.Void Mix(System.UInt64* data, ref System.UInt64 s0, ref System.UInt64 s1, ref System.UInt64 s2, ref System.UInt64 s3, ref System.UInt64 s4, ref System.UInt64 s5, ref System.UInt64 s6, ref System.UInt64 s7, ref System.UInt64 s8, ref System.UInt64 s9, ref System.UInt64 s10, ref System.UInt64 s11)
    // Offset: 0x54B2928
    static void Mix(uint64_t* data, ByRef<uint64_t> s0, ByRef<uint64_t> s1, ByRef<uint64_t> s2, ByRef<uint64_t> s3, ByRef<uint64_t> s4, ByRef<uint64_t> s5, ByRef<uint64_t> s6, ByRef<uint64_t> s7, ByRef<uint64_t> s8, ByRef<uint64_t> s9, ByRef<uint64_t> s10, ByRef<uint64_t> s11);
    // static private System.Void memset(System.Void* dst, System.Int32 value, System.UInt64 numberOfBytes)
    // Offset: 0x54B2D74
    static void memset(void* dst, int value, uint64_t numberOfBytes);
    // static private System.Void .cctor()
    // Offset: 0x54B377C
    static void _cctor();
  }; // UnityEngine.SpookyHash
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::SpookyHash::AttemptDetectAllowUnalignedRead
// Il2CppName: AttemptDetectAllowUnalignedRead
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&UnityEngine::SpookyHash::AttemptDetectAllowUnalignedRead)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::SpookyHash*), "AttemptDetectAllowUnalignedRead", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::SpookyHash::Hash
// Il2CppName: Hash
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(void*, uint64_t, uint64_t*, uint64_t*)>(&UnityEngine::SpookyHash::Hash)> {
  static const MethodInfo* get() {
    static auto* message = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Void"))->byval_arg;
    static auto* length = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    static auto* hash1 = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "UInt64"))->byval_arg;
    static auto* hash2 = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "UInt64"))->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::SpookyHash*), "Hash", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{message, length, hash1, hash2});
  }
};
// Writing MetadataGetter for method: UnityEngine::SpookyHash::End
// Il2CppName: End
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(uint64_t*, ByRef<uint64_t>, ByRef<uint64_t>, ByRef<uint64_t>, ByRef<uint64_t>, ByRef<uint64_t>, ByRef<uint64_t>, ByRef<uint64_t>, ByRef<uint64_t>, ByRef<uint64_t>, ByRef<uint64_t>, ByRef<uint64_t>, ByRef<uint64_t>)>(&UnityEngine::SpookyHash::End)> {
  static const MethodInfo* get() {
    static auto* data = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "UInt64"))->byval_arg;
    static auto* h0 = &::il2cpp_utils::GetClassFromName("System", "UInt64")->this_arg;
    static auto* h1 = &::il2cpp_utils::GetClassFromName("System", "UInt64")->this_arg;
    static auto* h2 = &::il2cpp_utils::GetClassFromName("System", "UInt64")->this_arg;
    static auto* h3 = &::il2cpp_utils::GetClassFromName("System", "UInt64")->this_arg;
    static auto* h4 = &::il2cpp_utils::GetClassFromName("System", "UInt64")->this_arg;
    static auto* h5 = &::il2cpp_utils::GetClassFromName("System", "UInt64")->this_arg;
    static auto* h6 = &::il2cpp_utils::GetClassFromName("System", "UInt64")->this_arg;
    static auto* h7 = &::il2cpp_utils::GetClassFromName("System", "UInt64")->this_arg;
    static auto* h8 = &::il2cpp_utils::GetClassFromName("System", "UInt64")->this_arg;
    static auto* h9 = &::il2cpp_utils::GetClassFromName("System", "UInt64")->this_arg;
    static auto* h10 = &::il2cpp_utils::GetClassFromName("System", "UInt64")->this_arg;
    static auto* h11 = &::il2cpp_utils::GetClassFromName("System", "UInt64")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::SpookyHash*), "End", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{data, h0, h1, h2, h3, h4, h5, h6, h7, h8, h9, h10, h11});
  }
};
// Writing MetadataGetter for method: UnityEngine::SpookyHash::EndPartial
// Il2CppName: EndPartial
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(ByRef<uint64_t>, ByRef<uint64_t>, ByRef<uint64_t>, ByRef<uint64_t>, ByRef<uint64_t>, ByRef<uint64_t>, ByRef<uint64_t>, ByRef<uint64_t>, ByRef<uint64_t>, ByRef<uint64_t>, ByRef<uint64_t>, ByRef<uint64_t>)>(&UnityEngine::SpookyHash::EndPartial)> {
  static const MethodInfo* get() {
    static auto* h0 = &::il2cpp_utils::GetClassFromName("System", "UInt64")->this_arg;
    static auto* h1 = &::il2cpp_utils::GetClassFromName("System", "UInt64")->this_arg;
    static auto* h2 = &::il2cpp_utils::GetClassFromName("System", "UInt64")->this_arg;
    static auto* h3 = &::il2cpp_utils::GetClassFromName("System", "UInt64")->this_arg;
    static auto* h4 = &::il2cpp_utils::GetClassFromName("System", "UInt64")->this_arg;
    static auto* h5 = &::il2cpp_utils::GetClassFromName("System", "UInt64")->this_arg;
    static auto* h6 = &::il2cpp_utils::GetClassFromName("System", "UInt64")->this_arg;
    static auto* h7 = &::il2cpp_utils::GetClassFromName("System", "UInt64")->this_arg;
    static auto* h8 = &::il2cpp_utils::GetClassFromName("System", "UInt64")->this_arg;
    static auto* h9 = &::il2cpp_utils::GetClassFromName("System", "UInt64")->this_arg;
    static auto* h10 = &::il2cpp_utils::GetClassFromName("System", "UInt64")->this_arg;
    static auto* h11 = &::il2cpp_utils::GetClassFromName("System", "UInt64")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::SpookyHash*), "EndPartial", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{h0, h1, h2, h3, h4, h5, h6, h7, h8, h9, h10, h11});
  }
};
// Writing MetadataGetter for method: UnityEngine::SpookyHash::Rot64
// Il2CppName: Rot64
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(ByRef<uint64_t>, int)>(&UnityEngine::SpookyHash::Rot64)> {
  static const MethodInfo* get() {
    static auto* x = &::il2cpp_utils::GetClassFromName("System", "UInt64")->this_arg;
    static auto* k = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::SpookyHash*), "Rot64", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{x, k});
  }
};
// Writing MetadataGetter for method: UnityEngine::SpookyHash::Short
// Il2CppName: Short
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(void*, uint64_t, uint64_t*, uint64_t*)>(&UnityEngine::SpookyHash::Short)> {
  static const MethodInfo* get() {
    static auto* message = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Void"))->byval_arg;
    static auto* length = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    static auto* hash1 = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "UInt64"))->byval_arg;
    static auto* hash2 = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "UInt64"))->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::SpookyHash*), "Short", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{message, length, hash1, hash2});
  }
};
// Writing MetadataGetter for method: UnityEngine::SpookyHash::ShortMix
// Il2CppName: ShortMix
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(ByRef<uint64_t>, ByRef<uint64_t>, ByRef<uint64_t>, ByRef<uint64_t>)>(&UnityEngine::SpookyHash::ShortMix)> {
  static const MethodInfo* get() {
    static auto* h0 = &::il2cpp_utils::GetClassFromName("System", "UInt64")->this_arg;
    static auto* h1 = &::il2cpp_utils::GetClassFromName("System", "UInt64")->this_arg;
    static auto* h2 = &::il2cpp_utils::GetClassFromName("System", "UInt64")->this_arg;
    static auto* h3 = &::il2cpp_utils::GetClassFromName("System", "UInt64")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::SpookyHash*), "ShortMix", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{h0, h1, h2, h3});
  }
};
// Writing MetadataGetter for method: UnityEngine::SpookyHash::ShortEnd
// Il2CppName: ShortEnd
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(ByRef<uint64_t>, ByRef<uint64_t>, ByRef<uint64_t>, ByRef<uint64_t>)>(&UnityEngine::SpookyHash::ShortEnd)> {
  static const MethodInfo* get() {
    static auto* h0 = &::il2cpp_utils::GetClassFromName("System", "UInt64")->this_arg;
    static auto* h1 = &::il2cpp_utils::GetClassFromName("System", "UInt64")->this_arg;
    static auto* h2 = &::il2cpp_utils::GetClassFromName("System", "UInt64")->this_arg;
    static auto* h3 = &::il2cpp_utils::GetClassFromName("System", "UInt64")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::SpookyHash*), "ShortEnd", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{h0, h1, h2, h3});
  }
};
// Writing MetadataGetter for method: UnityEngine::SpookyHash::Mix
// Il2CppName: Mix
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(uint64_t*, ByRef<uint64_t>, ByRef<uint64_t>, ByRef<uint64_t>, ByRef<uint64_t>, ByRef<uint64_t>, ByRef<uint64_t>, ByRef<uint64_t>, ByRef<uint64_t>, ByRef<uint64_t>, ByRef<uint64_t>, ByRef<uint64_t>, ByRef<uint64_t>)>(&UnityEngine::SpookyHash::Mix)> {
  static const MethodInfo* get() {
    static auto* data = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "UInt64"))->byval_arg;
    static auto* s0 = &::il2cpp_utils::GetClassFromName("System", "UInt64")->this_arg;
    static auto* s1 = &::il2cpp_utils::GetClassFromName("System", "UInt64")->this_arg;
    static auto* s2 = &::il2cpp_utils::GetClassFromName("System", "UInt64")->this_arg;
    static auto* s3 = &::il2cpp_utils::GetClassFromName("System", "UInt64")->this_arg;
    static auto* s4 = &::il2cpp_utils::GetClassFromName("System", "UInt64")->this_arg;
    static auto* s5 = &::il2cpp_utils::GetClassFromName("System", "UInt64")->this_arg;
    static auto* s6 = &::il2cpp_utils::GetClassFromName("System", "UInt64")->this_arg;
    static auto* s7 = &::il2cpp_utils::GetClassFromName("System", "UInt64")->this_arg;
    static auto* s8 = &::il2cpp_utils::GetClassFromName("System", "UInt64")->this_arg;
    static auto* s9 = &::il2cpp_utils::GetClassFromName("System", "UInt64")->this_arg;
    static auto* s10 = &::il2cpp_utils::GetClassFromName("System", "UInt64")->this_arg;
    static auto* s11 = &::il2cpp_utils::GetClassFromName("System", "UInt64")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::SpookyHash*), "Mix", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{data, s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11});
  }
};
// Writing MetadataGetter for method: UnityEngine::SpookyHash::memset
// Il2CppName: memset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(void*, int, uint64_t)>(&UnityEngine::SpookyHash::memset)> {
  static const MethodInfo* get() {
    static auto* dst = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Void"))->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* numberOfBytes = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::SpookyHash*), "memset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{dst, value, numberOfBytes});
  }
};
// Writing MetadataGetter for method: UnityEngine::SpookyHash::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&UnityEngine::SpookyHash::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::SpookyHash*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
