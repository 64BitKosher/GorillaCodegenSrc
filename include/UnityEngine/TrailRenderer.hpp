// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.Renderer
#include "UnityEngine/Renderer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Color
  struct Color;
  // Forward declaring type: Vector2
  struct Vector2;
  // Forward declaring type: LineTextureMode
  struct LineTextureMode;
  // Forward declaring type: LineAlignment
  struct LineAlignment;
  // Forward declaring type: SpriteMaskInteraction
  struct SpriteMaskInteraction;
  // Forward declaring type: Mesh
  class Mesh;
  // Forward declaring type: Camera
  class Camera;
  // Forward declaring type: AnimationCurve
  class AnimationCurve;
  // Forward declaring type: Gradient
  class Gradient;
}
// Forward declaring namespace: Unity::Collections
namespace Unity::Collections {
  // Forward declaring type: NativeArray`1<T>
  template<typename T>
  struct NativeArray_1;
  // Forward declaring type: NativeSlice`1<T>
  template<typename T>
  struct NativeSlice_1;
}
// Forward declaring namespace: System
namespace System {
  // Skipping declaration: IntPtr because it is already included!
}
// Completed forward declares
// Type namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: TrailRenderer
  class TrailRenderer;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::TrailRenderer);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::TrailRenderer*, "UnityEngine", "TrailRenderer");
// Type namespace: UnityEngine
namespace UnityEngine {
  // Size: 0x18
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.TrailRenderer
  // [TokenAttribute] Offset: FFFFFFFF
  // [NativeHeaderAttribute] Offset: FFFFFFFF
  // [NativeHeaderAttribute] Offset: FFFFFFFF
  class TrailRenderer : public ::UnityEngine::Renderer {
    public:
    // public System.Int32 get_numPositions()
    // Offset: 0x548DEA8
    int get_numPositions();
    // public System.Single get_time()
    // Offset: 0x548DF20
    float get_time();
    // public System.Void set_time(System.Single value)
    // Offset: 0x548DF5C
    void set_time(float value);
    // public System.Single get_startWidth()
    // Offset: 0x548DFA8
    float get_startWidth();
    // public System.Void set_startWidth(System.Single value)
    // Offset: 0x548DFE4
    void set_startWidth(float value);
    // public System.Single get_endWidth()
    // Offset: 0x548E030
    float get_endWidth();
    // public System.Void set_endWidth(System.Single value)
    // Offset: 0x548E06C
    void set_endWidth(float value);
    // public System.Single get_widthMultiplier()
    // Offset: 0x548E0B8
    float get_widthMultiplier();
    // public System.Void set_widthMultiplier(System.Single value)
    // Offset: 0x548E0F4
    void set_widthMultiplier(float value);
    // public System.Boolean get_autodestruct()
    // Offset: 0x548E140
    bool get_autodestruct();
    // public System.Void set_autodestruct(System.Boolean value)
    // Offset: 0x548E17C
    void set_autodestruct(bool value);
    // public System.Boolean get_emitting()
    // Offset: 0x548E1C0
    bool get_emitting();
    // public System.Void set_emitting(System.Boolean value)
    // Offset: 0x548E1FC
    void set_emitting(bool value);
    // public System.Int32 get_numCornerVertices()
    // Offset: 0x548E240
    int get_numCornerVertices();
    // public System.Void set_numCornerVertices(System.Int32 value)
    // Offset: 0x548E27C
    void set_numCornerVertices(int value);
    // public System.Int32 get_numCapVertices()
    // Offset: 0x548E2C0
    int get_numCapVertices();
    // public System.Void set_numCapVertices(System.Int32 value)
    // Offset: 0x548E2FC
    void set_numCapVertices(int value);
    // public System.Single get_minVertexDistance()
    // Offset: 0x548E340
    float get_minVertexDistance();
    // public System.Void set_minVertexDistance(System.Single value)
    // Offset: 0x548E37C
    void set_minVertexDistance(float value);
    // public UnityEngine.Color get_startColor()
    // Offset: 0x548E3C8
    ::UnityEngine::Color get_startColor();
    // public System.Void set_startColor(UnityEngine.Color value)
    // Offset: 0x548E464
    void set_startColor(::UnityEngine::Color value);
    // public UnityEngine.Color get_endColor()
    // Offset: 0x548E4FC
    ::UnityEngine::Color get_endColor();
    // public System.Void set_endColor(UnityEngine.Color value)
    // Offset: 0x548E598
    void set_endColor(::UnityEngine::Color value);
    // public System.Int32 get_positionCount()
    // Offset: 0x548DEE4
    int get_positionCount();
    // public System.Void SetPosition(System.Int32 index, UnityEngine.Vector3 position)
    // Offset: 0x548E630
    void SetPosition(int index, ::UnityEngine::Vector3 position);
    // public UnityEngine.Vector3 GetPosition(System.Int32 index)
    // Offset: 0x548E6E0
    ::UnityEngine::Vector3 GetPosition(int index);
    // public UnityEngine.Vector2 get_textureScale()
    // Offset: 0x548E798
    ::UnityEngine::Vector2 get_textureScale();
    // public System.Void set_textureScale(UnityEngine.Vector2 value)
    // Offset: 0x548E828
    void set_textureScale(::UnityEngine::Vector2 value);
    // public System.Single get_shadowBias()
    // Offset: 0x548E8B4
    float get_shadowBias();
    // public System.Void set_shadowBias(System.Single value)
    // Offset: 0x548E8F0
    void set_shadowBias(float value);
    // public System.Boolean get_generateLightingData()
    // Offset: 0x548E93C
    bool get_generateLightingData();
    // public System.Void set_generateLightingData(System.Boolean value)
    // Offset: 0x548E978
    void set_generateLightingData(bool value);
    // public UnityEngine.LineTextureMode get_textureMode()
    // Offset: 0x548E9BC
    ::UnityEngine::LineTextureMode get_textureMode();
    // public System.Void set_textureMode(UnityEngine.LineTextureMode value)
    // Offset: 0x548E9F8
    void set_textureMode(::UnityEngine::LineTextureMode value);
    // public UnityEngine.LineAlignment get_alignment()
    // Offset: 0x548EA3C
    ::UnityEngine::LineAlignment get_alignment();
    // public System.Void set_alignment(UnityEngine.LineAlignment value)
    // Offset: 0x548EA78
    void set_alignment(::UnityEngine::LineAlignment value);
    // public UnityEngine.SpriteMaskInteraction get_maskInteraction()
    // Offset: 0x548EABC
    ::UnityEngine::SpriteMaskInteraction get_maskInteraction();
    // public System.Void set_maskInteraction(UnityEngine.SpriteMaskInteraction value)
    // Offset: 0x548EAF8
    void set_maskInteraction(::UnityEngine::SpriteMaskInteraction value);
    // public System.Void Clear()
    // Offset: 0x548EB3C
    void Clear();
    // public System.Void BakeMesh(UnityEngine.Mesh mesh, System.Boolean useTransform)
    // Offset: 0x548EB78
    void BakeMesh(::UnityEngine::Mesh* mesh, bool useTransform);
    // public System.Void BakeMesh(UnityEngine.Mesh mesh, UnityEngine.Camera camera, System.Boolean useTransform)
    // Offset: 0x548EBF8
    void BakeMesh(::UnityEngine::Mesh* mesh, ::UnityEngine::Camera* camera, bool useTransform);
    // public UnityEngine.AnimationCurve get_widthCurve()
    // Offset: 0x548EC54
    ::UnityEngine::AnimationCurve* get_widthCurve();
    // public System.Void set_widthCurve(UnityEngine.AnimationCurve value)
    // Offset: 0x548ECCC
    void set_widthCurve(::UnityEngine::AnimationCurve* value);
    // public UnityEngine.Gradient get_colorGradient()
    // Offset: 0x548ED54
    ::UnityEngine::Gradient* get_colorGradient();
    // public System.Void set_colorGradient(UnityEngine.Gradient value)
    // Offset: 0x548EDCC
    void set_colorGradient(::UnityEngine::Gradient* value);
    // private UnityEngine.AnimationCurve GetWidthCurveCopy()
    // Offset: 0x548EC90
    ::UnityEngine::AnimationCurve* GetWidthCurveCopy();
    // private System.Void SetWidthCurve(UnityEngine.AnimationCurve curve)
    // Offset: 0x548ED10
    void SetWidthCurve(::UnityEngine::AnimationCurve* curve);
    // private UnityEngine.Gradient GetColorGradientCopy()
    // Offset: 0x548ED90
    ::UnityEngine::Gradient* GetColorGradientCopy();
    // private System.Void SetColorGradient(UnityEngine.Gradient curve)
    // Offset: 0x548EE10
    void SetColorGradient(::UnityEngine::Gradient* curve);
    // public System.Int32 GetPositions(out UnityEngine.Vector3[] positions)
    // Offset: 0x548EE54
    int GetPositions(ByRef<::ArrayW<::UnityEngine::Vector3>> positions);
    // public System.Int32 GetVisiblePositions(out UnityEngine.Vector3[] positions)
    // Offset: 0x548EE98
    int GetVisiblePositions(ByRef<::ArrayW<::UnityEngine::Vector3>> positions);
    // public System.Void SetPositions(UnityEngine.Vector3[] positions)
    // Offset: 0x548EEDC
    void SetPositions(::ArrayW<::UnityEngine::Vector3> positions);
    // public System.Void AddPosition(UnityEngine.Vector3 position)
    // Offset: 0x548EF20
    void AddPosition(::UnityEngine::Vector3 position);
    // public System.Void AddPositions(UnityEngine.Vector3[] positions)
    // Offset: 0x548EFB8
    void AddPositions(::ArrayW<::UnityEngine::Vector3> positions);
    // public System.Void SetPositions(Unity.Collections.NativeArray`1<UnityEngine.Vector3> positions)
    // Offset: 0x548EFFC
    void SetPositions(::Unity::Collections::NativeArray_1<::UnityEngine::Vector3> positions);
    // public System.Void SetPositions(Unity.Collections.NativeSlice`1<UnityEngine.Vector3> positions)
    // Offset: 0x548F0E8
    void SetPositions(::Unity::Collections::NativeSlice_1<::UnityEngine::Vector3> positions);
    // public System.Int32 GetPositions(out Unity.Collections.NativeArray`1<UnityEngine.Vector3> positions)
    // Offset: 0x548F1BC
    int GetPositions(ByRef<::Unity::Collections::NativeArray_1<::UnityEngine::Vector3>> positions);
    // public System.Int32 GetPositions(out Unity.Collections.NativeSlice`1<UnityEngine.Vector3> positions)
    // Offset: 0x548F2A8
    int GetPositions(ByRef<::Unity::Collections::NativeSlice_1<::UnityEngine::Vector3>> positions);
    // public System.Int32 GetVisiblePositions(out Unity.Collections.NativeArray`1<UnityEngine.Vector3> positions)
    // Offset: 0x548F37C
    int GetVisiblePositions(ByRef<::Unity::Collections::NativeArray_1<::UnityEngine::Vector3>> positions);
    // public System.Int32 GetVisiblePositions(out Unity.Collections.NativeSlice`1<UnityEngine.Vector3> positions)
    // Offset: 0x548F468
    int GetVisiblePositions(ByRef<::Unity::Collections::NativeSlice_1<::UnityEngine::Vector3>> positions);
    // public System.Void AddPositions(out Unity.Collections.NativeArray`1<UnityEngine.Vector3> positions)
    // Offset: 0x548F53C
    void AddPositions(ByRef<::Unity::Collections::NativeArray_1<::UnityEngine::Vector3>> positions);
    // public System.Void AddPositions(out Unity.Collections.NativeSlice`1<UnityEngine.Vector3> positions)
    // Offset: 0x548F628
    void AddPositions(ByRef<::Unity::Collections::NativeSlice_1<::UnityEngine::Vector3>> positions);
    // private System.Void SetPositionsWithNativeContainer(System.IntPtr positions, System.Int32 count)
    // Offset: 0x548F094
    void SetPositionsWithNativeContainer(::System::IntPtr positions, int count);
    // private System.Int32 GetPositionsWithNativeContainer(System.IntPtr positions, System.Int32 length)
    // Offset: 0x548F254
    int GetPositionsWithNativeContainer(::System::IntPtr positions, int length);
    // private System.Int32 GetVisiblePositionsWithNativeContainer(System.IntPtr positions, System.Int32 length)
    // Offset: 0x548F414
    int GetVisiblePositionsWithNativeContainer(::System::IntPtr positions, int length);
    // private System.Void AddPositionsWithNativeContainer(System.IntPtr positions, System.Int32 length)
    // Offset: 0x548F5D4
    void AddPositionsWithNativeContainer(::System::IntPtr positions, int length);
    // private System.Void get_startColor_Injected(out UnityEngine.Color ret)
    // Offset: 0x548E420
    void get_startColor_Injected(ByRef<::UnityEngine::Color> ret);
    // private System.Void set_startColor_Injected(ref UnityEngine.Color value)
    // Offset: 0x548E4B8
    void set_startColor_Injected(ByRef<::UnityEngine::Color> value);
    // private System.Void get_endColor_Injected(out UnityEngine.Color ret)
    // Offset: 0x548E554
    void get_endColor_Injected(ByRef<::UnityEngine::Color> ret);
    // private System.Void set_endColor_Injected(ref UnityEngine.Color value)
    // Offset: 0x548E5EC
    void set_endColor_Injected(ByRef<::UnityEngine::Color> value);
    // private System.Void SetPosition_Injected(System.Int32 index, ref UnityEngine.Vector3 position)
    // Offset: 0x548E68C
    void SetPosition_Injected(int index, ByRef<::UnityEngine::Vector3> position);
    // private System.Void GetPosition_Injected(System.Int32 index, out UnityEngine.Vector3 ret)
    // Offset: 0x548E744
    void GetPosition_Injected(int index, ByRef<::UnityEngine::Vector3> ret);
    // private System.Void get_textureScale_Injected(out UnityEngine.Vector2 ret)
    // Offset: 0x548E7E4
    void get_textureScale_Injected(ByRef<::UnityEngine::Vector2> ret);
    // private System.Void set_textureScale_Injected(ref UnityEngine.Vector2 value)
    // Offset: 0x548E870
    void set_textureScale_Injected(ByRef<::UnityEngine::Vector2> value);
    // private System.Void AddPosition_Injected(ref UnityEngine.Vector3 position)
    // Offset: 0x548EF74
    void AddPosition_Injected(ByRef<::UnityEngine::Vector3> position);
    // public System.Void .ctor()
    // Offset: 0x548F6FC
    // Implemented from: UnityEngine.Renderer
    // Base method: System.Void Renderer::.ctor()
    // Base method: System.Void Component::.ctor()
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static TrailRenderer* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TrailRenderer::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<TrailRenderer*, creationType>()));
    }
  }; // UnityEngine.TrailRenderer
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::TrailRenderer::get_numPositions
// Il2CppName: get_numPositions
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::TrailRenderer::*)()>(&UnityEngine::TrailRenderer::get_numPositions)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TrailRenderer*), "get_numPositions", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TrailRenderer::get_time
// Il2CppName: get_time
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::TrailRenderer::*)()>(&UnityEngine::TrailRenderer::get_time)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TrailRenderer*), "get_time", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TrailRenderer::set_time
// Il2CppName: set_time
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TrailRenderer::*)(float)>(&UnityEngine::TrailRenderer::set_time)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TrailRenderer*), "set_time", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::TrailRenderer::get_startWidth
// Il2CppName: get_startWidth
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::TrailRenderer::*)()>(&UnityEngine::TrailRenderer::get_startWidth)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TrailRenderer*), "get_startWidth", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TrailRenderer::set_startWidth
// Il2CppName: set_startWidth
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TrailRenderer::*)(float)>(&UnityEngine::TrailRenderer::set_startWidth)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TrailRenderer*), "set_startWidth", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::TrailRenderer::get_endWidth
// Il2CppName: get_endWidth
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::TrailRenderer::*)()>(&UnityEngine::TrailRenderer::get_endWidth)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TrailRenderer*), "get_endWidth", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TrailRenderer::set_endWidth
// Il2CppName: set_endWidth
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TrailRenderer::*)(float)>(&UnityEngine::TrailRenderer::set_endWidth)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TrailRenderer*), "set_endWidth", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::TrailRenderer::get_widthMultiplier
// Il2CppName: get_widthMultiplier
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::TrailRenderer::*)()>(&UnityEngine::TrailRenderer::get_widthMultiplier)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TrailRenderer*), "get_widthMultiplier", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TrailRenderer::set_widthMultiplier
// Il2CppName: set_widthMultiplier
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TrailRenderer::*)(float)>(&UnityEngine::TrailRenderer::set_widthMultiplier)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TrailRenderer*), "set_widthMultiplier", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::TrailRenderer::get_autodestruct
// Il2CppName: get_autodestruct
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::TrailRenderer::*)()>(&UnityEngine::TrailRenderer::get_autodestruct)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TrailRenderer*), "get_autodestruct", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TrailRenderer::set_autodestruct
// Il2CppName: set_autodestruct
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TrailRenderer::*)(bool)>(&UnityEngine::TrailRenderer::set_autodestruct)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TrailRenderer*), "set_autodestruct", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::TrailRenderer::get_emitting
// Il2CppName: get_emitting
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::TrailRenderer::*)()>(&UnityEngine::TrailRenderer::get_emitting)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TrailRenderer*), "get_emitting", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TrailRenderer::set_emitting
// Il2CppName: set_emitting
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TrailRenderer::*)(bool)>(&UnityEngine::TrailRenderer::set_emitting)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TrailRenderer*), "set_emitting", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::TrailRenderer::get_numCornerVertices
// Il2CppName: get_numCornerVertices
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::TrailRenderer::*)()>(&UnityEngine::TrailRenderer::get_numCornerVertices)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TrailRenderer*), "get_numCornerVertices", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TrailRenderer::set_numCornerVertices
// Il2CppName: set_numCornerVertices
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TrailRenderer::*)(int)>(&UnityEngine::TrailRenderer::set_numCornerVertices)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TrailRenderer*), "set_numCornerVertices", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::TrailRenderer::get_numCapVertices
// Il2CppName: get_numCapVertices
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::TrailRenderer::*)()>(&UnityEngine::TrailRenderer::get_numCapVertices)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TrailRenderer*), "get_numCapVertices", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TrailRenderer::set_numCapVertices
// Il2CppName: set_numCapVertices
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TrailRenderer::*)(int)>(&UnityEngine::TrailRenderer::set_numCapVertices)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TrailRenderer*), "set_numCapVertices", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::TrailRenderer::get_minVertexDistance
// Il2CppName: get_minVertexDistance
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::TrailRenderer::*)()>(&UnityEngine::TrailRenderer::get_minVertexDistance)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TrailRenderer*), "get_minVertexDistance", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TrailRenderer::set_minVertexDistance
// Il2CppName: set_minVertexDistance
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TrailRenderer::*)(float)>(&UnityEngine::TrailRenderer::set_minVertexDistance)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TrailRenderer*), "set_minVertexDistance", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::TrailRenderer::get_startColor
// Il2CppName: get_startColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Color (UnityEngine::TrailRenderer::*)()>(&UnityEngine::TrailRenderer::get_startColor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TrailRenderer*), "get_startColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TrailRenderer::set_startColor
// Il2CppName: set_startColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TrailRenderer::*)(::UnityEngine::Color)>(&UnityEngine::TrailRenderer::set_startColor)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Color")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TrailRenderer*), "set_startColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::TrailRenderer::get_endColor
// Il2CppName: get_endColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Color (UnityEngine::TrailRenderer::*)()>(&UnityEngine::TrailRenderer::get_endColor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TrailRenderer*), "get_endColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TrailRenderer::set_endColor
// Il2CppName: set_endColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TrailRenderer::*)(::UnityEngine::Color)>(&UnityEngine::TrailRenderer::set_endColor)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Color")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TrailRenderer*), "set_endColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::TrailRenderer::get_positionCount
// Il2CppName: get_positionCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::TrailRenderer::*)()>(&UnityEngine::TrailRenderer::get_positionCount)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TrailRenderer*), "get_positionCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TrailRenderer::SetPosition
// Il2CppName: SetPosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TrailRenderer::*)(int, ::UnityEngine::Vector3)>(&UnityEngine::TrailRenderer::SetPosition)> {
  static const MethodInfo* get() {
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* position = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TrailRenderer*), "SetPosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{index, position});
  }
};
// Writing MetadataGetter for method: UnityEngine::TrailRenderer::GetPosition
// Il2CppName: GetPosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector3 (UnityEngine::TrailRenderer::*)(int)>(&UnityEngine::TrailRenderer::GetPosition)> {
  static const MethodInfo* get() {
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TrailRenderer*), "GetPosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{index});
  }
};
// Writing MetadataGetter for method: UnityEngine::TrailRenderer::get_textureScale
// Il2CppName: get_textureScale
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector2 (UnityEngine::TrailRenderer::*)()>(&UnityEngine::TrailRenderer::get_textureScale)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TrailRenderer*), "get_textureScale", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TrailRenderer::set_textureScale
// Il2CppName: set_textureScale
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TrailRenderer::*)(::UnityEngine::Vector2)>(&UnityEngine::TrailRenderer::set_textureScale)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector2")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TrailRenderer*), "set_textureScale", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::TrailRenderer::get_shadowBias
// Il2CppName: get_shadowBias
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::TrailRenderer::*)()>(&UnityEngine::TrailRenderer::get_shadowBias)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TrailRenderer*), "get_shadowBias", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TrailRenderer::set_shadowBias
// Il2CppName: set_shadowBias
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TrailRenderer::*)(float)>(&UnityEngine::TrailRenderer::set_shadowBias)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TrailRenderer*), "set_shadowBias", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::TrailRenderer::get_generateLightingData
// Il2CppName: get_generateLightingData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::TrailRenderer::*)()>(&UnityEngine::TrailRenderer::get_generateLightingData)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TrailRenderer*), "get_generateLightingData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TrailRenderer::set_generateLightingData
// Il2CppName: set_generateLightingData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TrailRenderer::*)(bool)>(&UnityEngine::TrailRenderer::set_generateLightingData)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TrailRenderer*), "set_generateLightingData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::TrailRenderer::get_textureMode
// Il2CppName: get_textureMode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::LineTextureMode (UnityEngine::TrailRenderer::*)()>(&UnityEngine::TrailRenderer::get_textureMode)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TrailRenderer*), "get_textureMode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TrailRenderer::set_textureMode
// Il2CppName: set_textureMode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TrailRenderer::*)(::UnityEngine::LineTextureMode)>(&UnityEngine::TrailRenderer::set_textureMode)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "LineTextureMode")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TrailRenderer*), "set_textureMode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::TrailRenderer::get_alignment
// Il2CppName: get_alignment
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::LineAlignment (UnityEngine::TrailRenderer::*)()>(&UnityEngine::TrailRenderer::get_alignment)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TrailRenderer*), "get_alignment", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TrailRenderer::set_alignment
// Il2CppName: set_alignment
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TrailRenderer::*)(::UnityEngine::LineAlignment)>(&UnityEngine::TrailRenderer::set_alignment)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "LineAlignment")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TrailRenderer*), "set_alignment", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::TrailRenderer::get_maskInteraction
// Il2CppName: get_maskInteraction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::SpriteMaskInteraction (UnityEngine::TrailRenderer::*)()>(&UnityEngine::TrailRenderer::get_maskInteraction)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TrailRenderer*), "get_maskInteraction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TrailRenderer::set_maskInteraction
// Il2CppName: set_maskInteraction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TrailRenderer::*)(::UnityEngine::SpriteMaskInteraction)>(&UnityEngine::TrailRenderer::set_maskInteraction)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "SpriteMaskInteraction")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TrailRenderer*), "set_maskInteraction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::TrailRenderer::Clear
// Il2CppName: Clear
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TrailRenderer::*)()>(&UnityEngine::TrailRenderer::Clear)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TrailRenderer*), "Clear", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TrailRenderer::BakeMesh
// Il2CppName: BakeMesh
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TrailRenderer::*)(::UnityEngine::Mesh*, bool)>(&UnityEngine::TrailRenderer::BakeMesh)> {
  static const MethodInfo* get() {
    static auto* mesh = &::il2cpp_utils::GetClassFromName("UnityEngine", "Mesh")->byval_arg;
    static auto* useTransform = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TrailRenderer*), "BakeMesh", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{mesh, useTransform});
  }
};
// Writing MetadataGetter for method: UnityEngine::TrailRenderer::BakeMesh
// Il2CppName: BakeMesh
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TrailRenderer::*)(::UnityEngine::Mesh*, ::UnityEngine::Camera*, bool)>(&UnityEngine::TrailRenderer::BakeMesh)> {
  static const MethodInfo* get() {
    static auto* mesh = &::il2cpp_utils::GetClassFromName("UnityEngine", "Mesh")->byval_arg;
    static auto* camera = &::il2cpp_utils::GetClassFromName("UnityEngine", "Camera")->byval_arg;
    static auto* useTransform = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TrailRenderer*), "BakeMesh", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{mesh, camera, useTransform});
  }
};
// Writing MetadataGetter for method: UnityEngine::TrailRenderer::get_widthCurve
// Il2CppName: get_widthCurve
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::AnimationCurve* (UnityEngine::TrailRenderer::*)()>(&UnityEngine::TrailRenderer::get_widthCurve)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TrailRenderer*), "get_widthCurve", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TrailRenderer::set_widthCurve
// Il2CppName: set_widthCurve
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TrailRenderer::*)(::UnityEngine::AnimationCurve*)>(&UnityEngine::TrailRenderer::set_widthCurve)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "AnimationCurve")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TrailRenderer*), "set_widthCurve", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::TrailRenderer::get_colorGradient
// Il2CppName: get_colorGradient
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Gradient* (UnityEngine::TrailRenderer::*)()>(&UnityEngine::TrailRenderer::get_colorGradient)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TrailRenderer*), "get_colorGradient", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TrailRenderer::set_colorGradient
// Il2CppName: set_colorGradient
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TrailRenderer::*)(::UnityEngine::Gradient*)>(&UnityEngine::TrailRenderer::set_colorGradient)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Gradient")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TrailRenderer*), "set_colorGradient", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::TrailRenderer::GetWidthCurveCopy
// Il2CppName: GetWidthCurveCopy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::AnimationCurve* (UnityEngine::TrailRenderer::*)()>(&UnityEngine::TrailRenderer::GetWidthCurveCopy)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TrailRenderer*), "GetWidthCurveCopy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TrailRenderer::SetWidthCurve
// Il2CppName: SetWidthCurve
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TrailRenderer::*)(::UnityEngine::AnimationCurve*)>(&UnityEngine::TrailRenderer::SetWidthCurve)> {
  static const MethodInfo* get() {
    static auto* curve = &::il2cpp_utils::GetClassFromName("UnityEngine", "AnimationCurve")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TrailRenderer*), "SetWidthCurve", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{curve});
  }
};
// Writing MetadataGetter for method: UnityEngine::TrailRenderer::GetColorGradientCopy
// Il2CppName: GetColorGradientCopy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Gradient* (UnityEngine::TrailRenderer::*)()>(&UnityEngine::TrailRenderer::GetColorGradientCopy)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TrailRenderer*), "GetColorGradientCopy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TrailRenderer::SetColorGradient
// Il2CppName: SetColorGradient
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TrailRenderer::*)(::UnityEngine::Gradient*)>(&UnityEngine::TrailRenderer::SetColorGradient)> {
  static const MethodInfo* get() {
    static auto* curve = &::il2cpp_utils::GetClassFromName("UnityEngine", "Gradient")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TrailRenderer*), "SetColorGradient", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{curve});
  }
};
// Writing MetadataGetter for method: UnityEngine::TrailRenderer::GetPositions
// Il2CppName: GetPositions
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::TrailRenderer::*)(ByRef<::ArrayW<::UnityEngine::Vector3>>)>(&UnityEngine::TrailRenderer::GetPositions)> {
  static const MethodInfo* get() {
    static auto* positions = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3"), 1)->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TrailRenderer*), "GetPositions", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{positions});
  }
};
// Writing MetadataGetter for method: UnityEngine::TrailRenderer::GetVisiblePositions
// Il2CppName: GetVisiblePositions
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::TrailRenderer::*)(ByRef<::ArrayW<::UnityEngine::Vector3>>)>(&UnityEngine::TrailRenderer::GetVisiblePositions)> {
  static const MethodInfo* get() {
    static auto* positions = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3"), 1)->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TrailRenderer*), "GetVisiblePositions", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{positions});
  }
};
// Writing MetadataGetter for method: UnityEngine::TrailRenderer::SetPositions
// Il2CppName: SetPositions
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TrailRenderer::*)(::ArrayW<::UnityEngine::Vector3>)>(&UnityEngine::TrailRenderer::SetPositions)> {
  static const MethodInfo* get() {
    static auto* positions = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TrailRenderer*), "SetPositions", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{positions});
  }
};
// Writing MetadataGetter for method: UnityEngine::TrailRenderer::AddPosition
// Il2CppName: AddPosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TrailRenderer::*)(::UnityEngine::Vector3)>(&UnityEngine::TrailRenderer::AddPosition)> {
  static const MethodInfo* get() {
    static auto* position = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TrailRenderer*), "AddPosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{position});
  }
};
// Writing MetadataGetter for method: UnityEngine::TrailRenderer::AddPositions
// Il2CppName: AddPositions
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TrailRenderer::*)(::ArrayW<::UnityEngine::Vector3>)>(&UnityEngine::TrailRenderer::AddPositions)> {
  static const MethodInfo* get() {
    static auto* positions = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TrailRenderer*), "AddPositions", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{positions});
  }
};
// Writing MetadataGetter for method: UnityEngine::TrailRenderer::SetPositions
// Il2CppName: SetPositions
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TrailRenderer::*)(::Unity::Collections::NativeArray_1<::UnityEngine::Vector3>)>(&UnityEngine::TrailRenderer::SetPositions)> {
  static const MethodInfo* get() {
    static auto* positions = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("Unity.Collections", "NativeArray`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TrailRenderer*), "SetPositions", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{positions});
  }
};
// Writing MetadataGetter for method: UnityEngine::TrailRenderer::SetPositions
// Il2CppName: SetPositions
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TrailRenderer::*)(::Unity::Collections::NativeSlice_1<::UnityEngine::Vector3>)>(&UnityEngine::TrailRenderer::SetPositions)> {
  static const MethodInfo* get() {
    static auto* positions = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("Unity.Collections", "NativeSlice`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TrailRenderer*), "SetPositions", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{positions});
  }
};
// Writing MetadataGetter for method: UnityEngine::TrailRenderer::GetPositions
// Il2CppName: GetPositions
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::TrailRenderer::*)(ByRef<::Unity::Collections::NativeArray_1<::UnityEngine::Vector3>>)>(&UnityEngine::TrailRenderer::GetPositions)> {
  static const MethodInfo* get() {
    static auto* positions = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("Unity.Collections", "NativeArray`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")})->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TrailRenderer*), "GetPositions", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{positions});
  }
};
// Writing MetadataGetter for method: UnityEngine::TrailRenderer::GetPositions
// Il2CppName: GetPositions
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::TrailRenderer::*)(ByRef<::Unity::Collections::NativeSlice_1<::UnityEngine::Vector3>>)>(&UnityEngine::TrailRenderer::GetPositions)> {
  static const MethodInfo* get() {
    static auto* positions = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("Unity.Collections", "NativeSlice`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")})->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TrailRenderer*), "GetPositions", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{positions});
  }
};
// Writing MetadataGetter for method: UnityEngine::TrailRenderer::GetVisiblePositions
// Il2CppName: GetVisiblePositions
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::TrailRenderer::*)(ByRef<::Unity::Collections::NativeArray_1<::UnityEngine::Vector3>>)>(&UnityEngine::TrailRenderer::GetVisiblePositions)> {
  static const MethodInfo* get() {
    static auto* positions = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("Unity.Collections", "NativeArray`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")})->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TrailRenderer*), "GetVisiblePositions", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{positions});
  }
};
// Writing MetadataGetter for method: UnityEngine::TrailRenderer::GetVisiblePositions
// Il2CppName: GetVisiblePositions
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::TrailRenderer::*)(ByRef<::Unity::Collections::NativeSlice_1<::UnityEngine::Vector3>>)>(&UnityEngine::TrailRenderer::GetVisiblePositions)> {
  static const MethodInfo* get() {
    static auto* positions = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("Unity.Collections", "NativeSlice`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")})->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TrailRenderer*), "GetVisiblePositions", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{positions});
  }
};
// Writing MetadataGetter for method: UnityEngine::TrailRenderer::AddPositions
// Il2CppName: AddPositions
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TrailRenderer::*)(ByRef<::Unity::Collections::NativeArray_1<::UnityEngine::Vector3>>)>(&UnityEngine::TrailRenderer::AddPositions)> {
  static const MethodInfo* get() {
    static auto* positions = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("Unity.Collections", "NativeArray`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")})->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TrailRenderer*), "AddPositions", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{positions});
  }
};
// Writing MetadataGetter for method: UnityEngine::TrailRenderer::AddPositions
// Il2CppName: AddPositions
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TrailRenderer::*)(ByRef<::Unity::Collections::NativeSlice_1<::UnityEngine::Vector3>>)>(&UnityEngine::TrailRenderer::AddPositions)> {
  static const MethodInfo* get() {
    static auto* positions = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("Unity.Collections", "NativeSlice`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")})->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TrailRenderer*), "AddPositions", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{positions});
  }
};
// Writing MetadataGetter for method: UnityEngine::TrailRenderer::SetPositionsWithNativeContainer
// Il2CppName: SetPositionsWithNativeContainer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TrailRenderer::*)(::System::IntPtr, int)>(&UnityEngine::TrailRenderer::SetPositionsWithNativeContainer)> {
  static const MethodInfo* get() {
    static auto* positions = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* count = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TrailRenderer*), "SetPositionsWithNativeContainer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{positions, count});
  }
};
// Writing MetadataGetter for method: UnityEngine::TrailRenderer::GetPositionsWithNativeContainer
// Il2CppName: GetPositionsWithNativeContainer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::TrailRenderer::*)(::System::IntPtr, int)>(&UnityEngine::TrailRenderer::GetPositionsWithNativeContainer)> {
  static const MethodInfo* get() {
    static auto* positions = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* length = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TrailRenderer*), "GetPositionsWithNativeContainer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{positions, length});
  }
};
// Writing MetadataGetter for method: UnityEngine::TrailRenderer::GetVisiblePositionsWithNativeContainer
// Il2CppName: GetVisiblePositionsWithNativeContainer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::TrailRenderer::*)(::System::IntPtr, int)>(&UnityEngine::TrailRenderer::GetVisiblePositionsWithNativeContainer)> {
  static const MethodInfo* get() {
    static auto* positions = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* length = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TrailRenderer*), "GetVisiblePositionsWithNativeContainer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{positions, length});
  }
};
// Writing MetadataGetter for method: UnityEngine::TrailRenderer::AddPositionsWithNativeContainer
// Il2CppName: AddPositionsWithNativeContainer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TrailRenderer::*)(::System::IntPtr, int)>(&UnityEngine::TrailRenderer::AddPositionsWithNativeContainer)> {
  static const MethodInfo* get() {
    static auto* positions = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* length = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TrailRenderer*), "AddPositionsWithNativeContainer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{positions, length});
  }
};
// Writing MetadataGetter for method: UnityEngine::TrailRenderer::get_startColor_Injected
// Il2CppName: get_startColor_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TrailRenderer::*)(ByRef<::UnityEngine::Color>)>(&UnityEngine::TrailRenderer::get_startColor_Injected)> {
  static const MethodInfo* get() {
    static auto* ret = &::il2cpp_utils::GetClassFromName("UnityEngine", "Color")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TrailRenderer*), "get_startColor_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ret});
  }
};
// Writing MetadataGetter for method: UnityEngine::TrailRenderer::set_startColor_Injected
// Il2CppName: set_startColor_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TrailRenderer::*)(ByRef<::UnityEngine::Color>)>(&UnityEngine::TrailRenderer::set_startColor_Injected)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Color")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TrailRenderer*), "set_startColor_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::TrailRenderer::get_endColor_Injected
// Il2CppName: get_endColor_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TrailRenderer::*)(ByRef<::UnityEngine::Color>)>(&UnityEngine::TrailRenderer::get_endColor_Injected)> {
  static const MethodInfo* get() {
    static auto* ret = &::il2cpp_utils::GetClassFromName("UnityEngine", "Color")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TrailRenderer*), "get_endColor_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ret});
  }
};
// Writing MetadataGetter for method: UnityEngine::TrailRenderer::set_endColor_Injected
// Il2CppName: set_endColor_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TrailRenderer::*)(ByRef<::UnityEngine::Color>)>(&UnityEngine::TrailRenderer::set_endColor_Injected)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Color")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TrailRenderer*), "set_endColor_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::TrailRenderer::SetPosition_Injected
// Il2CppName: SetPosition_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TrailRenderer::*)(int, ByRef<::UnityEngine::Vector3>)>(&UnityEngine::TrailRenderer::SetPosition_Injected)> {
  static const MethodInfo* get() {
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* position = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TrailRenderer*), "SetPosition_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{index, position});
  }
};
// Writing MetadataGetter for method: UnityEngine::TrailRenderer::GetPosition_Injected
// Il2CppName: GetPosition_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TrailRenderer::*)(int, ByRef<::UnityEngine::Vector3>)>(&UnityEngine::TrailRenderer::GetPosition_Injected)> {
  static const MethodInfo* get() {
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* ret = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TrailRenderer*), "GetPosition_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{index, ret});
  }
};
// Writing MetadataGetter for method: UnityEngine::TrailRenderer::get_textureScale_Injected
// Il2CppName: get_textureScale_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TrailRenderer::*)(ByRef<::UnityEngine::Vector2>)>(&UnityEngine::TrailRenderer::get_textureScale_Injected)> {
  static const MethodInfo* get() {
    static auto* ret = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector2")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TrailRenderer*), "get_textureScale_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ret});
  }
};
// Writing MetadataGetter for method: UnityEngine::TrailRenderer::set_textureScale_Injected
// Il2CppName: set_textureScale_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TrailRenderer::*)(ByRef<::UnityEngine::Vector2>)>(&UnityEngine::TrailRenderer::set_textureScale_Injected)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector2")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TrailRenderer*), "set_textureScale_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::TrailRenderer::AddPosition_Injected
// Il2CppName: AddPosition_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TrailRenderer::*)(ByRef<::UnityEngine::Vector3>)>(&UnityEngine::TrailRenderer::AddPosition_Injected)> {
  static const MethodInfo* get() {
    static auto* position = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TrailRenderer*), "AddPosition_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{position});
  }
};
// Writing MetadataGetter for method: UnityEngine::TrailRenderer::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
