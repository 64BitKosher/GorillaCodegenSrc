// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.ProBuilder.Shapes.Shape
#include "UnityEngine/ProBuilder/Shapes/Shape.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Bounds
  struct Bounds;
  // Forward declaring type: Vector3
  struct Vector3;
  // Forward declaring type: Quaternion
  struct Quaternion;
}
// Forward declaring namespace: UnityEngine::ProBuilder
namespace UnityEngine::ProBuilder {
  // Forward declaring type: ProBuilderMesh
  class ProBuilderMesh;
}
// Completed forward declares
// Type namespace: UnityEngine.ProBuilder.Shapes
namespace UnityEngine::ProBuilder::Shapes {
  // Forward declaring type: Prism
  class Prism;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::ProBuilder::Shapes::Prism);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::ProBuilder::Shapes::Prism*, "UnityEngine.ProBuilder.Shapes", "Prism");
// Type namespace: UnityEngine.ProBuilder.Shapes
namespace UnityEngine::ProBuilder::Shapes {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.ProBuilder.Shapes.Prism
  // [TokenAttribute] Offset: FFFFFFFF
  // [ShapeAttribute] Offset: FFFFFFFF
  class Prism : public ::UnityEngine::ProBuilder::Shapes::Shape {
    public:
    // public override System.Void CopyShape(UnityEngine.ProBuilder.Shapes.Shape shape)
    // Offset: 0x51F019C
    // Implemented from: UnityEngine.ProBuilder.Shapes.Shape
    // Base method: System.Void Shape::CopyShape(UnityEngine.ProBuilder.Shapes.Shape shape)
    void CopyShape(::UnityEngine::ProBuilder::Shapes::Shape* shape);
    // public override UnityEngine.Bounds RebuildMesh(UnityEngine.ProBuilder.ProBuilderMesh mesh, UnityEngine.Vector3 size, UnityEngine.Quaternion rotation)
    // Offset: 0x51F01A0
    // Implemented from: UnityEngine.ProBuilder.Shapes.Shape
    // Base method: UnityEngine.Bounds Shape::RebuildMesh(UnityEngine.ProBuilder.ProBuilderMesh mesh, UnityEngine.Vector3 size, UnityEngine.Quaternion rotation)
    ::UnityEngine::Bounds RebuildMesh(::UnityEngine::ProBuilder::ProBuilderMesh* mesh, ::UnityEngine::Vector3 size, ::UnityEngine::Quaternion rotation);
    // public System.Void .ctor()
    // Offset: 0x51F0980
    // Implemented from: UnityEngine.ProBuilder.Shapes.Shape
    // Base method: System.Void Shape::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static Prism* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ProBuilder::Shapes::Prism::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<Prism*, creationType>()));
    }
  }; // UnityEngine.ProBuilder.Shapes.Prism
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::ProBuilder::Shapes::Prism::CopyShape
// Il2CppName: CopyShape
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::ProBuilder::Shapes::Prism::*)(::UnityEngine::ProBuilder::Shapes::Shape*)>(&UnityEngine::ProBuilder::Shapes::Prism::CopyShape)> {
  static const MethodInfo* get() {
    static auto* shape = &::il2cpp_utils::GetClassFromName("UnityEngine.ProBuilder.Shapes", "Shape")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ProBuilder::Shapes::Prism*), "CopyShape", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{shape});
  }
};
// Writing MetadataGetter for method: UnityEngine::ProBuilder::Shapes::Prism::RebuildMesh
// Il2CppName: RebuildMesh
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Bounds (UnityEngine::ProBuilder::Shapes::Prism::*)(::UnityEngine::ProBuilder::ProBuilderMesh*, ::UnityEngine::Vector3, ::UnityEngine::Quaternion)>(&UnityEngine::ProBuilder::Shapes::Prism::RebuildMesh)> {
  static const MethodInfo* get() {
    static auto* mesh = &::il2cpp_utils::GetClassFromName("UnityEngine.ProBuilder", "ProBuilderMesh")->byval_arg;
    static auto* size = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* rotation = &::il2cpp_utils::GetClassFromName("UnityEngine", "Quaternion")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ProBuilder::Shapes::Prism*), "RebuildMesh", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{mesh, size, rotation});
  }
};
// Writing MetadataGetter for method: UnityEngine::ProBuilder::Shapes::Prism::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
