// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
// Including type: UnityEngine.ProBuilder.PivotLocation
#include "UnityEngine/ProBuilder/PivotLocation.hpp"
// Including type: UnityEngine.Bounds
#include "UnityEngine/Bounds.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::ProBuilder::Shapes
namespace UnityEngine::ProBuilder::Shapes {
  // Forward declaring type: Shape
  class Shape;
}
// Forward declaring namespace: UnityEngine::ProBuilder
namespace UnityEngine::ProBuilder {
  // Forward declaring type: ProBuilderMesh
  class ProBuilderMesh;
}
// Completed forward declares
// Type namespace: UnityEngine.ProBuilder.Shapes
namespace UnityEngine::ProBuilder::Shapes {
  // Forward declaring type: ProBuilderShape
  class ProBuilderShape;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::ProBuilder::Shapes::ProBuilderShape);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::ProBuilder::Shapes::ProBuilderShape*, "UnityEngine.ProBuilder.Shapes", "ProBuilderShape");
// Type namespace: UnityEngine.ProBuilder.Shapes
namespace UnityEngine::ProBuilder::Shapes {
  // Size: 0x94
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.ProBuilder.Shapes.ProBuilderShape
  // [TokenAttribute] Offset: FFFFFFFF
  // [DisallowMultipleComponent] Offset: FFFFFFFF
  // [AddComponentMenu] Offset: FFFFFFFF
  class ProBuilderShape : public ::UnityEngine::MonoBehaviour {
    public:
    public:
    // private UnityEngine.ProBuilder.Shapes.Shape m_Shape
    // Size: 0x8
    // Offset: 0x20
    ::UnityEngine::ProBuilder::Shapes::Shape* m_Shape;
    // Field size check
    static_assert(sizeof(::UnityEngine::ProBuilder::Shapes::Shape*) == 0x8);
    // private UnityEngine.Vector3 m_Size
    // Size: 0xC
    // Offset: 0x28
    ::UnityEngine::Vector3 m_Size;
    // Field size check
    static_assert(sizeof(::UnityEngine::Vector3) == 0xC);
    // private UnityEngine.Quaternion m_Rotation
    // Size: 0x10
    // Offset: 0x34
    ::UnityEngine::Quaternion m_Rotation;
    // Field size check
    static_assert(sizeof(::UnityEngine::Quaternion) == 0x10);
    // Padding between fields: m_Rotation and: m_Mesh
    char __padding2[0x4] = {};
    // private UnityEngine.ProBuilder.ProBuilderMesh m_Mesh
    // Size: 0x8
    // Offset: 0x48
    ::UnityEngine::ProBuilder::ProBuilderMesh* m_Mesh;
    // Field size check
    static_assert(sizeof(::UnityEngine::ProBuilder::ProBuilderMesh*) == 0x8);
    // private UnityEngine.ProBuilder.PivotLocation m_PivotLocation
    // Size: 0x4
    // Offset: 0x50
    ::UnityEngine::ProBuilder::PivotLocation m_PivotLocation;
    // Field size check
    static_assert(sizeof(::UnityEngine::ProBuilder::PivotLocation) == 0x4);
    // private UnityEngine.Vector3 m_PivotPosition
    // Size: 0xC
    // Offset: 0x54
    ::UnityEngine::Vector3 m_PivotPosition;
    // Field size check
    static_assert(sizeof(::UnityEngine::Vector3) == 0xC);
    // System.UInt16 m_UnmodifiedMeshVersion
    // Size: 0x2
    // Offset: 0x60
    uint16_t m_UnmodifiedMeshVersion;
    // Field size check
    static_assert(sizeof(uint16_t) == 0x2);
    // Padding between fields: m_UnmodifiedMeshVersion and: m_EditionBounds
    char __padding6[0x2] = {};
    // private UnityEngine.Bounds m_EditionBounds
    // Size: 0x18
    // Offset: 0x64
    ::UnityEngine::Bounds m_EditionBounds;
    // Field size check
    static_assert(sizeof(::UnityEngine::Bounds) == 0x18);
    // private UnityEngine.Bounds m_ShapeBox
    // Size: 0x18
    // Offset: 0x7C
    ::UnityEngine::Bounds m_ShapeBox;
    // Field size check
    static_assert(sizeof(::UnityEngine::Bounds) == 0x18);
    public:
    // Get instance field reference: private UnityEngine.ProBuilder.Shapes.Shape m_Shape
    [[deprecated("Use field access instead!")]] ::UnityEngine::ProBuilder::Shapes::Shape*& dyn_m_Shape();
    // Get instance field reference: private UnityEngine.Vector3 m_Size
    [[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& dyn_m_Size();
    // Get instance field reference: private UnityEngine.Quaternion m_Rotation
    [[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& dyn_m_Rotation();
    // Get instance field reference: private UnityEngine.ProBuilder.ProBuilderMesh m_Mesh
    [[deprecated("Use field access instead!")]] ::UnityEngine::ProBuilder::ProBuilderMesh*& dyn_m_Mesh();
    // Get instance field reference: private UnityEngine.ProBuilder.PivotLocation m_PivotLocation
    [[deprecated("Use field access instead!")]] ::UnityEngine::ProBuilder::PivotLocation& dyn_m_PivotLocation();
    // Get instance field reference: private UnityEngine.Vector3 m_PivotPosition
    [[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& dyn_m_PivotPosition();
    // Get instance field reference: System.UInt16 m_UnmodifiedMeshVersion
    [[deprecated("Use field access instead!")]] uint16_t& dyn_m_UnmodifiedMeshVersion();
    // Get instance field reference: private UnityEngine.Bounds m_EditionBounds
    [[deprecated("Use field access instead!")]] ::UnityEngine::Bounds& dyn_m_EditionBounds();
    // Get instance field reference: private UnityEngine.Bounds m_ShapeBox
    [[deprecated("Use field access instead!")]] ::UnityEngine::Bounds& dyn_m_ShapeBox();
    // public UnityEngine.ProBuilder.Shapes.Shape get_shape()
    // Offset: 0x51F0988
    ::UnityEngine::ProBuilder::Shapes::Shape* get_shape();
    // public System.Void set_shape(UnityEngine.ProBuilder.Shapes.Shape value)
    // Offset: 0x51F0990
    void set_shape(::UnityEngine::ProBuilder::Shapes::Shape* value);
    // public UnityEngine.ProBuilder.PivotLocation get_pivotLocation()
    // Offset: 0x51F0998
    ::UnityEngine::ProBuilder::PivotLocation get_pivotLocation();
    // public System.Void set_pivotLocation(UnityEngine.ProBuilder.PivotLocation value)
    // Offset: 0x51F09A0
    void set_pivotLocation(::UnityEngine::ProBuilder::PivotLocation value);
    // public UnityEngine.Vector3 get_pivotLocalPosition()
    // Offset: 0x51F09A8
    ::UnityEngine::Vector3 get_pivotLocalPosition();
    // public System.Void set_pivotLocalPosition(UnityEngine.Vector3 value)
    // Offset: 0x51F09B4
    void set_pivotLocalPosition(::UnityEngine::Vector3 value);
    // public UnityEngine.Vector3 get_pivotGlobalPosition()
    // Offset: 0x51F09C0
    ::UnityEngine::Vector3 get_pivotGlobalPosition();
    // public System.Void set_pivotGlobalPosition(UnityEngine.Vector3 value)
    // Offset: 0x51F0B04
    void set_pivotGlobalPosition(::UnityEngine::Vector3 value);
    // public UnityEngine.Vector3 get_size()
    // Offset: 0x51F0B64
    ::UnityEngine::Vector3 get_size();
    // public System.Void set_size(UnityEngine.Vector3 value)
    // Offset: 0x51F0B70
    void set_size(::UnityEngine::Vector3 value);
    // public UnityEngine.Quaternion get_rotation()
    // Offset: 0x51F0C2C
    ::UnityEngine::Quaternion get_rotation();
    // public System.Void set_rotation(UnityEngine.Quaternion value)
    // Offset: 0x51F0C38
    void set_rotation(::UnityEngine::Quaternion value);
    // public UnityEngine.Bounds get_editionBounds()
    // Offset: 0x51F0C44
    ::UnityEngine::Bounds get_editionBounds();
    // public UnityEngine.Bounds get_shapeBox()
    // Offset: 0x51F0D00
    ::UnityEngine::Bounds get_shapeBox();
    // public System.Boolean get_isEditable()
    // Offset: 0x51F0D14
    bool get_isEditable();
    // public UnityEngine.ProBuilder.ProBuilderMesh get_mesh()
    // Offset: 0x51F09F4
    ::UnityEngine::ProBuilder::ProBuilderMesh* get_mesh();
    // private System.Void OnValidate()
    // Offset: 0x51F0D3C
    void OnValidate();
    // System.Void UpdateComponent()
    // Offset: 0x51F0DE0
    void UpdateComponent();
    // System.Void UpdateBounds(UnityEngine.Bounds bounds)
    // Offset: 0x51F11D0
    void UpdateBounds(::UnityEngine::Bounds bounds);
    // System.Void Rebuild(UnityEngine.Bounds bounds, UnityEngine.Quaternion rotation, UnityEngine.Vector3 cornerPivot)
    // Offset: 0x51F1260
    void Rebuild(::UnityEngine::Bounds bounds, ::UnityEngine::Quaternion rotation, ::UnityEngine::Vector3 cornerPivot);
    // private System.Void Rebuild()
    // Offset: 0x51F1024
    void Rebuild();
    // System.Void SetShape(UnityEngine.ProBuilder.Shapes.Shape shape, UnityEngine.ProBuilder.PivotLocation location)
    // Offset: 0x51F156C
    void SetShape(::UnityEngine::ProBuilder::Shapes::Shape* shape, ::UnityEngine::ProBuilder::PivotLocation location);
    // System.Void RotateInsideBounds(UnityEngine.Quaternion deltaRotation)
    // Offset: 0x51F16F8
    void RotateInsideBounds(::UnityEngine::Quaternion deltaRotation);
    // private System.Void ResetPivot(UnityEngine.ProBuilder.ProBuilderMesh mesh, UnityEngine.Vector3 size, UnityEngine.Quaternion rotation)
    // Offset: 0x51F0E14
    void ResetPivot(::UnityEngine::ProBuilder::ProBuilderMesh* mesh, ::UnityEngine::Vector3 size, ::UnityEngine::Quaternion rotation);
    // private System.Void RebuildPivot(UnityEngine.ProBuilder.ProBuilderMesh mesh, UnityEngine.Vector3 size, UnityEngine.Quaternion rotation)
    // Offset: 0x51F133C
    void RebuildPivot(::UnityEngine::ProBuilder::ProBuilderMesh* mesh, ::UnityEngine::Vector3 size, ::UnityEngine::Quaternion rotation);
    // public System.Void .ctor()
    // Offset: 0x51F17CC
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static ProBuilderShape* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ProBuilder::Shapes::ProBuilderShape::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<ProBuilderShape*, creationType>()));
    }
  }; // UnityEngine.ProBuilder.Shapes.ProBuilderShape
  #pragma pack(pop)
  static check_size<sizeof(ProBuilderShape), 124 + sizeof(::UnityEngine::Bounds)> __UnityEngine_ProBuilder_Shapes_ProBuilderShapeSizeCheck;
  static_assert(sizeof(ProBuilderShape) == 0x94);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::ProBuilder::Shapes::ProBuilderShape::get_shape
// Il2CppName: get_shape
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::ProBuilder::Shapes::Shape* (UnityEngine::ProBuilder::Shapes::ProBuilderShape::*)()>(&UnityEngine::ProBuilder::Shapes::ProBuilderShape::get_shape)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ProBuilder::Shapes::ProBuilderShape*), "get_shape", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::ProBuilder::Shapes::ProBuilderShape::set_shape
// Il2CppName: set_shape
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::ProBuilder::Shapes::ProBuilderShape::*)(::UnityEngine::ProBuilder::Shapes::Shape*)>(&UnityEngine::ProBuilder::Shapes::ProBuilderShape::set_shape)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.ProBuilder.Shapes", "Shape")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ProBuilder::Shapes::ProBuilderShape*), "set_shape", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::ProBuilder::Shapes::ProBuilderShape::get_pivotLocation
// Il2CppName: get_pivotLocation
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::ProBuilder::PivotLocation (UnityEngine::ProBuilder::Shapes::ProBuilderShape::*)()>(&UnityEngine::ProBuilder::Shapes::ProBuilderShape::get_pivotLocation)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ProBuilder::Shapes::ProBuilderShape*), "get_pivotLocation", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::ProBuilder::Shapes::ProBuilderShape::set_pivotLocation
// Il2CppName: set_pivotLocation
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::ProBuilder::Shapes::ProBuilderShape::*)(::UnityEngine::ProBuilder::PivotLocation)>(&UnityEngine::ProBuilder::Shapes::ProBuilderShape::set_pivotLocation)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.ProBuilder", "PivotLocation")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ProBuilder::Shapes::ProBuilderShape*), "set_pivotLocation", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::ProBuilder::Shapes::ProBuilderShape::get_pivotLocalPosition
// Il2CppName: get_pivotLocalPosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector3 (UnityEngine::ProBuilder::Shapes::ProBuilderShape::*)()>(&UnityEngine::ProBuilder::Shapes::ProBuilderShape::get_pivotLocalPosition)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ProBuilder::Shapes::ProBuilderShape*), "get_pivotLocalPosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::ProBuilder::Shapes::ProBuilderShape::set_pivotLocalPosition
// Il2CppName: set_pivotLocalPosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::ProBuilder::Shapes::ProBuilderShape::*)(::UnityEngine::Vector3)>(&UnityEngine::ProBuilder::Shapes::ProBuilderShape::set_pivotLocalPosition)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ProBuilder::Shapes::ProBuilderShape*), "set_pivotLocalPosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::ProBuilder::Shapes::ProBuilderShape::get_pivotGlobalPosition
// Il2CppName: get_pivotGlobalPosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector3 (UnityEngine::ProBuilder::Shapes::ProBuilderShape::*)()>(&UnityEngine::ProBuilder::Shapes::ProBuilderShape::get_pivotGlobalPosition)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ProBuilder::Shapes::ProBuilderShape*), "get_pivotGlobalPosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::ProBuilder::Shapes::ProBuilderShape::set_pivotGlobalPosition
// Il2CppName: set_pivotGlobalPosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::ProBuilder::Shapes::ProBuilderShape::*)(::UnityEngine::Vector3)>(&UnityEngine::ProBuilder::Shapes::ProBuilderShape::set_pivotGlobalPosition)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ProBuilder::Shapes::ProBuilderShape*), "set_pivotGlobalPosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::ProBuilder::Shapes::ProBuilderShape::get_size
// Il2CppName: get_size
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector3 (UnityEngine::ProBuilder::Shapes::ProBuilderShape::*)()>(&UnityEngine::ProBuilder::Shapes::ProBuilderShape::get_size)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ProBuilder::Shapes::ProBuilderShape*), "get_size", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::ProBuilder::Shapes::ProBuilderShape::set_size
// Il2CppName: set_size
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::ProBuilder::Shapes::ProBuilderShape::*)(::UnityEngine::Vector3)>(&UnityEngine::ProBuilder::Shapes::ProBuilderShape::set_size)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ProBuilder::Shapes::ProBuilderShape*), "set_size", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::ProBuilder::Shapes::ProBuilderShape::get_rotation
// Il2CppName: get_rotation
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Quaternion (UnityEngine::ProBuilder::Shapes::ProBuilderShape::*)()>(&UnityEngine::ProBuilder::Shapes::ProBuilderShape::get_rotation)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ProBuilder::Shapes::ProBuilderShape*), "get_rotation", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::ProBuilder::Shapes::ProBuilderShape::set_rotation
// Il2CppName: set_rotation
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::ProBuilder::Shapes::ProBuilderShape::*)(::UnityEngine::Quaternion)>(&UnityEngine::ProBuilder::Shapes::ProBuilderShape::set_rotation)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Quaternion")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ProBuilder::Shapes::ProBuilderShape*), "set_rotation", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::ProBuilder::Shapes::ProBuilderShape::get_editionBounds
// Il2CppName: get_editionBounds
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Bounds (UnityEngine::ProBuilder::Shapes::ProBuilderShape::*)()>(&UnityEngine::ProBuilder::Shapes::ProBuilderShape::get_editionBounds)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ProBuilder::Shapes::ProBuilderShape*), "get_editionBounds", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::ProBuilder::Shapes::ProBuilderShape::get_shapeBox
// Il2CppName: get_shapeBox
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Bounds (UnityEngine::ProBuilder::Shapes::ProBuilderShape::*)()>(&UnityEngine::ProBuilder::Shapes::ProBuilderShape::get_shapeBox)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ProBuilder::Shapes::ProBuilderShape*), "get_shapeBox", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::ProBuilder::Shapes::ProBuilderShape::get_isEditable
// Il2CppName: get_isEditable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::ProBuilder::Shapes::ProBuilderShape::*)()>(&UnityEngine::ProBuilder::Shapes::ProBuilderShape::get_isEditable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ProBuilder::Shapes::ProBuilderShape*), "get_isEditable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::ProBuilder::Shapes::ProBuilderShape::get_mesh
// Il2CppName: get_mesh
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::ProBuilder::ProBuilderMesh* (UnityEngine::ProBuilder::Shapes::ProBuilderShape::*)()>(&UnityEngine::ProBuilder::Shapes::ProBuilderShape::get_mesh)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ProBuilder::Shapes::ProBuilderShape*), "get_mesh", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::ProBuilder::Shapes::ProBuilderShape::OnValidate
// Il2CppName: OnValidate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::ProBuilder::Shapes::ProBuilderShape::*)()>(&UnityEngine::ProBuilder::Shapes::ProBuilderShape::OnValidate)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ProBuilder::Shapes::ProBuilderShape*), "OnValidate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::ProBuilder::Shapes::ProBuilderShape::UpdateComponent
// Il2CppName: UpdateComponent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::ProBuilder::Shapes::ProBuilderShape::*)()>(&UnityEngine::ProBuilder::Shapes::ProBuilderShape::UpdateComponent)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ProBuilder::Shapes::ProBuilderShape*), "UpdateComponent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::ProBuilder::Shapes::ProBuilderShape::UpdateBounds
// Il2CppName: UpdateBounds
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::ProBuilder::Shapes::ProBuilderShape::*)(::UnityEngine::Bounds)>(&UnityEngine::ProBuilder::Shapes::ProBuilderShape::UpdateBounds)> {
  static const MethodInfo* get() {
    static auto* bounds = &::il2cpp_utils::GetClassFromName("UnityEngine", "Bounds")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ProBuilder::Shapes::ProBuilderShape*), "UpdateBounds", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{bounds});
  }
};
// Writing MetadataGetter for method: UnityEngine::ProBuilder::Shapes::ProBuilderShape::Rebuild
// Il2CppName: Rebuild
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::ProBuilder::Shapes::ProBuilderShape::*)(::UnityEngine::Bounds, ::UnityEngine::Quaternion, ::UnityEngine::Vector3)>(&UnityEngine::ProBuilder::Shapes::ProBuilderShape::Rebuild)> {
  static const MethodInfo* get() {
    static auto* bounds = &::il2cpp_utils::GetClassFromName("UnityEngine", "Bounds")->byval_arg;
    static auto* rotation = &::il2cpp_utils::GetClassFromName("UnityEngine", "Quaternion")->byval_arg;
    static auto* cornerPivot = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ProBuilder::Shapes::ProBuilderShape*), "Rebuild", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{bounds, rotation, cornerPivot});
  }
};
// Writing MetadataGetter for method: UnityEngine::ProBuilder::Shapes::ProBuilderShape::Rebuild
// Il2CppName: Rebuild
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::ProBuilder::Shapes::ProBuilderShape::*)()>(&UnityEngine::ProBuilder::Shapes::ProBuilderShape::Rebuild)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ProBuilder::Shapes::ProBuilderShape*), "Rebuild", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::ProBuilder::Shapes::ProBuilderShape::SetShape
// Il2CppName: SetShape
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::ProBuilder::Shapes::ProBuilderShape::*)(::UnityEngine::ProBuilder::Shapes::Shape*, ::UnityEngine::ProBuilder::PivotLocation)>(&UnityEngine::ProBuilder::Shapes::ProBuilderShape::SetShape)> {
  static const MethodInfo* get() {
    static auto* shape = &::il2cpp_utils::GetClassFromName("UnityEngine.ProBuilder.Shapes", "Shape")->byval_arg;
    static auto* location = &::il2cpp_utils::GetClassFromName("UnityEngine.ProBuilder", "PivotLocation")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ProBuilder::Shapes::ProBuilderShape*), "SetShape", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{shape, location});
  }
};
// Writing MetadataGetter for method: UnityEngine::ProBuilder::Shapes::ProBuilderShape::RotateInsideBounds
// Il2CppName: RotateInsideBounds
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::ProBuilder::Shapes::ProBuilderShape::*)(::UnityEngine::Quaternion)>(&UnityEngine::ProBuilder::Shapes::ProBuilderShape::RotateInsideBounds)> {
  static const MethodInfo* get() {
    static auto* deltaRotation = &::il2cpp_utils::GetClassFromName("UnityEngine", "Quaternion")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ProBuilder::Shapes::ProBuilderShape*), "RotateInsideBounds", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{deltaRotation});
  }
};
// Writing MetadataGetter for method: UnityEngine::ProBuilder::Shapes::ProBuilderShape::ResetPivot
// Il2CppName: ResetPivot
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::ProBuilder::Shapes::ProBuilderShape::*)(::UnityEngine::ProBuilder::ProBuilderMesh*, ::UnityEngine::Vector3, ::UnityEngine::Quaternion)>(&UnityEngine::ProBuilder::Shapes::ProBuilderShape::ResetPivot)> {
  static const MethodInfo* get() {
    static auto* mesh = &::il2cpp_utils::GetClassFromName("UnityEngine.ProBuilder", "ProBuilderMesh")->byval_arg;
    static auto* size = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* rotation = &::il2cpp_utils::GetClassFromName("UnityEngine", "Quaternion")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ProBuilder::Shapes::ProBuilderShape*), "ResetPivot", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{mesh, size, rotation});
  }
};
// Writing MetadataGetter for method: UnityEngine::ProBuilder::Shapes::ProBuilderShape::RebuildPivot
// Il2CppName: RebuildPivot
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::ProBuilder::Shapes::ProBuilderShape::*)(::UnityEngine::ProBuilder::ProBuilderMesh*, ::UnityEngine::Vector3, ::UnityEngine::Quaternion)>(&UnityEngine::ProBuilder::Shapes::ProBuilderShape::RebuildPivot)> {
  static const MethodInfo* get() {
    static auto* mesh = &::il2cpp_utils::GetClassFromName("UnityEngine.ProBuilder", "ProBuilderMesh")->byval_arg;
    static auto* size = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* rotation = &::il2cpp_utils::GetClassFromName("UnityEngine", "Quaternion")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ProBuilder::Shapes::ProBuilderShape*), "RebuildPivot", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{mesh, size, rotation});
  }
};
// Writing MetadataGetter for method: UnityEngine::ProBuilder::Shapes::ProBuilderShape::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
