// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.ProBuilder.PivotLocation
#include "UnityEngine/ProBuilder/PivotLocation.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::ProBuilder::Shapes
namespace UnityEngine::ProBuilder::Shapes {
  // Forward declaring type: Shape
  class Shape;
}
// Forward declaring namespace: UnityEngine::ProBuilder
namespace UnityEngine::ProBuilder {
  // Forward declaring type: ProBuilderMesh
  class ProBuilderMesh;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Type
  class Type;
}
// Completed forward declares
// Type namespace: UnityEngine.ProBuilder
namespace UnityEngine::ProBuilder {
  // Forward declaring type: ShapeFactory
  class ShapeFactory;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::ProBuilder::ShapeFactory);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::ProBuilder::ShapeFactory*, "UnityEngine.ProBuilder", "ShapeFactory");
// Type namespace: UnityEngine.ProBuilder
namespace UnityEngine::ProBuilder {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.ProBuilder.ShapeFactory
  // [TokenAttribute] Offset: FFFFFFFF
  class ShapeFactory : public ::Il2CppObject {
    public:
    // static public UnityEngine.ProBuilder.ProBuilderMesh Instantiate(UnityEngine.ProBuilder.PivotLocation pivotType)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class T>
    static ::UnityEngine::ProBuilder::ProBuilderMesh* Instantiate(::UnityEngine::ProBuilder::PivotLocation pivotType) {
      static_assert(std::is_convertible_v<T, ::UnityEngine::ProBuilder::Shapes::Shape*>);
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ProBuilder::ShapeFactory::Instantiate");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.ProBuilder", "ShapeFactory", "Instantiate", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pivotType)})));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}));
      return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::ProBuilder::ProBuilderMesh*, false>(static_cast<Il2CppObject*>(nullptr), ___generic__method, pivotType);
    }
    // static public UnityEngine.ProBuilder.ProBuilderMesh Instantiate(System.Type shapeType, UnityEngine.ProBuilder.PivotLocation pivotType)
    // Offset: 0x51D2A38
    static ::UnityEngine::ProBuilder::ProBuilderMesh* Instantiate(::System::Type* shapeType, ::UnityEngine::ProBuilder::PivotLocation pivotType);
    // static public UnityEngine.ProBuilder.ProBuilderMesh Instantiate(UnityEngine.ProBuilder.Shapes.Shape shape, UnityEngine.ProBuilder.PivotLocation pivotType)
    // Offset: 0x51D2CC4
    static ::UnityEngine::ProBuilder::ProBuilderMesh* Instantiate(::UnityEngine::ProBuilder::Shapes::Shape* shape, ::UnityEngine::ProBuilder::PivotLocation pivotType);
  }; // UnityEngine.ProBuilder.ShapeFactory
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::ProBuilder::ShapeFactory::Instantiate
// Il2CppName: Instantiate
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: UnityEngine::ProBuilder::ShapeFactory::Instantiate
// Il2CppName: Instantiate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::ProBuilder::ProBuilderMesh* (*)(::System::Type*, ::UnityEngine::ProBuilder::PivotLocation)>(&UnityEngine::ProBuilder::ShapeFactory::Instantiate)> {
  static const MethodInfo* get() {
    static auto* shapeType = &::il2cpp_utils::GetClassFromName("System", "Type")->byval_arg;
    static auto* pivotType = &::il2cpp_utils::GetClassFromName("UnityEngine.ProBuilder", "PivotLocation")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ProBuilder::ShapeFactory*), "Instantiate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{shapeType, pivotType});
  }
};
// Writing MetadataGetter for method: UnityEngine::ProBuilder::ShapeFactory::Instantiate
// Il2CppName: Instantiate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::ProBuilder::ProBuilderMesh* (*)(::UnityEngine::ProBuilder::Shapes::Shape*, ::UnityEngine::ProBuilder::PivotLocation)>(&UnityEngine::ProBuilder::ShapeFactory::Instantiate)> {
  static const MethodInfo* get() {
    static auto* shape = &::il2cpp_utils::GetClassFromName("UnityEngine.ProBuilder.Shapes", "Shape")->byval_arg;
    static auto* pivotType = &::il2cpp_utils::GetClassFromName("UnityEngine.ProBuilder", "PivotLocation")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ProBuilder::ShapeFactory*), "Instantiate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{shape, pivotType});
  }
};
