// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Int32
#include "System/Int32.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::UIElements
namespace UnityEngine::UIElements {
  // Forward declaring type: VisualElement
  class VisualElement;
  // Forward declaring type: ObjectPool`1<T>
  template<typename T>
  class ObjectPool_1;
  // Forward declaring type: EventBase
  class EventBase;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Completed forward declares
// Type namespace: UnityEngine.UIElements
namespace UnityEngine::UIElements {
  // Forward declaring type: PropagationPaths
  class PropagationPaths;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::UIElements::PropagationPaths);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::UIElements::PropagationPaths*, "UnityEngine.UIElements", "PropagationPaths");
// Type namespace: UnityEngine.UIElements
namespace UnityEngine::UIElements {
  // Size: 0x28
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.UIElements.PropagationPaths
  // [TokenAttribute] Offset: FFFFFFFF
  class PropagationPaths : public ::Il2CppObject {
    public:
    // Nested type: ::UnityEngine::UIElements::PropagationPaths::$$c
    class $$c;
    public:
    // public readonly System.Collections.Generic.List`1<UnityEngine.UIElements.VisualElement> trickleDownPath
    // Size: 0x8
    // Offset: 0x10
    ::System::Collections::Generic::List_1<::UnityEngine::UIElements::VisualElement*>* trickleDownPath;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::UnityEngine::UIElements::VisualElement*>*) == 0x8);
    // public readonly System.Collections.Generic.List`1<UnityEngine.UIElements.VisualElement> targetElements
    // Size: 0x8
    // Offset: 0x18
    ::System::Collections::Generic::List_1<::UnityEngine::UIElements::VisualElement*>* targetElements;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::UnityEngine::UIElements::VisualElement*>*) == 0x8);
    // public readonly System.Collections.Generic.List`1<UnityEngine.UIElements.VisualElement> bubbleUpPath
    // Size: 0x8
    // Offset: 0x20
    ::System::Collections::Generic::List_1<::UnityEngine::UIElements::VisualElement*>* bubbleUpPath;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::UnityEngine::UIElements::VisualElement*>*) == 0x8);
    public:
    // Get static field: static private readonly UnityEngine.UIElements.ObjectPool`1<UnityEngine.UIElements.PropagationPaths> s_Pool
    static ::UnityEngine::UIElements::ObjectPool_1<::UnityEngine::UIElements::PropagationPaths*>* _get_s_Pool();
    // Set static field: static private readonly UnityEngine.UIElements.ObjectPool`1<UnityEngine.UIElements.PropagationPaths> s_Pool
    static void _set_s_Pool(::UnityEngine::UIElements::ObjectPool_1<::UnityEngine::UIElements::PropagationPaths*>* value);
    // static field const value: static private System.Int32 k_DefaultPropagationDepth
    static constexpr const int k_DefaultPropagationDepth = 16;
    // Get static field: static private System.Int32 k_DefaultPropagationDepth
    static int _get_k_DefaultPropagationDepth();
    // Set static field: static private System.Int32 k_DefaultPropagationDepth
    static void _set_k_DefaultPropagationDepth(int value);
    // static field const value: static private System.Int32 k_DefaultTargetCount
    static constexpr const int k_DefaultTargetCount = 4;
    // Get static field: static private System.Int32 k_DefaultTargetCount
    static int _get_k_DefaultTargetCount();
    // Set static field: static private System.Int32 k_DefaultTargetCount
    static void _set_k_DefaultTargetCount(int value);
    // Get instance field reference: public readonly System.Collections.Generic.List`1<UnityEngine.UIElements.VisualElement> trickleDownPath
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::UIElements::VisualElement*>*& dyn_trickleDownPath();
    // Get instance field reference: public readonly System.Collections.Generic.List`1<UnityEngine.UIElements.VisualElement> targetElements
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::UIElements::VisualElement*>*& dyn_targetElements();
    // Get instance field reference: public readonly System.Collections.Generic.List`1<UnityEngine.UIElements.VisualElement> bubbleUpPath
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::UIElements::VisualElement*>*& dyn_bubbleUpPath();
    // public System.Void .ctor()
    // Offset: 0x5657668
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static PropagationPaths* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PropagationPaths::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<PropagationPaths*, creationType>()));
    }
    // static public UnityEngine.UIElements.PropagationPaths Build(UnityEngine.UIElements.VisualElement elem, UnityEngine.UIElements.EventBase evt)
    // Offset: 0x5645DE0
    static ::UnityEngine::UIElements::PropagationPaths* Build(::UnityEngine::UIElements::VisualElement* elem, ::UnityEngine::UIElements::EventBase* evt);
    // public System.Void Release()
    // Offset: 0x564A2D0
    void Release();
    // static private System.Void .cctor()
    // Offset: 0x5657744
    static void _cctor();
  }; // UnityEngine.UIElements.PropagationPaths
  #pragma pack(pop)
  static check_size<sizeof(PropagationPaths), 32 + sizeof(::System::Collections::Generic::List_1<::UnityEngine::UIElements::VisualElement*>*)> __UnityEngine_UIElements_PropagationPathsSizeCheck;
  static_assert(sizeof(PropagationPaths) == 0x28);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::UIElements::PropagationPaths::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::UIElements::PropagationPaths::Build
// Il2CppName: Build
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::PropagationPaths* (*)(::UnityEngine::UIElements::VisualElement*, ::UnityEngine::UIElements::EventBase*)>(&UnityEngine::UIElements::PropagationPaths::Build)> {
  static const MethodInfo* get() {
    static auto* elem = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "VisualElement")->byval_arg;
    static auto* evt = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "EventBase")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::PropagationPaths*), "Build", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{elem, evt});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::PropagationPaths::Release
// Il2CppName: Release
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::PropagationPaths::*)()>(&UnityEngine::UIElements::PropagationPaths::Release)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::PropagationPaths*), "Release", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::PropagationPaths::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&UnityEngine::UIElements::PropagationPaths::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::PropagationPaths*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
