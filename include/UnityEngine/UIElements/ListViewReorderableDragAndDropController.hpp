// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.UIElements.BaseReorderableDragAndDropController
#include "UnityEngine/UIElements/BaseReorderableDragAndDropController.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::UIElements
namespace UnityEngine::UIElements {
  // Forward declaring type: BaseListView
  class BaseListView;
  // Skipping declaration: DragVisualMode because it is already included!
  // Forward declaring type: IListDragAndDropArgs
  class IListDragAndDropArgs;
}
// Completed forward declares
// Type namespace: UnityEngine.UIElements
namespace UnityEngine::UIElements {
  // Forward declaring type: ListViewReorderableDragAndDropController
  class ListViewReorderableDragAndDropController;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::UIElements::ListViewReorderableDragAndDropController);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::UIElements::ListViewReorderableDragAndDropController*, "UnityEngine.UIElements", "ListViewReorderableDragAndDropController");
// Type namespace: UnityEngine.UIElements
namespace UnityEngine::UIElements {
  // Size: 0x30
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.UIElements.ListViewReorderableDragAndDropController
  // [TokenAttribute] Offset: FFFFFFFF
  class ListViewReorderableDragAndDropController : public ::UnityEngine::UIElements::BaseReorderableDragAndDropController {
    public:
    // Writing base type padding for base size: 0x21 to desired offset: 0x28
    char ___base_padding[0x7] = {};
    public:
    // protected readonly UnityEngine.UIElements.BaseListView m_ListView
    // Size: 0x8
    // Offset: 0x28
    ::UnityEngine::UIElements::BaseListView* m_ListView;
    // Field size check
    static_assert(sizeof(::UnityEngine::UIElements::BaseListView*) == 0x8);
    public:
    // Creating conversion operator: operator ::UnityEngine::UIElements::BaseListView*
    constexpr operator ::UnityEngine::UIElements::BaseListView*() const noexcept {
      return m_ListView;
    }
    // Get instance field reference: protected readonly UnityEngine.UIElements.BaseListView m_ListView
    [[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::BaseListView*& dyn_m_ListView();
    // public System.Void .ctor(UnityEngine.UIElements.BaseListView view)
    // Offset: 0x5642000
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static ListViewReorderableDragAndDropController* New_ctor(::UnityEngine::UIElements::BaseListView* view) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::ListViewReorderableDragAndDropController::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<ListViewReorderableDragAndDropController*, creationType>(view)));
    }
    // public override UnityEngine.UIElements.DragVisualMode HandleDragAndDrop(UnityEngine.UIElements.IListDragAndDropArgs args)
    // Offset: 0x564202C
    // Implemented from: UnityEngine.UIElements.BaseReorderableDragAndDropController
    // Base method: UnityEngine.UIElements.DragVisualMode BaseReorderableDragAndDropController::HandleDragAndDrop(UnityEngine.UIElements.IListDragAndDropArgs args)
    ::UnityEngine::UIElements::DragVisualMode HandleDragAndDrop(::UnityEngine::UIElements::IListDragAndDropArgs* args);
    // public override System.Void OnDrop(UnityEngine.UIElements.IListDragAndDropArgs args)
    // Offset: 0x5642174
    // Implemented from: UnityEngine.UIElements.BaseReorderableDragAndDropController
    // Base method: System.Void BaseReorderableDragAndDropController::OnDrop(UnityEngine.UIElements.IListDragAndDropArgs args)
    void OnDrop(::UnityEngine::UIElements::IListDragAndDropArgs* args);
  }; // UnityEngine.UIElements.ListViewReorderableDragAndDropController
  #pragma pack(pop)
  static check_size<sizeof(ListViewReorderableDragAndDropController), 40 + sizeof(::UnityEngine::UIElements::BaseListView*)> __UnityEngine_UIElements_ListViewReorderableDragAndDropControllerSizeCheck;
  static_assert(sizeof(ListViewReorderableDragAndDropController) == 0x30);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::UIElements::ListViewReorderableDragAndDropController::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::UIElements::ListViewReorderableDragAndDropController::HandleDragAndDrop
// Il2CppName: HandleDragAndDrop
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::DragVisualMode (UnityEngine::UIElements::ListViewReorderableDragAndDropController::*)(::UnityEngine::UIElements::IListDragAndDropArgs*)>(&UnityEngine::UIElements::ListViewReorderableDragAndDropController::HandleDragAndDrop)> {
  static const MethodInfo* get() {
    static auto* args = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "IListDragAndDropArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::ListViewReorderableDragAndDropController*), "HandleDragAndDrop", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{args});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::ListViewReorderableDragAndDropController::OnDrop
// Il2CppName: OnDrop
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::ListViewReorderableDragAndDropController::*)(::UnityEngine::UIElements::IListDragAndDropArgs*)>(&UnityEngine::UIElements::ListViewReorderableDragAndDropController::OnDrop)> {
  static const MethodInfo* get() {
    static auto* args = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "IListDragAndDropArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::ListViewReorderableDragAndDropController*), "OnDrop", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{args});
  }
};
