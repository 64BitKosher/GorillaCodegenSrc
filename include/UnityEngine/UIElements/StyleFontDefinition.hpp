// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Including type: UnityEngine.UIElements.IStyleValue`1
#include "UnityEngine/UIElements/IStyleValue_1.hpp"
// Including type: UnityEngine.UIElements.FontDefinition
#include "UnityEngine/UIElements/FontDefinition.hpp"
// Completed includes
// Type namespace: UnityEngine.UIElements
namespace UnityEngine::UIElements {
  // Forward declaring type: StyleFontDefinition
  struct StyleFontDefinition;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::UIElements::StyleFontDefinition, "UnityEngine.UIElements", "StyleFontDefinition");
// Type namespace: UnityEngine.UIElements
namespace UnityEngine::UIElements {
  // Size: 0x18
  #pragma pack(push, 1)
  // WARNING Layout: Sequential may not be correctly taken into account!
  // Autogenerated type: UnityEngine.UIElements.StyleFontDefinition
  // [TokenAttribute] Offset: FFFFFFFF
  struct StyleFontDefinition/*, public ::System::ValueType, public ::UnityEngine::UIElements::IStyleValue_1<::UnityEngine::UIElements::FontDefinition>, public ::System::IEquatable_1<::UnityEngine::UIElements::StyleFontDefinition>*/ {
    public:
    public:
    // private UnityEngine.UIElements.StyleKeyword m_Keyword
    // Size: 0x4
    // Offset: 0x0
    ::UnityEngine::UIElements::StyleKeyword m_Keyword;
    // Field size check
    static_assert(sizeof(::UnityEngine::UIElements::StyleKeyword) == 0x4);
    // Padding between fields: m_Keyword and: m_Value
    char __padding0[0x4] = {};
    // private UnityEngine.UIElements.FontDefinition m_Value
    // Size: 0x10
    // Offset: 0x8
    ::UnityEngine::UIElements::FontDefinition m_Value;
    // Field size check
    static_assert(sizeof(::UnityEngine::UIElements::FontDefinition) == 0x10);
    public:
    // Creating value type constructor for type: StyleFontDefinition
    constexpr StyleFontDefinition(::UnityEngine::UIElements::StyleKeyword m_Keyword_ = {}, ::UnityEngine::UIElements::FontDefinition m_Value_ = {}) noexcept : m_Keyword{m_Keyword_}, m_Value{m_Value_} {}
    // Creating interface conversion operator: operator ::System::ValueType
    operator ::System::ValueType() noexcept {
      return *reinterpret_cast<::System::ValueType*>(this);
    }
    // Creating interface conversion operator: operator ::UnityEngine::UIElements::IStyleValue_1<::UnityEngine::UIElements::FontDefinition>
    operator ::UnityEngine::UIElements::IStyleValue_1<::UnityEngine::UIElements::FontDefinition>() noexcept {
      return *reinterpret_cast<::UnityEngine::UIElements::IStyleValue_1<::UnityEngine::UIElements::FontDefinition>*>(this);
    }
    // Creating interface conversion operator: operator ::System::IEquatable_1<::UnityEngine::UIElements::StyleFontDefinition>
    operator ::System::IEquatable_1<::UnityEngine::UIElements::StyleFontDefinition>() noexcept {
      return *reinterpret_cast<::System::IEquatable_1<::UnityEngine::UIElements::StyleFontDefinition>*>(this);
    }
    // Get instance field reference: private UnityEngine.UIElements.StyleKeyword m_Keyword
    [[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::StyleKeyword& dyn_m_Keyword();
    // Get instance field reference: private UnityEngine.UIElements.FontDefinition m_Value
    [[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::FontDefinition& dyn_m_Value();
    // public UnityEngine.UIElements.FontDefinition get_value()
    // Offset: 0x56A90D8
    ::UnityEngine::UIElements::FontDefinition get_value();
    // public UnityEngine.UIElements.StyleKeyword get_keyword()
    // Offset: 0x56A910C
    ::UnityEngine::UIElements::StyleKeyword get_keyword();
    // public System.Void .ctor(UnityEngine.UIElements.FontDefinition f)
    // Offset: 0x56A9114
    StyleFontDefinition(::UnityEngine::UIElements::FontDefinition f);
    // System.Void .ctor(UnityEngine.UIElements.FontDefinition f, UnityEngine.UIElements.StyleKeyword keyword)
    // Offset: 0x56A9130
    StyleFontDefinition(::UnityEngine::UIElements::FontDefinition f, ::UnityEngine::UIElements::StyleKeyword keyword);
    // public System.Boolean Equals(UnityEngine.UIElements.StyleFontDefinition other)
    // Offset: 0x56A9194
    bool Equals(::UnityEngine::UIElements::StyleFontDefinition other);
    // public override System.Boolean Equals(System.Object obj)
    // Offset: 0x56A91C0
    // Implemented from: System.ValueType
    // Base method: System.Boolean ValueType::Equals(System.Object obj)
    bool Equals(::Il2CppObject* obj);
    // public override System.Int32 GetHashCode()
    // Offset: 0x56A924C
    // Implemented from: System.ValueType
    // Base method: System.Int32 ValueType::GetHashCode()
    int GetHashCode();
  }; // UnityEngine.UIElements.StyleFontDefinition
  #pragma pack(pop)
  static check_size<sizeof(StyleFontDefinition), 8 + sizeof(::UnityEngine::UIElements::FontDefinition)> __UnityEngine_UIElements_StyleFontDefinitionSizeCheck;
  static_assert(sizeof(StyleFontDefinition) == 0x18);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::UIElements::StyleFontDefinition::get_value
// Il2CppName: get_value
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::FontDefinition (UnityEngine::UIElements::StyleFontDefinition::*)()>(&UnityEngine::UIElements::StyleFontDefinition::get_value)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::StyleFontDefinition), "get_value", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::StyleFontDefinition::get_keyword
// Il2CppName: get_keyword
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::StyleKeyword (UnityEngine::UIElements::StyleFontDefinition::*)()>(&UnityEngine::UIElements::StyleFontDefinition::get_keyword)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::StyleFontDefinition), "get_keyword", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::StyleFontDefinition::StyleFontDefinition
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::UIElements::StyleFontDefinition::StyleFontDefinition
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::UIElements::StyleFontDefinition::Equals
// Il2CppName: Equals
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::StyleFontDefinition::*)(::UnityEngine::UIElements::StyleFontDefinition)>(&UnityEngine::UIElements::StyleFontDefinition::Equals)> {
  static const MethodInfo* get() {
    static auto* other = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "StyleFontDefinition")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::StyleFontDefinition), "Equals", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{other});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::StyleFontDefinition::Equals
// Il2CppName: Equals
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::StyleFontDefinition::*)(::Il2CppObject*)>(&UnityEngine::UIElements::StyleFontDefinition::Equals)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::StyleFontDefinition), "Equals", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::StyleFontDefinition::GetHashCode
// Il2CppName: GetHashCode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::UIElements::StyleFontDefinition::*)()>(&UnityEngine::UIElements::StyleFontDefinition::GetHashCode)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::StyleFontDefinition), "GetHashCode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
