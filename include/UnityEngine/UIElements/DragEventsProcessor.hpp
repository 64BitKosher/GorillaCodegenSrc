// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: System.Enum
#include "System/Enum.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::UIElements
namespace UnityEngine::UIElements {
  // Forward declaring type: VisualElement
  class VisualElement;
  // Forward declaring type: IDragAndDrop
  class IDragAndDrop;
  // Forward declaring type: AttachToPanelEvent
  class AttachToPanelEvent;
  // Forward declaring type: DetachFromPanelEvent
  class DetachFromPanelEvent;
  // Forward declaring type: StartDragArgs
  struct StartDragArgs;
  // Forward declaring type: PointerDownEvent
  class PointerDownEvent;
  // Forward declaring type: PointerUpEvent
  class PointerUpEvent;
  // Forward declaring type: PointerLeaveEvent
  class PointerLeaveEvent;
  // Forward declaring type: PointerCancelEvent
  class PointerCancelEvent;
  // Forward declaring type: PointerCaptureOutEvent
  class PointerCaptureOutEvent;
  // Forward declaring type: PointerMoveEvent
  class PointerMoveEvent;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Vector2
  struct Vector2;
}
// Completed forward declares
// Type namespace: UnityEngine.UIElements
namespace UnityEngine::UIElements {
  // Forward declaring type: DragEventsProcessor
  class DragEventsProcessor;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::UIElements::DragEventsProcessor);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::UIElements::DragEventsProcessor*, "UnityEngine.UIElements", "DragEventsProcessor");
// Type namespace: UnityEngine.UIElements
namespace UnityEngine::UIElements {
  // Size: 0x30
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.UIElements.DragEventsProcessor
  // [TokenAttribute] Offset: FFFFFFFF
  class DragEventsProcessor : public ::Il2CppObject {
    public:
    // Nested type: ::UnityEngine::UIElements::DragEventsProcessor::DragState
    struct DragState;
    // Size: 0x4
    #pragma pack(push, 1)
    // Autogenerated type: UnityEngine.UIElements.DragEventsProcessor/DragState
    // [TokenAttribute] Offset: FFFFFFFF
    struct DragState/*, public ::System::Enum*/ {
      public:
      public:
      // public System.Int32 value__
      // Size: 0x4
      // Offset: 0x0
      int value;
      // Field size check
      static_assert(sizeof(int) == 0x4);
      public:
      // Creating value type constructor for type: DragState
      constexpr DragState(int value_ = {}) noexcept : value{value_} {}
      // Creating interface conversion operator: operator ::System::Enum
      operator ::System::Enum() noexcept {
        return *reinterpret_cast<::System::Enum*>(this);
      }
      // Creating conversion operator: operator int
      constexpr operator int() const noexcept {
        return value;
      }
      // static field const value: static public UnityEngine.UIElements.DragEventsProcessor/DragState None
      static constexpr const int None = 0;
      // Get static field: static public UnityEngine.UIElements.DragEventsProcessor/DragState None
      static ::UnityEngine::UIElements::DragEventsProcessor::DragState _get_None();
      // Set static field: static public UnityEngine.UIElements.DragEventsProcessor/DragState None
      static void _set_None(::UnityEngine::UIElements::DragEventsProcessor::DragState value);
      // static field const value: static public UnityEngine.UIElements.DragEventsProcessor/DragState CanStartDrag
      static constexpr const int CanStartDrag = 1;
      // Get static field: static public UnityEngine.UIElements.DragEventsProcessor/DragState CanStartDrag
      static ::UnityEngine::UIElements::DragEventsProcessor::DragState _get_CanStartDrag();
      // Set static field: static public UnityEngine.UIElements.DragEventsProcessor/DragState CanStartDrag
      static void _set_CanStartDrag(::UnityEngine::UIElements::DragEventsProcessor::DragState value);
      // static field const value: static public UnityEngine.UIElements.DragEventsProcessor/DragState Dragging
      static constexpr const int Dragging = 2;
      // Get static field: static public UnityEngine.UIElements.DragEventsProcessor/DragState Dragging
      static ::UnityEngine::UIElements::DragEventsProcessor::DragState _get_Dragging();
      // Set static field: static public UnityEngine.UIElements.DragEventsProcessor/DragState Dragging
      static void _set_Dragging(::UnityEngine::UIElements::DragEventsProcessor::DragState value);
      // Get instance field reference: public System.Int32 value__
      [[deprecated("Use field access instead!")]] int& dyn_value__();
    }; // UnityEngine.UIElements.DragEventsProcessor/DragState
    #pragma pack(pop)
    static check_size<sizeof(DragEventsProcessor::DragState), 0 + sizeof(int)> __UnityEngine_UIElements_DragEventsProcessor_DragStateSizeCheck;
    static_assert(sizeof(DragEventsProcessor::DragState) == 0x4);
    public:
    // private System.Boolean m_IsRegistered
    // Size: 0x1
    // Offset: 0x10
    bool m_IsRegistered;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: m_IsRegistered and: m_DragState
    char __padding0[0x3] = {};
    // private UnityEngine.UIElements.DragEventsProcessor/DragState m_DragState
    // Size: 0x4
    // Offset: 0x14
    ::UnityEngine::UIElements::DragEventsProcessor::DragState m_DragState;
    // Field size check
    static_assert(sizeof(::UnityEngine::UIElements::DragEventsProcessor::DragState) == 0x4);
    // private UnityEngine.Vector3 m_Start
    // Size: 0xC
    // Offset: 0x18
    ::UnityEngine::Vector3 m_Start;
    // Field size check
    static_assert(sizeof(::UnityEngine::Vector3) == 0xC);
    // Padding between fields: m_Start and: m_Target
    char __padding2[0x4] = {};
    // protected readonly UnityEngine.UIElements.VisualElement m_Target
    // Size: 0x8
    // Offset: 0x28
    ::UnityEngine::UIElements::VisualElement* m_Target;
    // Field size check
    static_assert(sizeof(::UnityEngine::UIElements::VisualElement*) == 0x8);
    public:
    // Get instance field reference: private System.Boolean m_IsRegistered
    [[deprecated("Use field access instead!")]] bool& dyn_m_IsRegistered();
    // Get instance field reference: private UnityEngine.UIElements.DragEventsProcessor/DragState m_DragState
    [[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::DragEventsProcessor::DragState& dyn_m_DragState();
    // Get instance field reference: private UnityEngine.Vector3 m_Start
    [[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& dyn_m_Start();
    // Get instance field reference: protected readonly UnityEngine.UIElements.VisualElement m_Target
    [[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::VisualElement*& dyn_m_Target();
    // protected System.Boolean get_supportsDragEvents()
    // Offset: 0x563B6C8
    bool get_supportsDragEvents();
    // private System.Boolean get_useDragEvents()
    // Offset: 0x563B6D0
    bool get_useDragEvents();
    // protected UnityEngine.UIElements.IDragAndDrop get_dragAndDrop()
    // Offset: 0x563B708
    ::UnityEngine::UIElements::IDragAndDrop* get_dragAndDrop();
    // System.Boolean get_isEditorContext()
    // Offset: 0x563B728
    bool get_isEditorContext();
    // System.Void .ctor(UnityEngine.UIElements.VisualElement target)
    // Offset: 0x563B848
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static DragEventsProcessor* New_ctor(::UnityEngine::UIElements::VisualElement* target) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::DragEventsProcessor::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<DragEventsProcessor*, creationType>(target)));
    }
    // private System.Void RegisterCallbacksFromTarget(UnityEngine.UIElements.AttachToPanelEvent evt)
    // Offset: 0x563BC90
    void RegisterCallbacksFromTarget(::UnityEngine::UIElements::AttachToPanelEvent* evt);
    // private System.Void RegisterCallbacksFromTarget()
    // Offset: 0x563B990
    void RegisterCallbacksFromTarget();
    // private System.Void UnregisterCallbacksFromTarget(UnityEngine.UIElements.DetachFromPanelEvent evt)
    // Offset: 0x563BC94
    void UnregisterCallbacksFromTarget(::UnityEngine::UIElements::DetachFromPanelEvent* evt);
    // System.Void UnregisterCallbacksFromTarget(System.Boolean unregisterPanelEvents)
    // Offset: 0x563BC9C
    void UnregisterCallbacksFromTarget(bool unregisterPanelEvents);
    // protected System.Boolean CanStartDrag(UnityEngine.Vector3 pointerPosition)
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool CanStartDrag(::UnityEngine::Vector3 pointerPosition);
    // protected internal UnityEngine.UIElements.StartDragArgs StartDrag(UnityEngine.Vector3 pointerPosition)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::UnityEngine::UIElements::StartDragArgs StartDrag(::UnityEngine::Vector3 pointerPosition);
    // protected internal System.Void UpdateDrag(UnityEngine.Vector3 pointerPosition)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void UpdateDrag(::UnityEngine::Vector3 pointerPosition);
    // protected internal System.Void OnDrop(UnityEngine.Vector3 pointerPosition)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void OnDrop(::UnityEngine::Vector3 pointerPosition);
    // protected System.Void ClearDragAndDropUI(System.Boolean dragCancelled)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void ClearDragAndDropUI(bool dragCancelled);
    // private System.Void OnPointerDownEvent(UnityEngine.UIElements.PointerDownEvent evt)
    // Offset: 0x563C098
    void OnPointerDownEvent(::UnityEngine::UIElements::PointerDownEvent* evt);
    // System.Void OnPointerUpEvent(UnityEngine.UIElements.PointerUpEvent evt)
    // Offset: 0x563C180
    void OnPointerUpEvent(::UnityEngine::UIElements::PointerUpEvent* evt);
    // private System.Void OnPointerLeaveEvent(UnityEngine.UIElements.PointerLeaveEvent evt)
    // Offset: 0x563C40C
    void OnPointerLeaveEvent(::UnityEngine::UIElements::PointerLeaveEvent* evt);
    // private System.Void OnPointerCancelEvent(UnityEngine.UIElements.PointerCancelEvent evt)
    // Offset: 0x563C41C
    void OnPointerCancelEvent(::UnityEngine::UIElements::PointerCancelEvent* evt);
    // private System.Void OnPointerCapturedOut(UnityEngine.UIElements.PointerCaptureOutEvent evt)
    // Offset: 0x563C54C
    void OnPointerCapturedOut(::UnityEngine::UIElements::PointerCaptureOutEvent* evt);
    // private System.Void OnPointerMoveEvent(UnityEngine.UIElements.PointerMoveEvent evt)
    // Offset: 0x563C658
    void OnPointerMoveEvent(::UnityEngine::UIElements::PointerMoveEvent* evt);
    // private UnityEngine.UIElements.DragEventsProcessor GetDropTarget(UnityEngine.Vector2 position)
    // Offset: 0x563C324
    ::UnityEngine::UIElements::DragEventsProcessor* GetDropTarget(::UnityEngine::Vector2 position);
  }; // UnityEngine.UIElements.DragEventsProcessor
  #pragma pack(pop)
  static check_size<sizeof(DragEventsProcessor), 40 + sizeof(::UnityEngine::UIElements::VisualElement*)> __UnityEngine_UIElements_DragEventsProcessorSizeCheck;
  static_assert(sizeof(DragEventsProcessor) == 0x30);
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::UIElements::DragEventsProcessor::DragState, "UnityEngine.UIElements", "DragEventsProcessor/DragState");
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::UIElements::DragEventsProcessor::get_supportsDragEvents
// Il2CppName: get_supportsDragEvents
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::DragEventsProcessor::*)()>(&UnityEngine::UIElements::DragEventsProcessor::get_supportsDragEvents)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::DragEventsProcessor*), "get_supportsDragEvents", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::DragEventsProcessor::get_useDragEvents
// Il2CppName: get_useDragEvents
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::DragEventsProcessor::*)()>(&UnityEngine::UIElements::DragEventsProcessor::get_useDragEvents)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::DragEventsProcessor*), "get_useDragEvents", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::DragEventsProcessor::get_dragAndDrop
// Il2CppName: get_dragAndDrop
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::IDragAndDrop* (UnityEngine::UIElements::DragEventsProcessor::*)()>(&UnityEngine::UIElements::DragEventsProcessor::get_dragAndDrop)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::DragEventsProcessor*), "get_dragAndDrop", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::DragEventsProcessor::get_isEditorContext
// Il2CppName: get_isEditorContext
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::DragEventsProcessor::*)()>(&UnityEngine::UIElements::DragEventsProcessor::get_isEditorContext)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::DragEventsProcessor*), "get_isEditorContext", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::DragEventsProcessor::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::UIElements::DragEventsProcessor::RegisterCallbacksFromTarget
// Il2CppName: RegisterCallbacksFromTarget
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::DragEventsProcessor::*)(::UnityEngine::UIElements::AttachToPanelEvent*)>(&UnityEngine::UIElements::DragEventsProcessor::RegisterCallbacksFromTarget)> {
  static const MethodInfo* get() {
    static auto* evt = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "AttachToPanelEvent")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::DragEventsProcessor*), "RegisterCallbacksFromTarget", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{evt});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::DragEventsProcessor::RegisterCallbacksFromTarget
// Il2CppName: RegisterCallbacksFromTarget
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::DragEventsProcessor::*)()>(&UnityEngine::UIElements::DragEventsProcessor::RegisterCallbacksFromTarget)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::DragEventsProcessor*), "RegisterCallbacksFromTarget", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::DragEventsProcessor::UnregisterCallbacksFromTarget
// Il2CppName: UnregisterCallbacksFromTarget
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::DragEventsProcessor::*)(::UnityEngine::UIElements::DetachFromPanelEvent*)>(&UnityEngine::UIElements::DragEventsProcessor::UnregisterCallbacksFromTarget)> {
  static const MethodInfo* get() {
    static auto* evt = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "DetachFromPanelEvent")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::DragEventsProcessor*), "UnregisterCallbacksFromTarget", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{evt});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::DragEventsProcessor::UnregisterCallbacksFromTarget
// Il2CppName: UnregisterCallbacksFromTarget
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::DragEventsProcessor::*)(bool)>(&UnityEngine::UIElements::DragEventsProcessor::UnregisterCallbacksFromTarget)> {
  static const MethodInfo* get() {
    static auto* unregisterPanelEvents = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::DragEventsProcessor*), "UnregisterCallbacksFromTarget", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{unregisterPanelEvents});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::DragEventsProcessor::CanStartDrag
// Il2CppName: CanStartDrag
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::DragEventsProcessor::*)(::UnityEngine::Vector3)>(&UnityEngine::UIElements::DragEventsProcessor::CanStartDrag)> {
  static const MethodInfo* get() {
    static auto* pointerPosition = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::DragEventsProcessor*), "CanStartDrag", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{pointerPosition});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::DragEventsProcessor::StartDrag
// Il2CppName: StartDrag
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::StartDragArgs (UnityEngine::UIElements::DragEventsProcessor::*)(::UnityEngine::Vector3)>(&UnityEngine::UIElements::DragEventsProcessor::StartDrag)> {
  static const MethodInfo* get() {
    static auto* pointerPosition = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::DragEventsProcessor*), "StartDrag", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{pointerPosition});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::DragEventsProcessor::UpdateDrag
// Il2CppName: UpdateDrag
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::DragEventsProcessor::*)(::UnityEngine::Vector3)>(&UnityEngine::UIElements::DragEventsProcessor::UpdateDrag)> {
  static const MethodInfo* get() {
    static auto* pointerPosition = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::DragEventsProcessor*), "UpdateDrag", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{pointerPosition});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::DragEventsProcessor::OnDrop
// Il2CppName: OnDrop
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::DragEventsProcessor::*)(::UnityEngine::Vector3)>(&UnityEngine::UIElements::DragEventsProcessor::OnDrop)> {
  static const MethodInfo* get() {
    static auto* pointerPosition = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::DragEventsProcessor*), "OnDrop", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{pointerPosition});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::DragEventsProcessor::ClearDragAndDropUI
// Il2CppName: ClearDragAndDropUI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::DragEventsProcessor::*)(bool)>(&UnityEngine::UIElements::DragEventsProcessor::ClearDragAndDropUI)> {
  static const MethodInfo* get() {
    static auto* dragCancelled = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::DragEventsProcessor*), "ClearDragAndDropUI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{dragCancelled});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::DragEventsProcessor::OnPointerDownEvent
// Il2CppName: OnPointerDownEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::DragEventsProcessor::*)(::UnityEngine::UIElements::PointerDownEvent*)>(&UnityEngine::UIElements::DragEventsProcessor::OnPointerDownEvent)> {
  static const MethodInfo* get() {
    static auto* evt = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "PointerDownEvent")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::DragEventsProcessor*), "OnPointerDownEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{evt});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::DragEventsProcessor::OnPointerUpEvent
// Il2CppName: OnPointerUpEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::DragEventsProcessor::*)(::UnityEngine::UIElements::PointerUpEvent*)>(&UnityEngine::UIElements::DragEventsProcessor::OnPointerUpEvent)> {
  static const MethodInfo* get() {
    static auto* evt = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "PointerUpEvent")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::DragEventsProcessor*), "OnPointerUpEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{evt});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::DragEventsProcessor::OnPointerLeaveEvent
// Il2CppName: OnPointerLeaveEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::DragEventsProcessor::*)(::UnityEngine::UIElements::PointerLeaveEvent*)>(&UnityEngine::UIElements::DragEventsProcessor::OnPointerLeaveEvent)> {
  static const MethodInfo* get() {
    static auto* evt = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "PointerLeaveEvent")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::DragEventsProcessor*), "OnPointerLeaveEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{evt});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::DragEventsProcessor::OnPointerCancelEvent
// Il2CppName: OnPointerCancelEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::DragEventsProcessor::*)(::UnityEngine::UIElements::PointerCancelEvent*)>(&UnityEngine::UIElements::DragEventsProcessor::OnPointerCancelEvent)> {
  static const MethodInfo* get() {
    static auto* evt = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "PointerCancelEvent")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::DragEventsProcessor*), "OnPointerCancelEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{evt});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::DragEventsProcessor::OnPointerCapturedOut
// Il2CppName: OnPointerCapturedOut
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::DragEventsProcessor::*)(::UnityEngine::UIElements::PointerCaptureOutEvent*)>(&UnityEngine::UIElements::DragEventsProcessor::OnPointerCapturedOut)> {
  static const MethodInfo* get() {
    static auto* evt = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "PointerCaptureOutEvent")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::DragEventsProcessor*), "OnPointerCapturedOut", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{evt});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::DragEventsProcessor::OnPointerMoveEvent
// Il2CppName: OnPointerMoveEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::DragEventsProcessor::*)(::UnityEngine::UIElements::PointerMoveEvent*)>(&UnityEngine::UIElements::DragEventsProcessor::OnPointerMoveEvent)> {
  static const MethodInfo* get() {
    static auto* evt = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "PointerMoveEvent")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::DragEventsProcessor*), "OnPointerMoveEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{evt});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::DragEventsProcessor::GetDropTarget
// Il2CppName: GetDropTarget
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::DragEventsProcessor* (UnityEngine::UIElements::DragEventsProcessor::*)(::UnityEngine::Vector2)>(&UnityEngine::UIElements::DragEventsProcessor::GetDropTarget)> {
  static const MethodInfo* get() {
    static auto* position = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector2")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::DragEventsProcessor*), "GetDropTarget", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{position});
  }
};
