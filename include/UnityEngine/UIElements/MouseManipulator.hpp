// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.UIElements.Manipulator
#include "UnityEngine/UIElements/Manipulator.hpp"
// Including type: UnityEngine.UIElements.ManipulatorActivationFilter
#include "UnityEngine/UIElements/ManipulatorActivationFilter.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Forward declaring namespace: UnityEngine::UIElements
namespace UnityEngine::UIElements {
  // Forward declaring type: IMouseEvent
  class IMouseEvent;
}
// Completed forward declares
// Type namespace: UnityEngine.UIElements
namespace UnityEngine::UIElements {
  // Forward declaring type: MouseManipulator
  class MouseManipulator;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::UIElements::MouseManipulator);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::UIElements::MouseManipulator*, "UnityEngine.UIElements", "MouseManipulator");
// Type namespace: UnityEngine.UIElements
namespace UnityEngine::UIElements {
  // Size: 0x2C
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.UIElements.MouseManipulator
  // [TokenAttribute] Offset: FFFFFFFF
  class MouseManipulator : public ::UnityEngine::UIElements::Manipulator {
    public:
    public:
    // private System.Collections.Generic.List`1<UnityEngine.UIElements.ManipulatorActivationFilter> <activators>k__BackingField
    // Size: 0x8
    // Offset: 0x18
    ::System::Collections::Generic::List_1<::UnityEngine::UIElements::ManipulatorActivationFilter>* activators;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::UnityEngine::UIElements::ManipulatorActivationFilter>*) == 0x8);
    // private UnityEngine.UIElements.ManipulatorActivationFilter m_currentActivator
    // Size: 0xC
    // Offset: 0x20
    ::UnityEngine::UIElements::ManipulatorActivationFilter m_currentActivator;
    // Field size check
    static_assert(sizeof(::UnityEngine::UIElements::ManipulatorActivationFilter) == 0xC);
    public:
    // Deleting conversion operator: operator ::UnityEngine::UIElements::VisualElement*
    constexpr operator ::UnityEngine::UIElements::VisualElement*() const noexcept = delete;
    // Get instance field reference: private System.Collections.Generic.List`1<UnityEngine.UIElements.ManipulatorActivationFilter> <activators>k__BackingField
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::UIElements::ManipulatorActivationFilter>*& dyn_$activators$k__BackingField();
    // Get instance field reference: private UnityEngine.UIElements.ManipulatorActivationFilter m_currentActivator
    [[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::ManipulatorActivationFilter& dyn_m_currentActivator();
    // public System.Collections.Generic.List`1<UnityEngine.UIElements.ManipulatorActivationFilter> get_activators()
    // Offset: 0x5664C14
    ::System::Collections::Generic::List_1<::UnityEngine::UIElements::ManipulatorActivationFilter>* get_activators();
    // private System.Void set_activators(System.Collections.Generic.List`1<UnityEngine.UIElements.ManipulatorActivationFilter> value)
    // Offset: 0x5664C1C
    void set_activators(::System::Collections::Generic::List_1<::UnityEngine::UIElements::ManipulatorActivationFilter>* value);
    // protected System.Boolean CanStartManipulation(UnityEngine.UIElements.IMouseEvent e)
    // Offset: 0x5664CAC
    bool CanStartManipulation(::UnityEngine::UIElements::IMouseEvent* e);
    // protected System.Boolean CanStopManipulation(UnityEngine.UIElements.IMouseEvent e)
    // Offset: 0x5664E20
    bool CanStopManipulation(::UnityEngine::UIElements::IMouseEvent* e);
    // protected System.Void .ctor()
    // Offset: 0x5664C24
    // Implemented from: UnityEngine.UIElements.Manipulator
    // Base method: System.Void Manipulator::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static MouseManipulator* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::MouseManipulator::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<MouseManipulator*, creationType>()));
    }
  }; // UnityEngine.UIElements.MouseManipulator
  #pragma pack(pop)
  static check_size<sizeof(MouseManipulator), 32 + sizeof(::UnityEngine::UIElements::ManipulatorActivationFilter)> __UnityEngine_UIElements_MouseManipulatorSizeCheck;
  static_assert(sizeof(MouseManipulator) == 0x2C);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::UIElements::MouseManipulator::get_activators
// Il2CppName: get_activators
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::List_1<::UnityEngine::UIElements::ManipulatorActivationFilter>* (UnityEngine::UIElements::MouseManipulator::*)()>(&UnityEngine::UIElements::MouseManipulator::get_activators)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::MouseManipulator*), "get_activators", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::MouseManipulator::set_activators
// Il2CppName: set_activators
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::MouseManipulator::*)(::System::Collections::Generic::List_1<::UnityEngine::UIElements::ManipulatorActivationFilter>*)>(&UnityEngine::UIElements::MouseManipulator::set_activators)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "ManipulatorActivationFilter")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::MouseManipulator*), "set_activators", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::MouseManipulator::CanStartManipulation
// Il2CppName: CanStartManipulation
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::MouseManipulator::*)(::UnityEngine::UIElements::IMouseEvent*)>(&UnityEngine::UIElements::MouseManipulator::CanStartManipulation)> {
  static const MethodInfo* get() {
    static auto* e = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "IMouseEvent")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::MouseManipulator*), "CanStartManipulation", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{e});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::MouseManipulator::CanStopManipulation
// Il2CppName: CanStopManipulation
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::MouseManipulator::*)(::UnityEngine::UIElements::IMouseEvent*)>(&UnityEngine::UIElements::MouseManipulator::CanStopManipulation)> {
  static const MethodInfo* get() {
    static auto* e = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "IMouseEvent")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::MouseManipulator*), "CanStopManipulation", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{e});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::MouseManipulator::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
