// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.UIElements.EnumField
#include "UnityEngine/UIElements/EnumField.hpp"
// Including type: UnityEngine.UIElements.BaseField`1/UxmlTraits
#include "UnityEngine/UIElements/BaseField_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Skipping declaration: Enum because it is already included!
}
// Forward declaring namespace: UnityEngine::UIElements
namespace UnityEngine::UIElements {
  // Forward declaring type: UxmlTypeAttributeDescription`1<TBase>
  template<typename TBase>
  class UxmlTypeAttributeDescription_1;
  // Forward declaring type: UxmlStringAttributeDescription
  class UxmlStringAttributeDescription;
  // Forward declaring type: UxmlBoolAttributeDescription
  class UxmlBoolAttributeDescription;
  // Skipping declaration: VisualElement because it is already included!
  // Forward declaring type: IUxmlAttributes
  class IUxmlAttributes;
  // Skipping declaration: CreationContext because it is already included!
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::UIElements::EnumField::UxmlTraits);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::UIElements::EnumField::UxmlTraits*, "UnityEngine.UIElements", "EnumField/UxmlTraits");
// Type namespace: UnityEngine.UIElements
namespace UnityEngine::UIElements {
  // WARNING Size may be invalid!
  // Autogenerated type: UnityEngine.UIElements.EnumField/UxmlTraits
  // [TokenAttribute] Offset: FFFFFFFF
  class EnumField::UxmlTraits : public ::UnityEngine::UIElements::BaseField_1<::System::Enum*>::UxmlTraits {
    public:
    public:
    // private UnityEngine.UIElements.UxmlTypeAttributeDescription`1<System.Enum> m_Type
    // Size: 0x8
    // Offset: 0x80
    ::UnityEngine::UIElements::UxmlTypeAttributeDescription_1<::System::Enum*>* m_Type;
    // Field size check
    static_assert(sizeof(::UnityEngine::UIElements::UxmlTypeAttributeDescription_1<::System::Enum*>*) == 0x8);
    // private UnityEngine.UIElements.UxmlStringAttributeDescription m_Value
    // Size: 0x8
    // Offset: 0x88
    ::UnityEngine::UIElements::UxmlStringAttributeDescription* m_Value;
    // Field size check
    static_assert(sizeof(::UnityEngine::UIElements::UxmlStringAttributeDescription*) == 0x8);
    // private UnityEngine.UIElements.UxmlBoolAttributeDescription m_IncludeObsoleteValues
    // Size: 0x8
    // Offset: 0x90
    ::UnityEngine::UIElements::UxmlBoolAttributeDescription* m_IncludeObsoleteValues;
    // Field size check
    static_assert(sizeof(::UnityEngine::UIElements::UxmlBoolAttributeDescription*) == 0x8);
    public:
    // Get instance field reference: private UnityEngine.UIElements.UxmlTypeAttributeDescription`1<System.Enum> m_Type
    [[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::UxmlTypeAttributeDescription_1<::System::Enum*>*& dyn_m_Type();
    // Get instance field reference: private UnityEngine.UIElements.UxmlStringAttributeDescription m_Value
    [[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::UxmlStringAttributeDescription*& dyn_m_Value();
    // Get instance field reference: private UnityEngine.UIElements.UxmlBoolAttributeDescription m_IncludeObsoleteValues
    [[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::UxmlBoolAttributeDescription*& dyn_m_IncludeObsoleteValues();
    // public override System.Void Init(UnityEngine.UIElements.VisualElement ve, UnityEngine.UIElements.IUxmlAttributes bag, UnityEngine.UIElements.CreationContext cc)
    // Offset: 0x55B6AD8
    // Implemented from: UnityEngine.UIElements.BaseField`1/UxmlTraits
    // Base method: System.Void UxmlTraits::Init(UnityEngine.UIElements.VisualElement ve, UnityEngine.UIElements.IUxmlAttributes bag, UnityEngine.UIElements.CreationContext cc)
    void Init(::UnityEngine::UIElements::VisualElement* ve, ::UnityEngine::UIElements::IUxmlAttributes* bag, ::UnityEngine::UIElements::CreationContext cc);
    // public System.Void .ctor()
    // Offset: 0x55B6D00
    // Implemented from: UnityEngine.UIElements.BaseField`1/UxmlTraits
    // Base method: System.Void UxmlTraits::.ctor()
    // Base method: System.Void UxmlTraits::.ctor()
    // Base method: System.Void UxmlTraits::.ctor()
    // Base method: System.Void UxmlTraits::.ctor()
    // Base method: System.Void BaseUxmlTraits::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static EnumField::UxmlTraits* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::EnumField::UxmlTraits::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<EnumField::UxmlTraits*, creationType>()));
    }
  }; // UnityEngine.UIElements.EnumField/UxmlTraits
  // WARNING Not writing size check since size may be invalid!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::UIElements::EnumField::UxmlTraits::Init
// Il2CppName: Init
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::EnumField::UxmlTraits::*)(::UnityEngine::UIElements::VisualElement*, ::UnityEngine::UIElements::IUxmlAttributes*, ::UnityEngine::UIElements::CreationContext)>(&UnityEngine::UIElements::EnumField::UxmlTraits::Init)> {
  static const MethodInfo* get() {
    static auto* ve = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "VisualElement")->byval_arg;
    static auto* bag = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "IUxmlAttributes")->byval_arg;
    static auto* cc = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "CreationContext")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::EnumField::UxmlTraits*), "Init", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ve, bag, cc});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::EnumField::UxmlTraits::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
