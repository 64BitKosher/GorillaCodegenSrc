// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Including type: System.IEquatable`1
#include "System/IEquatable_1.hpp"
// Including type: System.Enum
#include "System/Enum.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::UIElements::StyleSheets
namespace UnityEngine::UIElements::StyleSheets {
  // Skipping declaration: Unit because it is already included!
}
// Forward declaring namespace: UnityEngine::UIElements
namespace UnityEngine::UIElements {
  // Forward declaring type: Length
  struct Length;
  // Forward declaring type: TimeValue
  struct TimeValue;
  // Forward declaring type: Angle
  struct Angle;
}
// Completed forward declares
// Type namespace: UnityEngine.UIElements.StyleSheets
namespace UnityEngine::UIElements::StyleSheets {
  // Forward declaring type: Dimension
  struct Dimension;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::UIElements::StyleSheets::Dimension, "UnityEngine.UIElements.StyleSheets", "Dimension");
// Type namespace: UnityEngine.UIElements.StyleSheets
namespace UnityEngine::UIElements::StyleSheets {
  // Size: 0x8
  #pragma pack(push, 1)
  // WARNING Layout: Sequential may not be correctly taken into account!
  // Autogenerated type: UnityEngine.UIElements.StyleSheets.Dimension
  // [TokenAttribute] Offset: FFFFFFFF
  struct Dimension/*, public ::System::ValueType, public ::System::IEquatable_1<::UnityEngine::UIElements::StyleSheets::Dimension>*/ {
    public:
    // Nested type: ::UnityEngine::UIElements::StyleSheets::Dimension::Unit
    struct Unit;
    // Size: 0x4
    #pragma pack(push, 1)
    // Autogenerated type: UnityEngine.UIElements.StyleSheets.Dimension/Unit
    // [TokenAttribute] Offset: FFFFFFFF
    struct Unit/*, public ::System::Enum*/ {
      public:
      public:
      // public System.Int32 value__
      // Size: 0x4
      // Offset: 0x0
      int value;
      // Field size check
      static_assert(sizeof(int) == 0x4);
      public:
      // Creating value type constructor for type: Unit
      constexpr Unit(int value_ = {}) noexcept : value{value_} {}
      // Creating interface conversion operator: operator ::System::Enum
      operator ::System::Enum() noexcept {
        return *reinterpret_cast<::System::Enum*>(this);
      }
      // Creating conversion operator: operator int
      constexpr operator int() const noexcept {
        return value;
      }
      // static field const value: static public UnityEngine.UIElements.StyleSheets.Dimension/Unit Unitless
      static constexpr const int Unitless = 0;
      // Get static field: static public UnityEngine.UIElements.StyleSheets.Dimension/Unit Unitless
      static ::UnityEngine::UIElements::StyleSheets::Dimension::Unit _get_Unitless();
      // Set static field: static public UnityEngine.UIElements.StyleSheets.Dimension/Unit Unitless
      static void _set_Unitless(::UnityEngine::UIElements::StyleSheets::Dimension::Unit value);
      // static field const value: static public UnityEngine.UIElements.StyleSheets.Dimension/Unit Pixel
      static constexpr const int Pixel = 1;
      // Get static field: static public UnityEngine.UIElements.StyleSheets.Dimension/Unit Pixel
      static ::UnityEngine::UIElements::StyleSheets::Dimension::Unit _get_Pixel();
      // Set static field: static public UnityEngine.UIElements.StyleSheets.Dimension/Unit Pixel
      static void _set_Pixel(::UnityEngine::UIElements::StyleSheets::Dimension::Unit value);
      // static field const value: static public UnityEngine.UIElements.StyleSheets.Dimension/Unit Percent
      static constexpr const int Percent = 2;
      // Get static field: static public UnityEngine.UIElements.StyleSheets.Dimension/Unit Percent
      static ::UnityEngine::UIElements::StyleSheets::Dimension::Unit _get_Percent();
      // Set static field: static public UnityEngine.UIElements.StyleSheets.Dimension/Unit Percent
      static void _set_Percent(::UnityEngine::UIElements::StyleSheets::Dimension::Unit value);
      // static field const value: static public UnityEngine.UIElements.StyleSheets.Dimension/Unit Second
      static constexpr const int Second = 3;
      // Get static field: static public UnityEngine.UIElements.StyleSheets.Dimension/Unit Second
      static ::UnityEngine::UIElements::StyleSheets::Dimension::Unit _get_Second();
      // Set static field: static public UnityEngine.UIElements.StyleSheets.Dimension/Unit Second
      static void _set_Second(::UnityEngine::UIElements::StyleSheets::Dimension::Unit value);
      // static field const value: static public UnityEngine.UIElements.StyleSheets.Dimension/Unit Millisecond
      static constexpr const int Millisecond = 4;
      // Get static field: static public UnityEngine.UIElements.StyleSheets.Dimension/Unit Millisecond
      static ::UnityEngine::UIElements::StyleSheets::Dimension::Unit _get_Millisecond();
      // Set static field: static public UnityEngine.UIElements.StyleSheets.Dimension/Unit Millisecond
      static void _set_Millisecond(::UnityEngine::UIElements::StyleSheets::Dimension::Unit value);
      // static field const value: static public UnityEngine.UIElements.StyleSheets.Dimension/Unit Degree
      static constexpr const int Degree = 5;
      // Get static field: static public UnityEngine.UIElements.StyleSheets.Dimension/Unit Degree
      static ::UnityEngine::UIElements::StyleSheets::Dimension::Unit _get_Degree();
      // Set static field: static public UnityEngine.UIElements.StyleSheets.Dimension/Unit Degree
      static void _set_Degree(::UnityEngine::UIElements::StyleSheets::Dimension::Unit value);
      // static field const value: static public UnityEngine.UIElements.StyleSheets.Dimension/Unit Gradian
      static constexpr const int Gradian = 6;
      // Get static field: static public UnityEngine.UIElements.StyleSheets.Dimension/Unit Gradian
      static ::UnityEngine::UIElements::StyleSheets::Dimension::Unit _get_Gradian();
      // Set static field: static public UnityEngine.UIElements.StyleSheets.Dimension/Unit Gradian
      static void _set_Gradian(::UnityEngine::UIElements::StyleSheets::Dimension::Unit value);
      // static field const value: static public UnityEngine.UIElements.StyleSheets.Dimension/Unit Radian
      static constexpr const int Radian = 7;
      // Get static field: static public UnityEngine.UIElements.StyleSheets.Dimension/Unit Radian
      static ::UnityEngine::UIElements::StyleSheets::Dimension::Unit _get_Radian();
      // Set static field: static public UnityEngine.UIElements.StyleSheets.Dimension/Unit Radian
      static void _set_Radian(::UnityEngine::UIElements::StyleSheets::Dimension::Unit value);
      // static field const value: static public UnityEngine.UIElements.StyleSheets.Dimension/Unit Turn
      static constexpr const int Turn = 8;
      // Get static field: static public UnityEngine.UIElements.StyleSheets.Dimension/Unit Turn
      static ::UnityEngine::UIElements::StyleSheets::Dimension::Unit _get_Turn();
      // Set static field: static public UnityEngine.UIElements.StyleSheets.Dimension/Unit Turn
      static void _set_Turn(::UnityEngine::UIElements::StyleSheets::Dimension::Unit value);
      // Get instance field reference: public System.Int32 value__
      [[deprecated("Use field access instead!")]] int& dyn_value__();
    }; // UnityEngine.UIElements.StyleSheets.Dimension/Unit
    #pragma pack(pop)
    static check_size<sizeof(Dimension::Unit), 0 + sizeof(int)> __UnityEngine_UIElements_StyleSheets_Dimension_UnitSizeCheck;
    static_assert(sizeof(Dimension::Unit) == 0x4);
    public:
    // public UnityEngine.UIElements.StyleSheets.Dimension/Unit unit
    // Size: 0x4
    // Offset: 0x0
    ::UnityEngine::UIElements::StyleSheets::Dimension::Unit unit;
    // Field size check
    static_assert(sizeof(::UnityEngine::UIElements::StyleSheets::Dimension::Unit) == 0x4);
    // public System.Single value
    // Size: 0x4
    // Offset: 0x4
    float value;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    public:
    // Creating value type constructor for type: Dimension
    constexpr Dimension(::UnityEngine::UIElements::StyleSheets::Dimension::Unit unit_ = {}, float value_ = {}) noexcept : unit{unit_}, value{value_} {}
    // Creating interface conversion operator: operator ::System::ValueType
    operator ::System::ValueType() noexcept {
      return *reinterpret_cast<::System::ValueType*>(this);
    }
    // Creating interface conversion operator: operator ::System::IEquatable_1<::UnityEngine::UIElements::StyleSheets::Dimension>
    operator ::System::IEquatable_1<::UnityEngine::UIElements::StyleSheets::Dimension>() noexcept {
      return *reinterpret_cast<::System::IEquatable_1<::UnityEngine::UIElements::StyleSheets::Dimension>*>(this);
    }
    // Get instance field reference: public UnityEngine.UIElements.StyleSheets.Dimension/Unit unit
    [[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::StyleSheets::Dimension::Unit& dyn_unit();
    // Get instance field reference: public System.Single value
    [[deprecated("Use field access instead!")]] float& dyn_value();
    // public System.Void .ctor(System.Single value, UnityEngine.UIElements.StyleSheets.Dimension/Unit unit)
    // Offset: 0x55F9998
    Dimension(float value, ::UnityEngine::UIElements::StyleSheets::Dimension::Unit unit);
    // public UnityEngine.UIElements.Length ToLength()
    // Offset: 0x55F4BFC
    ::UnityEngine::UIElements::Length ToLength();
    // public UnityEngine.UIElements.TimeValue ToTime()
    // Offset: 0x55F99A4
    ::UnityEngine::UIElements::TimeValue ToTime();
    // public UnityEngine.UIElements.Angle ToAngle()
    // Offset: 0x55F99D4
    ::UnityEngine::UIElements::Angle ToAngle();
    // public System.Boolean Equals(UnityEngine.UIElements.StyleSheets.Dimension other)
    // Offset: 0x55F9A88
    bool Equals(::UnityEngine::UIElements::StyleSheets::Dimension other);
    // public override System.Boolean Equals(System.Object obj)
    // Offset: 0x55F9AB0
    // Implemented from: System.ValueType
    // Base method: System.Boolean ValueType::Equals(System.Object obj)
    bool Equals(::Il2CppObject* obj);
    // public override System.Int32 GetHashCode()
    // Offset: 0x55F9B3C
    // Implemented from: System.ValueType
    // Base method: System.Int32 ValueType::GetHashCode()
    int GetHashCode();
    // public override System.String ToString()
    // Offset: 0x55F9B84
    // Implemented from: System.ValueType
    // Base method: System.String ValueType::ToString()
    ::StringW ToString();
  }; // UnityEngine.UIElements.StyleSheets.Dimension
  #pragma pack(pop)
  static check_size<sizeof(Dimension), 4 + sizeof(float)> __UnityEngine_UIElements_StyleSheets_DimensionSizeCheck;
  static_assert(sizeof(Dimension) == 0x8);
  // static public System.Boolean op_Equality(UnityEngine.UIElements.StyleSheets.Dimension lhs, UnityEngine.UIElements.StyleSheets.Dimension rhs)
  // Offset: 0x55F9A60
  bool operator ==(const ::UnityEngine::UIElements::StyleSheets::Dimension& lhs, const ::UnityEngine::UIElements::StyleSheets::Dimension& rhs);
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::UIElements::StyleSheets::Dimension::Unit, "UnityEngine.UIElements.StyleSheets", "Dimension/Unit");
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::UIElements::StyleSheets::Dimension::Dimension
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::UIElements::StyleSheets::Dimension::ToLength
// Il2CppName: ToLength
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::Length (UnityEngine::UIElements::StyleSheets::Dimension::*)()>(&UnityEngine::UIElements::StyleSheets::Dimension::ToLength)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::StyleSheets::Dimension), "ToLength", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::StyleSheets::Dimension::ToTime
// Il2CppName: ToTime
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::TimeValue (UnityEngine::UIElements::StyleSheets::Dimension::*)()>(&UnityEngine::UIElements::StyleSheets::Dimension::ToTime)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::StyleSheets::Dimension), "ToTime", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::StyleSheets::Dimension::ToAngle
// Il2CppName: ToAngle
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::Angle (UnityEngine::UIElements::StyleSheets::Dimension::*)()>(&UnityEngine::UIElements::StyleSheets::Dimension::ToAngle)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::StyleSheets::Dimension), "ToAngle", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::StyleSheets::Dimension::Equals
// Il2CppName: Equals
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::StyleSheets::Dimension::*)(::UnityEngine::UIElements::StyleSheets::Dimension)>(&UnityEngine::UIElements::StyleSheets::Dimension::Equals)> {
  static const MethodInfo* get() {
    static auto* other = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements.StyleSheets", "Dimension")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::StyleSheets::Dimension), "Equals", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{other});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::StyleSheets::Dimension::Equals
// Il2CppName: Equals
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::StyleSheets::Dimension::*)(::Il2CppObject*)>(&UnityEngine::UIElements::StyleSheets::Dimension::Equals)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::StyleSheets::Dimension), "Equals", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::StyleSheets::Dimension::GetHashCode
// Il2CppName: GetHashCode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::UIElements::StyleSheets::Dimension::*)()>(&UnityEngine::UIElements::StyleSheets::Dimension::GetHashCode)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::StyleSheets::Dimension), "GetHashCode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::StyleSheets::Dimension::ToString
// Il2CppName: ToString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (UnityEngine::UIElements::StyleSheets::Dimension::*)()>(&UnityEngine::UIElements::StyleSheets::Dimension::ToString)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::StyleSheets::Dimension), "ToString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::StyleSheets::Dimension::operator ==
// Il2CppName: op_Equality
// Cannot perform method pointer template specialization from operators!
