// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Including type: UnityEngine.UIElements.StyleSheets.StylePropertyId
#include "UnityEngine/UIElements/StyleSheets/StylePropertyId.hpp"
// Including type: UnityEngine.UIElements.StyleKeyword
#include "UnityEngine/UIElements/StyleKeyword.hpp"
// Including type: UnityEngine.UIElements.Length
#include "UnityEngine/UIElements/Length.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
// Including type: System.Runtime.InteropServices.GCHandle
#include "System/Runtime/InteropServices/GCHandle.hpp"
// Including type: UnityEngine.UIElements.BackgroundPosition
#include "UnityEngine/UIElements/BackgroundPosition.hpp"
// Including type: UnityEngine.UIElements.BackgroundRepeat
#include "UnityEngine/UIElements/BackgroundRepeat.hpp"
// Completed includes
// Type namespace: UnityEngine.UIElements.StyleSheets
namespace UnityEngine::UIElements::StyleSheets {
  // Forward declaring type: StyleValue
  struct StyleValue;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::UIElements::StyleSheets::StyleValue, "UnityEngine.UIElements.StyleSheets", "StyleValue");
// Type namespace: UnityEngine.UIElements.StyleSheets
namespace UnityEngine::UIElements::StyleSheets {
  // Size: 0x10
  #pragma pack(push, 1)
  // WARNING Layout: Explicit may not be correctly taken into account!
  // Autogenerated type: UnityEngine.UIElements.StyleSheets.StyleValue
  // [TokenAttribute] Offset: FFFFFFFF
  // [DebuggerDisplayAttribute] Offset: FFFFFFFF
  struct StyleValue/*, public ::System::ValueType*/ {
    public:
    public:
    // public UnityEngine.UIElements.StyleSheets.StylePropertyId id
    // Size: 0x4
    // Offset: 0x0
    ::UnityEngine::UIElements::StyleSheets::StylePropertyId id;
    // Field size check
    static_assert(sizeof(::UnityEngine::UIElements::StyleSheets::StylePropertyId) == 0x4);
    // public UnityEngine.UIElements.StyleKeyword keyword
    // Size: 0x4
    // Offset: 0x4
    ::UnityEngine::UIElements::StyleKeyword keyword;
    // Field size check
    static_assert(sizeof(::UnityEngine::UIElements::StyleKeyword) == 0x4);
    // Creating union for fields at offset: 0x8
    union {
      // public System.Single number
      // Size: 0x4
      // Offset: 0x8
      float number;
      // Field size check
      static_assert(sizeof(float) == 0x4);
      // public UnityEngine.UIElements.Length length
      // Size: 0x8
      // Offset: 0x8
      ::UnityEngine::UIElements::Length length;
      // Field size check
      static_assert(sizeof(::UnityEngine::UIElements::Length) == 0x8);
      // public UnityEngine.Color color
      // Size: 0x10
      // Offset: 0x8
      ::UnityEngine::Color color;
      // Field size check
      static_assert(sizeof(::UnityEngine::Color) == 0x10);
      // public System.Runtime.InteropServices.GCHandle resource
      // Size: 0x8
      // Offset: 0x8
      ::System::Runtime::InteropServices::GCHandle resource;
      // Field size check
      static_assert(sizeof(::System::Runtime::InteropServices::GCHandle) == 0x8);
      // public UnityEngine.UIElements.BackgroundPosition position
      // Size: 0xC
      // Offset: 0x8
      ::UnityEngine::UIElements::BackgroundPosition position;
      // Field size check
      static_assert(sizeof(::UnityEngine::UIElements::BackgroundPosition) == 0xC);
      // public UnityEngine.UIElements.BackgroundRepeat repeat
      // Size: 0x8
      // Offset: 0x8
      ::UnityEngine::UIElements::BackgroundRepeat repeat;
      // Field size check
      static_assert(sizeof(::UnityEngine::UIElements::BackgroundRepeat) == 0x8);
    };
    public:
    // Creating value type constructor for type: StyleValue
    constexpr StyleValue(::UnityEngine::UIElements::StyleSheets::StylePropertyId id_ = {}, ::UnityEngine::UIElements::StyleKeyword keyword_ = {}, float number_ = {}) noexcept : id{id_}, keyword{keyword_}, number{number_} {}
    // Creating interface conversion operator: operator ::System::ValueType
    operator ::System::ValueType() noexcept {
      return *reinterpret_cast<::System::ValueType*>(this);
    }
    // Get instance field reference: public UnityEngine.UIElements.StyleSheets.StylePropertyId id
    [[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::StyleSheets::StylePropertyId& dyn_id();
    // Get instance field reference: public UnityEngine.UIElements.StyleKeyword keyword
    [[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::StyleKeyword& dyn_keyword();
    // Get instance field reference: public System.Single number
    [[deprecated("Use field access instead!")]] float& dyn_number();
    // Get instance field reference: public UnityEngine.UIElements.Length length
    [[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::Length& dyn_length();
    // Get instance field reference: public UnityEngine.Color color
    [[deprecated("Use field access instead!")]] ::UnityEngine::Color& dyn_color();
    // Get instance field reference: public System.Runtime.InteropServices.GCHandle resource
    [[deprecated("Use field access instead!")]] ::System::Runtime::InteropServices::GCHandle& dyn_resource();
    // Get instance field reference: public UnityEngine.UIElements.BackgroundPosition position
    [[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::BackgroundPosition& dyn_position();
    // Get instance field reference: public UnityEngine.UIElements.BackgroundRepeat repeat
    [[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::BackgroundRepeat& dyn_repeat();
  }; // UnityEngine.UIElements.StyleSheets.StyleValue
  #pragma pack(pop)
  static check_size<sizeof(StyleValue), 8 + sizeof(::UnityEngine::UIElements::BackgroundRepeat)> __UnityEngine_UIElements_StyleSheets_StyleValueSizeCheck;
  static_assert(sizeof(StyleValue) == 0x10);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
