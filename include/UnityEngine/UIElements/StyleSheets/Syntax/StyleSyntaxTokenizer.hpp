// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.UIElements.StyleSheets.Syntax.StyleSyntaxToken
#include "UnityEngine/UIElements/StyleSheets/Syntax/StyleSyntaxToken.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Completed forward declares
// Type namespace: UnityEngine.UIElements.StyleSheets.Syntax
namespace UnityEngine::UIElements::StyleSheets::Syntax {
  // Forward declaring type: StyleSyntaxTokenizer
  class StyleSyntaxTokenizer;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxTokenizer);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxTokenizer*, "UnityEngine.UIElements.StyleSheets.Syntax", "StyleSyntaxTokenizer");
// Type namespace: UnityEngine.UIElements.StyleSheets.Syntax
namespace UnityEngine::UIElements::StyleSheets::Syntax {
  // Size: 0x1C
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.UIElements.StyleSheets.Syntax.StyleSyntaxTokenizer
  // [TokenAttribute] Offset: FFFFFFFF
  class StyleSyntaxTokenizer : public ::Il2CppObject {
    public:
    public:
    // private System.Collections.Generic.List`1<UnityEngine.UIElements.StyleSheets.Syntax.StyleSyntaxToken> m_Tokens
    // Size: 0x8
    // Offset: 0x10
    ::System::Collections::Generic::List_1<::UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken>* m_Tokens;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken>*) == 0x8);
    // private System.Int32 m_CurrentTokenIndex
    // Size: 0x4
    // Offset: 0x18
    int m_CurrentTokenIndex;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Get instance field reference: private System.Collections.Generic.List`1<UnityEngine.UIElements.StyleSheets.Syntax.StyleSyntaxToken> m_Tokens
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken>*& dyn_m_Tokens();
    // Get instance field reference: private System.Int32 m_CurrentTokenIndex
    [[deprecated("Use field access instead!")]] int& dyn_m_CurrentTokenIndex();
    // public UnityEngine.UIElements.StyleSheets.Syntax.StyleSyntaxToken get_current()
    // Offset: 0x5603370
    ::UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken get_current();
    // public UnityEngine.UIElements.StyleSheets.Syntax.StyleSyntaxToken MoveNext()
    // Offset: 0x5603FE8
    ::UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken MoveNext();
    // public UnityEngine.UIElements.StyleSheets.Syntax.StyleSyntaxToken PeekNext()
    // Offset: 0x5604260
    ::UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken PeekNext();
    // public System.Void Tokenize(System.String syntax)
    // Offset: 0x5602724
    void Tokenize(::StringW syntax);
    // static private System.Boolean IsNextCharacter(System.String s, System.Int32 index, System.Char c)
    // Offset: 0x5604B3C
    static bool IsNextCharacter(::StringW s, int index, ::Il2CppChar c);
    // static private System.Boolean IsNextLetterOrDash(System.String s, System.Int32 index)
    // Offset: 0x5604C18
    static bool IsNextLetterOrDash(::StringW s, int index);
    // static private System.Boolean IsNextNumber(System.String s, System.Int32 index)
    // Offset: 0x5604B80
    static bool IsNextNumber(::StringW s, int index);
    // static private System.Int32 GlobCharacter(System.String s, System.Int32 index, System.Char c)
    // Offset: 0x5604B00
    static int GlobCharacter(::StringW s, int index, ::Il2CppChar c);
    // public System.Void .ctor()
    // Offset: 0x5602694
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static StyleSyntaxTokenizer* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxTokenizer::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<StyleSyntaxTokenizer*, creationType>()));
    }
  }; // UnityEngine.UIElements.StyleSheets.Syntax.StyleSyntaxTokenizer
  #pragma pack(pop)
  static check_size<sizeof(StyleSyntaxTokenizer), 24 + sizeof(int)> __UnityEngine_UIElements_StyleSheets_Syntax_StyleSyntaxTokenizerSizeCheck;
  static_assert(sizeof(StyleSyntaxTokenizer) == 0x1C);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxTokenizer::get_current
// Il2CppName: get_current
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken (UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxTokenizer::*)()>(&UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxTokenizer::get_current)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxTokenizer*), "get_current", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxTokenizer::MoveNext
// Il2CppName: MoveNext
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken (UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxTokenizer::*)()>(&UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxTokenizer::MoveNext)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxTokenizer*), "MoveNext", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxTokenizer::PeekNext
// Il2CppName: PeekNext
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken (UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxTokenizer::*)()>(&UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxTokenizer::PeekNext)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxTokenizer*), "PeekNext", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxTokenizer::Tokenize
// Il2CppName: Tokenize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxTokenizer::*)(::StringW)>(&UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxTokenizer::Tokenize)> {
  static const MethodInfo* get() {
    static auto* syntax = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxTokenizer*), "Tokenize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{syntax});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxTokenizer::IsNextCharacter
// Il2CppName: IsNextCharacter
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::StringW, int, ::Il2CppChar)>(&UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxTokenizer::IsNextCharacter)> {
  static const MethodInfo* get() {
    static auto* s = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* c = &::il2cpp_utils::GetClassFromName("System", "Char")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxTokenizer*), "IsNextCharacter", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{s, index, c});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxTokenizer::IsNextLetterOrDash
// Il2CppName: IsNextLetterOrDash
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::StringW, int)>(&UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxTokenizer::IsNextLetterOrDash)> {
  static const MethodInfo* get() {
    static auto* s = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxTokenizer*), "IsNextLetterOrDash", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{s, index});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxTokenizer::IsNextNumber
// Il2CppName: IsNextNumber
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::StringW, int)>(&UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxTokenizer::IsNextNumber)> {
  static const MethodInfo* get() {
    static auto* s = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxTokenizer*), "IsNextNumber", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{s, index});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxTokenizer::GlobCharacter
// Il2CppName: GlobCharacter
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::StringW, int, ::Il2CppChar)>(&UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxTokenizer::GlobCharacter)> {
  static const MethodInfo* get() {
    static auto* s = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* c = &::il2cpp_utils::GetClassFromName("System", "Char")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxTokenizer*), "GlobCharacter", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{s, index, c});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxTokenizer::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
