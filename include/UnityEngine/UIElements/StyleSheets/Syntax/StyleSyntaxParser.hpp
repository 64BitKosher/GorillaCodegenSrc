// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.UIElements.StyleSheets.Syntax.ExpressionCombinator
#include "UnityEngine/UIElements/StyleSheets/Syntax/ExpressionCombinator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
  // Forward declaring type: Stack`1<T>
  template<typename T>
  class Stack_1;
  // Forward declaring type: Dictionary`2<TKey, TValue>
  template<typename TKey, typename TValue>
  class Dictionary_2;
}
// Forward declaring namespace: UnityEngine::UIElements::StyleSheets::Syntax
namespace UnityEngine::UIElements::StyleSheets::Syntax {
  // Forward declaring type: Expression
  class Expression;
  // Forward declaring type: StyleSyntaxTokenizer
  class StyleSyntaxTokenizer;
  // Forward declaring type: ExpressionMultiplier
  struct ExpressionMultiplier;
  // Forward declaring type: StyleSyntaxToken
  struct StyleSyntaxToken;
}
// Completed forward declares
// Type namespace: UnityEngine.UIElements.StyleSheets.Syntax
namespace UnityEngine::UIElements::StyleSheets::Syntax {
  // Forward declaring type: StyleSyntaxParser
  class StyleSyntaxParser;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxParser);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxParser*, "UnityEngine.UIElements.StyleSheets.Syntax", "StyleSyntaxParser");
// Type namespace: UnityEngine.UIElements.StyleSheets.Syntax
namespace UnityEngine::UIElements::StyleSheets::Syntax {
  // Size: 0x30
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.UIElements.StyleSheets.Syntax.StyleSyntaxParser
  // [TokenAttribute] Offset: FFFFFFFF
  class StyleSyntaxParser : public ::Il2CppObject {
    public:
    public:
    // private System.Collections.Generic.List`1<UnityEngine.UIElements.StyleSheets.Syntax.Expression> m_ProcessExpressionList
    // Size: 0x8
    // Offset: 0x10
    ::System::Collections::Generic::List_1<::UnityEngine::UIElements::StyleSheets::Syntax::Expression*>* m_ProcessExpressionList;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::UnityEngine::UIElements::StyleSheets::Syntax::Expression*>*) == 0x8);
    // private System.Collections.Generic.Stack`1<UnityEngine.UIElements.StyleSheets.Syntax.Expression> m_ExpressionStack
    // Size: 0x8
    // Offset: 0x18
    ::System::Collections::Generic::Stack_1<::UnityEngine::UIElements::StyleSheets::Syntax::Expression*>* m_ExpressionStack;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::Stack_1<::UnityEngine::UIElements::StyleSheets::Syntax::Expression*>*) == 0x8);
    // private System.Collections.Generic.Stack`1<UnityEngine.UIElements.StyleSheets.Syntax.ExpressionCombinator> m_CombinatorStack
    // Size: 0x8
    // Offset: 0x20
    ::System::Collections::Generic::Stack_1<::UnityEngine::UIElements::StyleSheets::Syntax::ExpressionCombinator>* m_CombinatorStack;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::Stack_1<::UnityEngine::UIElements::StyleSheets::Syntax::ExpressionCombinator>*) == 0x8);
    // private System.Collections.Generic.Dictionary`2<System.String,UnityEngine.UIElements.StyleSheets.Syntax.Expression> m_ParsedExpressionCache
    // Size: 0x8
    // Offset: 0x28
    ::System::Collections::Generic::Dictionary_2<::StringW, ::UnityEngine::UIElements::StyleSheets::Syntax::Expression*>* m_ParsedExpressionCache;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::Dictionary_2<::StringW, ::UnityEngine::UIElements::StyleSheets::Syntax::Expression*>*) == 0x8);
    public:
    // Get instance field reference: private System.Collections.Generic.List`1<UnityEngine.UIElements.StyleSheets.Syntax.Expression> m_ProcessExpressionList
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::UIElements::StyleSheets::Syntax::Expression*>*& dyn_m_ProcessExpressionList();
    // Get instance field reference: private System.Collections.Generic.Stack`1<UnityEngine.UIElements.StyleSheets.Syntax.Expression> m_ExpressionStack
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::Stack_1<::UnityEngine::UIElements::StyleSheets::Syntax::Expression*>*& dyn_m_ExpressionStack();
    // Get instance field reference: private System.Collections.Generic.Stack`1<UnityEngine.UIElements.StyleSheets.Syntax.ExpressionCombinator> m_CombinatorStack
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::Stack_1<::UnityEngine::UIElements::StyleSheets::Syntax::ExpressionCombinator>*& dyn_m_CombinatorStack();
    // Get instance field reference: private System.Collections.Generic.Dictionary`2<System.String,UnityEngine.UIElements.StyleSheets.Syntax.Expression> m_ParsedExpressionCache
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::StringW, ::UnityEngine::UIElements::StyleSheets::Syntax::Expression*>*& dyn_m_ParsedExpressionCache();
    // public UnityEngine.UIElements.StyleSheets.Syntax.Expression Parse(System.String syntax)
    // Offset: 0x5602500
    ::UnityEngine::UIElements::StyleSheets::Syntax::Expression* Parse(::StringW syntax);
    // private UnityEngine.UIElements.StyleSheets.Syntax.Expression ParseExpression(UnityEngine.UIElements.StyleSheets.Syntax.StyleSyntaxTokenizer tokenizer)
    // Offset: 0x56030F8
    ::UnityEngine::UIElements::StyleSheets::Syntax::Expression* ParseExpression(::UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxTokenizer* tokenizer);
    // private System.Void ProcessCombinatorStack()
    // Offset: 0x5603908
    void ProcessCombinatorStack();
    // private UnityEngine.UIElements.StyleSheets.Syntax.Expression ParseTerm(UnityEngine.UIElements.StyleSheets.Syntax.StyleSyntaxTokenizer tokenizer)
    // Offset: 0x5603430
    ::UnityEngine::UIElements::StyleSheets::Syntax::Expression* ParseTerm(::UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxTokenizer* tokenizer);
    // private UnityEngine.UIElements.StyleSheets.Syntax.ExpressionCombinator ParseCombinatorType(UnityEngine.UIElements.StyleSheets.Syntax.StyleSyntaxTokenizer tokenizer)
    // Offset: 0x56037B8
    ::UnityEngine::UIElements::StyleSheets::Syntax::ExpressionCombinator ParseCombinatorType(::UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxTokenizer* tokenizer);
    // private UnityEngine.UIElements.StyleSheets.Syntax.Expression ParseGroup(UnityEngine.UIElements.StyleSheets.Syntax.StyleSyntaxTokenizer tokenizer)
    // Offset: 0x5603590
    ::UnityEngine::UIElements::StyleSheets::Syntax::Expression* ParseGroup(::UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxTokenizer* tokenizer);
    // private UnityEngine.UIElements.StyleSheets.Syntax.Expression ParseDataType(UnityEngine.UIElements.StyleSheets.Syntax.StyleSyntaxTokenizer tokenizer)
    // Offset: 0x5603C18
    ::UnityEngine::UIElements::StyleSheets::Syntax::Expression* ParseDataType(::UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxTokenizer* tokenizer);
    // private UnityEngine.UIElements.StyleSheets.Syntax.Expression ParseNonTerminalValue(System.String syntax)
    // Offset: 0x5604378
    ::UnityEngine::UIElements::StyleSheets::Syntax::Expression* ParseNonTerminalValue(::StringW syntax);
    // private UnityEngine.UIElements.StyleSheets.Syntax.Expression ParseProperty(UnityEngine.UIElements.StyleSheets.Syntax.StyleSyntaxTokenizer tokenizer)
    // Offset: 0x56044D4
    ::UnityEngine::UIElements::StyleSheets::Syntax::Expression* ParseProperty(::UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxTokenizer* tokenizer);
    // private System.Void ParseMultiplier(UnityEngine.UIElements.StyleSheets.Syntax.StyleSyntaxTokenizer tokenizer, ref UnityEngine.UIElements.StyleSheets.Syntax.ExpressionMultiplier multiplier)
    // Offset: 0x56040EC
    void ParseMultiplier(::UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxTokenizer* tokenizer, ByRef<::UnityEngine::UIElements::StyleSheets::Syntax::ExpressionMultiplier> multiplier);
    // private System.Void ParseRanges(UnityEngine.UIElements.StyleSheets.Syntax.StyleSyntaxTokenizer tokenizer, out System.Int32 min, out System.Int32 max)
    // Offset: 0x56047E8
    void ParseRanges(::UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxTokenizer* tokenizer, ByRef<int> min, ByRef<int> max);
    // static private System.Void EatSpace(UnityEngine.UIElements.StyleSheets.Syntax.StyleSyntaxTokenizer tokenizer)
    // Offset: 0x5604338
    static void EatSpace(::UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxTokenizer* tokenizer);
    // static private System.Boolean IsExpressionEnd(UnityEngine.UIElements.StyleSheets.Syntax.StyleSyntaxToken token)
    // Offset: 0x5603BF8
    static bool IsExpressionEnd(::UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken token);
    // static private System.Boolean IsCombinator(UnityEngine.UIElements.StyleSheets.Syntax.StyleSyntaxToken token)
    // Offset: 0x5604324
    static bool IsCombinator(::UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken token);
    // static private System.Boolean IsMultiplier(UnityEngine.UIElements.StyleSheets.Syntax.StyleSyntaxToken token)
    // Offset: 0x56047C4
    static bool IsMultiplier(::UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken token);
    // public System.Void .ctor()
    // Offset: 0x5604904
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static StyleSyntaxParser* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxParser::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<StyleSyntaxParser*, creationType>()));
    }
  }; // UnityEngine.UIElements.StyleSheets.Syntax.StyleSyntaxParser
  #pragma pack(pop)
  static check_size<sizeof(StyleSyntaxParser), 40 + sizeof(::System::Collections::Generic::Dictionary_2<::StringW, ::UnityEngine::UIElements::StyleSheets::Syntax::Expression*>*)> __UnityEngine_UIElements_StyleSheets_Syntax_StyleSyntaxParserSizeCheck;
  static_assert(sizeof(StyleSyntaxParser) == 0x30);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxParser::Parse
// Il2CppName: Parse
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::StyleSheets::Syntax::Expression* (UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxParser::*)(::StringW)>(&UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxParser::Parse)> {
  static const MethodInfo* get() {
    static auto* syntax = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxParser*), "Parse", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{syntax});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxParser::ParseExpression
// Il2CppName: ParseExpression
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::StyleSheets::Syntax::Expression* (UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxParser::*)(::UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxTokenizer*)>(&UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxParser::ParseExpression)> {
  static const MethodInfo* get() {
    static auto* tokenizer = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements.StyleSheets.Syntax", "StyleSyntaxTokenizer")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxParser*), "ParseExpression", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{tokenizer});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxParser::ProcessCombinatorStack
// Il2CppName: ProcessCombinatorStack
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxParser::*)()>(&UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxParser::ProcessCombinatorStack)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxParser*), "ProcessCombinatorStack", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxParser::ParseTerm
// Il2CppName: ParseTerm
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::StyleSheets::Syntax::Expression* (UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxParser::*)(::UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxTokenizer*)>(&UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxParser::ParseTerm)> {
  static const MethodInfo* get() {
    static auto* tokenizer = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements.StyleSheets.Syntax", "StyleSyntaxTokenizer")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxParser*), "ParseTerm", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{tokenizer});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxParser::ParseCombinatorType
// Il2CppName: ParseCombinatorType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::StyleSheets::Syntax::ExpressionCombinator (UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxParser::*)(::UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxTokenizer*)>(&UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxParser::ParseCombinatorType)> {
  static const MethodInfo* get() {
    static auto* tokenizer = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements.StyleSheets.Syntax", "StyleSyntaxTokenizer")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxParser*), "ParseCombinatorType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{tokenizer});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxParser::ParseGroup
// Il2CppName: ParseGroup
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::StyleSheets::Syntax::Expression* (UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxParser::*)(::UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxTokenizer*)>(&UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxParser::ParseGroup)> {
  static const MethodInfo* get() {
    static auto* tokenizer = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements.StyleSheets.Syntax", "StyleSyntaxTokenizer")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxParser*), "ParseGroup", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{tokenizer});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxParser::ParseDataType
// Il2CppName: ParseDataType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::StyleSheets::Syntax::Expression* (UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxParser::*)(::UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxTokenizer*)>(&UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxParser::ParseDataType)> {
  static const MethodInfo* get() {
    static auto* tokenizer = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements.StyleSheets.Syntax", "StyleSyntaxTokenizer")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxParser*), "ParseDataType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{tokenizer});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxParser::ParseNonTerminalValue
// Il2CppName: ParseNonTerminalValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::StyleSheets::Syntax::Expression* (UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxParser::*)(::StringW)>(&UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxParser::ParseNonTerminalValue)> {
  static const MethodInfo* get() {
    static auto* syntax = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxParser*), "ParseNonTerminalValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{syntax});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxParser::ParseProperty
// Il2CppName: ParseProperty
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::StyleSheets::Syntax::Expression* (UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxParser::*)(::UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxTokenizer*)>(&UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxParser::ParseProperty)> {
  static const MethodInfo* get() {
    static auto* tokenizer = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements.StyleSheets.Syntax", "StyleSyntaxTokenizer")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxParser*), "ParseProperty", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{tokenizer});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxParser::ParseMultiplier
// Il2CppName: ParseMultiplier
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxParser::*)(::UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxTokenizer*, ByRef<::UnityEngine::UIElements::StyleSheets::Syntax::ExpressionMultiplier>)>(&UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxParser::ParseMultiplier)> {
  static const MethodInfo* get() {
    static auto* tokenizer = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements.StyleSheets.Syntax", "StyleSyntaxTokenizer")->byval_arg;
    static auto* multiplier = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements.StyleSheets.Syntax", "ExpressionMultiplier")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxParser*), "ParseMultiplier", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{tokenizer, multiplier});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxParser::ParseRanges
// Il2CppName: ParseRanges
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxParser::*)(::UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxTokenizer*, ByRef<int>, ByRef<int>)>(&UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxParser::ParseRanges)> {
  static const MethodInfo* get() {
    static auto* tokenizer = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements.StyleSheets.Syntax", "StyleSyntaxTokenizer")->byval_arg;
    static auto* min = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    static auto* max = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxParser*), "ParseRanges", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{tokenizer, min, max});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxParser::EatSpace
// Il2CppName: EatSpace
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxTokenizer*)>(&UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxParser::EatSpace)> {
  static const MethodInfo* get() {
    static auto* tokenizer = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements.StyleSheets.Syntax", "StyleSyntaxTokenizer")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxParser*), "EatSpace", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{tokenizer});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxParser::IsExpressionEnd
// Il2CppName: IsExpressionEnd
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken)>(&UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxParser::IsExpressionEnd)> {
  static const MethodInfo* get() {
    static auto* token = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements.StyleSheets.Syntax", "StyleSyntaxToken")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxParser*), "IsExpressionEnd", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{token});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxParser::IsCombinator
// Il2CppName: IsCombinator
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken)>(&UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxParser::IsCombinator)> {
  static const MethodInfo* get() {
    static auto* token = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements.StyleSheets.Syntax", "StyleSyntaxToken")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxParser*), "IsCombinator", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{token});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxParser::IsMultiplier
// Il2CppName: IsMultiplier
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken)>(&UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxParser::IsMultiplier)> {
  static const MethodInfo* get() {
    static auto* token = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements.StyleSheets.Syntax", "StyleSyntaxToken")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxParser*), "IsMultiplier", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{token});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxParser::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
