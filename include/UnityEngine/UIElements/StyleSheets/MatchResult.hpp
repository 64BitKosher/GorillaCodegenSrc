// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Including type: UnityEngine.UIElements.StyleSheets.MatchResultErrorCode
#include "UnityEngine/UIElements/StyleSheets/MatchResultErrorCode.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Type namespace: UnityEngine.UIElements.StyleSheets
namespace UnityEngine::UIElements::StyleSheets {
  // Forward declaring type: MatchResult
  struct MatchResult;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::UIElements::StyleSheets::MatchResult, "UnityEngine.UIElements.StyleSheets", "MatchResult");
// Type namespace: UnityEngine.UIElements.StyleSheets
namespace UnityEngine::UIElements::StyleSheets {
  // Size: 0x10
  #pragma pack(push, 1)
  // WARNING Layout: Sequential may not be correctly taken into account!
  // Autogenerated type: UnityEngine.UIElements.StyleSheets.MatchResult
  // [TokenAttribute] Offset: FFFFFFFF
  struct MatchResult/*, public ::System::ValueType*/ {
    public:
    public:
    // public UnityEngine.UIElements.StyleSheets.MatchResultErrorCode errorCode
    // Size: 0x4
    // Offset: 0x0
    ::UnityEngine::UIElements::StyleSheets::MatchResultErrorCode errorCode;
    // Field size check
    static_assert(sizeof(::UnityEngine::UIElements::StyleSheets::MatchResultErrorCode) == 0x4);
    // Padding between fields: errorCode and: errorValue
    char __padding0[0x4] = {};
    // public System.String errorValue
    // Size: 0x8
    // Offset: 0x8
    ::StringW errorValue;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    public:
    // Creating value type constructor for type: MatchResult
    constexpr MatchResult(::UnityEngine::UIElements::StyleSheets::MatchResultErrorCode errorCode_ = {}, ::StringW errorValue_ = {}) noexcept : errorCode{errorCode_}, errorValue{errorValue_} {}
    // Creating interface conversion operator: operator ::System::ValueType
    operator ::System::ValueType() noexcept {
      return *reinterpret_cast<::System::ValueType*>(this);
    }
    // Get instance field reference: public UnityEngine.UIElements.StyleSheets.MatchResultErrorCode errorCode
    [[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::StyleSheets::MatchResultErrorCode& dyn_errorCode();
    // Get instance field reference: public System.String errorValue
    [[deprecated("Use field access instead!")]] ::StringW& dyn_errorValue();
    // public System.Boolean get_success()
    // Offset: 0x5600CFC
    bool get_success();
  }; // UnityEngine.UIElements.StyleSheets.MatchResult
  #pragma pack(pop)
  static check_size<sizeof(MatchResult), 8 + sizeof(::StringW)> __UnityEngine_UIElements_StyleSheets_MatchResultSizeCheck;
  static_assert(sizeof(MatchResult) == 0x10);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::UIElements::StyleSheets::MatchResult::get_success
// Il2CppName: get_success
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::StyleSheets::MatchResult::*)()>(&UnityEngine::UIElements::StyleSheets::MatchResult::get_success)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::StyleSheets::MatchResult), "get_success", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
