// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Including type: UnityEngine.UIElements.StyleValueHandle
#include "UnityEngine/UIElements/StyleValueHandle.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::UIElements
namespace UnityEngine::UIElements {
  // Forward declaring type: StyleSheet
  class StyleSheet;
}
// Completed forward declares
// Type namespace: UnityEngine.UIElements.StyleSheets
namespace UnityEngine::UIElements::StyleSheets {
  // Forward declaring type: StylePropertyValue
  struct StylePropertyValue;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::UIElements::StyleSheets::StylePropertyValue, "UnityEngine.UIElements.StyleSheets", "StylePropertyValue");
// Type namespace: UnityEngine.UIElements.StyleSheets
namespace UnityEngine::UIElements::StyleSheets {
  // Size: 0x10
  #pragma pack(push, 1)
  // WARNING Layout: Sequential may not be correctly taken into account!
  // Autogenerated type: UnityEngine.UIElements.StyleSheets.StylePropertyValue
  // [TokenAttribute] Offset: FFFFFFFF
  struct StylePropertyValue/*, public ::System::ValueType*/ {
    public:
    public:
    // public UnityEngine.UIElements.StyleSheet sheet
    // Size: 0x8
    // Offset: 0x0
    ::UnityEngine::UIElements::StyleSheet* sheet;
    // Field size check
    static_assert(sizeof(::UnityEngine::UIElements::StyleSheet*) == 0x8);
    // public UnityEngine.UIElements.StyleValueHandle handle
    // Size: 0x8
    // Offset: 0x8
    ::UnityEngine::UIElements::StyleValueHandle handle;
    // Field size check
    static_assert(sizeof(::UnityEngine::UIElements::StyleValueHandle) == 0x8);
    public:
    // Creating value type constructor for type: StylePropertyValue
    constexpr StylePropertyValue(::UnityEngine::UIElements::StyleSheet* sheet_ = {}, ::UnityEngine::UIElements::StyleValueHandle handle_ = {}) noexcept : sheet{sheet_}, handle{handle_} {}
    // Creating interface conversion operator: operator ::System::ValueType
    operator ::System::ValueType() noexcept {
      return *reinterpret_cast<::System::ValueType*>(this);
    }
    // Get instance field reference: public UnityEngine.UIElements.StyleSheet sheet
    [[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::StyleSheet*& dyn_sheet();
    // Get instance field reference: public UnityEngine.UIElements.StyleValueHandle handle
    [[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::StyleValueHandle& dyn_handle();
  }; // UnityEngine.UIElements.StyleSheets.StylePropertyValue
  #pragma pack(pop)
  static check_size<sizeof(StylePropertyValue), 8 + sizeof(::UnityEngine::UIElements::StyleValueHandle)> __UnityEngine_UIElements_StyleSheets_StylePropertyValueSizeCheck;
  static_assert(sizeof(StylePropertyValue) == 0x10);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
