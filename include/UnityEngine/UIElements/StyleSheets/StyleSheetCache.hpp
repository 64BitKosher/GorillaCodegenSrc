// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.UIElements.StyleSheets.StylePropertyId
#include "UnityEngine/UIElements/StyleSheets/StylePropertyId.hpp"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::UIElements
namespace UnityEngine::UIElements {
  // Forward declaring type: StyleSheet
  class StyleSheet;
  // Forward declaring type: StyleRule
  class StyleRule;
}
// Forward declaring namespace: UnityEngine::UIElements::StyleSheets
namespace UnityEngine::UIElements::StyleSheets {
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: Dictionary`2<TKey, TValue>
  template<typename TKey, typename TValue>
  class Dictionary_2;
}
// Completed forward declares
// Type namespace: UnityEngine.UIElements.StyleSheets
namespace UnityEngine::UIElements::StyleSheets {
  // Forward declaring type: StyleSheetCache
  class StyleSheetCache;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::UIElements::StyleSheets::StyleSheetCache);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::UIElements::StyleSheets::StyleSheetCache*, "UnityEngine.UIElements.StyleSheets", "StyleSheetCache");
// Type namespace: UnityEngine.UIElements.StyleSheets
namespace UnityEngine::UIElements::StyleSheets {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.UIElements.StyleSheets.StyleSheetCache
  // [TokenAttribute] Offset: FFFFFFFF
  class StyleSheetCache : public ::Il2CppObject {
    public:
    // Nested type: ::UnityEngine::UIElements::StyleSheets::StyleSheetCache::SheetHandleKey
    struct SheetHandleKey;
    // Nested type: ::UnityEngine::UIElements::StyleSheets::StyleSheetCache::SheetHandleKeyComparer
    class SheetHandleKeyComparer;
    // Size: 0x8
    #pragma pack(push, 1)
    // WARNING Layout: Sequential may not be correctly taken into account!
    // Autogenerated type: UnityEngine.UIElements.StyleSheets.StyleSheetCache/SheetHandleKey
    // [TokenAttribute] Offset: FFFFFFFF
    struct SheetHandleKey/*, public ::System::ValueType*/ {
      public:
      public:
      // public readonly System.Int32 sheetInstanceID
      // Size: 0x4
      // Offset: 0x0
      int sheetInstanceID;
      // Field size check
      static_assert(sizeof(int) == 0x4);
      // public readonly System.Int32 index
      // Size: 0x4
      // Offset: 0x4
      int index;
      // Field size check
      static_assert(sizeof(int) == 0x4);
      public:
      // Creating value type constructor for type: SheetHandleKey
      constexpr SheetHandleKey(int sheetInstanceID_ = {}, int index_ = {}) noexcept : sheetInstanceID{sheetInstanceID_}, index{index_} {}
      // Creating interface conversion operator: operator ::System::ValueType
      operator ::System::ValueType() noexcept {
        return *reinterpret_cast<::System::ValueType*>(this);
      }
      // Get instance field reference: public readonly System.Int32 sheetInstanceID
      [[deprecated("Use field access instead!")]] int& dyn_sheetInstanceID();
      // Get instance field reference: public readonly System.Int32 index
      [[deprecated("Use field access instead!")]] int& dyn_index();
      // public System.Void .ctor(UnityEngine.UIElements.StyleSheet sheet, System.Int32 index)
      // Offset: 0x55FEC24
      SheetHandleKey(::UnityEngine::UIElements::StyleSheet* sheet, int index);
    }; // UnityEngine.UIElements.StyleSheets.StyleSheetCache/SheetHandleKey
    #pragma pack(pop)
    static check_size<sizeof(StyleSheetCache::SheetHandleKey), 4 + sizeof(int)> __UnityEngine_UIElements_StyleSheets_StyleSheetCache_SheetHandleKeySizeCheck;
    static_assert(sizeof(StyleSheetCache::SheetHandleKey) == 0x8);
    // Get static field: static private UnityEngine.UIElements.StyleSheets.StyleSheetCache/SheetHandleKeyComparer s_Comparer
    static ::UnityEngine::UIElements::StyleSheets::StyleSheetCache::SheetHandleKeyComparer* _get_s_Comparer();
    // Set static field: static private UnityEngine.UIElements.StyleSheets.StyleSheetCache/SheetHandleKeyComparer s_Comparer
    static void _set_s_Comparer(::UnityEngine::UIElements::StyleSheets::StyleSheetCache::SheetHandleKeyComparer* value);
    // Get static field: static private System.Collections.Generic.Dictionary`2<UnityEngine.UIElements.StyleSheets.StyleSheetCache/SheetHandleKey,UnityEngine.UIElements.StyleSheets.StylePropertyId[]> s_RulePropertyIdsCache
    static ::System::Collections::Generic::Dictionary_2<::UnityEngine::UIElements::StyleSheets::StyleSheetCache::SheetHandleKey, ::ArrayW<::UnityEngine::UIElements::StyleSheets::StylePropertyId>>* _get_s_RulePropertyIdsCache();
    // Set static field: static private System.Collections.Generic.Dictionary`2<UnityEngine.UIElements.StyleSheets.StyleSheetCache/SheetHandleKey,UnityEngine.UIElements.StyleSheets.StylePropertyId[]> s_RulePropertyIdsCache
    static void _set_s_RulePropertyIdsCache(::System::Collections::Generic::Dictionary_2<::UnityEngine::UIElements::StyleSheets::StyleSheetCache::SheetHandleKey, ::ArrayW<::UnityEngine::UIElements::StyleSheets::StylePropertyId>>* value);
    // static UnityEngine.UIElements.StyleSheets.StylePropertyId[] GetPropertyIds(UnityEngine.UIElements.StyleSheet sheet, System.Int32 ruleIndex)
    // Offset: 0x55FA064
    static ::ArrayW<::UnityEngine::UIElements::StyleSheets::StylePropertyId> GetPropertyIds(::UnityEngine::UIElements::StyleSheet* sheet, int ruleIndex);
    // static UnityEngine.UIElements.StyleSheets.StylePropertyId[] GetPropertyIds(UnityEngine.UIElements.StyleRule rule)
    // Offset: 0x55FED48
    static ::ArrayW<::UnityEngine::UIElements::StyleSheets::StylePropertyId> GetPropertyIds(::UnityEngine::UIElements::StyleRule* rule);
    // static private UnityEngine.UIElements.StyleSheets.StylePropertyId GetPropertyId(UnityEngine.UIElements.StyleRule rule, System.Int32 index)
    // Offset: 0x55FEC58
    static ::UnityEngine::UIElements::StyleSheets::StylePropertyId GetPropertyId(::UnityEngine::UIElements::StyleRule* rule, int index);
    // static private System.Void .cctor()
    // Offset: 0x55FEE28
    static void _cctor();
  }; // UnityEngine.UIElements.StyleSheets.StyleSheetCache
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::UIElements::StyleSheets::StyleSheetCache::SheetHandleKey, "UnityEngine.UIElements.StyleSheets", "StyleSheetCache/SheetHandleKey");
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::UIElements::StyleSheets::StyleSheetCache::GetPropertyIds
// Il2CppName: GetPropertyIds
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::UnityEngine::UIElements::StyleSheets::StylePropertyId> (*)(::UnityEngine::UIElements::StyleSheet*, int)>(&UnityEngine::UIElements::StyleSheets::StyleSheetCache::GetPropertyIds)> {
  static const MethodInfo* get() {
    static auto* sheet = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "StyleSheet")->byval_arg;
    static auto* ruleIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::StyleSheets::StyleSheetCache*), "GetPropertyIds", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sheet, ruleIndex});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::StyleSheets::StyleSheetCache::GetPropertyIds
// Il2CppName: GetPropertyIds
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::UnityEngine::UIElements::StyleSheets::StylePropertyId> (*)(::UnityEngine::UIElements::StyleRule*)>(&UnityEngine::UIElements::StyleSheets::StyleSheetCache::GetPropertyIds)> {
  static const MethodInfo* get() {
    static auto* rule = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "StyleRule")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::StyleSheets::StyleSheetCache*), "GetPropertyIds", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{rule});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::StyleSheets::StyleSheetCache::GetPropertyId
// Il2CppName: GetPropertyId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::StyleSheets::StylePropertyId (*)(::UnityEngine::UIElements::StyleRule*, int)>(&UnityEngine::UIElements::StyleSheets::StyleSheetCache::GetPropertyId)> {
  static const MethodInfo* get() {
    static auto* rule = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "StyleRule")->byval_arg;
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::StyleSheets::StyleSheetCache*), "GetPropertyId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{rule, index});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::StyleSheets::StyleSheetCache::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&UnityEngine::UIElements::StyleSheets::StyleSheetCache::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::StyleSheets::StyleSheetCache*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
