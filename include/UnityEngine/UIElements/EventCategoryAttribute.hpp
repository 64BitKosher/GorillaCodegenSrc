// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Attribute
#include "System/Attribute.hpp"
// Including type: UnityEngine.UIElements.EventCategory
#include "UnityEngine/UIElements/EventCategory.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Type namespace: UnityEngine.UIElements
namespace UnityEngine::UIElements {
  // Forward declaring type: EventCategoryAttribute
  class EventCategoryAttribute;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::UIElements::EventCategoryAttribute);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::UIElements::EventCategoryAttribute*, "UnityEngine.UIElements", "EventCategoryAttribute");
// Type namespace: UnityEngine.UIElements
namespace UnityEngine::UIElements {
  // Size: 0x14
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.UIElements.EventCategoryAttribute
  // [TokenAttribute] Offset: FFFFFFFF
  // [AttributeUsageAttribute] Offset: FFFFFFFF
  class EventCategoryAttribute : public ::System::Attribute {
    public:
    public:
    // UnityEngine.UIElements.EventCategory category
    // Size: 0x4
    // Offset: 0x10
    ::UnityEngine::UIElements::EventCategory category;
    // Field size check
    static_assert(sizeof(::UnityEngine::UIElements::EventCategory) == 0x4);
    public:
    // Creating conversion operator: operator ::UnityEngine::UIElements::EventCategory
    constexpr operator ::UnityEngine::UIElements::EventCategory() const noexcept {
      return category;
    }
    // Get instance field reference: UnityEngine.UIElements.EventCategory category
    [[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::EventCategory& dyn_category();
    // public System.Void .ctor(UnityEngine.UIElements.EventCategory category)
    // Offset: 0x55C2064
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static EventCategoryAttribute* New_ctor(::UnityEngine::UIElements::EventCategory category) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::EventCategoryAttribute::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<EventCategoryAttribute*, creationType>(category)));
    }
  }; // UnityEngine.UIElements.EventCategoryAttribute
  #pragma pack(pop)
  static check_size<sizeof(EventCategoryAttribute), 16 + sizeof(::UnityEngine::UIElements::EventCategory)> __UnityEngine_UIElements_EventCategoryAttributeSizeCheck;
  static_assert(sizeof(EventCategoryAttribute) == 0x14);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::UIElements::EventCategoryAttribute::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
