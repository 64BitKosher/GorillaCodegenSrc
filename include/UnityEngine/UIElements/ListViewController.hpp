// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.UIElements.BaseListViewController
#include "UnityEngine/UIElements/BaseListViewController.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::UIElements
namespace UnityEngine::UIElements {
  // Forward declaring type: ListView
  class ListView;
  // Forward declaring type: VisualElement
  class VisualElement;
}
// Completed forward declares
// Type namespace: UnityEngine.UIElements
namespace UnityEngine::UIElements {
  // Forward declaring type: ListViewController
  class ListViewController;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::UIElements::ListViewController);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::UIElements::ListViewController*, "UnityEngine.UIElements", "ListViewController");
// Type namespace: UnityEngine.UIElements
namespace UnityEngine::UIElements {
  // Size: 0x48
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.UIElements.ListViewController
  // [TokenAttribute] Offset: FFFFFFFF
  class ListViewController : public ::UnityEngine::UIElements::BaseListViewController {
    public:
    // protected UnityEngine.UIElements.ListView get_listView()
    // Offset: 0x559EDC0
    ::UnityEngine::UIElements::ListView* get_listView();
    // protected override UnityEngine.UIElements.VisualElement MakeItem()
    // Offset: 0x559EE3C
    // Implemented from: UnityEngine.UIElements.CollectionViewController
    // Base method: UnityEngine.UIElements.VisualElement CollectionViewController::MakeItem()
    ::UnityEngine::UIElements::VisualElement* MakeItem();
    // protected override System.Void BindItem(UnityEngine.UIElements.VisualElement element, System.Int32 index)
    // Offset: 0x559EF28
    // Implemented from: UnityEngine.UIElements.CollectionViewController
    // Base method: System.Void CollectionViewController::BindItem(UnityEngine.UIElements.VisualElement element, System.Int32 index)
    void BindItem(::UnityEngine::UIElements::VisualElement* element, int index);
    // protected override System.Void UnbindItem(UnityEngine.UIElements.VisualElement element, System.Int32 index)
    // Offset: 0x559F120
    // Implemented from: UnityEngine.UIElements.CollectionViewController
    // Base method: System.Void CollectionViewController::UnbindItem(UnityEngine.UIElements.VisualElement element, System.Int32 index)
    void UnbindItem(::UnityEngine::UIElements::VisualElement* element, int index);
    // protected override System.Void DestroyItem(UnityEngine.UIElements.VisualElement element)
    // Offset: 0x559F170
    // Implemented from: UnityEngine.UIElements.CollectionViewController
    // Base method: System.Void CollectionViewController::DestroyItem(UnityEngine.UIElements.VisualElement element)
    void DestroyItem(::UnityEngine::UIElements::VisualElement* element);
    // public System.Void .ctor()
    // Offset: 0x559F1AC
    // Implemented from: UnityEngine.UIElements.BaseListViewController
    // Base method: System.Void BaseListViewController::.ctor()
    // Base method: System.Void CollectionViewController::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static ListViewController* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::ListViewController::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<ListViewController*, creationType>()));
    }
  }; // UnityEngine.UIElements.ListViewController
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::UIElements::ListViewController::get_listView
// Il2CppName: get_listView
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::ListView* (UnityEngine::UIElements::ListViewController::*)()>(&UnityEngine::UIElements::ListViewController::get_listView)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::ListViewController*), "get_listView", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::ListViewController::MakeItem
// Il2CppName: MakeItem
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::VisualElement* (UnityEngine::UIElements::ListViewController::*)()>(&UnityEngine::UIElements::ListViewController::MakeItem)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::ListViewController*), "MakeItem", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::ListViewController::BindItem
// Il2CppName: BindItem
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::ListViewController::*)(::UnityEngine::UIElements::VisualElement*, int)>(&UnityEngine::UIElements::ListViewController::BindItem)> {
  static const MethodInfo* get() {
    static auto* element = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "VisualElement")->byval_arg;
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::ListViewController*), "BindItem", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{element, index});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::ListViewController::UnbindItem
// Il2CppName: UnbindItem
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::ListViewController::*)(::UnityEngine::UIElements::VisualElement*, int)>(&UnityEngine::UIElements::ListViewController::UnbindItem)> {
  static const MethodInfo* get() {
    static auto* element = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "VisualElement")->byval_arg;
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::ListViewController*), "UnbindItem", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{element, index});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::ListViewController::DestroyItem
// Il2CppName: DestroyItem
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::ListViewController::*)(::UnityEngine::UIElements::VisualElement*)>(&UnityEngine::UIElements::ListViewController::DestroyItem)> {
  static const MethodInfo* get() {
    static auto* element = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "VisualElement")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::ListViewController*), "DestroyItem", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{element});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::ListViewController::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
