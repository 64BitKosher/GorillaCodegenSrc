// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.UIElements.DynamicAtlas
#include "UnityEngine/UIElements/DynamicAtlas.hpp"
// Including type: UnityEngine.UIElements.UIR.LinkedPoolItem`1
#include "UnityEngine/UIElements/UIR/LinkedPoolItem_1.hpp"
// Including type: UnityEngine.UIElements.UIR.Allocator2D/Alloc2D
#include "UnityEngine/UIElements/UIR/Allocator2D_Alloc2D.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::UIElements
namespace UnityEngine::UIElements {
  // Forward declaring type: DynamicAtlasPage
  class DynamicAtlasPage;
}
// Forward declaring namespace: UnityEngine::UIElements::UIR
namespace UnityEngine::UIElements::UIR {
  // Forward declaring type: LinkedPool`1<T>
  template<typename T>
  class LinkedPool_1;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::UIElements::DynamicAtlas::TextureInfo);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::UIElements::DynamicAtlas::TextureInfo*, "UnityEngine.UIElements", "DynamicAtlas/TextureInfo");
// Type namespace: UnityEngine.UIElements
namespace UnityEngine::UIElements {
  // WARNING Size may be invalid!
  // Autogenerated type: UnityEngine.UIElements.DynamicAtlas/TextureInfo
  // [TokenAttribute] Offset: FFFFFFFF
  class DynamicAtlas::TextureInfo : public ::UnityEngine::UIElements::UIR::LinkedPoolItem_1<::UnityEngine::UIElements::DynamicAtlas::TextureInfo*> {
    public:
    public:
    // public UnityEngine.UIElements.DynamicAtlasPage page
    // Size: 0x8
    // Offset: 0x18
    ::UnityEngine::UIElements::DynamicAtlasPage* page;
    // Field size check
    static_assert(sizeof(::UnityEngine::UIElements::DynamicAtlasPage*) == 0x8);
    // public System.Int32 counter
    // Size: 0x4
    // Offset: 0x20
    int counter;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // public UnityEngine.UIElements.UIR.Allocator2D/Alloc2D alloc
    // Size: 0x29
    // Offset: 0x28
    ::UnityEngine::UIElements::UIR::Allocator2D::Alloc2D alloc;
    // Field size check
    static_assert(sizeof(::UnityEngine::UIElements::UIR::Allocator2D::Alloc2D) == 0x29);
    // public UnityEngine.RectInt rect
    // Size: 0x10
    // Offset: 0x58
    ::UnityEngine::RectInt rect;
    // Field size check
    static_assert(sizeof(::UnityEngine::RectInt) == 0x10);
    public:
    // Get static field: static public readonly UnityEngine.UIElements.UIR.LinkedPool`1<UnityEngine.UIElements.DynamicAtlas/TextureInfo> pool
    static ::UnityEngine::UIElements::UIR::LinkedPool_1<::UnityEngine::UIElements::DynamicAtlas::TextureInfo*>* _get_pool();
    // Set static field: static public readonly UnityEngine.UIElements.UIR.LinkedPool`1<UnityEngine.UIElements.DynamicAtlas/TextureInfo> pool
    static void _set_pool(::UnityEngine::UIElements::UIR::LinkedPool_1<::UnityEngine::UIElements::DynamicAtlas::TextureInfo*>* value);
    // Get instance field reference: public UnityEngine.UIElements.DynamicAtlasPage page
    [[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::DynamicAtlasPage*& dyn_page();
    // Get instance field reference: public System.Int32 counter
    [[deprecated("Use field access instead!")]] int& dyn_counter();
    // Get instance field reference: public UnityEngine.UIElements.UIR.Allocator2D/Alloc2D alloc
    [[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::UIR::Allocator2D::Alloc2D& dyn_alloc();
    // Get instance field reference: public UnityEngine.RectInt rect
    [[deprecated("Use field access instead!")]] ::UnityEngine::RectInt& dyn_rect();
    // static private UnityEngine.UIElements.DynamicAtlas/TextureInfo Create()
    // Offset: 0x5592874
    static ::UnityEngine::UIElements::DynamicAtlas::TextureInfo* Create();
    // static private System.Void Reset(UnityEngine.UIElements.DynamicAtlas/TextureInfo info)
    // Offset: 0x559290C
    static void Reset(::UnityEngine::UIElements::DynamicAtlas::TextureInfo* info);
    // static private System.Void .cctor()
    // Offset: 0x5592944
    static void _cctor();
    // public System.Void .ctor()
    // Offset: 0x55928C4
    // Implemented from: UnityEngine.UIElements.UIR.LinkedPoolItem`1
    // Base method: System.Void LinkedPoolItem_1::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static DynamicAtlas::TextureInfo* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::DynamicAtlas::TextureInfo::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<DynamicAtlas::TextureInfo*, creationType>()));
    }
  }; // UnityEngine.UIElements.DynamicAtlas/TextureInfo
  // WARNING Not writing size check since size may be invalid!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::UIElements::DynamicAtlas::TextureInfo::Create
// Il2CppName: Create
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::DynamicAtlas::TextureInfo* (*)()>(&UnityEngine::UIElements::DynamicAtlas::TextureInfo::Create)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::DynamicAtlas::TextureInfo*), "Create", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::DynamicAtlas::TextureInfo::Reset
// Il2CppName: Reset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::UIElements::DynamicAtlas::TextureInfo*)>(&UnityEngine::UIElements::DynamicAtlas::TextureInfo::Reset)> {
  static const MethodInfo* get() {
    static auto* info = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "DynamicAtlas/TextureInfo")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::DynamicAtlas::TextureInfo*), "Reset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{info});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::DynamicAtlas::TextureInfo::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&UnityEngine::UIElements::DynamicAtlas::TextureInfo::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::DynamicAtlas::TextureInfo*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::DynamicAtlas::TextureInfo::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
