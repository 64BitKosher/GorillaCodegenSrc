// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Including type: UnityEngine.UIElements.DragVisualMode
#include "UnityEngine/UIElements/DragVisualMode.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Collections
namespace System::Collections {
  // Forward declaring type: Hashtable
  class Hashtable;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: IEnumerable`1<T>
  template<typename T>
  class IEnumerable_1;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Object
  class Object;
}
// Completed forward declares
// Type namespace: UnityEngine.UIElements
namespace UnityEngine::UIElements {
  // Forward declaring type: StartDragArgs
  struct StartDragArgs;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::UIElements::StartDragArgs, "UnityEngine.UIElements", "StartDragArgs");
// Type namespace: UnityEngine.UIElements
namespace UnityEngine::UIElements {
  // Size: 0x20
  #pragma pack(push, 1)
  // WARNING Layout: Sequential may not be correctly taken into account!
  // Autogenerated type: UnityEngine.UIElements.StartDragArgs
  // [TokenAttribute] Offset: FFFFFFFF
  struct StartDragArgs/*, public ::System::ValueType*/ {
    public:
    public:
    // private readonly System.String <title>k__BackingField
    // Size: 0x8
    // Offset: 0x0
    ::StringW title;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private readonly UnityEngine.UIElements.DragVisualMode <visualMode>k__BackingField
    // Size: 0x4
    // Offset: 0x8
    ::UnityEngine::UIElements::DragVisualMode visualMode;
    // Field size check
    static_assert(sizeof(::UnityEngine::UIElements::DragVisualMode) == 0x4);
    // Padding between fields: visualMode and: genericData
    char __padding1[0x4] = {};
    // private System.Collections.Hashtable <genericData>k__BackingField
    // Size: 0x8
    // Offset: 0x10
    ::System::Collections::Hashtable* genericData;
    // Field size check
    static_assert(sizeof(::System::Collections::Hashtable*) == 0x8);
    // private System.Collections.Generic.IEnumerable`1<UnityEngine.Object> <unityObjectReferences>k__BackingField
    // Size: 0x8
    // Offset: 0x18
    ::System::Collections::Generic::IEnumerable_1<::UnityEngine::Object*>* unityObjectReferences;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::IEnumerable_1<::UnityEngine::Object*>*) == 0x8);
    public:
    // Creating value type constructor for type: StartDragArgs
    constexpr StartDragArgs(::StringW title_ = {}, ::UnityEngine::UIElements::DragVisualMode visualMode_ = {}, ::System::Collections::Hashtable* genericData_ = {}, ::System::Collections::Generic::IEnumerable_1<::UnityEngine::Object*>* unityObjectReferences_ = {}) noexcept : title{title_}, visualMode{visualMode_}, genericData{genericData_}, unityObjectReferences{unityObjectReferences_} {}
    // Creating interface conversion operator: operator ::System::ValueType
    operator ::System::ValueType() noexcept {
      return *reinterpret_cast<::System::ValueType*>(this);
    }
    // Get instance field reference: private readonly System.String <title>k__BackingField
    [[deprecated("Use field access instead!")]] ::StringW& dyn_$title$k__BackingField();
    // Get instance field reference: private readonly UnityEngine.UIElements.DragVisualMode <visualMode>k__BackingField
    [[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::DragVisualMode& dyn_$visualMode$k__BackingField();
    // Get instance field reference: private System.Collections.Hashtable <genericData>k__BackingField
    [[deprecated("Use field access instead!")]] ::System::Collections::Hashtable*& dyn_$genericData$k__BackingField();
    // Get instance field reference: private System.Collections.Generic.IEnumerable`1<UnityEngine.Object> <unityObjectReferences>k__BackingField
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::IEnumerable_1<::UnityEngine::Object*>*& dyn_$unityObjectReferences$k__BackingField();
    // public System.Void .ctor(System.String title, UnityEngine.UIElements.DragVisualMode visualMode)
    // Offset: 0x563AB0C
    StartDragArgs(::StringW title, ::UnityEngine::UIElements::DragVisualMode visualMode);
    // public System.String get_title()
    // Offset: 0x563CA68
    ::StringW get_title();
    // public UnityEngine.UIElements.DragVisualMode get_visualMode()
    // Offset: 0x563CA70
    ::UnityEngine::UIElements::DragVisualMode get_visualMode();
    // System.Collections.Hashtable get_genericData()
    // Offset: 0x563CA78
    ::System::Collections::Hashtable* get_genericData();
    // private System.Void set_genericData(System.Collections.Hashtable value)
    // Offset: 0x563CA80
    void set_genericData(::System::Collections::Hashtable* value);
    // System.Collections.Generic.IEnumerable`1<UnityEngine.Object> get_unityObjectReferences()
    // Offset: 0x563CA88
    ::System::Collections::Generic::IEnumerable_1<::UnityEngine::Object*>* get_unityObjectReferences();
    // private System.Void set_unityObjectReferences(System.Collections.Generic.IEnumerable`1<UnityEngine.Object> value)
    // Offset: 0x563CA90
    void set_unityObjectReferences(::System::Collections::Generic::IEnumerable_1<::UnityEngine::Object*>* value);
    // public System.Void SetGenericData(System.String key, System.Object data)
    // Offset: 0x563CA98
    void SetGenericData(::StringW key, ::Il2CppObject* data);
  }; // UnityEngine.UIElements.StartDragArgs
  #pragma pack(pop)
  static check_size<sizeof(StartDragArgs), 24 + sizeof(::System::Collections::Generic::IEnumerable_1<::UnityEngine::Object*>*)> __UnityEngine_UIElements_StartDragArgsSizeCheck;
  static_assert(sizeof(StartDragArgs) == 0x20);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::UIElements::StartDragArgs::StartDragArgs
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::UIElements::StartDragArgs::get_title
// Il2CppName: get_title
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (UnityEngine::UIElements::StartDragArgs::*)()>(&UnityEngine::UIElements::StartDragArgs::get_title)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::StartDragArgs), "get_title", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::StartDragArgs::get_visualMode
// Il2CppName: get_visualMode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::DragVisualMode (UnityEngine::UIElements::StartDragArgs::*)()>(&UnityEngine::UIElements::StartDragArgs::get_visualMode)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::StartDragArgs), "get_visualMode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::StartDragArgs::get_genericData
// Il2CppName: get_genericData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Hashtable* (UnityEngine::UIElements::StartDragArgs::*)()>(&UnityEngine::UIElements::StartDragArgs::get_genericData)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::StartDragArgs), "get_genericData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::StartDragArgs::set_genericData
// Il2CppName: set_genericData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::StartDragArgs::*)(::System::Collections::Hashtable*)>(&UnityEngine::UIElements::StartDragArgs::set_genericData)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System.Collections", "Hashtable")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::StartDragArgs), "set_genericData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::StartDragArgs::get_unityObjectReferences
// Il2CppName: get_unityObjectReferences
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::IEnumerable_1<::UnityEngine::Object*>* (UnityEngine::UIElements::StartDragArgs::*)()>(&UnityEngine::UIElements::StartDragArgs::get_unityObjectReferences)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::StartDragArgs), "get_unityObjectReferences", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::StartDragArgs::set_unityObjectReferences
// Il2CppName: set_unityObjectReferences
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::StartDragArgs::*)(::System::Collections::Generic::IEnumerable_1<::UnityEngine::Object*>*)>(&UnityEngine::UIElements::StartDragArgs::set_unityObjectReferences)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "IEnumerable`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine", "Object")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::StartDragArgs), "set_unityObjectReferences", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::StartDragArgs::SetGenericData
// Il2CppName: SetGenericData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::StartDragArgs::*)(::StringW, ::Il2CppObject*)>(&UnityEngine::UIElements::StartDragArgs::SetGenericData)> {
  static const MethodInfo* get() {
    static auto* key = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* data = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::StartDragArgs), "SetGenericData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{key, data});
  }
};
