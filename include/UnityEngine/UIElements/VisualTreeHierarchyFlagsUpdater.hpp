// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.UIElements.BaseVisualTreeUpdater
#include "UnityEngine/UIElements/BaseVisualTreeUpdater.hpp"
// Including type: Unity.Profiling.ProfilerMarker
#include "Unity/Profiling/ProfilerMarker.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::UIElements
namespace UnityEngine::UIElements {
  // Forward declaring type: VisualElement
  class VisualElement;
  // Forward declaring type: VisualElementFlags
  struct VisualElementFlags;
  // Forward declaring type: VersionChangeType
  struct VersionChangeType;
}
// Completed forward declares
// Type namespace: UnityEngine.UIElements
namespace UnityEngine::UIElements {
  // Forward declaring type: VisualTreeHierarchyFlagsUpdater
  class VisualTreeHierarchyFlagsUpdater;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::UIElements::VisualTreeHierarchyFlagsUpdater);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::UIElements::VisualTreeHierarchyFlagsUpdater*, "UnityEngine.UIElements", "VisualTreeHierarchyFlagsUpdater");
// Type namespace: UnityEngine.UIElements
namespace UnityEngine::UIElements {
  // Size: 0x28
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.UIElements.VisualTreeHierarchyFlagsUpdater
  // [TokenAttribute] Offset: FFFFFFFF
  class VisualTreeHierarchyFlagsUpdater : public ::UnityEngine::UIElements::BaseVisualTreeUpdater {
    public:
    public:
    // private System.UInt32 m_Version
    // Size: 0x4
    // Offset: 0x20
    uint m_Version;
    // Field size check
    static_assert(sizeof(uint) == 0x4);
    // private System.UInt32 m_LastVersion
    // Size: 0x4
    // Offset: 0x24
    uint m_LastVersion;
    // Field size check
    static_assert(sizeof(uint) == 0x4);
    public:
    // Get static field: static private readonly System.String s_Description
    static ::StringW _get_s_Description();
    // Set static field: static private readonly System.String s_Description
    static void _set_s_Description(::StringW value);
    // Get static field: static private readonly Unity.Profiling.ProfilerMarker s_ProfilerMarker
    static ::Unity::Profiling::ProfilerMarker _get_s_ProfilerMarker();
    // Set static field: static private readonly Unity.Profiling.ProfilerMarker s_ProfilerMarker
    static void _set_s_ProfilerMarker(::Unity::Profiling::ProfilerMarker value);
    // Get instance field reference: private System.UInt32 m_Version
    [[deprecated("Use field access instead!")]] uint& dyn_m_Version();
    // Get instance field reference: private System.UInt32 m_LastVersion
    [[deprecated("Use field access instead!")]] uint& dyn_m_LastVersion();
    // static private System.Void DirtyHierarchy(UnityEngine.UIElements.VisualElement ve, UnityEngine.UIElements.VisualElementFlags mustDirtyFlags)
    // Offset: 0x55C56FC
    static void DirtyHierarchy(::UnityEngine::UIElements::VisualElement* ve, ::UnityEngine::UIElements::VisualElementFlags mustDirtyFlags);
    // static private System.Void DirtyBoundingBoxHierarchy(UnityEngine.UIElements.VisualElement ve)
    // Offset: 0x55C57E4
    static void DirtyBoundingBoxHierarchy(::UnityEngine::UIElements::VisualElement* ve);
    // static private System.Void .cctor()
    // Offset: 0x55C58F0
    static void _cctor();
    // public override Unity.Profiling.ProfilerMarker get_profilerMarker()
    // Offset: 0x55C55C0
    // Implemented from: UnityEngine.UIElements.BaseVisualTreeUpdater
    // Base method: Unity.Profiling.ProfilerMarker BaseVisualTreeUpdater::get_profilerMarker()
    ::Unity::Profiling::ProfilerMarker get_profilerMarker();
    // public override System.Void OnVersionChanged(UnityEngine.UIElements.VisualElement ve, UnityEngine.UIElements.VersionChangeType versionChangeType)
    // Offset: 0x55C5618
    // Implemented from: UnityEngine.UIElements.BaseVisualTreeUpdater
    // Base method: System.Void BaseVisualTreeUpdater::OnVersionChanged(UnityEngine.UIElements.VisualElement ve, UnityEngine.UIElements.VersionChangeType versionChangeType)
    void OnVersionChanged(::UnityEngine::UIElements::VisualElement* ve, ::UnityEngine::UIElements::VersionChangeType versionChangeType);
    // public override System.Void Update()
    // Offset: 0x55C5888
    // Implemented from: UnityEngine.UIElements.BaseVisualTreeUpdater
    // Base method: System.Void BaseVisualTreeUpdater::Update()
    void Update();
    // public System.Void .ctor()
    // Offset: 0x55C58E4
    // Implemented from: UnityEngine.UIElements.BaseVisualTreeUpdater
    // Base method: System.Void BaseVisualTreeUpdater::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static VisualTreeHierarchyFlagsUpdater* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::VisualTreeHierarchyFlagsUpdater::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<VisualTreeHierarchyFlagsUpdater*, creationType>()));
    }
  }; // UnityEngine.UIElements.VisualTreeHierarchyFlagsUpdater
  #pragma pack(pop)
  static check_size<sizeof(VisualTreeHierarchyFlagsUpdater), 36 + sizeof(uint)> __UnityEngine_UIElements_VisualTreeHierarchyFlagsUpdaterSizeCheck;
  static_assert(sizeof(VisualTreeHierarchyFlagsUpdater) == 0x28);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualTreeHierarchyFlagsUpdater::DirtyHierarchy
// Il2CppName: DirtyHierarchy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::UIElements::VisualElement*, ::UnityEngine::UIElements::VisualElementFlags)>(&UnityEngine::UIElements::VisualTreeHierarchyFlagsUpdater::DirtyHierarchy)> {
  static const MethodInfo* get() {
    static auto* ve = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "VisualElement")->byval_arg;
    static auto* mustDirtyFlags = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "VisualElementFlags")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualTreeHierarchyFlagsUpdater*), "DirtyHierarchy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ve, mustDirtyFlags});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualTreeHierarchyFlagsUpdater::DirtyBoundingBoxHierarchy
// Il2CppName: DirtyBoundingBoxHierarchy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::UIElements::VisualElement*)>(&UnityEngine::UIElements::VisualTreeHierarchyFlagsUpdater::DirtyBoundingBoxHierarchy)> {
  static const MethodInfo* get() {
    static auto* ve = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "VisualElement")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualTreeHierarchyFlagsUpdater*), "DirtyBoundingBoxHierarchy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ve});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualTreeHierarchyFlagsUpdater::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&UnityEngine::UIElements::VisualTreeHierarchyFlagsUpdater::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualTreeHierarchyFlagsUpdater*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualTreeHierarchyFlagsUpdater::get_profilerMarker
// Il2CppName: get_profilerMarker
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Unity::Profiling::ProfilerMarker (UnityEngine::UIElements::VisualTreeHierarchyFlagsUpdater::*)()>(&UnityEngine::UIElements::VisualTreeHierarchyFlagsUpdater::get_profilerMarker)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualTreeHierarchyFlagsUpdater*), "get_profilerMarker", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualTreeHierarchyFlagsUpdater::OnVersionChanged
// Il2CppName: OnVersionChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::VisualTreeHierarchyFlagsUpdater::*)(::UnityEngine::UIElements::VisualElement*, ::UnityEngine::UIElements::VersionChangeType)>(&UnityEngine::UIElements::VisualTreeHierarchyFlagsUpdater::OnVersionChanged)> {
  static const MethodInfo* get() {
    static auto* ve = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "VisualElement")->byval_arg;
    static auto* versionChangeType = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "VersionChangeType")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualTreeHierarchyFlagsUpdater*), "OnVersionChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ve, versionChangeType});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualTreeHierarchyFlagsUpdater::Update
// Il2CppName: Update
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::VisualTreeHierarchyFlagsUpdater::*)()>(&UnityEngine::UIElements::VisualTreeHierarchyFlagsUpdater::Update)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualTreeHierarchyFlagsUpdater*), "Update", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualTreeHierarchyFlagsUpdater::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
