// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.UIElements.StylePropertyAnimationSystem
#include "UnityEngine/UIElements/StylePropertyAnimationSystem.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Including type: UnityEngine.UIElements.StyleSheets.StylePropertyId
#include "UnityEngine/UIElements/StyleSheets/StylePropertyId.hpp"
// Including type: UnityEngine.UIElements.StylePropertyAnimationSystem/ElementPropertyPair
#include "UnityEngine/UIElements/StylePropertyAnimationSystem_ElementPropertyPair.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::UIElements
namespace UnityEngine::UIElements {
  // Forward declaring type: VisualElement
  class VisualElement;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: Dictionary`2<TKey, TValue>
  template<typename TKey, typename TValue>
  class Dictionary_2;
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE_GENERIC_STRUCT(::UnityEngine::UIElements::StylePropertyAnimationSystem::AnimationDataSet_2, "UnityEngine.UIElements", "StylePropertyAnimationSystem/AnimationDataSet`2");
// Type namespace: UnityEngine.UIElements
namespace UnityEngine::UIElements {
  // WARNING Size may be invalid!
  // WARNING Layout: Sequential may not be correctly taken into account!
  // Autogenerated type: UnityEngine.UIElements.StylePropertyAnimationSystem/AnimationDataSet`2
  // [TokenAttribute] Offset: FFFFFFFF
  template<typename TTimingData, typename TStyleData>
  struct StylePropertyAnimationSystem::AnimationDataSet_2/*, public ::System::ValueType*/ {
    public:
    public:
    // public UnityEngine.UIElements.VisualElement[] elements
    // Size: 0x8
    // Offset: 0x0
    ::ArrayW<::UnityEngine::UIElements::VisualElement*> elements;
    // Field size check
    static_assert(sizeof(::ArrayW<::UnityEngine::UIElements::VisualElement*>) == 0x8);
    // public UnityEngine.UIElements.StyleSheets.StylePropertyId[] properties
    // Size: 0x8
    // Offset: 0x0
    ::ArrayW<::UnityEngine::UIElements::StyleSheets::StylePropertyId> properties;
    // Field size check
    static_assert(sizeof(::ArrayW<::UnityEngine::UIElements::StyleSheets::StylePropertyId>) == 0x8);
    // public TTimingData[] timing
    // Size: 0x8
    // Offset: 0x0
    ::ArrayW<TTimingData> timing;
    // Field size check
    static_assert(sizeof(::ArrayW<TTimingData>) == 0x8);
    // public TStyleData[] style
    // Size: 0x8
    // Offset: 0x0
    ::ArrayW<TStyleData> style;
    // Field size check
    static_assert(sizeof(::ArrayW<TStyleData>) == 0x8);
    // public System.Int32 count
    // Size: 0x4
    // Offset: 0x0
    int count;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private System.Collections.Generic.Dictionary`2<UnityEngine.UIElements.StylePropertyAnimationSystem/ElementPropertyPair,System.Int32> indices
    // Size: 0x8
    // Offset: 0x0
    ::System::Collections::Generic::Dictionary_2<::UnityEngine::UIElements::StylePropertyAnimationSystem::ElementPropertyPair, int>* indices;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::Dictionary_2<::UnityEngine::UIElements::StylePropertyAnimationSystem::ElementPropertyPair, int>*) == 0x8);
    public:
    // Creating value type constructor for type: AnimationDataSet_2
    constexpr AnimationDataSet_2(::ArrayW<::UnityEngine::UIElements::VisualElement*> elements_ = ::ArrayW<::UnityEngine::UIElements::VisualElement*>(static_cast<void*>(nullptr)), ::ArrayW<::UnityEngine::UIElements::StyleSheets::StylePropertyId> properties_ = ::ArrayW<::UnityEngine::UIElements::StyleSheets::StylePropertyId>(static_cast<void*>(nullptr)), ::ArrayW<TTimingData> timing_ = ::ArrayW<TTimingData>(static_cast<void*>(nullptr)), ::ArrayW<TStyleData> style_ = ::ArrayW<TStyleData>(static_cast<void*>(nullptr)), int count_ = {}, ::System::Collections::Generic::Dictionary_2<::UnityEngine::UIElements::StylePropertyAnimationSystem::ElementPropertyPair, int>* indices_ = {}) noexcept : elements{elements_}, properties{properties_}, timing{timing_}, style{style_}, count{count_}, indices{indices_} {}
    // Creating interface conversion operator: operator ::System::ValueType
    operator ::System::ValueType() noexcept {
      return *reinterpret_cast<::System::ValueType*>(this);
    }
    // Autogenerated instance field getter
    // Get instance field: public UnityEngine.UIElements.VisualElement[] elements
    [[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::UIElements::VisualElement*>& dyn_elements() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::StylePropertyAnimationSystem::AnimationDataSet_2::dyn_elements");
      auto ___internal__instance = *this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "elements"))->offset;
      return *reinterpret_cast<::ArrayW<::UnityEngine::UIElements::VisualElement*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: public UnityEngine.UIElements.StyleSheets.StylePropertyId[] properties
    [[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::UIElements::StyleSheets::StylePropertyId>& dyn_properties() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::StylePropertyAnimationSystem::AnimationDataSet_2::dyn_properties");
      auto ___internal__instance = *this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "properties"))->offset;
      return *reinterpret_cast<::ArrayW<::UnityEngine::UIElements::StyleSheets::StylePropertyId>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: public TTimingData[] timing
    [[deprecated("Use field access instead!")]] ::ArrayW<TTimingData>& dyn_timing() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::StylePropertyAnimationSystem::AnimationDataSet_2::dyn_timing");
      auto ___internal__instance = *this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "timing"))->offset;
      return *reinterpret_cast<::ArrayW<TTimingData>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: public TStyleData[] style
    [[deprecated("Use field access instead!")]] ::ArrayW<TStyleData>& dyn_style() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::StylePropertyAnimationSystem::AnimationDataSet_2::dyn_style");
      auto ___internal__instance = *this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "style"))->offset;
      return *reinterpret_cast<::ArrayW<TStyleData>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: public System.Int32 count
    [[deprecated("Use field access instead!")]] int& dyn_count() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::StylePropertyAnimationSystem::AnimationDataSet_2::dyn_count");
      auto ___internal__instance = *this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "count"))->offset;
      return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: private System.Collections.Generic.Dictionary`2<UnityEngine.UIElements.StylePropertyAnimationSystem/ElementPropertyPair,System.Int32> indices
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::UnityEngine::UIElements::StylePropertyAnimationSystem::ElementPropertyPair, int>*& dyn_indices() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::StylePropertyAnimationSystem::AnimationDataSet_2::dyn_indices");
      auto ___internal__instance = *this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "indices"))->offset;
      return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::UnityEngine::UIElements::StylePropertyAnimationSystem::ElementPropertyPair, int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // private System.Int32 get_capacity()
    // Offset: 0xFFFFFFFFFFFFFFFF
    int get_capacity() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::StylePropertyAnimationSystem::AnimationDataSet_2::get_capacity");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_capacity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
    }
    // private System.Void set_capacity(System.Int32 value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void set_capacity(int value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::StylePropertyAnimationSystem::AnimationDataSet_2::set_capacity");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_capacity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
    }
    // private System.Void LocalInit()
    // Offset: 0xFFFFFFFFFFFFFFFF
    void LocalInit() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::StylePropertyAnimationSystem::AnimationDataSet_2::LocalInit");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "LocalInit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
    }
    // static public UnityEngine.UIElements.StylePropertyAnimationSystem/AnimationDataSet`2<TTimingData,TStyleData> Create()
    // Offset: 0xFFFFFFFFFFFFFFFF
    static ::UnityEngine::UIElements::StylePropertyAnimationSystem::AnimationDataSet_2<TTimingData, TStyleData> Create() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::StylePropertyAnimationSystem::AnimationDataSet_2::Create");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<StylePropertyAnimationSystem::AnimationDataSet_2<TTimingData, TStyleData>>::get(), "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::UIElements::StylePropertyAnimationSystem::AnimationDataSet_2<TTimingData, TStyleData>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
    }
    // public System.Boolean IndexOf(UnityEngine.UIElements.VisualElement ve, UnityEngine.UIElements.StyleSheets.StylePropertyId prop, out System.Int32 index)
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool IndexOf(::UnityEngine::UIElements::VisualElement* ve, ::UnityEngine::UIElements::StyleSheets::StylePropertyId prop, ByRef<int> index) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::StylePropertyAnimationSystem::AnimationDataSet_2::IndexOf");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "IndexOf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ve), ::il2cpp_utils::ExtractType(prop), ::il2cpp_utils::ExtractIndependentType<int&>()})));
      return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, ve, prop, byref(index));
    }
    // public System.Void Add(UnityEngine.UIElements.VisualElement owner, UnityEngine.UIElements.StyleSheets.StylePropertyId prop, TTimingData timingData, TStyleData styleData)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void Add(::UnityEngine::UIElements::VisualElement* owner, ::UnityEngine::UIElements::StyleSheets::StylePropertyId prop, TTimingData timingData, TStyleData styleData) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::StylePropertyAnimationSystem::AnimationDataSet_2::Add");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(owner), ::il2cpp_utils::ExtractType(prop), ::il2cpp_utils::ExtractType(timingData), ::il2cpp_utils::ExtractType(styleData)})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, owner, prop, timingData, styleData);
    }
    // public System.Void Remove(System.Int32 cancelledIndex)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void Remove(int cancelledIndex) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::StylePropertyAnimationSystem::AnimationDataSet_2::Remove");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Remove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cancelledIndex)})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, cancelledIndex);
    }
    // public System.Void Replace(System.Int32 index, TTimingData timingData, TStyleData styleData)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void Replace(int index, TTimingData timingData, TStyleData styleData) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::StylePropertyAnimationSystem::AnimationDataSet_2::Replace");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Replace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(timingData), ::il2cpp_utils::ExtractType(styleData)})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, timingData, styleData);
    }
    // public System.Void RemoveAll(UnityEngine.UIElements.VisualElement ve)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void RemoveAll(::UnityEngine::UIElements::VisualElement* ve) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::StylePropertyAnimationSystem::AnimationDataSet_2::RemoveAll");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "RemoveAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ve)})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ve);
    }
    // public System.Void RemoveAll()
    // Offset: 0xFFFFFFFFFFFFFFFF
    void RemoveAll() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::StylePropertyAnimationSystem::AnimationDataSet_2::RemoveAll");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "RemoveAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
    }
    // public System.Void GetActivePropertiesForElement(UnityEngine.UIElements.VisualElement ve, System.Collections.Generic.List`1<UnityEngine.UIElements.StyleSheets.StylePropertyId> outProperties)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void GetActivePropertiesForElement(::UnityEngine::UIElements::VisualElement* ve, ::System::Collections::Generic::List_1<::UnityEngine::UIElements::StyleSheets::StylePropertyId>* outProperties) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::StylePropertyAnimationSystem::AnimationDataSet_2::GetActivePropertiesForElement");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetActivePropertiesForElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ve), ::il2cpp_utils::ExtractType(outProperties)})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ve, outProperties);
    }
  }; // UnityEngine.UIElements.StylePropertyAnimationSystem/AnimationDataSet`2
  // Could not write size check! Type: UnityEngine.UIElements.StylePropertyAnimationSystem/AnimationDataSet`2 is generic, or has no fields that are valid for size checks!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
