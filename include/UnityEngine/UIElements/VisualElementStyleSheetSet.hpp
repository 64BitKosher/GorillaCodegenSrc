// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Including type: System.IEquatable`1
#include "System/IEquatable_1.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::UIElements
namespace UnityEngine::UIElements {
  // Forward declaring type: VisualElement
  class VisualElement;
  // Forward declaring type: StyleSheet
  class StyleSheet;
}
// Completed forward declares
// Begin il2cpp-utils forward declares
struct Il2CppObject;
// Completed il2cpp-utils forward declares
// Type namespace: UnityEngine.UIElements
namespace UnityEngine::UIElements {
  // Forward declaring type: VisualElementStyleSheetSet
  struct VisualElementStyleSheetSet;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::UIElements::VisualElementStyleSheetSet, "UnityEngine.UIElements", "VisualElementStyleSheetSet");
// Type namespace: UnityEngine.UIElements
namespace UnityEngine::UIElements {
  // Size: 0x8
  #pragma pack(push, 1)
  // WARNING Layout: Sequential may not be correctly taken into account!
  // Autogenerated type: UnityEngine.UIElements.VisualElementStyleSheetSet
  // [TokenAttribute] Offset: FFFFFFFF
  // [DefaultMemberAttribute] Offset: FFFFFFFF
  struct VisualElementStyleSheetSet/*, public ::System::ValueType, public ::System::IEquatable_1<::UnityEngine::UIElements::VisualElementStyleSheetSet>*/ {
    public:
    public:
    // private readonly UnityEngine.UIElements.VisualElement m_Element
    // Size: 0x8
    // Offset: 0x0
    ::UnityEngine::UIElements::VisualElement* m_Element;
    // Field size check
    static_assert(sizeof(::UnityEngine::UIElements::VisualElement*) == 0x8);
    public:
    // Creating value type constructor for type: VisualElementStyleSheetSet
    constexpr VisualElementStyleSheetSet(::UnityEngine::UIElements::VisualElement* m_Element_ = {}) noexcept : m_Element{m_Element_} {}
    // Creating interface conversion operator: operator ::System::ValueType
    operator ::System::ValueType() noexcept {
      return *reinterpret_cast<::System::ValueType*>(this);
    }
    // Creating interface conversion operator: operator ::System::IEquatable_1<::UnityEngine::UIElements::VisualElementStyleSheetSet>
    operator ::System::IEquatable_1<::UnityEngine::UIElements::VisualElementStyleSheetSet>() noexcept {
      return *reinterpret_cast<::System::IEquatable_1<::UnityEngine::UIElements::VisualElementStyleSheetSet>*>(this);
    }
    // Creating conversion operator: operator ::UnityEngine::UIElements::VisualElement*
    constexpr operator ::UnityEngine::UIElements::VisualElement*() const noexcept {
      return m_Element;
    }
    // Get instance field reference: private readonly UnityEngine.UIElements.VisualElement m_Element
    [[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::VisualElement*& dyn_m_Element();
    // System.Void .ctor(UnityEngine.UIElements.VisualElement element)
    // Offset: 0x55C42A8
    // ABORTED: conflicts with another method.  VisualElementStyleSheetSet(::UnityEngine::UIElements::VisualElement* element);
    // public System.Void Add(UnityEngine.UIElements.StyleSheet styleSheet)
    // Offset: 0x55C42B0
    void Add(::UnityEngine::UIElements::StyleSheet* styleSheet);
    // public System.Boolean Remove(UnityEngine.UIElements.StyleSheet styleSheet)
    // Offset: 0x55C4490
    bool Remove(::UnityEngine::UIElements::StyleSheet* styleSheet);
    // public System.Boolean Equals(UnityEngine.UIElements.VisualElementStyleSheetSet other)
    // Offset: 0x55C45D4
    bool Equals(::UnityEngine::UIElements::VisualElementStyleSheetSet other);
    // public override System.Boolean Equals(System.Object obj)
    // Offset: 0x55C45E0
    // Implemented from: System.ValueType
    // Base method: System.Boolean ValueType::Equals(System.Object obj)
    bool Equals(::Il2CppObject* obj);
    // public override System.Int32 GetHashCode()
    // Offset: 0x55C465C
    // Implemented from: System.ValueType
    // Base method: System.Int32 ValueType::GetHashCode()
    int GetHashCode();
  }; // UnityEngine.UIElements.VisualElementStyleSheetSet
  #pragma pack(pop)
  static check_size<sizeof(VisualElementStyleSheetSet), 0 + sizeof(::UnityEngine::UIElements::VisualElement*)> __UnityEngine_UIElements_VisualElementStyleSheetSetSizeCheck;
  static_assert(sizeof(VisualElementStyleSheetSet) == 0x8);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElementStyleSheetSet::VisualElementStyleSheetSet
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElementStyleSheetSet::Add
// Il2CppName: Add
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::VisualElementStyleSheetSet::*)(::UnityEngine::UIElements::StyleSheet*)>(&UnityEngine::UIElements::VisualElementStyleSheetSet::Add)> {
  static const MethodInfo* get() {
    static auto* styleSheet = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "StyleSheet")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElementStyleSheetSet), "Add", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{styleSheet});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElementStyleSheetSet::Remove
// Il2CppName: Remove
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::VisualElementStyleSheetSet::*)(::UnityEngine::UIElements::StyleSheet*)>(&UnityEngine::UIElements::VisualElementStyleSheetSet::Remove)> {
  static const MethodInfo* get() {
    static auto* styleSheet = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "StyleSheet")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElementStyleSheetSet), "Remove", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{styleSheet});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElementStyleSheetSet::Equals
// Il2CppName: Equals
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::VisualElementStyleSheetSet::*)(::UnityEngine::UIElements::VisualElementStyleSheetSet)>(&UnityEngine::UIElements::VisualElementStyleSheetSet::Equals)> {
  static const MethodInfo* get() {
    static auto* other = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "VisualElementStyleSheetSet")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElementStyleSheetSet), "Equals", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{other});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElementStyleSheetSet::Equals
// Il2CppName: Equals
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::VisualElementStyleSheetSet::*)(::Il2CppObject*)>(&UnityEngine::UIElements::VisualElementStyleSheetSet::Equals)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElementStyleSheetSet), "Equals", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElementStyleSheetSet::GetHashCode
// Il2CppName: GetHashCode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::UIElements::VisualElementStyleSheetSet::*)()>(&UnityEngine::UIElements::VisualElementStyleSheetSet::GetHashCode)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElementStyleSheetSet), "GetHashCode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
