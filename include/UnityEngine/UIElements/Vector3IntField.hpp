// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.UIElements.BaseCompositeField`3
#include "UnityEngine/UIElements/BaseCompositeField_3.hpp"
// Including type: UnityEngine.Vector3Int
#include "UnityEngine/Vector3Int.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::UIElements
namespace UnityEngine::UIElements {
  // Forward declaring type: IntegerField
  class IntegerField;
}
// Completed forward declares
// Type namespace: UnityEngine.UIElements
namespace UnityEngine::UIElements {
  // Forward declaring type: Vector3IntField
  class Vector3IntField;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::UIElements::Vector3IntField);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::UIElements::Vector3IntField*, "UnityEngine.UIElements", "Vector3IntField");
// Type namespace: UnityEngine.UIElements
namespace UnityEngine::UIElements {
  // WARNING Size may be invalid!
  // Autogenerated type: UnityEngine.UIElements.Vector3IntField
  // [TokenAttribute] Offset: FFFFFFFF
  // [MovedFromAttribute] Offset: FFFFFFFF
  class Vector3IntField : public ::UnityEngine::UIElements::BaseCompositeField_3<::UnityEngine::Vector3Int, ::UnityEngine::UIElements::IntegerField*, int> {
    public:
    // Nested type: ::UnityEngine::UIElements::Vector3IntField::UxmlFactory
    class UxmlFactory;
    // Nested type: ::UnityEngine::UIElements::Vector3IntField::UxmlTraits
    class UxmlTraits;
    // Nested type: ::UnityEngine::UIElements::Vector3IntField::$$c
    class $$c;
    // Get static field: static public readonly System.String ussClassName
    static ::StringW _get_ussClassName();
    // Set static field: static public readonly System.String ussClassName
    static void _set_ussClassName(::StringW value);
    // Get static field: static public readonly System.String labelUssClassName
    static ::StringW _get_labelUssClassName();
    // Set static field: static public readonly System.String labelUssClassName
    static void _set_labelUssClassName(::StringW value);
    // Get static field: static public readonly System.String inputUssClassName
    static ::StringW _get_inputUssClassName();
    // Set static field: static public readonly System.String inputUssClassName
    static void _set_inputUssClassName(::StringW value);
    // UnityEngine.UIElements.BaseCompositeField`3/FieldDescription<UnityEngine.Vector3Int,UnityEngine.UIElements.IntegerField,System.Int32>[] DescribeFields()
    // Offset: 0x55B3A7C
    ::ArrayW<typename ::UnityEngine::UIElements::BaseCompositeField_3<::UnityEngine::Vector3Int, ::UnityEngine::UIElements::IntegerField*, int>::FieldDescription> DescribeFields();
    // public System.Void .ctor()
    // Offset: 0x55B3FD0
    // Implemented from: UnityEngine.UIElements.BindableElement
    // Base method: System.Void BindableElement::.ctor()
    // Base method: System.Void VisualElement::.ctor()
    // Base method: System.Void Focusable::.ctor()
    // Base method: System.Void CallbackEventHandler::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static Vector3IntField* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::Vector3IntField::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<Vector3IntField*, creationType>()));
    }
    // public System.Void .ctor(System.String label)
    // Offset: 0x55AE39C
    // Implemented from: UnityEngine.UIElements.BaseField`1
    // Base method: System.Void BaseField_1::.ctor(System.String label)
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static Vector3IntField* New_ctor(::StringW label) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::Vector3IntField::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<Vector3IntField*, creationType>(label)));
    }
    // static private System.Void .cctor()
    // Offset: 0x55B3FD8
    // Implemented from: UnityEngine.UIElements.BaseCompositeField`3
    // Base method: System.Void BaseCompositeField_3::.cctor()
    // Base method: System.Void BaseField_1::.cctor()
    // Base method: System.Void VisualElement::.cctor()
    static void _cctor();
  }; // UnityEngine.UIElements.Vector3IntField
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::UIElements::Vector3IntField::DescribeFields
// Il2CppName: DescribeFields
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<typename ::UnityEngine::UIElements::BaseCompositeField_3<::UnityEngine::Vector3Int, ::UnityEngine::UIElements::IntegerField*, int>::FieldDescription> (UnityEngine::UIElements::Vector3IntField::*)()>(&UnityEngine::UIElements::Vector3IntField::DescribeFields)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::Vector3IntField*), "DescribeFields", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::Vector3IntField::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::UIElements::Vector3IntField::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::UIElements::Vector3IntField::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&UnityEngine::UIElements::Vector3IntField::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::Vector3IntField*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
