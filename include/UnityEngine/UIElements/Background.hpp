// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Including type: System.IEquatable`1
#include "System/IEquatable_1.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Texture2D
  class Texture2D;
  // Forward declaring type: Sprite
  class Sprite;
  // Forward declaring type: RenderTexture
  class RenderTexture;
}
// Forward declaring namespace: UnityEngine::UIElements
namespace UnityEngine::UIElements {
  // Forward declaring type: VectorImage
  class VectorImage;
}
// Completed forward declares
// Begin il2cpp-utils forward declares
struct Il2CppObject;
// Completed il2cpp-utils forward declares
// Type namespace: UnityEngine.UIElements
namespace UnityEngine::UIElements {
  // Forward declaring type: Background
  struct Background;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::UIElements::Background, "UnityEngine.UIElements", "Background");
// Type namespace: UnityEngine.UIElements
namespace UnityEngine::UIElements {
  // Size: 0x20
  #pragma pack(push, 1)
  // WARNING Layout: Sequential may not be correctly taken into account!
  // Autogenerated type: UnityEngine.UIElements.Background
  // [TokenAttribute] Offset: FFFFFFFF
  struct Background/*, public ::System::ValueType, public ::System::IEquatable_1<::UnityEngine::UIElements::Background>*/ {
    public:
    public:
    // private UnityEngine.Texture2D m_Texture
    // Size: 0x8
    // Offset: 0x0
    ::UnityEngine::Texture2D* m_Texture;
    // Field size check
    static_assert(sizeof(::UnityEngine::Texture2D*) == 0x8);
    // private UnityEngine.Sprite m_Sprite
    // Size: 0x8
    // Offset: 0x8
    ::UnityEngine::Sprite* m_Sprite;
    // Field size check
    static_assert(sizeof(::UnityEngine::Sprite*) == 0x8);
    // private UnityEngine.RenderTexture m_RenderTexture
    // Size: 0x8
    // Offset: 0x10
    ::UnityEngine::RenderTexture* m_RenderTexture;
    // Field size check
    static_assert(sizeof(::UnityEngine::RenderTexture*) == 0x8);
    // private UnityEngine.UIElements.VectorImage m_VectorImage
    // Size: 0x8
    // Offset: 0x18
    ::UnityEngine::UIElements::VectorImage* m_VectorImage;
    // Field size check
    static_assert(sizeof(::UnityEngine::UIElements::VectorImage*) == 0x8);
    public:
    // Creating value type constructor for type: Background
    constexpr Background(::UnityEngine::Texture2D* m_Texture_ = {}, ::UnityEngine::Sprite* m_Sprite_ = {}, ::UnityEngine::RenderTexture* m_RenderTexture_ = {}, ::UnityEngine::UIElements::VectorImage* m_VectorImage_ = {}) noexcept : m_Texture{m_Texture_}, m_Sprite{m_Sprite_}, m_RenderTexture{m_RenderTexture_}, m_VectorImage{m_VectorImage_} {}
    // Creating interface conversion operator: operator ::System::ValueType
    operator ::System::ValueType() noexcept {
      return *reinterpret_cast<::System::ValueType*>(this);
    }
    // Creating interface conversion operator: operator ::System::IEquatable_1<::UnityEngine::UIElements::Background>
    operator ::System::IEquatable_1<::UnityEngine::UIElements::Background>() noexcept {
      return *reinterpret_cast<::System::IEquatable_1<::UnityEngine::UIElements::Background>*>(this);
    }
    // Get instance field reference: private UnityEngine.Texture2D m_Texture
    [[deprecated("Use field access instead!")]] ::UnityEngine::Texture2D*& dyn_m_Texture();
    // Get instance field reference: private UnityEngine.Sprite m_Sprite
    [[deprecated("Use field access instead!")]] ::UnityEngine::Sprite*& dyn_m_Sprite();
    // Get instance field reference: private UnityEngine.RenderTexture m_RenderTexture
    [[deprecated("Use field access instead!")]] ::UnityEngine::RenderTexture*& dyn_m_RenderTexture();
    // Get instance field reference: private UnityEngine.UIElements.VectorImage m_VectorImage
    [[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::VectorImage*& dyn_m_VectorImage();
    // public UnityEngine.Texture2D get_texture()
    // Offset: 0x568C1EC
    ::UnityEngine::Texture2D* get_texture();
    // public System.Void set_texture(UnityEngine.Texture2D value)
    // Offset: 0x568C1F4
    void set_texture(::UnityEngine::Texture2D* value);
    // public UnityEngine.Sprite get_sprite()
    // Offset: 0x568C2B4
    ::UnityEngine::Sprite* get_sprite();
    // public System.Void set_sprite(UnityEngine.Sprite value)
    // Offset: 0x568C2BC
    void set_sprite(::UnityEngine::Sprite* value);
    // public UnityEngine.RenderTexture get_renderTexture()
    // Offset: 0x568C380
    ::UnityEngine::RenderTexture* get_renderTexture();
    // public System.Void set_renderTexture(UnityEngine.RenderTexture value)
    // Offset: 0x568C388
    void set_renderTexture(::UnityEngine::RenderTexture* value);
    // public UnityEngine.UIElements.VectorImage get_vectorImage()
    // Offset: 0x568AEA8
    ::UnityEngine::UIElements::VectorImage* get_vectorImage();
    // public System.Void set_vectorImage(UnityEngine.UIElements.VectorImage value)
    // Offset: 0x568C44C
    void set_vectorImage(::UnityEngine::UIElements::VectorImage* value);
    // static public UnityEngine.UIElements.Background FromTexture2D(UnityEngine.Texture2D t)
    // Offset: 0x568C510
    static ::UnityEngine::UIElements::Background FromTexture2D(::UnityEngine::Texture2D* t);
    // static public UnityEngine.UIElements.Background FromRenderTexture(UnityEngine.RenderTexture rt)
    // Offset: 0x568C544
    static ::UnityEngine::UIElements::Background FromRenderTexture(::UnityEngine::RenderTexture* rt);
    // static public UnityEngine.UIElements.Background FromSprite(UnityEngine.Sprite s)
    // Offset: 0x568C578
    static ::UnityEngine::UIElements::Background FromSprite(::UnityEngine::Sprite* s);
    // static public UnityEngine.UIElements.Background FromVectorImage(UnityEngine.UIElements.VectorImage vi)
    // Offset: 0x568C5AC
    static ::UnityEngine::UIElements::Background FromVectorImage(::UnityEngine::UIElements::VectorImage* vi);
    // static UnityEngine.UIElements.Background FromObject(System.Object obj)
    // Offset: 0x568C5E0
    static ::UnityEngine::UIElements::Background FromObject(::Il2CppObject* obj);
    // public System.Boolean Equals(UnityEngine.UIElements.Background other)
    // Offset: 0x568C970
    bool Equals(::UnityEngine::UIElements::Background other);
    // public override System.Boolean Equals(System.Object obj)
    // Offset: 0x568C9A4
    // Implemented from: System.ValueType
    // Base method: System.Boolean ValueType::Equals(System.Object obj)
    bool Equals(::Il2CppObject* obj);
    // public override System.Int32 GetHashCode()
    // Offset: 0x568CA34
    // Implemented from: System.ValueType
    // Base method: System.Int32 ValueType::GetHashCode()
    int GetHashCode();
    // public override System.String ToString()
    // Offset: 0x568CACC
    // Implemented from: System.ValueType
    // Base method: System.String ValueType::ToString()
    ::StringW ToString();
  }; // UnityEngine.UIElements.Background
  #pragma pack(pop)
  static check_size<sizeof(Background), 24 + sizeof(::UnityEngine::UIElements::VectorImage*)> __UnityEngine_UIElements_BackgroundSizeCheck;
  static_assert(sizeof(Background) == 0x20);
  // static public System.Boolean op_Equality(UnityEngine.UIElements.Background lhs, UnityEngine.UIElements.Background rhs)
  // Offset: 0x568C830
  bool operator ==(const ::UnityEngine::UIElements::Background& lhs, const ::UnityEngine::UIElements::Background& rhs);
  // static public System.Boolean op_Inequality(UnityEngine.UIElements.Background lhs, UnityEngine.UIElements.Background rhs)
  // Offset: 0x568C938
  bool operator !=(const ::UnityEngine::UIElements::Background& lhs, const ::UnityEngine::UIElements::Background& rhs);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::UIElements::Background::get_texture
// Il2CppName: get_texture
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Texture2D* (UnityEngine::UIElements::Background::*)()>(&UnityEngine::UIElements::Background::get_texture)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::Background), "get_texture", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::Background::set_texture
// Il2CppName: set_texture
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::Background::*)(::UnityEngine::Texture2D*)>(&UnityEngine::UIElements::Background::set_texture)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Texture2D")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::Background), "set_texture", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::Background::get_sprite
// Il2CppName: get_sprite
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Sprite* (UnityEngine::UIElements::Background::*)()>(&UnityEngine::UIElements::Background::get_sprite)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::Background), "get_sprite", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::Background::set_sprite
// Il2CppName: set_sprite
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::Background::*)(::UnityEngine::Sprite*)>(&UnityEngine::UIElements::Background::set_sprite)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Sprite")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::Background), "set_sprite", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::Background::get_renderTexture
// Il2CppName: get_renderTexture
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::RenderTexture* (UnityEngine::UIElements::Background::*)()>(&UnityEngine::UIElements::Background::get_renderTexture)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::Background), "get_renderTexture", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::Background::set_renderTexture
// Il2CppName: set_renderTexture
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::Background::*)(::UnityEngine::RenderTexture*)>(&UnityEngine::UIElements::Background::set_renderTexture)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "RenderTexture")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::Background), "set_renderTexture", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::Background::get_vectorImage
// Il2CppName: get_vectorImage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::VectorImage* (UnityEngine::UIElements::Background::*)()>(&UnityEngine::UIElements::Background::get_vectorImage)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::Background), "get_vectorImage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::Background::set_vectorImage
// Il2CppName: set_vectorImage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::Background::*)(::UnityEngine::UIElements::VectorImage*)>(&UnityEngine::UIElements::Background::set_vectorImage)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "VectorImage")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::Background), "set_vectorImage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::Background::FromTexture2D
// Il2CppName: FromTexture2D
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::Background (*)(::UnityEngine::Texture2D*)>(&UnityEngine::UIElements::Background::FromTexture2D)> {
  static const MethodInfo* get() {
    static auto* t = &::il2cpp_utils::GetClassFromName("UnityEngine", "Texture2D")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::Background), "FromTexture2D", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{t});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::Background::FromRenderTexture
// Il2CppName: FromRenderTexture
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::Background (*)(::UnityEngine::RenderTexture*)>(&UnityEngine::UIElements::Background::FromRenderTexture)> {
  static const MethodInfo* get() {
    static auto* rt = &::il2cpp_utils::GetClassFromName("UnityEngine", "RenderTexture")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::Background), "FromRenderTexture", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{rt});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::Background::FromSprite
// Il2CppName: FromSprite
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::Background (*)(::UnityEngine::Sprite*)>(&UnityEngine::UIElements::Background::FromSprite)> {
  static const MethodInfo* get() {
    static auto* s = &::il2cpp_utils::GetClassFromName("UnityEngine", "Sprite")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::Background), "FromSprite", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{s});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::Background::FromVectorImage
// Il2CppName: FromVectorImage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::Background (*)(::UnityEngine::UIElements::VectorImage*)>(&UnityEngine::UIElements::Background::FromVectorImage)> {
  static const MethodInfo* get() {
    static auto* vi = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "VectorImage")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::Background), "FromVectorImage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{vi});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::Background::FromObject
// Il2CppName: FromObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::Background (*)(::Il2CppObject*)>(&UnityEngine::UIElements::Background::FromObject)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::Background), "FromObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::Background::Equals
// Il2CppName: Equals
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::Background::*)(::UnityEngine::UIElements::Background)>(&UnityEngine::UIElements::Background::Equals)> {
  static const MethodInfo* get() {
    static auto* other = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "Background")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::Background), "Equals", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{other});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::Background::Equals
// Il2CppName: Equals
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::Background::*)(::Il2CppObject*)>(&UnityEngine::UIElements::Background::Equals)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::Background), "Equals", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::Background::GetHashCode
// Il2CppName: GetHashCode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::UIElements::Background::*)()>(&UnityEngine::UIElements::Background::GetHashCode)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::Background), "GetHashCode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::Background::ToString
// Il2CppName: ToString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (UnityEngine::UIElements::Background::*)()>(&UnityEngine::UIElements::Background::ToString)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::Background), "ToString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::Background::operator ==
// Il2CppName: op_Equality
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::UIElements::Background::operator !=
// Il2CppName: op_Inequality
// Cannot perform method pointer template specialization from operators!
