// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.UIElements.BaseBoolField
#include "UnityEngine/UIElements/BaseBoolField.hpp"
// Including type: UnityEngine.UIElements.IGroupBoxOption
#include "UnityEngine/UIElements/IGroupBoxOption.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::UIElements
namespace UnityEngine::UIElements {
  // Skipping declaration: VisualElement because it is already included!
  // Forward declaring type: AttachToPanelEvent
  class AttachToPanelEvent;
  // Forward declaring type: DetachFromPanelEvent
  class DetachFromPanelEvent;
}
// Completed forward declares
// Type namespace: UnityEngine.UIElements
namespace UnityEngine::UIElements {
  // Forward declaring type: RadioButton
  class RadioButton;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::UIElements::RadioButton);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::UIElements::RadioButton*, "UnityEngine.UIElements", "RadioButton");
// Type namespace: UnityEngine.UIElements
namespace UnityEngine::UIElements {
  // WARNING Size may be invalid!
  // Autogenerated type: UnityEngine.UIElements.RadioButton
  // [TokenAttribute] Offset: FFFFFFFF
  class RadioButton : public ::UnityEngine::UIElements::BaseBoolField/*, public ::UnityEngine::UIElements::IGroupBoxOption*/ {
    public:
    // Nested type: ::UnityEngine::UIElements::RadioButton::UxmlFactory
    class UxmlFactory;
    // Nested type: ::UnityEngine::UIElements::RadioButton::UxmlTraits
    class UxmlTraits;
    public:
    // private UnityEngine.UIElements.VisualElement m_CheckmarkBackground
    // Size: 0x8
    // Offset: 0x448
    ::UnityEngine::UIElements::VisualElement* m_CheckmarkBackground;
    // Field size check
    static_assert(sizeof(::UnityEngine::UIElements::VisualElement*) == 0x8);
    public:
    // Creating interface conversion operator: operator ::UnityEngine::UIElements::IGroupBoxOption
    operator ::UnityEngine::UIElements::IGroupBoxOption() noexcept {
      return *reinterpret_cast<::UnityEngine::UIElements::IGroupBoxOption*>(this);
    }
    // Creating conversion operator: operator ::UnityEngine::UIElements::VisualElement*
    constexpr operator ::UnityEngine::UIElements::VisualElement*() const noexcept {
      return m_CheckmarkBackground;
    }
    // Get static field: static public readonly System.String ussClassName
    static ::StringW _get_ussClassName();
    // Set static field: static public readonly System.String ussClassName
    static void _set_ussClassName(::StringW value);
    // Get static field: static public readonly System.String labelUssClassName
    static ::StringW _get_labelUssClassName();
    // Set static field: static public readonly System.String labelUssClassName
    static void _set_labelUssClassName(::StringW value);
    // Get static field: static public readonly System.String inputUssClassName
    static ::StringW _get_inputUssClassName();
    // Set static field: static public readonly System.String inputUssClassName
    static void _set_inputUssClassName(::StringW value);
    // Get static field: static public readonly System.String checkmarkBackgroundUssClassName
    static ::StringW _get_checkmarkBackgroundUssClassName();
    // Set static field: static public readonly System.String checkmarkBackgroundUssClassName
    static void _set_checkmarkBackgroundUssClassName(::StringW value);
    // Get static field: static public readonly System.String checkmarkUssClassName
    static ::StringW _get_checkmarkUssClassName();
    // Set static field: static public readonly System.String checkmarkUssClassName
    static void _set_checkmarkUssClassName(::StringW value);
    // Get static field: static public readonly System.String textUssClassName
    static ::StringW _get_textUssClassName();
    // Set static field: static public readonly System.String textUssClassName
    static void _set_textUssClassName(::StringW value);
    // Get instance field reference: private UnityEngine.UIElements.VisualElement m_CheckmarkBackground
    [[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::VisualElement*& dyn_m_CheckmarkBackground();
    // public System.Boolean get_value()
    // Offset: 0x5624D4C
    bool get_value();
    // public System.Void set_value(System.Boolean value)
    // Offset: 0x5624D94
    void set_value(bool value);
    // private System.Void OnOptionAttachToPanel(UnityEngine.UIElements.AttachToPanelEvent evt)
    // Offset: 0x56251FC
    void OnOptionAttachToPanel(::UnityEngine::UIElements::AttachToPanelEvent* evt);
    // private System.Void OnOptionDetachFromPanel(UnityEngine.UIElements.DetachFromPanelEvent evt)
    // Offset: 0x5625268
    void OnOptionDetachFromPanel(::UnityEngine::UIElements::DetachFromPanelEvent* evt);
    // private System.Void UnityEngine.UIElements.IGroupBoxOption.SetSelected(System.Boolean selected)
    // Offset: 0x5625390
    void UnityEngine_UIElements_IGroupBoxOption_SetSelected(bool selected);
    // private System.Void UpdateCheckmark()
    // Offset: 0x5624E78
    void UpdateCheckmark();
    // public System.Void .ctor()
    // Offset: 0x5624F6C
    // Implemented from: UnityEngine.UIElements.BindableElement
    // Base method: System.Void BindableElement::.ctor()
    // Base method: System.Void VisualElement::.ctor()
    // Base method: System.Void Focusable::.ctor()
    // Base method: System.Void CallbackEventHandler::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static RadioButton* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::RadioButton::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<RadioButton*, creationType>()));
    }
    // public System.Void .ctor(System.String label)
    // Offset: 0x5624F74
    // Implemented from: UnityEngine.UIElements.BaseBoolField
    // Base method: System.Void BaseBoolField::.ctor(System.String label)
    // Base method: System.Void BaseField_1::.ctor(System.String label)
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static RadioButton* New_ctor(::StringW label) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::RadioButton::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<RadioButton*, creationType>(label)));
    }
    // protected override System.Void InitLabel()
    // Offset: 0x56252D4
    // Implemented from: UnityEngine.UIElements.BaseBoolField
    // Base method: System.Void BaseBoolField::InitLabel()
    void InitLabel();
    // protected override System.Void ToggleValue()
    // Offset: 0x5625350
    // Implemented from: UnityEngine.UIElements.BaseBoolField
    // Base method: System.Void BaseBoolField::ToggleValue()
    void ToggleValue();
    // public override System.Void SetValueWithoutNotify(System.Boolean newValue)
    // Offset: 0x56253A4
    // Implemented from: UnityEngine.UIElements.BaseBoolField
    // Base method: System.Void BaseBoolField::SetValueWithoutNotify(System.Boolean newValue)
    void SetValueWithoutNotify(bool newValue);
    // protected override System.Void UpdateMixedValueContent()
    // Offset: 0x56253C4
    // Implemented from: UnityEngine.UIElements.BaseBoolField
    // Base method: System.Void BaseBoolField::UpdateMixedValueContent()
    void UpdateMixedValueContent();
    // static private System.Void .cctor()
    // Offset: 0x5625468
    // Implemented from: UnityEngine.UIElements.BaseField`1
    // Base method: System.Void BaseField_1::.cctor()
    // Base method: System.Void VisualElement::.cctor()
    static void _cctor();
  }; // UnityEngine.UIElements.RadioButton
  // WARNING Not writing size check since size may be invalid!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::UIElements::RadioButton::get_value
// Il2CppName: get_value
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::RadioButton::*)()>(&UnityEngine::UIElements::RadioButton::get_value)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::RadioButton*), "get_value", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::RadioButton::set_value
// Il2CppName: set_value
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::RadioButton::*)(bool)>(&UnityEngine::UIElements::RadioButton::set_value)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::RadioButton*), "set_value", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::RadioButton::OnOptionAttachToPanel
// Il2CppName: OnOptionAttachToPanel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::RadioButton::*)(::UnityEngine::UIElements::AttachToPanelEvent*)>(&UnityEngine::UIElements::RadioButton::OnOptionAttachToPanel)> {
  static const MethodInfo* get() {
    static auto* evt = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "AttachToPanelEvent")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::RadioButton*), "OnOptionAttachToPanel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{evt});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::RadioButton::OnOptionDetachFromPanel
// Il2CppName: OnOptionDetachFromPanel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::RadioButton::*)(::UnityEngine::UIElements::DetachFromPanelEvent*)>(&UnityEngine::UIElements::RadioButton::OnOptionDetachFromPanel)> {
  static const MethodInfo* get() {
    static auto* evt = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "DetachFromPanelEvent")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::RadioButton*), "OnOptionDetachFromPanel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{evt});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::RadioButton::UnityEngine_UIElements_IGroupBoxOption_SetSelected
// Il2CppName: UnityEngine.UIElements.IGroupBoxOption.SetSelected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::RadioButton::*)(bool)>(&UnityEngine::UIElements::RadioButton::UnityEngine_UIElements_IGroupBoxOption_SetSelected)> {
  static const MethodInfo* get() {
    static auto* selected = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::RadioButton*), "UnityEngine.UIElements.IGroupBoxOption.SetSelected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{selected});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::RadioButton::UpdateCheckmark
// Il2CppName: UpdateCheckmark
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::RadioButton::*)()>(&UnityEngine::UIElements::RadioButton::UpdateCheckmark)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::RadioButton*), "UpdateCheckmark", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::RadioButton::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::UIElements::RadioButton::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::UIElements::RadioButton::InitLabel
// Il2CppName: InitLabel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::RadioButton::*)()>(&UnityEngine::UIElements::RadioButton::InitLabel)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::RadioButton*), "InitLabel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::RadioButton::ToggleValue
// Il2CppName: ToggleValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::RadioButton::*)()>(&UnityEngine::UIElements::RadioButton::ToggleValue)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::RadioButton*), "ToggleValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::RadioButton::SetValueWithoutNotify
// Il2CppName: SetValueWithoutNotify
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::RadioButton::*)(bool)>(&UnityEngine::UIElements::RadioButton::SetValueWithoutNotify)> {
  static const MethodInfo* get() {
    static auto* newValue = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::RadioButton*), "SetValueWithoutNotify", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{newValue});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::RadioButton::UpdateMixedValueContent
// Il2CppName: UpdateMixedValueContent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::RadioButton::*)()>(&UnityEngine::UIElements::RadioButton::UpdateMixedValueContent)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::RadioButton*), "UpdateMixedValueContent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::RadioButton::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&UnityEngine::UIElements::RadioButton::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::RadioButton*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
