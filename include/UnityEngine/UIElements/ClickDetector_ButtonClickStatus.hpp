// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.UIElements.ClickDetector
#include "UnityEngine/UIElements/ClickDetector.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::UIElements
namespace UnityEngine::UIElements {
  // Forward declaring type: VisualElement
  class VisualElement;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::UIElements::ClickDetector::ButtonClickStatus);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::UIElements::ClickDetector::ButtonClickStatus*, "UnityEngine.UIElements", "ClickDetector/ButtonClickStatus");
// Type namespace: UnityEngine.UIElements
namespace UnityEngine::UIElements {
  // Size: 0x34
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.UIElements.ClickDetector/ButtonClickStatus
  // [TokenAttribute] Offset: FFFFFFFF
  class ClickDetector::ButtonClickStatus : public ::Il2CppObject {
    public:
    public:
    // public UnityEngine.UIElements.VisualElement m_Target
    // Size: 0x8
    // Offset: 0x10
    ::UnityEngine::UIElements::VisualElement* m_Target;
    // Field size check
    static_assert(sizeof(::UnityEngine::UIElements::VisualElement*) == 0x8);
    // public UnityEngine.Vector3 m_PointerDownPosition
    // Size: 0xC
    // Offset: 0x18
    ::UnityEngine::Vector3 m_PointerDownPosition;
    // Field size check
    static_assert(sizeof(::UnityEngine::Vector3) == 0xC);
    // Padding between fields: m_PointerDownPosition and: m_LastPointerDownTime
    char __padding1[0x4] = {};
    // public System.Int64 m_LastPointerDownTime
    // Size: 0x8
    // Offset: 0x28
    int64_t m_LastPointerDownTime;
    // Field size check
    static_assert(sizeof(int64_t) == 0x8);
    // public System.Int32 m_ClickCount
    // Size: 0x4
    // Offset: 0x30
    int m_ClickCount;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Get instance field reference: public UnityEngine.UIElements.VisualElement m_Target
    [[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::VisualElement*& dyn_m_Target();
    // Get instance field reference: public UnityEngine.Vector3 m_PointerDownPosition
    [[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& dyn_m_PointerDownPosition();
    // Get instance field reference: public System.Int64 m_LastPointerDownTime
    [[deprecated("Use field access instead!")]] int64_t& dyn_m_LastPointerDownTime();
    // Get instance field reference: public System.Int32 m_ClickCount
    [[deprecated("Use field access instead!")]] int& dyn_m_ClickCount();
    // public System.Void Reset()
    // Offset: 0x55956F4
    void Reset();
    // public System.Void .ctor()
    // Offset: 0x5595474
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static ClickDetector::ButtonClickStatus* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::ClickDetector::ButtonClickStatus::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<ClickDetector::ButtonClickStatus*, creationType>()));
    }
  }; // UnityEngine.UIElements.ClickDetector/ButtonClickStatus
  #pragma pack(pop)
  static check_size<sizeof(ClickDetector::ButtonClickStatus), 48 + sizeof(int)> __UnityEngine_UIElements_ClickDetector_ButtonClickStatusSizeCheck;
  static_assert(sizeof(ClickDetector::ButtonClickStatus) == 0x34);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::UIElements::ClickDetector::ButtonClickStatus::Reset
// Il2CppName: Reset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::ClickDetector::ButtonClickStatus::*)()>(&UnityEngine::UIElements::ClickDetector::ButtonClickStatus::Reset)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::ClickDetector::ButtonClickStatus*), "Reset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::ClickDetector::ButtonClickStatus::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
