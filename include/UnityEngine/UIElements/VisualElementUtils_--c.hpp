// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.UIElements.VisualElementUtils
#include "UnityEngine/UIElements/VisualElementUtils.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Predicate`1<T>
  template<typename T>
  class Predicate_1;
}
// Forward declaring namespace: UnityEngine::UIElements
namespace UnityEngine::UIElements {
  // Forward declaring type: VisualElement
  class VisualElement;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::UIElements::VisualElementUtils::$$c);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::UIElements::VisualElementUtils::$$c*, "UnityEngine.UIElements", "VisualElementUtils/<>c");
// Type namespace: UnityEngine.UIElements
namespace UnityEngine::UIElements {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.UIElements.VisualElementUtils/<>c
  // [TokenAttribute] Offset: FFFFFFFF
  // [CompilerGeneratedAttribute] Offset: FFFFFFFF
  class VisualElementUtils::$$c : public ::Il2CppObject {
    public:
    // Get static field: static public readonly UnityEngine.UIElements.VisualElementUtils/<>c <>9
    static ::UnityEngine::UIElements::VisualElementUtils::$$c* _get_$$9();
    // Set static field: static public readonly UnityEngine.UIElements.VisualElementUtils/<>c <>9
    static void _set_$$9(::UnityEngine::UIElements::VisualElementUtils::$$c* value);
    // Get static field: static public System.Predicate`1<UnityEngine.UIElements.VisualElement> <>9__5_0
    static ::System::Predicate_1<::UnityEngine::UIElements::VisualElement*>* _get_$$9__5_0();
    // Set static field: static public System.Predicate`1<UnityEngine.UIElements.VisualElement> <>9__5_0
    static void _set_$$9__5_0(::System::Predicate_1<::UnityEngine::UIElements::VisualElement*>* value);
    // static private System.Void .cctor()
    // Offset: 0x55C4A9C
    static void _cctor();
    // public System.Void .ctor()
    // Offset: 0x55C4B04
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static VisualElementUtils::$$c* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::VisualElementUtils::$$c::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<VisualElementUtils::$$c*, creationType>()));
    }
    // System.Boolean <AssignInspectorStyleIfNecessary>b__5_0(UnityEngine.UIElements.VisualElement i)
    // Offset: 0x55C4B0C
    bool $AssignInspectorStyleIfNecessary$b__5_0(::UnityEngine::UIElements::VisualElement* i);
  }; // UnityEngine.UIElements.VisualElementUtils/<>c
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElementUtils::$$c::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&UnityEngine::UIElements::VisualElementUtils::$$c::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElementUtils::$$c*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElementUtils::$$c::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElementUtils::$$c::$AssignInspectorStyleIfNecessary$b__5_0
// Il2CppName: <AssignInspectorStyleIfNecessary>b__5_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::VisualElementUtils::$$c::*)(::UnityEngine::UIElements::VisualElement*)>(&UnityEngine::UIElements::VisualElementUtils::$$c::$AssignInspectorStyleIfNecessary$b__5_0)> {
  static const MethodInfo* get() {
    static auto* i = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "VisualElement")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElementUtils::$$c*), "<AssignInspectorStyleIfNecessary>b__5_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{i});
  }
};
