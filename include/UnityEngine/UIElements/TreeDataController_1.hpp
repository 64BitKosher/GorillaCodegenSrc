// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.UIElements.TreeData`1
#include "UnityEngine/UIElements/TreeData_1.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: System.Collections.Generic.IEnumerator`1
#include "System/Collections/Generic/IEnumerator_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::UIElements
namespace UnityEngine::UIElements {
  // Skipping declaration: <GetAllItemIds>d__13 because it is already included!
  // Skipping declaration: <GetItemIds>d__9 because it is already included!
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: Stack`1<T>
  template<typename T>
  class Stack_1;
  // Forward declaring type: IList`1<T>
  template<typename T>
  class IList_1;
}
// Forward declaring namespace: System::Collections
namespace System::Collections {
  // Skipping declaration: IEnumerator because it is already included!
}
// Completed forward declares
// Type namespace: UnityEngine.UIElements
namespace UnityEngine::UIElements {
  // Forward declaring type: TreeDataController`1<T>
  template<typename T>
  class TreeDataController_1;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE_GENERIC_CLASS(::UnityEngine::UIElements::TreeDataController_1, "UnityEngine.UIElements", "TreeDataController`1");
// Type namespace: UnityEngine.UIElements
namespace UnityEngine::UIElements {
  // WARNING Size may be invalid!
  // Autogenerated type: UnityEngine.UIElements.TreeDataController`1
  // [TokenAttribute] Offset: FFFFFFFF
  template<typename T>
  class TreeDataController_1 : public ::Il2CppObject {
    public:
    // Nested type: ::UnityEngine::UIElements::TreeDataController_1::$GetAllItemIds$d__13<T>
    class $GetAllItemIds$d__13;
    // Nested type: ::UnityEngine::UIElements::TreeDataController_1::$GetItemIds$d__9<T>
    class $GetItemIds$d__9;
    // WARNING Size may be invalid!
    // Autogenerated type: UnityEngine.UIElements.TreeDataController`1/<GetAllItemIds>d__13
    // [TokenAttribute] Offset: FFFFFFFF
    // [CompilerGeneratedAttribute] Offset: FFFFFFFF
    class $GetAllItemIds$d__13 : public ::il2cpp_utils::il2cpp_type_check::NestedType, public ::Il2CppObject/*, public ::System::Collections::Generic::IEnumerable_1<int>, public ::System::Collections::Generic::IEnumerator_1<int>*/ {
      public:
      using declaring_type = TreeDataController_1<T>*;
      static constexpr std::string_view NESTED_NAME = "<GetAllItemIds>d__13";
      static constexpr bool IS_VALUE_TYPE = false;
      public:
      // private System.Int32 <>1__state
      // Size: 0x4
      // Offset: 0x0
      int $$1__state;
      // Field size check
      static_assert(sizeof(int) == 0x4);
      // private System.Int32 <>2__current
      // Size: 0x4
      // Offset: 0x0
      int $$2__current;
      // Field size check
      static_assert(sizeof(int) == 0x4);
      // private System.Int32 <>l__initialThreadId
      // Size: 0x4
      // Offset: 0x0
      int $$l__initialThreadId;
      // Field size check
      static_assert(sizeof(int) == 0x4);
      // private System.Collections.Generic.IEnumerable`1<System.Int32> rootIds
      // Size: 0x8
      // Offset: 0x0
      ::System::Collections::Generic::IEnumerable_1<int>* rootIds;
      // Field size check
      static_assert(sizeof(::System::Collections::Generic::IEnumerable_1<int>*) == 0x8);
      // public System.Collections.Generic.IEnumerable`1<System.Int32> <>3__rootIds
      // Size: 0x8
      // Offset: 0x0
      ::System::Collections::Generic::IEnumerable_1<int>* $$3__rootIds;
      // Field size check
      static_assert(sizeof(::System::Collections::Generic::IEnumerable_1<int>*) == 0x8);
      // public UnityEngine.UIElements.TreeDataController`1<T> <>4__this
      // Size: 0x8
      // Offset: 0x0
      ::UnityEngine::UIElements::TreeDataController_1<T>* $$4__this;
      // Field size check
      static_assert(sizeof(::UnityEngine::UIElements::TreeDataController_1<T>*) == 0x8);
      // private System.Collections.Generic.IEnumerator`1<System.Int32> <currentIterator>5__1
      // Size: 0x8
      // Offset: 0x0
      ::System::Collections::Generic::IEnumerator_1<int>* $currentIterator$5__1;
      // Field size check
      static_assert(sizeof(::System::Collections::Generic::IEnumerator_1<int>*) == 0x8);
      // private System.Boolean <hasNext>5__2
      // Size: 0x1
      // Offset: 0x0
      bool $hasNext$5__2;
      // Field size check
      static_assert(sizeof(bool) == 0x1);
      // private System.Int32 <currentItemId>5__3
      // Size: 0x4
      // Offset: 0x0
      int $currentItemId$5__3;
      // Field size check
      static_assert(sizeof(int) == 0x4);
      public:
      // Creating interface conversion operator: operator ::System::Collections::Generic::IEnumerable_1<int>
      operator ::System::Collections::Generic::IEnumerable_1<int>() noexcept {
        return *reinterpret_cast<::System::Collections::Generic::IEnumerable_1<int>*>(this);
      }
      // Creating interface conversion operator: operator ::System::Collections::Generic::IEnumerator_1<int>
      operator ::System::Collections::Generic::IEnumerator_1<int>() noexcept {
        return *reinterpret_cast<::System::Collections::Generic::IEnumerator_1<int>*>(this);
      }
      // Autogenerated instance field getter
      // Get instance field: private System.Int32 <>1__state
      [[deprecated("Use field access instead!")]] int& dyn_$$1__state() {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::TreeDataController_1::$GetAllItemIds$d__13::dyn_$$1__state");
        auto ___internal__instance = this;
        static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
        return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
      }
      // Autogenerated instance field getter
      // Get instance field: private System.Int32 <>2__current
      [[deprecated("Use field access instead!")]] int& dyn_$$2__current() {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::TreeDataController_1::$GetAllItemIds$d__13::dyn_$$2__current");
        auto ___internal__instance = this;
        static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
        return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
      }
      // Autogenerated instance field getter
      // Get instance field: private System.Int32 <>l__initialThreadId
      [[deprecated("Use field access instead!")]] int& dyn_$$l__initialThreadId() {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::TreeDataController_1::$GetAllItemIds$d__13::dyn_$$l__initialThreadId");
        auto ___internal__instance = this;
        static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>l__initialThreadId"))->offset;
        return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
      }
      // Autogenerated instance field getter
      // Get instance field: private System.Collections.Generic.IEnumerable`1<System.Int32> rootIds
      [[deprecated("Use field access instead!")]] ::System::Collections::Generic::IEnumerable_1<int>*& dyn_rootIds() {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::TreeDataController_1::$GetAllItemIds$d__13::dyn_rootIds");
        auto ___internal__instance = this;
        static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rootIds"))->offset;
        return *reinterpret_cast<::System::Collections::Generic::IEnumerable_1<int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
      }
      // Autogenerated instance field getter
      // Get instance field: public System.Collections.Generic.IEnumerable`1<System.Int32> <>3__rootIds
      [[deprecated("Use field access instead!")]] ::System::Collections::Generic::IEnumerable_1<int>*& dyn_$$3__rootIds() {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::TreeDataController_1::$GetAllItemIds$d__13::dyn_$$3__rootIds");
        auto ___internal__instance = this;
        static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>3__rootIds"))->offset;
        return *reinterpret_cast<::System::Collections::Generic::IEnumerable_1<int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
      }
      // Autogenerated instance field getter
      // Get instance field: public UnityEngine.UIElements.TreeDataController`1<T> <>4__this
      [[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::TreeDataController_1<T>*& dyn_$$4__this() {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::TreeDataController_1::$GetAllItemIds$d__13::dyn_$$4__this");
        auto ___internal__instance = this;
        static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
        return *reinterpret_cast<::UnityEngine::UIElements::TreeDataController_1<T>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
      }
      // Autogenerated instance field getter
      // Get instance field: private System.Collections.Generic.IEnumerator`1<System.Int32> <currentIterator>5__1
      [[deprecated("Use field access instead!")]] ::System::Collections::Generic::IEnumerator_1<int>*& dyn_$currentIterator$5__1() {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::TreeDataController_1::$GetAllItemIds$d__13::dyn_$currentIterator$5__1");
        auto ___internal__instance = this;
        static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<currentIterator>5__1"))->offset;
        return *reinterpret_cast<::System::Collections::Generic::IEnumerator_1<int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
      }
      // Autogenerated instance field getter
      // Get instance field: private System.Boolean <hasNext>5__2
      [[deprecated("Use field access instead!")]] bool& dyn_$hasNext$5__2() {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::TreeDataController_1::$GetAllItemIds$d__13::dyn_$hasNext$5__2");
        auto ___internal__instance = this;
        static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<hasNext>5__2"))->offset;
        return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
      }
      // Autogenerated instance field getter
      // Get instance field: private System.Int32 <currentItemId>5__3
      [[deprecated("Use field access instead!")]] int& dyn_$currentItemId$5__3() {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::TreeDataController_1::$GetAllItemIds$d__13::dyn_$currentItemId$5__3");
        auto ___internal__instance = this;
        static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<currentItemId>5__3"))->offset;
        return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
      }
      // public System.Void .ctor(System.Int32 <>1__state)
      // Offset: 0xFFFFFFFFFFFFFFFF
      template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
      static typename TreeDataController_1<T>::$GetAllItemIds$d__13* New_ctor(int $$1__state) {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::TreeDataController_1::$GetAllItemIds$d__13::.ctor");
        return THROW_UNLESS((::il2cpp_utils::New<typename TreeDataController_1<T>::$GetAllItemIds$d__13*, creationType>($$1__state)));
      }
      // private System.Void System.IDisposable.Dispose()
      // Offset: 0xFFFFFFFFFFFFFFFF
      void System_IDisposable_Dispose() {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::TreeDataController_1::$GetAllItemIds$d__13::System.IDisposable.Dispose");
        auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(typename ::UnityEngine::UIElements::TreeDataController_1<T>::$GetAllItemIds$d__13*), -1));
        ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
      }
      // private System.Boolean MoveNext()
      // Offset: 0xFFFFFFFFFFFFFFFF
      bool MoveNext() {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::TreeDataController_1::$GetAllItemIds$d__13::MoveNext");
        auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(typename ::UnityEngine::UIElements::TreeDataController_1<T>::$GetAllItemIds$d__13*), -1));
        return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
      }
      // private System.Int32 System.Collections.Generic.IEnumerator<System.Int32>.get_Current()
      // Offset: 0xFFFFFFFFFFFFFFFF
      int System_Collections_Generic_IEnumerator$System_Int32$_get_Current() {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::TreeDataController_1::$GetAllItemIds$d__13::System.Collections.Generic.IEnumerator<System.Int32>.get_Current");
        auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(typename ::UnityEngine::UIElements::TreeDataController_1<T>::$GetAllItemIds$d__13*), -1));
        return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
      }
      // private System.Void System.Collections.IEnumerator.Reset()
      // Offset: 0xFFFFFFFFFFFFFFFF
      void System_Collections_IEnumerator_Reset() {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::TreeDataController_1::$GetAllItemIds$d__13::System.Collections.IEnumerator.Reset");
        auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(typename ::UnityEngine::UIElements::TreeDataController_1<T>::$GetAllItemIds$d__13*), -1));
        ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
      }
      // private System.Object System.Collections.IEnumerator.get_Current()
      // Offset: 0xFFFFFFFFFFFFFFFF
      ::Il2CppObject* System_Collections_IEnumerator_get_Current() {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::TreeDataController_1::$GetAllItemIds$d__13::System.Collections.IEnumerator.get_Current");
        auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(typename ::UnityEngine::UIElements::TreeDataController_1<T>::$GetAllItemIds$d__13*), -1));
        return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
      }
      // private System.Collections.Generic.IEnumerator`1<System.Int32> System.Collections.Generic.IEnumerable<System.Int32>.GetEnumerator()
      // Offset: 0xFFFFFFFFFFFFFFFF
      ::System::Collections::Generic::IEnumerator_1<int>* System_Collections_Generic_IEnumerable$System_Int32$_GetEnumerator() {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::TreeDataController_1::$GetAllItemIds$d__13::System.Collections.Generic.IEnumerable<System.Int32>.GetEnumerator");
        auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(typename ::UnityEngine::UIElements::TreeDataController_1<T>::$GetAllItemIds$d__13*), -1));
        return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerator_1<int>*, false>(this, ___internal__method);
      }
      // private System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()
      // Offset: 0xFFFFFFFFFFFFFFFF
      ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::TreeDataController_1::$GetAllItemIds$d__13::System.Collections.IEnumerable.GetEnumerator");
        auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(typename ::UnityEngine::UIElements::TreeDataController_1<T>::$GetAllItemIds$d__13*), -1));
        return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
      }
    }; // UnityEngine.UIElements.TreeDataController`1/<GetAllItemIds>d__13
    // Could not write size check! Type: UnityEngine.UIElements.TreeDataController`1/<GetAllItemIds>d__13 is generic, or has no fields that are valid for size checks!
    // WARNING Size may be invalid!
    // Autogenerated type: UnityEngine.UIElements.TreeDataController`1/<GetItemIds>d__9
    // [TokenAttribute] Offset: FFFFFFFF
    // [CompilerGeneratedAttribute] Offset: FFFFFFFF
    class $GetItemIds$d__9 : public ::il2cpp_utils::il2cpp_type_check::NestedType, public ::Il2CppObject/*, public ::System::Collections::Generic::IEnumerable_1<int>, public ::System::Collections::Generic::IEnumerator_1<int>*/ {
      public:
      using declaring_type = TreeDataController_1<T>*;
      static constexpr std::string_view NESTED_NAME = "<GetItemIds>d__9";
      static constexpr bool IS_VALUE_TYPE = false;
      public:
      // private System.Int32 <>1__state
      // Size: 0x4
      // Offset: 0x0
      int $$1__state;
      // Field size check
      static_assert(sizeof(int) == 0x4);
      // private System.Int32 <>2__current
      // Size: 0x4
      // Offset: 0x0
      int $$2__current;
      // Field size check
      static_assert(sizeof(int) == 0x4);
      // private System.Int32 <>l__initialThreadId
      // Size: 0x4
      // Offset: 0x0
      int $$l__initialThreadId;
      // Field size check
      static_assert(sizeof(int) == 0x4);
      // private System.Collections.Generic.IEnumerable`1<UnityEngine.UIElements.TreeViewItemData`1<T>> items
      // Size: 0x8
      // Offset: 0x0
      ::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::TreeViewItemData_1<T>>* items;
      // Field size check
      static_assert(sizeof(::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::TreeViewItemData_1<T>>*) == 0x8);
      // public System.Collections.Generic.IEnumerable`1<UnityEngine.UIElements.TreeViewItemData`1<T>> <>3__items
      // Size: 0x8
      // Offset: 0x0
      ::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::TreeViewItemData_1<T>>* $$3__items;
      // Field size check
      static_assert(sizeof(::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::TreeViewItemData_1<T>>*) == 0x8);
      // private System.Collections.Generic.IEnumerator`1<UnityEngine.UIElements.TreeViewItemData`1<T>> <>s__1
      // Size: 0x8
      // Offset: 0x0
      ::System::Collections::Generic::IEnumerator_1<::UnityEngine::UIElements::TreeViewItemData_1<T>>* $$s__1;
      // Field size check
      static_assert(sizeof(::System::Collections::Generic::IEnumerator_1<::UnityEngine::UIElements::TreeViewItemData_1<T>>*) == 0x8);
      // private UnityEngine.UIElements.TreeViewItemData`1<T> <item>5__2
      // Size: 0xFFFFFFFF
      // Offset: 0x0
      ::UnityEngine::UIElements::TreeViewItemData_1<T> $item$5__2;
      public:
      // Creating interface conversion operator: operator ::System::Collections::Generic::IEnumerable_1<int>
      operator ::System::Collections::Generic::IEnumerable_1<int>() noexcept {
        return *reinterpret_cast<::System::Collections::Generic::IEnumerable_1<int>*>(this);
      }
      // Creating interface conversion operator: operator ::System::Collections::Generic::IEnumerator_1<int>
      operator ::System::Collections::Generic::IEnumerator_1<int>() noexcept {
        return *reinterpret_cast<::System::Collections::Generic::IEnumerator_1<int>*>(this);
      }
      // Autogenerated instance field getter
      // Get instance field: private System.Int32 <>1__state
      [[deprecated("Use field access instead!")]] int& dyn_$$1__state() {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::TreeDataController_1::$GetItemIds$d__9::dyn_$$1__state");
        auto ___internal__instance = this;
        static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
        return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
      }
      // Autogenerated instance field getter
      // Get instance field: private System.Int32 <>2__current
      [[deprecated("Use field access instead!")]] int& dyn_$$2__current() {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::TreeDataController_1::$GetItemIds$d__9::dyn_$$2__current");
        auto ___internal__instance = this;
        static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
        return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
      }
      // Autogenerated instance field getter
      // Get instance field: private System.Int32 <>l__initialThreadId
      [[deprecated("Use field access instead!")]] int& dyn_$$l__initialThreadId() {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::TreeDataController_1::$GetItemIds$d__9::dyn_$$l__initialThreadId");
        auto ___internal__instance = this;
        static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>l__initialThreadId"))->offset;
        return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
      }
      // Autogenerated instance field getter
      // Get instance field: private System.Collections.Generic.IEnumerable`1<UnityEngine.UIElements.TreeViewItemData`1<T>> items
      [[deprecated("Use field access instead!")]] ::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::TreeViewItemData_1<T>>*& dyn_items() {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::TreeDataController_1::$GetItemIds$d__9::dyn_items");
        auto ___internal__instance = this;
        static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "items"))->offset;
        return *reinterpret_cast<::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::TreeViewItemData_1<T>>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
      }
      // Autogenerated instance field getter
      // Get instance field: public System.Collections.Generic.IEnumerable`1<UnityEngine.UIElements.TreeViewItemData`1<T>> <>3__items
      [[deprecated("Use field access instead!")]] ::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::TreeViewItemData_1<T>>*& dyn_$$3__items() {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::TreeDataController_1::$GetItemIds$d__9::dyn_$$3__items");
        auto ___internal__instance = this;
        static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>3__items"))->offset;
        return *reinterpret_cast<::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::TreeViewItemData_1<T>>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
      }
      // Autogenerated instance field getter
      // Get instance field: private System.Collections.Generic.IEnumerator`1<UnityEngine.UIElements.TreeViewItemData`1<T>> <>s__1
      [[deprecated("Use field access instead!")]] ::System::Collections::Generic::IEnumerator_1<::UnityEngine::UIElements::TreeViewItemData_1<T>>*& dyn_$$s__1() {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::TreeDataController_1::$GetItemIds$d__9::dyn_$$s__1");
        auto ___internal__instance = this;
        static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>s__1"))->offset;
        return *reinterpret_cast<::System::Collections::Generic::IEnumerator_1<::UnityEngine::UIElements::TreeViewItemData_1<T>>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
      }
      // Autogenerated instance field getter
      // Get instance field: private UnityEngine.UIElements.TreeViewItemData`1<T> <item>5__2
      [[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::TreeViewItemData_1<T>& dyn_$item$5__2() {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::TreeDataController_1::$GetItemIds$d__9::dyn_$item$5__2");
        auto ___internal__instance = this;
        static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<item>5__2"))->offset;
        return *reinterpret_cast<::UnityEngine::UIElements::TreeViewItemData_1<T>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
      }
      // public System.Void .ctor(System.Int32 <>1__state)
      // Offset: 0xFFFFFFFFFFFFFFFF
      template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
      static typename TreeDataController_1<T>::$GetItemIds$d__9* New_ctor(int $$1__state) {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::TreeDataController_1::$GetItemIds$d__9::.ctor");
        return THROW_UNLESS((::il2cpp_utils::New<typename TreeDataController_1<T>::$GetItemIds$d__9*, creationType>($$1__state)));
      }
      // private System.Void System.IDisposable.Dispose()
      // Offset: 0xFFFFFFFFFFFFFFFF
      void System_IDisposable_Dispose() {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::TreeDataController_1::$GetItemIds$d__9::System.IDisposable.Dispose");
        auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(typename ::UnityEngine::UIElements::TreeDataController_1<T>::$GetItemIds$d__9*), -1));
        ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
      }
      // private System.Boolean MoveNext()
      // Offset: 0xFFFFFFFFFFFFFFFF
      bool MoveNext() {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::TreeDataController_1::$GetItemIds$d__9::MoveNext");
        auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(typename ::UnityEngine::UIElements::TreeDataController_1<T>::$GetItemIds$d__9*), -1));
        return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
      }
      // private System.Void <>m__Finally1()
      // Offset: 0xFFFFFFFFFFFFFFFF
      void $$m__Finally1() {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::TreeDataController_1::$GetItemIds$d__9::<>m__Finally1");
        static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<>m__Finally1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
        ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
      }
      // private System.Int32 System.Collections.Generic.IEnumerator<System.Int32>.get_Current()
      // Offset: 0xFFFFFFFFFFFFFFFF
      int System_Collections_Generic_IEnumerator$System_Int32$_get_Current() {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::TreeDataController_1::$GetItemIds$d__9::System.Collections.Generic.IEnumerator<System.Int32>.get_Current");
        auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(typename ::UnityEngine::UIElements::TreeDataController_1<T>::$GetItemIds$d__9*), -1));
        return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
      }
      // private System.Void System.Collections.IEnumerator.Reset()
      // Offset: 0xFFFFFFFFFFFFFFFF
      void System_Collections_IEnumerator_Reset() {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::TreeDataController_1::$GetItemIds$d__9::System.Collections.IEnumerator.Reset");
        auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(typename ::UnityEngine::UIElements::TreeDataController_1<T>::$GetItemIds$d__9*), -1));
        ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
      }
      // private System.Object System.Collections.IEnumerator.get_Current()
      // Offset: 0xFFFFFFFFFFFFFFFF
      ::Il2CppObject* System_Collections_IEnumerator_get_Current() {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::TreeDataController_1::$GetItemIds$d__9::System.Collections.IEnumerator.get_Current");
        auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(typename ::UnityEngine::UIElements::TreeDataController_1<T>::$GetItemIds$d__9*), -1));
        return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
      }
      // private System.Collections.Generic.IEnumerator`1<System.Int32> System.Collections.Generic.IEnumerable<System.Int32>.GetEnumerator()
      // Offset: 0xFFFFFFFFFFFFFFFF
      ::System::Collections::Generic::IEnumerator_1<int>* System_Collections_Generic_IEnumerable$System_Int32$_GetEnumerator() {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::TreeDataController_1::$GetItemIds$d__9::System.Collections.Generic.IEnumerable<System.Int32>.GetEnumerator");
        auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(typename ::UnityEngine::UIElements::TreeDataController_1<T>::$GetItemIds$d__9*), -1));
        return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerator_1<int>*, false>(this, ___internal__method);
      }
      // private System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()
      // Offset: 0xFFFFFFFFFFFFFFFF
      ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::TreeDataController_1::$GetItemIds$d__9::System.Collections.IEnumerable.GetEnumerator");
        auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(typename ::UnityEngine::UIElements::TreeDataController_1<T>::$GetItemIds$d__9*), -1));
        return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
      }
    }; // UnityEngine.UIElements.TreeDataController`1/<GetItemIds>d__9
    // Could not write size check! Type: UnityEngine.UIElements.TreeDataController`1/<GetItemIds>d__9 is generic, or has no fields that are valid for size checks!
    public:
    // private UnityEngine.UIElements.TreeData`1<T> m_TreeData
    // Size: 0xFFFFFFFF
    // Offset: 0x0
    ::UnityEngine::UIElements::TreeData_1<T> m_TreeData;
    // private System.Collections.Generic.Stack`1<System.Collections.Generic.IEnumerator`1<System.Int32>> m_IteratorStack
    // Size: 0x8
    // Offset: 0x0
    ::System::Collections::Generic::Stack_1<::System::Collections::Generic::IEnumerator_1<int>*>* m_IteratorStack;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::Stack_1<::System::Collections::Generic::IEnumerator_1<int>*>*) == 0x8);
    public:
    // Autogenerated instance field getter
    // Get instance field: private UnityEngine.UIElements.TreeData`1<T> m_TreeData
    [[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::TreeData_1<T>& dyn_m_TreeData() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::TreeDataController_1::dyn_m_TreeData");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_TreeData"))->offset;
      return *reinterpret_cast<::UnityEngine::UIElements::TreeData_1<T>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: private System.Collections.Generic.Stack`1<System.Collections.Generic.IEnumerator`1<System.Int32>> m_IteratorStack
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::Stack_1<::System::Collections::Generic::IEnumerator_1<int>*>*& dyn_m_IteratorStack() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::TreeDataController_1::dyn_m_IteratorStack");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_IteratorStack"))->offset;
      return *reinterpret_cast<::System::Collections::Generic::Stack_1<::System::Collections::Generic::IEnumerator_1<int>*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // public System.Void SetRootItems(System.Collections.Generic.IList`1<UnityEngine.UIElements.TreeViewItemData`1<T>> rootItems)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void SetRootItems(::System::Collections::Generic::IList_1<::UnityEngine::UIElements::TreeViewItemData_1<T>>* rootItems) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::TreeDataController_1::SetRootItems");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetRootItems", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rootItems)})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, rootItems);
    }
    // public T GetDataForId(System.Int32 id)
    // Offset: 0xFFFFFFFFFFFFFFFF
    T GetDataForId(int id) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::TreeDataController_1::GetDataForId");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDataForId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(id)})));
      return ::il2cpp_utils::RunMethodRethrow<T, false>(this, ___internal__method, id);
    }
    // public System.Int32 GetParentId(System.Int32 id)
    // Offset: 0xFFFFFFFFFFFFFFFF
    int GetParentId(int id) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::TreeDataController_1::GetParentId");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetParentId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(id)})));
      return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, id);
    }
    // public System.Boolean HasChildren(System.Int32 id)
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool HasChildren(int id) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::TreeDataController_1::HasChildren");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HasChildren", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(id)})));
      return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, id);
    }
    // static private System.Collections.Generic.IEnumerable`1<System.Int32> GetItemIds(System.Collections.Generic.IEnumerable`1<UnityEngine.UIElements.TreeViewItemData`1<T>> items)
    // Offset: 0xFFFFFFFFFFFFFFFF
    static ::System::Collections::Generic::IEnumerable_1<int>* GetItemIds(::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::TreeViewItemData_1<T>>* items) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::TreeDataController_1::GetItemIds");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TreeDataController_1<T>*>::get(), "GetItemIds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(items)})));
      return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<int>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, items);
    }
    // public System.Collections.Generic.IEnumerable`1<System.Int32> GetChildrenIds(System.Int32 id)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::System::Collections::Generic::IEnumerable_1<int>* GetChildrenIds(int id) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::TreeDataController_1::GetChildrenIds");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetChildrenIds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(id)})));
      return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<int>*, false>(this, ___internal__method, id);
    }
    // public System.Void Move(System.Int32 id, System.Int32 newParentId, System.Int32 childIndex)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void Move(int id, int newParentId, int childIndex) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::TreeDataController_1::Move");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Move", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(id), ::il2cpp_utils::ExtractType(newParentId), ::il2cpp_utils::ExtractType(childIndex)})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, id, newParentId, childIndex);
    }
    // public System.Boolean IsChildOf(System.Int32 childId, System.Int32 id)
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool IsChildOf(int childId, int id) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::TreeDataController_1::IsChildOf");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsChildOf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(childId), ::il2cpp_utils::ExtractType(id)})));
      return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, childId, id);
    }
    // public System.Collections.Generic.IEnumerable`1<System.Int32> GetAllItemIds(System.Collections.Generic.IEnumerable`1<System.Int32> rootIds)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::System::Collections::Generic::IEnumerable_1<int>* GetAllItemIds(::System::Collections::Generic::IEnumerable_1<int>* rootIds) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::TreeDataController_1::GetAllItemIds");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAllItemIds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rootIds)})));
      return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<int>*, false>(this, ___internal__method, rootIds);
    }
    // public System.Void .ctor()
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static TreeDataController_1<T>* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::TreeDataController_1::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<TreeDataController_1<T>*, creationType>()));
    }
  }; // UnityEngine.UIElements.TreeDataController`1
  // Could not write size check! Type: UnityEngine.UIElements.TreeDataController`1 is generic, or has no fields that are valid for size checks!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
