// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.UIElements.KeyboardNavigationManipulator
#include "UnityEngine/UIElements/KeyboardNavigationManipulator.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::UIElements
namespace UnityEngine::UIElements {
  // Forward declaring type: KeyDownEvent
  class KeyDownEvent;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::UIElements::KeyboardNavigationManipulator::$$c__DisplayClass4_0, "UnityEngine.UIElements", "KeyboardNavigationManipulator/<>c__DisplayClass4_0");
// Type namespace: UnityEngine.UIElements
namespace UnityEngine::UIElements {
  // Size: 0x8
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.UIElements.KeyboardNavigationManipulator/<>c__DisplayClass4_0
  // [TokenAttribute] Offset: FFFFFFFF
  // [CompilerGeneratedAttribute] Offset: FFFFFFFF
  struct KeyboardNavigationManipulator::$$c__DisplayClass4_0/*, public ::System::ValueType*/ {
    public:
    public:
    // public UnityEngine.UIElements.KeyDownEvent evt
    // Size: 0x8
    // Offset: 0x0
    ::UnityEngine::UIElements::KeyDownEvent* evt;
    // Field size check
    static_assert(sizeof(::UnityEngine::UIElements::KeyDownEvent*) == 0x8);
    public:
    // Creating value type constructor for type: $$c__DisplayClass4_0
    constexpr $$c__DisplayClass4_0(::UnityEngine::UIElements::KeyDownEvent* evt_ = {}) noexcept : evt{evt_} {}
    // Creating interface conversion operator: operator ::System::ValueType
    operator ::System::ValueType() noexcept {
      return *reinterpret_cast<::System::ValueType*>(this);
    }
    // Creating conversion operator: operator ::UnityEngine::UIElements::KeyDownEvent*
    constexpr operator ::UnityEngine::UIElements::KeyDownEvent*() const noexcept {
      return evt;
    }
    // Get instance field reference: public UnityEngine.UIElements.KeyDownEvent evt
    [[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::KeyDownEvent*& dyn_evt();
  }; // UnityEngine.UIElements.KeyboardNavigationManipulator/<>c__DisplayClass4_0
  #pragma pack(pop)
  static check_size<sizeof(KeyboardNavigationManipulator::$$c__DisplayClass4_0), 0 + sizeof(::UnityEngine::UIElements::KeyDownEvent*)> __UnityEngine_UIElements_KeyboardNavigationManipulator_$$c__DisplayClass4_0SizeCheck;
  static_assert(sizeof(KeyboardNavigationManipulator::$$c__DisplayClass4_0) == 0x8);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
