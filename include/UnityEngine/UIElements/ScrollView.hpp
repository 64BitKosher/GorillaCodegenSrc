// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.UIElements.VisualElement
#include "UnityEngine/UIElements/VisualElement.hpp"
// Including type: UnityEngine.UIElements.ScrollerVisibility
#include "UnityEngine/UIElements/ScrollerVisibility.hpp"
// Including type: UnityEngine.UIElements.ScrollViewMode
#include "UnityEngine/UIElements/ScrollViewMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::UIElements
namespace UnityEngine::UIElements {
  // Forward declaring type: IVisualElementScheduledItem
  class IVisualElementScheduledItem;
  // Forward declaring type: Scroller
  class Scroller;
  // Forward declaring type: EventCallback`1<TEventType>
  template<typename TEventType>
  class EventCallback_1;
  // Forward declaring type: PointerMoveEvent
  class PointerMoveEvent;
  // Forward declaring type: PointerUpEvent
  class PointerUpEvent;
  // Skipping declaration: TouchScrollBehavior because it is already included!
  // Skipping declaration: NestedInteractionKind because it is already included!
  // Forward declaring type: GeometryChangedEvent
  class GeometryChangedEvent;
  // Forward declaring type: AttachToPanelEvent
  class AttachToPanelEvent;
  // Forward declaring type: DetachFromPanelEvent
  class DetachFromPanelEvent;
  // Forward declaring type: PointerCaptureEvent
  class PointerCaptureEvent;
  // Forward declaring type: PointerCaptureOutEvent
  class PointerCaptureOutEvent;
  // Forward declaring type: PointerDownEvent
  class PointerDownEvent;
  // Forward declaring type: PointerCancelEvent
  class PointerCancelEvent;
  // Skipping declaration: IEventHandler because it is already included!
  // Forward declaring type: WheelEvent
  class WheelEvent;
  // Forward declaring type: CustomStyleResolvedEvent
  class CustomStyleResolvedEvent;
}
// Completed forward declares
// Type namespace: UnityEngine.UIElements
namespace UnityEngine::UIElements {
  // Forward declaring type: ScrollView
  class ScrollView;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::UIElements::ScrollView);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::UIElements::ScrollView*, "UnityEngine.UIElements", "ScrollView");
// Type namespace: UnityEngine.UIElements
namespace UnityEngine::UIElements {
  // WARNING Size may be invalid!
  // Autogenerated type: UnityEngine.UIElements.ScrollView
  // [TokenAttribute] Offset: FFFFFFFF
  class ScrollView : public ::UnityEngine::UIElements::VisualElement {
    public:
    // Nested type: ::UnityEngine::UIElements::ScrollView::UxmlFactory
    class UxmlFactory;
    // Nested type: ::UnityEngine::UIElements::ScrollView::UxmlTraits
    class UxmlTraits;
    // Nested type: ::UnityEngine::UIElements::ScrollView::TouchScrollBehavior
    struct TouchScrollBehavior;
    // Nested type: ::UnityEngine::UIElements::ScrollView::NestedInteractionKind
    struct NestedInteractionKind;
    // Nested type: ::UnityEngine::UIElements::ScrollView::TouchScrollingResult
    struct TouchScrollingResult;
    // Size: 0x4
    #pragma pack(push, 1)
    // Autogenerated type: UnityEngine.UIElements.ScrollView/TouchScrollBehavior
    // [TokenAttribute] Offset: FFFFFFFF
    struct TouchScrollBehavior/*, public ::System::Enum*/ {
      public:
      public:
      // public System.Int32 value__
      // Size: 0x4
      // Offset: 0x0
      int value;
      // Field size check
      static_assert(sizeof(int) == 0x4);
      public:
      // Creating value type constructor for type: TouchScrollBehavior
      constexpr TouchScrollBehavior(int value_ = {}) noexcept : value{value_} {}
      // Creating interface conversion operator: operator ::System::Enum
      operator ::System::Enum() noexcept {
        return *reinterpret_cast<::System::Enum*>(this);
      }
      // Creating conversion operator: operator int
      constexpr operator int() const noexcept {
        return value;
      }
      // static field const value: static public UnityEngine.UIElements.ScrollView/TouchScrollBehavior Unrestricted
      static constexpr const int Unrestricted = 0;
      // Get static field: static public UnityEngine.UIElements.ScrollView/TouchScrollBehavior Unrestricted
      static ::UnityEngine::UIElements::ScrollView::TouchScrollBehavior _get_Unrestricted();
      // Set static field: static public UnityEngine.UIElements.ScrollView/TouchScrollBehavior Unrestricted
      static void _set_Unrestricted(::UnityEngine::UIElements::ScrollView::TouchScrollBehavior value);
      // static field const value: static public UnityEngine.UIElements.ScrollView/TouchScrollBehavior Elastic
      static constexpr const int Elastic = 1;
      // Get static field: static public UnityEngine.UIElements.ScrollView/TouchScrollBehavior Elastic
      static ::UnityEngine::UIElements::ScrollView::TouchScrollBehavior _get_Elastic();
      // Set static field: static public UnityEngine.UIElements.ScrollView/TouchScrollBehavior Elastic
      static void _set_Elastic(::UnityEngine::UIElements::ScrollView::TouchScrollBehavior value);
      // static field const value: static public UnityEngine.UIElements.ScrollView/TouchScrollBehavior Clamped
      static constexpr const int Clamped = 2;
      // Get static field: static public UnityEngine.UIElements.ScrollView/TouchScrollBehavior Clamped
      static ::UnityEngine::UIElements::ScrollView::TouchScrollBehavior _get_Clamped();
      // Set static field: static public UnityEngine.UIElements.ScrollView/TouchScrollBehavior Clamped
      static void _set_Clamped(::UnityEngine::UIElements::ScrollView::TouchScrollBehavior value);
      // Get instance field reference: public System.Int32 value__
      [[deprecated("Use field access instead!")]] int& dyn_value__();
    }; // UnityEngine.UIElements.ScrollView/TouchScrollBehavior
    #pragma pack(pop)
    static check_size<sizeof(ScrollView::TouchScrollBehavior), 0 + sizeof(int)> __UnityEngine_UIElements_ScrollView_TouchScrollBehaviorSizeCheck;
    static_assert(sizeof(ScrollView::TouchScrollBehavior) == 0x4);
    // Size: 0x4
    #pragma pack(push, 1)
    // Autogenerated type: UnityEngine.UIElements.ScrollView/NestedInteractionKind
    // [TokenAttribute] Offset: FFFFFFFF
    struct NestedInteractionKind/*, public ::System::Enum*/ {
      public:
      public:
      // public System.Int32 value__
      // Size: 0x4
      // Offset: 0x0
      int value;
      // Field size check
      static_assert(sizeof(int) == 0x4);
      public:
      // Creating value type constructor for type: NestedInteractionKind
      constexpr NestedInteractionKind(int value_ = {}) noexcept : value{value_} {}
      // Creating interface conversion operator: operator ::System::Enum
      operator ::System::Enum() noexcept {
        return *reinterpret_cast<::System::Enum*>(this);
      }
      // Creating conversion operator: operator int
      constexpr operator int() const noexcept {
        return value;
      }
      // static field const value: static public UnityEngine.UIElements.ScrollView/NestedInteractionKind Default
      static constexpr const int Default = 0;
      // Get static field: static public UnityEngine.UIElements.ScrollView/NestedInteractionKind Default
      static ::UnityEngine::UIElements::ScrollView::NestedInteractionKind _get_Default();
      // Set static field: static public UnityEngine.UIElements.ScrollView/NestedInteractionKind Default
      static void _set_Default(::UnityEngine::UIElements::ScrollView::NestedInteractionKind value);
      // static field const value: static public UnityEngine.UIElements.ScrollView/NestedInteractionKind StopScrolling
      static constexpr const int StopScrolling = 1;
      // Get static field: static public UnityEngine.UIElements.ScrollView/NestedInteractionKind StopScrolling
      static ::UnityEngine::UIElements::ScrollView::NestedInteractionKind _get_StopScrolling();
      // Set static field: static public UnityEngine.UIElements.ScrollView/NestedInteractionKind StopScrolling
      static void _set_StopScrolling(::UnityEngine::UIElements::ScrollView::NestedInteractionKind value);
      // static field const value: static public UnityEngine.UIElements.ScrollView/NestedInteractionKind ForwardScrolling
      static constexpr const int ForwardScrolling = 2;
      // Get static field: static public UnityEngine.UIElements.ScrollView/NestedInteractionKind ForwardScrolling
      static ::UnityEngine::UIElements::ScrollView::NestedInteractionKind _get_ForwardScrolling();
      // Set static field: static public UnityEngine.UIElements.ScrollView/NestedInteractionKind ForwardScrolling
      static void _set_ForwardScrolling(::UnityEngine::UIElements::ScrollView::NestedInteractionKind value);
      // Get instance field reference: public System.Int32 value__
      [[deprecated("Use field access instead!")]] int& dyn_value__();
    }; // UnityEngine.UIElements.ScrollView/NestedInteractionKind
    #pragma pack(pop)
    static check_size<sizeof(ScrollView::NestedInteractionKind), 0 + sizeof(int)> __UnityEngine_UIElements_ScrollView_NestedInteractionKindSizeCheck;
    static_assert(sizeof(ScrollView::NestedInteractionKind) == 0x4);
    public:
    // private System.Int32 m_FirstLayoutPass
    // Size: 0x4
    // Offset: 0x3C0
    int m_FirstLayoutPass;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private UnityEngine.UIElements.ScrollerVisibility m_HorizontalScrollerVisibility
    // Size: 0x4
    // Offset: 0x3C4
    ::UnityEngine::UIElements::ScrollerVisibility m_HorizontalScrollerVisibility;
    // Field size check
    static_assert(sizeof(::UnityEngine::UIElements::ScrollerVisibility) == 0x4);
    // private UnityEngine.UIElements.ScrollerVisibility m_VerticalScrollerVisibility
    // Size: 0x4
    // Offset: 0x3C8
    ::UnityEngine::UIElements::ScrollerVisibility m_VerticalScrollerVisibility;
    // Field size check
    static_assert(sizeof(::UnityEngine::UIElements::ScrollerVisibility) == 0x4);
    // private UnityEngine.UIElements.VisualElement m_AttachedRootVisualContainer
    // Size: 0x8
    // Offset: 0x3D0
    ::UnityEngine::UIElements::VisualElement* m_AttachedRootVisualContainer;
    // Field size check
    static_assert(sizeof(::UnityEngine::UIElements::VisualElement*) == 0x8);
    // private System.Single m_SingleLineHeight
    // Size: 0x4
    // Offset: 0x3D8
    float m_SingleLineHeight;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // System.Boolean m_MouseWheelScrollSizeIsInline
    // Size: 0x1
    // Offset: 0x3DC
    bool m_MouseWheelScrollSizeIsInline;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Single m_HorizontalPageSize
    // Size: 0x4
    // Offset: 0x3E0
    float m_HorizontalPageSize;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Single m_VerticalPageSize
    // Size: 0x4
    // Offset: 0x3E4
    float m_VerticalPageSize;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Single m_MouseWheelScrollSize
    // Size: 0x4
    // Offset: 0x3E8
    float m_MouseWheelScrollSize;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Single m_ScrollDecelerationRate
    // Size: 0x4
    // Offset: 0x3EC
    float m_ScrollDecelerationRate;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Single m_Elasticity
    // Size: 0x4
    // Offset: 0x3F0
    float m_Elasticity;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private UnityEngine.UIElements.ScrollView/TouchScrollBehavior m_TouchScrollBehavior
    // Size: 0x4
    // Offset: 0x3F4
    ::UnityEngine::UIElements::ScrollView::TouchScrollBehavior m_TouchScrollBehavior;
    // Field size check
    static_assert(sizeof(::UnityEngine::UIElements::ScrollView::TouchScrollBehavior) == 0x4);
    // private UnityEngine.UIElements.ScrollView/NestedInteractionKind m_NestedInteractionKind
    // Size: 0x4
    // Offset: 0x3F8
    ::UnityEngine::UIElements::ScrollView::NestedInteractionKind m_NestedInteractionKind;
    // Field size check
    static_assert(sizeof(::UnityEngine::UIElements::ScrollView::NestedInteractionKind) == 0x4);
    // private readonly UnityEngine.UIElements.VisualElement <contentViewport>k__BackingField
    // Size: 0x8
    // Offset: 0x400
    ::UnityEngine::UIElements::VisualElement* contentViewport;
    // Field size check
    static_assert(sizeof(::UnityEngine::UIElements::VisualElement*) == 0x8);
    // private readonly UnityEngine.UIElements.Scroller <horizontalScroller>k__BackingField
    // Size: 0x8
    // Offset: 0x408
    ::UnityEngine::UIElements::Scroller* horizontalScroller;
    // Field size check
    static_assert(sizeof(::UnityEngine::UIElements::Scroller*) == 0x8);
    // private readonly UnityEngine.UIElements.Scroller <verticalScroller>k__BackingField
    // Size: 0x8
    // Offset: 0x410
    ::UnityEngine::UIElements::Scroller* verticalScroller;
    // Field size check
    static_assert(sizeof(::UnityEngine::UIElements::Scroller*) == 0x8);
    // private UnityEngine.UIElements.VisualElement m_ContentContainer
    // Size: 0x8
    // Offset: 0x418
    ::UnityEngine::UIElements::VisualElement* m_ContentContainer;
    // Field size check
    static_assert(sizeof(::UnityEngine::UIElements::VisualElement*) == 0x8);
    // private UnityEngine.UIElements.VisualElement m_ContentAndVerticalScrollContainer
    // Size: 0x8
    // Offset: 0x420
    ::UnityEngine::UIElements::VisualElement* m_ContentAndVerticalScrollContainer;
    // Field size check
    static_assert(sizeof(::UnityEngine::UIElements::VisualElement*) == 0x8);
    // private UnityEngine.UIElements.ScrollViewMode m_Mode
    // Size: 0x4
    // Offset: 0x428
    ::UnityEngine::UIElements::ScrollViewMode m_Mode;
    // Field size check
    static_assert(sizeof(::UnityEngine::UIElements::ScrollViewMode) == 0x4);
    // private UnityEngine.UIElements.IVisualElementScheduledItem m_ScheduledLayoutPassResetItem
    // Size: 0x8
    // Offset: 0x430
    ::UnityEngine::UIElements::IVisualElementScheduledItem* m_ScheduledLayoutPassResetItem;
    // Field size check
    static_assert(sizeof(::UnityEngine::UIElements::IVisualElementScheduledItem*) == 0x8);
    // private System.Int32 m_ScrollingPointerId
    // Size: 0x4
    // Offset: 0x438
    int m_ScrollingPointerId;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private UnityEngine.Vector2 m_StartPosition
    // Size: 0x8
    // Offset: 0x43C
    ::UnityEngine::Vector2 m_StartPosition;
    // Field size check
    static_assert(sizeof(::UnityEngine::Vector2) == 0x8);
    // private UnityEngine.Vector2 m_PointerStartPosition
    // Size: 0x8
    // Offset: 0x444
    ::UnityEngine::Vector2 m_PointerStartPosition;
    // Field size check
    static_assert(sizeof(::UnityEngine::Vector2) == 0x8);
    // private UnityEngine.Vector2 m_Velocity
    // Size: 0x8
    // Offset: 0x44C
    ::UnityEngine::Vector2 m_Velocity;
    // Field size check
    static_assert(sizeof(::UnityEngine::Vector2) == 0x8);
    // private UnityEngine.Vector2 m_SpringBackVelocity
    // Size: 0x8
    // Offset: 0x454
    ::UnityEngine::Vector2 m_SpringBackVelocity;
    // Field size check
    static_assert(sizeof(::UnityEngine::Vector2) == 0x8);
    // private UnityEngine.Vector2 m_LowBounds
    // Size: 0x8
    // Offset: 0x45C
    ::UnityEngine::Vector2 m_LowBounds;
    // Field size check
    static_assert(sizeof(::UnityEngine::Vector2) == 0x8);
    // private UnityEngine.Vector2 m_HighBounds
    // Size: 0x8
    // Offset: 0x464
    ::UnityEngine::Vector2 m_HighBounds;
    // Field size check
    static_assert(sizeof(::UnityEngine::Vector2) == 0x8);
    // private System.Single m_LastVelocityLerpTime
    // Size: 0x4
    // Offset: 0x46C
    float m_LastVelocityLerpTime;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Boolean m_StartedMoving
    // Size: 0x1
    // Offset: 0x470
    bool m_StartedMoving;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean m_TouchStoppedVelocity
    // Size: 0x1
    // Offset: 0x471
    bool m_TouchStoppedVelocity;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private UnityEngine.UIElements.VisualElement m_CapturedTarget
    // Size: 0x8
    // Offset: 0x478
    ::UnityEngine::UIElements::VisualElement* m_CapturedTarget;
    // Field size check
    static_assert(sizeof(::UnityEngine::UIElements::VisualElement*) == 0x8);
    // private UnityEngine.UIElements.EventCallback`1<UnityEngine.UIElements.PointerMoveEvent> m_CapturedTargetPointerMoveCallback
    // Size: 0x8
    // Offset: 0x480
    ::UnityEngine::UIElements::EventCallback_1<::UnityEngine::UIElements::PointerMoveEvent*>* m_CapturedTargetPointerMoveCallback;
    // Field size check
    static_assert(sizeof(::UnityEngine::UIElements::EventCallback_1<::UnityEngine::UIElements::PointerMoveEvent*>*) == 0x8);
    // private UnityEngine.UIElements.EventCallback`1<UnityEngine.UIElements.PointerUpEvent> m_CapturedTargetPointerUpCallback
    // Size: 0x8
    // Offset: 0x488
    ::UnityEngine::UIElements::EventCallback_1<::UnityEngine::UIElements::PointerUpEvent*>* m_CapturedTargetPointerUpCallback;
    // Field size check
    static_assert(sizeof(::UnityEngine::UIElements::EventCallback_1<::UnityEngine::UIElements::PointerUpEvent*>*) == 0x8);
    // private UnityEngine.UIElements.IVisualElementScheduledItem m_PostPointerUpAnimation
    // Size: 0x8
    // Offset: 0x490
    ::UnityEngine::UIElements::IVisualElementScheduledItem* m_PostPointerUpAnimation;
    // Field size check
    static_assert(sizeof(::UnityEngine::UIElements::IVisualElementScheduledItem*) == 0x8);
    public:
    // Get static field: static private readonly System.Single k_DefaultScrollDecelerationRate
    static float _get_k_DefaultScrollDecelerationRate();
    // Set static field: static private readonly System.Single k_DefaultScrollDecelerationRate
    static void _set_k_DefaultScrollDecelerationRate(float value);
    // Get static field: static private readonly System.Single k_DefaultElasticity
    static float _get_k_DefaultElasticity();
    // Set static field: static private readonly System.Single k_DefaultElasticity
    static void _set_k_DefaultElasticity(float value);
    // Get static field: static public readonly System.String ussClassName
    static ::StringW _get_ussClassName();
    // Set static field: static public readonly System.String ussClassName
    static void _set_ussClassName(::StringW value);
    // Get static field: static public readonly System.String viewportUssClassName
    static ::StringW _get_viewportUssClassName();
    // Set static field: static public readonly System.String viewportUssClassName
    static void _set_viewportUssClassName(::StringW value);
    // Get static field: static public readonly System.String horizontalVariantViewportUssClassName
    static ::StringW _get_horizontalVariantViewportUssClassName();
    // Set static field: static public readonly System.String horizontalVariantViewportUssClassName
    static void _set_horizontalVariantViewportUssClassName(::StringW value);
    // Get static field: static public readonly System.String verticalVariantViewportUssClassName
    static ::StringW _get_verticalVariantViewportUssClassName();
    // Set static field: static public readonly System.String verticalVariantViewportUssClassName
    static void _set_verticalVariantViewportUssClassName(::StringW value);
    // Get static field: static public readonly System.String verticalHorizontalVariantViewportUssClassName
    static ::StringW _get_verticalHorizontalVariantViewportUssClassName();
    // Set static field: static public readonly System.String verticalHorizontalVariantViewportUssClassName
    static void _set_verticalHorizontalVariantViewportUssClassName(::StringW value);
    // Get static field: static public readonly System.String contentAndVerticalScrollUssClassName
    static ::StringW _get_contentAndVerticalScrollUssClassName();
    // Set static field: static public readonly System.String contentAndVerticalScrollUssClassName
    static void _set_contentAndVerticalScrollUssClassName(::StringW value);
    // Get static field: static public readonly System.String contentUssClassName
    static ::StringW _get_contentUssClassName();
    // Set static field: static public readonly System.String contentUssClassName
    static void _set_contentUssClassName(::StringW value);
    // Get static field: static public readonly System.String horizontalVariantContentUssClassName
    static ::StringW _get_horizontalVariantContentUssClassName();
    // Set static field: static public readonly System.String horizontalVariantContentUssClassName
    static void _set_horizontalVariantContentUssClassName(::StringW value);
    // Get static field: static public readonly System.String verticalVariantContentUssClassName
    static ::StringW _get_verticalVariantContentUssClassName();
    // Set static field: static public readonly System.String verticalVariantContentUssClassName
    static void _set_verticalVariantContentUssClassName(::StringW value);
    // Get static field: static public readonly System.String verticalHorizontalVariantContentUssClassName
    static ::StringW _get_verticalHorizontalVariantContentUssClassName();
    // Set static field: static public readonly System.String verticalHorizontalVariantContentUssClassName
    static void _set_verticalHorizontalVariantContentUssClassName(::StringW value);
    // Get static field: static public readonly System.String hScrollerUssClassName
    static ::StringW _get_hScrollerUssClassName();
    // Set static field: static public readonly System.String hScrollerUssClassName
    static void _set_hScrollerUssClassName(::StringW value);
    // Get static field: static public readonly System.String vScrollerUssClassName
    static ::StringW _get_vScrollerUssClassName();
    // Set static field: static public readonly System.String vScrollerUssClassName
    static void _set_vScrollerUssClassName(::StringW value);
    // Get static field: static public readonly System.String horizontalVariantUssClassName
    static ::StringW _get_horizontalVariantUssClassName();
    // Set static field: static public readonly System.String horizontalVariantUssClassName
    static void _set_horizontalVariantUssClassName(::StringW value);
    // Get static field: static public readonly System.String verticalVariantUssClassName
    static ::StringW _get_verticalVariantUssClassName();
    // Set static field: static public readonly System.String verticalVariantUssClassName
    static void _set_verticalVariantUssClassName(::StringW value);
    // Get static field: static public readonly System.String verticalHorizontalVariantUssClassName
    static ::StringW _get_verticalHorizontalVariantUssClassName();
    // Set static field: static public readonly System.String verticalHorizontalVariantUssClassName
    static void _set_verticalHorizontalVariantUssClassName(::StringW value);
    // Get static field: static public readonly System.String scrollVariantUssClassName
    static ::StringW _get_scrollVariantUssClassName();
    // Set static field: static public readonly System.String scrollVariantUssClassName
    static void _set_scrollVariantUssClassName(::StringW value);
    // Get instance field reference: private System.Int32 m_FirstLayoutPass
    [[deprecated("Use field access instead!")]] int& dyn_m_FirstLayoutPass();
    // Get instance field reference: private UnityEngine.UIElements.ScrollerVisibility m_HorizontalScrollerVisibility
    [[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::ScrollerVisibility& dyn_m_HorizontalScrollerVisibility();
    // Get instance field reference: private UnityEngine.UIElements.ScrollerVisibility m_VerticalScrollerVisibility
    [[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::ScrollerVisibility& dyn_m_VerticalScrollerVisibility();
    // Get instance field reference: private UnityEngine.UIElements.VisualElement m_AttachedRootVisualContainer
    [[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::VisualElement*& dyn_m_AttachedRootVisualContainer();
    // Get instance field reference: private System.Single m_SingleLineHeight
    [[deprecated("Use field access instead!")]] float& dyn_m_SingleLineHeight();
    // Get instance field reference: System.Boolean m_MouseWheelScrollSizeIsInline
    [[deprecated("Use field access instead!")]] bool& dyn_m_MouseWheelScrollSizeIsInline();
    // Get instance field reference: private System.Single m_HorizontalPageSize
    [[deprecated("Use field access instead!")]] float& dyn_m_HorizontalPageSize();
    // Get instance field reference: private System.Single m_VerticalPageSize
    [[deprecated("Use field access instead!")]] float& dyn_m_VerticalPageSize();
    // Get instance field reference: private System.Single m_MouseWheelScrollSize
    [[deprecated("Use field access instead!")]] float& dyn_m_MouseWheelScrollSize();
    // Get instance field reference: private System.Single m_ScrollDecelerationRate
    [[deprecated("Use field access instead!")]] float& dyn_m_ScrollDecelerationRate();
    // Get instance field reference: private System.Single m_Elasticity
    [[deprecated("Use field access instead!")]] float& dyn_m_Elasticity();
    // Get instance field reference: private UnityEngine.UIElements.ScrollView/TouchScrollBehavior m_TouchScrollBehavior
    [[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::ScrollView::TouchScrollBehavior& dyn_m_TouchScrollBehavior();
    // Get instance field reference: private UnityEngine.UIElements.ScrollView/NestedInteractionKind m_NestedInteractionKind
    [[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::ScrollView::NestedInteractionKind& dyn_m_NestedInteractionKind();
    // Get instance field reference: private readonly UnityEngine.UIElements.VisualElement <contentViewport>k__BackingField
    [[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::VisualElement*& dyn_$contentViewport$k__BackingField();
    // Get instance field reference: private readonly UnityEngine.UIElements.Scroller <horizontalScroller>k__BackingField
    [[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::Scroller*& dyn_$horizontalScroller$k__BackingField();
    // Get instance field reference: private readonly UnityEngine.UIElements.Scroller <verticalScroller>k__BackingField
    [[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::Scroller*& dyn_$verticalScroller$k__BackingField();
    // Get instance field reference: private UnityEngine.UIElements.VisualElement m_ContentContainer
    [[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::VisualElement*& dyn_m_ContentContainer();
    // Get instance field reference: private UnityEngine.UIElements.VisualElement m_ContentAndVerticalScrollContainer
    [[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::VisualElement*& dyn_m_ContentAndVerticalScrollContainer();
    // Get instance field reference: private UnityEngine.UIElements.ScrollViewMode m_Mode
    [[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::ScrollViewMode& dyn_m_Mode();
    // Get instance field reference: private UnityEngine.UIElements.IVisualElementScheduledItem m_ScheduledLayoutPassResetItem
    [[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::IVisualElementScheduledItem*& dyn_m_ScheduledLayoutPassResetItem();
    // Get instance field reference: private System.Int32 m_ScrollingPointerId
    [[deprecated("Use field access instead!")]] int& dyn_m_ScrollingPointerId();
    // Get instance field reference: private UnityEngine.Vector2 m_StartPosition
    [[deprecated("Use field access instead!")]] ::UnityEngine::Vector2& dyn_m_StartPosition();
    // Get instance field reference: private UnityEngine.Vector2 m_PointerStartPosition
    [[deprecated("Use field access instead!")]] ::UnityEngine::Vector2& dyn_m_PointerStartPosition();
    // Get instance field reference: private UnityEngine.Vector2 m_Velocity
    [[deprecated("Use field access instead!")]] ::UnityEngine::Vector2& dyn_m_Velocity();
    // Get instance field reference: private UnityEngine.Vector2 m_SpringBackVelocity
    [[deprecated("Use field access instead!")]] ::UnityEngine::Vector2& dyn_m_SpringBackVelocity();
    // Get instance field reference: private UnityEngine.Vector2 m_LowBounds
    [[deprecated("Use field access instead!")]] ::UnityEngine::Vector2& dyn_m_LowBounds();
    // Get instance field reference: private UnityEngine.Vector2 m_HighBounds
    [[deprecated("Use field access instead!")]] ::UnityEngine::Vector2& dyn_m_HighBounds();
    // Get instance field reference: private System.Single m_LastVelocityLerpTime
    [[deprecated("Use field access instead!")]] float& dyn_m_LastVelocityLerpTime();
    // Get instance field reference: private System.Boolean m_StartedMoving
    [[deprecated("Use field access instead!")]] bool& dyn_m_StartedMoving();
    // Get instance field reference: private System.Boolean m_TouchStoppedVelocity
    [[deprecated("Use field access instead!")]] bool& dyn_m_TouchStoppedVelocity();
    // Get instance field reference: private UnityEngine.UIElements.VisualElement m_CapturedTarget
    [[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::VisualElement*& dyn_m_CapturedTarget();
    // Get instance field reference: private UnityEngine.UIElements.EventCallback`1<UnityEngine.UIElements.PointerMoveEvent> m_CapturedTargetPointerMoveCallback
    [[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::EventCallback_1<::UnityEngine::UIElements::PointerMoveEvent*>*& dyn_m_CapturedTargetPointerMoveCallback();
    // Get instance field reference: private UnityEngine.UIElements.EventCallback`1<UnityEngine.UIElements.PointerUpEvent> m_CapturedTargetPointerUpCallback
    [[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::EventCallback_1<::UnityEngine::UIElements::PointerUpEvent*>*& dyn_m_CapturedTargetPointerUpCallback();
    // Get instance field reference: private UnityEngine.UIElements.IVisualElementScheduledItem m_PostPointerUpAnimation
    [[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::IVisualElementScheduledItem*& dyn_m_PostPointerUpAnimation();
    // public UnityEngine.UIElements.ScrollerVisibility get_horizontalScrollerVisibility()
    // Offset: 0x5626DDC
    ::UnityEngine::UIElements::ScrollerVisibility get_horizontalScrollerVisibility();
    // public System.Void set_horizontalScrollerVisibility(UnityEngine.UIElements.ScrollerVisibility value)
    // Offset: 0x5626DE4
    void set_horizontalScrollerVisibility(::UnityEngine::UIElements::ScrollerVisibility value);
    // public UnityEngine.UIElements.ScrollerVisibility get_verticalScrollerVisibility()
    // Offset: 0x5627338
    ::UnityEngine::UIElements::ScrollerVisibility get_verticalScrollerVisibility();
    // public System.Void set_verticalScrollerVisibility(UnityEngine.UIElements.ScrollerVisibility value)
    // Offset: 0x5627340
    void set_verticalScrollerVisibility(::UnityEngine::UIElements::ScrollerVisibility value);
    // public System.Void set_showHorizontal(System.Boolean value)
    // Offset: 0x56273E8
    void set_showHorizontal(bool value);
    // public System.Void set_showVertical(System.Boolean value)
    // Offset: 0x5627404
    void set_showVertical(bool value);
    // System.Boolean get_needsHorizontal()
    // Offset: 0x5626E88
    bool get_needsHorizontal();
    // System.Boolean get_needsVertical()
    // Offset: 0x5626ED0
    bool get_needsVertical();
    // System.Boolean get_isVerticalScrollDisplayed()
    // Offset: 0x56274C0
    bool get_isVerticalScrollDisplayed();
    // System.Boolean get_isHorizontalScrollDisplayed()
    // Offset: 0x5627580
    bool get_isHorizontalScrollDisplayed();
    // public UnityEngine.Vector2 get_scrollOffset()
    // Offset: 0x5627640
    ::UnityEngine::Vector2 get_scrollOffset();
    // public System.Void set_scrollOffset(UnityEngine.Vector2 value)
    // Offset: 0x5627688
    void set_scrollOffset(::UnityEngine::Vector2 value);
    // public System.Void set_horizontalPageSize(System.Single value)
    // Offset: 0x5627A30
    void set_horizontalPageSize(float value);
    // public System.Void set_verticalPageSize(System.Single value)
    // Offset: 0x5627C44
    void set_verticalPageSize(float value);
    // public System.Single get_mouseWheelScrollSize()
    // Offset: 0x5627E58
    float get_mouseWheelScrollSize();
    // public System.Void set_mouseWheelScrollSize(System.Single value)
    // Offset: 0x5627E60
    void set_mouseWheelScrollSize(float value);
    // System.Single get_scrollableWidth()
    // Offset: 0x5627420
    float get_scrollableWidth();
    // System.Single get_scrollableHeight()
    // Offset: 0x5627470
    float get_scrollableHeight();
    // private System.Boolean get_hasInertia()
    // Offset: 0x5627EDC
    bool get_hasInertia();
    // public System.Single get_scrollDecelerationRate()
    // Offset: 0x5627EEC
    float get_scrollDecelerationRate();
    // public System.Void set_scrollDecelerationRate(System.Single value)
    // Offset: 0x5627EF4
    void set_scrollDecelerationRate(float value);
    // public System.Single get_elasticity()
    // Offset: 0x5627F04
    float get_elasticity();
    // public System.Void set_elasticity(System.Single value)
    // Offset: 0x5627F0C
    void set_elasticity(float value);
    // public UnityEngine.UIElements.ScrollView/TouchScrollBehavior get_touchScrollBehavior()
    // Offset: 0x5627F1C
    ::UnityEngine::UIElements::ScrollView::TouchScrollBehavior get_touchScrollBehavior();
    // public System.Void set_touchScrollBehavior(UnityEngine.UIElements.ScrollView/TouchScrollBehavior value)
    // Offset: 0x5627F24
    void set_touchScrollBehavior(::UnityEngine::UIElements::ScrollView::TouchScrollBehavior value);
    // public UnityEngine.UIElements.ScrollView/NestedInteractionKind get_nestedInteractionKind()
    // Offset: 0x5627FBC
    ::UnityEngine::UIElements::ScrollView::NestedInteractionKind get_nestedInteractionKind();
    // public System.Void set_nestedInteractionKind(UnityEngine.UIElements.ScrollView/NestedInteractionKind value)
    // Offset: 0x5627FC4
    void set_nestedInteractionKind(::UnityEngine::UIElements::ScrollView::NestedInteractionKind value);
    // private System.Void OnHorizontalScrollDragElementChanged(UnityEngine.UIElements.GeometryChangedEvent evt)
    // Offset: 0x5627FCC
    void OnHorizontalScrollDragElementChanged(::UnityEngine::UIElements::GeometryChangedEvent* evt);
    // private System.Void OnVerticalScrollDragElementChanged(UnityEngine.UIElements.GeometryChangedEvent evt)
    // Offset: 0x562800C
    void OnVerticalScrollDragElementChanged(::UnityEngine::UIElements::GeometryChangedEvent* evt);
    // private System.Void UpdateHorizontalSliderPageSize()
    // Offset: 0x5627A38
    void UpdateHorizontalSliderPageSize();
    // private System.Void UpdateVerticalSliderPageSize()
    // Offset: 0x5627C4C
    void UpdateVerticalSliderPageSize();
    // System.Void UpdateContentViewTransform()
    // Offset: 0x56277B8
    void UpdateContentViewTransform();
    // public System.Void ScrollTo(UnityEngine.UIElements.VisualElement child)
    // Offset: 0x562804C
    void ScrollTo(::UnityEngine::UIElements::VisualElement* child);
    // private System.Single GetXDeltaOffset(UnityEngine.UIElements.VisualElement child)
    // Offset: 0x56283C0
    float GetXDeltaOffset(::UnityEngine::UIElements::VisualElement* child);
    // private System.Single GetYDeltaOffset(UnityEngine.UIElements.VisualElement child)
    // Offset: 0x5628208
    float GetYDeltaOffset(::UnityEngine::UIElements::VisualElement* child);
    // private System.Single GetDeltaDistance(System.Single viewMin, System.Single viewMax, System.Single childBoundaryMin, System.Single childBoundaryMax)
    // Offset: 0x5628578
    float GetDeltaDistance(float viewMin, float viewMax, float childBoundaryMin, float childBoundaryMax);
    // public UnityEngine.UIElements.VisualElement get_contentViewport()
    // Offset: 0x56285C8
    ::UnityEngine::UIElements::VisualElement* get_contentViewport();
    // public UnityEngine.UIElements.Scroller get_horizontalScroller()
    // Offset: 0x56285D0
    ::UnityEngine::UIElements::Scroller* get_horizontalScroller();
    // public UnityEngine.UIElements.Scroller get_verticalScroller()
    // Offset: 0x56285D8
    ::UnityEngine::UIElements::Scroller* get_verticalScroller();
    // public System.Void .ctor(UnityEngine.UIElements.ScrollViewMode scrollViewMode)
    // Offset: 0x56285F0
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static ScrollView* New_ctor(::UnityEngine::UIElements::ScrollViewMode scrollViewMode) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::ScrollView::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<ScrollView*, creationType>(scrollViewMode)));
    }
    // public UnityEngine.UIElements.ScrollViewMode get_mode()
    // Offset: 0x56293B0
    ::UnityEngine::UIElements::ScrollViewMode get_mode();
    // public System.Void set_mode(UnityEngine.UIElements.ScrollViewMode value)
    // Offset: 0x56293B8
    void set_mode(::UnityEngine::UIElements::ScrollViewMode value);
    // private System.Void SetScrollViewMode(UnityEngine.UIElements.ScrollViewMode mode)
    // Offset: 0x5629070
    void SetScrollViewMode(::UnityEngine::UIElements::ScrollViewMode mode);
    // private System.Void OnAttachToPanel(UnityEngine.UIElements.AttachToPanelEvent evt)
    // Offset: 0x56293CC
    void OnAttachToPanel(::UnityEngine::UIElements::AttachToPanelEvent* evt);
    // private System.Void OnDetachFromPanel(UnityEngine.UIElements.DetachFromPanelEvent evt)
    // Offset: 0x562997C
    void OnDetachFromPanel(::UnityEngine::UIElements::DetachFromPanelEvent* evt);
    // private System.Void OnPointerCapture(UnityEngine.UIElements.PointerCaptureEvent evt)
    // Offset: 0x5629E54
    void OnPointerCapture(::UnityEngine::UIElements::PointerCaptureEvent* evt);
    // private System.Void OnPointerCaptureOut(UnityEngine.UIElements.PointerCaptureOutEvent evt)
    // Offset: 0x5629FA4
    void OnPointerCaptureOut(::UnityEngine::UIElements::PointerCaptureOutEvent* evt);
    // private System.Void OnGeometryChanged(UnityEngine.UIElements.GeometryChangedEvent evt)
    // Offset: 0x562A18C
    void OnGeometryChanged(::UnityEngine::UIElements::GeometryChangedEvent* evt);
    // private System.Void ScheduleResetLayoutPass()
    // Offset: 0x562A2E0
    void ScheduleResetLayoutPass();
    // private System.Void ResetLayoutPass()
    // Offset: 0x5629E48
    void ResetLayoutPass();
    // static private System.Single ComputeElasticOffset(System.Single deltaPointer, System.Single initialScrollOffset, System.Single lowLimit, System.Single hardLowLimit, System.Single highLimit, System.Single hardHighLimit)
    // Offset: 0x562A4DC
    static float ComputeElasticOffset(float deltaPointer, float initialScrollOffset, float lowLimit, float hardLowLimit, float highLimit, float hardHighLimit);
    // private System.Void ComputeInitialSpringBackVelocity()
    // Offset: 0x562A5D0
    void ComputeInitialSpringBackVelocity();
    // private System.Void SpringBack()
    // Offset: 0x562A6C8
    void SpringBack();
    // System.Void ApplyScrollInertia()
    // Offset: 0x562A850
    void ApplyScrollInertia();
    // private System.Void PostPointerUpAnimation()
    // Offset: 0x562AA20
    void PostPointerUpAnimation();
    // private System.Void OnPointerDown(UnityEngine.UIElements.PointerDownEvent evt)
    // Offset: 0x562AB70
    void OnPointerDown(::UnityEngine::UIElements::PointerDownEvent* evt);
    // private System.Void OnPointerMove(UnityEngine.UIElements.PointerMoveEvent evt)
    // Offset: 0x562AEF4
    void OnPointerMove(::UnityEngine::UIElements::PointerMoveEvent* evt);
    // private System.Void OnPointerCancel(UnityEngine.UIElements.PointerCancelEvent evt)
    // Offset: 0x562B4D8
    void OnPointerCancel(::UnityEngine::UIElements::PointerCancelEvent* evt);
    // private System.Void OnPointerUp(UnityEngine.UIElements.PointerUpEvent evt)
    // Offset: 0x562B538
    void OnPointerUp(::UnityEngine::UIElements::PointerUpEvent* evt);
    // System.Void InitTouchScrolling(UnityEngine.Vector2 position)
    // Offset: 0x562ADA8
    void InitTouchScrolling(::UnityEngine::Vector2 position);
    // UnityEngine.UIElements.ScrollView/TouchScrollingResult ComputeTouchScrolling(UnityEngine.Vector2 position)
    // Offset: 0x562B0F4
    ::UnityEngine::UIElements::ScrollView::TouchScrollingResult ComputeTouchScrolling(::UnityEngine::Vector2 position);
    // private System.Boolean ApplyTouchScrolling(UnityEngine.Vector2 newScrollOffset)
    // Offset: 0x562B5E0
    bool ApplyTouchScrolling(::UnityEngine::Vector2 newScrollOffset);
    // private System.Boolean ReleaseScrolling(System.Int32 pointerId, UnityEngine.UIElements.IEventHandler target)
    // Offset: 0x562A07C
    bool ReleaseScrolling(int pointerId, ::UnityEngine::UIElements::IEventHandler* target);
    // private System.Void ExecuteElasticSpringAnimation()
    // Offset: 0x562B808
    void ExecuteElasticSpringAnimation();
    // private System.Void AdjustScrollers()
    // Offset: 0x562BA10
    void AdjustScrollers();
    // System.Void UpdateScrollers(System.Boolean displayHorizontal, System.Boolean displayVertical)
    // Offset: 0x5626F1C
    void UpdateScrollers(bool displayHorizontal, bool displayVertical);
    // private System.Void OnScrollersGeometryChanged(UnityEngine.UIElements.GeometryChangedEvent evt)
    // Offset: 0x562BB1C
    void OnScrollersGeometryChanged(::UnityEngine::UIElements::GeometryChangedEvent* evt);
    // private System.Void OnScrollWheel(UnityEngine.UIElements.WheelEvent evt)
    // Offset: 0x562BC90
    void OnScrollWheel(::UnityEngine::UIElements::WheelEvent* evt);
    // private System.Void OnRootCustomStyleResolved(UnityEngine.UIElements.CustomStyleResolvedEvent evt)
    // Offset: 0x562C0D0
    void OnRootCustomStyleResolved(::UnityEngine::UIElements::CustomStyleResolvedEvent* evt);
    // private System.Void ReadSingleLineHeight()
    // Offset: 0x5629870
    void ReadSingleLineHeight();
    // private System.Void <.ctor>b__115_0(System.Single value)
    // Offset: 0x562C4E4
    void $_ctor$b__115_0(float value);
    // private System.Void <.ctor>b__115_1(System.Single value)
    // Offset: 0x562C514
    void $_ctor$b__115_1(float value);
    // public override UnityEngine.UIElements.VisualElement get_contentContainer()
    // Offset: 0x56285E0
    // Implemented from: UnityEngine.UIElements.VisualElement
    // Base method: UnityEngine.UIElements.VisualElement VisualElement::get_contentContainer()
    ::UnityEngine::UIElements::VisualElement* get_contentContainer();
    // public System.Void .ctor()
    // Offset: 0x56285E8
    // Implemented from: UnityEngine.UIElements.VisualElement
    // Base method: System.Void VisualElement::.ctor()
    // Base method: System.Void Focusable::.ctor()
    // Base method: System.Void CallbackEventHandler::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static ScrollView* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::ScrollView::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<ScrollView*, creationType>()));
    }
    // static private System.Void .cctor()
    // Offset: 0x562C0D4
    // Implemented from: UnityEngine.UIElements.VisualElement
    // Base method: System.Void VisualElement::.cctor()
    static void _cctor();
  }; // UnityEngine.UIElements.ScrollView
  // WARNING Not writing size check since size may be invalid!
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::UIElements::ScrollView::NestedInteractionKind, "UnityEngine.UIElements", "ScrollView/NestedInteractionKind");
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::UIElements::ScrollView::TouchScrollBehavior, "UnityEngine.UIElements", "ScrollView/TouchScrollBehavior");
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::UIElements::ScrollView::get_horizontalScrollerVisibility
// Il2CppName: get_horizontalScrollerVisibility
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::ScrollerVisibility (UnityEngine::UIElements::ScrollView::*)()>(&UnityEngine::UIElements::ScrollView::get_horizontalScrollerVisibility)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::ScrollView*), "get_horizontalScrollerVisibility", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::ScrollView::set_horizontalScrollerVisibility
// Il2CppName: set_horizontalScrollerVisibility
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::ScrollView::*)(::UnityEngine::UIElements::ScrollerVisibility)>(&UnityEngine::UIElements::ScrollView::set_horizontalScrollerVisibility)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "ScrollerVisibility")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::ScrollView*), "set_horizontalScrollerVisibility", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::ScrollView::get_verticalScrollerVisibility
// Il2CppName: get_verticalScrollerVisibility
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::ScrollerVisibility (UnityEngine::UIElements::ScrollView::*)()>(&UnityEngine::UIElements::ScrollView::get_verticalScrollerVisibility)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::ScrollView*), "get_verticalScrollerVisibility", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::ScrollView::set_verticalScrollerVisibility
// Il2CppName: set_verticalScrollerVisibility
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::ScrollView::*)(::UnityEngine::UIElements::ScrollerVisibility)>(&UnityEngine::UIElements::ScrollView::set_verticalScrollerVisibility)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "ScrollerVisibility")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::ScrollView*), "set_verticalScrollerVisibility", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::ScrollView::set_showHorizontal
// Il2CppName: set_showHorizontal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::ScrollView::*)(bool)>(&UnityEngine::UIElements::ScrollView::set_showHorizontal)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::ScrollView*), "set_showHorizontal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::ScrollView::set_showVertical
// Il2CppName: set_showVertical
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::ScrollView::*)(bool)>(&UnityEngine::UIElements::ScrollView::set_showVertical)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::ScrollView*), "set_showVertical", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::ScrollView::get_needsHorizontal
// Il2CppName: get_needsHorizontal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::ScrollView::*)()>(&UnityEngine::UIElements::ScrollView::get_needsHorizontal)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::ScrollView*), "get_needsHorizontal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::ScrollView::get_needsVertical
// Il2CppName: get_needsVertical
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::ScrollView::*)()>(&UnityEngine::UIElements::ScrollView::get_needsVertical)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::ScrollView*), "get_needsVertical", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::ScrollView::get_isVerticalScrollDisplayed
// Il2CppName: get_isVerticalScrollDisplayed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::ScrollView::*)()>(&UnityEngine::UIElements::ScrollView::get_isVerticalScrollDisplayed)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::ScrollView*), "get_isVerticalScrollDisplayed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::ScrollView::get_isHorizontalScrollDisplayed
// Il2CppName: get_isHorizontalScrollDisplayed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::ScrollView::*)()>(&UnityEngine::UIElements::ScrollView::get_isHorizontalScrollDisplayed)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::ScrollView*), "get_isHorizontalScrollDisplayed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::ScrollView::get_scrollOffset
// Il2CppName: get_scrollOffset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector2 (UnityEngine::UIElements::ScrollView::*)()>(&UnityEngine::UIElements::ScrollView::get_scrollOffset)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::ScrollView*), "get_scrollOffset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::ScrollView::set_scrollOffset
// Il2CppName: set_scrollOffset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::ScrollView::*)(::UnityEngine::Vector2)>(&UnityEngine::UIElements::ScrollView::set_scrollOffset)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector2")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::ScrollView*), "set_scrollOffset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::ScrollView::set_horizontalPageSize
// Il2CppName: set_horizontalPageSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::ScrollView::*)(float)>(&UnityEngine::UIElements::ScrollView::set_horizontalPageSize)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::ScrollView*), "set_horizontalPageSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::ScrollView::set_verticalPageSize
// Il2CppName: set_verticalPageSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::ScrollView::*)(float)>(&UnityEngine::UIElements::ScrollView::set_verticalPageSize)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::ScrollView*), "set_verticalPageSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::ScrollView::get_mouseWheelScrollSize
// Il2CppName: get_mouseWheelScrollSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::UIElements::ScrollView::*)()>(&UnityEngine::UIElements::ScrollView::get_mouseWheelScrollSize)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::ScrollView*), "get_mouseWheelScrollSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::ScrollView::set_mouseWheelScrollSize
// Il2CppName: set_mouseWheelScrollSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::ScrollView::*)(float)>(&UnityEngine::UIElements::ScrollView::set_mouseWheelScrollSize)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::ScrollView*), "set_mouseWheelScrollSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::ScrollView::get_scrollableWidth
// Il2CppName: get_scrollableWidth
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::UIElements::ScrollView::*)()>(&UnityEngine::UIElements::ScrollView::get_scrollableWidth)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::ScrollView*), "get_scrollableWidth", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::ScrollView::get_scrollableHeight
// Il2CppName: get_scrollableHeight
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::UIElements::ScrollView::*)()>(&UnityEngine::UIElements::ScrollView::get_scrollableHeight)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::ScrollView*), "get_scrollableHeight", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::ScrollView::get_hasInertia
// Il2CppName: get_hasInertia
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::ScrollView::*)()>(&UnityEngine::UIElements::ScrollView::get_hasInertia)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::ScrollView*), "get_hasInertia", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::ScrollView::get_scrollDecelerationRate
// Il2CppName: get_scrollDecelerationRate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::UIElements::ScrollView::*)()>(&UnityEngine::UIElements::ScrollView::get_scrollDecelerationRate)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::ScrollView*), "get_scrollDecelerationRate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::ScrollView::set_scrollDecelerationRate
// Il2CppName: set_scrollDecelerationRate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::ScrollView::*)(float)>(&UnityEngine::UIElements::ScrollView::set_scrollDecelerationRate)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::ScrollView*), "set_scrollDecelerationRate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::ScrollView::get_elasticity
// Il2CppName: get_elasticity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::UIElements::ScrollView::*)()>(&UnityEngine::UIElements::ScrollView::get_elasticity)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::ScrollView*), "get_elasticity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::ScrollView::set_elasticity
// Il2CppName: set_elasticity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::ScrollView::*)(float)>(&UnityEngine::UIElements::ScrollView::set_elasticity)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::ScrollView*), "set_elasticity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::ScrollView::get_touchScrollBehavior
// Il2CppName: get_touchScrollBehavior
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::ScrollView::TouchScrollBehavior (UnityEngine::UIElements::ScrollView::*)()>(&UnityEngine::UIElements::ScrollView::get_touchScrollBehavior)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::ScrollView*), "get_touchScrollBehavior", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::ScrollView::set_touchScrollBehavior
// Il2CppName: set_touchScrollBehavior
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::ScrollView::*)(::UnityEngine::UIElements::ScrollView::TouchScrollBehavior)>(&UnityEngine::UIElements::ScrollView::set_touchScrollBehavior)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "ScrollView/TouchScrollBehavior")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::ScrollView*), "set_touchScrollBehavior", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::ScrollView::get_nestedInteractionKind
// Il2CppName: get_nestedInteractionKind
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::ScrollView::NestedInteractionKind (UnityEngine::UIElements::ScrollView::*)()>(&UnityEngine::UIElements::ScrollView::get_nestedInteractionKind)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::ScrollView*), "get_nestedInteractionKind", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::ScrollView::set_nestedInteractionKind
// Il2CppName: set_nestedInteractionKind
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::ScrollView::*)(::UnityEngine::UIElements::ScrollView::NestedInteractionKind)>(&UnityEngine::UIElements::ScrollView::set_nestedInteractionKind)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "ScrollView/NestedInteractionKind")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::ScrollView*), "set_nestedInteractionKind", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::ScrollView::OnHorizontalScrollDragElementChanged
// Il2CppName: OnHorizontalScrollDragElementChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::ScrollView::*)(::UnityEngine::UIElements::GeometryChangedEvent*)>(&UnityEngine::UIElements::ScrollView::OnHorizontalScrollDragElementChanged)> {
  static const MethodInfo* get() {
    static auto* evt = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "GeometryChangedEvent")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::ScrollView*), "OnHorizontalScrollDragElementChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{evt});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::ScrollView::OnVerticalScrollDragElementChanged
// Il2CppName: OnVerticalScrollDragElementChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::ScrollView::*)(::UnityEngine::UIElements::GeometryChangedEvent*)>(&UnityEngine::UIElements::ScrollView::OnVerticalScrollDragElementChanged)> {
  static const MethodInfo* get() {
    static auto* evt = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "GeometryChangedEvent")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::ScrollView*), "OnVerticalScrollDragElementChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{evt});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::ScrollView::UpdateHorizontalSliderPageSize
// Il2CppName: UpdateHorizontalSliderPageSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::ScrollView::*)()>(&UnityEngine::UIElements::ScrollView::UpdateHorizontalSliderPageSize)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::ScrollView*), "UpdateHorizontalSliderPageSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::ScrollView::UpdateVerticalSliderPageSize
// Il2CppName: UpdateVerticalSliderPageSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::ScrollView::*)()>(&UnityEngine::UIElements::ScrollView::UpdateVerticalSliderPageSize)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::ScrollView*), "UpdateVerticalSliderPageSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::ScrollView::UpdateContentViewTransform
// Il2CppName: UpdateContentViewTransform
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::ScrollView::*)()>(&UnityEngine::UIElements::ScrollView::UpdateContentViewTransform)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::ScrollView*), "UpdateContentViewTransform", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::ScrollView::ScrollTo
// Il2CppName: ScrollTo
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::ScrollView::*)(::UnityEngine::UIElements::VisualElement*)>(&UnityEngine::UIElements::ScrollView::ScrollTo)> {
  static const MethodInfo* get() {
    static auto* child = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "VisualElement")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::ScrollView*), "ScrollTo", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{child});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::ScrollView::GetXDeltaOffset
// Il2CppName: GetXDeltaOffset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::UIElements::ScrollView::*)(::UnityEngine::UIElements::VisualElement*)>(&UnityEngine::UIElements::ScrollView::GetXDeltaOffset)> {
  static const MethodInfo* get() {
    static auto* child = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "VisualElement")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::ScrollView*), "GetXDeltaOffset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{child});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::ScrollView::GetYDeltaOffset
// Il2CppName: GetYDeltaOffset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::UIElements::ScrollView::*)(::UnityEngine::UIElements::VisualElement*)>(&UnityEngine::UIElements::ScrollView::GetYDeltaOffset)> {
  static const MethodInfo* get() {
    static auto* child = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "VisualElement")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::ScrollView*), "GetYDeltaOffset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{child});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::ScrollView::GetDeltaDistance
// Il2CppName: GetDeltaDistance
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::UIElements::ScrollView::*)(float, float, float, float)>(&UnityEngine::UIElements::ScrollView::GetDeltaDistance)> {
  static const MethodInfo* get() {
    static auto* viewMin = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* viewMax = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* childBoundaryMin = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* childBoundaryMax = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::ScrollView*), "GetDeltaDistance", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{viewMin, viewMax, childBoundaryMin, childBoundaryMax});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::ScrollView::get_contentViewport
// Il2CppName: get_contentViewport
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::VisualElement* (UnityEngine::UIElements::ScrollView::*)()>(&UnityEngine::UIElements::ScrollView::get_contentViewport)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::ScrollView*), "get_contentViewport", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::ScrollView::get_horizontalScroller
// Il2CppName: get_horizontalScroller
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::Scroller* (UnityEngine::UIElements::ScrollView::*)()>(&UnityEngine::UIElements::ScrollView::get_horizontalScroller)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::ScrollView*), "get_horizontalScroller", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::ScrollView::get_verticalScroller
// Il2CppName: get_verticalScroller
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::Scroller* (UnityEngine::UIElements::ScrollView::*)()>(&UnityEngine::UIElements::ScrollView::get_verticalScroller)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::ScrollView*), "get_verticalScroller", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::ScrollView::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::UIElements::ScrollView::get_mode
// Il2CppName: get_mode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::ScrollViewMode (UnityEngine::UIElements::ScrollView::*)()>(&UnityEngine::UIElements::ScrollView::get_mode)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::ScrollView*), "get_mode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::ScrollView::set_mode
// Il2CppName: set_mode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::ScrollView::*)(::UnityEngine::UIElements::ScrollViewMode)>(&UnityEngine::UIElements::ScrollView::set_mode)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "ScrollViewMode")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::ScrollView*), "set_mode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::ScrollView::SetScrollViewMode
// Il2CppName: SetScrollViewMode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::ScrollView::*)(::UnityEngine::UIElements::ScrollViewMode)>(&UnityEngine::UIElements::ScrollView::SetScrollViewMode)> {
  static const MethodInfo* get() {
    static auto* mode = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "ScrollViewMode")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::ScrollView*), "SetScrollViewMode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{mode});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::ScrollView::OnAttachToPanel
// Il2CppName: OnAttachToPanel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::ScrollView::*)(::UnityEngine::UIElements::AttachToPanelEvent*)>(&UnityEngine::UIElements::ScrollView::OnAttachToPanel)> {
  static const MethodInfo* get() {
    static auto* evt = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "AttachToPanelEvent")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::ScrollView*), "OnAttachToPanel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{evt});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::ScrollView::OnDetachFromPanel
// Il2CppName: OnDetachFromPanel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::ScrollView::*)(::UnityEngine::UIElements::DetachFromPanelEvent*)>(&UnityEngine::UIElements::ScrollView::OnDetachFromPanel)> {
  static const MethodInfo* get() {
    static auto* evt = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "DetachFromPanelEvent")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::ScrollView*), "OnDetachFromPanel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{evt});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::ScrollView::OnPointerCapture
// Il2CppName: OnPointerCapture
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::ScrollView::*)(::UnityEngine::UIElements::PointerCaptureEvent*)>(&UnityEngine::UIElements::ScrollView::OnPointerCapture)> {
  static const MethodInfo* get() {
    static auto* evt = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "PointerCaptureEvent")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::ScrollView*), "OnPointerCapture", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{evt});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::ScrollView::OnPointerCaptureOut
// Il2CppName: OnPointerCaptureOut
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::ScrollView::*)(::UnityEngine::UIElements::PointerCaptureOutEvent*)>(&UnityEngine::UIElements::ScrollView::OnPointerCaptureOut)> {
  static const MethodInfo* get() {
    static auto* evt = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "PointerCaptureOutEvent")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::ScrollView*), "OnPointerCaptureOut", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{evt});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::ScrollView::OnGeometryChanged
// Il2CppName: OnGeometryChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::ScrollView::*)(::UnityEngine::UIElements::GeometryChangedEvent*)>(&UnityEngine::UIElements::ScrollView::OnGeometryChanged)> {
  static const MethodInfo* get() {
    static auto* evt = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "GeometryChangedEvent")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::ScrollView*), "OnGeometryChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{evt});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::ScrollView::ScheduleResetLayoutPass
// Il2CppName: ScheduleResetLayoutPass
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::ScrollView::*)()>(&UnityEngine::UIElements::ScrollView::ScheduleResetLayoutPass)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::ScrollView*), "ScheduleResetLayoutPass", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::ScrollView::ResetLayoutPass
// Il2CppName: ResetLayoutPass
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::ScrollView::*)()>(&UnityEngine::UIElements::ScrollView::ResetLayoutPass)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::ScrollView*), "ResetLayoutPass", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::ScrollView::ComputeElasticOffset
// Il2CppName: ComputeElasticOffset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (*)(float, float, float, float, float, float)>(&UnityEngine::UIElements::ScrollView::ComputeElasticOffset)> {
  static const MethodInfo* get() {
    static auto* deltaPointer = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* initialScrollOffset = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* lowLimit = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* hardLowLimit = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* highLimit = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* hardHighLimit = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::ScrollView*), "ComputeElasticOffset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{deltaPointer, initialScrollOffset, lowLimit, hardLowLimit, highLimit, hardHighLimit});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::ScrollView::ComputeInitialSpringBackVelocity
// Il2CppName: ComputeInitialSpringBackVelocity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::ScrollView::*)()>(&UnityEngine::UIElements::ScrollView::ComputeInitialSpringBackVelocity)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::ScrollView*), "ComputeInitialSpringBackVelocity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::ScrollView::SpringBack
// Il2CppName: SpringBack
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::ScrollView::*)()>(&UnityEngine::UIElements::ScrollView::SpringBack)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::ScrollView*), "SpringBack", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::ScrollView::ApplyScrollInertia
// Il2CppName: ApplyScrollInertia
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::ScrollView::*)()>(&UnityEngine::UIElements::ScrollView::ApplyScrollInertia)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::ScrollView*), "ApplyScrollInertia", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::ScrollView::PostPointerUpAnimation
// Il2CppName: PostPointerUpAnimation
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::ScrollView::*)()>(&UnityEngine::UIElements::ScrollView::PostPointerUpAnimation)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::ScrollView*), "PostPointerUpAnimation", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::ScrollView::OnPointerDown
// Il2CppName: OnPointerDown
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::ScrollView::*)(::UnityEngine::UIElements::PointerDownEvent*)>(&UnityEngine::UIElements::ScrollView::OnPointerDown)> {
  static const MethodInfo* get() {
    static auto* evt = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "PointerDownEvent")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::ScrollView*), "OnPointerDown", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{evt});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::ScrollView::OnPointerMove
// Il2CppName: OnPointerMove
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::ScrollView::*)(::UnityEngine::UIElements::PointerMoveEvent*)>(&UnityEngine::UIElements::ScrollView::OnPointerMove)> {
  static const MethodInfo* get() {
    static auto* evt = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "PointerMoveEvent")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::ScrollView*), "OnPointerMove", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{evt});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::ScrollView::OnPointerCancel
// Il2CppName: OnPointerCancel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::ScrollView::*)(::UnityEngine::UIElements::PointerCancelEvent*)>(&UnityEngine::UIElements::ScrollView::OnPointerCancel)> {
  static const MethodInfo* get() {
    static auto* evt = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "PointerCancelEvent")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::ScrollView*), "OnPointerCancel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{evt});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::ScrollView::OnPointerUp
// Il2CppName: OnPointerUp
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::ScrollView::*)(::UnityEngine::UIElements::PointerUpEvent*)>(&UnityEngine::UIElements::ScrollView::OnPointerUp)> {
  static const MethodInfo* get() {
    static auto* evt = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "PointerUpEvent")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::ScrollView*), "OnPointerUp", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{evt});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::ScrollView::InitTouchScrolling
// Il2CppName: InitTouchScrolling
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::ScrollView::*)(::UnityEngine::Vector2)>(&UnityEngine::UIElements::ScrollView::InitTouchScrolling)> {
  static const MethodInfo* get() {
    static auto* position = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector2")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::ScrollView*), "InitTouchScrolling", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{position});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::ScrollView::ComputeTouchScrolling
// Il2CppName: ComputeTouchScrolling
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::ScrollView::TouchScrollingResult (UnityEngine::UIElements::ScrollView::*)(::UnityEngine::Vector2)>(&UnityEngine::UIElements::ScrollView::ComputeTouchScrolling)> {
  static const MethodInfo* get() {
    static auto* position = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector2")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::ScrollView*), "ComputeTouchScrolling", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{position});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::ScrollView::ApplyTouchScrolling
// Il2CppName: ApplyTouchScrolling
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::ScrollView::*)(::UnityEngine::Vector2)>(&UnityEngine::UIElements::ScrollView::ApplyTouchScrolling)> {
  static const MethodInfo* get() {
    static auto* newScrollOffset = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector2")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::ScrollView*), "ApplyTouchScrolling", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{newScrollOffset});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::ScrollView::ReleaseScrolling
// Il2CppName: ReleaseScrolling
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::ScrollView::*)(int, ::UnityEngine::UIElements::IEventHandler*)>(&UnityEngine::UIElements::ScrollView::ReleaseScrolling)> {
  static const MethodInfo* get() {
    static auto* pointerId = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* target = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "IEventHandler")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::ScrollView*), "ReleaseScrolling", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{pointerId, target});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::ScrollView::ExecuteElasticSpringAnimation
// Il2CppName: ExecuteElasticSpringAnimation
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::ScrollView::*)()>(&UnityEngine::UIElements::ScrollView::ExecuteElasticSpringAnimation)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::ScrollView*), "ExecuteElasticSpringAnimation", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::ScrollView::AdjustScrollers
// Il2CppName: AdjustScrollers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::ScrollView::*)()>(&UnityEngine::UIElements::ScrollView::AdjustScrollers)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::ScrollView*), "AdjustScrollers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::ScrollView::UpdateScrollers
// Il2CppName: UpdateScrollers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::ScrollView::*)(bool, bool)>(&UnityEngine::UIElements::ScrollView::UpdateScrollers)> {
  static const MethodInfo* get() {
    static auto* displayHorizontal = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* displayVertical = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::ScrollView*), "UpdateScrollers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{displayHorizontal, displayVertical});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::ScrollView::OnScrollersGeometryChanged
// Il2CppName: OnScrollersGeometryChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::ScrollView::*)(::UnityEngine::UIElements::GeometryChangedEvent*)>(&UnityEngine::UIElements::ScrollView::OnScrollersGeometryChanged)> {
  static const MethodInfo* get() {
    static auto* evt = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "GeometryChangedEvent")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::ScrollView*), "OnScrollersGeometryChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{evt});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::ScrollView::OnScrollWheel
// Il2CppName: OnScrollWheel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::ScrollView::*)(::UnityEngine::UIElements::WheelEvent*)>(&UnityEngine::UIElements::ScrollView::OnScrollWheel)> {
  static const MethodInfo* get() {
    static auto* evt = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "WheelEvent")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::ScrollView*), "OnScrollWheel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{evt});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::ScrollView::OnRootCustomStyleResolved
// Il2CppName: OnRootCustomStyleResolved
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::ScrollView::*)(::UnityEngine::UIElements::CustomStyleResolvedEvent*)>(&UnityEngine::UIElements::ScrollView::OnRootCustomStyleResolved)> {
  static const MethodInfo* get() {
    static auto* evt = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "CustomStyleResolvedEvent")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::ScrollView*), "OnRootCustomStyleResolved", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{evt});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::ScrollView::ReadSingleLineHeight
// Il2CppName: ReadSingleLineHeight
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::ScrollView::*)()>(&UnityEngine::UIElements::ScrollView::ReadSingleLineHeight)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::ScrollView*), "ReadSingleLineHeight", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::ScrollView::$_ctor$b__115_0
// Il2CppName: <.ctor>b__115_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::ScrollView::*)(float)>(&UnityEngine::UIElements::ScrollView::$_ctor$b__115_0)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::ScrollView*), "<.ctor>b__115_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::ScrollView::$_ctor$b__115_1
// Il2CppName: <.ctor>b__115_1
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::ScrollView::*)(float)>(&UnityEngine::UIElements::ScrollView::$_ctor$b__115_1)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::ScrollView*), "<.ctor>b__115_1", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::ScrollView::get_contentContainer
// Il2CppName: get_contentContainer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::VisualElement* (UnityEngine::UIElements::ScrollView::*)()>(&UnityEngine::UIElements::ScrollView::get_contentContainer)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::ScrollView*), "get_contentContainer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::ScrollView::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::UIElements::ScrollView::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&UnityEngine::UIElements::ScrollView::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::ScrollView*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
