// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.IDisposable
#include "System/IDisposable.hpp"
// Including type: UnityEngine.UIElements.UIR.NudgeJobData
#include "UnityEngine/UIElements/UIR/NudgeJobData.hpp"
// Including type: UnityEngine.UIElements.UIR.ConvertMeshJobData
#include "UnityEngine/UIElements/UIR/ConvertMeshJobData.hpp"
// Including type: UnityEngine.UIElements.UIR.CopyClosingMeshJobData
#include "UnityEngine/UIElements/UIR/CopyClosingMeshJobData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::UIElements::UIR
namespace UnityEngine::UIElements::UIR {
  // Forward declaring type: NativePagedList`1<T>
  template<typename T>
  class NativePagedList_1;
  // Forward declaring type: JobMerger
  class JobMerger;
}
// Completed forward declares
// Type namespace: UnityEngine.UIElements.UIR
namespace UnityEngine::UIElements::UIR {
  // Forward declaring type: JobManager
  class JobManager;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::UIElements::UIR::JobManager);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::UIElements::UIR::JobManager*, "UnityEngine.UIElements.UIR", "JobManager");
// Type namespace: UnityEngine.UIElements.UIR
namespace UnityEngine::UIElements::UIR {
  // Size: 0x31
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.UIElements.UIR.JobManager
  // [TokenAttribute] Offset: FFFFFFFF
  class JobManager : public ::Il2CppObject/*, public ::System::IDisposable*/ {
    public:
    public:
    // private UnityEngine.UIElements.UIR.NativePagedList`1<UnityEngine.UIElements.UIR.NudgeJobData> m_NudgeJobs
    // Size: 0x8
    // Offset: 0x10
    ::UnityEngine::UIElements::UIR::NativePagedList_1<::UnityEngine::UIElements::UIR::NudgeJobData>* m_NudgeJobs;
    // Field size check
    static_assert(sizeof(::UnityEngine::UIElements::UIR::NativePagedList_1<::UnityEngine::UIElements::UIR::NudgeJobData>*) == 0x8);
    // private UnityEngine.UIElements.UIR.NativePagedList`1<UnityEngine.UIElements.UIR.ConvertMeshJobData> m_ConvertMeshJobs
    // Size: 0x8
    // Offset: 0x18
    ::UnityEngine::UIElements::UIR::NativePagedList_1<::UnityEngine::UIElements::UIR::ConvertMeshJobData>* m_ConvertMeshJobs;
    // Field size check
    static_assert(sizeof(::UnityEngine::UIElements::UIR::NativePagedList_1<::UnityEngine::UIElements::UIR::ConvertMeshJobData>*) == 0x8);
    // private UnityEngine.UIElements.UIR.NativePagedList`1<UnityEngine.UIElements.UIR.CopyClosingMeshJobData> m_CopyClosingMeshJobs
    // Size: 0x8
    // Offset: 0x20
    ::UnityEngine::UIElements::UIR::NativePagedList_1<::UnityEngine::UIElements::UIR::CopyClosingMeshJobData>* m_CopyClosingMeshJobs;
    // Field size check
    static_assert(sizeof(::UnityEngine::UIElements::UIR::NativePagedList_1<::UnityEngine::UIElements::UIR::CopyClosingMeshJobData>*) == 0x8);
    // private UnityEngine.UIElements.UIR.JobMerger m_JobMerger
    // Size: 0x8
    // Offset: 0x28
    ::UnityEngine::UIElements::UIR::JobMerger* m_JobMerger;
    // Field size check
    static_assert(sizeof(::UnityEngine::UIElements::UIR::JobMerger*) == 0x8);
    // private System.Boolean <disposed>k__BackingField
    // Size: 0x1
    // Offset: 0x30
    bool disposed;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    public:
    // Creating interface conversion operator: operator ::System::IDisposable
    operator ::System::IDisposable() noexcept {
      return *reinterpret_cast<::System::IDisposable*>(this);
    }
    // Get instance field reference: private UnityEngine.UIElements.UIR.NativePagedList`1<UnityEngine.UIElements.UIR.NudgeJobData> m_NudgeJobs
    [[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::UIR::NativePagedList_1<::UnityEngine::UIElements::UIR::NudgeJobData>*& dyn_m_NudgeJobs();
    // Get instance field reference: private UnityEngine.UIElements.UIR.NativePagedList`1<UnityEngine.UIElements.UIR.ConvertMeshJobData> m_ConvertMeshJobs
    [[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::UIR::NativePagedList_1<::UnityEngine::UIElements::UIR::ConvertMeshJobData>*& dyn_m_ConvertMeshJobs();
    // Get instance field reference: private UnityEngine.UIElements.UIR.NativePagedList`1<UnityEngine.UIElements.UIR.CopyClosingMeshJobData> m_CopyClosingMeshJobs
    [[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::UIR::NativePagedList_1<::UnityEngine::UIElements::UIR::CopyClosingMeshJobData>*& dyn_m_CopyClosingMeshJobs();
    // Get instance field reference: private UnityEngine.UIElements.UIR.JobMerger m_JobMerger
    [[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::UIR::JobMerger*& dyn_m_JobMerger();
    // Get instance field reference: private System.Boolean <disposed>k__BackingField
    [[deprecated("Use field access instead!")]] bool& dyn_$disposed$k__BackingField();
    // public System.Void Add(ref UnityEngine.UIElements.UIR.NudgeJobData job)
    // Offset: 0x55CC9A0
    void Add(ByRef<::UnityEngine::UIElements::UIR::NudgeJobData> job);
    // public System.Void Add(ref UnityEngine.UIElements.UIR.ConvertMeshJobData job)
    // Offset: 0x55CC9F8
    void Add(ByRef<::UnityEngine::UIElements::UIR::ConvertMeshJobData> job);
    // public System.Void Add(ref UnityEngine.UIElements.UIR.CopyClosingMeshJobData job)
    // Offset: 0x55CCA50
    void Add(ByRef<::UnityEngine::UIElements::UIR::CopyClosingMeshJobData> job);
    // public System.Void CompleteNudgeJobs()
    // Offset: 0x55CCAA8
    void CompleteNudgeJobs();
    // public System.Void CompleteConvertMeshJobs()
    // Offset: 0x55CCDD8
    void CompleteConvertMeshJobs();
    // public System.Void CompleteClosingMeshJobs()
    // Offset: 0x55CD014
    void CompleteClosingMeshJobs();
    // protected System.Boolean get_disposed()
    // Offset: 0x55CD250
    bool get_disposed();
    // private System.Void set_disposed(System.Boolean value)
    // Offset: 0x55CD258
    void set_disposed(bool value);
    // public System.Void Dispose()
    // Offset: 0x55CD264
    void Dispose();
    // protected System.Void Dispose(System.Boolean disposing)
    // Offset: 0x55CD2C8
    void Dispose(bool disposing);
    // public System.Void .ctor()
    // Offset: 0x55CD3EC
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static JobManager* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::UIR::JobManager::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<JobManager*, creationType>()));
    }
  }; // UnityEngine.UIElements.UIR.JobManager
  #pragma pack(pop)
  static check_size<sizeof(JobManager), 48 + sizeof(bool)> __UnityEngine_UIElements_UIR_JobManagerSizeCheck;
  static_assert(sizeof(JobManager) == 0x31);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::UIElements::UIR::JobManager::Add
// Il2CppName: Add
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::UIR::JobManager::*)(ByRef<::UnityEngine::UIElements::UIR::NudgeJobData>)>(&UnityEngine::UIElements::UIR::JobManager::Add)> {
  static const MethodInfo* get() {
    static auto* job = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements.UIR", "NudgeJobData")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::UIR::JobManager*), "Add", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{job});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::UIR::JobManager::Add
// Il2CppName: Add
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::UIR::JobManager::*)(ByRef<::UnityEngine::UIElements::UIR::ConvertMeshJobData>)>(&UnityEngine::UIElements::UIR::JobManager::Add)> {
  static const MethodInfo* get() {
    static auto* job = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements.UIR", "ConvertMeshJobData")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::UIR::JobManager*), "Add", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{job});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::UIR::JobManager::Add
// Il2CppName: Add
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::UIR::JobManager::*)(ByRef<::UnityEngine::UIElements::UIR::CopyClosingMeshJobData>)>(&UnityEngine::UIElements::UIR::JobManager::Add)> {
  static const MethodInfo* get() {
    static auto* job = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements.UIR", "CopyClosingMeshJobData")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::UIR::JobManager*), "Add", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{job});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::UIR::JobManager::CompleteNudgeJobs
// Il2CppName: CompleteNudgeJobs
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::UIR::JobManager::*)()>(&UnityEngine::UIElements::UIR::JobManager::CompleteNudgeJobs)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::UIR::JobManager*), "CompleteNudgeJobs", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::UIR::JobManager::CompleteConvertMeshJobs
// Il2CppName: CompleteConvertMeshJobs
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::UIR::JobManager::*)()>(&UnityEngine::UIElements::UIR::JobManager::CompleteConvertMeshJobs)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::UIR::JobManager*), "CompleteConvertMeshJobs", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::UIR::JobManager::CompleteClosingMeshJobs
// Il2CppName: CompleteClosingMeshJobs
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::UIR::JobManager::*)()>(&UnityEngine::UIElements::UIR::JobManager::CompleteClosingMeshJobs)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::UIR::JobManager*), "CompleteClosingMeshJobs", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::UIR::JobManager::get_disposed
// Il2CppName: get_disposed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::UIR::JobManager::*)()>(&UnityEngine::UIElements::UIR::JobManager::get_disposed)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::UIR::JobManager*), "get_disposed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::UIR::JobManager::set_disposed
// Il2CppName: set_disposed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::UIR::JobManager::*)(bool)>(&UnityEngine::UIElements::UIR::JobManager::set_disposed)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::UIR::JobManager*), "set_disposed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::UIR::JobManager::Dispose
// Il2CppName: Dispose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::UIR::JobManager::*)()>(&UnityEngine::UIElements::UIR::JobManager::Dispose)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::UIR::JobManager*), "Dispose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::UIR::JobManager::Dispose
// Il2CppName: Dispose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::UIR::JobManager::*)(bool)>(&UnityEngine::UIElements::UIR::JobManager::Dispose)> {
  static const MethodInfo* get() {
    static auto* disposing = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::UIR::JobManager*), "Dispose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{disposing});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::UIR::JobManager::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
