// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.Rendering.VertexAttributeDescriptor
#include "UnityEngine/Rendering/VertexAttributeDescriptor.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
// Including type: Unity.Profiling.ProfilerMarker
#include "Unity/Profiling/ProfilerMarker.hpp"
// Including type: Unity.Collections.NativeSlice`1
#include "Unity/Collections/NativeSlice_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::UIElements::UIR
namespace UnityEngine::UIElements::UIR {
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Action`1<T>
  template<typename T>
  class Action_1;
  // Forward declaring type: Action
  class Action;
  // Skipping declaration: ValueType because it is already included!
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Camera
  class Camera;
  // Forward declaring type: MaterialPropertyBlock
  class MaterialPropertyBlock;
  // Forward declaring type: Material
  class Material;
  // Forward declaring type: Matrix4x4
  struct Matrix4x4;
  // Forward declaring type: Bounds
  struct Bounds;
  // Forward declaring type: RectInt
  struct RectInt;
}
// Forward declaring namespace: UnityEngine::Rendering
namespace UnityEngine::Rendering {
  // Forward declaring type: StencilState
  struct StencilState;
}
// Completed forward declares
// Type namespace: UnityEngine.UIElements.UIR
namespace UnityEngine::UIElements::UIR {
  // Forward declaring type: Utility
  class Utility;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::UIElements::UIR::Utility);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::UIElements::UIR::Utility*, "UnityEngine.UIElements.UIR", "Utility");
// Type namespace: UnityEngine.UIElements.UIR
namespace UnityEngine::UIElements::UIR {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.UIElements.UIR.Utility
  // [TokenAttribute] Offset: FFFFFFFF
  // [NativeHeaderAttribute] Offset: FFFFFFFF
  // [VisibleToOtherModulesAttribute] Offset: FFFFFFFF
  class Utility : public ::Il2CppObject {
    public:
    // Nested type: ::UnityEngine::UIElements::UIR::Utility::GPUBufferType
    struct GPUBufferType;
    // Nested type: ::UnityEngine::UIElements::UIR::Utility::GPUBuffer_1<T>
    template<typename T>
    class GPUBuffer_1;
    // Get static field: static private System.Action`1<System.Boolean> GraphicsResourcesRecreate
    static ::System::Action_1<bool>* _get_GraphicsResourcesRecreate();
    // Set static field: static private System.Action`1<System.Boolean> GraphicsResourcesRecreate
    static void _set_GraphicsResourcesRecreate(::System::Action_1<bool>* value);
    // Get static field: static private System.Action EngineUpdate
    static ::System::Action* _get_EngineUpdate();
    // Set static field: static private System.Action EngineUpdate
    static void _set_EngineUpdate(::System::Action* value);
    // Get static field: static private System.Action FlushPendingResources
    static ::System::Action* _get_FlushPendingResources();
    // Set static field: static private System.Action FlushPendingResources
    static void _set_FlushPendingResources(::System::Action* value);
    // Get static field: static private System.Action`1<UnityEngine.Camera> RegisterIntermediateRenderers
    static ::System::Action_1<::UnityEngine::Camera*>* _get_RegisterIntermediateRenderers();
    // Set static field: static private System.Action`1<UnityEngine.Camera> RegisterIntermediateRenderers
    static void _set_RegisterIntermediateRenderers(::System::Action_1<::UnityEngine::Camera*>* value);
    // Get static field: static private System.Action`1<System.IntPtr> RenderNodeAdd
    static ::System::Action_1<::System::IntPtr>* _get_RenderNodeAdd();
    // Set static field: static private System.Action`1<System.IntPtr> RenderNodeAdd
    static void _set_RenderNodeAdd(::System::Action_1<::System::IntPtr>* value);
    // Get static field: static private System.Action`1<System.IntPtr> RenderNodeExecute
    static ::System::Action_1<::System::IntPtr>* _get_RenderNodeExecute();
    // Set static field: static private System.Action`1<System.IntPtr> RenderNodeExecute
    static void _set_RenderNodeExecute(::System::Action_1<::System::IntPtr>* value);
    // Get static field: static private System.Action`1<System.IntPtr> RenderNodeCleanup
    static ::System::Action_1<::System::IntPtr>* _get_RenderNodeCleanup();
    // Set static field: static private System.Action`1<System.IntPtr> RenderNodeCleanup
    static void _set_RenderNodeCleanup(::System::Action_1<::System::IntPtr>* value);
    // Get static field: static private Unity.Profiling.ProfilerMarker s_MarkerRaiseEngineUpdate
    static ::Unity::Profiling::ProfilerMarker _get_s_MarkerRaiseEngineUpdate();
    // Set static field: static private Unity.Profiling.ProfilerMarker s_MarkerRaiseEngineUpdate
    static void _set_s_MarkerRaiseEngineUpdate(::Unity::Profiling::ProfilerMarker value);
    // static public System.Void SetVectorArray(UnityEngine.MaterialPropertyBlock props, System.Int32 name, Unity.Collections.NativeSlice`1<T> vector4s)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class T>
    static void SetVectorArray(::UnityEngine::MaterialPropertyBlock* props, int name, ::Unity::Collections::NativeSlice_1<T> vector4s) {
      static_assert(std::is_convertible_v<T, ::System::ValueType*>);
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::UIR::Utility::SetVectorArray");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UIElements.UIR", "Utility", "SetVectorArray", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(props), ::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(vector4s)})));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}));
      ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___generic__method, props, name, vector4s);
    }
    // static public System.Void add_GraphicsResourcesRecreate(System.Action`1<System.Boolean> value)
    // Offset: 0x55C95A4
    static void add_GraphicsResourcesRecreate(::System::Action_1<bool>* value);
    // static public System.Void remove_GraphicsResourcesRecreate(System.Action`1<System.Boolean> value)
    // Offset: 0x55C9694
    static void remove_GraphicsResourcesRecreate(::System::Action_1<bool>* value);
    // static public System.Void add_EngineUpdate(System.Action value)
    // Offset: 0x55C9784
    static void add_EngineUpdate(::System::Action* value);
    // static public System.Void remove_EngineUpdate(System.Action value)
    // Offset: 0x55C9860
    static void remove_EngineUpdate(::System::Action* value);
    // static public System.Void add_FlushPendingResources(System.Action value)
    // Offset: 0x55C993C
    static void add_FlushPendingResources(::System::Action* value);
    // static public System.Void remove_FlushPendingResources(System.Action value)
    // Offset: 0x55C9A18
    static void remove_FlushPendingResources(::System::Action* value);
    // static public System.Void add_RegisterIntermediateRenderers(System.Action`1<UnityEngine.Camera> value)
    // Offset: 0x55C9AF4
    static void add_RegisterIntermediateRenderers(::System::Action_1<::UnityEngine::Camera*>* value);
    // static public System.Void remove_RegisterIntermediateRenderers(System.Action`1<UnityEngine.Camera> value)
    // Offset: 0x55C9BE8
    static void remove_RegisterIntermediateRenderers(::System::Action_1<::UnityEngine::Camera*>* value);
    // static public System.Void add_RenderNodeExecute(System.Action`1<System.IntPtr> value)
    // Offset: 0x55C9CDC
    static void add_RenderNodeExecute(::System::Action_1<::System::IntPtr>* value);
    // static public System.Void remove_RenderNodeExecute(System.Action`1<System.IntPtr> value)
    // Offset: 0x55C9DD0
    static void remove_RenderNodeExecute(::System::Action_1<::System::IntPtr>* value);
    // static System.Void RaiseGraphicsResourcesRecreate(System.Boolean recreate)
    // Offset: 0x55C9EC4
    static void RaiseGraphicsResourcesRecreate(bool recreate);
    // static System.Void RaiseEngineUpdate()
    // Offset: 0x55C9F40
    static void RaiseEngineUpdate();
    // static System.Void RaiseFlushPendingResources()
    // Offset: 0x55C9FD4
    static void RaiseFlushPendingResources();
    // static System.Void RaiseRegisterIntermediateRenderers(UnityEngine.Camera camera)
    // Offset: 0x55CA048
    static void RaiseRegisterIntermediateRenderers(::UnityEngine::Camera* camera);
    // static System.Void RaiseRenderNodeAdd(System.IntPtr userData)
    // Offset: 0x55CA0C4
    static void RaiseRenderNodeAdd(::System::IntPtr userData);
    // static System.Void RaiseRenderNodeExecute(System.IntPtr userData)
    // Offset: 0x55CA140
    static void RaiseRenderNodeExecute(::System::IntPtr userData);
    // static System.Void RaiseRenderNodeCleanup(System.IntPtr userData)
    // Offset: 0x55CA1BC
    static void RaiseRenderNodeCleanup(::System::IntPtr userData);
    // static private System.IntPtr AllocateBuffer(System.Int32 elementCount, System.Int32 elementStride, System.Boolean vertexBuffer)
    // Offset: 0x55CA238
    static ::System::IntPtr AllocateBuffer(int elementCount, int elementStride, bool vertexBuffer);
    // static private System.Void FreeBuffer(System.IntPtr buffer)
    // Offset: 0x55CA28C
    static void FreeBuffer(::System::IntPtr buffer);
    // static private System.Void UpdateBufferRanges(System.IntPtr buffer, System.IntPtr ranges, System.Int32 rangeCount, System.Int32 writeRangeStart, System.Int32 writeRangeEnd)
    // Offset: 0x55CA2C8
    static void UpdateBufferRanges(::System::IntPtr buffer, ::System::IntPtr ranges, int rangeCount, int writeRangeStart, int writeRangeEnd);
    // static private System.Void SetVectorArray(UnityEngine.MaterialPropertyBlock props, System.Int32 name, System.IntPtr vector4s, System.Int32 count)
    // Offset: 0x55CA334
    static void SetVectorArray(::UnityEngine::MaterialPropertyBlock* props, int name, ::System::IntPtr vector4s, int count);
    // static public System.IntPtr GetVertexDeclaration(UnityEngine.Rendering.VertexAttributeDescriptor[] vertexAttributes)
    // Offset: 0x55CA390
    static ::System::IntPtr GetVertexDeclaration(::ArrayW<::UnityEngine::Rendering::VertexAttributeDescriptor> vertexAttributes);
    // static public System.Void RegisterIntermediateRenderer(UnityEngine.Camera camera, UnityEngine.Material material, UnityEngine.Matrix4x4 transform, UnityEngine.Bounds aabb, System.Int32 renderLayer, System.Int32 shadowCasting, System.Boolean receiveShadows, System.Int32 sameDistanceSortPriority, System.UInt64 sceneCullingMask, System.Int32 rendererCallbackFlags, System.IntPtr userData, System.Int32 userDataSize)
    // Offset: 0x55CA3CC
    static void RegisterIntermediateRenderer(::UnityEngine::Camera* camera, ::UnityEngine::Material* material, ::UnityEngine::Matrix4x4 transform, ::UnityEngine::Bounds aabb, int renderLayer, int shadowCasting, bool receiveShadows, int sameDistanceSortPriority, uint64_t sceneCullingMask, int rendererCallbackFlags, ::System::IntPtr userData, int userDataSize);
    // static public System.Void DrawRanges(System.IntPtr ib, System.IntPtr* vertexStreams, System.Int32 streamCount, System.IntPtr ranges, System.Int32 rangeCount, System.IntPtr vertexDecl)
    // Offset: 0x55CA578
    static void DrawRanges(::System::IntPtr ib, ::System::IntPtr* vertexStreams, int streamCount, ::System::IntPtr ranges, int rangeCount, ::System::IntPtr vertexDecl);
    // static public System.Void SetPropertyBlock(UnityEngine.MaterialPropertyBlock props)
    // Offset: 0x55CA5EC
    static void SetPropertyBlock(::UnityEngine::MaterialPropertyBlock* props);
    // static public System.Void SetScissorRect(UnityEngine.RectInt scissorRect)
    // Offset: 0x55CA628
    static void SetScissorRect(::UnityEngine::RectInt scissorRect);
    // static public System.Void DisableScissor()
    // Offset: 0x55CA6E4
    static void DisableScissor();
    // static public System.IntPtr CreateStencilState(UnityEngine.Rendering.StencilState stencilState)
    // Offset: 0x55CA70C
    static ::System::IntPtr CreateStencilState(::UnityEngine::Rendering::StencilState stencilState);
    // static public System.Void SetStencilState(System.IntPtr stencilState, System.Int32 stencilRef)
    // Offset: 0x55CA7CC
    static void SetStencilState(::System::IntPtr stencilState, int stencilRef);
    // static public System.Boolean HasMappedBufferRange()
    // Offset: 0x55CA810
    static bool HasMappedBufferRange();
    // static public System.UInt32 InsertCPUFence()
    // Offset: 0x55CA838
    static uint InsertCPUFence();
    // static public System.Boolean CPUFencePassed(System.UInt32 fence)
    // Offset: 0x55CA860
    static bool CPUFencePassed(uint fence);
    // static public System.Void WaitForCPUFencePassed(System.UInt32 fence)
    // Offset: 0x55CA89C
    static void WaitForCPUFencePassed(uint fence);
    // static public System.Void SyncRenderThread()
    // Offset: 0x55CA8D8
    static void SyncRenderThread();
    // static public UnityEngine.RectInt GetActiveViewport()
    // Offset: 0x55CA900
    static ::UnityEngine::RectInt GetActiveViewport();
    // static public System.Void ProfileDrawChainBegin()
    // Offset: 0x55CA9C0
    static void ProfileDrawChainBegin();
    // static public System.Void ProfileDrawChainEnd()
    // Offset: 0x55CA9E8
    static void ProfileDrawChainEnd();
    // static public System.Void NotifyOfUIREvents(System.Boolean subscribe)
    // Offset: 0x55CAA10
    static void NotifyOfUIREvents(bool subscribe);
    // static public UnityEngine.Matrix4x4 GetUnityProjectionMatrix()
    // Offset: 0x55CAA4C
    static ::UnityEngine::Matrix4x4 GetUnityProjectionMatrix();
    // static private System.Void .cctor()
    // Offset: 0x55CAB24
    static void _cctor();
    // static private System.Void RegisterIntermediateRenderer_Injected(UnityEngine.Camera camera, UnityEngine.Material material, ref UnityEngine.Matrix4x4 transform, ref UnityEngine.Bounds aabb, System.Int32 renderLayer, System.Int32 shadowCasting, System.Boolean receiveShadows, System.Int32 sameDistanceSortPriority, System.UInt64 sceneCullingMask, System.Int32 rendererCallbackFlags, System.IntPtr userData, System.Int32 userDataSize)
    // Offset: 0x55CA4B8
    static void RegisterIntermediateRenderer_Injected(::UnityEngine::Camera* camera, ::UnityEngine::Material* material, ByRef<::UnityEngine::Matrix4x4> transform, ByRef<::UnityEngine::Bounds> aabb, int renderLayer, int shadowCasting, bool receiveShadows, int sameDistanceSortPriority, uint64_t sceneCullingMask, int rendererCallbackFlags, ::System::IntPtr userData, int userDataSize);
    // static private System.Void SetScissorRect_Injected(ref UnityEngine.RectInt scissorRect)
    // Offset: 0x55CA6A8
    static void SetScissorRect_Injected(ByRef<::UnityEngine::RectInt> scissorRect);
    // static private System.IntPtr CreateStencilState_Injected(ref UnityEngine.Rendering.StencilState stencilState)
    // Offset: 0x55CA790
    static ::System::IntPtr CreateStencilState_Injected(ByRef<::UnityEngine::Rendering::StencilState> stencilState);
    // static private System.Void GetActiveViewport_Injected(out UnityEngine.RectInt ret)
    // Offset: 0x55CA984
    static void GetActiveViewport_Injected(ByRef<::UnityEngine::RectInt> ret);
    // static private System.Void GetUnityProjectionMatrix_Injected(out UnityEngine.Matrix4x4 ret)
    // Offset: 0x55CAAE8
    static void GetUnityProjectionMatrix_Injected(ByRef<::UnityEngine::Matrix4x4> ret);
  }; // UnityEngine.UIElements.UIR.Utility
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::UIElements::UIR::Utility::SetVectorArray
// Il2CppName: SetVectorArray
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: UnityEngine::UIElements::UIR::Utility::add_GraphicsResourcesRecreate
// Il2CppName: add_GraphicsResourcesRecreate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::Action_1<bool>*)>(&UnityEngine::UIElements::UIR::Utility::add_GraphicsResourcesRecreate)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Boolean")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::UIR::Utility*), "add_GraphicsResourcesRecreate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::UIR::Utility::remove_GraphicsResourcesRecreate
// Il2CppName: remove_GraphicsResourcesRecreate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::Action_1<bool>*)>(&UnityEngine::UIElements::UIR::Utility::remove_GraphicsResourcesRecreate)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Boolean")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::UIR::Utility*), "remove_GraphicsResourcesRecreate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::UIR::Utility::add_EngineUpdate
// Il2CppName: add_EngineUpdate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::Action*)>(&UnityEngine::UIElements::UIR::Utility::add_EngineUpdate)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Action")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::UIR::Utility*), "add_EngineUpdate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::UIR::Utility::remove_EngineUpdate
// Il2CppName: remove_EngineUpdate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::Action*)>(&UnityEngine::UIElements::UIR::Utility::remove_EngineUpdate)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Action")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::UIR::Utility*), "remove_EngineUpdate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::UIR::Utility::add_FlushPendingResources
// Il2CppName: add_FlushPendingResources
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::Action*)>(&UnityEngine::UIElements::UIR::Utility::add_FlushPendingResources)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Action")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::UIR::Utility*), "add_FlushPendingResources", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::UIR::Utility::remove_FlushPendingResources
// Il2CppName: remove_FlushPendingResources
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::Action*)>(&UnityEngine::UIElements::UIR::Utility::remove_FlushPendingResources)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Action")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::UIR::Utility*), "remove_FlushPendingResources", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::UIR::Utility::add_RegisterIntermediateRenderers
// Il2CppName: add_RegisterIntermediateRenderers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::Action_1<::UnityEngine::Camera*>*)>(&UnityEngine::UIElements::UIR::Utility::add_RegisterIntermediateRenderers)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine", "Camera")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::UIR::Utility*), "add_RegisterIntermediateRenderers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::UIR::Utility::remove_RegisterIntermediateRenderers
// Il2CppName: remove_RegisterIntermediateRenderers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::Action_1<::UnityEngine::Camera*>*)>(&UnityEngine::UIElements::UIR::Utility::remove_RegisterIntermediateRenderers)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine", "Camera")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::UIR::Utility*), "remove_RegisterIntermediateRenderers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::UIR::Utility::add_RenderNodeExecute
// Il2CppName: add_RenderNodeExecute
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::Action_1<::System::IntPtr>*)>(&UnityEngine::UIElements::UIR::Utility::add_RenderNodeExecute)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "IntPtr")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::UIR::Utility*), "add_RenderNodeExecute", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::UIR::Utility::remove_RenderNodeExecute
// Il2CppName: remove_RenderNodeExecute
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::Action_1<::System::IntPtr>*)>(&UnityEngine::UIElements::UIR::Utility::remove_RenderNodeExecute)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "IntPtr")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::UIR::Utility*), "remove_RenderNodeExecute", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::UIR::Utility::RaiseGraphicsResourcesRecreate
// Il2CppName: RaiseGraphicsResourcesRecreate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(bool)>(&UnityEngine::UIElements::UIR::Utility::RaiseGraphicsResourcesRecreate)> {
  static const MethodInfo* get() {
    static auto* recreate = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::UIR::Utility*), "RaiseGraphicsResourcesRecreate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{recreate});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::UIR::Utility::RaiseEngineUpdate
// Il2CppName: RaiseEngineUpdate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&UnityEngine::UIElements::UIR::Utility::RaiseEngineUpdate)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::UIR::Utility*), "RaiseEngineUpdate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::UIR::Utility::RaiseFlushPendingResources
// Il2CppName: RaiseFlushPendingResources
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&UnityEngine::UIElements::UIR::Utility::RaiseFlushPendingResources)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::UIR::Utility*), "RaiseFlushPendingResources", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::UIR::Utility::RaiseRegisterIntermediateRenderers
// Il2CppName: RaiseRegisterIntermediateRenderers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::Camera*)>(&UnityEngine::UIElements::UIR::Utility::RaiseRegisterIntermediateRenderers)> {
  static const MethodInfo* get() {
    static auto* camera = &::il2cpp_utils::GetClassFromName("UnityEngine", "Camera")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::UIR::Utility*), "RaiseRegisterIntermediateRenderers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{camera});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::UIR::Utility::RaiseRenderNodeAdd
// Il2CppName: RaiseRenderNodeAdd
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr)>(&UnityEngine::UIElements::UIR::Utility::RaiseRenderNodeAdd)> {
  static const MethodInfo* get() {
    static auto* userData = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::UIR::Utility*), "RaiseRenderNodeAdd", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{userData});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::UIR::Utility::RaiseRenderNodeExecute
// Il2CppName: RaiseRenderNodeExecute
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr)>(&UnityEngine::UIElements::UIR::Utility::RaiseRenderNodeExecute)> {
  static const MethodInfo* get() {
    static auto* userData = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::UIR::Utility*), "RaiseRenderNodeExecute", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{userData});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::UIR::Utility::RaiseRenderNodeCleanup
// Il2CppName: RaiseRenderNodeCleanup
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr)>(&UnityEngine::UIElements::UIR::Utility::RaiseRenderNodeCleanup)> {
  static const MethodInfo* get() {
    static auto* userData = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::UIR::Utility*), "RaiseRenderNodeCleanup", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{userData});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::UIR::Utility::AllocateBuffer
// Il2CppName: AllocateBuffer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(int, int, bool)>(&UnityEngine::UIElements::UIR::Utility::AllocateBuffer)> {
  static const MethodInfo* get() {
    static auto* elementCount = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* elementStride = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* vertexBuffer = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::UIR::Utility*), "AllocateBuffer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{elementCount, elementStride, vertexBuffer});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::UIR::Utility::FreeBuffer
// Il2CppName: FreeBuffer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr)>(&UnityEngine::UIElements::UIR::Utility::FreeBuffer)> {
  static const MethodInfo* get() {
    static auto* buffer = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::UIR::Utility*), "FreeBuffer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{buffer});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::UIR::Utility::UpdateBufferRanges
// Il2CppName: UpdateBufferRanges
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, ::System::IntPtr, int, int, int)>(&UnityEngine::UIElements::UIR::Utility::UpdateBufferRanges)> {
  static const MethodInfo* get() {
    static auto* buffer = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* ranges = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* rangeCount = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* writeRangeStart = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* writeRangeEnd = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::UIR::Utility*), "UpdateBufferRanges", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{buffer, ranges, rangeCount, writeRangeStart, writeRangeEnd});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::UIR::Utility::SetVectorArray
// Il2CppName: SetVectorArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::MaterialPropertyBlock*, int, ::System::IntPtr, int)>(&UnityEngine::UIElements::UIR::Utility::SetVectorArray)> {
  static const MethodInfo* get() {
    static auto* props = &::il2cpp_utils::GetClassFromName("UnityEngine", "MaterialPropertyBlock")->byval_arg;
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* vector4s = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* count = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::UIR::Utility*), "SetVectorArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{props, name, vector4s, count});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::UIR::Utility::GetVertexDeclaration
// Il2CppName: GetVertexDeclaration
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::ArrayW<::UnityEngine::Rendering::VertexAttributeDescriptor>)>(&UnityEngine::UIElements::UIR::Utility::GetVertexDeclaration)> {
  static const MethodInfo* get() {
    static auto* vertexAttributes = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "VertexAttributeDescriptor"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::UIR::Utility*), "GetVertexDeclaration", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{vertexAttributes});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::UIR::Utility::RegisterIntermediateRenderer
// Il2CppName: RegisterIntermediateRenderer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::Camera*, ::UnityEngine::Material*, ::UnityEngine::Matrix4x4, ::UnityEngine::Bounds, int, int, bool, int, uint64_t, int, ::System::IntPtr, int)>(&UnityEngine::UIElements::UIR::Utility::RegisterIntermediateRenderer)> {
  static const MethodInfo* get() {
    static auto* camera = &::il2cpp_utils::GetClassFromName("UnityEngine", "Camera")->byval_arg;
    static auto* material = &::il2cpp_utils::GetClassFromName("UnityEngine", "Material")->byval_arg;
    static auto* transform = &::il2cpp_utils::GetClassFromName("UnityEngine", "Matrix4x4")->byval_arg;
    static auto* aabb = &::il2cpp_utils::GetClassFromName("UnityEngine", "Bounds")->byval_arg;
    static auto* renderLayer = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* shadowCasting = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* receiveShadows = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* sameDistanceSortPriority = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* sceneCullingMask = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    static auto* rendererCallbackFlags = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* userData = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* userDataSize = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::UIR::Utility*), "RegisterIntermediateRenderer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{camera, material, transform, aabb, renderLayer, shadowCasting, receiveShadows, sameDistanceSortPriority, sceneCullingMask, rendererCallbackFlags, userData, userDataSize});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::UIR::Utility::DrawRanges
// Il2CppName: DrawRanges
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, ::System::IntPtr*, int, ::System::IntPtr, int, ::System::IntPtr)>(&UnityEngine::UIElements::UIR::Utility::DrawRanges)> {
  static const MethodInfo* get() {
    static auto* ib = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* vertexStreams = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "IntPtr"))->byval_arg;
    static auto* streamCount = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* ranges = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* rangeCount = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* vertexDecl = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::UIR::Utility*), "DrawRanges", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ib, vertexStreams, streamCount, ranges, rangeCount, vertexDecl});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::UIR::Utility::SetPropertyBlock
// Il2CppName: SetPropertyBlock
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::MaterialPropertyBlock*)>(&UnityEngine::UIElements::UIR::Utility::SetPropertyBlock)> {
  static const MethodInfo* get() {
    static auto* props = &::il2cpp_utils::GetClassFromName("UnityEngine", "MaterialPropertyBlock")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::UIR::Utility*), "SetPropertyBlock", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{props});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::UIR::Utility::SetScissorRect
// Il2CppName: SetScissorRect
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::RectInt)>(&UnityEngine::UIElements::UIR::Utility::SetScissorRect)> {
  static const MethodInfo* get() {
    static auto* scissorRect = &::il2cpp_utils::GetClassFromName("UnityEngine", "RectInt")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::UIR::Utility*), "SetScissorRect", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{scissorRect});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::UIR::Utility::DisableScissor
// Il2CppName: DisableScissor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&UnityEngine::UIElements::UIR::Utility::DisableScissor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::UIR::Utility*), "DisableScissor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::UIR::Utility::CreateStencilState
// Il2CppName: CreateStencilState
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::UnityEngine::Rendering::StencilState)>(&UnityEngine::UIElements::UIR::Utility::CreateStencilState)> {
  static const MethodInfo* get() {
    static auto* stencilState = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "StencilState")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::UIR::Utility*), "CreateStencilState", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stencilState});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::UIR::Utility::SetStencilState
// Il2CppName: SetStencilState
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, int)>(&UnityEngine::UIElements::UIR::Utility::SetStencilState)> {
  static const MethodInfo* get() {
    static auto* stencilState = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* stencilRef = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::UIR::Utility*), "SetStencilState", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stencilState, stencilRef});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::UIR::Utility::HasMappedBufferRange
// Il2CppName: HasMappedBufferRange
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&UnityEngine::UIElements::UIR::Utility::HasMappedBufferRange)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::UIR::Utility*), "HasMappedBufferRange", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::UIR::Utility::InsertCPUFence
// Il2CppName: InsertCPUFence
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (*)()>(&UnityEngine::UIElements::UIR::Utility::InsertCPUFence)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::UIR::Utility*), "InsertCPUFence", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::UIR::Utility::CPUFencePassed
// Il2CppName: CPUFencePassed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(uint)>(&UnityEngine::UIElements::UIR::Utility::CPUFencePassed)> {
  static const MethodInfo* get() {
    static auto* fence = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::UIR::Utility*), "CPUFencePassed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{fence});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::UIR::Utility::WaitForCPUFencePassed
// Il2CppName: WaitForCPUFencePassed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(uint)>(&UnityEngine::UIElements::UIR::Utility::WaitForCPUFencePassed)> {
  static const MethodInfo* get() {
    static auto* fence = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::UIR::Utility*), "WaitForCPUFencePassed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{fence});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::UIR::Utility::SyncRenderThread
// Il2CppName: SyncRenderThread
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&UnityEngine::UIElements::UIR::Utility::SyncRenderThread)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::UIR::Utility*), "SyncRenderThread", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::UIR::Utility::GetActiveViewport
// Il2CppName: GetActiveViewport
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::RectInt (*)()>(&UnityEngine::UIElements::UIR::Utility::GetActiveViewport)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::UIR::Utility*), "GetActiveViewport", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::UIR::Utility::ProfileDrawChainBegin
// Il2CppName: ProfileDrawChainBegin
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&UnityEngine::UIElements::UIR::Utility::ProfileDrawChainBegin)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::UIR::Utility*), "ProfileDrawChainBegin", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::UIR::Utility::ProfileDrawChainEnd
// Il2CppName: ProfileDrawChainEnd
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&UnityEngine::UIElements::UIR::Utility::ProfileDrawChainEnd)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::UIR::Utility*), "ProfileDrawChainEnd", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::UIR::Utility::NotifyOfUIREvents
// Il2CppName: NotifyOfUIREvents
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(bool)>(&UnityEngine::UIElements::UIR::Utility::NotifyOfUIREvents)> {
  static const MethodInfo* get() {
    static auto* subscribe = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::UIR::Utility*), "NotifyOfUIREvents", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{subscribe});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::UIR::Utility::GetUnityProjectionMatrix
// Il2CppName: GetUnityProjectionMatrix
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Matrix4x4 (*)()>(&UnityEngine::UIElements::UIR::Utility::GetUnityProjectionMatrix)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::UIR::Utility*), "GetUnityProjectionMatrix", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::UIR::Utility::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&UnityEngine::UIElements::UIR::Utility::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::UIR::Utility*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::UIR::Utility::RegisterIntermediateRenderer_Injected
// Il2CppName: RegisterIntermediateRenderer_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::Camera*, ::UnityEngine::Material*, ByRef<::UnityEngine::Matrix4x4>, ByRef<::UnityEngine::Bounds>, int, int, bool, int, uint64_t, int, ::System::IntPtr, int)>(&UnityEngine::UIElements::UIR::Utility::RegisterIntermediateRenderer_Injected)> {
  static const MethodInfo* get() {
    static auto* camera = &::il2cpp_utils::GetClassFromName("UnityEngine", "Camera")->byval_arg;
    static auto* material = &::il2cpp_utils::GetClassFromName("UnityEngine", "Material")->byval_arg;
    static auto* transform = &::il2cpp_utils::GetClassFromName("UnityEngine", "Matrix4x4")->this_arg;
    static auto* aabb = &::il2cpp_utils::GetClassFromName("UnityEngine", "Bounds")->this_arg;
    static auto* renderLayer = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* shadowCasting = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* receiveShadows = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* sameDistanceSortPriority = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* sceneCullingMask = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    static auto* rendererCallbackFlags = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* userData = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* userDataSize = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::UIR::Utility*), "RegisterIntermediateRenderer_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{camera, material, transform, aabb, renderLayer, shadowCasting, receiveShadows, sameDistanceSortPriority, sceneCullingMask, rendererCallbackFlags, userData, userDataSize});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::UIR::Utility::SetScissorRect_Injected
// Il2CppName: SetScissorRect_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(ByRef<::UnityEngine::RectInt>)>(&UnityEngine::UIElements::UIR::Utility::SetScissorRect_Injected)> {
  static const MethodInfo* get() {
    static auto* scissorRect = &::il2cpp_utils::GetClassFromName("UnityEngine", "RectInt")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::UIR::Utility*), "SetScissorRect_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{scissorRect});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::UIR::Utility::CreateStencilState_Injected
// Il2CppName: CreateStencilState_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(ByRef<::UnityEngine::Rendering::StencilState>)>(&UnityEngine::UIElements::UIR::Utility::CreateStencilState_Injected)> {
  static const MethodInfo* get() {
    static auto* stencilState = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "StencilState")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::UIR::Utility*), "CreateStencilState_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stencilState});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::UIR::Utility::GetActiveViewport_Injected
// Il2CppName: GetActiveViewport_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(ByRef<::UnityEngine::RectInt>)>(&UnityEngine::UIElements::UIR::Utility::GetActiveViewport_Injected)> {
  static const MethodInfo* get() {
    static auto* ret = &::il2cpp_utils::GetClassFromName("UnityEngine", "RectInt")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::UIR::Utility*), "GetActiveViewport_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ret});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::UIR::Utility::GetUnityProjectionMatrix_Injected
// Il2CppName: GetUnityProjectionMatrix_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(ByRef<::UnityEngine::Matrix4x4>)>(&UnityEngine::UIElements::UIR::Utility::GetUnityProjectionMatrix_Injected)> {
  static const MethodInfo* get() {
    static auto* ret = &::il2cpp_utils::GetClassFromName("UnityEngine", "Matrix4x4")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::UIR::Utility*), "GetUnityProjectionMatrix_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ret});
  }
};
