// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
// Including type: UnityEngine.Matrix4x4
#include "UnityEngine/Matrix4x4.hpp"
// Completed includes
// Type namespace: UnityEngine.UIElements.UIR
namespace UnityEngine::UIElements::UIR {
  // Forward declaring type: NudgeJobData
  struct NudgeJobData;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::UIElements::UIR::NudgeJobData, "UnityEngine.UIElements.UIR", "NudgeJobData");
// Type namespace: UnityEngine.UIElements.UIR
namespace UnityEngine::UIElements::UIR {
  // Size: 0x74
  #pragma pack(push, 1)
  // WARNING Layout: Sequential may not be correctly taken into account!
  // Autogenerated type: UnityEngine.UIElements.UIR.NudgeJobData
  // [TokenAttribute] Offset: FFFFFFFF
  struct NudgeJobData/*, public ::System::ValueType*/ {
    public:
    public:
    // public System.IntPtr src
    // Size: 0x8
    // Offset: 0x0
    ::System::IntPtr src;
    // Field size check
    static_assert(sizeof(::System::IntPtr) == 0x8);
    // public System.IntPtr dst
    // Size: 0x8
    // Offset: 0x8
    ::System::IntPtr dst;
    // Field size check
    static_assert(sizeof(::System::IntPtr) == 0x8);
    // public System.Int32 count
    // Size: 0x4
    // Offset: 0x10
    int count;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // Padding between fields: count and: closingSrc
    char __padding2[0x4] = {};
    // public System.IntPtr closingSrc
    // Size: 0x8
    // Offset: 0x18
    ::System::IntPtr closingSrc;
    // Field size check
    static_assert(sizeof(::System::IntPtr) == 0x8);
    // public System.IntPtr closingDst
    // Size: 0x8
    // Offset: 0x20
    ::System::IntPtr closingDst;
    // Field size check
    static_assert(sizeof(::System::IntPtr) == 0x8);
    // public System.Int32 closingCount
    // Size: 0x4
    // Offset: 0x28
    int closingCount;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // public UnityEngine.Matrix4x4 transform
    // Size: 0x40
    // Offset: 0x2C
    ::UnityEngine::Matrix4x4 transform;
    // Field size check
    static_assert(sizeof(::UnityEngine::Matrix4x4) == 0x40);
    // public System.Int32 vertsBeforeUVDisplacement
    // Size: 0x4
    // Offset: 0x6C
    int vertsBeforeUVDisplacement;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // public System.Int32 vertsAfterUVDisplacement
    // Size: 0x4
    // Offset: 0x70
    int vertsAfterUVDisplacement;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Creating value type constructor for type: NudgeJobData
    constexpr NudgeJobData(::System::IntPtr src_ = {}, ::System::IntPtr dst_ = {}, int count_ = {}, ::System::IntPtr closingSrc_ = {}, ::System::IntPtr closingDst_ = {}, int closingCount_ = {}, ::UnityEngine::Matrix4x4 transform_ = {}, int vertsBeforeUVDisplacement_ = {}, int vertsAfterUVDisplacement_ = {}) noexcept : src{src_}, dst{dst_}, count{count_}, closingSrc{closingSrc_}, closingDst{closingDst_}, closingCount{closingCount_}, transform{transform_}, vertsBeforeUVDisplacement{vertsBeforeUVDisplacement_}, vertsAfterUVDisplacement{vertsAfterUVDisplacement_} {}
    // Creating interface conversion operator: operator ::System::ValueType
    operator ::System::ValueType() noexcept {
      return *reinterpret_cast<::System::ValueType*>(this);
    }
    // Get instance field reference: public System.IntPtr src
    [[deprecated("Use field access instead!")]] ::System::IntPtr& dyn_src();
    // Get instance field reference: public System.IntPtr dst
    [[deprecated("Use field access instead!")]] ::System::IntPtr& dyn_dst();
    // Get instance field reference: public System.Int32 count
    [[deprecated("Use field access instead!")]] int& dyn_count();
    // Get instance field reference: public System.IntPtr closingSrc
    [[deprecated("Use field access instead!")]] ::System::IntPtr& dyn_closingSrc();
    // Get instance field reference: public System.IntPtr closingDst
    [[deprecated("Use field access instead!")]] ::System::IntPtr& dyn_closingDst();
    // Get instance field reference: public System.Int32 closingCount
    [[deprecated("Use field access instead!")]] int& dyn_closingCount();
    // Get instance field reference: public UnityEngine.Matrix4x4 transform
    [[deprecated("Use field access instead!")]] ::UnityEngine::Matrix4x4& dyn_transform();
    // Get instance field reference: public System.Int32 vertsBeforeUVDisplacement
    [[deprecated("Use field access instead!")]] int& dyn_vertsBeforeUVDisplacement();
    // Get instance field reference: public System.Int32 vertsAfterUVDisplacement
    [[deprecated("Use field access instead!")]] int& dyn_vertsAfterUVDisplacement();
  }; // UnityEngine.UIElements.UIR.NudgeJobData
  #pragma pack(pop)
  static check_size<sizeof(NudgeJobData), 112 + sizeof(int)> __UnityEngine_UIElements_UIR_NudgeJobDataSizeCheck;
  static_assert(sizeof(NudgeJobData) == 0x74);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
