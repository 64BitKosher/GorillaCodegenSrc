// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Completed includes
// Type namespace: UnityEngine.UIElements.UIR
namespace UnityEngine::UIElements::UIR {
  // Forward declaring type: ChainBuilderStats
  struct ChainBuilderStats;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::UIElements::UIR::ChainBuilderStats, "UnityEngine.UIElements.UIR", "ChainBuilderStats");
// Type namespace: UnityEngine.UIElements.UIR
namespace UnityEngine::UIElements::UIR {
  // Size: 0x60
  #pragma pack(push, 1)
  // WARNING Layout: Sequential may not be correctly taken into account!
  // Autogenerated type: UnityEngine.UIElements.UIR.ChainBuilderStats
  // [TokenAttribute] Offset: FFFFFFFF
  struct ChainBuilderStats/*, public ::System::ValueType*/ {
    public:
    public:
    // public System.UInt32 elementsAdded
    // Size: 0x4
    // Offset: 0x0
    uint elementsAdded;
    // Field size check
    static_assert(sizeof(uint) == 0x4);
    // public System.UInt32 elementsRemoved
    // Size: 0x4
    // Offset: 0x4
    uint elementsRemoved;
    // Field size check
    static_assert(sizeof(uint) == 0x4);
    // public System.UInt32 recursiveClipUpdates
    // Size: 0x4
    // Offset: 0x8
    uint recursiveClipUpdates;
    // Field size check
    static_assert(sizeof(uint) == 0x4);
    // public System.UInt32 recursiveClipUpdatesExpanded
    // Size: 0x4
    // Offset: 0xC
    uint recursiveClipUpdatesExpanded;
    // Field size check
    static_assert(sizeof(uint) == 0x4);
    // public System.UInt32 nonRecursiveClipUpdates
    // Size: 0x4
    // Offset: 0x10
    uint nonRecursiveClipUpdates;
    // Field size check
    static_assert(sizeof(uint) == 0x4);
    // public System.UInt32 recursiveTransformUpdates
    // Size: 0x4
    // Offset: 0x14
    uint recursiveTransformUpdates;
    // Field size check
    static_assert(sizeof(uint) == 0x4);
    // public System.UInt32 recursiveTransformUpdatesExpanded
    // Size: 0x4
    // Offset: 0x18
    uint recursiveTransformUpdatesExpanded;
    // Field size check
    static_assert(sizeof(uint) == 0x4);
    // public System.UInt32 recursiveOpacityUpdates
    // Size: 0x4
    // Offset: 0x1C
    uint recursiveOpacityUpdates;
    // Field size check
    static_assert(sizeof(uint) == 0x4);
    // public System.UInt32 recursiveOpacityUpdatesExpanded
    // Size: 0x4
    // Offset: 0x20
    uint recursiveOpacityUpdatesExpanded;
    // Field size check
    static_assert(sizeof(uint) == 0x4);
    // public System.UInt32 opacityIdUpdates
    // Size: 0x4
    // Offset: 0x24
    uint opacityIdUpdates;
    // Field size check
    static_assert(sizeof(uint) == 0x4);
    // public System.UInt32 colorUpdates
    // Size: 0x4
    // Offset: 0x28
    uint colorUpdates;
    // Field size check
    static_assert(sizeof(uint) == 0x4);
    // public System.UInt32 colorUpdatesExpanded
    // Size: 0x4
    // Offset: 0x2C
    uint colorUpdatesExpanded;
    // Field size check
    static_assert(sizeof(uint) == 0x4);
    // public System.UInt32 recursiveVisualUpdates
    // Size: 0x4
    // Offset: 0x30
    uint recursiveVisualUpdates;
    // Field size check
    static_assert(sizeof(uint) == 0x4);
    // public System.UInt32 recursiveVisualUpdatesExpanded
    // Size: 0x4
    // Offset: 0x34
    uint recursiveVisualUpdatesExpanded;
    // Field size check
    static_assert(sizeof(uint) == 0x4);
    // public System.UInt32 nonRecursiveVisualUpdates
    // Size: 0x4
    // Offset: 0x38
    uint nonRecursiveVisualUpdates;
    // Field size check
    static_assert(sizeof(uint) == 0x4);
    // public System.UInt32 dirtyProcessed
    // Size: 0x4
    // Offset: 0x3C
    uint dirtyProcessed;
    // Field size check
    static_assert(sizeof(uint) == 0x4);
    // public System.UInt32 nudgeTransformed
    // Size: 0x4
    // Offset: 0x40
    uint nudgeTransformed;
    // Field size check
    static_assert(sizeof(uint) == 0x4);
    // public System.UInt32 boneTransformed
    // Size: 0x4
    // Offset: 0x44
    uint boneTransformed;
    // Field size check
    static_assert(sizeof(uint) == 0x4);
    // public System.UInt32 skipTransformed
    // Size: 0x4
    // Offset: 0x48
    uint skipTransformed;
    // Field size check
    static_assert(sizeof(uint) == 0x4);
    // public System.UInt32 visualUpdateTransformed
    // Size: 0x4
    // Offset: 0x4C
    uint visualUpdateTransformed;
    // Field size check
    static_assert(sizeof(uint) == 0x4);
    // public System.UInt32 updatedMeshAllocations
    // Size: 0x4
    // Offset: 0x50
    uint updatedMeshAllocations;
    // Field size check
    static_assert(sizeof(uint) == 0x4);
    // public System.UInt32 newMeshAllocations
    // Size: 0x4
    // Offset: 0x54
    uint newMeshAllocations;
    // Field size check
    static_assert(sizeof(uint) == 0x4);
    // public System.UInt32 groupTransformElementsChanged
    // Size: 0x4
    // Offset: 0x58
    uint groupTransformElementsChanged;
    // Field size check
    static_assert(sizeof(uint) == 0x4);
    // public System.UInt32 immedateRenderersActive
    // Size: 0x4
    // Offset: 0x5C
    uint immedateRenderersActive;
    // Field size check
    static_assert(sizeof(uint) == 0x4);
    public:
    // Creating value type constructor for type: ChainBuilderStats
    constexpr ChainBuilderStats(uint elementsAdded_ = {}, uint elementsRemoved_ = {}, uint recursiveClipUpdates_ = {}, uint recursiveClipUpdatesExpanded_ = {}, uint nonRecursiveClipUpdates_ = {}, uint recursiveTransformUpdates_ = {}, uint recursiveTransformUpdatesExpanded_ = {}, uint recursiveOpacityUpdates_ = {}, uint recursiveOpacityUpdatesExpanded_ = {}, uint opacityIdUpdates_ = {}, uint colorUpdates_ = {}, uint colorUpdatesExpanded_ = {}, uint recursiveVisualUpdates_ = {}, uint recursiveVisualUpdatesExpanded_ = {}, uint nonRecursiveVisualUpdates_ = {}, uint dirtyProcessed_ = {}, uint nudgeTransformed_ = {}, uint boneTransformed_ = {}, uint skipTransformed_ = {}, uint visualUpdateTransformed_ = {}, uint updatedMeshAllocations_ = {}, uint newMeshAllocations_ = {}, uint groupTransformElementsChanged_ = {}, uint immedateRenderersActive_ = {}) noexcept : elementsAdded{elementsAdded_}, elementsRemoved{elementsRemoved_}, recursiveClipUpdates{recursiveClipUpdates_}, recursiveClipUpdatesExpanded{recursiveClipUpdatesExpanded_}, nonRecursiveClipUpdates{nonRecursiveClipUpdates_}, recursiveTransformUpdates{recursiveTransformUpdates_}, recursiveTransformUpdatesExpanded{recursiveTransformUpdatesExpanded_}, recursiveOpacityUpdates{recursiveOpacityUpdates_}, recursiveOpacityUpdatesExpanded{recursiveOpacityUpdatesExpanded_}, opacityIdUpdates{opacityIdUpdates_}, colorUpdates{colorUpdates_}, colorUpdatesExpanded{colorUpdatesExpanded_}, recursiveVisualUpdates{recursiveVisualUpdates_}, recursiveVisualUpdatesExpanded{recursiveVisualUpdatesExpanded_}, nonRecursiveVisualUpdates{nonRecursiveVisualUpdates_}, dirtyProcessed{dirtyProcessed_}, nudgeTransformed{nudgeTransformed_}, boneTransformed{boneTransformed_}, skipTransformed{skipTransformed_}, visualUpdateTransformed{visualUpdateTransformed_}, updatedMeshAllocations{updatedMeshAllocations_}, newMeshAllocations{newMeshAllocations_}, groupTransformElementsChanged{groupTransformElementsChanged_}, immedateRenderersActive{immedateRenderersActive_} {}
    // Creating interface conversion operator: operator ::System::ValueType
    operator ::System::ValueType() noexcept {
      return *reinterpret_cast<::System::ValueType*>(this);
    }
    // Get instance field reference: public System.UInt32 elementsAdded
    [[deprecated("Use field access instead!")]] uint& dyn_elementsAdded();
    // Get instance field reference: public System.UInt32 elementsRemoved
    [[deprecated("Use field access instead!")]] uint& dyn_elementsRemoved();
    // Get instance field reference: public System.UInt32 recursiveClipUpdates
    [[deprecated("Use field access instead!")]] uint& dyn_recursiveClipUpdates();
    // Get instance field reference: public System.UInt32 recursiveClipUpdatesExpanded
    [[deprecated("Use field access instead!")]] uint& dyn_recursiveClipUpdatesExpanded();
    // Get instance field reference: public System.UInt32 nonRecursiveClipUpdates
    [[deprecated("Use field access instead!")]] uint& dyn_nonRecursiveClipUpdates();
    // Get instance field reference: public System.UInt32 recursiveTransformUpdates
    [[deprecated("Use field access instead!")]] uint& dyn_recursiveTransformUpdates();
    // Get instance field reference: public System.UInt32 recursiveTransformUpdatesExpanded
    [[deprecated("Use field access instead!")]] uint& dyn_recursiveTransformUpdatesExpanded();
    // Get instance field reference: public System.UInt32 recursiveOpacityUpdates
    [[deprecated("Use field access instead!")]] uint& dyn_recursiveOpacityUpdates();
    // Get instance field reference: public System.UInt32 recursiveOpacityUpdatesExpanded
    [[deprecated("Use field access instead!")]] uint& dyn_recursiveOpacityUpdatesExpanded();
    // Get instance field reference: public System.UInt32 opacityIdUpdates
    [[deprecated("Use field access instead!")]] uint& dyn_opacityIdUpdates();
    // Get instance field reference: public System.UInt32 colorUpdates
    [[deprecated("Use field access instead!")]] uint& dyn_colorUpdates();
    // Get instance field reference: public System.UInt32 colorUpdatesExpanded
    [[deprecated("Use field access instead!")]] uint& dyn_colorUpdatesExpanded();
    // Get instance field reference: public System.UInt32 recursiveVisualUpdates
    [[deprecated("Use field access instead!")]] uint& dyn_recursiveVisualUpdates();
    // Get instance field reference: public System.UInt32 recursiveVisualUpdatesExpanded
    [[deprecated("Use field access instead!")]] uint& dyn_recursiveVisualUpdatesExpanded();
    // Get instance field reference: public System.UInt32 nonRecursiveVisualUpdates
    [[deprecated("Use field access instead!")]] uint& dyn_nonRecursiveVisualUpdates();
    // Get instance field reference: public System.UInt32 dirtyProcessed
    [[deprecated("Use field access instead!")]] uint& dyn_dirtyProcessed();
    // Get instance field reference: public System.UInt32 nudgeTransformed
    [[deprecated("Use field access instead!")]] uint& dyn_nudgeTransformed();
    // Get instance field reference: public System.UInt32 boneTransformed
    [[deprecated("Use field access instead!")]] uint& dyn_boneTransformed();
    // Get instance field reference: public System.UInt32 skipTransformed
    [[deprecated("Use field access instead!")]] uint& dyn_skipTransformed();
    // Get instance field reference: public System.UInt32 visualUpdateTransformed
    [[deprecated("Use field access instead!")]] uint& dyn_visualUpdateTransformed();
    // Get instance field reference: public System.UInt32 updatedMeshAllocations
    [[deprecated("Use field access instead!")]] uint& dyn_updatedMeshAllocations();
    // Get instance field reference: public System.UInt32 newMeshAllocations
    [[deprecated("Use field access instead!")]] uint& dyn_newMeshAllocations();
    // Get instance field reference: public System.UInt32 groupTransformElementsChanged
    [[deprecated("Use field access instead!")]] uint& dyn_groupTransformElementsChanged();
    // Get instance field reference: public System.UInt32 immedateRenderersActive
    [[deprecated("Use field access instead!")]] uint& dyn_immedateRenderersActive();
  }; // UnityEngine.UIElements.UIR.ChainBuilderStats
  #pragma pack(pop)
  static check_size<sizeof(ChainBuilderStats), 92 + sizeof(uint)> __UnityEngine_UIElements_UIR_ChainBuilderStatsSizeCheck;
  static_assert(sizeof(ChainBuilderStats) == 0x60);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
