// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
// Completed includes
// Type namespace: UnityEngine.UIElements.UIR
namespace UnityEngine::UIElements::UIR {
  // Forward declaring type: CopyClosingMeshJobData
  struct CopyClosingMeshJobData;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::UIElements::UIR::CopyClosingMeshJobData, "UnityEngine.UIElements.UIR", "CopyClosingMeshJobData");
// Type namespace: UnityEngine.UIElements.UIR
namespace UnityEngine::UIElements::UIR {
  // Size: 0x30
  #pragma pack(push, 1)
  // WARNING Layout: Sequential may not be correctly taken into account!
  // Autogenerated type: UnityEngine.UIElements.UIR.CopyClosingMeshJobData
  // [TokenAttribute] Offset: FFFFFFFF
  struct CopyClosingMeshJobData/*, public ::System::ValueType*/ {
    public:
    public:
    // public System.IntPtr vertSrc
    // Size: 0x8
    // Offset: 0x0
    ::System::IntPtr vertSrc;
    // Field size check
    static_assert(sizeof(::System::IntPtr) == 0x8);
    // public System.IntPtr vertDst
    // Size: 0x8
    // Offset: 0x8
    ::System::IntPtr vertDst;
    // Field size check
    static_assert(sizeof(::System::IntPtr) == 0x8);
    // public System.Int32 vertCount
    // Size: 0x4
    // Offset: 0x10
    int vertCount;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // Padding between fields: vertCount and: indexSrc
    char __padding2[0x4] = {};
    // public System.IntPtr indexSrc
    // Size: 0x8
    // Offset: 0x18
    ::System::IntPtr indexSrc;
    // Field size check
    static_assert(sizeof(::System::IntPtr) == 0x8);
    // public System.IntPtr indexDst
    // Size: 0x8
    // Offset: 0x20
    ::System::IntPtr indexDst;
    // Field size check
    static_assert(sizeof(::System::IntPtr) == 0x8);
    // public System.Int32 indexCount
    // Size: 0x4
    // Offset: 0x28
    int indexCount;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // public System.Int32 indexOffset
    // Size: 0x4
    // Offset: 0x2C
    int indexOffset;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Creating value type constructor for type: CopyClosingMeshJobData
    constexpr CopyClosingMeshJobData(::System::IntPtr vertSrc_ = {}, ::System::IntPtr vertDst_ = {}, int vertCount_ = {}, ::System::IntPtr indexSrc_ = {}, ::System::IntPtr indexDst_ = {}, int indexCount_ = {}, int indexOffset_ = {}) noexcept : vertSrc{vertSrc_}, vertDst{vertDst_}, vertCount{vertCount_}, indexSrc{indexSrc_}, indexDst{indexDst_}, indexCount{indexCount_}, indexOffset{indexOffset_} {}
    // Creating interface conversion operator: operator ::System::ValueType
    operator ::System::ValueType() noexcept {
      return *reinterpret_cast<::System::ValueType*>(this);
    }
    // Get instance field reference: public System.IntPtr vertSrc
    [[deprecated("Use field access instead!")]] ::System::IntPtr& dyn_vertSrc();
    // Get instance field reference: public System.IntPtr vertDst
    [[deprecated("Use field access instead!")]] ::System::IntPtr& dyn_vertDst();
    // Get instance field reference: public System.Int32 vertCount
    [[deprecated("Use field access instead!")]] int& dyn_vertCount();
    // Get instance field reference: public System.IntPtr indexSrc
    [[deprecated("Use field access instead!")]] ::System::IntPtr& dyn_indexSrc();
    // Get instance field reference: public System.IntPtr indexDst
    [[deprecated("Use field access instead!")]] ::System::IntPtr& dyn_indexDst();
    // Get instance field reference: public System.Int32 indexCount
    [[deprecated("Use field access instead!")]] int& dyn_indexCount();
    // Get instance field reference: public System.Int32 indexOffset
    [[deprecated("Use field access instead!")]] int& dyn_indexOffset();
  }; // UnityEngine.UIElements.UIR.CopyClosingMeshJobData
  #pragma pack(pop)
  static check_size<sizeof(CopyClosingMeshJobData), 44 + sizeof(int)> __UnityEngine_UIElements_UIR_CopyClosingMeshJobDataSizeCheck;
  static_assert(sizeof(CopyClosingMeshJobData) == 0x30);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
