// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.IDisposable
#include "System/IDisposable.hpp"
// Including type: Unity.Profiling.ProfilerMarker
#include "Unity/Profiling/ProfilerMarker.hpp"
// Including type: UnityEngine.UIElements.GradientSettings
#include "UnityEngine/UIElements/GradientSettings.hpp"
// Including type: UnityEngine.Color32
#include "UnityEngine/Color32.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::UIElements::UIR
namespace UnityEngine::UIElements::UIR {
  // Forward declaring type: Alloc
  struct Alloc;
  // Forward declaring type: BestFitAllocator
  class BestFitAllocator;
  // Forward declaring type: GradientRemap
  class GradientRemap;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Texture2D
  class Texture2D;
}
// Completed forward declares
// Type namespace: UnityEngine.UIElements.UIR
namespace UnityEngine::UIElements::UIR {
  // Forward declaring type: GradientSettingsAtlas
  class GradientSettingsAtlas;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::UIElements::UIR::GradientSettingsAtlas);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::UIElements::UIR::GradientSettingsAtlas*, "UnityEngine.UIElements.UIR", "GradientSettingsAtlas");
// Type namespace: UnityEngine.UIElements.UIR
namespace UnityEngine::UIElements::UIR {
  // Size: 0x3A
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.UIElements.UIR.GradientSettingsAtlas
  // [TokenAttribute] Offset: FFFFFFFF
  class GradientSettingsAtlas : public ::Il2CppObject/*, public ::System::IDisposable*/ {
    public:
    // Nested type: ::UnityEngine::UIElements::UIR::GradientSettingsAtlas::RawTexture
    struct RawTexture;
    // Size: 0x10
    #pragma pack(push, 1)
    // WARNING Layout: Sequential may not be correctly taken into account!
    // Autogenerated type: UnityEngine.UIElements.UIR.GradientSettingsAtlas/RawTexture
    // [TokenAttribute] Offset: FFFFFFFF
    struct RawTexture/*, public ::System::ValueType*/ {
      public:
      public:
      // public UnityEngine.Color32[] rgba
      // Size: 0x8
      // Offset: 0x0
      ::ArrayW<::UnityEngine::Color32> rgba;
      // Field size check
      static_assert(sizeof(::ArrayW<::UnityEngine::Color32>) == 0x8);
      // public System.Int32 width
      // Size: 0x4
      // Offset: 0x8
      int width;
      // Field size check
      static_assert(sizeof(int) == 0x4);
      // public System.Int32 height
      // Size: 0x4
      // Offset: 0xC
      int height;
      // Field size check
      static_assert(sizeof(int) == 0x4);
      public:
      // Creating value type constructor for type: RawTexture
      constexpr RawTexture(::ArrayW<::UnityEngine::Color32> rgba_ = ::ArrayW<::UnityEngine::Color32>(static_cast<void*>(nullptr)), int width_ = {}, int height_ = {}) noexcept : rgba{rgba_}, width{width_}, height{height_} {}
      // Creating interface conversion operator: operator ::System::ValueType
      operator ::System::ValueType() noexcept {
        return *reinterpret_cast<::System::ValueType*>(this);
      }
      // Get instance field reference: public UnityEngine.Color32[] rgba
      [[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Color32>& dyn_rgba();
      // Get instance field reference: public System.Int32 width
      [[deprecated("Use field access instead!")]] int& dyn_width();
      // Get instance field reference: public System.Int32 height
      [[deprecated("Use field access instead!")]] int& dyn_height();
      // public System.Void WriteRawInt2Packed(System.Int32 v0, System.Int32 v1, System.Int32 destX, System.Int32 destY)
      // Offset: 0x55CC678
      void WriteRawInt2Packed(int v0, int v1, int destX, int destY);
      // public System.Void WriteRawFloat4Packed(System.Single f0, System.Single f1, System.Single f2, System.Single f3, System.Int32 destX, System.Int32 destY)
      // Offset: 0x55CC5D0
      void WriteRawFloat4Packed(float f0, float f1, float f2, float f3, int destX, int destY);
    }; // UnityEngine.UIElements.UIR.GradientSettingsAtlas/RawTexture
    #pragma pack(pop)
    static check_size<sizeof(GradientSettingsAtlas::RawTexture), 12 + sizeof(int)> __UnityEngine_UIElements_UIR_GradientSettingsAtlas_RawTextureSizeCheck;
    static_assert(sizeof(GradientSettingsAtlas::RawTexture) == 0x10);
    public:
    // private readonly System.Int32 m_Length
    // Size: 0x4
    // Offset: 0x10
    int m_Length;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private readonly System.Int32 m_ElemWidth
    // Size: 0x4
    // Offset: 0x14
    int m_ElemWidth;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private UnityEngine.UIElements.UIR.BestFitAllocator m_Allocator
    // Size: 0x8
    // Offset: 0x18
    ::UnityEngine::UIElements::UIR::BestFitAllocator* m_Allocator;
    // Field size check
    static_assert(sizeof(::UnityEngine::UIElements::UIR::BestFitAllocator*) == 0x8);
    // private UnityEngine.Texture2D m_Atlas
    // Size: 0x8
    // Offset: 0x20
    ::UnityEngine::Texture2D* m_Atlas;
    // Field size check
    static_assert(sizeof(::UnityEngine::Texture2D*) == 0x8);
    // private UnityEngine.UIElements.UIR.GradientSettingsAtlas/RawTexture m_RawAtlas
    // Size: 0x10
    // Offset: 0x28
    ::UnityEngine::UIElements::UIR::GradientSettingsAtlas::RawTexture m_RawAtlas;
    // Field size check
    static_assert(sizeof(::UnityEngine::UIElements::UIR::GradientSettingsAtlas::RawTexture) == 0x10);
    // private System.Boolean <disposed>k__BackingField
    // Size: 0x1
    // Offset: 0x38
    bool disposed;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean <MustCommit>k__BackingField
    // Size: 0x1
    // Offset: 0x39
    bool MustCommit;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    public:
    // Creating interface conversion operator: operator ::System::IDisposable
    operator ::System::IDisposable() noexcept {
      return *reinterpret_cast<::System::IDisposable*>(this);
    }
    // Get static field: static private Unity.Profiling.ProfilerMarker s_MarkerWrite
    static ::Unity::Profiling::ProfilerMarker _get_s_MarkerWrite();
    // Set static field: static private Unity.Profiling.ProfilerMarker s_MarkerWrite
    static void _set_s_MarkerWrite(::Unity::Profiling::ProfilerMarker value);
    // Get static field: static private Unity.Profiling.ProfilerMarker s_MarkerCommit
    static ::Unity::Profiling::ProfilerMarker _get_s_MarkerCommit();
    // Set static field: static private Unity.Profiling.ProfilerMarker s_MarkerCommit
    static void _set_s_MarkerCommit(::Unity::Profiling::ProfilerMarker value);
    // Get static field: static private System.Int32 s_TextureCounter
    static int _get_s_TextureCounter();
    // Set static field: static private System.Int32 s_TextureCounter
    static void _set_s_TextureCounter(int value);
    // Get instance field reference: private readonly System.Int32 m_Length
    [[deprecated("Use field access instead!")]] int& dyn_m_Length();
    // Get instance field reference: private readonly System.Int32 m_ElemWidth
    [[deprecated("Use field access instead!")]] int& dyn_m_ElemWidth();
    // Get instance field reference: private UnityEngine.UIElements.UIR.BestFitAllocator m_Allocator
    [[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::UIR::BestFitAllocator*& dyn_m_Allocator();
    // Get instance field reference: private UnityEngine.Texture2D m_Atlas
    [[deprecated("Use field access instead!")]] ::UnityEngine::Texture2D*& dyn_m_Atlas();
    // Get instance field reference: private UnityEngine.UIElements.UIR.GradientSettingsAtlas/RawTexture m_RawAtlas
    [[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::UIR::GradientSettingsAtlas::RawTexture& dyn_m_RawAtlas();
    // Get instance field reference: private System.Boolean <disposed>k__BackingField
    [[deprecated("Use field access instead!")]] bool& dyn_$disposed$k__BackingField();
    // Get instance field reference: private System.Boolean <MustCommit>k__BackingField
    [[deprecated("Use field access instead!")]] bool& dyn_$MustCommit$k__BackingField();
    // System.Int32 get_length()
    // Offset: 0x55CBF60
    int get_length();
    // protected System.Boolean get_disposed()
    // Offset: 0x55CBF68
    bool get_disposed();
    // private System.Void set_disposed(System.Boolean value)
    // Offset: 0x55CBF70
    void set_disposed(bool value);
    // public System.Void Dispose()
    // Offset: 0x55CBF7C
    void Dispose();
    // protected System.Void Dispose(System.Boolean disposing)
    // Offset: 0x55CBFE8
    void Dispose(bool disposing);
    // public System.Void .ctor(System.Int32 length)
    // Offset: 0x55CC060
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static GradientSettingsAtlas* New_ctor(int length) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::UIR::GradientSettingsAtlas::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<GradientSettingsAtlas*, creationType>(length)));
    }
    // public System.Void Reset()
    // Offset: 0x55CC090
    void Reset();
    // public UnityEngine.Texture2D get_atlas()
    // Offset: 0x55CC158
    ::UnityEngine::Texture2D* get_atlas();
    // public UnityEngine.UIElements.UIR.Alloc Add(System.Int32 count)
    // Offset: 0x55CC160
    ::UnityEngine::UIElements::UIR::Alloc Add(int count);
    // public System.Void Write(UnityEngine.UIElements.UIR.Alloc alloc, UnityEngine.UIElements.GradientSettings[] settings, UnityEngine.UIElements.UIR.GradientRemap remap)
    // Offset: 0x55CC23C
    void Write(::UnityEngine::UIElements::UIR::Alloc alloc, ::ArrayW<::UnityEngine::UIElements::GradientSettings> settings, ::UnityEngine::UIElements::UIR::GradientRemap* remap);
    // public System.Boolean get_MustCommit()
    // Offset: 0x55CC708
    bool get_MustCommit();
    // private System.Void set_MustCommit(System.Boolean value)
    // Offset: 0x55CC710
    void set_MustCommit(bool value);
    // public System.Void Commit()
    // Offset: 0x55CC71C
    void Commit();
    // private System.Void PrepareAtlas()
    // Offset: 0x55CC780
    void PrepareAtlas();
    // static private System.Void .cctor()
    // Offset: 0x55CC8EC
    static void _cctor();
  }; // UnityEngine.UIElements.UIR.GradientSettingsAtlas
  #pragma pack(pop)
  static check_size<sizeof(GradientSettingsAtlas), 57 + sizeof(bool)> __UnityEngine_UIElements_UIR_GradientSettingsAtlasSizeCheck;
  static_assert(sizeof(GradientSettingsAtlas) == 0x3A);
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::UIElements::UIR::GradientSettingsAtlas::RawTexture, "UnityEngine.UIElements.UIR", "GradientSettingsAtlas/RawTexture");
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::UIElements::UIR::GradientSettingsAtlas::get_length
// Il2CppName: get_length
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::UIElements::UIR::GradientSettingsAtlas::*)()>(&UnityEngine::UIElements::UIR::GradientSettingsAtlas::get_length)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::UIR::GradientSettingsAtlas*), "get_length", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::UIR::GradientSettingsAtlas::get_disposed
// Il2CppName: get_disposed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::UIR::GradientSettingsAtlas::*)()>(&UnityEngine::UIElements::UIR::GradientSettingsAtlas::get_disposed)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::UIR::GradientSettingsAtlas*), "get_disposed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::UIR::GradientSettingsAtlas::set_disposed
// Il2CppName: set_disposed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::UIR::GradientSettingsAtlas::*)(bool)>(&UnityEngine::UIElements::UIR::GradientSettingsAtlas::set_disposed)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::UIR::GradientSettingsAtlas*), "set_disposed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::UIR::GradientSettingsAtlas::Dispose
// Il2CppName: Dispose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::UIR::GradientSettingsAtlas::*)()>(&UnityEngine::UIElements::UIR::GradientSettingsAtlas::Dispose)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::UIR::GradientSettingsAtlas*), "Dispose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::UIR::GradientSettingsAtlas::Dispose
// Il2CppName: Dispose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::UIR::GradientSettingsAtlas::*)(bool)>(&UnityEngine::UIElements::UIR::GradientSettingsAtlas::Dispose)> {
  static const MethodInfo* get() {
    static auto* disposing = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::UIR::GradientSettingsAtlas*), "Dispose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{disposing});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::UIR::GradientSettingsAtlas::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::UIElements::UIR::GradientSettingsAtlas::Reset
// Il2CppName: Reset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::UIR::GradientSettingsAtlas::*)()>(&UnityEngine::UIElements::UIR::GradientSettingsAtlas::Reset)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::UIR::GradientSettingsAtlas*), "Reset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::UIR::GradientSettingsAtlas::get_atlas
// Il2CppName: get_atlas
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Texture2D* (UnityEngine::UIElements::UIR::GradientSettingsAtlas::*)()>(&UnityEngine::UIElements::UIR::GradientSettingsAtlas::get_atlas)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::UIR::GradientSettingsAtlas*), "get_atlas", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::UIR::GradientSettingsAtlas::Add
// Il2CppName: Add
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::UIR::Alloc (UnityEngine::UIElements::UIR::GradientSettingsAtlas::*)(int)>(&UnityEngine::UIElements::UIR::GradientSettingsAtlas::Add)> {
  static const MethodInfo* get() {
    static auto* count = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::UIR::GradientSettingsAtlas*), "Add", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{count});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::UIR::GradientSettingsAtlas::Write
// Il2CppName: Write
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::UIR::GradientSettingsAtlas::*)(::UnityEngine::UIElements::UIR::Alloc, ::ArrayW<::UnityEngine::UIElements::GradientSettings>, ::UnityEngine::UIElements::UIR::GradientRemap*)>(&UnityEngine::UIElements::UIR::GradientSettingsAtlas::Write)> {
  static const MethodInfo* get() {
    static auto* alloc = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements.UIR", "Alloc")->byval_arg;
    static auto* settings = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "GradientSettings"), 1)->byval_arg;
    static auto* remap = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements.UIR", "GradientRemap")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::UIR::GradientSettingsAtlas*), "Write", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{alloc, settings, remap});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::UIR::GradientSettingsAtlas::get_MustCommit
// Il2CppName: get_MustCommit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::UIR::GradientSettingsAtlas::*)()>(&UnityEngine::UIElements::UIR::GradientSettingsAtlas::get_MustCommit)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::UIR::GradientSettingsAtlas*), "get_MustCommit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::UIR::GradientSettingsAtlas::set_MustCommit
// Il2CppName: set_MustCommit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::UIR::GradientSettingsAtlas::*)(bool)>(&UnityEngine::UIElements::UIR::GradientSettingsAtlas::set_MustCommit)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::UIR::GradientSettingsAtlas*), "set_MustCommit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::UIR::GradientSettingsAtlas::Commit
// Il2CppName: Commit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::UIR::GradientSettingsAtlas::*)()>(&UnityEngine::UIElements::UIR::GradientSettingsAtlas::Commit)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::UIR::GradientSettingsAtlas*), "Commit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::UIR::GradientSettingsAtlas::PrepareAtlas
// Il2CppName: PrepareAtlas
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::UIR::GradientSettingsAtlas::*)()>(&UnityEngine::UIElements::UIR::GradientSettingsAtlas::PrepareAtlas)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::UIR::GradientSettingsAtlas*), "PrepareAtlas", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::UIR::GradientSettingsAtlas::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&UnityEngine::UIElements::UIR::GradientSettingsAtlas::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::UIR::GradientSettingsAtlas*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
