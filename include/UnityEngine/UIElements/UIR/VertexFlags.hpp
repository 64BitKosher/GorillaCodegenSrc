// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Enum
#include "System/Enum.hpp"
// Completed includes
// Type namespace: UnityEngine.UIElements.UIR
namespace UnityEngine::UIElements::UIR {
  // Forward declaring type: VertexFlags
  struct VertexFlags;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::UIElements::UIR::VertexFlags, "UnityEngine.UIElements.UIR", "VertexFlags");
// Type namespace: UnityEngine.UIElements.UIR
namespace UnityEngine::UIElements::UIR {
  // Size: 0x4
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.UIElements.UIR.VertexFlags
  // [TokenAttribute] Offset: FFFFFFFF
  struct VertexFlags/*, public ::System::Enum*/ {
    public:
    public:
    // public System.Int32 value__
    // Size: 0x4
    // Offset: 0x0
    int value;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Creating value type constructor for type: VertexFlags
    constexpr VertexFlags(int value_ = {}) noexcept : value{value_} {}
    // Creating interface conversion operator: operator ::System::Enum
    operator ::System::Enum() noexcept {
      return *reinterpret_cast<::System::Enum*>(this);
    }
    // Creating conversion operator: operator int
    constexpr operator int() const noexcept {
      return value;
    }
    // static field const value: static public UnityEngine.UIElements.UIR.VertexFlags IsSolid
    static constexpr const int IsSolid = 0;
    // Get static field: static public UnityEngine.UIElements.UIR.VertexFlags IsSolid
    static ::UnityEngine::UIElements::UIR::VertexFlags _get_IsSolid();
    // Set static field: static public UnityEngine.UIElements.UIR.VertexFlags IsSolid
    static void _set_IsSolid(::UnityEngine::UIElements::UIR::VertexFlags value);
    // static field const value: static public UnityEngine.UIElements.UIR.VertexFlags IsText
    static constexpr const int IsText = 1;
    // Get static field: static public UnityEngine.UIElements.UIR.VertexFlags IsText
    static ::UnityEngine::UIElements::UIR::VertexFlags _get_IsText();
    // Set static field: static public UnityEngine.UIElements.UIR.VertexFlags IsText
    static void _set_IsText(::UnityEngine::UIElements::UIR::VertexFlags value);
    // static field const value: static public UnityEngine.UIElements.UIR.VertexFlags IsTextured
    static constexpr const int IsTextured = 2;
    // Get static field: static public UnityEngine.UIElements.UIR.VertexFlags IsTextured
    static ::UnityEngine::UIElements::UIR::VertexFlags _get_IsTextured();
    // Set static field: static public UnityEngine.UIElements.UIR.VertexFlags IsTextured
    static void _set_IsTextured(::UnityEngine::UIElements::UIR::VertexFlags value);
    // static field const value: static public UnityEngine.UIElements.UIR.VertexFlags IsDynamic
    static constexpr const int IsDynamic = 3;
    // Get static field: static public UnityEngine.UIElements.UIR.VertexFlags IsDynamic
    static ::UnityEngine::UIElements::UIR::VertexFlags _get_IsDynamic();
    // Set static field: static public UnityEngine.UIElements.UIR.VertexFlags IsDynamic
    static void _set_IsDynamic(::UnityEngine::UIElements::UIR::VertexFlags value);
    // static field const value: static public UnityEngine.UIElements.UIR.VertexFlags IsSvgGradients
    static constexpr const int IsSvgGradients = 4;
    // Get static field: static public UnityEngine.UIElements.UIR.VertexFlags IsSvgGradients
    static ::UnityEngine::UIElements::UIR::VertexFlags _get_IsSvgGradients();
    // Set static field: static public UnityEngine.UIElements.UIR.VertexFlags IsSvgGradients
    static void _set_IsSvgGradients(::UnityEngine::UIElements::UIR::VertexFlags value);
    // static field const value: static public UnityEngine.UIElements.UIR.VertexFlags LastType
    static constexpr const int LastType = 10;
    // Get static field: static public UnityEngine.UIElements.UIR.VertexFlags LastType
    static ::UnityEngine::UIElements::UIR::VertexFlags _get_LastType();
    // Set static field: static public UnityEngine.UIElements.UIR.VertexFlags LastType
    static void _set_LastType(::UnityEngine::UIElements::UIR::VertexFlags value);
    // static field const value: static public UnityEngine.UIElements.UIR.VertexFlags IsGraphViewEdge
    static constexpr const int IsGraphViewEdge = 10;
    // Get static field: static public UnityEngine.UIElements.UIR.VertexFlags IsGraphViewEdge
    static ::UnityEngine::UIElements::UIR::VertexFlags _get_IsGraphViewEdge();
    // Set static field: static public UnityEngine.UIElements.UIR.VertexFlags IsGraphViewEdge
    static void _set_IsGraphViewEdge(::UnityEngine::UIElements::UIR::VertexFlags value);
    // Get instance field reference: public System.Int32 value__
    [[deprecated("Use field access instead!")]] int& dyn_value__();
  }; // UnityEngine.UIElements.UIR.VertexFlags
  #pragma pack(pop)
  static check_size<sizeof(VertexFlags), 0 + sizeof(int)> __UnityEngine_UIElements_UIR_VertexFlagsSizeCheck;
  static_assert(sizeof(VertexFlags) == 0x4);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
