// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.UIElements.UIR.LinkedPoolItem`1
#include "UnityEngine/UIElements/UIR/LinkedPoolItem_1.hpp"
// Including type: UnityEngine.UIElements.UIR.Alloc
#include "UnityEngine/UIElements/UIR/Alloc.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::UIElements::UIR
namespace UnityEngine::UIElements::UIR {
  // Forward declaring type: GradientRemap
  class GradientRemap;
}
// Completed forward declares
// Type namespace: UnityEngine.UIElements.UIR
namespace UnityEngine::UIElements::UIR {
  // Forward declaring type: VectorImageRenderInfo
  class VectorImageRenderInfo;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::UIElements::UIR::VectorImageRenderInfo);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::UIElements::UIR::VectorImageRenderInfo*, "UnityEngine.UIElements.UIR", "VectorImageRenderInfo");
// Type namespace: UnityEngine.UIElements.UIR
namespace UnityEngine::UIElements::UIR {
  // WARNING Size may be invalid!
  // Autogenerated type: UnityEngine.UIElements.UIR.VectorImageRenderInfo
  // [TokenAttribute] Offset: FFFFFFFF
  class VectorImageRenderInfo : public ::UnityEngine::UIElements::UIR::LinkedPoolItem_1<::UnityEngine::UIElements::UIR::VectorImageRenderInfo*> {
    public:
    public:
    // public System.Int32 useCount
    // Size: 0x4
    // Offset: 0x18
    int useCount;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // public UnityEngine.UIElements.UIR.GradientRemap firstGradientRemap
    // Size: 0x8
    // Offset: 0x20
    ::UnityEngine::UIElements::UIR::GradientRemap* firstGradientRemap;
    // Field size check
    static_assert(sizeof(::UnityEngine::UIElements::UIR::GradientRemap*) == 0x8);
    // public UnityEngine.UIElements.UIR.Alloc gradientSettingsAlloc
    // Size: 0x11
    // Offset: 0x28
    ::UnityEngine::UIElements::UIR::Alloc gradientSettingsAlloc;
    // Field size check
    static_assert(sizeof(::UnityEngine::UIElements::UIR::Alloc) == 0x11);
    public:
    // Get instance field reference: public System.Int32 useCount
    [[deprecated("Use field access instead!")]] int& dyn_useCount();
    // Get instance field reference: public UnityEngine.UIElements.UIR.GradientRemap firstGradientRemap
    [[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::UIR::GradientRemap*& dyn_firstGradientRemap();
    // Get instance field reference: public UnityEngine.UIElements.UIR.Alloc gradientSettingsAlloc
    [[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::UIR::Alloc& dyn_gradientSettingsAlloc();
    // public System.Void Reset()
    // Offset: 0x55D85D8
    void Reset();
    // public System.Void .ctor()
    // Offset: 0x55D855C
    // Implemented from: UnityEngine.UIElements.UIR.LinkedPoolItem`1
    // Base method: System.Void LinkedPoolItem_1::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static VectorImageRenderInfo* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::UIR::VectorImageRenderInfo::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<VectorImageRenderInfo*, creationType>()));
    }
  }; // UnityEngine.UIElements.UIR.VectorImageRenderInfo
  // WARNING Not writing size check since size may be invalid!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::UIElements::UIR::VectorImageRenderInfo::Reset
// Il2CppName: Reset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::UIR::VectorImageRenderInfo::*)()>(&UnityEngine::UIElements::UIR::VectorImageRenderInfo::Reset)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::UIR::VectorImageRenderInfo*), "Reset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::UIR::VectorImageRenderInfo::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
