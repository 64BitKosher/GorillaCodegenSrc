// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.UIElements.UIR.ShaderInfoStorage`1
#include "UnityEngine/UIElements/UIR/ShaderInfoStorage_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::UIElements::UIR
namespace UnityEngine::UIElements::UIR {
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Func`2<T, TResult>
  template<typename T, typename TResult>
  class Func_2;
}
// Completed forward declares
// Type namespace: UnityEngine.UIElements.UIR
namespace UnityEngine::UIElements::UIR {
  // Forward declaring type: ShaderInfoStorageRGBAFloat
  class ShaderInfoStorageRGBAFloat;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::UIElements::UIR::ShaderInfoStorageRGBAFloat);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::UIElements::UIR::ShaderInfoStorageRGBAFloat*, "UnityEngine.UIElements.UIR", "ShaderInfoStorageRGBAFloat");
// Type namespace: UnityEngine.UIElements.UIR
namespace UnityEngine::UIElements::UIR {
  // WARNING Size may be invalid!
  // Autogenerated type: UnityEngine.UIElements.UIR.ShaderInfoStorageRGBAFloat
  // [TokenAttribute] Offset: FFFFFFFF
  class ShaderInfoStorageRGBAFloat : public ::UnityEngine::UIElements::UIR::ShaderInfoStorage_1<::UnityEngine::Color> {
    public:
    // Nested type: ::UnityEngine::UIElements::UIR::ShaderInfoStorageRGBAFloat::$$c
    class $$c;
    // Get static field: static private readonly System.Func`2<UnityEngine.Color,UnityEngine.Color> s_Convert
    static ::System::Func_2<::UnityEngine::Color, ::UnityEngine::Color>* _get_s_Convert();
    // Set static field: static private readonly System.Func`2<UnityEngine.Color,UnityEngine.Color> s_Convert
    static void _set_s_Convert(::System::Func_2<::UnityEngine::Color, ::UnityEngine::Color>* value);
    // public System.Void .ctor(System.Int32 initialSize, System.Int32 maxSize)
    // Offset: 0x55D2EC0
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static ShaderInfoStorageRGBAFloat* New_ctor(int initialSize, int maxSize) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::UIR::ShaderInfoStorageRGBAFloat::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<ShaderInfoStorageRGBAFloat*, creationType>(initialSize, maxSize)));
    }
    // static private System.Void .cctor()
    // Offset: 0x55D2F54
    // Implemented from: UnityEngine.UIElements.UIR.BaseShaderInfoStorage
    // Base method: System.Void BaseShaderInfoStorage::.cctor()
    static void _cctor();
  }; // UnityEngine.UIElements.UIR.ShaderInfoStorageRGBAFloat
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::UIElements::UIR::ShaderInfoStorageRGBAFloat::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::UIElements::UIR::ShaderInfoStorageRGBAFloat::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&UnityEngine::UIElements::UIR::ShaderInfoStorageRGBAFloat::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::UIR::ShaderInfoStorageRGBAFloat*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
