// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Unity.Profiling.ProfilerMarker
#include "Unity/Profiling/ProfilerMarker.hpp"
// Including type: UnityEngine.UIElements.UIR.Implementation.UIRStylePainter
#include "UnityEngine/UIElements/UIR/Implementation/UIRStylePainter.hpp"
// Including type: UnityEngine.UIElements.VisualElement
#include "UnityEngine/UIElements/VisualElement.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Material
  class Material;
  // Forward declaring type: Shader
  class Shader;
  // Skipping declaration: Matrix4x4 because it is already included!
}
// Forward declaring namespace: UnityEngine::UIElements::UIR
namespace UnityEngine::UIElements::UIR {
  // Forward declaring type: MeshHandle
  class MeshHandle;
  // Forward declaring type: RenderChain
  class RenderChain;
  // Forward declaring type: ChainBuilderStats
  struct ChainBuilderStats;
  // Forward declaring type: UIRenderDevice
  class UIRenderDevice;
  // Forward declaring type: RenderChainCommand
  class RenderChainCommand;
}
// Forward declaring namespace: UnityEngine::UIElements
namespace UnityEngine::UIElements {
  // Skipping declaration: MeshGenerationContext because it is already included!
  // Skipping declaration: TextureId because it is already included!
}
// Forward declaring namespace: Unity::Collections
namespace Unity::Collections {
  // Skipping declaration: NativeSlice`1 because it is already included!
}
// Forward declaring namespace: System
namespace System {
  // Skipping declaration: IntPtr because it is already included!
}
// Completed forward declares
// Type namespace: UnityEngine.UIElements.UIR.Implementation
namespace UnityEngine::UIElements::UIR::Implementation {
  // Forward declaring type: CommandGenerator
  class CommandGenerator;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::UIElements::UIR::Implementation::CommandGenerator);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::UIElements::UIR::Implementation::CommandGenerator*, "UnityEngine.UIElements.UIR.Implementation", "CommandGenerator");
// Type namespace: UnityEngine.UIElements.UIR.Implementation
namespace UnityEngine::UIElements::UIR::Implementation {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.UIElements.UIR.Implementation.CommandGenerator
  // [TokenAttribute] Offset: FFFFFFFF
  // [ExtensionAttribute] Offset: FFFFFFFF
  class CommandGenerator : public ::Il2CppObject {
    public:
    // Get static field: static private readonly Unity.Profiling.ProfilerMarker k_GenerateEntries
    static ::Unity::Profiling::ProfilerMarker _get_k_GenerateEntries();
    // Set static field: static private readonly Unity.Profiling.ProfilerMarker k_GenerateEntries
    static void _set_k_GenerateEntries(::Unity::Profiling::ProfilerMarker value);
    // Get static field: static private readonly Unity.Profiling.ProfilerMarker k_ConvertEntriesToCommandsMarker
    static ::Unity::Profiling::ProfilerMarker _get_k_ConvertEntriesToCommandsMarker();
    // Set static field: static private readonly Unity.Profiling.ProfilerMarker k_ConvertEntriesToCommandsMarker
    static void _set_k_ConvertEntriesToCommandsMarker(::Unity::Profiling::ProfilerMarker value);
    // Get static field: static private readonly Unity.Profiling.ProfilerMarker k_GenerateClosingCommandsMarker
    static ::Unity::Profiling::ProfilerMarker _get_k_GenerateClosingCommandsMarker();
    // Set static field: static private readonly Unity.Profiling.ProfilerMarker k_GenerateClosingCommandsMarker
    static void _set_k_GenerateClosingCommandsMarker(::Unity::Profiling::ProfilerMarker value);
    // Get static field: static private readonly Unity.Profiling.ProfilerMarker k_NudgeVerticesMarker
    static ::Unity::Profiling::ProfilerMarker _get_k_NudgeVerticesMarker();
    // Set static field: static private readonly Unity.Profiling.ProfilerMarker k_NudgeVerticesMarker
    static void _set_k_NudgeVerticesMarker(::Unity::Profiling::ProfilerMarker value);
    // Get static field: static private readonly Unity.Profiling.ProfilerMarker k_UpdateOpacityIdMarker
    static ::Unity::Profiling::ProfilerMarker _get_k_UpdateOpacityIdMarker();
    // Set static field: static private readonly Unity.Profiling.ProfilerMarker k_UpdateOpacityIdMarker
    static void _set_k_UpdateOpacityIdMarker(::Unity::Profiling::ProfilerMarker value);
    // Get static field: static private readonly Unity.Profiling.ProfilerMarker k_ComputeTransformMatrixMarker
    static ::Unity::Profiling::ProfilerMarker _get_k_ComputeTransformMatrixMarker();
    // Set static field: static private readonly Unity.Profiling.ProfilerMarker k_ComputeTransformMatrixMarker
    static void _set_k_ComputeTransformMatrixMarker(::Unity::Profiling::ProfilerMarker value);
    // Get static field: static private UnityEngine.Material s_blitMaterial_LinearToGamma
    static ::UnityEngine::Material* _get_s_blitMaterial_LinearToGamma();
    // Set static field: static private UnityEngine.Material s_blitMaterial_LinearToGamma
    static void _set_s_blitMaterial_LinearToGamma(::UnityEngine::Material* value);
    // Get static field: static private UnityEngine.Material s_blitMaterial_GammaToLinear
    static ::UnityEngine::Material* _get_s_blitMaterial_GammaToLinear();
    // Set static field: static private UnityEngine.Material s_blitMaterial_GammaToLinear
    static void _set_s_blitMaterial_GammaToLinear(::UnityEngine::Material* value);
    // Get static field: static private UnityEngine.Material s_blitMaterial_NoChange
    static ::UnityEngine::Material* _get_s_blitMaterial_NoChange();
    // Set static field: static private UnityEngine.Material s_blitMaterial_NoChange
    static void _set_s_blitMaterial_NoChange(::UnityEngine::Material* value);
    // Get static field: static private UnityEngine.Shader s_blitShader
    static ::UnityEngine::Shader* _get_s_blitShader();
    // Set static field: static private UnityEngine.Shader s_blitShader
    static void _set_s_blitShader(::UnityEngine::Shader* value);
    // static private System.Void GetVerticesTransformInfo(UnityEngine.UIElements.VisualElement ve, out UnityEngine.Matrix4x4 transform)
    // Offset: 0x55E0B44
    static void GetVerticesTransformInfo(::UnityEngine::UIElements::VisualElement* ve, ByRef<::UnityEngine::Matrix4x4> transform);
    // static System.Void ComputeTransformMatrix(UnityEngine.UIElements.VisualElement ve, UnityEngine.UIElements.VisualElement ancestor, out UnityEngine.Matrix4x4 result)
    // Offset: 0x55E0CCC
    static void ComputeTransformMatrix(::UnityEngine::UIElements::VisualElement* ve, ::UnityEngine::UIElements::VisualElement* ancestor, ByRef<::UnityEngine::Matrix4x4> result);
    // static private System.Boolean IsParentOrAncestorOf(UnityEngine.UIElements.VisualElement ve, UnityEngine.UIElements.VisualElement child)
    // Offset: 0x55E0DF0
    static bool IsParentOrAncestorOf(::UnityEngine::UIElements::VisualElement* ve, ::UnityEngine::UIElements::VisualElement* child);
    // static public UnityEngine.UIElements.UIR.Implementation.UIRStylePainter/ClosingInfo PaintElement(UnityEngine.UIElements.UIR.RenderChain renderChain, UnityEngine.UIElements.VisualElement ve, ref UnityEngine.UIElements.UIR.ChainBuilderStats stats)
    // Offset: 0x55E0E7C
    static ::UnityEngine::UIElements::UIR::Implementation::UIRStylePainter::ClosingInfo PaintElement(::UnityEngine::UIElements::UIR::RenderChain* renderChain, ::UnityEngine::UIElements::VisualElement* ve, ByRef<::UnityEngine::UIElements::UIR::ChainBuilderStats> stats);
    // static private System.Void InvokeGenerateVisualContent(UnityEngine.UIElements.VisualElement ve, UnityEngine.UIElements.MeshGenerationContext ctx)
    // Offset: 0x55E2590
    static void InvokeGenerateVisualContent(::UnityEngine::UIElements::VisualElement* ve, ::UnityEngine::UIElements::MeshGenerationContext* ctx);
    // static private UnityEngine.Material CreateBlitShader(System.Single colorConversion)
    // Offset: 0x55E3224
    static ::UnityEngine::Material* CreateBlitShader(float colorConversion);
    // static private UnityEngine.Material GetBlitMaterial(UnityEngine.UIElements.VisualElement/RenderTargetMode mode)
    // Offset: 0x55E2E20
    static ::UnityEngine::Material* GetBlitMaterial(::UnityEngine::UIElements::VisualElement::RenderTargetMode mode);
    // static public System.Void ClosePaintElement(UnityEngine.UIElements.VisualElement ve, UnityEngine.UIElements.UIR.Implementation.UIRStylePainter/ClosingInfo closingInfo, UnityEngine.UIElements.UIR.RenderChain renderChain, ref UnityEngine.UIElements.UIR.ChainBuilderStats stats)
    // Offset: 0x55E3448
    static void ClosePaintElement(::UnityEngine::UIElements::VisualElement* ve, ::UnityEngine::UIElements::UIR::Implementation::UIRStylePainter::ClosingInfo closingInfo, ::UnityEngine::UIElements::UIR::RenderChain* renderChain, ByRef<::UnityEngine::UIElements::UIR::ChainBuilderStats> stats);
    // static private System.Void UpdateOrAllocate(ref UnityEngine.UIElements.UIR.MeshHandle data, System.Int32 vertexCount, System.Int32 indexCount, UnityEngine.UIElements.UIR.UIRenderDevice device, out Unity.Collections.NativeSlice`1<UnityEngine.UIElements.Vertex> verts, out Unity.Collections.NativeSlice`1<System.UInt16> indices, out System.UInt16 indexOffset, ref UnityEngine.UIElements.UIR.ChainBuilderStats stats)
    // Offset: 0x55E267C
    static void UpdateOrAllocate(ByRef<::UnityEngine::UIElements::UIR::MeshHandle*> data, int vertexCount, int indexCount, ::UnityEngine::UIElements::UIR::UIRenderDevice* device, ByRef<::Unity::Collections::NativeSlice_1<::UnityEngine::UIElements::Vertex>> verts, ByRef<::Unity::Collections::NativeSlice_1<uint16_t>> indices, ByRef<uint16_t> indexOffset, ByRef<::UnityEngine::UIElements::UIR::ChainBuilderStats> stats);
    // static public System.Void UpdateOpacityId(UnityEngine.UIElements.VisualElement ve, UnityEngine.UIElements.UIR.RenderChain renderChain)
    // Offset: 0x55E3688
    static void UpdateOpacityId(::UnityEngine::UIElements::VisualElement* ve, ::UnityEngine::UIElements::UIR::RenderChain* renderChain);
    // static private System.Void DoUpdateOpacityId(UnityEngine.UIElements.VisualElement ve, UnityEngine.UIElements.UIR.RenderChain renderChain, UnityEngine.UIElements.UIR.MeshHandle mesh)
    // Offset: 0x55E3738
    static void DoUpdateOpacityId(::UnityEngine::UIElements::VisualElement* ve, ::UnityEngine::UIElements::UIR::RenderChain* renderChain, ::UnityEngine::UIElements::UIR::MeshHandle* mesh);
    // static public System.Boolean NudgeVerticesToNewSpace(UnityEngine.UIElements.VisualElement ve, UnityEngine.UIElements.UIR.RenderChain renderChain, UnityEngine.UIElements.UIR.UIRenderDevice device)
    // Offset: 0x55E3820
    static bool NudgeVerticesToNewSpace(::UnityEngine::UIElements::VisualElement* ve, ::UnityEngine::UIElements::UIR::RenderChain* renderChain, ::UnityEngine::UIElements::UIR::UIRenderDevice* device);
    // static private System.Void PrepareNudgeVertices(UnityEngine.UIElements.VisualElement ve, UnityEngine.UIElements.UIR.UIRenderDevice device, UnityEngine.UIElements.UIR.MeshHandle mesh, out System.IntPtr src, out System.IntPtr dst, out System.Int32 count)
    // Offset: 0x55E3BA4
    static void PrepareNudgeVertices(::UnityEngine::UIElements::VisualElement* ve, ::UnityEngine::UIElements::UIR::UIRenderDevice* device, ::UnityEngine::UIElements::UIR::MeshHandle* mesh, ByRef<::System::IntPtr> src, ByRef<::System::IntPtr> dst, ByRef<int> count);
    // static private UnityEngine.UIElements.UIR.RenderChainCommand InjectMeshDrawCommand(UnityEngine.UIElements.UIR.RenderChain renderChain, UnityEngine.UIElements.VisualElement ve, ref UnityEngine.UIElements.UIR.RenderChainCommand cmdPrev, ref UnityEngine.UIElements.UIR.RenderChainCommand cmdNext, UnityEngine.UIElements.UIR.MeshHandle mesh, System.Int32 indexCount, System.Int32 indexOffset, UnityEngine.Material material, UnityEngine.UIElements.TextureId texture, System.Int32 stencilRef)
    // Offset: 0x55E294C
    static ::UnityEngine::UIElements::UIR::RenderChainCommand* InjectMeshDrawCommand(::UnityEngine::UIElements::UIR::RenderChain* renderChain, ::UnityEngine::UIElements::VisualElement* ve, ByRef<::UnityEngine::UIElements::UIR::RenderChainCommand*> cmdPrev, ByRef<::UnityEngine::UIElements::UIR::RenderChainCommand*> cmdNext, ::UnityEngine::UIElements::UIR::MeshHandle* mesh, int indexCount, int indexOffset, ::UnityEngine::Material* material, ::UnityEngine::UIElements::TextureId texture, int stencilRef);
    // static private UnityEngine.UIElements.UIR.RenderChainCommand InjectClosingMeshDrawCommand(UnityEngine.UIElements.UIR.RenderChain renderChain, UnityEngine.UIElements.VisualElement ve, ref UnityEngine.UIElements.UIR.RenderChainCommand cmdPrev, ref UnityEngine.UIElements.UIR.RenderChainCommand cmdNext, UnityEngine.UIElements.UIR.MeshHandle mesh, System.Int32 indexCount, System.Int32 indexOffset, UnityEngine.Material material, UnityEngine.UIElements.TextureId texture, System.Int32 stencilRef)
    // Offset: 0x55E30F0
    static ::UnityEngine::UIElements::UIR::RenderChainCommand* InjectClosingMeshDrawCommand(::UnityEngine::UIElements::UIR::RenderChain* renderChain, ::UnityEngine::UIElements::VisualElement* ve, ByRef<::UnityEngine::UIElements::UIR::RenderChainCommand*> cmdPrev, ByRef<::UnityEngine::UIElements::UIR::RenderChainCommand*> cmdNext, ::UnityEngine::UIElements::UIR::MeshHandle* mesh, int indexCount, int indexOffset, ::UnityEngine::Material* material, ::UnityEngine::UIElements::TextureId texture, int stencilRef);
    // static private System.Void FindCommandInsertionPoint(UnityEngine.UIElements.VisualElement ve, out UnityEngine.UIElements.UIR.RenderChainCommand prev, out UnityEngine.UIElements.UIR.RenderChainCommand next)
    // Offset: 0x55E2770
    static void FindCommandInsertionPoint(::UnityEngine::UIElements::VisualElement* ve, ByRef<::UnityEngine::UIElements::UIR::RenderChainCommand*> prev, ByRef<::UnityEngine::UIElements::UIR::RenderChainCommand*> next);
    // static private System.Void FindClosingCommandInsertionPoint(UnityEngine.UIElements.VisualElement ve, out UnityEngine.UIElements.UIR.RenderChainCommand prev, out UnityEngine.UIElements.UIR.RenderChainCommand next)
    // Offset: 0x55E2B68
    static void FindClosingCommandInsertionPoint(::UnityEngine::UIElements::VisualElement* ve, ByRef<::UnityEngine::UIElements::UIR::RenderChainCommand*> prev, ByRef<::UnityEngine::UIElements::UIR::RenderChainCommand*> next);
    // static private System.Void InjectCommandInBetween(UnityEngine.UIElements.UIR.RenderChain renderChain, UnityEngine.UIElements.UIR.RenderChainCommand cmd, ref UnityEngine.UIElements.UIR.RenderChainCommand prev, ref UnityEngine.UIElements.UIR.RenderChainCommand next)
    // Offset: 0x55E2A78
    static void InjectCommandInBetween(::UnityEngine::UIElements::UIR::RenderChain* renderChain, ::UnityEngine::UIElements::UIR::RenderChainCommand* cmd, ByRef<::UnityEngine::UIElements::UIR::RenderChainCommand*> prev, ByRef<::UnityEngine::UIElements::UIR::RenderChainCommand*> next);
    // static private System.Void InjectClosingCommandInBetween(UnityEngine.UIElements.UIR.RenderChain renderChain, UnityEngine.UIElements.UIR.RenderChainCommand cmd, ref UnityEngine.UIElements.UIR.RenderChainCommand prev, ref UnityEngine.UIElements.UIR.RenderChainCommand next)
    // Offset: 0x55E2CF0
    static void InjectClosingCommandInBetween(::UnityEngine::UIElements::UIR::RenderChain* renderChain, ::UnityEngine::UIElements::UIR::RenderChainCommand* cmd, ByRef<::UnityEngine::UIElements::UIR::RenderChainCommand*> prev, ByRef<::UnityEngine::UIElements::UIR::RenderChainCommand*> next);
    // static public System.Void ResetCommands(UnityEngine.UIElements.UIR.RenderChain renderChain, UnityEngine.UIElements.VisualElement ve)
    // Offset: 0x55E2288
    static void ResetCommands(::UnityEngine::UIElements::UIR::RenderChain* renderChain, ::UnityEngine::UIElements::VisualElement* ve);
    // static private System.Void .cctor()
    // Offset: 0x55E3CB0
    static void _cctor();
  }; // UnityEngine.UIElements.UIR.Implementation.CommandGenerator
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::UIElements::UIR::Implementation::CommandGenerator::GetVerticesTransformInfo
// Il2CppName: GetVerticesTransformInfo
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::UIElements::VisualElement*, ByRef<::UnityEngine::Matrix4x4>)>(&UnityEngine::UIElements::UIR::Implementation::CommandGenerator::GetVerticesTransformInfo)> {
  static const MethodInfo* get() {
    static auto* ve = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "VisualElement")->byval_arg;
    static auto* transform = &::il2cpp_utils::GetClassFromName("UnityEngine", "Matrix4x4")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::UIR::Implementation::CommandGenerator*), "GetVerticesTransformInfo", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ve, transform});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::UIR::Implementation::CommandGenerator::ComputeTransformMatrix
// Il2CppName: ComputeTransformMatrix
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::UIElements::VisualElement*, ::UnityEngine::UIElements::VisualElement*, ByRef<::UnityEngine::Matrix4x4>)>(&UnityEngine::UIElements::UIR::Implementation::CommandGenerator::ComputeTransformMatrix)> {
  static const MethodInfo* get() {
    static auto* ve = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "VisualElement")->byval_arg;
    static auto* ancestor = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "VisualElement")->byval_arg;
    static auto* result = &::il2cpp_utils::GetClassFromName("UnityEngine", "Matrix4x4")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::UIR::Implementation::CommandGenerator*), "ComputeTransformMatrix", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ve, ancestor, result});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::UIR::Implementation::CommandGenerator::IsParentOrAncestorOf
// Il2CppName: IsParentOrAncestorOf
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::UnityEngine::UIElements::VisualElement*, ::UnityEngine::UIElements::VisualElement*)>(&UnityEngine::UIElements::UIR::Implementation::CommandGenerator::IsParentOrAncestorOf)> {
  static const MethodInfo* get() {
    static auto* ve = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "VisualElement")->byval_arg;
    static auto* child = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "VisualElement")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::UIR::Implementation::CommandGenerator*), "IsParentOrAncestorOf", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ve, child});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::UIR::Implementation::CommandGenerator::PaintElement
// Il2CppName: PaintElement
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::UIR::Implementation::UIRStylePainter::ClosingInfo (*)(::UnityEngine::UIElements::UIR::RenderChain*, ::UnityEngine::UIElements::VisualElement*, ByRef<::UnityEngine::UIElements::UIR::ChainBuilderStats>)>(&UnityEngine::UIElements::UIR::Implementation::CommandGenerator::PaintElement)> {
  static const MethodInfo* get() {
    static auto* renderChain = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements.UIR", "RenderChain")->byval_arg;
    static auto* ve = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "VisualElement")->byval_arg;
    static auto* stats = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements.UIR", "ChainBuilderStats")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::UIR::Implementation::CommandGenerator*), "PaintElement", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{renderChain, ve, stats});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::UIR::Implementation::CommandGenerator::InvokeGenerateVisualContent
// Il2CppName: InvokeGenerateVisualContent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::UIElements::VisualElement*, ::UnityEngine::UIElements::MeshGenerationContext*)>(&UnityEngine::UIElements::UIR::Implementation::CommandGenerator::InvokeGenerateVisualContent)> {
  static const MethodInfo* get() {
    static auto* ve = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "VisualElement")->byval_arg;
    static auto* ctx = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "MeshGenerationContext")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::UIR::Implementation::CommandGenerator*), "InvokeGenerateVisualContent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ve, ctx});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::UIR::Implementation::CommandGenerator::CreateBlitShader
// Il2CppName: CreateBlitShader
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Material* (*)(float)>(&UnityEngine::UIElements::UIR::Implementation::CommandGenerator::CreateBlitShader)> {
  static const MethodInfo* get() {
    static auto* colorConversion = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::UIR::Implementation::CommandGenerator*), "CreateBlitShader", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{colorConversion});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::UIR::Implementation::CommandGenerator::GetBlitMaterial
// Il2CppName: GetBlitMaterial
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Material* (*)(::UnityEngine::UIElements::VisualElement::RenderTargetMode)>(&UnityEngine::UIElements::UIR::Implementation::CommandGenerator::GetBlitMaterial)> {
  static const MethodInfo* get() {
    static auto* mode = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "VisualElement/RenderTargetMode")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::UIR::Implementation::CommandGenerator*), "GetBlitMaterial", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{mode});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::UIR::Implementation::CommandGenerator::ClosePaintElement
// Il2CppName: ClosePaintElement
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::UIElements::VisualElement*, ::UnityEngine::UIElements::UIR::Implementation::UIRStylePainter::ClosingInfo, ::UnityEngine::UIElements::UIR::RenderChain*, ByRef<::UnityEngine::UIElements::UIR::ChainBuilderStats>)>(&UnityEngine::UIElements::UIR::Implementation::CommandGenerator::ClosePaintElement)> {
  static const MethodInfo* get() {
    static auto* ve = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "VisualElement")->byval_arg;
    static auto* closingInfo = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements.UIR.Implementation", "UIRStylePainter/ClosingInfo")->byval_arg;
    static auto* renderChain = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements.UIR", "RenderChain")->byval_arg;
    static auto* stats = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements.UIR", "ChainBuilderStats")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::UIR::Implementation::CommandGenerator*), "ClosePaintElement", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ve, closingInfo, renderChain, stats});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::UIR::Implementation::CommandGenerator::UpdateOrAllocate
// Il2CppName: UpdateOrAllocate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(ByRef<::UnityEngine::UIElements::UIR::MeshHandle*>, int, int, ::UnityEngine::UIElements::UIR::UIRenderDevice*, ByRef<::Unity::Collections::NativeSlice_1<::UnityEngine::UIElements::Vertex>>, ByRef<::Unity::Collections::NativeSlice_1<uint16_t>>, ByRef<uint16_t>, ByRef<::UnityEngine::UIElements::UIR::ChainBuilderStats>)>(&UnityEngine::UIElements::UIR::Implementation::CommandGenerator::UpdateOrAllocate)> {
  static const MethodInfo* get() {
    static auto* data = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements.UIR", "MeshHandle")->this_arg;
    static auto* vertexCount = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* indexCount = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* device = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements.UIR", "UIRenderDevice")->byval_arg;
    static auto* verts = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("Unity.Collections", "NativeSlice`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "Vertex")})->this_arg;
    static auto* indices = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("Unity.Collections", "NativeSlice`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "UInt16")})->this_arg;
    static auto* indexOffset = &::il2cpp_utils::GetClassFromName("System", "UInt16")->this_arg;
    static auto* stats = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements.UIR", "ChainBuilderStats")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::UIR::Implementation::CommandGenerator*), "UpdateOrAllocate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{data, vertexCount, indexCount, device, verts, indices, indexOffset, stats});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::UIR::Implementation::CommandGenerator::UpdateOpacityId
// Il2CppName: UpdateOpacityId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::UIElements::VisualElement*, ::UnityEngine::UIElements::UIR::RenderChain*)>(&UnityEngine::UIElements::UIR::Implementation::CommandGenerator::UpdateOpacityId)> {
  static const MethodInfo* get() {
    static auto* ve = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "VisualElement")->byval_arg;
    static auto* renderChain = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements.UIR", "RenderChain")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::UIR::Implementation::CommandGenerator*), "UpdateOpacityId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ve, renderChain});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::UIR::Implementation::CommandGenerator::DoUpdateOpacityId
// Il2CppName: DoUpdateOpacityId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::UIElements::VisualElement*, ::UnityEngine::UIElements::UIR::RenderChain*, ::UnityEngine::UIElements::UIR::MeshHandle*)>(&UnityEngine::UIElements::UIR::Implementation::CommandGenerator::DoUpdateOpacityId)> {
  static const MethodInfo* get() {
    static auto* ve = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "VisualElement")->byval_arg;
    static auto* renderChain = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements.UIR", "RenderChain")->byval_arg;
    static auto* mesh = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements.UIR", "MeshHandle")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::UIR::Implementation::CommandGenerator*), "DoUpdateOpacityId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ve, renderChain, mesh});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::UIR::Implementation::CommandGenerator::NudgeVerticesToNewSpace
// Il2CppName: NudgeVerticesToNewSpace
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::UnityEngine::UIElements::VisualElement*, ::UnityEngine::UIElements::UIR::RenderChain*, ::UnityEngine::UIElements::UIR::UIRenderDevice*)>(&UnityEngine::UIElements::UIR::Implementation::CommandGenerator::NudgeVerticesToNewSpace)> {
  static const MethodInfo* get() {
    static auto* ve = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "VisualElement")->byval_arg;
    static auto* renderChain = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements.UIR", "RenderChain")->byval_arg;
    static auto* device = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements.UIR", "UIRenderDevice")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::UIR::Implementation::CommandGenerator*), "NudgeVerticesToNewSpace", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ve, renderChain, device});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::UIR::Implementation::CommandGenerator::PrepareNudgeVertices
// Il2CppName: PrepareNudgeVertices
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::UIElements::VisualElement*, ::UnityEngine::UIElements::UIR::UIRenderDevice*, ::UnityEngine::UIElements::UIR::MeshHandle*, ByRef<::System::IntPtr>, ByRef<::System::IntPtr>, ByRef<int>)>(&UnityEngine::UIElements::UIR::Implementation::CommandGenerator::PrepareNudgeVertices)> {
  static const MethodInfo* get() {
    static auto* ve = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "VisualElement")->byval_arg;
    static auto* device = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements.UIR", "UIRenderDevice")->byval_arg;
    static auto* mesh = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements.UIR", "MeshHandle")->byval_arg;
    static auto* src = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->this_arg;
    static auto* dst = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->this_arg;
    static auto* count = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::UIR::Implementation::CommandGenerator*), "PrepareNudgeVertices", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ve, device, mesh, src, dst, count});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::UIR::Implementation::CommandGenerator::InjectMeshDrawCommand
// Il2CppName: InjectMeshDrawCommand
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::UIR::RenderChainCommand* (*)(::UnityEngine::UIElements::UIR::RenderChain*, ::UnityEngine::UIElements::VisualElement*, ByRef<::UnityEngine::UIElements::UIR::RenderChainCommand*>, ByRef<::UnityEngine::UIElements::UIR::RenderChainCommand*>, ::UnityEngine::UIElements::UIR::MeshHandle*, int, int, ::UnityEngine::Material*, ::UnityEngine::UIElements::TextureId, int)>(&UnityEngine::UIElements::UIR::Implementation::CommandGenerator::InjectMeshDrawCommand)> {
  static const MethodInfo* get() {
    static auto* renderChain = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements.UIR", "RenderChain")->byval_arg;
    static auto* ve = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "VisualElement")->byval_arg;
    static auto* cmdPrev = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements.UIR", "RenderChainCommand")->this_arg;
    static auto* cmdNext = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements.UIR", "RenderChainCommand")->this_arg;
    static auto* mesh = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements.UIR", "MeshHandle")->byval_arg;
    static auto* indexCount = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* indexOffset = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* material = &::il2cpp_utils::GetClassFromName("UnityEngine", "Material")->byval_arg;
    static auto* texture = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "TextureId")->byval_arg;
    static auto* stencilRef = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::UIR::Implementation::CommandGenerator*), "InjectMeshDrawCommand", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{renderChain, ve, cmdPrev, cmdNext, mesh, indexCount, indexOffset, material, texture, stencilRef});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::UIR::Implementation::CommandGenerator::InjectClosingMeshDrawCommand
// Il2CppName: InjectClosingMeshDrawCommand
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::UIR::RenderChainCommand* (*)(::UnityEngine::UIElements::UIR::RenderChain*, ::UnityEngine::UIElements::VisualElement*, ByRef<::UnityEngine::UIElements::UIR::RenderChainCommand*>, ByRef<::UnityEngine::UIElements::UIR::RenderChainCommand*>, ::UnityEngine::UIElements::UIR::MeshHandle*, int, int, ::UnityEngine::Material*, ::UnityEngine::UIElements::TextureId, int)>(&UnityEngine::UIElements::UIR::Implementation::CommandGenerator::InjectClosingMeshDrawCommand)> {
  static const MethodInfo* get() {
    static auto* renderChain = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements.UIR", "RenderChain")->byval_arg;
    static auto* ve = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "VisualElement")->byval_arg;
    static auto* cmdPrev = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements.UIR", "RenderChainCommand")->this_arg;
    static auto* cmdNext = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements.UIR", "RenderChainCommand")->this_arg;
    static auto* mesh = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements.UIR", "MeshHandle")->byval_arg;
    static auto* indexCount = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* indexOffset = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* material = &::il2cpp_utils::GetClassFromName("UnityEngine", "Material")->byval_arg;
    static auto* texture = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "TextureId")->byval_arg;
    static auto* stencilRef = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::UIR::Implementation::CommandGenerator*), "InjectClosingMeshDrawCommand", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{renderChain, ve, cmdPrev, cmdNext, mesh, indexCount, indexOffset, material, texture, stencilRef});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::UIR::Implementation::CommandGenerator::FindCommandInsertionPoint
// Il2CppName: FindCommandInsertionPoint
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::UIElements::VisualElement*, ByRef<::UnityEngine::UIElements::UIR::RenderChainCommand*>, ByRef<::UnityEngine::UIElements::UIR::RenderChainCommand*>)>(&UnityEngine::UIElements::UIR::Implementation::CommandGenerator::FindCommandInsertionPoint)> {
  static const MethodInfo* get() {
    static auto* ve = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "VisualElement")->byval_arg;
    static auto* prev = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements.UIR", "RenderChainCommand")->this_arg;
    static auto* next = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements.UIR", "RenderChainCommand")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::UIR::Implementation::CommandGenerator*), "FindCommandInsertionPoint", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ve, prev, next});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::UIR::Implementation::CommandGenerator::FindClosingCommandInsertionPoint
// Il2CppName: FindClosingCommandInsertionPoint
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::UIElements::VisualElement*, ByRef<::UnityEngine::UIElements::UIR::RenderChainCommand*>, ByRef<::UnityEngine::UIElements::UIR::RenderChainCommand*>)>(&UnityEngine::UIElements::UIR::Implementation::CommandGenerator::FindClosingCommandInsertionPoint)> {
  static const MethodInfo* get() {
    static auto* ve = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "VisualElement")->byval_arg;
    static auto* prev = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements.UIR", "RenderChainCommand")->this_arg;
    static auto* next = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements.UIR", "RenderChainCommand")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::UIR::Implementation::CommandGenerator*), "FindClosingCommandInsertionPoint", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ve, prev, next});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::UIR::Implementation::CommandGenerator::InjectCommandInBetween
// Il2CppName: InjectCommandInBetween
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::UIElements::UIR::RenderChain*, ::UnityEngine::UIElements::UIR::RenderChainCommand*, ByRef<::UnityEngine::UIElements::UIR::RenderChainCommand*>, ByRef<::UnityEngine::UIElements::UIR::RenderChainCommand*>)>(&UnityEngine::UIElements::UIR::Implementation::CommandGenerator::InjectCommandInBetween)> {
  static const MethodInfo* get() {
    static auto* renderChain = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements.UIR", "RenderChain")->byval_arg;
    static auto* cmd = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements.UIR", "RenderChainCommand")->byval_arg;
    static auto* prev = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements.UIR", "RenderChainCommand")->this_arg;
    static auto* next = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements.UIR", "RenderChainCommand")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::UIR::Implementation::CommandGenerator*), "InjectCommandInBetween", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{renderChain, cmd, prev, next});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::UIR::Implementation::CommandGenerator::InjectClosingCommandInBetween
// Il2CppName: InjectClosingCommandInBetween
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::UIElements::UIR::RenderChain*, ::UnityEngine::UIElements::UIR::RenderChainCommand*, ByRef<::UnityEngine::UIElements::UIR::RenderChainCommand*>, ByRef<::UnityEngine::UIElements::UIR::RenderChainCommand*>)>(&UnityEngine::UIElements::UIR::Implementation::CommandGenerator::InjectClosingCommandInBetween)> {
  static const MethodInfo* get() {
    static auto* renderChain = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements.UIR", "RenderChain")->byval_arg;
    static auto* cmd = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements.UIR", "RenderChainCommand")->byval_arg;
    static auto* prev = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements.UIR", "RenderChainCommand")->this_arg;
    static auto* next = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements.UIR", "RenderChainCommand")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::UIR::Implementation::CommandGenerator*), "InjectClosingCommandInBetween", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{renderChain, cmd, prev, next});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::UIR::Implementation::CommandGenerator::ResetCommands
// Il2CppName: ResetCommands
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::UIElements::UIR::RenderChain*, ::UnityEngine::UIElements::VisualElement*)>(&UnityEngine::UIElements::UIR::Implementation::CommandGenerator::ResetCommands)> {
  static const MethodInfo* get() {
    static auto* renderChain = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements.UIR", "RenderChain")->byval_arg;
    static auto* ve = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "VisualElement")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::UIR::Implementation::CommandGenerator*), "ResetCommands", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{renderChain, ve});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::UIR::Implementation::CommandGenerator::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&UnityEngine::UIElements::UIR::Implementation::CommandGenerator::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::UIR::Implementation::CommandGenerator*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
