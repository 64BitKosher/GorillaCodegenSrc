// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::UIElements::UIR
namespace UnityEngine::UIElements::UIR {
  // Forward declaring type: RenderChain
  class RenderChain;
  // Forward declaring type: ChainBuilderStats
  struct ChainBuilderStats;
  // Forward declaring type: UIRenderDevice
  class UIRenderDevice;
}
// Forward declaring namespace: UnityEngine::UIElements
namespace UnityEngine::UIElements {
  // Forward declaring type: VisualElement
  class VisualElement;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Matrix4x4
  struct Matrix4x4;
  // Forward declaring type: Vector4
  struct Vector4;
}
// Forward declaring namespace: UnityEngine::UIElements::UIR::Implementation
namespace UnityEngine::UIElements::UIR::Implementation {
  // Forward declaring type: ClipMethod
  struct ClipMethod;
}
// Completed forward declares
// Type namespace: UnityEngine.UIElements.UIR.Implementation
namespace UnityEngine::UIElements::UIR::Implementation {
  // Forward declaring type: RenderEvents
  class RenderEvents;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::UIElements::UIR::Implementation::RenderEvents);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::UIElements::UIR::Implementation::RenderEvents*, "UnityEngine.UIElements.UIR.Implementation", "RenderEvents");
// Type namespace: UnityEngine.UIElements.UIR.Implementation
namespace UnityEngine::UIElements::UIR::Implementation {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.UIElements.UIR.Implementation.RenderEvents
  // [TokenAttribute] Offset: FFFFFFFF
  class RenderEvents : public ::Il2CppObject {
    public:
    // Get static field: static private readonly System.Single VisibilityTreshold
    static float _get_VisibilityTreshold();
    // Set static field: static private readonly System.Single VisibilityTreshold
    static void _set_VisibilityTreshold(float value);
    // static System.Void ProcessOnClippingChanged(UnityEngine.UIElements.UIR.RenderChain renderChain, UnityEngine.UIElements.VisualElement ve, System.UInt32 dirtyID, ref UnityEngine.UIElements.UIR.ChainBuilderStats stats)
    // Offset: 0x55E4000
    static void ProcessOnClippingChanged(::UnityEngine::UIElements::UIR::RenderChain* renderChain, ::UnityEngine::UIElements::VisualElement* ve, uint dirtyID, ByRef<::UnityEngine::UIElements::UIR::ChainBuilderStats> stats);
    // static System.Void ProcessOnOpacityChanged(UnityEngine.UIElements.UIR.RenderChain renderChain, UnityEngine.UIElements.VisualElement ve, System.UInt32 dirtyID, ref UnityEngine.UIElements.UIR.ChainBuilderStats stats)
    // Offset: 0x55E464C
    static void ProcessOnOpacityChanged(::UnityEngine::UIElements::UIR::RenderChain* renderChain, ::UnityEngine::UIElements::VisualElement* ve, uint dirtyID, ByRef<::UnityEngine::UIElements::UIR::ChainBuilderStats> stats);
    // static System.Void ProcessOnColorChanged(UnityEngine.UIElements.UIR.RenderChain renderChain, UnityEngine.UIElements.VisualElement ve, System.UInt32 dirtyID, ref UnityEngine.UIElements.UIR.ChainBuilderStats stats)
    // Offset: 0x55E4A98
    static void ProcessOnColorChanged(::UnityEngine::UIElements::UIR::RenderChain* renderChain, ::UnityEngine::UIElements::VisualElement* ve, uint dirtyID, ByRef<::UnityEngine::UIElements::UIR::ChainBuilderStats> stats);
    // static System.Void ProcessOnTransformOrSizeChanged(UnityEngine.UIElements.UIR.RenderChain renderChain, UnityEngine.UIElements.VisualElement ve, System.UInt32 dirtyID, ref UnityEngine.UIElements.UIR.ChainBuilderStats stats)
    // Offset: 0x55E4D64
    static void ProcessOnTransformOrSizeChanged(::UnityEngine::UIElements::UIR::RenderChain* renderChain, ::UnityEngine::UIElements::VisualElement* ve, uint dirtyID, ByRef<::UnityEngine::UIElements::UIR::ChainBuilderStats> stats);
    // static System.Void ProcessOnVisualsChanged(UnityEngine.UIElements.UIR.RenderChain renderChain, UnityEngine.UIElements.VisualElement ve, System.UInt32 dirtyID, ref UnityEngine.UIElements.UIR.ChainBuilderStats stats)
    // Offset: 0x55E51A8
    static void ProcessOnVisualsChanged(::UnityEngine::UIElements::UIR::RenderChain* renderChain, ::UnityEngine::UIElements::VisualElement* ve, uint dirtyID, ByRef<::UnityEngine::UIElements::UIR::ChainBuilderStats> stats);
    // static private UnityEngine.Matrix4x4 GetTransformIDTransformInfo(UnityEngine.UIElements.VisualElement ve)
    // Offset: 0x55E5778
    static ::UnityEngine::Matrix4x4 GetTransformIDTransformInfo(::UnityEngine::UIElements::VisualElement* ve);
    // static private UnityEngine.Vector4 GetClipRectIDClipInfo(UnityEngine.UIElements.VisualElement ve)
    // Offset: 0x55E58C0
    static ::UnityEngine::Vector4 GetClipRectIDClipInfo(::UnityEngine::UIElements::VisualElement* ve);
    // static System.UInt32 DepthFirstOnChildAdded(UnityEngine.UIElements.UIR.RenderChain renderChain, UnityEngine.UIElements.VisualElement parent, UnityEngine.UIElements.VisualElement ve, System.Int32 index, System.Boolean resetState)
    // Offset: 0x55E5A44
    static uint DepthFirstOnChildAdded(::UnityEngine::UIElements::UIR::RenderChain* renderChain, ::UnityEngine::UIElements::VisualElement* parent, ::UnityEngine::UIElements::VisualElement* ve, int index, bool resetState);
    // static System.UInt32 DepthFirstOnChildRemoving(UnityEngine.UIElements.UIR.RenderChain renderChain, UnityEngine.UIElements.VisualElement ve)
    // Offset: 0x55E6C84
    static uint DepthFirstOnChildRemoving(::UnityEngine::UIElements::UIR::RenderChain* renderChain, ::UnityEngine::UIElements::VisualElement* ve);
    // static private System.Void DepthFirstOnClippingChanged(UnityEngine.UIElements.UIR.RenderChain renderChain, UnityEngine.UIElements.VisualElement parent, UnityEngine.UIElements.VisualElement ve, System.UInt32 dirtyID, System.Boolean hierarchical, System.Boolean isRootOfChange, System.Boolean isPendingHierarchicalRepaint, System.Boolean inheritedClipRectIDChanged, System.Boolean inheritedMaskingChanged, UnityEngine.UIElements.UIR.UIRenderDevice device, ref UnityEngine.UIElements.UIR.ChainBuilderStats stats)
    // Offset: 0x55E40E8
    static void DepthFirstOnClippingChanged(::UnityEngine::UIElements::UIR::RenderChain* renderChain, ::UnityEngine::UIElements::VisualElement* parent, ::UnityEngine::UIElements::VisualElement* ve, uint dirtyID, bool hierarchical, bool isRootOfChange, bool isPendingHierarchicalRepaint, bool inheritedClipRectIDChanged, bool inheritedMaskingChanged, ::UnityEngine::UIElements::UIR::UIRenderDevice* device, ByRef<::UnityEngine::UIElements::UIR::ChainBuilderStats> stats);
    // static private System.Void DepthFirstOnOpacityChanged(UnityEngine.UIElements.UIR.RenderChain renderChain, System.Single parentCompositeOpacity, UnityEngine.UIElements.VisualElement ve, System.UInt32 dirtyID, System.Boolean hierarchical, ref UnityEngine.UIElements.UIR.ChainBuilderStats stats, System.Boolean isDoingFullVertexRegeneration)
    // Offset: 0x55E472C
    static void DepthFirstOnOpacityChanged(::UnityEngine::UIElements::UIR::RenderChain* renderChain, float parentCompositeOpacity, ::UnityEngine::UIElements::VisualElement* ve, uint dirtyID, bool hierarchical, ByRef<::UnityEngine::UIElements::UIR::ChainBuilderStats> stats, bool isDoingFullVertexRegeneration);
    // static private System.Void OnColorChanged(UnityEngine.UIElements.UIR.RenderChain renderChain, UnityEngine.UIElements.VisualElement ve, System.UInt32 dirtyID, ref UnityEngine.UIElements.UIR.ChainBuilderStats stats)
    // Offset: 0x55E4B20
    static void OnColorChanged(::UnityEngine::UIElements::UIR::RenderChain* renderChain, ::UnityEngine::UIElements::VisualElement* ve, uint dirtyID, ByRef<::UnityEngine::UIElements::UIR::ChainBuilderStats> stats);
    // static private System.Void DepthFirstOnTransformOrSizeChanged(UnityEngine.UIElements.UIR.RenderChain renderChain, UnityEngine.UIElements.VisualElement parent, UnityEngine.UIElements.VisualElement ve, System.UInt32 dirtyID, UnityEngine.UIElements.UIR.UIRenderDevice device, System.Boolean isAncestorOfChangeSkinned, System.Boolean transformChanged, ref UnityEngine.UIElements.UIR.ChainBuilderStats stats)
    // Offset: 0x55E4E20
    static void DepthFirstOnTransformOrSizeChanged(::UnityEngine::UIElements::UIR::RenderChain* renderChain, ::UnityEngine::UIElements::VisualElement* parent, ::UnityEngine::UIElements::VisualElement* ve, uint dirtyID, ::UnityEngine::UIElements::UIR::UIRenderDevice* device, bool isAncestorOfChangeSkinned, bool transformChanged, ByRef<::UnityEngine::UIElements::UIR::ChainBuilderStats> stats);
    // static private System.Void DepthFirstOnVisualsChanged(UnityEngine.UIElements.UIR.RenderChain renderChain, UnityEngine.UIElements.VisualElement ve, System.UInt32 dirtyID, System.Boolean parentHierarchyHidden, System.Boolean hierarchical, ref UnityEngine.UIElements.UIR.ChainBuilderStats stats)
    // Offset: 0x55E5368
    static void DepthFirstOnVisualsChanged(::UnityEngine::UIElements::UIR::RenderChain* renderChain, ::UnityEngine::UIElements::VisualElement* ve, uint dirtyID, bool parentHierarchyHidden, bool hierarchical, ByRef<::UnityEngine::UIElements::UIR::ChainBuilderStats> stats);
    // static private System.Boolean UpdateTextCoreSettings(UnityEngine.UIElements.UIR.RenderChain renderChain, UnityEngine.UIElements.VisualElement ve)
    // Offset: 0x55E72BC
    static bool UpdateTextCoreSettings(::UnityEngine::UIElements::UIR::RenderChain* renderChain, ::UnityEngine::UIElements::VisualElement* ve);
    // static private System.Boolean IsElementHierarchyHidden(UnityEngine.UIElements.VisualElement ve)
    // Offset: 0x55E52A8
    static bool IsElementHierarchyHidden(::UnityEngine::UIElements::VisualElement* ve);
    // static private UnityEngine.UIElements.VisualElement GetLastDeepestChild(UnityEngine.UIElements.VisualElement ve)
    // Offset: 0x55E60FC
    static ::UnityEngine::UIElements::VisualElement* GetLastDeepestChild(::UnityEngine::UIElements::VisualElement* ve);
    // static private UnityEngine.UIElements.UIR.Implementation.ClipMethod DetermineSelfClipMethod(UnityEngine.UIElements.UIR.RenderChain renderChain, UnityEngine.UIElements.VisualElement ve)
    // Offset: 0x55E71B4
    static ::UnityEngine::UIElements::UIR::Implementation::ClipMethod DetermineSelfClipMethod(::UnityEngine::UIElements::UIR::RenderChain* renderChain, ::UnityEngine::UIElements::VisualElement* ve);
    // static private System.Boolean UpdateLocalFlipsWinding(UnityEngine.UIElements.VisualElement ve)
    // Offset: 0x55E5FD4
    static bool UpdateLocalFlipsWinding(::UnityEngine::UIElements::VisualElement* ve);
    // static private System.Void UpdateWorldFlipsWinding(UnityEngine.UIElements.VisualElement ve)
    // Offset: 0x55E780C
    static void UpdateWorldFlipsWinding(::UnityEngine::UIElements::VisualElement* ve);
    // static private System.Void UpdateZeroScaling(UnityEngine.UIElements.VisualElement ve)
    // Offset: 0x55E7694
    static void UpdateZeroScaling(::UnityEngine::UIElements::VisualElement* ve);
    // static private System.Boolean NeedsTransformID(UnityEngine.UIElements.VisualElement ve)
    // Offset: 0x55E6178
    static bool NeedsTransformID(::UnityEngine::UIElements::VisualElement* ve);
    // static System.Boolean NeedsColorID(UnityEngine.UIElements.VisualElement ve)
    // Offset: 0x55E61B4
    static bool NeedsColorID(::UnityEngine::UIElements::VisualElement* ve);
    // static System.Boolean NeedsTextCoreSettings(UnityEngine.UIElements.VisualElement ve)
    // Offset: 0x55E7860
    static bool NeedsTextCoreSettings(::UnityEngine::UIElements::VisualElement* ve);
    // static private System.Boolean InitColorIDs(UnityEngine.UIElements.UIR.RenderChain renderChain, UnityEngine.UIElements.VisualElement ve)
    // Offset: 0x55E61D4
    static bool InitColorIDs(::UnityEngine::UIElements::UIR::RenderChain* renderChain, ::UnityEngine::UIElements::VisualElement* ve);
    // static private System.Void SetColorValues(UnityEngine.UIElements.UIR.RenderChain renderChain, UnityEngine.UIElements.VisualElement ve)
    // Offset: 0x55E6710
    static void SetColorValues(::UnityEngine::UIElements::UIR::RenderChain* renderChain, ::UnityEngine::UIElements::VisualElement* ve);
    // static private System.Void .cctor()
    // Offset: 0x55E7900
    static void _cctor();
  }; // UnityEngine.UIElements.UIR.Implementation.RenderEvents
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::UIElements::UIR::Implementation::RenderEvents::ProcessOnClippingChanged
// Il2CppName: ProcessOnClippingChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::UIElements::UIR::RenderChain*, ::UnityEngine::UIElements::VisualElement*, uint, ByRef<::UnityEngine::UIElements::UIR::ChainBuilderStats>)>(&UnityEngine::UIElements::UIR::Implementation::RenderEvents::ProcessOnClippingChanged)> {
  static const MethodInfo* get() {
    static auto* renderChain = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements.UIR", "RenderChain")->byval_arg;
    static auto* ve = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "VisualElement")->byval_arg;
    static auto* dirtyID = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    static auto* stats = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements.UIR", "ChainBuilderStats")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::UIR::Implementation::RenderEvents*), "ProcessOnClippingChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{renderChain, ve, dirtyID, stats});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::UIR::Implementation::RenderEvents::ProcessOnOpacityChanged
// Il2CppName: ProcessOnOpacityChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::UIElements::UIR::RenderChain*, ::UnityEngine::UIElements::VisualElement*, uint, ByRef<::UnityEngine::UIElements::UIR::ChainBuilderStats>)>(&UnityEngine::UIElements::UIR::Implementation::RenderEvents::ProcessOnOpacityChanged)> {
  static const MethodInfo* get() {
    static auto* renderChain = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements.UIR", "RenderChain")->byval_arg;
    static auto* ve = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "VisualElement")->byval_arg;
    static auto* dirtyID = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    static auto* stats = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements.UIR", "ChainBuilderStats")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::UIR::Implementation::RenderEvents*), "ProcessOnOpacityChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{renderChain, ve, dirtyID, stats});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::UIR::Implementation::RenderEvents::ProcessOnColorChanged
// Il2CppName: ProcessOnColorChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::UIElements::UIR::RenderChain*, ::UnityEngine::UIElements::VisualElement*, uint, ByRef<::UnityEngine::UIElements::UIR::ChainBuilderStats>)>(&UnityEngine::UIElements::UIR::Implementation::RenderEvents::ProcessOnColorChanged)> {
  static const MethodInfo* get() {
    static auto* renderChain = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements.UIR", "RenderChain")->byval_arg;
    static auto* ve = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "VisualElement")->byval_arg;
    static auto* dirtyID = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    static auto* stats = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements.UIR", "ChainBuilderStats")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::UIR::Implementation::RenderEvents*), "ProcessOnColorChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{renderChain, ve, dirtyID, stats});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::UIR::Implementation::RenderEvents::ProcessOnTransformOrSizeChanged
// Il2CppName: ProcessOnTransformOrSizeChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::UIElements::UIR::RenderChain*, ::UnityEngine::UIElements::VisualElement*, uint, ByRef<::UnityEngine::UIElements::UIR::ChainBuilderStats>)>(&UnityEngine::UIElements::UIR::Implementation::RenderEvents::ProcessOnTransformOrSizeChanged)> {
  static const MethodInfo* get() {
    static auto* renderChain = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements.UIR", "RenderChain")->byval_arg;
    static auto* ve = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "VisualElement")->byval_arg;
    static auto* dirtyID = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    static auto* stats = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements.UIR", "ChainBuilderStats")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::UIR::Implementation::RenderEvents*), "ProcessOnTransformOrSizeChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{renderChain, ve, dirtyID, stats});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::UIR::Implementation::RenderEvents::ProcessOnVisualsChanged
// Il2CppName: ProcessOnVisualsChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::UIElements::UIR::RenderChain*, ::UnityEngine::UIElements::VisualElement*, uint, ByRef<::UnityEngine::UIElements::UIR::ChainBuilderStats>)>(&UnityEngine::UIElements::UIR::Implementation::RenderEvents::ProcessOnVisualsChanged)> {
  static const MethodInfo* get() {
    static auto* renderChain = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements.UIR", "RenderChain")->byval_arg;
    static auto* ve = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "VisualElement")->byval_arg;
    static auto* dirtyID = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    static auto* stats = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements.UIR", "ChainBuilderStats")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::UIR::Implementation::RenderEvents*), "ProcessOnVisualsChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{renderChain, ve, dirtyID, stats});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::UIR::Implementation::RenderEvents::GetTransformIDTransformInfo
// Il2CppName: GetTransformIDTransformInfo
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Matrix4x4 (*)(::UnityEngine::UIElements::VisualElement*)>(&UnityEngine::UIElements::UIR::Implementation::RenderEvents::GetTransformIDTransformInfo)> {
  static const MethodInfo* get() {
    static auto* ve = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "VisualElement")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::UIR::Implementation::RenderEvents*), "GetTransformIDTransformInfo", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ve});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::UIR::Implementation::RenderEvents::GetClipRectIDClipInfo
// Il2CppName: GetClipRectIDClipInfo
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector4 (*)(::UnityEngine::UIElements::VisualElement*)>(&UnityEngine::UIElements::UIR::Implementation::RenderEvents::GetClipRectIDClipInfo)> {
  static const MethodInfo* get() {
    static auto* ve = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "VisualElement")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::UIR::Implementation::RenderEvents*), "GetClipRectIDClipInfo", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ve});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::UIR::Implementation::RenderEvents::DepthFirstOnChildAdded
// Il2CppName: DepthFirstOnChildAdded
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (*)(::UnityEngine::UIElements::UIR::RenderChain*, ::UnityEngine::UIElements::VisualElement*, ::UnityEngine::UIElements::VisualElement*, int, bool)>(&UnityEngine::UIElements::UIR::Implementation::RenderEvents::DepthFirstOnChildAdded)> {
  static const MethodInfo* get() {
    static auto* renderChain = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements.UIR", "RenderChain")->byval_arg;
    static auto* parent = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "VisualElement")->byval_arg;
    static auto* ve = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "VisualElement")->byval_arg;
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* resetState = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::UIR::Implementation::RenderEvents*), "DepthFirstOnChildAdded", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{renderChain, parent, ve, index, resetState});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::UIR::Implementation::RenderEvents::DepthFirstOnChildRemoving
// Il2CppName: DepthFirstOnChildRemoving
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (*)(::UnityEngine::UIElements::UIR::RenderChain*, ::UnityEngine::UIElements::VisualElement*)>(&UnityEngine::UIElements::UIR::Implementation::RenderEvents::DepthFirstOnChildRemoving)> {
  static const MethodInfo* get() {
    static auto* renderChain = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements.UIR", "RenderChain")->byval_arg;
    static auto* ve = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "VisualElement")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::UIR::Implementation::RenderEvents*), "DepthFirstOnChildRemoving", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{renderChain, ve});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::UIR::Implementation::RenderEvents::DepthFirstOnClippingChanged
// Il2CppName: DepthFirstOnClippingChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::UIElements::UIR::RenderChain*, ::UnityEngine::UIElements::VisualElement*, ::UnityEngine::UIElements::VisualElement*, uint, bool, bool, bool, bool, bool, ::UnityEngine::UIElements::UIR::UIRenderDevice*, ByRef<::UnityEngine::UIElements::UIR::ChainBuilderStats>)>(&UnityEngine::UIElements::UIR::Implementation::RenderEvents::DepthFirstOnClippingChanged)> {
  static const MethodInfo* get() {
    static auto* renderChain = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements.UIR", "RenderChain")->byval_arg;
    static auto* parent = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "VisualElement")->byval_arg;
    static auto* ve = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "VisualElement")->byval_arg;
    static auto* dirtyID = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    static auto* hierarchical = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* isRootOfChange = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* isPendingHierarchicalRepaint = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* inheritedClipRectIDChanged = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* inheritedMaskingChanged = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* device = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements.UIR", "UIRenderDevice")->byval_arg;
    static auto* stats = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements.UIR", "ChainBuilderStats")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::UIR::Implementation::RenderEvents*), "DepthFirstOnClippingChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{renderChain, parent, ve, dirtyID, hierarchical, isRootOfChange, isPendingHierarchicalRepaint, inheritedClipRectIDChanged, inheritedMaskingChanged, device, stats});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::UIR::Implementation::RenderEvents::DepthFirstOnOpacityChanged
// Il2CppName: DepthFirstOnOpacityChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::UIElements::UIR::RenderChain*, float, ::UnityEngine::UIElements::VisualElement*, uint, bool, ByRef<::UnityEngine::UIElements::UIR::ChainBuilderStats>, bool)>(&UnityEngine::UIElements::UIR::Implementation::RenderEvents::DepthFirstOnOpacityChanged)> {
  static const MethodInfo* get() {
    static auto* renderChain = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements.UIR", "RenderChain")->byval_arg;
    static auto* parentCompositeOpacity = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* ve = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "VisualElement")->byval_arg;
    static auto* dirtyID = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    static auto* hierarchical = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* stats = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements.UIR", "ChainBuilderStats")->this_arg;
    static auto* isDoingFullVertexRegeneration = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::UIR::Implementation::RenderEvents*), "DepthFirstOnOpacityChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{renderChain, parentCompositeOpacity, ve, dirtyID, hierarchical, stats, isDoingFullVertexRegeneration});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::UIR::Implementation::RenderEvents::OnColorChanged
// Il2CppName: OnColorChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::UIElements::UIR::RenderChain*, ::UnityEngine::UIElements::VisualElement*, uint, ByRef<::UnityEngine::UIElements::UIR::ChainBuilderStats>)>(&UnityEngine::UIElements::UIR::Implementation::RenderEvents::OnColorChanged)> {
  static const MethodInfo* get() {
    static auto* renderChain = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements.UIR", "RenderChain")->byval_arg;
    static auto* ve = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "VisualElement")->byval_arg;
    static auto* dirtyID = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    static auto* stats = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements.UIR", "ChainBuilderStats")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::UIR::Implementation::RenderEvents*), "OnColorChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{renderChain, ve, dirtyID, stats});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::UIR::Implementation::RenderEvents::DepthFirstOnTransformOrSizeChanged
// Il2CppName: DepthFirstOnTransformOrSizeChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::UIElements::UIR::RenderChain*, ::UnityEngine::UIElements::VisualElement*, ::UnityEngine::UIElements::VisualElement*, uint, ::UnityEngine::UIElements::UIR::UIRenderDevice*, bool, bool, ByRef<::UnityEngine::UIElements::UIR::ChainBuilderStats>)>(&UnityEngine::UIElements::UIR::Implementation::RenderEvents::DepthFirstOnTransformOrSizeChanged)> {
  static const MethodInfo* get() {
    static auto* renderChain = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements.UIR", "RenderChain")->byval_arg;
    static auto* parent = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "VisualElement")->byval_arg;
    static auto* ve = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "VisualElement")->byval_arg;
    static auto* dirtyID = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    static auto* device = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements.UIR", "UIRenderDevice")->byval_arg;
    static auto* isAncestorOfChangeSkinned = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* transformChanged = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* stats = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements.UIR", "ChainBuilderStats")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::UIR::Implementation::RenderEvents*), "DepthFirstOnTransformOrSizeChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{renderChain, parent, ve, dirtyID, device, isAncestorOfChangeSkinned, transformChanged, stats});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::UIR::Implementation::RenderEvents::DepthFirstOnVisualsChanged
// Il2CppName: DepthFirstOnVisualsChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::UIElements::UIR::RenderChain*, ::UnityEngine::UIElements::VisualElement*, uint, bool, bool, ByRef<::UnityEngine::UIElements::UIR::ChainBuilderStats>)>(&UnityEngine::UIElements::UIR::Implementation::RenderEvents::DepthFirstOnVisualsChanged)> {
  static const MethodInfo* get() {
    static auto* renderChain = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements.UIR", "RenderChain")->byval_arg;
    static auto* ve = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "VisualElement")->byval_arg;
    static auto* dirtyID = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    static auto* parentHierarchyHidden = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* hierarchical = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* stats = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements.UIR", "ChainBuilderStats")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::UIR::Implementation::RenderEvents*), "DepthFirstOnVisualsChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{renderChain, ve, dirtyID, parentHierarchyHidden, hierarchical, stats});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::UIR::Implementation::RenderEvents::UpdateTextCoreSettings
// Il2CppName: UpdateTextCoreSettings
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::UnityEngine::UIElements::UIR::RenderChain*, ::UnityEngine::UIElements::VisualElement*)>(&UnityEngine::UIElements::UIR::Implementation::RenderEvents::UpdateTextCoreSettings)> {
  static const MethodInfo* get() {
    static auto* renderChain = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements.UIR", "RenderChain")->byval_arg;
    static auto* ve = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "VisualElement")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::UIR::Implementation::RenderEvents*), "UpdateTextCoreSettings", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{renderChain, ve});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::UIR::Implementation::RenderEvents::IsElementHierarchyHidden
// Il2CppName: IsElementHierarchyHidden
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::UnityEngine::UIElements::VisualElement*)>(&UnityEngine::UIElements::UIR::Implementation::RenderEvents::IsElementHierarchyHidden)> {
  static const MethodInfo* get() {
    static auto* ve = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "VisualElement")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::UIR::Implementation::RenderEvents*), "IsElementHierarchyHidden", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ve});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::UIR::Implementation::RenderEvents::GetLastDeepestChild
// Il2CppName: GetLastDeepestChild
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::VisualElement* (*)(::UnityEngine::UIElements::VisualElement*)>(&UnityEngine::UIElements::UIR::Implementation::RenderEvents::GetLastDeepestChild)> {
  static const MethodInfo* get() {
    static auto* ve = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "VisualElement")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::UIR::Implementation::RenderEvents*), "GetLastDeepestChild", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ve});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::UIR::Implementation::RenderEvents::DetermineSelfClipMethod
// Il2CppName: DetermineSelfClipMethod
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::UIR::Implementation::ClipMethod (*)(::UnityEngine::UIElements::UIR::RenderChain*, ::UnityEngine::UIElements::VisualElement*)>(&UnityEngine::UIElements::UIR::Implementation::RenderEvents::DetermineSelfClipMethod)> {
  static const MethodInfo* get() {
    static auto* renderChain = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements.UIR", "RenderChain")->byval_arg;
    static auto* ve = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "VisualElement")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::UIR::Implementation::RenderEvents*), "DetermineSelfClipMethod", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{renderChain, ve});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::UIR::Implementation::RenderEvents::UpdateLocalFlipsWinding
// Il2CppName: UpdateLocalFlipsWinding
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::UnityEngine::UIElements::VisualElement*)>(&UnityEngine::UIElements::UIR::Implementation::RenderEvents::UpdateLocalFlipsWinding)> {
  static const MethodInfo* get() {
    static auto* ve = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "VisualElement")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::UIR::Implementation::RenderEvents*), "UpdateLocalFlipsWinding", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ve});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::UIR::Implementation::RenderEvents::UpdateWorldFlipsWinding
// Il2CppName: UpdateWorldFlipsWinding
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::UIElements::VisualElement*)>(&UnityEngine::UIElements::UIR::Implementation::RenderEvents::UpdateWorldFlipsWinding)> {
  static const MethodInfo* get() {
    static auto* ve = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "VisualElement")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::UIR::Implementation::RenderEvents*), "UpdateWorldFlipsWinding", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ve});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::UIR::Implementation::RenderEvents::UpdateZeroScaling
// Il2CppName: UpdateZeroScaling
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::UIElements::VisualElement*)>(&UnityEngine::UIElements::UIR::Implementation::RenderEvents::UpdateZeroScaling)> {
  static const MethodInfo* get() {
    static auto* ve = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "VisualElement")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::UIR::Implementation::RenderEvents*), "UpdateZeroScaling", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ve});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::UIR::Implementation::RenderEvents::NeedsTransformID
// Il2CppName: NeedsTransformID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::UnityEngine::UIElements::VisualElement*)>(&UnityEngine::UIElements::UIR::Implementation::RenderEvents::NeedsTransformID)> {
  static const MethodInfo* get() {
    static auto* ve = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "VisualElement")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::UIR::Implementation::RenderEvents*), "NeedsTransformID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ve});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::UIR::Implementation::RenderEvents::NeedsColorID
// Il2CppName: NeedsColorID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::UnityEngine::UIElements::VisualElement*)>(&UnityEngine::UIElements::UIR::Implementation::RenderEvents::NeedsColorID)> {
  static const MethodInfo* get() {
    static auto* ve = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "VisualElement")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::UIR::Implementation::RenderEvents*), "NeedsColorID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ve});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::UIR::Implementation::RenderEvents::NeedsTextCoreSettings
// Il2CppName: NeedsTextCoreSettings
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::UnityEngine::UIElements::VisualElement*)>(&UnityEngine::UIElements::UIR::Implementation::RenderEvents::NeedsTextCoreSettings)> {
  static const MethodInfo* get() {
    static auto* ve = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "VisualElement")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::UIR::Implementation::RenderEvents*), "NeedsTextCoreSettings", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ve});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::UIR::Implementation::RenderEvents::InitColorIDs
// Il2CppName: InitColorIDs
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::UnityEngine::UIElements::UIR::RenderChain*, ::UnityEngine::UIElements::VisualElement*)>(&UnityEngine::UIElements::UIR::Implementation::RenderEvents::InitColorIDs)> {
  static const MethodInfo* get() {
    static auto* renderChain = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements.UIR", "RenderChain")->byval_arg;
    static auto* ve = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "VisualElement")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::UIR::Implementation::RenderEvents*), "InitColorIDs", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{renderChain, ve});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::UIR::Implementation::RenderEvents::SetColorValues
// Il2CppName: SetColorValues
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::UIElements::UIR::RenderChain*, ::UnityEngine::UIElements::VisualElement*)>(&UnityEngine::UIElements::UIR::Implementation::RenderEvents::SetColorValues)> {
  static const MethodInfo* get() {
    static auto* renderChain = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements.UIR", "RenderChain")->byval_arg;
    static auto* ve = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "VisualElement")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::UIR::Implementation::RenderEvents*), "SetColorValues", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{renderChain, ve});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::UIR::Implementation::RenderEvents::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&UnityEngine::UIElements::UIR::Implementation::RenderEvents::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::UIR::Implementation::RenderEvents*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
