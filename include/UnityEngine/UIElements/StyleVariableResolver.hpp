// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.UIElements.StyleSheets.StylePropertyValue
#include "UnityEngine/UIElements/StyleSheets/StylePropertyValue.hpp"
// Including type: System.Int32
#include "System/Int32.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::UIElements
namespace UnityEngine::UIElements {
  // Forward declaring type: StyleVariableContext
  class StyleVariableContext;
  // Forward declaring type: StyleProperty
  class StyleProperty;
  // Forward declaring type: StyleSheet
  class StyleSheet;
}
// Forward declaring namespace: UnityEngine::UIElements::StyleSheets
namespace UnityEngine::UIElements::StyleSheets {
  // Forward declaring type: StylePropertyValueMatcher
  class StylePropertyValueMatcher;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
  // Forward declaring type: Stack`1<T>
  template<typename T>
  class Stack_1;
}
// Forward declaring namespace: UnityEngine::UIElements::StyleSheets::Syntax
namespace UnityEngine::UIElements::StyleSheets::Syntax {
  // Forward declaring type: StyleSyntaxParser
  class StyleSyntaxParser;
}
// Completed forward declares
// Type namespace: UnityEngine.UIElements
namespace UnityEngine::UIElements {
  // Forward declaring type: StyleVariableResolver
  class StyleVariableResolver;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::UIElements::StyleVariableResolver);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::UIElements::StyleVariableResolver*, "UnityEngine.UIElements", "StyleVariableResolver");
// Type namespace: UnityEngine.UIElements
namespace UnityEngine::UIElements {
  // Size: 0x50
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.UIElements.StyleVariableResolver
  // [TokenAttribute] Offset: FFFFFFFF
  class StyleVariableResolver : public ::Il2CppObject {
    public:
    // Nested type: ::UnityEngine::UIElements::StyleVariableResolver::Result
    struct Result;
    // Nested type: ::UnityEngine::UIElements::StyleVariableResolver::ResolveContext
    struct ResolveContext;
    // Size: 0x10
    #pragma pack(push, 1)
    // WARNING Layout: Sequential may not be correctly taken into account!
    // Autogenerated type: UnityEngine.UIElements.StyleVariableResolver/ResolveContext
    // [TokenAttribute] Offset: FFFFFFFF
    struct ResolveContext/*, public ::System::ValueType*/ {
      public:
      public:
      // public UnityEngine.UIElements.StyleSheet sheet
      // Size: 0x8
      // Offset: 0x0
      ::UnityEngine::UIElements::StyleSheet* sheet;
      // Field size check
      static_assert(sizeof(::UnityEngine::UIElements::StyleSheet*) == 0x8);
      // public UnityEngine.UIElements.StyleValueHandle[] handles
      // Size: 0x8
      // Offset: 0x8
      ::ArrayW<::UnityEngine::UIElements::StyleValueHandle> handles;
      // Field size check
      static_assert(sizeof(::ArrayW<::UnityEngine::UIElements::StyleValueHandle>) == 0x8);
      public:
      // Creating value type constructor for type: ResolveContext
      constexpr ResolveContext(::UnityEngine::UIElements::StyleSheet* sheet_ = {}, ::ArrayW<::UnityEngine::UIElements::StyleValueHandle> handles_ = ::ArrayW<::UnityEngine::UIElements::StyleValueHandle>(static_cast<void*>(nullptr))) noexcept : sheet{sheet_}, handles{handles_} {}
      // Creating interface conversion operator: operator ::System::ValueType
      operator ::System::ValueType() noexcept {
        return *reinterpret_cast<::System::ValueType*>(this);
      }
      // Get instance field reference: public UnityEngine.UIElements.StyleSheet sheet
      [[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::StyleSheet*& dyn_sheet();
      // Get instance field reference: public UnityEngine.UIElements.StyleValueHandle[] handles
      [[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::UIElements::StyleValueHandle>& dyn_handles();
    }; // UnityEngine.UIElements.StyleVariableResolver/ResolveContext
    #pragma pack(pop)
    static check_size<sizeof(StyleVariableResolver::ResolveContext), 8 + sizeof(::ArrayW<::UnityEngine::UIElements::StyleValueHandle>)> __UnityEngine_UIElements_StyleVariableResolver_ResolveContextSizeCheck;
    static_assert(sizeof(StyleVariableResolver::ResolveContext) == 0x10);
    public:
    // private UnityEngine.UIElements.StyleSheets.StylePropertyValueMatcher m_Matcher
    // Size: 0x8
    // Offset: 0x10
    ::UnityEngine::UIElements::StyleSheets::StylePropertyValueMatcher* m_Matcher;
    // Field size check
    static_assert(sizeof(::UnityEngine::UIElements::StyleSheets::StylePropertyValueMatcher*) == 0x8);
    // private System.Collections.Generic.List`1<UnityEngine.UIElements.StyleSheets.StylePropertyValue> m_ResolvedValues
    // Size: 0x8
    // Offset: 0x18
    ::System::Collections::Generic::List_1<::UnityEngine::UIElements::StyleSheets::StylePropertyValue>* m_ResolvedValues;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::UnityEngine::UIElements::StyleSheets::StylePropertyValue>*) == 0x8);
    // private System.Collections.Generic.Stack`1<System.String> m_ResolvedVarStack
    // Size: 0x8
    // Offset: 0x20
    ::System::Collections::Generic::Stack_1<::StringW>* m_ResolvedVarStack;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::Stack_1<::StringW>*) == 0x8);
    // private UnityEngine.UIElements.StyleProperty m_Property
    // Size: 0x8
    // Offset: 0x28
    ::UnityEngine::UIElements::StyleProperty* m_Property;
    // Field size check
    static_assert(sizeof(::UnityEngine::UIElements::StyleProperty*) == 0x8);
    // private System.Collections.Generic.Stack`1<UnityEngine.UIElements.StyleVariableResolver/ResolveContext> m_ContextStack
    // Size: 0x8
    // Offset: 0x30
    ::System::Collections::Generic::Stack_1<::UnityEngine::UIElements::StyleVariableResolver::ResolveContext>* m_ContextStack;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::Stack_1<::UnityEngine::UIElements::StyleVariableResolver::ResolveContext>*) == 0x8);
    // private UnityEngine.UIElements.StyleVariableResolver/ResolveContext m_CurrentContext
    // Size: 0x10
    // Offset: 0x38
    ::UnityEngine::UIElements::StyleVariableResolver::ResolveContext m_CurrentContext;
    // Field size check
    static_assert(sizeof(::UnityEngine::UIElements::StyleVariableResolver::ResolveContext) == 0x10);
    // private UnityEngine.UIElements.StyleVariableContext <variableContext>k__BackingField
    // Size: 0x8
    // Offset: 0x48
    ::UnityEngine::UIElements::StyleVariableContext* variableContext;
    // Field size check
    static_assert(sizeof(::UnityEngine::UIElements::StyleVariableContext*) == 0x8);
    public:
    // static field const value: static System.Int32 kMaxResolves
    static constexpr const int kMaxResolves = 100;
    // Get static field: static System.Int32 kMaxResolves
    static int _get_kMaxResolves();
    // Set static field: static System.Int32 kMaxResolves
    static void _set_kMaxResolves(int value);
    // Get static field: static private UnityEngine.UIElements.StyleSheets.Syntax.StyleSyntaxParser s_SyntaxParser
    static ::UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxParser* _get_s_SyntaxParser();
    // Set static field: static private UnityEngine.UIElements.StyleSheets.Syntax.StyleSyntaxParser s_SyntaxParser
    static void _set_s_SyntaxParser(::UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxParser* value);
    // Get instance field reference: private UnityEngine.UIElements.StyleSheets.StylePropertyValueMatcher m_Matcher
    [[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::StyleSheets::StylePropertyValueMatcher*& dyn_m_Matcher();
    // Get instance field reference: private System.Collections.Generic.List`1<UnityEngine.UIElements.StyleSheets.StylePropertyValue> m_ResolvedValues
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::UIElements::StyleSheets::StylePropertyValue>*& dyn_m_ResolvedValues();
    // Get instance field reference: private System.Collections.Generic.Stack`1<System.String> m_ResolvedVarStack
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::Stack_1<::StringW>*& dyn_m_ResolvedVarStack();
    // Get instance field reference: private UnityEngine.UIElements.StyleProperty m_Property
    [[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::StyleProperty*& dyn_m_Property();
    // Get instance field reference: private System.Collections.Generic.Stack`1<UnityEngine.UIElements.StyleVariableResolver/ResolveContext> m_ContextStack
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::Stack_1<::UnityEngine::UIElements::StyleVariableResolver::ResolveContext>*& dyn_m_ContextStack();
    // Get instance field reference: private UnityEngine.UIElements.StyleVariableResolver/ResolveContext m_CurrentContext
    [[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::StyleVariableResolver::ResolveContext& dyn_m_CurrentContext();
    // Get instance field reference: private UnityEngine.UIElements.StyleVariableContext <variableContext>k__BackingField
    [[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::StyleVariableContext*& dyn_$variableContext$k__BackingField();
    // private UnityEngine.UIElements.StyleSheet get_currentSheet()
    // Offset: 0x56B2F04
    ::UnityEngine::UIElements::StyleSheet* get_currentSheet();
    // private UnityEngine.UIElements.StyleValueHandle[] get_currentHandles()
    // Offset: 0x56B2F0C
    ::ArrayW<::UnityEngine::UIElements::StyleValueHandle> get_currentHandles();
    // public System.Collections.Generic.List`1<UnityEngine.UIElements.StyleSheets.StylePropertyValue> get_resolvedValues()
    // Offset: 0x56B2F14
    ::System::Collections::Generic::List_1<::UnityEngine::UIElements::StyleSheets::StylePropertyValue>* get_resolvedValues();
    // public UnityEngine.UIElements.StyleVariableContext get_variableContext()
    // Offset: 0x56B2F1C
    ::UnityEngine::UIElements::StyleVariableContext* get_variableContext();
    // public System.Void set_variableContext(UnityEngine.UIElements.StyleVariableContext value)
    // Offset: 0x56B2F24
    void set_variableContext(::UnityEngine::UIElements::StyleVariableContext* value);
    // public System.Void Init(UnityEngine.UIElements.StyleProperty property, UnityEngine.UIElements.StyleSheet sheet, UnityEngine.UIElements.StyleValueHandle[] handles)
    // Offset: 0x56B2F2C
    void Init(::UnityEngine::UIElements::StyleProperty* property, ::UnityEngine::UIElements::StyleSheet* sheet, ::ArrayW<::UnityEngine::UIElements::StyleValueHandle> handles);
    // private System.Void PushContext(UnityEngine.UIElements.StyleSheet sheet, UnityEngine.UIElements.StyleValueHandle[] handles)
    // Offset: 0x56B2FE8
    void PushContext(::UnityEngine::UIElements::StyleSheet* sheet, ::ArrayW<::UnityEngine::UIElements::StyleValueHandle> handles);
    // private System.Void PopContext()
    // Offset: 0x56B3094
    void PopContext();
    // public System.Void AddValue(UnityEngine.UIElements.StyleValueHandle handle)
    // Offset: 0x56B311C
    void AddValue(::UnityEngine::UIElements::StyleValueHandle handle);
    // public System.Boolean ResolveVarFunction(ref System.Int32 index)
    // Offset: 0x56B31EC
    bool ResolveVarFunction(ByRef<int> index);
    // private UnityEngine.UIElements.StyleVariableResolver/Result ResolveVarFunction(ref System.Int32 index, System.Int32 argc, System.String varName)
    // Offset: 0x56B3370
    ::UnityEngine::UIElements::StyleVariableResolver::Result ResolveVarFunction(ByRef<int> index, int argc, ::StringW varName);
    // public System.Boolean ValidateResolvedValues()
    // Offset: 0x56B39EC
    bool ValidateResolvedValues();
    // private UnityEngine.UIElements.StyleVariableResolver/Result ResolveVariable(System.String variableName)
    // Offset: 0x56B34CC
    ::UnityEngine::UIElements::StyleVariableResolver::Result ResolveVariable(::StringW variableName);
    // private UnityEngine.UIElements.StyleVariableResolver/Result ResolveFallback(ref System.Int32 index)
    // Offset: 0x56B374C
    ::UnityEngine::UIElements::StyleVariableResolver::Result ResolveFallback(ByRef<int> index);
    // static private System.Void ParseVarFunction(UnityEngine.UIElements.StyleSheet sheet, UnityEngine.UIElements.StyleValueHandle[] handles, ref System.Int32 index, out System.Int32 argCount, out System.String variableName)
    // Offset: 0x56B32B8
    static void ParseVarFunction(::UnityEngine::UIElements::StyleSheet* sheet, ::ArrayW<::UnityEngine::UIElements::StyleValueHandle> handles, ByRef<int> index, ByRef<int> argCount, ByRef<::StringW> variableName);
    // public System.Void .ctor()
    // Offset: 0x56B3B5C
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static StyleVariableResolver* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::StyleVariableResolver::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<StyleVariableResolver*, creationType>()));
    }
    // static private System.Void .cctor()
    // Offset: 0x56B3CC4
    static void _cctor();
  }; // UnityEngine.UIElements.StyleVariableResolver
  #pragma pack(pop)
  static check_size<sizeof(StyleVariableResolver), 72 + sizeof(::UnityEngine::UIElements::StyleVariableContext*)> __UnityEngine_UIElements_StyleVariableResolverSizeCheck;
  static_assert(sizeof(StyleVariableResolver) == 0x50);
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::UIElements::StyleVariableResolver::ResolveContext, "UnityEngine.UIElements", "StyleVariableResolver/ResolveContext");
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::UIElements::StyleVariableResolver::get_currentSheet
// Il2CppName: get_currentSheet
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::StyleSheet* (UnityEngine::UIElements::StyleVariableResolver::*)()>(&UnityEngine::UIElements::StyleVariableResolver::get_currentSheet)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::StyleVariableResolver*), "get_currentSheet", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::StyleVariableResolver::get_currentHandles
// Il2CppName: get_currentHandles
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::UnityEngine::UIElements::StyleValueHandle> (UnityEngine::UIElements::StyleVariableResolver::*)()>(&UnityEngine::UIElements::StyleVariableResolver::get_currentHandles)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::StyleVariableResolver*), "get_currentHandles", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::StyleVariableResolver::get_resolvedValues
// Il2CppName: get_resolvedValues
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::List_1<::UnityEngine::UIElements::StyleSheets::StylePropertyValue>* (UnityEngine::UIElements::StyleVariableResolver::*)()>(&UnityEngine::UIElements::StyleVariableResolver::get_resolvedValues)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::StyleVariableResolver*), "get_resolvedValues", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::StyleVariableResolver::get_variableContext
// Il2CppName: get_variableContext
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::StyleVariableContext* (UnityEngine::UIElements::StyleVariableResolver::*)()>(&UnityEngine::UIElements::StyleVariableResolver::get_variableContext)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::StyleVariableResolver*), "get_variableContext", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::StyleVariableResolver::set_variableContext
// Il2CppName: set_variableContext
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::StyleVariableResolver::*)(::UnityEngine::UIElements::StyleVariableContext*)>(&UnityEngine::UIElements::StyleVariableResolver::set_variableContext)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "StyleVariableContext")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::StyleVariableResolver*), "set_variableContext", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::StyleVariableResolver::Init
// Il2CppName: Init
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::StyleVariableResolver::*)(::UnityEngine::UIElements::StyleProperty*, ::UnityEngine::UIElements::StyleSheet*, ::ArrayW<::UnityEngine::UIElements::StyleValueHandle>)>(&UnityEngine::UIElements::StyleVariableResolver::Init)> {
  static const MethodInfo* get() {
    static auto* property = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "StyleProperty")->byval_arg;
    static auto* sheet = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "StyleSheet")->byval_arg;
    static auto* handles = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "StyleValueHandle"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::StyleVariableResolver*), "Init", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{property, sheet, handles});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::StyleVariableResolver::PushContext
// Il2CppName: PushContext
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::StyleVariableResolver::*)(::UnityEngine::UIElements::StyleSheet*, ::ArrayW<::UnityEngine::UIElements::StyleValueHandle>)>(&UnityEngine::UIElements::StyleVariableResolver::PushContext)> {
  static const MethodInfo* get() {
    static auto* sheet = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "StyleSheet")->byval_arg;
    static auto* handles = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "StyleValueHandle"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::StyleVariableResolver*), "PushContext", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sheet, handles});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::StyleVariableResolver::PopContext
// Il2CppName: PopContext
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::StyleVariableResolver::*)()>(&UnityEngine::UIElements::StyleVariableResolver::PopContext)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::StyleVariableResolver*), "PopContext", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::StyleVariableResolver::AddValue
// Il2CppName: AddValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::StyleVariableResolver::*)(::UnityEngine::UIElements::StyleValueHandle)>(&UnityEngine::UIElements::StyleVariableResolver::AddValue)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "StyleValueHandle")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::StyleVariableResolver*), "AddValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::StyleVariableResolver::ResolveVarFunction
// Il2CppName: ResolveVarFunction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::StyleVariableResolver::*)(ByRef<int>)>(&UnityEngine::UIElements::StyleVariableResolver::ResolveVarFunction)> {
  static const MethodInfo* get() {
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::StyleVariableResolver*), "ResolveVarFunction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{index});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::StyleVariableResolver::ResolveVarFunction
// Il2CppName: ResolveVarFunction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::StyleVariableResolver::Result (UnityEngine::UIElements::StyleVariableResolver::*)(ByRef<int>, int, ::StringW)>(&UnityEngine::UIElements::StyleVariableResolver::ResolveVarFunction)> {
  static const MethodInfo* get() {
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    static auto* argc = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* varName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::StyleVariableResolver*), "ResolveVarFunction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{index, argc, varName});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::StyleVariableResolver::ValidateResolvedValues
// Il2CppName: ValidateResolvedValues
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::StyleVariableResolver::*)()>(&UnityEngine::UIElements::StyleVariableResolver::ValidateResolvedValues)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::StyleVariableResolver*), "ValidateResolvedValues", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::StyleVariableResolver::ResolveVariable
// Il2CppName: ResolveVariable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::StyleVariableResolver::Result (UnityEngine::UIElements::StyleVariableResolver::*)(::StringW)>(&UnityEngine::UIElements::StyleVariableResolver::ResolveVariable)> {
  static const MethodInfo* get() {
    static auto* variableName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::StyleVariableResolver*), "ResolveVariable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{variableName});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::StyleVariableResolver::ResolveFallback
// Il2CppName: ResolveFallback
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::StyleVariableResolver::Result (UnityEngine::UIElements::StyleVariableResolver::*)(ByRef<int>)>(&UnityEngine::UIElements::StyleVariableResolver::ResolveFallback)> {
  static const MethodInfo* get() {
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::StyleVariableResolver*), "ResolveFallback", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{index});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::StyleVariableResolver::ParseVarFunction
// Il2CppName: ParseVarFunction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::UIElements::StyleSheet*, ::ArrayW<::UnityEngine::UIElements::StyleValueHandle>, ByRef<int>, ByRef<int>, ByRef<::StringW>)>(&UnityEngine::UIElements::StyleVariableResolver::ParseVarFunction)> {
  static const MethodInfo* get() {
    static auto* sheet = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "StyleSheet")->byval_arg;
    static auto* handles = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "StyleValueHandle"), 1)->byval_arg;
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    static auto* argCount = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    static auto* variableName = &::il2cpp_utils::GetClassFromName("System", "String")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::StyleVariableResolver*), "ParseVarFunction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sheet, handles, index, argCount, variableName});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::StyleVariableResolver::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::UIElements::StyleVariableResolver::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&UnityEngine::UIElements::StyleVariableResolver::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::StyleVariableResolver*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
