// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.IEquatable`1
#include "System/IEquatable_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Type namespace: UnityEngine.UIElements
namespace UnityEngine::UIElements {
  // Forward declaring type: UxmlTypeRestriction
  class UxmlTypeRestriction;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::UIElements::UxmlTypeRestriction);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::UIElements::UxmlTypeRestriction*, "UnityEngine.UIElements", "UxmlTypeRestriction");
// Type namespace: UnityEngine.UIElements
namespace UnityEngine::UIElements {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.UIElements.UxmlTypeRestriction
  // [TokenAttribute] Offset: FFFFFFFF
  class UxmlTypeRestriction : public ::Il2CppObject/*, public ::System::IEquatable_1<::UnityEngine::UIElements::UxmlTypeRestriction*>*/ {
    public:
    // Creating interface conversion operator: operator ::System::IEquatable_1<::UnityEngine::UIElements::UxmlTypeRestriction*>
    operator ::System::IEquatable_1<::UnityEngine::UIElements::UxmlTypeRestriction*>() noexcept {
      return *reinterpret_cast<::System::IEquatable_1<::UnityEngine::UIElements::UxmlTypeRestriction*>*>(this);
    }
    // public System.Boolean Equals(UnityEngine.UIElements.UxmlTypeRestriction other)
    // Offset: 0x56C7EC8
    bool Equals(::UnityEngine::UIElements::UxmlTypeRestriction* other);
    // protected System.Void .ctor()
    // Offset: 0x56C7ED4
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static UxmlTypeRestriction* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::UxmlTypeRestriction::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<UxmlTypeRestriction*, creationType>()));
    }
  }; // UnityEngine.UIElements.UxmlTypeRestriction
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::UIElements::UxmlTypeRestriction::Equals
// Il2CppName: Equals
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::UxmlTypeRestriction::*)(::UnityEngine::UIElements::UxmlTypeRestriction*)>(&UnityEngine::UIElements::UxmlTypeRestriction::Equals)> {
  static const MethodInfo* get() {
    static auto* other = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "UxmlTypeRestriction")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::UxmlTypeRestriction*), "Equals", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{other});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::UxmlTypeRestriction::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
