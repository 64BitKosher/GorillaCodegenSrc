// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.UIElements.BaseField`1
#include "UnityEngine/UIElements/BaseField_1.hpp"
// Including type: System.MulticastDelegate
#include "System/MulticastDelegate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::UIElements
namespace UnityEngine::UIElements {
  // Skipping declaration: FieldDescription because it is already included!
  // Skipping declaration: <>c__DisplayClass24_0 because it is already included!
  // Forward declaring type: TextValueField`1<TValueType>
  template<typename TValueType>
  class TextValueField_1;
  // Skipping declaration: VisualElement because it is already included!
  // Forward declaring type: ChangeEvent`1<T>
  template<typename T>
  class ChangeEvent_1;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Func`2<T, TResult>
  template<typename T, typename TResult>
  class Func_2;
}
// Completed forward declares
// Type namespace: UnityEngine.UIElements
namespace UnityEngine::UIElements {
  // Forward declaring type: BaseCompositeField`3<TValueType, TField, TFieldValue>
  template<typename TValueType, typename TField, typename TFieldValue>
  class BaseCompositeField_3;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE_GENERIC_CLASS(::UnityEngine::UIElements::BaseCompositeField_3, "UnityEngine.UIElements", "BaseCompositeField`3");
// Type namespace: UnityEngine.UIElements
namespace UnityEngine::UIElements {
  // WARNING Size may be invalid!
  // Autogenerated type: UnityEngine.UIElements.BaseCompositeField`3
  // [TokenAttribute] Offset: FFFFFFFF
  // [MovedFromAttribute] Offset: FFFFFFFF
  template<typename TValueType, typename TField, typename TFieldValue>
  class BaseCompositeField_3 : public ::UnityEngine::UIElements::BaseField_1<TValueType> {
    public:
    // Nested type: ::UnityEngine::UIElements::BaseCompositeField_3::FieldDescription<TValueType, TField, TFieldValue>
    struct FieldDescription;
    // Nested type: ::UnityEngine::UIElements::BaseCompositeField_3::$$c__DisplayClass24_0<TValueType, TField, TFieldValue>
    class $$c__DisplayClass24_0;
    // WARNING Size may be invalid!
    // WARNING Layout: Sequential may not be correctly taken into account!
    // Autogenerated type: UnityEngine.UIElements.BaseCompositeField`3/FieldDescription
    // [TokenAttribute] Offset: FFFFFFFF
    struct FieldDescription : public ::il2cpp_utils::il2cpp_type_check::NestedType/*, public ::System::ValueType*/ {
      public:
      using declaring_type = BaseCompositeField_3<TValueType, TField, TFieldValue>*;
      static constexpr std::string_view NESTED_NAME = "FieldDescription";
      static constexpr bool IS_VALUE_TYPE = true;
      // Nested type: ::UnityEngine::UIElements::BaseCompositeField_3::FieldDescription::WriteDelegate<TValueType, TField, TFieldValue>
      class WriteDelegate;
      // WARNING Size may be invalid!
      // Autogenerated type: UnityEngine.UIElements.BaseCompositeField`3/FieldDescription/WriteDelegate
      // [TokenAttribute] Offset: FFFFFFFF
      class WriteDelegate : public ::il2cpp_utils::il2cpp_type_check::NestedType, public ::System::MulticastDelegate {
        public:
        using declaring_type = typename BaseCompositeField_3<TValueType, TField, TFieldValue>::FieldDescription;
        static constexpr std::string_view NESTED_NAME = "WriteDelegate";
        static constexpr bool IS_VALUE_TYPE = false;
        // public System.Void .ctor(System.Object object, System.IntPtr method)
        // Offset: 0xFFFFFFFFFFFFFFFF
        template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
        static typename BaseCompositeField_3<TValueType, TField, TFieldValue>::FieldDescription::WriteDelegate* New_ctor(::Il2CppObject* object, ::System::IntPtr method) {
          static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::BaseCompositeField_3::FieldDescription::WriteDelegate::.ctor");
          return THROW_UNLESS((::il2cpp_utils::New<typename BaseCompositeField_3<TValueType, TField, TFieldValue>::FieldDescription::WriteDelegate*, creationType>(object, method)));
        }
        // public System.Void Invoke(ref TValueType val, TFieldValue fieldValue)
        // Offset: 0xFFFFFFFFFFFFFFFF
        void Invoke(ByRef<TValueType> val, TFieldValue fieldValue) {
          static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::BaseCompositeField_3::FieldDescription::WriteDelegate::Invoke");
          auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(typename ::UnityEngine::UIElements::BaseCompositeField_3<TValueType, TField, TFieldValue>::FieldDescription::WriteDelegate*), -1)));
          ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(val), fieldValue);
        }
      }; // UnityEngine.UIElements.BaseCompositeField`3/FieldDescription/WriteDelegate
      // Could not write size check! Type: UnityEngine.UIElements.BaseCompositeField`3/FieldDescription/WriteDelegate is generic, or has no fields that are valid for size checks!
      public:
      // readonly System.String name
      // Size: 0x8
      // Offset: 0x0
      ::StringW name;
      // Field size check
      static_assert(sizeof(::StringW) == 0x8);
      // readonly System.String ussName
      // Size: 0x8
      // Offset: 0x0
      ::StringW ussName;
      // Field size check
      static_assert(sizeof(::StringW) == 0x8);
      // readonly System.Func`2<TValueType,TFieldValue> read
      // Size: 0x8
      // Offset: 0x0
      ::System::Func_2<TValueType, TFieldValue>* read;
      // Field size check
      static_assert(sizeof(::System::Func_2<TValueType, TFieldValue>*) == 0x8);
      // readonly UnityEngine.UIElements.BaseCompositeField`3/FieldDescription/WriteDelegate<TValueType,TField,TFieldValue> write
      // Size: 0x8
      // Offset: 0x0
      typename ::UnityEngine::UIElements::BaseCompositeField_3<TValueType, TField, TFieldValue>::FieldDescription::WriteDelegate* write;
      // Field size check
      static_assert(sizeof(typename ::UnityEngine::UIElements::BaseCompositeField_3<TValueType, TField, TFieldValue>::FieldDescription::WriteDelegate*) == 0x8);
      public:
      // Creating value type constructor for type: FieldDescription
      constexpr FieldDescription(::StringW name_ = {}, ::StringW ussName_ = {}, ::System::Func_2<TValueType, TFieldValue>* read_ = {}, typename ::UnityEngine::UIElements::BaseCompositeField_3<TValueType, TField, TFieldValue>::FieldDescription::WriteDelegate* write_ = {}) noexcept : name{name_}, ussName{ussName_}, read{read_}, write{write_} {}
      // Creating interface conversion operator: operator ::System::ValueType
      operator ::System::ValueType() noexcept {
        return *reinterpret_cast<::System::ValueType*>(this);
      }
      // Autogenerated instance field getter
      // Get instance field: readonly System.String name
      [[deprecated("Use field access instead!")]] ::StringW& dyn_name() {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::BaseCompositeField_3::FieldDescription::dyn_name");
        auto ___internal__instance = *this;
        static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "name"))->offset;
        return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
      }
      // Autogenerated instance field getter
      // Get instance field: readonly System.String ussName
      [[deprecated("Use field access instead!")]] ::StringW& dyn_ussName() {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::BaseCompositeField_3::FieldDescription::dyn_ussName");
        auto ___internal__instance = *this;
        static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ussName"))->offset;
        return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
      }
      // Autogenerated instance field getter
      // Get instance field: readonly System.Func`2<TValueType,TFieldValue> read
      [[deprecated("Use field access instead!")]] ::System::Func_2<TValueType, TFieldValue>*& dyn_read() {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::BaseCompositeField_3::FieldDescription::dyn_read");
        auto ___internal__instance = *this;
        static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "read"))->offset;
        return *reinterpret_cast<::System::Func_2<TValueType, TFieldValue>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
      }
      // Autogenerated instance field getter
      // Get instance field: readonly UnityEngine.UIElements.BaseCompositeField`3/FieldDescription/WriteDelegate<TValueType,TField,TFieldValue> write
      [[deprecated("Use field access instead!")]] typename ::UnityEngine::UIElements::BaseCompositeField_3<TValueType, TField, TFieldValue>::FieldDescription::WriteDelegate*& dyn_write() {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::BaseCompositeField_3::FieldDescription::dyn_write");
        auto ___internal__instance = *this;
        static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "write"))->offset;
        return *reinterpret_cast<typename ::UnityEngine::UIElements::BaseCompositeField_3<TValueType, TField, TFieldValue>::FieldDescription::WriteDelegate**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
      }
      // public System.Void .ctor(System.String name, System.String ussName, System.Func`2<TValueType,TFieldValue> read, UnityEngine.UIElements.BaseCompositeField`3/FieldDescription/WriteDelegate<TValueType,TField,TFieldValue> write)
      // Offset: 0xFFFFFFFFFFFFFFFF
      // ABORTED: conflicts with another method.  FieldDescription(::StringW name, ::StringW ussName, ::System::Func_2<TValueType, TFieldValue>* read, typename ::UnityEngine::UIElements::BaseCompositeField_3<TValueType, TField, TFieldValue>::FieldDescription::WriteDelegate* write)
    }; // UnityEngine.UIElements.BaseCompositeField`3/FieldDescription
    // Could not write size check! Type: UnityEngine.UIElements.BaseCompositeField`3/FieldDescription is generic, or has no fields that are valid for size checks!
    // WARNING Size may be invalid!
    // Autogenerated type: UnityEngine.UIElements.BaseCompositeField`3/<>c__DisplayClass24_0
    // [TokenAttribute] Offset: FFFFFFFF
    // [CompilerGeneratedAttribute] Offset: FFFFFFFF
    class $$c__DisplayClass24_0 : public ::il2cpp_utils::il2cpp_type_check::NestedType, public ::Il2CppObject {
      public:
      using declaring_type = BaseCompositeField_3<TValueType, TField, TFieldValue>*;
      static constexpr std::string_view NESTED_NAME = "<>c__DisplayClass24_0";
      static constexpr bool IS_VALUE_TYPE = false;
      public:
      // public UnityEngine.UIElements.BaseCompositeField`3/FieldDescription<TValueType,TField,TFieldValue> desc
      // Size: 0xFFFFFFFF
      // Offset: 0x0
      typename ::UnityEngine::UIElements::BaseCompositeField_3<TValueType, TField, TFieldValue>::FieldDescription desc;
      // public TField field
      // Size: 0xFFFFFFFF
      // Offset: 0x0
      TField field;
      // public UnityEngine.UIElements.BaseCompositeField`3<TValueType,TField,TFieldValue> <>4__this
      // Size: 0x8
      // Offset: 0x0
      ::UnityEngine::UIElements::BaseCompositeField_3<TValueType, TField, TFieldValue>* $$4__this;
      // Field size check
      static_assert(sizeof(::UnityEngine::UIElements::BaseCompositeField_3<TValueType, TField, TFieldValue>*) == 0x8);
      public:
      // Autogenerated instance field getter
      // Get instance field: public UnityEngine.UIElements.BaseCompositeField`3/FieldDescription<TValueType,TField,TFieldValue> desc
      [[deprecated("Use field access instead!")]] typename ::UnityEngine::UIElements::BaseCompositeField_3<TValueType, TField, TFieldValue>::FieldDescription& dyn_desc() {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::BaseCompositeField_3::$$c__DisplayClass24_0::dyn_desc");
        auto ___internal__instance = this;
        static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "desc"))->offset;
        return *reinterpret_cast<typename ::UnityEngine::UIElements::BaseCompositeField_3<TValueType, TField, TFieldValue>::FieldDescription*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
      }
      // Autogenerated instance field getter
      // Get instance field: public TField field
      [[deprecated("Use field access instead!")]] TField& dyn_field() {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::BaseCompositeField_3::$$c__DisplayClass24_0::dyn_field");
        auto ___internal__instance = this;
        static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "field"))->offset;
        return *reinterpret_cast<TField*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
      }
      // Autogenerated instance field getter
      // Get instance field: public UnityEngine.UIElements.BaseCompositeField`3<TValueType,TField,TFieldValue> <>4__this
      [[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::BaseCompositeField_3<TValueType, TField, TFieldValue>*& dyn_$$4__this() {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::BaseCompositeField_3::$$c__DisplayClass24_0::dyn_$$4__this");
        auto ___internal__instance = this;
        static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
        return *reinterpret_cast<::UnityEngine::UIElements::BaseCompositeField_3<TValueType, TField, TFieldValue>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
      }
      // public System.Void .ctor()
      // Offset: 0xFFFFFFFFFFFFFFFF
      template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
      static typename BaseCompositeField_3<TValueType, TField, TFieldValue>::$$c__DisplayClass24_0* New_ctor() {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::BaseCompositeField_3::$$c__DisplayClass24_0::.ctor");
        return THROW_UNLESS((::il2cpp_utils::New<typename BaseCompositeField_3<TValueType, TField, TFieldValue>::$$c__DisplayClass24_0*, creationType>()));
      }
      // TFieldValue <.ctor>b__0(TFieldValue newValue)
      // Offset: 0xFFFFFFFFFFFFFFFF
      TFieldValue $_ctor$b__0(TFieldValue newValue) {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::BaseCompositeField_3::$$c__DisplayClass24_0::<.ctor>b__0");
        static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.ctor>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newValue)})));
        return ::il2cpp_utils::RunMethodRethrow<TFieldValue, false>(this, ___internal__method, newValue);
      }
      // System.Void <.ctor>b__1(UnityEngine.UIElements.ChangeEvent`1<TFieldValue> e)
      // Offset: 0xFFFFFFFFFFFFFFFF
      void $_ctor$b__1(::UnityEngine::UIElements::ChangeEvent_1<TFieldValue>* e) {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::BaseCompositeField_3::$$c__DisplayClass24_0::<.ctor>b__1");
        static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.ctor>b__1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(e)})));
        ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, e);
      }
    }; // UnityEngine.UIElements.BaseCompositeField`3/<>c__DisplayClass24_0
    // Could not write size check! Type: UnityEngine.UIElements.BaseCompositeField`3/<>c__DisplayClass24_0 is generic, or has no fields that are valid for size checks!
    public:
    // private System.Collections.Generic.List`1<TField> m_Fields
    // Size: 0x8
    // Offset: 0x0
    ::System::Collections::Generic::List_1<TField>* m_Fields;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<TField>*) == 0x8);
    // private System.Boolean m_ShouldUpdateDisplay
    // Size: 0x1
    // Offset: 0x0
    bool m_ShouldUpdateDisplay;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean m_ForceUpdateDisplay
    // Size: 0x1
    // Offset: 0x0
    bool m_ForceUpdateDisplay;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Int32 m_PropertyIndex
    // Size: 0x4
    // Offset: 0x0
    int m_PropertyIndex;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Autogenerated static field getter
    // Get static field: static public readonly System.String ussClassName
    static ::StringW _get_ussClassName() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::BaseCompositeField_3::_get_ussClassName");
      return THROW_UNLESS((il2cpp_utils::GetFieldValue<::StringW>(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<BaseCompositeField_3<TValueType, TField, TFieldValue>*>::get(), "ussClassName")));
    }
    // Autogenerated static field setter
    // Set static field: static public readonly System.String ussClassName
    static void _set_ussClassName(::StringW value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::BaseCompositeField_3::_set_ussClassName");
      THROW_UNLESS((il2cpp_utils::SetFieldValue(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<BaseCompositeField_3<TValueType, TField, TFieldValue>*>::get(), "ussClassName", value)));
    }
    // Autogenerated static field getter
    // Get static field: static public readonly System.String labelUssClassName
    static ::StringW _get_labelUssClassName() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::BaseCompositeField_3::_get_labelUssClassName");
      return THROW_UNLESS((il2cpp_utils::GetFieldValue<::StringW>(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<BaseCompositeField_3<TValueType, TField, TFieldValue>*>::get(), "labelUssClassName")));
    }
    // Autogenerated static field setter
    // Set static field: static public readonly System.String labelUssClassName
    static void _set_labelUssClassName(::StringW value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::BaseCompositeField_3::_set_labelUssClassName");
      THROW_UNLESS((il2cpp_utils::SetFieldValue(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<BaseCompositeField_3<TValueType, TField, TFieldValue>*>::get(), "labelUssClassName", value)));
    }
    // Autogenerated static field getter
    // Get static field: static public readonly System.String inputUssClassName
    static ::StringW _get_inputUssClassName() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::BaseCompositeField_3::_get_inputUssClassName");
      return THROW_UNLESS((il2cpp_utils::GetFieldValue<::StringW>(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<BaseCompositeField_3<TValueType, TField, TFieldValue>*>::get(), "inputUssClassName")));
    }
    // Autogenerated static field setter
    // Set static field: static public readonly System.String inputUssClassName
    static void _set_inputUssClassName(::StringW value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::BaseCompositeField_3::_set_inputUssClassName");
      THROW_UNLESS((il2cpp_utils::SetFieldValue(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<BaseCompositeField_3<TValueType, TField, TFieldValue>*>::get(), "inputUssClassName", value)));
    }
    // Autogenerated static field getter
    // Get static field: static public readonly System.String spacerUssClassName
    static ::StringW _get_spacerUssClassName() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::BaseCompositeField_3::_get_spacerUssClassName");
      return THROW_UNLESS((il2cpp_utils::GetFieldValue<::StringW>(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<BaseCompositeField_3<TValueType, TField, TFieldValue>*>::get(), "spacerUssClassName")));
    }
    // Autogenerated static field setter
    // Set static field: static public readonly System.String spacerUssClassName
    static void _set_spacerUssClassName(::StringW value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::BaseCompositeField_3::_set_spacerUssClassName");
      THROW_UNLESS((il2cpp_utils::SetFieldValue(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<BaseCompositeField_3<TValueType, TField, TFieldValue>*>::get(), "spacerUssClassName", value)));
    }
    // Autogenerated static field getter
    // Get static field: static public readonly System.String multilineVariantUssClassName
    static ::StringW _get_multilineVariantUssClassName() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::BaseCompositeField_3::_get_multilineVariantUssClassName");
      return THROW_UNLESS((il2cpp_utils::GetFieldValue<::StringW>(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<BaseCompositeField_3<TValueType, TField, TFieldValue>*>::get(), "multilineVariantUssClassName")));
    }
    // Autogenerated static field setter
    // Set static field: static public readonly System.String multilineVariantUssClassName
    static void _set_multilineVariantUssClassName(::StringW value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::BaseCompositeField_3::_set_multilineVariantUssClassName");
      THROW_UNLESS((il2cpp_utils::SetFieldValue(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<BaseCompositeField_3<TValueType, TField, TFieldValue>*>::get(), "multilineVariantUssClassName", value)));
    }
    // Autogenerated static field getter
    // Get static field: static public readonly System.String fieldGroupUssClassName
    static ::StringW _get_fieldGroupUssClassName() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::BaseCompositeField_3::_get_fieldGroupUssClassName");
      return THROW_UNLESS((il2cpp_utils::GetFieldValue<::StringW>(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<BaseCompositeField_3<TValueType, TField, TFieldValue>*>::get(), "fieldGroupUssClassName")));
    }
    // Autogenerated static field setter
    // Set static field: static public readonly System.String fieldGroupUssClassName
    static void _set_fieldGroupUssClassName(::StringW value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::BaseCompositeField_3::_set_fieldGroupUssClassName");
      THROW_UNLESS((il2cpp_utils::SetFieldValue(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<BaseCompositeField_3<TValueType, TField, TFieldValue>*>::get(), "fieldGroupUssClassName", value)));
    }
    // Autogenerated static field getter
    // Get static field: static public readonly System.String fieldUssClassName
    static ::StringW _get_fieldUssClassName() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::BaseCompositeField_3::_get_fieldUssClassName");
      return THROW_UNLESS((il2cpp_utils::GetFieldValue<::StringW>(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<BaseCompositeField_3<TValueType, TField, TFieldValue>*>::get(), "fieldUssClassName")));
    }
    // Autogenerated static field setter
    // Set static field: static public readonly System.String fieldUssClassName
    static void _set_fieldUssClassName(::StringW value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::BaseCompositeField_3::_set_fieldUssClassName");
      THROW_UNLESS((il2cpp_utils::SetFieldValue(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<BaseCompositeField_3<TValueType, TField, TFieldValue>*>::get(), "fieldUssClassName", value)));
    }
    // Autogenerated static field getter
    // Get static field: static public readonly System.String firstFieldVariantUssClassName
    static ::StringW _get_firstFieldVariantUssClassName() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::BaseCompositeField_3::_get_firstFieldVariantUssClassName");
      return THROW_UNLESS((il2cpp_utils::GetFieldValue<::StringW>(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<BaseCompositeField_3<TValueType, TField, TFieldValue>*>::get(), "firstFieldVariantUssClassName")));
    }
    // Autogenerated static field setter
    // Set static field: static public readonly System.String firstFieldVariantUssClassName
    static void _set_firstFieldVariantUssClassName(::StringW value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::BaseCompositeField_3::_set_firstFieldVariantUssClassName");
      THROW_UNLESS((il2cpp_utils::SetFieldValue(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<BaseCompositeField_3<TValueType, TField, TFieldValue>*>::get(), "firstFieldVariantUssClassName", value)));
    }
    // Autogenerated static field getter
    // Get static field: static public readonly System.String twoLinesVariantUssClassName
    static ::StringW _get_twoLinesVariantUssClassName() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::BaseCompositeField_3::_get_twoLinesVariantUssClassName");
      return THROW_UNLESS((il2cpp_utils::GetFieldValue<::StringW>(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<BaseCompositeField_3<TValueType, TField, TFieldValue>*>::get(), "twoLinesVariantUssClassName")));
    }
    // Autogenerated static field setter
    // Set static field: static public readonly System.String twoLinesVariantUssClassName
    static void _set_twoLinesVariantUssClassName(::StringW value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::BaseCompositeField_3::_set_twoLinesVariantUssClassName");
      THROW_UNLESS((il2cpp_utils::SetFieldValue(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<BaseCompositeField_3<TValueType, TField, TFieldValue>*>::get(), "twoLinesVariantUssClassName", value)));
    }
    // Autogenerated instance field getter
    // Get instance field: private System.Collections.Generic.List`1<TField> m_Fields
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<TField>*& dyn_m_Fields() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::BaseCompositeField_3::dyn_m_Fields");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Fields"))->offset;
      return *reinterpret_cast<::System::Collections::Generic::List_1<TField>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: private System.Boolean m_ShouldUpdateDisplay
    [[deprecated("Use field access instead!")]] bool& dyn_m_ShouldUpdateDisplay() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::BaseCompositeField_3::dyn_m_ShouldUpdateDisplay");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ShouldUpdateDisplay"))->offset;
      return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: private System.Boolean m_ForceUpdateDisplay
    [[deprecated("Use field access instead!")]] bool& dyn_m_ForceUpdateDisplay() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::BaseCompositeField_3::dyn_m_ForceUpdateDisplay");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ForceUpdateDisplay"))->offset;
      return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: private System.Int32 m_PropertyIndex
    [[deprecated("Use field access instead!")]] int& dyn_m_PropertyIndex() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::BaseCompositeField_3::dyn_m_PropertyIndex");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_PropertyIndex"))->offset;
      return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // private UnityEngine.UIElements.VisualElement GetSpacer()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::UnityEngine::UIElements::VisualElement* GetSpacer() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::BaseCompositeField_3::GetSpacer");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSpacer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::UIElements::VisualElement*, false>(this, ___internal__method);
    }
    // UnityEngine.UIElements.BaseCompositeField`3/FieldDescription<TValueType,TField,TFieldValue>[] DescribeFields()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::ArrayW<typename ::UnityEngine::UIElements::BaseCompositeField_3<TValueType, TField, TFieldValue>::FieldDescription> DescribeFields() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::BaseCompositeField_3::DescribeFields");
      auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UIElements::BaseCompositeField_3<TValueType, TField, TFieldValue>*), -1)));
      return ::il2cpp_utils::RunMethodRethrow<::ArrayW<typename ::UnityEngine::UIElements::BaseCompositeField_3<TValueType, TField, TFieldValue>::FieldDescription>, false>(this, ___internal__method);
    }
    // protected System.Void .ctor(System.String label, System.Int32 fieldsByLine)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static BaseCompositeField_3<TValueType, TField, TFieldValue>* New_ctor(::StringW label, int fieldsByLine) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::BaseCompositeField_3::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<BaseCompositeField_3<TValueType, TField, TFieldValue>*, creationType>(label, fieldsByLine)));
    }
    // private System.Void UpdateDisplay()
    // Offset: 0xFFFFFFFFFFFFFFFF
    void UpdateDisplay() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::BaseCompositeField_3::UpdateDisplay");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateDisplay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
    }
    // public override System.Void SetValueWithoutNotify(TValueType newValue)
    // Offset: 0xFFFFFFFFFFFFFFFF
    // Implemented from: UnityEngine.UIElements.BaseField`1
    // Base method: System.Void BaseField_1::SetValueWithoutNotify(TValueType newValue)
    void SetValueWithoutNotify(TValueType newValue) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::BaseCompositeField_3::SetValueWithoutNotify");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UIElements::BaseField_1<TValueType>*), -1));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newValue);
    }
    // override System.Void OnViewDataReady()
    // Offset: 0xFFFFFFFFFFFFFFFF
    // Implemented from: UnityEngine.UIElements.BaseField`1
    // Base method: System.Void BaseField_1::OnViewDataReady()
    void OnViewDataReady() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::BaseCompositeField_3::OnViewDataReady");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UIElements::BaseField_1<TValueType>*), -1));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
    }
    // protected override System.Void UpdateMixedValueContent()
    // Offset: 0xFFFFFFFFFFFFFFFF
    // Implemented from: UnityEngine.UIElements.BaseField`1
    // Base method: System.Void BaseField_1::UpdateMixedValueContent()
    void UpdateMixedValueContent() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::BaseCompositeField_3::UpdateMixedValueContent");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UIElements::BaseField_1<TValueType>*), -1));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
    }
    // static private System.Void .cctor()
    // Offset: 0xFFFFFFFFFFFFFFFF
    // Implemented from: UnityEngine.UIElements.BaseField`1
    // Base method: System.Void BaseField_1::.cctor()
    // Base method: System.Void VisualElement::.cctor()
    static void _cctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::BaseCompositeField_3::.cctor");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<BaseCompositeField_3<TValueType, TField, TFieldValue>*>::get(), ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
    }
  }; // UnityEngine.UIElements.BaseCompositeField`3
  // Could not write size check! Type: UnityEngine.UIElements.BaseCompositeField`3 is generic, or has no fields that are valid for size checks!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
