// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.UIElements.VisualElement
#include "UnityEngine/UIElements/VisualElement.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::UIElements
namespace UnityEngine::UIElements {
  // Forward declaring type: Label
  class Label;
}
// Completed forward declares
// Type namespace: UnityEngine.UIElements.Internal
namespace UnityEngine::UIElements::Internal {
  // Forward declaring type: MultiColumnHeaderColumnSortIndicator
  class MultiColumnHeaderColumnSortIndicator;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::UIElements::Internal::MultiColumnHeaderColumnSortIndicator);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::UIElements::Internal::MultiColumnHeaderColumnSortIndicator*, "UnityEngine.UIElements.Internal", "MultiColumnHeaderColumnSortIndicator");
// Type namespace: UnityEngine.UIElements.Internal
namespace UnityEngine::UIElements::Internal {
  // WARNING Size may be invalid!
  // Autogenerated type: UnityEngine.UIElements.Internal.MultiColumnHeaderColumnSortIndicator
  // [TokenAttribute] Offset: FFFFFFFF
  class MultiColumnHeaderColumnSortIndicator : public ::UnityEngine::UIElements::VisualElement {
    public:
    public:
    // private UnityEngine.UIElements.Label m_IndexLabel
    // Size: 0x8
    // Offset: 0x3C0
    ::UnityEngine::UIElements::Label* m_IndexLabel;
    // Field size check
    static_assert(sizeof(::UnityEngine::UIElements::Label*) == 0x8);
    public:
    // Creating conversion operator: operator ::UnityEngine::UIElements::Label*
    constexpr operator ::UnityEngine::UIElements::Label*() const noexcept {
      return m_IndexLabel;
    }
    // Get static field: static public readonly System.String ussClassName
    static ::StringW _get_ussClassName();
    // Set static field: static public readonly System.String ussClassName
    static void _set_ussClassName(::StringW value);
    // Get static field: static public readonly System.String arrowUssClassName
    static ::StringW _get_arrowUssClassName();
    // Set static field: static public readonly System.String arrowUssClassName
    static void _set_arrowUssClassName(::StringW value);
    // Get static field: static public readonly System.String indexLabelUssClassName
    static ::StringW _get_indexLabelUssClassName();
    // Set static field: static public readonly System.String indexLabelUssClassName
    static void _set_indexLabelUssClassName(::StringW value);
    // Get instance field reference: private UnityEngine.UIElements.Label m_IndexLabel
    [[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::Label*& dyn_m_IndexLabel();
    // public System.Void set_sortOrderLabel(System.String value)
    // Offset: 0x5610630
    void set_sortOrderLabel(::StringW value);
    // public System.Void .ctor()
    // Offset: 0x5610654
    // Implemented from: UnityEngine.UIElements.VisualElement
    // Base method: System.Void VisualElement::.ctor()
    // Base method: System.Void Focusable::.ctor()
    // Base method: System.Void CallbackEventHandler::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static MultiColumnHeaderColumnSortIndicator* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::Internal::MultiColumnHeaderColumnSortIndicator::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<MultiColumnHeaderColumnSortIndicator*, creationType>()));
    }
    // static private System.Void .cctor()
    // Offset: 0x56107B0
    // Implemented from: UnityEngine.UIElements.VisualElement
    // Base method: System.Void VisualElement::.cctor()
    static void _cctor();
  }; // UnityEngine.UIElements.Internal.MultiColumnHeaderColumnSortIndicator
  // WARNING Not writing size check since size may be invalid!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::UIElements::Internal::MultiColumnHeaderColumnSortIndicator::set_sortOrderLabel
// Il2CppName: set_sortOrderLabel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::Internal::MultiColumnHeaderColumnSortIndicator::*)(::StringW)>(&UnityEngine::UIElements::Internal::MultiColumnHeaderColumnSortIndicator::set_sortOrderLabel)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::Internal::MultiColumnHeaderColumnSortIndicator*), "set_sortOrderLabel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::Internal::MultiColumnHeaderColumnSortIndicator::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::UIElements::Internal::MultiColumnHeaderColumnSortIndicator::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&UnityEngine::UIElements::Internal::MultiColumnHeaderColumnSortIndicator::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::Internal::MultiColumnHeaderColumnSortIndicator*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
