// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.UIElements.PointerManipulator
#include "UnityEngine/UIElements/PointerManipulator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::UIElements::Internal
namespace UnityEngine::UIElements::Internal {
  // Forward declaring type: MultiColumnCollectionHeader
  class MultiColumnCollectionHeader;
  // Forward declaring type: MultiColumnHeaderColumnMoveLocationPreview
  class MultiColumnHeaderColumnMoveLocationPreview;
}
// Forward declaring namespace: UnityEngine::UIElements
namespace UnityEngine::UIElements {
  // Forward declaring type: VisualElement
  class VisualElement;
  // Forward declaring type: Column
  class Column;
  // Forward declaring type: ColumnLayout
  class ColumnLayout;
  // Forward declaring type: MouseDownEvent
  class MouseDownEvent;
  // Forward declaring type: MouseMoveEvent
  class MouseMoveEvent;
  // Forward declaring type: MouseUpEvent
  class MouseUpEvent;
  // Forward declaring type: MouseCaptureOutEvent
  class MouseCaptureOutEvent;
  // Forward declaring type: PointerDownEvent
  class PointerDownEvent;
  // Forward declaring type: PointerMoveEvent
  class PointerMoveEvent;
  // Forward declaring type: PointerUpEvent
  class PointerUpEvent;
  // Forward declaring type: PointerCancelEvent
  class PointerCancelEvent;
  // Forward declaring type: PointerCaptureOutEvent
  class PointerCaptureOutEvent;
  // Forward declaring type: EventBase
  class EventBase;
  // Forward declaring type: KeyDownEvent
  class KeyDownEvent;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Action`1<T>
  template<typename T>
  class Action_1;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Vector2
  struct Vector2;
}
// Completed forward declares
// Type namespace: UnityEngine.UIElements.Internal
namespace UnityEngine::UIElements::Internal {
  // Forward declaring type: ColumnMover
  class ColumnMover;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::UIElements::Internal::ColumnMover);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::UIElements::Internal::ColumnMover*, "UnityEngine.UIElements.Internal", "ColumnMover");
// Type namespace: UnityEngine.UIElements.Internal
namespace UnityEngine::UIElements::Internal {
  // Size: 0x90
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.UIElements.Internal.ColumnMover
  // [TokenAttribute] Offset: FFFFFFFF
  class ColumnMover : public ::UnityEngine::UIElements::PointerManipulator {
    public:
    public:
    // private System.Single m_StartPos
    // Size: 0x4
    // Offset: 0x30
    float m_StartPos;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Single m_LastPos
    // Size: 0x4
    // Offset: 0x34
    float m_LastPos;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Boolean m_Active
    // Size: 0x1
    // Offset: 0x38
    bool m_Active;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean m_Moving
    // Size: 0x1
    // Offset: 0x39
    bool m_Moving;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean m_Cancelled
    // Size: 0x1
    // Offset: 0x3A
    bool m_Cancelled;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: m_Cancelled and: m_Header
    char __padding4[0x5] = {};
    // private UnityEngine.UIElements.Internal.MultiColumnCollectionHeader m_Header
    // Size: 0x8
    // Offset: 0x40
    ::UnityEngine::UIElements::Internal::MultiColumnCollectionHeader* m_Header;
    // Field size check
    static_assert(sizeof(::UnityEngine::UIElements::Internal::MultiColumnCollectionHeader*) == 0x8);
    // private UnityEngine.UIElements.VisualElement m_PreviewElement
    // Size: 0x8
    // Offset: 0x48
    ::UnityEngine::UIElements::VisualElement* m_PreviewElement;
    // Field size check
    static_assert(sizeof(::UnityEngine::UIElements::VisualElement*) == 0x8);
    // private UnityEngine.UIElements.Internal.MultiColumnHeaderColumnMoveLocationPreview m_LocationPreviewElement
    // Size: 0x8
    // Offset: 0x50
    ::UnityEngine::UIElements::Internal::MultiColumnHeaderColumnMoveLocationPreview* m_LocationPreviewElement;
    // Field size check
    static_assert(sizeof(::UnityEngine::UIElements::Internal::MultiColumnHeaderColumnMoveLocationPreview*) == 0x8);
    // private UnityEngine.UIElements.Column m_ColumnToMove
    // Size: 0x8
    // Offset: 0x58
    ::UnityEngine::UIElements::Column* m_ColumnToMove;
    // Field size check
    static_assert(sizeof(::UnityEngine::UIElements::Column*) == 0x8);
    // private System.Single m_ColumnToMovePos
    // Size: 0x4
    // Offset: 0x60
    float m_ColumnToMovePos;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Single m_ColumnToMoveWidth
    // Size: 0x4
    // Offset: 0x64
    float m_ColumnToMoveWidth;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private UnityEngine.UIElements.Column m_DestinationColumn
    // Size: 0x8
    // Offset: 0x68
    ::UnityEngine::UIElements::Column* m_DestinationColumn;
    // Field size check
    static_assert(sizeof(::UnityEngine::UIElements::Column*) == 0x8);
    // private System.Boolean m_MoveBeforeDestination
    // Size: 0x1
    // Offset: 0x70
    bool m_MoveBeforeDestination;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: m_MoveBeforeDestination and: columnLayout
    char __padding12[0x7] = {};
    // private UnityEngine.UIElements.ColumnLayout <columnLayout>k__BackingField
    // Size: 0x8
    // Offset: 0x78
    ::UnityEngine::UIElements::ColumnLayout* columnLayout;
    // Field size check
    static_assert(sizeof(::UnityEngine::UIElements::ColumnLayout*) == 0x8);
    // private System.Action`1<UnityEngine.UIElements.Internal.ColumnMover> activeChanged
    // Size: 0x8
    // Offset: 0x80
    ::System::Action_1<::UnityEngine::UIElements::Internal::ColumnMover*>* activeChanged;
    // Field size check
    static_assert(sizeof(::System::Action_1<::UnityEngine::UIElements::Internal::ColumnMover*>*) == 0x8);
    // private System.Action`1<UnityEngine.UIElements.Internal.ColumnMover> movingChanged
    // Size: 0x8
    // Offset: 0x88
    ::System::Action_1<::UnityEngine::UIElements::Internal::ColumnMover*>* movingChanged;
    // Field size check
    static_assert(sizeof(::System::Action_1<::UnityEngine::UIElements::Internal::ColumnMover*>*) == 0x8);
    public:
    // Get instance field reference: private System.Single m_StartPos
    [[deprecated("Use field access instead!")]] float& dyn_m_StartPos();
    // Get instance field reference: private System.Single m_LastPos
    [[deprecated("Use field access instead!")]] float& dyn_m_LastPos();
    // Get instance field reference: private System.Boolean m_Active
    [[deprecated("Use field access instead!")]] bool& dyn_m_Active();
    // Get instance field reference: private System.Boolean m_Moving
    [[deprecated("Use field access instead!")]] bool& dyn_m_Moving();
    // Get instance field reference: private System.Boolean m_Cancelled
    [[deprecated("Use field access instead!")]] bool& dyn_m_Cancelled();
    // Get instance field reference: private UnityEngine.UIElements.Internal.MultiColumnCollectionHeader m_Header
    [[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::Internal::MultiColumnCollectionHeader*& dyn_m_Header();
    // Get instance field reference: private UnityEngine.UIElements.VisualElement m_PreviewElement
    [[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::VisualElement*& dyn_m_PreviewElement();
    // Get instance field reference: private UnityEngine.UIElements.Internal.MultiColumnHeaderColumnMoveLocationPreview m_LocationPreviewElement
    [[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::Internal::MultiColumnHeaderColumnMoveLocationPreview*& dyn_m_LocationPreviewElement();
    // Get instance field reference: private UnityEngine.UIElements.Column m_ColumnToMove
    [[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::Column*& dyn_m_ColumnToMove();
    // Get instance field reference: private System.Single m_ColumnToMovePos
    [[deprecated("Use field access instead!")]] float& dyn_m_ColumnToMovePos();
    // Get instance field reference: private System.Single m_ColumnToMoveWidth
    [[deprecated("Use field access instead!")]] float& dyn_m_ColumnToMoveWidth();
    // Get instance field reference: private UnityEngine.UIElements.Column m_DestinationColumn
    [[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::Column*& dyn_m_DestinationColumn();
    // Get instance field reference: private System.Boolean m_MoveBeforeDestination
    [[deprecated("Use field access instead!")]] bool& dyn_m_MoveBeforeDestination();
    // Get instance field reference: private UnityEngine.UIElements.ColumnLayout <columnLayout>k__BackingField
    [[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::ColumnLayout*& dyn_$columnLayout$k__BackingField();
    // Get instance field reference: private System.Action`1<UnityEngine.UIElements.Internal.ColumnMover> activeChanged
    [[deprecated("Use field access instead!")]] ::System::Action_1<::UnityEngine::UIElements::Internal::ColumnMover*>*& dyn_activeChanged();
    // Get instance field reference: private System.Action`1<UnityEngine.UIElements.Internal.ColumnMover> movingChanged
    [[deprecated("Use field access instead!")]] ::System::Action_1<::UnityEngine::UIElements::Internal::ColumnMover*>*& dyn_movingChanged();
    // public UnityEngine.UIElements.ColumnLayout get_columnLayout()
    // Offset: 0x5606C0C
    ::UnityEngine::UIElements::ColumnLayout* get_columnLayout();
    // public System.Void set_columnLayout(UnityEngine.UIElements.ColumnLayout value)
    // Offset: 0x5606C14
    void set_columnLayout(::UnityEngine::UIElements::ColumnLayout* value);
    // public System.Boolean get_active()
    // Offset: 0x5606C1C
    bool get_active();
    // public System.Void set_active(System.Boolean value)
    // Offset: 0x5606C24
    void set_active(bool value);
    // public System.Boolean get_moving()
    // Offset: 0x5606C5C
    bool get_moving();
    // public System.Void set_moving(System.Boolean value)
    // Offset: 0x5606C64
    void set_moving(bool value);
    // public System.Void add_activeChanged(System.Action`1<UnityEngine.UIElements.Internal.ColumnMover> value)
    // Offset: 0x5606C9C
    void add_activeChanged(::System::Action_1<::UnityEngine::UIElements::Internal::ColumnMover*>* value);
    // public System.Void remove_activeChanged(System.Action`1<UnityEngine.UIElements.Internal.ColumnMover> value)
    // Offset: 0x5606D4C
    void remove_activeChanged(::System::Action_1<::UnityEngine::UIElements::Internal::ColumnMover*>* value);
    // public System.Void add_movingChanged(System.Action`1<UnityEngine.UIElements.Internal.ColumnMover> value)
    // Offset: 0x5606DFC
    void add_movingChanged(::System::Action_1<::UnityEngine::UIElements::Internal::ColumnMover*>* value);
    // public System.Void remove_movingChanged(System.Action`1<UnityEngine.UIElements.Internal.ColumnMover> value)
    // Offset: 0x5606EAC
    void remove_movingChanged(::System::Action_1<::UnityEngine::UIElements::Internal::ColumnMover*>* value);
    // protected System.Void OnMouseDown(UnityEngine.UIElements.MouseDownEvent evt)
    // Offset: 0x5607ACC
    void OnMouseDown(::UnityEngine::UIElements::MouseDownEvent* evt);
    // protected System.Void OnMouseMove(UnityEngine.UIElements.MouseMoveEvent evt)
    // Offset: 0x5607D88
    void OnMouseMove(::UnityEngine::UIElements::MouseMoveEvent* evt);
    // protected System.Void OnMouseUp(UnityEngine.UIElements.MouseUpEvent evt)
    // Offset: 0x5607F04
    void OnMouseUp(::UnityEngine::UIElements::MouseUpEvent* evt);
    // private System.Void OnMouseCaptureOut(UnityEngine.UIElements.MouseCaptureOutEvent evt)
    // Offset: 0x56080C4
    void OnMouseCaptureOut(::UnityEngine::UIElements::MouseCaptureOutEvent* evt);
    // private System.Void OnPointerDown(UnityEngine.UIElements.PointerDownEvent evt)
    // Offset: 0x5608228
    void OnPointerDown(::UnityEngine::UIElements::PointerDownEvent* evt);
    // private System.Void OnPointerMove(UnityEngine.UIElements.PointerMoveEvent evt)
    // Offset: 0x5608350
    void OnPointerMove(::UnityEngine::UIElements::PointerMoveEvent* evt);
    // private System.Void OnPointerUp(UnityEngine.UIElements.PointerUpEvent evt)
    // Offset: 0x5608468
    void OnPointerUp(::UnityEngine::UIElements::PointerUpEvent* evt);
    // private System.Void OnPointerCancel(UnityEngine.UIElements.PointerCancelEvent evt)
    // Offset: 0x5608594
    void OnPointerCancel(::UnityEngine::UIElements::PointerCancelEvent* evt);
    // private System.Void OnPointerCaptureOut(UnityEngine.UIElements.PointerCaptureOutEvent evt)
    // Offset: 0x560867C
    void OnPointerCaptureOut(::UnityEngine::UIElements::PointerCaptureOutEvent* evt);
    // static private System.Boolean IsNotMouseEvent(System.Int32 pointerId)
    // Offset: 0x5608618
    static bool IsNotMouseEvent(int pointerId);
    // protected System.Void ProcessCancelEvent(UnityEngine.UIElements.EventBase evt, System.Int32 pointerId)
    // Offset: 0x5608140
    void ProcessCancelEvent(::UnityEngine::UIElements::EventBase* evt, int pointerId);
    // private System.Void OnKeyDown(UnityEngine.UIElements.KeyDownEvent e)
    // Offset: 0x560883C
    void OnKeyDown(::UnityEngine::UIElements::KeyDownEvent* e);
    // private System.Void ProcessDownEvent(UnityEngine.UIElements.EventBase evt, UnityEngine.Vector2 localPosition, System.Int32 pointerId)
    // Offset: 0x5607B80
    void ProcessDownEvent(::UnityEngine::UIElements::EventBase* evt, ::UnityEngine::Vector2 localPosition, int pointerId);
    // private System.Void ProcessMoveEvent(UnityEngine.UIElements.EventBase e, UnityEngine.Vector2 localPosition)
    // Offset: 0x5607DEC
    void ProcessMoveEvent(::UnityEngine::UIElements::EventBase* e, ::UnityEngine::Vector2 localPosition);
    // private System.Void ProcessUpEvent(UnityEngine.UIElements.EventBase evt, UnityEngine.Vector2 localPosition, System.Int32 pointerId)
    // Offset: 0x5607FA8
    void ProcessUpEvent(::UnityEngine::UIElements::EventBase* evt, ::UnityEngine::Vector2 localPosition, int pointerId);
    // private System.Void BeginDragMove(System.Single pos)
    // Offset: 0x56088A8
    void BeginDragMove(float pos);
    // System.Void DragMove(System.Single pos)
    // Offset: 0x5608D54
    void DragMove(float pos);
    // private System.Void UpdatePreviewPosition()
    // Offset: 0x56090F8
    void UpdatePreviewPosition();
    // private System.Void UpdateMoveLocation()
    // Offset: 0x5608D5C
    void UpdateMoveLocation();
    // private System.Void EndDragMove(System.Boolean cancelled)
    // Offset: 0x56086EC
    void EndDragMove(bool cancelled);
    // public System.Void .ctor()
    // Offset: 0x5606F5C
    // Implemented from: UnityEngine.UIElements.PointerManipulator
    // Base method: System.Void PointerManipulator::.ctor()
    // Base method: System.Void MouseManipulator::.ctor()
    // Base method: System.Void Manipulator::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static ColumnMover* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::Internal::ColumnMover::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<ColumnMover*, creationType>()));
    }
    // protected override System.Void RegisterCallbacksOnTarget()
    // Offset: 0x5607014
    // Implemented from: UnityEngine.UIElements.Manipulator
    // Base method: System.Void Manipulator::RegisterCallbacksOnTarget()
    void RegisterCallbacksOnTarget();
    // protected override System.Void UnregisterCallbacksFromTarget()
    // Offset: 0x5607570
    // Implemented from: UnityEngine.UIElements.Manipulator
    // Base method: System.Void Manipulator::UnregisterCallbacksFromTarget()
    void UnregisterCallbacksFromTarget();
  }; // UnityEngine.UIElements.Internal.ColumnMover
  #pragma pack(pop)
  static check_size<sizeof(ColumnMover), 136 + sizeof(::System::Action_1<::UnityEngine::UIElements::Internal::ColumnMover*>*)> __UnityEngine_UIElements_Internal_ColumnMoverSizeCheck;
  static_assert(sizeof(ColumnMover) == 0x90);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::UIElements::Internal::ColumnMover::get_columnLayout
// Il2CppName: get_columnLayout
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::ColumnLayout* (UnityEngine::UIElements::Internal::ColumnMover::*)()>(&UnityEngine::UIElements::Internal::ColumnMover::get_columnLayout)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::Internal::ColumnMover*), "get_columnLayout", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::Internal::ColumnMover::set_columnLayout
// Il2CppName: set_columnLayout
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::Internal::ColumnMover::*)(::UnityEngine::UIElements::ColumnLayout*)>(&UnityEngine::UIElements::Internal::ColumnMover::set_columnLayout)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "ColumnLayout")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::Internal::ColumnMover*), "set_columnLayout", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::Internal::ColumnMover::get_active
// Il2CppName: get_active
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::Internal::ColumnMover::*)()>(&UnityEngine::UIElements::Internal::ColumnMover::get_active)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::Internal::ColumnMover*), "get_active", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::Internal::ColumnMover::set_active
// Il2CppName: set_active
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::Internal::ColumnMover::*)(bool)>(&UnityEngine::UIElements::Internal::ColumnMover::set_active)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::Internal::ColumnMover*), "set_active", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::Internal::ColumnMover::get_moving
// Il2CppName: get_moving
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::Internal::ColumnMover::*)()>(&UnityEngine::UIElements::Internal::ColumnMover::get_moving)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::Internal::ColumnMover*), "get_moving", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::Internal::ColumnMover::set_moving
// Il2CppName: set_moving
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::Internal::ColumnMover::*)(bool)>(&UnityEngine::UIElements::Internal::ColumnMover::set_moving)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::Internal::ColumnMover*), "set_moving", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::Internal::ColumnMover::add_activeChanged
// Il2CppName: add_activeChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::Internal::ColumnMover::*)(::System::Action_1<::UnityEngine::UIElements::Internal::ColumnMover*>*)>(&UnityEngine::UIElements::Internal::ColumnMover::add_activeChanged)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.UIElements.Internal", "ColumnMover")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::Internal::ColumnMover*), "add_activeChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::Internal::ColumnMover::remove_activeChanged
// Il2CppName: remove_activeChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::Internal::ColumnMover::*)(::System::Action_1<::UnityEngine::UIElements::Internal::ColumnMover*>*)>(&UnityEngine::UIElements::Internal::ColumnMover::remove_activeChanged)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.UIElements.Internal", "ColumnMover")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::Internal::ColumnMover*), "remove_activeChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::Internal::ColumnMover::add_movingChanged
// Il2CppName: add_movingChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::Internal::ColumnMover::*)(::System::Action_1<::UnityEngine::UIElements::Internal::ColumnMover*>*)>(&UnityEngine::UIElements::Internal::ColumnMover::add_movingChanged)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.UIElements.Internal", "ColumnMover")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::Internal::ColumnMover*), "add_movingChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::Internal::ColumnMover::remove_movingChanged
// Il2CppName: remove_movingChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::Internal::ColumnMover::*)(::System::Action_1<::UnityEngine::UIElements::Internal::ColumnMover*>*)>(&UnityEngine::UIElements::Internal::ColumnMover::remove_movingChanged)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.UIElements.Internal", "ColumnMover")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::Internal::ColumnMover*), "remove_movingChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::Internal::ColumnMover::OnMouseDown
// Il2CppName: OnMouseDown
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::Internal::ColumnMover::*)(::UnityEngine::UIElements::MouseDownEvent*)>(&UnityEngine::UIElements::Internal::ColumnMover::OnMouseDown)> {
  static const MethodInfo* get() {
    static auto* evt = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "MouseDownEvent")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::Internal::ColumnMover*), "OnMouseDown", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{evt});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::Internal::ColumnMover::OnMouseMove
// Il2CppName: OnMouseMove
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::Internal::ColumnMover::*)(::UnityEngine::UIElements::MouseMoveEvent*)>(&UnityEngine::UIElements::Internal::ColumnMover::OnMouseMove)> {
  static const MethodInfo* get() {
    static auto* evt = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "MouseMoveEvent")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::Internal::ColumnMover*), "OnMouseMove", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{evt});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::Internal::ColumnMover::OnMouseUp
// Il2CppName: OnMouseUp
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::Internal::ColumnMover::*)(::UnityEngine::UIElements::MouseUpEvent*)>(&UnityEngine::UIElements::Internal::ColumnMover::OnMouseUp)> {
  static const MethodInfo* get() {
    static auto* evt = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "MouseUpEvent")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::Internal::ColumnMover*), "OnMouseUp", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{evt});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::Internal::ColumnMover::OnMouseCaptureOut
// Il2CppName: OnMouseCaptureOut
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::Internal::ColumnMover::*)(::UnityEngine::UIElements::MouseCaptureOutEvent*)>(&UnityEngine::UIElements::Internal::ColumnMover::OnMouseCaptureOut)> {
  static const MethodInfo* get() {
    static auto* evt = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "MouseCaptureOutEvent")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::Internal::ColumnMover*), "OnMouseCaptureOut", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{evt});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::Internal::ColumnMover::OnPointerDown
// Il2CppName: OnPointerDown
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::Internal::ColumnMover::*)(::UnityEngine::UIElements::PointerDownEvent*)>(&UnityEngine::UIElements::Internal::ColumnMover::OnPointerDown)> {
  static const MethodInfo* get() {
    static auto* evt = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "PointerDownEvent")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::Internal::ColumnMover*), "OnPointerDown", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{evt});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::Internal::ColumnMover::OnPointerMove
// Il2CppName: OnPointerMove
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::Internal::ColumnMover::*)(::UnityEngine::UIElements::PointerMoveEvent*)>(&UnityEngine::UIElements::Internal::ColumnMover::OnPointerMove)> {
  static const MethodInfo* get() {
    static auto* evt = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "PointerMoveEvent")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::Internal::ColumnMover*), "OnPointerMove", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{evt});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::Internal::ColumnMover::OnPointerUp
// Il2CppName: OnPointerUp
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::Internal::ColumnMover::*)(::UnityEngine::UIElements::PointerUpEvent*)>(&UnityEngine::UIElements::Internal::ColumnMover::OnPointerUp)> {
  static const MethodInfo* get() {
    static auto* evt = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "PointerUpEvent")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::Internal::ColumnMover*), "OnPointerUp", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{evt});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::Internal::ColumnMover::OnPointerCancel
// Il2CppName: OnPointerCancel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::Internal::ColumnMover::*)(::UnityEngine::UIElements::PointerCancelEvent*)>(&UnityEngine::UIElements::Internal::ColumnMover::OnPointerCancel)> {
  static const MethodInfo* get() {
    static auto* evt = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "PointerCancelEvent")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::Internal::ColumnMover*), "OnPointerCancel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{evt});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::Internal::ColumnMover::OnPointerCaptureOut
// Il2CppName: OnPointerCaptureOut
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::Internal::ColumnMover::*)(::UnityEngine::UIElements::PointerCaptureOutEvent*)>(&UnityEngine::UIElements::Internal::ColumnMover::OnPointerCaptureOut)> {
  static const MethodInfo* get() {
    static auto* evt = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "PointerCaptureOutEvent")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::Internal::ColumnMover*), "OnPointerCaptureOut", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{evt});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::Internal::ColumnMover::IsNotMouseEvent
// Il2CppName: IsNotMouseEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(int)>(&UnityEngine::UIElements::Internal::ColumnMover::IsNotMouseEvent)> {
  static const MethodInfo* get() {
    static auto* pointerId = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::Internal::ColumnMover*), "IsNotMouseEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{pointerId});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::Internal::ColumnMover::ProcessCancelEvent
// Il2CppName: ProcessCancelEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::Internal::ColumnMover::*)(::UnityEngine::UIElements::EventBase*, int)>(&UnityEngine::UIElements::Internal::ColumnMover::ProcessCancelEvent)> {
  static const MethodInfo* get() {
    static auto* evt = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "EventBase")->byval_arg;
    static auto* pointerId = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::Internal::ColumnMover*), "ProcessCancelEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{evt, pointerId});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::Internal::ColumnMover::OnKeyDown
// Il2CppName: OnKeyDown
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::Internal::ColumnMover::*)(::UnityEngine::UIElements::KeyDownEvent*)>(&UnityEngine::UIElements::Internal::ColumnMover::OnKeyDown)> {
  static const MethodInfo* get() {
    static auto* e = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "KeyDownEvent")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::Internal::ColumnMover*), "OnKeyDown", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{e});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::Internal::ColumnMover::ProcessDownEvent
// Il2CppName: ProcessDownEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::Internal::ColumnMover::*)(::UnityEngine::UIElements::EventBase*, ::UnityEngine::Vector2, int)>(&UnityEngine::UIElements::Internal::ColumnMover::ProcessDownEvent)> {
  static const MethodInfo* get() {
    static auto* evt = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "EventBase")->byval_arg;
    static auto* localPosition = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector2")->byval_arg;
    static auto* pointerId = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::Internal::ColumnMover*), "ProcessDownEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{evt, localPosition, pointerId});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::Internal::ColumnMover::ProcessMoveEvent
// Il2CppName: ProcessMoveEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::Internal::ColumnMover::*)(::UnityEngine::UIElements::EventBase*, ::UnityEngine::Vector2)>(&UnityEngine::UIElements::Internal::ColumnMover::ProcessMoveEvent)> {
  static const MethodInfo* get() {
    static auto* e = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "EventBase")->byval_arg;
    static auto* localPosition = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector2")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::Internal::ColumnMover*), "ProcessMoveEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{e, localPosition});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::Internal::ColumnMover::ProcessUpEvent
// Il2CppName: ProcessUpEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::Internal::ColumnMover::*)(::UnityEngine::UIElements::EventBase*, ::UnityEngine::Vector2, int)>(&UnityEngine::UIElements::Internal::ColumnMover::ProcessUpEvent)> {
  static const MethodInfo* get() {
    static auto* evt = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "EventBase")->byval_arg;
    static auto* localPosition = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector2")->byval_arg;
    static auto* pointerId = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::Internal::ColumnMover*), "ProcessUpEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{evt, localPosition, pointerId});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::Internal::ColumnMover::BeginDragMove
// Il2CppName: BeginDragMove
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::Internal::ColumnMover::*)(float)>(&UnityEngine::UIElements::Internal::ColumnMover::BeginDragMove)> {
  static const MethodInfo* get() {
    static auto* pos = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::Internal::ColumnMover*), "BeginDragMove", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{pos});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::Internal::ColumnMover::DragMove
// Il2CppName: DragMove
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::Internal::ColumnMover::*)(float)>(&UnityEngine::UIElements::Internal::ColumnMover::DragMove)> {
  static const MethodInfo* get() {
    static auto* pos = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::Internal::ColumnMover*), "DragMove", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{pos});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::Internal::ColumnMover::UpdatePreviewPosition
// Il2CppName: UpdatePreviewPosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::Internal::ColumnMover::*)()>(&UnityEngine::UIElements::Internal::ColumnMover::UpdatePreviewPosition)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::Internal::ColumnMover*), "UpdatePreviewPosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::Internal::ColumnMover::UpdateMoveLocation
// Il2CppName: UpdateMoveLocation
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::Internal::ColumnMover::*)()>(&UnityEngine::UIElements::Internal::ColumnMover::UpdateMoveLocation)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::Internal::ColumnMover*), "UpdateMoveLocation", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::Internal::ColumnMover::EndDragMove
// Il2CppName: EndDragMove
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::Internal::ColumnMover::*)(bool)>(&UnityEngine::UIElements::Internal::ColumnMover::EndDragMove)> {
  static const MethodInfo* get() {
    static auto* cancelled = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::Internal::ColumnMover*), "EndDragMove", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{cancelled});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::Internal::ColumnMover::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::UIElements::Internal::ColumnMover::RegisterCallbacksOnTarget
// Il2CppName: RegisterCallbacksOnTarget
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::Internal::ColumnMover::*)()>(&UnityEngine::UIElements::Internal::ColumnMover::RegisterCallbacksOnTarget)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::Internal::ColumnMover*), "RegisterCallbacksOnTarget", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::Internal::ColumnMover::UnregisterCallbacksFromTarget
// Il2CppName: UnregisterCallbacksFromTarget
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::Internal::ColumnMover::*)()>(&UnityEngine::UIElements::Internal::ColumnMover::UnregisterCallbacksFromTarget)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::Internal::ColumnMover*), "UnregisterCallbacksFromTarget", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
