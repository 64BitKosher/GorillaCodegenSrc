// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.UIElements.Image
#include "UnityEngine/UIElements/Image.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::UIElements
namespace UnityEngine::UIElements {
  // Forward declaring type: CustomStyleResolvedEvent
  class CustomStyleResolvedEvent;
}
// Completed forward declares
// Type namespace: UnityEngine.UIElements.Internal
namespace UnityEngine::UIElements::Internal {
  // Forward declaring type: MultiColumnHeaderColumnIcon
  class MultiColumnHeaderColumnIcon;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::UIElements::Internal::MultiColumnHeaderColumnIcon);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::UIElements::Internal::MultiColumnHeaderColumnIcon*, "UnityEngine.UIElements.Internal", "MultiColumnHeaderColumnIcon");
// Type namespace: UnityEngine.UIElements.Internal
namespace UnityEngine::UIElements::Internal {
  // WARNING Size may be invalid!
  // Autogenerated type: UnityEngine.UIElements.Internal.MultiColumnHeaderColumnIcon
  // [TokenAttribute] Offset: FFFFFFFF
  class MultiColumnHeaderColumnIcon : public ::UnityEngine::UIElements::Image {
    public:
    public:
    // private System.Boolean <isImageInline>k__BackingField
    // Size: 0x1
    // Offset: 0x403
    bool isImageInline;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    public:
    // Creating conversion operator: operator bool
    constexpr operator bool() const noexcept {
      return isImageInline;
    }
    // Get static field: static public readonly System.String ussClassName
    static ::StringW _get_ussClassName();
    // Set static field: static public readonly System.String ussClassName
    static void _set_ussClassName(::StringW value);
    // Get instance field reference: private System.Boolean <isImageInline>k__BackingField
    [[deprecated("Use field access instead!")]] bool& dyn_$isImageInline$k__BackingField();
    // public System.Boolean get_isImageInline()
    // Offset: 0x56108E4
    bool get_isImageInline();
    // public System.Void set_isImageInline(System.Boolean value)
    // Offset: 0x56108EC
    void set_isImageInline(bool value);
    // public System.Void UpdateClassList()
    // Offset: 0x5610A00
    void UpdateClassList();
    // private System.Void <.ctor>b__5_0(UnityEngine.UIElements.CustomStyleResolvedEvent evt)
    // Offset: 0x5610C08
    void $_ctor$b__5_0(::UnityEngine::UIElements::CustomStyleResolvedEvent* evt);
    // public System.Void .ctor()
    // Offset: 0x56108F8
    // Implemented from: UnityEngine.UIElements.Image
    // Base method: System.Void Image::.ctor()
    // Base method: System.Void VisualElement::.ctor()
    // Base method: System.Void Focusable::.ctor()
    // Base method: System.Void CallbackEventHandler::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static MultiColumnHeaderColumnIcon* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::Internal::MultiColumnHeaderColumnIcon::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<MultiColumnHeaderColumnIcon*, creationType>()));
    }
    // static private System.Void .cctor()
    // Offset: 0x5610B64
    // Implemented from: UnityEngine.UIElements.Image
    // Base method: System.Void Image::.cctor()
    // Base method: System.Void VisualElement::.cctor()
    static void _cctor();
  }; // UnityEngine.UIElements.Internal.MultiColumnHeaderColumnIcon
  // WARNING Not writing size check since size may be invalid!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::UIElements::Internal::MultiColumnHeaderColumnIcon::get_isImageInline
// Il2CppName: get_isImageInline
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::Internal::MultiColumnHeaderColumnIcon::*)()>(&UnityEngine::UIElements::Internal::MultiColumnHeaderColumnIcon::get_isImageInline)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::Internal::MultiColumnHeaderColumnIcon*), "get_isImageInline", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::Internal::MultiColumnHeaderColumnIcon::set_isImageInline
// Il2CppName: set_isImageInline
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::Internal::MultiColumnHeaderColumnIcon::*)(bool)>(&UnityEngine::UIElements::Internal::MultiColumnHeaderColumnIcon::set_isImageInline)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::Internal::MultiColumnHeaderColumnIcon*), "set_isImageInline", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::Internal::MultiColumnHeaderColumnIcon::UpdateClassList
// Il2CppName: UpdateClassList
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::Internal::MultiColumnHeaderColumnIcon::*)()>(&UnityEngine::UIElements::Internal::MultiColumnHeaderColumnIcon::UpdateClassList)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::Internal::MultiColumnHeaderColumnIcon*), "UpdateClassList", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::Internal::MultiColumnHeaderColumnIcon::$_ctor$b__5_0
// Il2CppName: <.ctor>b__5_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::Internal::MultiColumnHeaderColumnIcon::*)(::UnityEngine::UIElements::CustomStyleResolvedEvent*)>(&UnityEngine::UIElements::Internal::MultiColumnHeaderColumnIcon::$_ctor$b__5_0)> {
  static const MethodInfo* get() {
    static auto* evt = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "CustomStyleResolvedEvent")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::Internal::MultiColumnHeaderColumnIcon*), "<.ctor>b__5_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{evt});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::Internal::MultiColumnHeaderColumnIcon::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::UIElements::Internal::MultiColumnHeaderColumnIcon::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&UnityEngine::UIElements::Internal::MultiColumnHeaderColumnIcon::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::Internal::MultiColumnHeaderColumnIcon*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
