// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::UIElements
namespace UnityEngine::UIElements {
  // Forward declaring type: VisualElement
  class VisualElement;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Object
  class Object;
}
// Completed forward declares
// Type namespace: UnityEngine.UIElements
namespace UnityEngine::UIElements {
  // Forward declaring type: UIRUtility
  class UIRUtility;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::UIElements::UIRUtility);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::UIElements::UIRUtility*, "UnityEngine.UIElements", "UIRUtility");
// Type namespace: UnityEngine.UIElements
namespace UnityEngine::UIElements {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.UIElements.UIRUtility
  // [TokenAttribute] Offset: FFFFFFFF
  // [ExtensionAttribute] Offset: FFFFFFFF
  class UIRUtility : public ::Il2CppObject {
    public:
    // Get static field: static public readonly System.String k_DefaultShaderName
    static ::StringW _get_k_DefaultShaderName();
    // Set static field: static public readonly System.String k_DefaultShaderName
    static void _set_k_DefaultShaderName(::StringW value);
    // Get static field: static public readonly System.String k_DefaultWorldSpaceShaderName
    static ::StringW _get_k_DefaultWorldSpaceShaderName();
    // Set static field: static public readonly System.String k_DefaultWorldSpaceShaderName
    static void _set_k_DefaultWorldSpaceShaderName(::StringW value);
    // static public System.Boolean ShapeWindingIsClockwise(System.Int32 maskDepth, System.Int32 stencilRef)
    // Offset: 0x568ABA4
    static bool ShapeWindingIsClockwise(int maskDepth, int stencilRef);
    // static public System.Boolean IsRoundRect(UnityEngine.UIElements.VisualElement ve)
    // Offset: 0x568AC24
    static bool IsRoundRect(::UnityEngine::UIElements::VisualElement* ve);
    // static public System.Boolean IsVectorImageBackground(UnityEngine.UIElements.VisualElement ve)
    // Offset: 0x568AE18
    static bool IsVectorImageBackground(::UnityEngine::UIElements::VisualElement* ve);
    // static public System.Boolean IsElementSelfHidden(UnityEngine.UIElements.VisualElement ve)
    // Offset: 0x568AEB0
    static bool IsElementSelfHidden(::UnityEngine::UIElements::VisualElement* ve);
    // static public System.Void Destroy(UnityEngine.Object obj)
    // Offset: 0x568AF5C
    static void Destroy(::UnityEngine::Object* obj);
    // static public System.Int32 GetPrevPow2(System.Int32 n)
    // Offset: 0x568B028
    static int GetPrevPow2(int n);
    // static public System.Int32 GetNextPow2(System.Int32 n)
    // Offset: 0x568B05C
    static int GetNextPow2(int n);
    // static public System.Int32 GetNextPow2Exp(System.Int32 n)
    // Offset: 0x568B078
    static int GetNextPow2Exp(int n);
    // static private System.Void .cctor()
    // Offset: 0x568B0A8
    static void _cctor();
  }; // UnityEngine.UIElements.UIRUtility
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::UIElements::UIRUtility::ShapeWindingIsClockwise
// Il2CppName: ShapeWindingIsClockwise
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(int, int)>(&UnityEngine::UIElements::UIRUtility::ShapeWindingIsClockwise)> {
  static const MethodInfo* get() {
    static auto* maskDepth = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* stencilRef = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::UIRUtility*), "ShapeWindingIsClockwise", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{maskDepth, stencilRef});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::UIRUtility::IsRoundRect
// Il2CppName: IsRoundRect
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::UnityEngine::UIElements::VisualElement*)>(&UnityEngine::UIElements::UIRUtility::IsRoundRect)> {
  static const MethodInfo* get() {
    static auto* ve = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "VisualElement")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::UIRUtility*), "IsRoundRect", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ve});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::UIRUtility::IsVectorImageBackground
// Il2CppName: IsVectorImageBackground
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::UnityEngine::UIElements::VisualElement*)>(&UnityEngine::UIElements::UIRUtility::IsVectorImageBackground)> {
  static const MethodInfo* get() {
    static auto* ve = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "VisualElement")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::UIRUtility*), "IsVectorImageBackground", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ve});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::UIRUtility::IsElementSelfHidden
// Il2CppName: IsElementSelfHidden
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::UnityEngine::UIElements::VisualElement*)>(&UnityEngine::UIElements::UIRUtility::IsElementSelfHidden)> {
  static const MethodInfo* get() {
    static auto* ve = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "VisualElement")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::UIRUtility*), "IsElementSelfHidden", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ve});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::UIRUtility::Destroy
// Il2CppName: Destroy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::Object*)>(&UnityEngine::UIElements::UIRUtility::Destroy)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("UnityEngine", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::UIRUtility*), "Destroy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::UIRUtility::GetPrevPow2
// Il2CppName: GetPrevPow2
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(int)>(&UnityEngine::UIElements::UIRUtility::GetPrevPow2)> {
  static const MethodInfo* get() {
    static auto* n = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::UIRUtility*), "GetPrevPow2", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{n});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::UIRUtility::GetNextPow2
// Il2CppName: GetNextPow2
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(int)>(&UnityEngine::UIElements::UIRUtility::GetNextPow2)> {
  static const MethodInfo* get() {
    static auto* n = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::UIRUtility*), "GetNextPow2", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{n});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::UIRUtility::GetNextPow2Exp
// Il2CppName: GetNextPow2Exp
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(int)>(&UnityEngine::UIElements::UIRUtility::GetNextPow2Exp)> {
  static const MethodInfo* get() {
    static auto* n = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::UIRUtility*), "GetNextPow2Exp", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{n});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::UIRUtility::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&UnityEngine::UIElements::UIRUtility::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::UIRUtility*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
