// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.EventSystems.UIBehaviour
#include "UnityEngine/EventSystems/UIBehaviour.hpp"
// Including type: UnityEngine.EventSystems.IPointerMoveHandler
#include "UnityEngine/EventSystems/IPointerMoveHandler.hpp"
// Including type: UnityEngine.EventSystems.IPointerUpHandler
#include "UnityEngine/EventSystems/IPointerUpHandler.hpp"
// Including type: UnityEngine.EventSystems.IPointerDownHandler
#include "UnityEngine/EventSystems/IPointerDownHandler.hpp"
// Including type: UnityEngine.EventSystems.ISubmitHandler
#include "UnityEngine/EventSystems/ISubmitHandler.hpp"
// Including type: UnityEngine.EventSystems.ICancelHandler
#include "UnityEngine/EventSystems/ICancelHandler.hpp"
// Including type: UnityEngine.EventSystems.IMoveHandler
#include "UnityEngine/EventSystems/IMoveHandler.hpp"
// Including type: UnityEngine.EventSystems.IScrollHandler
#include "UnityEngine/EventSystems/IScrollHandler.hpp"
// Including type: UnityEngine.EventSystems.ISelectHandler
#include "UnityEngine/EventSystems/ISelectHandler.hpp"
// Including type: UnityEngine.EventSystems.IDeselectHandler
#include "UnityEngine/EventSystems/IDeselectHandler.hpp"
// Including type: UnityEngine.EventSystems.IPointerExitHandler
#include "UnityEngine/EventSystems/IPointerExitHandler.hpp"
// Including type: UnityEngine.EventSystems.IPointerEnterHandler
#include "UnityEngine/EventSystems/IPointerEnterHandler.hpp"
// Including type: UnityEngine.UIElements.IRuntimePanelComponent
#include "UnityEngine/UIElements/IRuntimePanelComponent.hpp"
// Including type: UnityEngine.EventModifiers
#include "UnityEngine/EventModifiers.hpp"
// Including type: UnityEngine.UIElements.NavigationMoveEvent
#include "UnityEngine/UIElements/NavigationMoveEvent.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::UIElements
namespace UnityEngine::UIElements {
  // Forward declaring type: BaseRuntimePanel
  class BaseRuntimePanel;
  // Forward declaring type: IPanel
  class IPanel;
  // Forward declaring type: Focusable
  class Focusable;
  // Forward declaring type: FocusEvent
  class FocusEvent;
  // Forward declaring type: BlurEvent
  class BlurEvent;
  // Skipping declaration: EventBase because it is already included!
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Event
  class Event;
  // Forward declaring type: GameObject
  class GameObject;
}
// Forward declaring namespace: UnityEngine::EventSystems
namespace UnityEngine::EventSystems {
  // Forward declaring type: EventSystem
  class EventSystem;
  // Forward declaring type: BaseEventData
  class BaseEventData;
  // Forward declaring type: PointerEventData
  class PointerEventData;
  // Forward declaring type: AxisEventData
  class AxisEventData;
}
// Completed forward declares
// Type namespace: UnityEngine.UIElements
namespace UnityEngine::UIElements {
  // Forward declaring type: PanelEventHandler
  class PanelEventHandler;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::UIElements::PanelEventHandler);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::UIElements::PanelEventHandler*, "UnityEngine.UIElements", "PanelEventHandler");
// Type namespace: UnityEngine.UIElements
namespace UnityEngine::UIElements {
  // Size: 0x40
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.UIElements.PanelEventHandler
  // [TokenAttribute] Offset: FFFFFFFF
  // [AddComponentMenu] Offset: FFFFFFFF
  class PanelEventHandler : public ::UnityEngine::EventSystems::UIBehaviour/*, public ::UnityEngine::EventSystems::IPointerMoveHandler, public ::UnityEngine::EventSystems::IPointerUpHandler, public ::UnityEngine::EventSystems::IPointerDownHandler, public ::UnityEngine::EventSystems::ISubmitHandler, public ::UnityEngine::EventSystems::ICancelHandler, public ::UnityEngine::EventSystems::IMoveHandler, public ::UnityEngine::EventSystems::IScrollHandler, public ::UnityEngine::EventSystems::ISelectHandler, public ::UnityEngine::EventSystems::IDeselectHandler, public ::UnityEngine::EventSystems::IPointerExitHandler, public ::UnityEngine::EventSystems::IPointerEnterHandler, public ::UnityEngine::UIElements::IRuntimePanelComponent*/ {
    public:
    // Nested type: ::UnityEngine::UIElements::PanelEventHandler::PointerEventType
    struct PointerEventType;
    // Nested type: ::UnityEngine::UIElements::PanelEventHandler::PointerEvent
    class PointerEvent;
    public:
    // private UnityEngine.UIElements.BaseRuntimePanel m_Panel
    // Size: 0x8
    // Offset: 0x20
    ::UnityEngine::UIElements::BaseRuntimePanel* m_Panel;
    // Field size check
    static_assert(sizeof(::UnityEngine::UIElements::BaseRuntimePanel*) == 0x8);
    // private readonly UnityEngine.UIElements.PanelEventHandler/PointerEvent m_PointerEvent
    // Size: 0x8
    // Offset: 0x28
    ::UnityEngine::UIElements::PanelEventHandler::PointerEvent* m_PointerEvent;
    // Field size check
    static_assert(sizeof(::UnityEngine::UIElements::PanelEventHandler::PointerEvent*) == 0x8);
    // private System.Boolean m_Selecting
    // Size: 0x1
    // Offset: 0x30
    bool m_Selecting;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: m_Selecting and: m_Event
    char __padding2[0x7] = {};
    // private UnityEngine.Event m_Event
    // Size: 0x8
    // Offset: 0x38
    ::UnityEngine::Event* m_Event;
    // Field size check
    static_assert(sizeof(::UnityEngine::Event*) == 0x8);
    public:
    // Creating interface conversion operator: operator ::UnityEngine::EventSystems::IPointerMoveHandler
    operator ::UnityEngine::EventSystems::IPointerMoveHandler() noexcept {
      return *reinterpret_cast<::UnityEngine::EventSystems::IPointerMoveHandler*>(this);
    }
    // Creating interface conversion operator: operator ::UnityEngine::EventSystems::IPointerUpHandler
    operator ::UnityEngine::EventSystems::IPointerUpHandler() noexcept {
      return *reinterpret_cast<::UnityEngine::EventSystems::IPointerUpHandler*>(this);
    }
    // Creating interface conversion operator: operator ::UnityEngine::EventSystems::IPointerDownHandler
    operator ::UnityEngine::EventSystems::IPointerDownHandler() noexcept {
      return *reinterpret_cast<::UnityEngine::EventSystems::IPointerDownHandler*>(this);
    }
    // Creating interface conversion operator: operator ::UnityEngine::EventSystems::ISubmitHandler
    operator ::UnityEngine::EventSystems::ISubmitHandler() noexcept {
      return *reinterpret_cast<::UnityEngine::EventSystems::ISubmitHandler*>(this);
    }
    // Creating interface conversion operator: operator ::UnityEngine::EventSystems::ICancelHandler
    operator ::UnityEngine::EventSystems::ICancelHandler() noexcept {
      return *reinterpret_cast<::UnityEngine::EventSystems::ICancelHandler*>(this);
    }
    // Creating interface conversion operator: operator ::UnityEngine::EventSystems::IMoveHandler
    operator ::UnityEngine::EventSystems::IMoveHandler() noexcept {
      return *reinterpret_cast<::UnityEngine::EventSystems::IMoveHandler*>(this);
    }
    // Creating interface conversion operator: operator ::UnityEngine::EventSystems::IScrollHandler
    operator ::UnityEngine::EventSystems::IScrollHandler() noexcept {
      return *reinterpret_cast<::UnityEngine::EventSystems::IScrollHandler*>(this);
    }
    // Creating interface conversion operator: operator ::UnityEngine::EventSystems::ISelectHandler
    operator ::UnityEngine::EventSystems::ISelectHandler() noexcept {
      return *reinterpret_cast<::UnityEngine::EventSystems::ISelectHandler*>(this);
    }
    // Creating interface conversion operator: operator ::UnityEngine::EventSystems::IDeselectHandler
    operator ::UnityEngine::EventSystems::IDeselectHandler() noexcept {
      return *reinterpret_cast<::UnityEngine::EventSystems::IDeselectHandler*>(this);
    }
    // Creating interface conversion operator: operator ::UnityEngine::EventSystems::IPointerExitHandler
    operator ::UnityEngine::EventSystems::IPointerExitHandler() noexcept {
      return *reinterpret_cast<::UnityEngine::EventSystems::IPointerExitHandler*>(this);
    }
    // Creating interface conversion operator: operator ::UnityEngine::EventSystems::IPointerEnterHandler
    operator ::UnityEngine::EventSystems::IPointerEnterHandler() noexcept {
      return *reinterpret_cast<::UnityEngine::EventSystems::IPointerEnterHandler*>(this);
    }
    // Creating interface conversion operator: operator ::UnityEngine::UIElements::IRuntimePanelComponent
    operator ::UnityEngine::UIElements::IRuntimePanelComponent() noexcept {
      return *reinterpret_cast<::UnityEngine::UIElements::IRuntimePanelComponent*>(this);
    }
    // Get static field: static private UnityEngine.EventModifiers s_Modifiers
    static ::UnityEngine::EventModifiers _get_s_Modifiers();
    // Set static field: static private UnityEngine.EventModifiers s_Modifiers
    static void _set_s_Modifiers(::UnityEngine::EventModifiers value);
    // Get instance field reference: private UnityEngine.UIElements.BaseRuntimePanel m_Panel
    [[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::BaseRuntimePanel*& dyn_m_Panel();
    // Get instance field reference: private readonly UnityEngine.UIElements.PanelEventHandler/PointerEvent m_PointerEvent
    [[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::PanelEventHandler::PointerEvent*& dyn_m_PointerEvent();
    // Get instance field reference: private System.Boolean m_Selecting
    [[deprecated("Use field access instead!")]] bool& dyn_m_Selecting();
    // Get instance field reference: private UnityEngine.Event m_Event
    [[deprecated("Use field access instead!")]] ::UnityEngine::Event*& dyn_m_Event();
    // public UnityEngine.UIElements.IPanel get_panel()
    // Offset: 0x56F825C
    ::UnityEngine::UIElements::IPanel* get_panel();
    // public System.Void set_panel(UnityEngine.UIElements.IPanel value)
    // Offset: 0x56F8264
    void set_panel(::UnityEngine::UIElements::IPanel* value);
    // private UnityEngine.GameObject get_selectableGameObject()
    // Offset: 0x56F8680
    ::UnityEngine::GameObject* get_selectableGameObject();
    // private UnityEngine.EventSystems.EventSystem get_eventSystem()
    // Offset: 0x56F8698
    ::UnityEngine::EventSystems::EventSystem* get_eventSystem();
    // private System.Boolean get_isCurrentFocusedPanel()
    // Offset: 0x56F876C
    bool get_isCurrentFocusedPanel();
    // private UnityEngine.UIElements.Focusable get_currentFocusedElement()
    // Offset: 0x56F8834
    ::UnityEngine::UIElements::Focusable* get_currentFocusedElement();
    // private System.Void RegisterCallbacks()
    // Offset: 0x56F84CC
    void RegisterCallbacks();
    // private System.Void UnregisterCallbacks()
    // Offset: 0x56F8318
    void UnregisterCallbacks();
    // private System.Void OnPanelDestroyed()
    // Offset: 0x56F887C
    void OnPanelDestroyed();
    // private System.Void OnElementFocus(UnityEngine.UIElements.FocusEvent e)
    // Offset: 0x56F8884
    void OnElementFocus(::UnityEngine::UIElements::FocusEvent* e);
    // private System.Void OnElementBlur(UnityEngine.UIElements.BlurEvent e)
    // Offset: 0x56F896C
    void OnElementBlur(::UnityEngine::UIElements::BlurEvent* e);
    // public System.Void OnSelect(UnityEngine.EventSystems.BaseEventData eventData)
    // Offset: 0x56F8970
    void OnSelect(::UnityEngine::EventSystems::BaseEventData* eventData);
    // public System.Void OnDeselect(UnityEngine.EventSystems.BaseEventData eventData)
    // Offset: 0x56F89E8
    void OnDeselect(::UnityEngine::EventSystems::BaseEventData* eventData);
    // public System.Void OnPointerMove(UnityEngine.EventSystems.PointerEventData eventData)
    // Offset: 0x56F89FC
    void OnPointerMove(::UnityEngine::EventSystems::PointerEventData* eventData);
    // public System.Void OnPointerUp(UnityEngine.EventSystems.PointerEventData eventData)
    // Offset: 0x56F8D4C
    void OnPointerUp(::UnityEngine::EventSystems::PointerEventData* eventData);
    // public System.Void OnPointerDown(UnityEngine.EventSystems.PointerEventData eventData)
    // Offset: 0x56F8F68
    void OnPointerDown(::UnityEngine::EventSystems::PointerEventData* eventData);
    // public System.Void OnPointerExit(UnityEngine.EventSystems.PointerEventData eventData)
    // Offset: 0x56F91F4
    void OnPointerExit(::UnityEngine::EventSystems::PointerEventData* eventData);
    // public System.Void OnPointerEnter(UnityEngine.EventSystems.PointerEventData eventData)
    // Offset: 0x56F94AC
    void OnPointerEnter(::UnityEngine::EventSystems::PointerEventData* eventData);
    // public System.Void OnSubmit(UnityEngine.EventSystems.BaseEventData eventData)
    // Offset: 0x56F9500
    void OnSubmit(::UnityEngine::EventSystems::BaseEventData* eventData);
    // public System.Void OnCancel(UnityEngine.EventSystems.BaseEventData eventData)
    // Offset: 0x56F9858
    void OnCancel(::UnityEngine::EventSystems::BaseEventData* eventData);
    // public System.Void OnMove(UnityEngine.EventSystems.AxisEventData eventData)
    // Offset: 0x56F9A68
    void OnMove(::UnityEngine::EventSystems::AxisEventData* eventData);
    // public System.Void OnScroll(UnityEngine.EventSystems.PointerEventData eventData)
    // Offset: 0x56F9C9C
    void OnScroll(::UnityEngine::EventSystems::PointerEventData* eventData);
    // private System.Void SendEvent(UnityEngine.UIElements.EventBase e, UnityEngine.EventSystems.BaseEventData sourceEventData)
    // Offset: 0x56F8CE8
    void SendEvent(::UnityEngine::UIElements::EventBase* e, ::UnityEngine::EventSystems::BaseEventData* sourceEventData);
    // private System.Void SendEvent(UnityEngine.UIElements.EventBase e, UnityEngine.Event sourceEvent)
    // Offset: 0x56F9E90
    void SendEvent(::UnityEngine::UIElements::EventBase* e, ::UnityEngine::Event* sourceEvent);
    // private System.Void Update()
    // Offset: 0x56F9EF0
    void Update();
    // private System.Void LateUpdate()
    // Offset: 0x56F9F4C
    void LateUpdate();
    // private System.Void ProcessImguiEvents(UnityEngine.UIElements.Focusable target)
    // Offset: 0x56F9710
    void ProcessImguiEvents(::UnityEngine::UIElements::Focusable* target);
    // private System.Void ProcessKeyboardEvent(UnityEngine.Event e, UnityEngine.UIElements.Focusable target)
    // Offset: 0x56F9F54
    void ProcessKeyboardEvent(::UnityEngine::Event* e, ::UnityEngine::UIElements::Focusable* target);
    // private System.Void ProcessTabEvent(UnityEngine.Event e, UnityEngine.UIElements.Focusable target)
    // Offset: 0x56F9FD4
    void ProcessTabEvent(::UnityEngine::Event* e, ::UnityEngine::UIElements::Focusable* target);
    // private System.Void SendTabEvent(UnityEngine.Event e, UnityEngine.UIElements.NavigationMoveEvent/Direction direction, UnityEngine.UIElements.Focusable target)
    // Offset: 0x56FA410
    void SendTabEvent(::UnityEngine::Event* e, ::UnityEngine::UIElements::NavigationMoveEvent::Direction direction, ::UnityEngine::UIElements::Focusable* target);
    // private System.Void SendKeyUpEvent(UnityEngine.Event e, UnityEngine.UIElements.Focusable target)
    // Offset: 0x56FA040
    void SendKeyUpEvent(::UnityEngine::Event* e, ::UnityEngine::UIElements::Focusable* target);
    // private System.Void SendKeyDownEvent(UnityEngine.Event e, UnityEngine.UIElements.Focusable target)
    // Offset: 0x56FA220
    void SendKeyDownEvent(::UnityEngine::Event* e, ::UnityEngine::UIElements::Focusable* target);
    // private System.Boolean ReadPointerData(UnityEngine.UIElements.PanelEventHandler/PointerEvent pe, UnityEngine.EventSystems.PointerEventData eventData, UnityEngine.UIElements.PanelEventHandler/PointerEventType eventType)
    // Offset: 0x56F8BA8
    bool ReadPointerData(::UnityEngine::UIElements::PanelEventHandler::PointerEvent* pe, ::UnityEngine::EventSystems::PointerEventData* eventData, ::UnityEngine::UIElements::PanelEventHandler::PointerEventType eventType);
    // protected override System.Void OnEnable()
    // Offset: 0x56F886C
    // Implemented from: UnityEngine.EventSystems.UIBehaviour
    // Base method: System.Void UIBehaviour::OnEnable()
    void OnEnable();
    // protected override System.Void OnDisable()
    // Offset: 0x56F8874
    // Implemented from: UnityEngine.EventSystems.UIBehaviour
    // Base method: System.Void UIBehaviour::OnDisable()
    void OnDisable();
    // public System.Void .ctor()
    // Offset: 0x56FAAD8
    // Implemented from: UnityEngine.EventSystems.UIBehaviour
    // Base method: System.Void UIBehaviour::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static PanelEventHandler* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PanelEventHandler::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<PanelEventHandler*, creationType>()));
    }
  }; // UnityEngine.UIElements.PanelEventHandler
  #pragma pack(pop)
  static check_size<sizeof(PanelEventHandler), 56 + sizeof(::UnityEngine::Event*)> __UnityEngine_UIElements_PanelEventHandlerSizeCheck;
  static_assert(sizeof(PanelEventHandler) == 0x40);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::UIElements::PanelEventHandler::get_panel
// Il2CppName: get_panel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::IPanel* (UnityEngine::UIElements::PanelEventHandler::*)()>(&UnityEngine::UIElements::PanelEventHandler::get_panel)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::PanelEventHandler*), "get_panel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::PanelEventHandler::set_panel
// Il2CppName: set_panel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::PanelEventHandler::*)(::UnityEngine::UIElements::IPanel*)>(&UnityEngine::UIElements::PanelEventHandler::set_panel)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "IPanel")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::PanelEventHandler*), "set_panel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::PanelEventHandler::get_selectableGameObject
// Il2CppName: get_selectableGameObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::GameObject* (UnityEngine::UIElements::PanelEventHandler::*)()>(&UnityEngine::UIElements::PanelEventHandler::get_selectableGameObject)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::PanelEventHandler*), "get_selectableGameObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::PanelEventHandler::get_eventSystem
// Il2CppName: get_eventSystem
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::EventSystems::EventSystem* (UnityEngine::UIElements::PanelEventHandler::*)()>(&UnityEngine::UIElements::PanelEventHandler::get_eventSystem)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::PanelEventHandler*), "get_eventSystem", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::PanelEventHandler::get_isCurrentFocusedPanel
// Il2CppName: get_isCurrentFocusedPanel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::PanelEventHandler::*)()>(&UnityEngine::UIElements::PanelEventHandler::get_isCurrentFocusedPanel)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::PanelEventHandler*), "get_isCurrentFocusedPanel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::PanelEventHandler::get_currentFocusedElement
// Il2CppName: get_currentFocusedElement
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::Focusable* (UnityEngine::UIElements::PanelEventHandler::*)()>(&UnityEngine::UIElements::PanelEventHandler::get_currentFocusedElement)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::PanelEventHandler*), "get_currentFocusedElement", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::PanelEventHandler::RegisterCallbacks
// Il2CppName: RegisterCallbacks
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::PanelEventHandler::*)()>(&UnityEngine::UIElements::PanelEventHandler::RegisterCallbacks)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::PanelEventHandler*), "RegisterCallbacks", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::PanelEventHandler::UnregisterCallbacks
// Il2CppName: UnregisterCallbacks
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::PanelEventHandler::*)()>(&UnityEngine::UIElements::PanelEventHandler::UnregisterCallbacks)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::PanelEventHandler*), "UnregisterCallbacks", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::PanelEventHandler::OnPanelDestroyed
// Il2CppName: OnPanelDestroyed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::PanelEventHandler::*)()>(&UnityEngine::UIElements::PanelEventHandler::OnPanelDestroyed)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::PanelEventHandler*), "OnPanelDestroyed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::PanelEventHandler::OnElementFocus
// Il2CppName: OnElementFocus
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::PanelEventHandler::*)(::UnityEngine::UIElements::FocusEvent*)>(&UnityEngine::UIElements::PanelEventHandler::OnElementFocus)> {
  static const MethodInfo* get() {
    static auto* e = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "FocusEvent")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::PanelEventHandler*), "OnElementFocus", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{e});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::PanelEventHandler::OnElementBlur
// Il2CppName: OnElementBlur
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::PanelEventHandler::*)(::UnityEngine::UIElements::BlurEvent*)>(&UnityEngine::UIElements::PanelEventHandler::OnElementBlur)> {
  static const MethodInfo* get() {
    static auto* e = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "BlurEvent")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::PanelEventHandler*), "OnElementBlur", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{e});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::PanelEventHandler::OnSelect
// Il2CppName: OnSelect
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::PanelEventHandler::*)(::UnityEngine::EventSystems::BaseEventData*)>(&UnityEngine::UIElements::PanelEventHandler::OnSelect)> {
  static const MethodInfo* get() {
    static auto* eventData = &::il2cpp_utils::GetClassFromName("UnityEngine.EventSystems", "BaseEventData")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::PanelEventHandler*), "OnSelect", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{eventData});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::PanelEventHandler::OnDeselect
// Il2CppName: OnDeselect
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::PanelEventHandler::*)(::UnityEngine::EventSystems::BaseEventData*)>(&UnityEngine::UIElements::PanelEventHandler::OnDeselect)> {
  static const MethodInfo* get() {
    static auto* eventData = &::il2cpp_utils::GetClassFromName("UnityEngine.EventSystems", "BaseEventData")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::PanelEventHandler*), "OnDeselect", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{eventData});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::PanelEventHandler::OnPointerMove
// Il2CppName: OnPointerMove
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::PanelEventHandler::*)(::UnityEngine::EventSystems::PointerEventData*)>(&UnityEngine::UIElements::PanelEventHandler::OnPointerMove)> {
  static const MethodInfo* get() {
    static auto* eventData = &::il2cpp_utils::GetClassFromName("UnityEngine.EventSystems", "PointerEventData")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::PanelEventHandler*), "OnPointerMove", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{eventData});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::PanelEventHandler::OnPointerUp
// Il2CppName: OnPointerUp
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::PanelEventHandler::*)(::UnityEngine::EventSystems::PointerEventData*)>(&UnityEngine::UIElements::PanelEventHandler::OnPointerUp)> {
  static const MethodInfo* get() {
    static auto* eventData = &::il2cpp_utils::GetClassFromName("UnityEngine.EventSystems", "PointerEventData")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::PanelEventHandler*), "OnPointerUp", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{eventData});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::PanelEventHandler::OnPointerDown
// Il2CppName: OnPointerDown
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::PanelEventHandler::*)(::UnityEngine::EventSystems::PointerEventData*)>(&UnityEngine::UIElements::PanelEventHandler::OnPointerDown)> {
  static const MethodInfo* get() {
    static auto* eventData = &::il2cpp_utils::GetClassFromName("UnityEngine.EventSystems", "PointerEventData")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::PanelEventHandler*), "OnPointerDown", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{eventData});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::PanelEventHandler::OnPointerExit
// Il2CppName: OnPointerExit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::PanelEventHandler::*)(::UnityEngine::EventSystems::PointerEventData*)>(&UnityEngine::UIElements::PanelEventHandler::OnPointerExit)> {
  static const MethodInfo* get() {
    static auto* eventData = &::il2cpp_utils::GetClassFromName("UnityEngine.EventSystems", "PointerEventData")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::PanelEventHandler*), "OnPointerExit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{eventData});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::PanelEventHandler::OnPointerEnter
// Il2CppName: OnPointerEnter
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::PanelEventHandler::*)(::UnityEngine::EventSystems::PointerEventData*)>(&UnityEngine::UIElements::PanelEventHandler::OnPointerEnter)> {
  static const MethodInfo* get() {
    static auto* eventData = &::il2cpp_utils::GetClassFromName("UnityEngine.EventSystems", "PointerEventData")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::PanelEventHandler*), "OnPointerEnter", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{eventData});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::PanelEventHandler::OnSubmit
// Il2CppName: OnSubmit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::PanelEventHandler::*)(::UnityEngine::EventSystems::BaseEventData*)>(&UnityEngine::UIElements::PanelEventHandler::OnSubmit)> {
  static const MethodInfo* get() {
    static auto* eventData = &::il2cpp_utils::GetClassFromName("UnityEngine.EventSystems", "BaseEventData")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::PanelEventHandler*), "OnSubmit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{eventData});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::PanelEventHandler::OnCancel
// Il2CppName: OnCancel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::PanelEventHandler::*)(::UnityEngine::EventSystems::BaseEventData*)>(&UnityEngine::UIElements::PanelEventHandler::OnCancel)> {
  static const MethodInfo* get() {
    static auto* eventData = &::il2cpp_utils::GetClassFromName("UnityEngine.EventSystems", "BaseEventData")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::PanelEventHandler*), "OnCancel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{eventData});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::PanelEventHandler::OnMove
// Il2CppName: OnMove
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::PanelEventHandler::*)(::UnityEngine::EventSystems::AxisEventData*)>(&UnityEngine::UIElements::PanelEventHandler::OnMove)> {
  static const MethodInfo* get() {
    static auto* eventData = &::il2cpp_utils::GetClassFromName("UnityEngine.EventSystems", "AxisEventData")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::PanelEventHandler*), "OnMove", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{eventData});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::PanelEventHandler::OnScroll
// Il2CppName: OnScroll
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::PanelEventHandler::*)(::UnityEngine::EventSystems::PointerEventData*)>(&UnityEngine::UIElements::PanelEventHandler::OnScroll)> {
  static const MethodInfo* get() {
    static auto* eventData = &::il2cpp_utils::GetClassFromName("UnityEngine.EventSystems", "PointerEventData")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::PanelEventHandler*), "OnScroll", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{eventData});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::PanelEventHandler::SendEvent
// Il2CppName: SendEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::PanelEventHandler::*)(::UnityEngine::UIElements::EventBase*, ::UnityEngine::EventSystems::BaseEventData*)>(&UnityEngine::UIElements::PanelEventHandler::SendEvent)> {
  static const MethodInfo* get() {
    static auto* e = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "EventBase")->byval_arg;
    static auto* sourceEventData = &::il2cpp_utils::GetClassFromName("UnityEngine.EventSystems", "BaseEventData")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::PanelEventHandler*), "SendEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{e, sourceEventData});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::PanelEventHandler::SendEvent
// Il2CppName: SendEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::PanelEventHandler::*)(::UnityEngine::UIElements::EventBase*, ::UnityEngine::Event*)>(&UnityEngine::UIElements::PanelEventHandler::SendEvent)> {
  static const MethodInfo* get() {
    static auto* e = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "EventBase")->byval_arg;
    static auto* sourceEvent = &::il2cpp_utils::GetClassFromName("UnityEngine", "Event")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::PanelEventHandler*), "SendEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{e, sourceEvent});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::PanelEventHandler::Update
// Il2CppName: Update
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::PanelEventHandler::*)()>(&UnityEngine::UIElements::PanelEventHandler::Update)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::PanelEventHandler*), "Update", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::PanelEventHandler::LateUpdate
// Il2CppName: LateUpdate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::PanelEventHandler::*)()>(&UnityEngine::UIElements::PanelEventHandler::LateUpdate)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::PanelEventHandler*), "LateUpdate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::PanelEventHandler::ProcessImguiEvents
// Il2CppName: ProcessImguiEvents
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::PanelEventHandler::*)(::UnityEngine::UIElements::Focusable*)>(&UnityEngine::UIElements::PanelEventHandler::ProcessImguiEvents)> {
  static const MethodInfo* get() {
    static auto* target = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "Focusable")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::PanelEventHandler*), "ProcessImguiEvents", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{target});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::PanelEventHandler::ProcessKeyboardEvent
// Il2CppName: ProcessKeyboardEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::PanelEventHandler::*)(::UnityEngine::Event*, ::UnityEngine::UIElements::Focusable*)>(&UnityEngine::UIElements::PanelEventHandler::ProcessKeyboardEvent)> {
  static const MethodInfo* get() {
    static auto* e = &::il2cpp_utils::GetClassFromName("UnityEngine", "Event")->byval_arg;
    static auto* target = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "Focusable")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::PanelEventHandler*), "ProcessKeyboardEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{e, target});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::PanelEventHandler::ProcessTabEvent
// Il2CppName: ProcessTabEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::PanelEventHandler::*)(::UnityEngine::Event*, ::UnityEngine::UIElements::Focusable*)>(&UnityEngine::UIElements::PanelEventHandler::ProcessTabEvent)> {
  static const MethodInfo* get() {
    static auto* e = &::il2cpp_utils::GetClassFromName("UnityEngine", "Event")->byval_arg;
    static auto* target = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "Focusable")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::PanelEventHandler*), "ProcessTabEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{e, target});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::PanelEventHandler::SendTabEvent
// Il2CppName: SendTabEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::PanelEventHandler::*)(::UnityEngine::Event*, ::UnityEngine::UIElements::NavigationMoveEvent::Direction, ::UnityEngine::UIElements::Focusable*)>(&UnityEngine::UIElements::PanelEventHandler::SendTabEvent)> {
  static const MethodInfo* get() {
    static auto* e = &::il2cpp_utils::GetClassFromName("UnityEngine", "Event")->byval_arg;
    static auto* direction = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "NavigationMoveEvent/Direction")->byval_arg;
    static auto* target = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "Focusable")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::PanelEventHandler*), "SendTabEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{e, direction, target});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::PanelEventHandler::SendKeyUpEvent
// Il2CppName: SendKeyUpEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::PanelEventHandler::*)(::UnityEngine::Event*, ::UnityEngine::UIElements::Focusable*)>(&UnityEngine::UIElements::PanelEventHandler::SendKeyUpEvent)> {
  static const MethodInfo* get() {
    static auto* e = &::il2cpp_utils::GetClassFromName("UnityEngine", "Event")->byval_arg;
    static auto* target = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "Focusable")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::PanelEventHandler*), "SendKeyUpEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{e, target});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::PanelEventHandler::SendKeyDownEvent
// Il2CppName: SendKeyDownEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::PanelEventHandler::*)(::UnityEngine::Event*, ::UnityEngine::UIElements::Focusable*)>(&UnityEngine::UIElements::PanelEventHandler::SendKeyDownEvent)> {
  static const MethodInfo* get() {
    static auto* e = &::il2cpp_utils::GetClassFromName("UnityEngine", "Event")->byval_arg;
    static auto* target = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "Focusable")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::PanelEventHandler*), "SendKeyDownEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{e, target});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::PanelEventHandler::ReadPointerData
// Il2CppName: ReadPointerData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::PanelEventHandler::*)(::UnityEngine::UIElements::PanelEventHandler::PointerEvent*, ::UnityEngine::EventSystems::PointerEventData*, ::UnityEngine::UIElements::PanelEventHandler::PointerEventType)>(&UnityEngine::UIElements::PanelEventHandler::ReadPointerData)> {
  static const MethodInfo* get() {
    static auto* pe = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "PanelEventHandler/PointerEvent")->byval_arg;
    static auto* eventData = &::il2cpp_utils::GetClassFromName("UnityEngine.EventSystems", "PointerEventData")->byval_arg;
    static auto* eventType = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "PanelEventHandler/PointerEventType")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::PanelEventHandler*), "ReadPointerData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{pe, eventData, eventType});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::PanelEventHandler::OnEnable
// Il2CppName: OnEnable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::PanelEventHandler::*)()>(&UnityEngine::UIElements::PanelEventHandler::OnEnable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::PanelEventHandler*), "OnEnable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::PanelEventHandler::OnDisable
// Il2CppName: OnDisable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::PanelEventHandler::*)()>(&UnityEngine::UIElements::PanelEventHandler::OnDisable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::PanelEventHandler*), "OnDisable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::PanelEventHandler::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
