// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.UIElements.BaseVerticalCollectionView
#include "UnityEngine/UIElements/BaseVerticalCollectionView.hpp"
// Including type: UnityEngine.UIElements.ListViewReorderMode
#include "UnityEngine/UIElements/ListViewReorderMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::UIElements
namespace UnityEngine::UIElements {
  // Forward declaring type: Label
  class Label;
  // Forward declaring type: Foldout
  class Foldout;
  // Forward declaring type: TextField
  class TextField;
  // Skipping declaration: VisualElement because it is already included!
  // Forward declaring type: Button
  class Button;
  // Forward declaring type: ChangeEvent`1<T>
  template<typename T>
  class ChangeEvent_1;
  // Forward declaring type: BaseListViewController
  class BaseListViewController;
  // Forward declaring type: CollectionViewController
  class CollectionViewController;
  // Forward declaring type: ListViewDragger
  class ListViewDragger;
  // Forward declaring type: ICollectionDragAndDropController
  class ICollectionDragAndDropController;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Action`1<T>
  template<typename T>
  class Action_1;
  // Forward declaring type: Action
  class Action;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: IEnumerable`1<T>
  template<typename T>
  class IEnumerable_1;
}
// Completed forward declares
// Type namespace: UnityEngine.UIElements
namespace UnityEngine::UIElements {
  // Forward declaring type: BaseListView
  class BaseListView;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::UIElements::BaseListView);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::UIElements::BaseListView*, "UnityEngine.UIElements", "BaseListView");
// Type namespace: UnityEngine.UIElements
namespace UnityEngine::UIElements {
  // WARNING Size may be invalid!
  // Autogenerated type: UnityEngine.UIElements.BaseListView
  // [TokenAttribute] Offset: FFFFFFFF
  class BaseListView : public ::UnityEngine::UIElements::BaseVerticalCollectionView {
    public:
    // Nested type: ::UnityEngine::UIElements::BaseListView::UxmlTraits
    class UxmlTraits;
    public:
    // private System.Boolean m_ShowBoundCollectionSize
    // Size: 0x1
    // Offset: 0x4A4
    bool m_ShowBoundCollectionSize;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean m_ShowFoldoutHeader
    // Size: 0x1
    // Offset: 0x4A5
    bool m_ShowFoldoutHeader;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.String m_HeaderTitle
    // Size: 0x8
    // Offset: 0x4A8
    ::StringW m_HeaderTitle;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private System.Action`1<System.Collections.Generic.IEnumerable`1<System.Int32>> itemsAdded
    // Size: 0x8
    // Offset: 0x4B0
    ::System::Action_1<::System::Collections::Generic::IEnumerable_1<int>*>* itemsAdded;
    // Field size check
    static_assert(sizeof(::System::Action_1<::System::Collections::Generic::IEnumerable_1<int>*>*) == 0x8);
    // private System.Action`1<System.Collections.Generic.IEnumerable`1<System.Int32>> itemsRemoved
    // Size: 0x8
    // Offset: 0x4B8
    ::System::Action_1<::System::Collections::Generic::IEnumerable_1<int>*>* itemsRemoved;
    // Field size check
    static_assert(sizeof(::System::Action_1<::System::Collections::Generic::IEnumerable_1<int>*>*) == 0x8);
    // private UnityEngine.UIElements.Label m_ListViewLabel
    // Size: 0x8
    // Offset: 0x4C0
    ::UnityEngine::UIElements::Label* m_ListViewLabel;
    // Field size check
    static_assert(sizeof(::UnityEngine::UIElements::Label*) == 0x8);
    // private UnityEngine.UIElements.Foldout m_Foldout
    // Size: 0x8
    // Offset: 0x4C8
    ::UnityEngine::UIElements::Foldout* m_Foldout;
    // Field size check
    static_assert(sizeof(::UnityEngine::UIElements::Foldout*) == 0x8);
    // private UnityEngine.UIElements.TextField m_ArraySizeField
    // Size: 0x8
    // Offset: 0x4D0
    ::UnityEngine::UIElements::TextField* m_ArraySizeField;
    // Field size check
    static_assert(sizeof(::UnityEngine::UIElements::TextField*) == 0x8);
    // private System.Boolean m_IsOverMultiEditLimit
    // Size: 0x1
    // Offset: 0x4D8
    bool m_IsOverMultiEditLimit;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private UnityEngine.UIElements.VisualElement m_Footer
    // Size: 0x8
    // Offset: 0x4E0
    ::UnityEngine::UIElements::VisualElement* m_Footer;
    // Field size check
    static_assert(sizeof(::UnityEngine::UIElements::VisualElement*) == 0x8);
    // private UnityEngine.UIElements.Button m_AddButton
    // Size: 0x8
    // Offset: 0x4E8
    ::UnityEngine::UIElements::Button* m_AddButton;
    // Field size check
    static_assert(sizeof(::UnityEngine::UIElements::Button*) == 0x8);
    // private UnityEngine.UIElements.Button m_RemoveButton
    // Size: 0x8
    // Offset: 0x4F0
    ::UnityEngine::UIElements::Button* m_RemoveButton;
    // Field size check
    static_assert(sizeof(::UnityEngine::UIElements::Button*) == 0x8);
    // private System.Action`1<System.Collections.Generic.IEnumerable`1<System.Int32>> m_ItemAddedCallback
    // Size: 0x8
    // Offset: 0x4F8
    ::System::Action_1<::System::Collections::Generic::IEnumerable_1<int>*>* m_ItemAddedCallback;
    // Field size check
    static_assert(sizeof(::System::Action_1<::System::Collections::Generic::IEnumerable_1<int>*>*) == 0x8);
    // private System.Action`1<System.Collections.Generic.IEnumerable`1<System.Int32>> m_ItemRemovedCallback
    // Size: 0x8
    // Offset: 0x500
    ::System::Action_1<::System::Collections::Generic::IEnumerable_1<int>*>* m_ItemRemovedCallback;
    // Field size check
    static_assert(sizeof(::System::Action_1<::System::Collections::Generic::IEnumerable_1<int>*>*) == 0x8);
    // private System.Action m_ItemsSourceSizeChangedCallback
    // Size: 0x8
    // Offset: 0x508
    ::System::Action* m_ItemsSourceSizeChangedCallback;
    // Field size check
    static_assert(sizeof(::System::Action*) == 0x8);
    // private UnityEngine.UIElements.ListViewReorderMode m_ReorderMode
    // Size: 0x4
    // Offset: 0x510
    ::UnityEngine::UIElements::ListViewReorderMode m_ReorderMode;
    // Field size check
    static_assert(sizeof(::UnityEngine::UIElements::ListViewReorderMode) == 0x4);
    // private System.Action reorderModeChanged
    // Size: 0x8
    // Offset: 0x518
    ::System::Action* reorderModeChanged;
    // Field size check
    static_assert(sizeof(::System::Action*) == 0x8);
    // private System.String m_MaxMultiEditStr
    // Size: 0x8
    // Offset: 0x520
    ::StringW m_MaxMultiEditStr;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    public:
    // Get static field: static public readonly System.String ussClassName
    static ::StringW _get_ussClassName();
    // Set static field: static public readonly System.String ussClassName
    static void _set_ussClassName(::StringW value);
    // Get static field: static public readonly System.String itemUssClassName
    static ::StringW _get_itemUssClassName();
    // Set static field: static public readonly System.String itemUssClassName
    static void _set_itemUssClassName(::StringW value);
    // Get static field: static public readonly System.String emptyLabelUssClassName
    static ::StringW _get_emptyLabelUssClassName();
    // Set static field: static public readonly System.String emptyLabelUssClassName
    static void _set_emptyLabelUssClassName(::StringW value);
    // Get static field: static public readonly System.String overMaxMultiEditLimitClassName
    static ::StringW _get_overMaxMultiEditLimitClassName();
    // Set static field: static public readonly System.String overMaxMultiEditLimitClassName
    static void _set_overMaxMultiEditLimitClassName(::StringW value);
    // Get static field: static public readonly System.String reorderableUssClassName
    static ::StringW _get_reorderableUssClassName();
    // Set static field: static public readonly System.String reorderableUssClassName
    static void _set_reorderableUssClassName(::StringW value);
    // Get static field: static public readonly System.String reorderableItemUssClassName
    static ::StringW _get_reorderableItemUssClassName();
    // Set static field: static public readonly System.String reorderableItemUssClassName
    static void _set_reorderableItemUssClassName(::StringW value);
    // Get static field: static public readonly System.String reorderableItemContainerUssClassName
    static ::StringW _get_reorderableItemContainerUssClassName();
    // Set static field: static public readonly System.String reorderableItemContainerUssClassName
    static void _set_reorderableItemContainerUssClassName(::StringW value);
    // Get static field: static public readonly System.String reorderableItemHandleUssClassName
    static ::StringW _get_reorderableItemHandleUssClassName();
    // Set static field: static public readonly System.String reorderableItemHandleUssClassName
    static void _set_reorderableItemHandleUssClassName(::StringW value);
    // Get static field: static public readonly System.String reorderableItemHandleBarUssClassName
    static ::StringW _get_reorderableItemHandleBarUssClassName();
    // Set static field: static public readonly System.String reorderableItemHandleBarUssClassName
    static void _set_reorderableItemHandleBarUssClassName(::StringW value);
    // Get static field: static public readonly System.String footerUssClassName
    static ::StringW _get_footerUssClassName();
    // Set static field: static public readonly System.String footerUssClassName
    static void _set_footerUssClassName(::StringW value);
    // Get static field: static public readonly System.String foldoutHeaderUssClassName
    static ::StringW _get_foldoutHeaderUssClassName();
    // Set static field: static public readonly System.String foldoutHeaderUssClassName
    static void _set_foldoutHeaderUssClassName(::StringW value);
    // Get static field: static public readonly System.String arraySizeFieldUssClassName
    static ::StringW _get_arraySizeFieldUssClassName();
    // Set static field: static public readonly System.String arraySizeFieldUssClassName
    static void _set_arraySizeFieldUssClassName(::StringW value);
    // Get static field: static public readonly System.String listViewWithHeaderUssClassName
    static ::StringW _get_listViewWithHeaderUssClassName();
    // Set static field: static public readonly System.String listViewWithHeaderUssClassName
    static void _set_listViewWithHeaderUssClassName(::StringW value);
    // Get static field: static public readonly System.String listViewWithFooterUssClassName
    static ::StringW _get_listViewWithFooterUssClassName();
    // Set static field: static public readonly System.String listViewWithFooterUssClassName
    static void _set_listViewWithFooterUssClassName(::StringW value);
    // Get static field: static public readonly System.String scrollViewWithFooterUssClassName
    static ::StringW _get_scrollViewWithFooterUssClassName();
    // Set static field: static public readonly System.String scrollViewWithFooterUssClassName
    static void _set_scrollViewWithFooterUssClassName(::StringW value);
    // Get static field: static public readonly System.String footerAddButtonName
    static ::StringW _get_footerAddButtonName();
    // Set static field: static public readonly System.String footerAddButtonName
    static void _set_footerAddButtonName(::StringW value);
    // Get static field: static public readonly System.String footerRemoveButtonName
    static ::StringW _get_footerRemoveButtonName();
    // Set static field: static public readonly System.String footerRemoveButtonName
    static void _set_footerRemoveButtonName(::StringW value);
    // Get static field: static private readonly System.String k_EmptyListStr
    static ::StringW _get_k_EmptyListStr();
    // Set static field: static private readonly System.String k_EmptyListStr
    static void _set_k_EmptyListStr(::StringW value);
    // Get instance field reference: private System.Boolean m_ShowBoundCollectionSize
    [[deprecated("Use field access instead!")]] bool& dyn_m_ShowBoundCollectionSize();
    // Get instance field reference: private System.Boolean m_ShowFoldoutHeader
    [[deprecated("Use field access instead!")]] bool& dyn_m_ShowFoldoutHeader();
    // Get instance field reference: private System.String m_HeaderTitle
    [[deprecated("Use field access instead!")]] ::StringW& dyn_m_HeaderTitle();
    // Get instance field reference: private System.Action`1<System.Collections.Generic.IEnumerable`1<System.Int32>> itemsAdded
    [[deprecated("Use field access instead!")]] ::System::Action_1<::System::Collections::Generic::IEnumerable_1<int>*>*& dyn_itemsAdded();
    // Get instance field reference: private System.Action`1<System.Collections.Generic.IEnumerable`1<System.Int32>> itemsRemoved
    [[deprecated("Use field access instead!")]] ::System::Action_1<::System::Collections::Generic::IEnumerable_1<int>*>*& dyn_itemsRemoved();
    // Get instance field reference: private UnityEngine.UIElements.Label m_ListViewLabel
    [[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::Label*& dyn_m_ListViewLabel();
    // Get instance field reference: private UnityEngine.UIElements.Foldout m_Foldout
    [[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::Foldout*& dyn_m_Foldout();
    // Get instance field reference: private UnityEngine.UIElements.TextField m_ArraySizeField
    [[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::TextField*& dyn_m_ArraySizeField();
    // Get instance field reference: private System.Boolean m_IsOverMultiEditLimit
    [[deprecated("Use field access instead!")]] bool& dyn_m_IsOverMultiEditLimit();
    // Get instance field reference: private UnityEngine.UIElements.VisualElement m_Footer
    [[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::VisualElement*& dyn_m_Footer();
    // Get instance field reference: private UnityEngine.UIElements.Button m_AddButton
    [[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::Button*& dyn_m_AddButton();
    // Get instance field reference: private UnityEngine.UIElements.Button m_RemoveButton
    [[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::Button*& dyn_m_RemoveButton();
    // Get instance field reference: private System.Action`1<System.Collections.Generic.IEnumerable`1<System.Int32>> m_ItemAddedCallback
    [[deprecated("Use field access instead!")]] ::System::Action_1<::System::Collections::Generic::IEnumerable_1<int>*>*& dyn_m_ItemAddedCallback();
    // Get instance field reference: private System.Action`1<System.Collections.Generic.IEnumerable`1<System.Int32>> m_ItemRemovedCallback
    [[deprecated("Use field access instead!")]] ::System::Action_1<::System::Collections::Generic::IEnumerable_1<int>*>*& dyn_m_ItemRemovedCallback();
    // Get instance field reference: private System.Action m_ItemsSourceSizeChangedCallback
    [[deprecated("Use field access instead!")]] ::System::Action*& dyn_m_ItemsSourceSizeChangedCallback();
    // Get instance field reference: private UnityEngine.UIElements.ListViewReorderMode m_ReorderMode
    [[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::ListViewReorderMode& dyn_m_ReorderMode();
    // Get instance field reference: private System.Action reorderModeChanged
    [[deprecated("Use field access instead!")]] ::System::Action*& dyn_reorderModeChanged();
    // Get instance field reference: private System.String m_MaxMultiEditStr
    [[deprecated("Use field access instead!")]] ::StringW& dyn_m_MaxMultiEditStr();
    // public System.Boolean get_showBoundCollectionSize()
    // Offset: 0x55A35CC
    bool get_showBoundCollectionSize();
    // public System.Void set_showBoundCollectionSize(System.Boolean value)
    // Offset: 0x55A35D4
    void set_showBoundCollectionSize(bool value);
    // public System.Boolean get_showFoldoutHeader()
    // Offset: 0x55A37FC
    bool get_showFoldoutHeader();
    // public System.Void set_showFoldoutHeader(System.Boolean value)
    // Offset: 0x55A3804
    void set_showFoldoutHeader(bool value);
    // private System.Void SetupArraySizeField()
    // Offset: 0x55A35F0
    void SetupArraySizeField();
    // public System.Void set_headerTitle(System.String value)
    // Offset: 0x55A4190
    void set_headerTitle(::StringW value);
    // public System.Boolean get_showAddRemoveFooter()
    // Offset: 0x55A3D30
    bool get_showAddRemoveFooter();
    // public System.Void set_showAddRemoveFooter(System.Boolean value)
    // Offset: 0x55A41D4
    void set_showAddRemoveFooter(bool value);
    // private System.Void EnableFooter(System.Boolean enabled)
    // Offset: 0x55A3D40
    void EnableFooter(bool enabled);
    // private System.Void AddItems(System.Int32 itemCount)
    // Offset: 0x55A41DC
    void AddItems(int itemCount);
    // private System.Void OnArraySizeFieldChanged(UnityEngine.UIElements.ChangeEvent`1<System.String> evt)
    // Offset: 0x55A4284
    void OnArraySizeFieldChanged(::UnityEngine::UIElements::ChangeEvent_1<::StringW>* evt);
    // System.Void UpdateArraySizeField()
    // Offset: 0x55A40CC
    void UpdateArraySizeField();
    // System.Void UpdateListViewLabel()
    // Offset: 0x55A3A88
    void UpdateListViewLabel();
    // private System.Void OnAddClicked()
    // Offset: 0x55A444C
    void OnAddClicked();
    // private System.Void OnRemoveClicked()
    // Offset: 0x55A46CC
    void OnRemoveClicked();
    // UnityEngine.UIElements.VisualElement get_footer()
    // Offset: 0x55A48E4
    ::UnityEngine::UIElements::VisualElement* get_footer();
    // public UnityEngine.UIElements.BaseListViewController get_viewController()
    // Offset: 0x55A4208
    ::UnityEngine::UIElements::BaseListViewController* get_viewController();
    // private System.Void OnItemAdded(System.Collections.Generic.IEnumerable`1<System.Int32> indices)
    // Offset: 0x55A4B30
    void OnItemAdded(::System::Collections::Generic::IEnumerable_1<int>* indices);
    // private System.Void OnItemsRemoved(System.Collections.Generic.IEnumerable`1<System.Int32> indices)
    // Offset: 0x55A4B4C
    void OnItemsRemoved(::System::Collections::Generic::IEnumerable_1<int>* indices);
    // private System.Void OnItemsSourceSizeChanged()
    // Offset: 0x55A4B68
    void OnItemsSourceSizeChanged();
    // System.Void add_reorderModeChanged(System.Action value)
    // Offset: 0x559F8C8
    void add_reorderModeChanged(::System::Action* value);
    // System.Void remove_reorderModeChanged(System.Action value)
    // Offset: 0x559FA2C
    void remove_reorderModeChanged(::System::Action* value);
    // public UnityEngine.UIElements.ListViewReorderMode get_reorderMode()
    // Offset: 0x55A4BDC
    ::UnityEngine::UIElements::ListViewReorderMode get_reorderMode();
    // public System.Void set_reorderMode(UnityEngine.UIElements.ListViewReorderMode value)
    // Offset: 0x55A4BE4
    void set_reorderMode(::UnityEngine::UIElements::ListViewReorderMode value);
    // private System.Void <OnAddClicked>b__34_0()
    // Offset: 0x55A52F4
    void $OnAddClicked$b__34_0();
    // override System.Boolean get_sourceIncludesArraySize()
    // Offset: 0x55A37D4
    // Implemented from: UnityEngine.UIElements.BaseVerticalCollectionView
    // Base method: System.Boolean BaseVerticalCollectionView::get_sourceIncludesArraySize()
    bool get_sourceIncludesArraySize();
    // override System.Void CreateVirtualizationController()
    // Offset: 0x55A48EC
    // Implemented from: UnityEngine.UIElements.BaseVerticalCollectionView
    // Base method: System.Void BaseVerticalCollectionView::CreateVirtualizationController()
    void CreateVirtualizationController();
    // public override System.Void SetViewController(UnityEngine.UIElements.CollectionViewController controller)
    // Offset: 0x55A4934
    // Implemented from: UnityEngine.UIElements.BaseVerticalCollectionView
    // Base method: System.Void BaseVerticalCollectionView::SetViewController(UnityEngine.UIElements.CollectionViewController controller)
    void SetViewController(::UnityEngine::UIElements::CollectionViewController* controller);
    // override UnityEngine.UIElements.ListViewDragger CreateDragger()
    // Offset: 0x55A4C44
    // Implemented from: UnityEngine.UIElements.BaseVerticalCollectionView
    // Base method: UnityEngine.UIElements.ListViewDragger BaseVerticalCollectionView::CreateDragger()
    ::UnityEngine::UIElements::ListViewDragger* CreateDragger();
    // override UnityEngine.UIElements.ICollectionDragAndDropController CreateDragAndDropController()
    // Offset: 0x55A4CD8
    // Implemented from: UnityEngine.UIElements.BaseVerticalCollectionView
    // Base method: UnityEngine.UIElements.ICollectionDragAndDropController BaseVerticalCollectionView::CreateDragAndDropController()
    ::UnityEngine::UIElements::ICollectionDragAndDropController* CreateDragAndDropController();
    // public System.Void .ctor()
    // Offset: 0x55A4D34
    // Implemented from: UnityEngine.UIElements.BaseVerticalCollectionView
    // Base method: System.Void BaseVerticalCollectionView::.ctor()
    // Base method: System.Void BindableElement::.ctor()
    // Base method: System.Void VisualElement::.ctor()
    // Base method: System.Void Focusable::.ctor()
    // Base method: System.Void CallbackEventHandler::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static BaseListView* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::BaseListView::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<BaseListView*, creationType>()));
    }
    // override System.Void PostRefresh()
    // Offset: 0x55A4DDC
    // Implemented from: UnityEngine.UIElements.BaseVerticalCollectionView
    // Base method: System.Void BaseVerticalCollectionView::PostRefresh()
    void PostRefresh();
    // static private System.Void .cctor()
    // Offset: 0x55A4E00
    // Implemented from: UnityEngine.UIElements.BaseVerticalCollectionView
    // Base method: System.Void BaseVerticalCollectionView::.cctor()
    // Base method: System.Void VisualElement::.cctor()
    static void _cctor();
  }; // UnityEngine.UIElements.BaseListView
  // WARNING Not writing size check since size may be invalid!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseListView::get_showBoundCollectionSize
// Il2CppName: get_showBoundCollectionSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::BaseListView::*)()>(&UnityEngine::UIElements::BaseListView::get_showBoundCollectionSize)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseListView*), "get_showBoundCollectionSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseListView::set_showBoundCollectionSize
// Il2CppName: set_showBoundCollectionSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::BaseListView::*)(bool)>(&UnityEngine::UIElements::BaseListView::set_showBoundCollectionSize)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseListView*), "set_showBoundCollectionSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseListView::get_showFoldoutHeader
// Il2CppName: get_showFoldoutHeader
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::BaseListView::*)()>(&UnityEngine::UIElements::BaseListView::get_showFoldoutHeader)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseListView*), "get_showFoldoutHeader", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseListView::set_showFoldoutHeader
// Il2CppName: set_showFoldoutHeader
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::BaseListView::*)(bool)>(&UnityEngine::UIElements::BaseListView::set_showFoldoutHeader)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseListView*), "set_showFoldoutHeader", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseListView::SetupArraySizeField
// Il2CppName: SetupArraySizeField
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::BaseListView::*)()>(&UnityEngine::UIElements::BaseListView::SetupArraySizeField)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseListView*), "SetupArraySizeField", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseListView::set_headerTitle
// Il2CppName: set_headerTitle
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::BaseListView::*)(::StringW)>(&UnityEngine::UIElements::BaseListView::set_headerTitle)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseListView*), "set_headerTitle", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseListView::get_showAddRemoveFooter
// Il2CppName: get_showAddRemoveFooter
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::BaseListView::*)()>(&UnityEngine::UIElements::BaseListView::get_showAddRemoveFooter)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseListView*), "get_showAddRemoveFooter", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseListView::set_showAddRemoveFooter
// Il2CppName: set_showAddRemoveFooter
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::BaseListView::*)(bool)>(&UnityEngine::UIElements::BaseListView::set_showAddRemoveFooter)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseListView*), "set_showAddRemoveFooter", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseListView::EnableFooter
// Il2CppName: EnableFooter
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::BaseListView::*)(bool)>(&UnityEngine::UIElements::BaseListView::EnableFooter)> {
  static const MethodInfo* get() {
    static auto* enabled = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseListView*), "EnableFooter", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{enabled});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseListView::AddItems
// Il2CppName: AddItems
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::BaseListView::*)(int)>(&UnityEngine::UIElements::BaseListView::AddItems)> {
  static const MethodInfo* get() {
    static auto* itemCount = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseListView*), "AddItems", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{itemCount});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseListView::OnArraySizeFieldChanged
// Il2CppName: OnArraySizeFieldChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::BaseListView::*)(::UnityEngine::UIElements::ChangeEvent_1<::StringW>*)>(&UnityEngine::UIElements::BaseListView::OnArraySizeFieldChanged)> {
  static const MethodInfo* get() {
    static auto* evt = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "ChangeEvent`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseListView*), "OnArraySizeFieldChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{evt});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseListView::UpdateArraySizeField
// Il2CppName: UpdateArraySizeField
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::BaseListView::*)()>(&UnityEngine::UIElements::BaseListView::UpdateArraySizeField)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseListView*), "UpdateArraySizeField", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseListView::UpdateListViewLabel
// Il2CppName: UpdateListViewLabel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::BaseListView::*)()>(&UnityEngine::UIElements::BaseListView::UpdateListViewLabel)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseListView*), "UpdateListViewLabel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseListView::OnAddClicked
// Il2CppName: OnAddClicked
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::BaseListView::*)()>(&UnityEngine::UIElements::BaseListView::OnAddClicked)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseListView*), "OnAddClicked", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseListView::OnRemoveClicked
// Il2CppName: OnRemoveClicked
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::BaseListView::*)()>(&UnityEngine::UIElements::BaseListView::OnRemoveClicked)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseListView*), "OnRemoveClicked", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseListView::get_footer
// Il2CppName: get_footer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::VisualElement* (UnityEngine::UIElements::BaseListView::*)()>(&UnityEngine::UIElements::BaseListView::get_footer)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseListView*), "get_footer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseListView::get_viewController
// Il2CppName: get_viewController
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::BaseListViewController* (UnityEngine::UIElements::BaseListView::*)()>(&UnityEngine::UIElements::BaseListView::get_viewController)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseListView*), "get_viewController", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseListView::OnItemAdded
// Il2CppName: OnItemAdded
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::BaseListView::*)(::System::Collections::Generic::IEnumerable_1<int>*)>(&UnityEngine::UIElements::BaseListView::OnItemAdded)> {
  static const MethodInfo* get() {
    static auto* indices = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "IEnumerable`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Int32")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseListView*), "OnItemAdded", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{indices});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseListView::OnItemsRemoved
// Il2CppName: OnItemsRemoved
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::BaseListView::*)(::System::Collections::Generic::IEnumerable_1<int>*)>(&UnityEngine::UIElements::BaseListView::OnItemsRemoved)> {
  static const MethodInfo* get() {
    static auto* indices = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "IEnumerable`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Int32")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseListView*), "OnItemsRemoved", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{indices});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseListView::OnItemsSourceSizeChanged
// Il2CppName: OnItemsSourceSizeChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::BaseListView::*)()>(&UnityEngine::UIElements::BaseListView::OnItemsSourceSizeChanged)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseListView*), "OnItemsSourceSizeChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseListView::add_reorderModeChanged
// Il2CppName: add_reorderModeChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::BaseListView::*)(::System::Action*)>(&UnityEngine::UIElements::BaseListView::add_reorderModeChanged)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Action")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseListView*), "add_reorderModeChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseListView::remove_reorderModeChanged
// Il2CppName: remove_reorderModeChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::BaseListView::*)(::System::Action*)>(&UnityEngine::UIElements::BaseListView::remove_reorderModeChanged)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Action")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseListView*), "remove_reorderModeChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseListView::get_reorderMode
// Il2CppName: get_reorderMode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::ListViewReorderMode (UnityEngine::UIElements::BaseListView::*)()>(&UnityEngine::UIElements::BaseListView::get_reorderMode)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseListView*), "get_reorderMode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseListView::set_reorderMode
// Il2CppName: set_reorderMode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::BaseListView::*)(::UnityEngine::UIElements::ListViewReorderMode)>(&UnityEngine::UIElements::BaseListView::set_reorderMode)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "ListViewReorderMode")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseListView*), "set_reorderMode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseListView::$OnAddClicked$b__34_0
// Il2CppName: <OnAddClicked>b__34_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::BaseListView::*)()>(&UnityEngine::UIElements::BaseListView::$OnAddClicked$b__34_0)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseListView*), "<OnAddClicked>b__34_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseListView::get_sourceIncludesArraySize
// Il2CppName: get_sourceIncludesArraySize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::BaseListView::*)()>(&UnityEngine::UIElements::BaseListView::get_sourceIncludesArraySize)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseListView*), "get_sourceIncludesArraySize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseListView::CreateVirtualizationController
// Il2CppName: CreateVirtualizationController
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::BaseListView::*)()>(&UnityEngine::UIElements::BaseListView::CreateVirtualizationController)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseListView*), "CreateVirtualizationController", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseListView::SetViewController
// Il2CppName: SetViewController
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::BaseListView::*)(::UnityEngine::UIElements::CollectionViewController*)>(&UnityEngine::UIElements::BaseListView::SetViewController)> {
  static const MethodInfo* get() {
    static auto* controller = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "CollectionViewController")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseListView*), "SetViewController", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{controller});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseListView::CreateDragger
// Il2CppName: CreateDragger
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::ListViewDragger* (UnityEngine::UIElements::BaseListView::*)()>(&UnityEngine::UIElements::BaseListView::CreateDragger)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseListView*), "CreateDragger", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseListView::CreateDragAndDropController
// Il2CppName: CreateDragAndDropController
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::ICollectionDragAndDropController* (UnityEngine::UIElements::BaseListView::*)()>(&UnityEngine::UIElements::BaseListView::CreateDragAndDropController)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseListView*), "CreateDragAndDropController", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseListView::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseListView::PostRefresh
// Il2CppName: PostRefresh
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::BaseListView::*)()>(&UnityEngine::UIElements::BaseListView::PostRefresh)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseListView*), "PostRefresh", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseListView::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&UnityEngine::UIElements::BaseListView::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseListView*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
