// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.UIElements.TypedUxmlAttributeDescription`1
#include "UnityEngine/UIElements/TypedUxmlAttributeDescription_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::UIElements
namespace UnityEngine::UIElements {
  // Forward declaring type: IUxmlAttributes
  class IUxmlAttributes;
  // Skipping declaration: CreationContext because it is already included!
}
// Completed forward declares
// Type namespace: UnityEngine.UIElements
namespace UnityEngine::UIElements {
  // Forward declaring type: UxmlIntAttributeDescription
  class UxmlIntAttributeDescription;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::UIElements::UxmlIntAttributeDescription);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::UIElements::UxmlIntAttributeDescription*, "UnityEngine.UIElements", "UxmlIntAttributeDescription");
// Type namespace: UnityEngine.UIElements
namespace UnityEngine::UIElements {
  // WARNING Size may be invalid!
  // Autogenerated type: UnityEngine.UIElements.UxmlIntAttributeDescription
  // [TokenAttribute] Offset: FFFFFFFF
  class UxmlIntAttributeDescription : public ::UnityEngine::UIElements::TypedUxmlAttributeDescription_1<int> {
    public:
    // Nested type: ::UnityEngine::UIElements::UxmlIntAttributeDescription::$$c
    class $$c;
    // public System.Int32 GetValueFromBag(UnityEngine.UIElements.IUxmlAttributes bag, UnityEngine.UIElements.CreationContext cc)
    // Offset: 0x56C5D80
    int GetValueFromBag(::UnityEngine::UIElements::IUxmlAttributes* bag, ::UnityEngine::UIElements::CreationContext cc);
    // public System.Boolean TryGetValueFromBag(UnityEngine.UIElements.IUxmlAttributes bag, UnityEngine.UIElements.CreationContext cc, ref System.Int32 value)
    // Offset: 0x56C5ED4
    bool TryGetValueFromBag(::UnityEngine::UIElements::IUxmlAttributes* bag, ::UnityEngine::UIElements::CreationContext cc, ByRef<int> value);
    // static private System.Int32 ConvertValueToInt(System.String v, System.Int32 defaultValue)
    // Offset: 0x56C603C
    static int ConvertValueToInt(::StringW v, int defaultValue);
    // public System.Void .ctor()
    // Offset: 0x56C5CD4
    // Implemented from: UnityEngine.UIElements.TypedUxmlAttributeDescription`1
    // Base method: System.Void TypedUxmlAttributeDescription_1::.ctor()
    // Base method: System.Void UxmlAttributeDescription::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static UxmlIntAttributeDescription* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::UxmlIntAttributeDescription::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<UxmlIntAttributeDescription*, creationType>()));
    }
  }; // UnityEngine.UIElements.UxmlIntAttributeDescription
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::UIElements::UxmlIntAttributeDescription::GetValueFromBag
// Il2CppName: GetValueFromBag
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::UIElements::UxmlIntAttributeDescription::*)(::UnityEngine::UIElements::IUxmlAttributes*, ::UnityEngine::UIElements::CreationContext)>(&UnityEngine::UIElements::UxmlIntAttributeDescription::GetValueFromBag)> {
  static const MethodInfo* get() {
    static auto* bag = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "IUxmlAttributes")->byval_arg;
    static auto* cc = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "CreationContext")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::UxmlIntAttributeDescription*), "GetValueFromBag", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{bag, cc});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::UxmlIntAttributeDescription::TryGetValueFromBag
// Il2CppName: TryGetValueFromBag
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::UxmlIntAttributeDescription::*)(::UnityEngine::UIElements::IUxmlAttributes*, ::UnityEngine::UIElements::CreationContext, ByRef<int>)>(&UnityEngine::UIElements::UxmlIntAttributeDescription::TryGetValueFromBag)> {
  static const MethodInfo* get() {
    static auto* bag = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "IUxmlAttributes")->byval_arg;
    static auto* cc = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "CreationContext")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::UxmlIntAttributeDescription*), "TryGetValueFromBag", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{bag, cc, value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::UxmlIntAttributeDescription::ConvertValueToInt
// Il2CppName: ConvertValueToInt
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::StringW, int)>(&UnityEngine::UIElements::UxmlIntAttributeDescription::ConvertValueToInt)> {
  static const MethodInfo* get() {
    static auto* v = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* defaultValue = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::UxmlIntAttributeDescription*), "ConvertValueToInt", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{v, defaultValue});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::UxmlIntAttributeDescription::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
