// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.UIElements.StylePropertyAnimationSystem
#include "UnityEngine/UIElements/StylePropertyAnimationSystem.hpp"
// Including type: UnityEngine.UIElements.StylePropertyAnimationSystem/Values`1
#include "UnityEngine/UIElements/StylePropertyAnimationSystem_Values_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Func`3<T1, T2, TResult>
  template<typename T1, typename T2, typename TResult>
  class Func_3;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE_GENERIC_CLASS(::UnityEngine::UIElements::StylePropertyAnimationSystem::ValuesDiscrete_1, "UnityEngine.UIElements", "StylePropertyAnimationSystem/ValuesDiscrete`1");
// Type namespace: UnityEngine.UIElements
namespace UnityEngine::UIElements {
  // WARNING Size may be invalid!
  // Autogenerated type: UnityEngine.UIElements.StylePropertyAnimationSystem/ValuesDiscrete`1
  // [TokenAttribute] Offset: FFFFFFFF
  template<typename T>
  class StylePropertyAnimationSystem::ValuesDiscrete_1 : public ::UnityEngine::UIElements::StylePropertyAnimationSystem::Values_1<T> {
    public:
    public:
    // private readonly System.Func`3<T,T,System.Boolean> <SameFunc>k__BackingField
    // Size: 0x8
    // Offset: 0x0
    ::System::Func_3<T, T, bool>* SameFunc;
    // Field size check
    static_assert(sizeof(::System::Func_3<T, T, bool>*) == 0x8);
    public:
    // Creating conversion operator: operator ::System::Func_3<T, T, bool>*
    constexpr operator ::System::Func_3<T, T, bool>*() const noexcept {
      return SameFunc;
    }
    // Autogenerated instance field getter
    // Get instance field: private readonly System.Func`3<T,T,System.Boolean> <SameFunc>k__BackingField
    [[deprecated("Use field access instead!")]] ::System::Func_3<T, T, bool>*& dyn_$SameFunc$k__BackingField() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::StylePropertyAnimationSystem::ValuesDiscrete_1::dyn_$SameFunc$k__BackingField");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<SameFunc>k__BackingField"))->offset;
      return *reinterpret_cast<::System::Func_3<T, T, bool>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // static private System.Boolean IsSame(T a, T b)
    // Offset: 0xFFFFFFFFFFFFFFFF
    static bool IsSame(T a, T b) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::StylePropertyAnimationSystem::ValuesDiscrete_1::IsSame");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<StylePropertyAnimationSystem::ValuesDiscrete_1<T>*>::get(), "IsSame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
      return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b);
    }
    // static private T Lerp(T a, T b, System.Single t)
    // Offset: 0xFFFFFFFFFFFFFFFF
    static T Lerp(T a, T b, float t) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::StylePropertyAnimationSystem::ValuesDiscrete_1::Lerp");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<StylePropertyAnimationSystem::ValuesDiscrete_1<T>*>::get(), "Lerp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(t)})));
      return ::il2cpp_utils::RunMethodRethrow<T, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b, t);
    }
    // public override System.Func`3<T,T,System.Boolean> get_SameFunc()
    // Offset: 0xFFFFFFFFFFFFFFFF
    // Implemented from: UnityEngine.UIElements.StylePropertyAnimationSystem/Values`1
    // Base method: System.Func`3<T,T,System.Boolean> Values_1::get_SameFunc()
    ::System::Func_3<T, T, bool>* get_SameFunc() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::StylePropertyAnimationSystem::ValuesDiscrete_1::get_SameFunc");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UIElements::StylePropertyAnimationSystem::Values_1<T>*), -1));
      return ::il2cpp_utils::RunMethodRethrow<::System::Func_3<T, T, bool>*, false>(this, ___internal__method);
    }
    // protected override System.Void UpdateValues()
    // Offset: 0xFFFFFFFFFFFFFFFF
    // Implemented from: UnityEngine.UIElements.StylePropertyAnimationSystem/Values
    // Base method: System.Void Values::UpdateValues()
    void UpdateValues() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::StylePropertyAnimationSystem::ValuesDiscrete_1::UpdateValues");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UIElements::StylePropertyAnimationSystem::Values*), -1));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
    }
    // protected System.Void .ctor()
    // Offset: 0xFFFFFFFFFFFFFFFF
    // Implemented from: UnityEngine.UIElements.StylePropertyAnimationSystem/Values`1
    // Base method: System.Void Values_1::.ctor()
    // Base method: System.Void Values::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static StylePropertyAnimationSystem::ValuesDiscrete_1<T>* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::StylePropertyAnimationSystem::ValuesDiscrete_1::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<StylePropertyAnimationSystem::ValuesDiscrete_1<T>*, creationType>()));
    }
  }; // UnityEngine.UIElements.StylePropertyAnimationSystem/ValuesDiscrete`1
  // Could not write size check! Type: UnityEngine.UIElements.StylePropertyAnimationSystem/ValuesDiscrete`1 is generic, or has no fields that are valid for size checks!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
