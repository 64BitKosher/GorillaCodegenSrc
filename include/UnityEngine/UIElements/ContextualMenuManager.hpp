// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::UIElements
namespace UnityEngine::UIElements {
  // Forward declaring type: EventBase
  class EventBase;
  // Forward declaring type: IEventHandler
  class IEventHandler;
  // Forward declaring type: DropdownMenu
  class DropdownMenu;
}
// Completed forward declares
// Type namespace: UnityEngine.UIElements
namespace UnityEngine::UIElements {
  // Forward declaring type: ContextualMenuManager
  class ContextualMenuManager;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::UIElements::ContextualMenuManager);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::UIElements::ContextualMenuManager*, "UnityEngine.UIElements", "ContextualMenuManager");
// Type namespace: UnityEngine.UIElements
namespace UnityEngine::UIElements {
  // Size: 0x11
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.UIElements.ContextualMenuManager
  // [TokenAttribute] Offset: FFFFFFFF
  class ContextualMenuManager : public ::Il2CppObject {
    public:
    public:
    // private System.Boolean <displayMenuHandledOSX>k__BackingField
    // Size: 0x1
    // Offset: 0x10
    bool displayMenuHandledOSX;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    public:
    // Creating conversion operator: operator bool
    constexpr operator bool() const noexcept {
      return displayMenuHandledOSX;
    }
    // Get instance field reference: private System.Boolean <displayMenuHandledOSX>k__BackingField
    [[deprecated("Use field access instead!")]] bool& dyn_$displayMenuHandledOSX$k__BackingField();
    // System.Boolean get_displayMenuHandledOSX()
    // Offset: 0x55A2048
    bool get_displayMenuHandledOSX();
    // System.Void set_displayMenuHandledOSX(System.Boolean value)
    // Offset: 0x55A2050
    void set_displayMenuHandledOSX(bool value);
    // public System.Void DisplayMenuIfEventMatches(UnityEngine.UIElements.EventBase evt, UnityEngine.UIElements.IEventHandler eventHandler)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void DisplayMenuIfEventMatches(::UnityEngine::UIElements::EventBase* evt, ::UnityEngine::UIElements::IEventHandler* eventHandler);
    // public System.Void DisplayMenu(UnityEngine.UIElements.EventBase triggerEvent, UnityEngine.UIElements.IEventHandler target)
    // Offset: 0x55A205C
    void DisplayMenu(::UnityEngine::UIElements::EventBase* triggerEvent, ::UnityEngine::UIElements::IEventHandler* target);
    // protected internal System.Void DoDisplayMenu(UnityEngine.UIElements.DropdownMenu menu, UnityEngine.UIElements.EventBase triggerEvent)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void DoDisplayMenu(::UnityEngine::UIElements::DropdownMenu* menu, ::UnityEngine::UIElements::EventBase* triggerEvent);
  }; // UnityEngine.UIElements.ContextualMenuManager
  #pragma pack(pop)
  static check_size<sizeof(ContextualMenuManager), 16 + sizeof(bool)> __UnityEngine_UIElements_ContextualMenuManagerSizeCheck;
  static_assert(sizeof(ContextualMenuManager) == 0x11);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::UIElements::ContextualMenuManager::get_displayMenuHandledOSX
// Il2CppName: get_displayMenuHandledOSX
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::ContextualMenuManager::*)()>(&UnityEngine::UIElements::ContextualMenuManager::get_displayMenuHandledOSX)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::ContextualMenuManager*), "get_displayMenuHandledOSX", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::ContextualMenuManager::set_displayMenuHandledOSX
// Il2CppName: set_displayMenuHandledOSX
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::ContextualMenuManager::*)(bool)>(&UnityEngine::UIElements::ContextualMenuManager::set_displayMenuHandledOSX)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::ContextualMenuManager*), "set_displayMenuHandledOSX", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::ContextualMenuManager::DisplayMenuIfEventMatches
// Il2CppName: DisplayMenuIfEventMatches
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::ContextualMenuManager::*)(::UnityEngine::UIElements::EventBase*, ::UnityEngine::UIElements::IEventHandler*)>(&UnityEngine::UIElements::ContextualMenuManager::DisplayMenuIfEventMatches)> {
  static const MethodInfo* get() {
    static auto* evt = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "EventBase")->byval_arg;
    static auto* eventHandler = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "IEventHandler")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::ContextualMenuManager*), "DisplayMenuIfEventMatches", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{evt, eventHandler});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::ContextualMenuManager::DisplayMenu
// Il2CppName: DisplayMenu
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::ContextualMenuManager::*)(::UnityEngine::UIElements::EventBase*, ::UnityEngine::UIElements::IEventHandler*)>(&UnityEngine::UIElements::ContextualMenuManager::DisplayMenu)> {
  static const MethodInfo* get() {
    static auto* triggerEvent = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "EventBase")->byval_arg;
    static auto* target = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "IEventHandler")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::ContextualMenuManager*), "DisplayMenu", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{triggerEvent, target});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::ContextualMenuManager::DoDisplayMenu
// Il2CppName: DoDisplayMenu
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::ContextualMenuManager::*)(::UnityEngine::UIElements::DropdownMenu*, ::UnityEngine::UIElements::EventBase*)>(&UnityEngine::UIElements::ContextualMenuManager::DoDisplayMenu)> {
  static const MethodInfo* get() {
    static auto* menu = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "DropdownMenu")->byval_arg;
    static auto* triggerEvent = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "EventBase")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::ContextualMenuManager*), "DoDisplayMenu", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{menu, triggerEvent});
  }
};
