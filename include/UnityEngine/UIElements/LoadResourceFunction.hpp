// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.MulticastDelegate
#include "System/MulticastDelegate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Object
  class Object;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Type
  class Type;
}
// Completed forward declares
// Type namespace: UnityEngine.UIElements
namespace UnityEngine::UIElements {
  // Forward declaring type: LoadResourceFunction
  class LoadResourceFunction;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::UIElements::LoadResourceFunction);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::UIElements::LoadResourceFunction*, "UnityEngine.UIElements", "LoadResourceFunction");
// Type namespace: UnityEngine.UIElements
namespace UnityEngine::UIElements {
  // Size: 0x80
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.UIElements.LoadResourceFunction
  // [TokenAttribute] Offset: FFFFFFFF
  class LoadResourceFunction : public ::System::MulticastDelegate {
    public:
    // public System.Void .ctor(System.Object object, System.IntPtr method)
    // Offset: 0x5666804
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static LoadResourceFunction* New_ctor(::Il2CppObject* object, ::System::IntPtr method) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::LoadResourceFunction::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<LoadResourceFunction*, creationType>(object, method)));
    }
    // public UnityEngine.Object Invoke(System.String pathName, System.Type type, System.Single dpiScaling)
    // Offset: 0x56668B8
    ::UnityEngine::Object* Invoke(::StringW pathName, ::System::Type* type, float dpiScaling);
  }; // UnityEngine.UIElements.LoadResourceFunction
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::UIElements::LoadResourceFunction::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::UIElements::LoadResourceFunction::Invoke
// Il2CppName: Invoke
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Object* (UnityEngine::UIElements::LoadResourceFunction::*)(::StringW, ::System::Type*, float)>(&UnityEngine::UIElements::LoadResourceFunction::Invoke)> {
  static const MethodInfo* get() {
    static auto* pathName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* type = &::il2cpp_utils::GetClassFromName("System", "Type")->byval_arg;
    static auto* dpiScaling = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::LoadResourceFunction*), "Invoke", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{pathName, type, dpiScaling});
  }
};
