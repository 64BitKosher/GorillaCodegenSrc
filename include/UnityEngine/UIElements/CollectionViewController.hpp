// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.IDisposable
#include "System/IDisposable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::UIElements
namespace UnityEngine::UIElements {
  // Forward declaring type: BaseVerticalCollectionView
  class BaseVerticalCollectionView;
  // Forward declaring type: ReusableCollectionItem
  class ReusableCollectionItem;
  // Forward declaring type: VisualElement
  class VisualElement;
}
// Forward declaring namespace: System::Collections
namespace System::Collections {
  // Forward declaring type: IList
  class IList;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Action
  class Action;
  // Forward declaring type: Action`2<T1, T2>
  template<typename T1, typename T2>
  class Action_2;
}
// Completed forward declares
// Type namespace: UnityEngine.UIElements
namespace UnityEngine::UIElements {
  // Forward declaring type: CollectionViewController
  class CollectionViewController;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::UIElements::CollectionViewController);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::UIElements::CollectionViewController*, "UnityEngine.UIElements", "CollectionViewController");
// Type namespace: UnityEngine.UIElements
namespace UnityEngine::UIElements {
  // Size: 0x30
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.UIElements.CollectionViewController
  // [TokenAttribute] Offset: FFFFFFFF
  class CollectionViewController : public ::Il2CppObject/*, public ::System::IDisposable*/ {
    public:
    public:
    // private UnityEngine.UIElements.BaseVerticalCollectionView m_View
    // Size: 0x8
    // Offset: 0x10
    ::UnityEngine::UIElements::BaseVerticalCollectionView* m_View;
    // Field size check
    static_assert(sizeof(::UnityEngine::UIElements::BaseVerticalCollectionView*) == 0x8);
    // private System.Collections.IList m_ItemsSource
    // Size: 0x8
    // Offset: 0x18
    ::System::Collections::IList* m_ItemsSource;
    // Field size check
    static_assert(sizeof(::System::Collections::IList*) == 0x8);
    // private System.Action itemsSourceChanged
    // Size: 0x8
    // Offset: 0x20
    ::System::Action* itemsSourceChanged;
    // Field size check
    static_assert(sizeof(::System::Action*) == 0x8);
    // private System.Action`2<System.Int32,System.Int32> itemIndexChanged
    // Size: 0x8
    // Offset: 0x28
    ::System::Action_2<int, int>* itemIndexChanged;
    // Field size check
    static_assert(sizeof(::System::Action_2<int, int>*) == 0x8);
    public:
    // Creating interface conversion operator: operator ::System::IDisposable
    operator ::System::IDisposable() noexcept {
      return *reinterpret_cast<::System::IDisposable*>(this);
    }
    // Get instance field reference: private UnityEngine.UIElements.BaseVerticalCollectionView m_View
    [[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::BaseVerticalCollectionView*& dyn_m_View();
    // Get instance field reference: private System.Collections.IList m_ItemsSource
    [[deprecated("Use field access instead!")]] ::System::Collections::IList*& dyn_m_ItemsSource();
    // Get instance field reference: private System.Action itemsSourceChanged
    [[deprecated("Use field access instead!")]] ::System::Action*& dyn_itemsSourceChanged();
    // Get instance field reference: private System.Action`2<System.Int32,System.Int32> itemIndexChanged
    [[deprecated("Use field access instead!")]] ::System::Action_2<int, int>*& dyn_itemIndexChanged();
    // public System.Void add_itemsSourceChanged(System.Action value)
    // Offset: 0x559E690
    void add_itemsSourceChanged(::System::Action* value);
    // public System.Void remove_itemsSourceChanged(System.Action value)
    // Offset: 0x559E72C
    void remove_itemsSourceChanged(::System::Action* value);
    // public System.Void add_itemIndexChanged(System.Action`2<System.Int32,System.Int32> value)
    // Offset: 0x559E7C8
    void add_itemIndexChanged(::System::Action_2<int, int>* value);
    // public System.Void remove_itemIndexChanged(System.Action`2<System.Int32,System.Int32> value)
    // Offset: 0x559E878
    void remove_itemIndexChanged(::System::Action_2<int, int>* value);
    // public System.Collections.IList get_itemsSource()
    // Offset: 0x559E928
    ::System::Collections::IList* get_itemsSource();
    // public System.Void set_itemsSource(System.Collections.IList value)
    // Offset: 0x559E930
    void set_itemsSource(::System::Collections::IList* value);
    // protected System.Void SetItemsSourceWithoutNotify(System.Collections.IList source)
    // Offset: 0x559E3CC
    void SetItemsSourceWithoutNotify(::System::Collections::IList* source);
    // protected UnityEngine.UIElements.BaseVerticalCollectionView get_view()
    // Offset: 0x559EA54
    ::UnityEngine::UIElements::BaseVerticalCollectionView* get_view();
    // public System.Void SetView(UnityEngine.UIElements.BaseVerticalCollectionView collectionView)
    // Offset: 0x559EA5C
    void SetView(::UnityEngine::UIElements::BaseVerticalCollectionView* collectionView);
    // protected System.Void PrepareView()
    // Offset: 0x559EB1C
    void PrepareView();
    // public System.Void Dispose()
    // Offset: 0x559EB20
    void Dispose();
    // public System.Int32 GetItemsCount()
    // Offset: 0x559EB58
    int GetItemsCount();
    // System.Int32 GetItemsMinCount()
    // Offset: 0x559EC08
    int GetItemsMinCount();
    // public System.Int32 GetIndexForId(System.Int32 id)
    // Offset: 0x559EC14
    int GetIndexForId(int id);
    // public System.Int32 GetIdForIndex(System.Int32 index)
    // Offset: 0x559EC1C
    int GetIdForIndex(int index);
    // public System.Object GetItemForIndex(System.Int32 index)
    // Offset: 0x559EC24
    ::Il2CppObject* GetItemForIndex(int index);
    // System.Void InvokeMakeItem(UnityEngine.UIElements.ReusableCollectionItem reusableItem)
    // Offset: 0x559ED60
    void InvokeMakeItem(::UnityEngine::UIElements::ReusableCollectionItem* reusableItem);
    // System.Void InvokeBindItem(UnityEngine.UIElements.ReusableCollectionItem reusableItem, System.Int32 index)
    // Offset: 0x5599114
    void InvokeBindItem(::UnityEngine::UIElements::ReusableCollectionItem* reusableItem, int index);
    // System.Void InvokeUnbindItem(UnityEngine.UIElements.ReusableCollectionItem reusableItem, System.Int32 index)
    // Offset: 0x559ED9C
    void InvokeUnbindItem(::UnityEngine::UIElements::ReusableCollectionItem* reusableItem, int index);
    // System.Void InvokeDestroyItem(UnityEngine.UIElements.ReusableCollectionItem reusableItem)
    // Offset: 0x559B91C
    void InvokeDestroyItem(::UnityEngine::UIElements::ReusableCollectionItem* reusableItem);
    // protected UnityEngine.UIElements.VisualElement MakeItem()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::UnityEngine::UIElements::VisualElement* MakeItem();
    // protected System.Void BindItem(UnityEngine.UIElements.VisualElement element, System.Int32 index)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void BindItem(::UnityEngine::UIElements::VisualElement* element, int index);
    // protected System.Void UnbindItem(UnityEngine.UIElements.VisualElement element, System.Int32 index)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void UnbindItem(::UnityEngine::UIElements::VisualElement* element, int index);
    // protected System.Void DestroyItem(UnityEngine.UIElements.VisualElement element)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void DestroyItem(::UnityEngine::UIElements::VisualElement* element);
    // protected System.Void RaiseItemsSourceChanged()
    // Offset: 0x559EA38
    void RaiseItemsSourceChanged();
    // protected System.Void RaiseItemIndexChanged(System.Int32 srcIndex, System.Int32 dstIndex)
    // Offset: 0x5599FF8
    void RaiseItemIndexChanged(int srcIndex, int dstIndex);
    // protected System.Void .ctor()
    // Offset: 0x559A9A8
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static CollectionViewController* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::CollectionViewController::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<CollectionViewController*, creationType>()));
    }
  }; // UnityEngine.UIElements.CollectionViewController
  #pragma pack(pop)
  static check_size<sizeof(CollectionViewController), 40 + sizeof(::System::Action_2<int, int>*)> __UnityEngine_UIElements_CollectionViewControllerSizeCheck;
  static_assert(sizeof(CollectionViewController) == 0x30);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::UIElements::CollectionViewController::add_itemsSourceChanged
// Il2CppName: add_itemsSourceChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::CollectionViewController::*)(::System::Action*)>(&UnityEngine::UIElements::CollectionViewController::add_itemsSourceChanged)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Action")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::CollectionViewController*), "add_itemsSourceChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::CollectionViewController::remove_itemsSourceChanged
// Il2CppName: remove_itemsSourceChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::CollectionViewController::*)(::System::Action*)>(&UnityEngine::UIElements::CollectionViewController::remove_itemsSourceChanged)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Action")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::CollectionViewController*), "remove_itemsSourceChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::CollectionViewController::add_itemIndexChanged
// Il2CppName: add_itemIndexChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::CollectionViewController::*)(::System::Action_2<int, int>*)>(&UnityEngine::UIElements::CollectionViewController::add_itemIndexChanged)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Int32"), ::il2cpp_utils::GetClassFromName("System", "Int32")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::CollectionViewController*), "add_itemIndexChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::CollectionViewController::remove_itemIndexChanged
// Il2CppName: remove_itemIndexChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::CollectionViewController::*)(::System::Action_2<int, int>*)>(&UnityEngine::UIElements::CollectionViewController::remove_itemIndexChanged)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Int32"), ::il2cpp_utils::GetClassFromName("System", "Int32")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::CollectionViewController*), "remove_itemIndexChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::CollectionViewController::get_itemsSource
// Il2CppName: get_itemsSource
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::IList* (UnityEngine::UIElements::CollectionViewController::*)()>(&UnityEngine::UIElements::CollectionViewController::get_itemsSource)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::CollectionViewController*), "get_itemsSource", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::CollectionViewController::set_itemsSource
// Il2CppName: set_itemsSource
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::CollectionViewController::*)(::System::Collections::IList*)>(&UnityEngine::UIElements::CollectionViewController::set_itemsSource)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System.Collections", "IList")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::CollectionViewController*), "set_itemsSource", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::CollectionViewController::SetItemsSourceWithoutNotify
// Il2CppName: SetItemsSourceWithoutNotify
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::CollectionViewController::*)(::System::Collections::IList*)>(&UnityEngine::UIElements::CollectionViewController::SetItemsSourceWithoutNotify)> {
  static const MethodInfo* get() {
    static auto* source = &::il2cpp_utils::GetClassFromName("System.Collections", "IList")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::CollectionViewController*), "SetItemsSourceWithoutNotify", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{source});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::CollectionViewController::get_view
// Il2CppName: get_view
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::BaseVerticalCollectionView* (UnityEngine::UIElements::CollectionViewController::*)()>(&UnityEngine::UIElements::CollectionViewController::get_view)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::CollectionViewController*), "get_view", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::CollectionViewController::SetView
// Il2CppName: SetView
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::CollectionViewController::*)(::UnityEngine::UIElements::BaseVerticalCollectionView*)>(&UnityEngine::UIElements::CollectionViewController::SetView)> {
  static const MethodInfo* get() {
    static auto* collectionView = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "BaseVerticalCollectionView")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::CollectionViewController*), "SetView", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{collectionView});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::CollectionViewController::PrepareView
// Il2CppName: PrepareView
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::CollectionViewController::*)()>(&UnityEngine::UIElements::CollectionViewController::PrepareView)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::CollectionViewController*), "PrepareView", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::CollectionViewController::Dispose
// Il2CppName: Dispose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::CollectionViewController::*)()>(&UnityEngine::UIElements::CollectionViewController::Dispose)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::CollectionViewController*), "Dispose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::CollectionViewController::GetItemsCount
// Il2CppName: GetItemsCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::UIElements::CollectionViewController::*)()>(&UnityEngine::UIElements::CollectionViewController::GetItemsCount)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::CollectionViewController*), "GetItemsCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::CollectionViewController::GetItemsMinCount
// Il2CppName: GetItemsMinCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::UIElements::CollectionViewController::*)()>(&UnityEngine::UIElements::CollectionViewController::GetItemsMinCount)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::CollectionViewController*), "GetItemsMinCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::CollectionViewController::GetIndexForId
// Il2CppName: GetIndexForId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::UIElements::CollectionViewController::*)(int)>(&UnityEngine::UIElements::CollectionViewController::GetIndexForId)> {
  static const MethodInfo* get() {
    static auto* id = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::CollectionViewController*), "GetIndexForId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{id});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::CollectionViewController::GetIdForIndex
// Il2CppName: GetIdForIndex
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::UIElements::CollectionViewController::*)(int)>(&UnityEngine::UIElements::CollectionViewController::GetIdForIndex)> {
  static const MethodInfo* get() {
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::CollectionViewController*), "GetIdForIndex", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{index});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::CollectionViewController::GetItemForIndex
// Il2CppName: GetItemForIndex
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (UnityEngine::UIElements::CollectionViewController::*)(int)>(&UnityEngine::UIElements::CollectionViewController::GetItemForIndex)> {
  static const MethodInfo* get() {
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::CollectionViewController*), "GetItemForIndex", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{index});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::CollectionViewController::InvokeMakeItem
// Il2CppName: InvokeMakeItem
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::CollectionViewController::*)(::UnityEngine::UIElements::ReusableCollectionItem*)>(&UnityEngine::UIElements::CollectionViewController::InvokeMakeItem)> {
  static const MethodInfo* get() {
    static auto* reusableItem = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "ReusableCollectionItem")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::CollectionViewController*), "InvokeMakeItem", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{reusableItem});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::CollectionViewController::InvokeBindItem
// Il2CppName: InvokeBindItem
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::CollectionViewController::*)(::UnityEngine::UIElements::ReusableCollectionItem*, int)>(&UnityEngine::UIElements::CollectionViewController::InvokeBindItem)> {
  static const MethodInfo* get() {
    static auto* reusableItem = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "ReusableCollectionItem")->byval_arg;
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::CollectionViewController*), "InvokeBindItem", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{reusableItem, index});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::CollectionViewController::InvokeUnbindItem
// Il2CppName: InvokeUnbindItem
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::CollectionViewController::*)(::UnityEngine::UIElements::ReusableCollectionItem*, int)>(&UnityEngine::UIElements::CollectionViewController::InvokeUnbindItem)> {
  static const MethodInfo* get() {
    static auto* reusableItem = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "ReusableCollectionItem")->byval_arg;
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::CollectionViewController*), "InvokeUnbindItem", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{reusableItem, index});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::CollectionViewController::InvokeDestroyItem
// Il2CppName: InvokeDestroyItem
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::CollectionViewController::*)(::UnityEngine::UIElements::ReusableCollectionItem*)>(&UnityEngine::UIElements::CollectionViewController::InvokeDestroyItem)> {
  static const MethodInfo* get() {
    static auto* reusableItem = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "ReusableCollectionItem")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::CollectionViewController*), "InvokeDestroyItem", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{reusableItem});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::CollectionViewController::MakeItem
// Il2CppName: MakeItem
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::VisualElement* (UnityEngine::UIElements::CollectionViewController::*)()>(&UnityEngine::UIElements::CollectionViewController::MakeItem)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::CollectionViewController*), "MakeItem", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::CollectionViewController::BindItem
// Il2CppName: BindItem
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::CollectionViewController::*)(::UnityEngine::UIElements::VisualElement*, int)>(&UnityEngine::UIElements::CollectionViewController::BindItem)> {
  static const MethodInfo* get() {
    static auto* element = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "VisualElement")->byval_arg;
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::CollectionViewController*), "BindItem", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{element, index});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::CollectionViewController::UnbindItem
// Il2CppName: UnbindItem
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::CollectionViewController::*)(::UnityEngine::UIElements::VisualElement*, int)>(&UnityEngine::UIElements::CollectionViewController::UnbindItem)> {
  static const MethodInfo* get() {
    static auto* element = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "VisualElement")->byval_arg;
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::CollectionViewController*), "UnbindItem", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{element, index});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::CollectionViewController::DestroyItem
// Il2CppName: DestroyItem
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::CollectionViewController::*)(::UnityEngine::UIElements::VisualElement*)>(&UnityEngine::UIElements::CollectionViewController::DestroyItem)> {
  static const MethodInfo* get() {
    static auto* element = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "VisualElement")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::CollectionViewController*), "DestroyItem", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{element});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::CollectionViewController::RaiseItemsSourceChanged
// Il2CppName: RaiseItemsSourceChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::CollectionViewController::*)()>(&UnityEngine::UIElements::CollectionViewController::RaiseItemsSourceChanged)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::CollectionViewController*), "RaiseItemsSourceChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::CollectionViewController::RaiseItemIndexChanged
// Il2CppName: RaiseItemIndexChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::CollectionViewController::*)(int, int)>(&UnityEngine::UIElements::CollectionViewController::RaiseItemIndexChanged)> {
  static const MethodInfo* get() {
    static auto* srcIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* dstIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::CollectionViewController*), "RaiseItemIndexChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{srcIndex, dstIndex});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::CollectionViewController::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
