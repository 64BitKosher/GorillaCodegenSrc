// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Completed includes
// Type namespace: UnityEngine.UIElements.Experimental
namespace UnityEngine::UIElements::Experimental {
  // Forward declaring type: Easing
  class Easing;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::UIElements::Experimental::Easing);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::UIElements::Experimental::Easing*, "UnityEngine.UIElements.Experimental", "Easing");
// Type namespace: UnityEngine.UIElements.Experimental
namespace UnityEngine::UIElements::Experimental {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.UIElements.Experimental.Easing
  // [TokenAttribute] Offset: FFFFFFFF
  class Easing : public ::Il2CppObject {
    public:
    // static public System.Single Linear(System.Single t)
    // Offset: 0x5604CD8
    static float Linear(float t);
    // static public System.Single InSine(System.Single t)
    // Offset: 0x5604CDC
    static float InSine(float t);
    // static public System.Single OutSine(System.Single t)
    // Offset: 0x5604D08
    static float OutSine(float t);
    // static public System.Single InOutSine(System.Single t)
    // Offset: 0x5604D18
    static float InOutSine(float t);
    // static public System.Single InQuad(System.Single t)
    // Offset: 0x5604D4C
    static float InQuad(float t);
    // static public System.Single OutQuad(System.Single t)
    // Offset: 0x5604D54
    static float OutQuad(float t);
    // static public System.Single InOutQuad(System.Single t)
    // Offset: 0x5604D64
    static float InOutQuad(float t);
    // static public System.Single InCubic(System.Single t)
    // Offset: 0x5604DA4
    static float InCubic(float t);
    // static public System.Single OutCubic(System.Single t)
    // Offset: 0x5604DB4
    static float OutCubic(float t);
    // static public System.Single InOutCubic(System.Single t)
    // Offset: 0x5604E10
    static float InOutCubic(float t);
    // static public System.Single InPower(System.Single t, System.Int32 power)
    // Offset: 0x5604DAC
    static float InPower(float t, int power);
    // static public System.Single OutPower(System.Single t, System.Int32 power)
    // Offset: 0x5604DD8
    static float OutPower(float t, int power);
    // static public System.Single InOutPower(System.Single t, System.Int32 power)
    // Offset: 0x5604E58
    static float InOutPower(float t, int power);
    // static public System.Single InBounce(System.Single t)
    // Offset: 0x5604EC0
    static float InBounce(float t);
    // static public System.Single OutBounce(System.Single t)
    // Offset: 0x5604EE4
    static float OutBounce(float t);
    // static public System.Single InOutBounce(System.Single t)
    // Offset: 0x5604F9C
    static float InOutBounce(float t);
    // static public System.Single InElastic(System.Single t)
    // Offset: 0x5604FF0
    static float InElastic(float t);
    // static public System.Single OutElastic(System.Single t)
    // Offset: 0x5605068
    static float OutElastic(float t);
    // static public System.Single InOutElastic(System.Single t)
    // Offset: 0x56050E0
    static float InOutElastic(float t);
    // static public System.Single InBack(System.Single t)
    // Offset: 0x56051E4
    static float InBack(float t);
    // static public System.Single OutBack(System.Single t)
    // Offset: 0x5605208
    static float OutBack(float t);
    // static public System.Single InOutBack(System.Single t)
    // Offset: 0x5605238
    static float InOutBack(float t);
    // static public System.Single InCirc(System.Single t)
    // Offset: 0x56052B4
    static float InCirc(float t);
    // static public System.Single OutCirc(System.Single t)
    // Offset: 0x56052D4
    static float OutCirc(float t);
    // static public System.Single InOutCirc(System.Single t)
    // Offset: 0x56052F0
    static float InOutCirc(float t);
  }; // UnityEngine.UIElements.Experimental.Easing
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::UIElements::Experimental::Easing::Linear
// Il2CppName: Linear
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (*)(float)>(&UnityEngine::UIElements::Experimental::Easing::Linear)> {
  static const MethodInfo* get() {
    static auto* t = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::Experimental::Easing*), "Linear", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{t});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::Experimental::Easing::InSine
// Il2CppName: InSine
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (*)(float)>(&UnityEngine::UIElements::Experimental::Easing::InSine)> {
  static const MethodInfo* get() {
    static auto* t = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::Experimental::Easing*), "InSine", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{t});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::Experimental::Easing::OutSine
// Il2CppName: OutSine
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (*)(float)>(&UnityEngine::UIElements::Experimental::Easing::OutSine)> {
  static const MethodInfo* get() {
    static auto* t = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::Experimental::Easing*), "OutSine", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{t});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::Experimental::Easing::InOutSine
// Il2CppName: InOutSine
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (*)(float)>(&UnityEngine::UIElements::Experimental::Easing::InOutSine)> {
  static const MethodInfo* get() {
    static auto* t = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::Experimental::Easing*), "InOutSine", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{t});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::Experimental::Easing::InQuad
// Il2CppName: InQuad
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (*)(float)>(&UnityEngine::UIElements::Experimental::Easing::InQuad)> {
  static const MethodInfo* get() {
    static auto* t = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::Experimental::Easing*), "InQuad", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{t});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::Experimental::Easing::OutQuad
// Il2CppName: OutQuad
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (*)(float)>(&UnityEngine::UIElements::Experimental::Easing::OutQuad)> {
  static const MethodInfo* get() {
    static auto* t = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::Experimental::Easing*), "OutQuad", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{t});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::Experimental::Easing::InOutQuad
// Il2CppName: InOutQuad
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (*)(float)>(&UnityEngine::UIElements::Experimental::Easing::InOutQuad)> {
  static const MethodInfo* get() {
    static auto* t = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::Experimental::Easing*), "InOutQuad", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{t});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::Experimental::Easing::InCubic
// Il2CppName: InCubic
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (*)(float)>(&UnityEngine::UIElements::Experimental::Easing::InCubic)> {
  static const MethodInfo* get() {
    static auto* t = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::Experimental::Easing*), "InCubic", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{t});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::Experimental::Easing::OutCubic
// Il2CppName: OutCubic
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (*)(float)>(&UnityEngine::UIElements::Experimental::Easing::OutCubic)> {
  static const MethodInfo* get() {
    static auto* t = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::Experimental::Easing*), "OutCubic", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{t});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::Experimental::Easing::InOutCubic
// Il2CppName: InOutCubic
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (*)(float)>(&UnityEngine::UIElements::Experimental::Easing::InOutCubic)> {
  static const MethodInfo* get() {
    static auto* t = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::Experimental::Easing*), "InOutCubic", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{t});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::Experimental::Easing::InPower
// Il2CppName: InPower
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (*)(float, int)>(&UnityEngine::UIElements::Experimental::Easing::InPower)> {
  static const MethodInfo* get() {
    static auto* t = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* power = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::Experimental::Easing*), "InPower", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{t, power});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::Experimental::Easing::OutPower
// Il2CppName: OutPower
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (*)(float, int)>(&UnityEngine::UIElements::Experimental::Easing::OutPower)> {
  static const MethodInfo* get() {
    static auto* t = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* power = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::Experimental::Easing*), "OutPower", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{t, power});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::Experimental::Easing::InOutPower
// Il2CppName: InOutPower
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (*)(float, int)>(&UnityEngine::UIElements::Experimental::Easing::InOutPower)> {
  static const MethodInfo* get() {
    static auto* t = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* power = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::Experimental::Easing*), "InOutPower", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{t, power});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::Experimental::Easing::InBounce
// Il2CppName: InBounce
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (*)(float)>(&UnityEngine::UIElements::Experimental::Easing::InBounce)> {
  static const MethodInfo* get() {
    static auto* t = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::Experimental::Easing*), "InBounce", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{t});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::Experimental::Easing::OutBounce
// Il2CppName: OutBounce
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (*)(float)>(&UnityEngine::UIElements::Experimental::Easing::OutBounce)> {
  static const MethodInfo* get() {
    static auto* t = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::Experimental::Easing*), "OutBounce", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{t});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::Experimental::Easing::InOutBounce
// Il2CppName: InOutBounce
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (*)(float)>(&UnityEngine::UIElements::Experimental::Easing::InOutBounce)> {
  static const MethodInfo* get() {
    static auto* t = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::Experimental::Easing*), "InOutBounce", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{t});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::Experimental::Easing::InElastic
// Il2CppName: InElastic
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (*)(float)>(&UnityEngine::UIElements::Experimental::Easing::InElastic)> {
  static const MethodInfo* get() {
    static auto* t = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::Experimental::Easing*), "InElastic", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{t});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::Experimental::Easing::OutElastic
// Il2CppName: OutElastic
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (*)(float)>(&UnityEngine::UIElements::Experimental::Easing::OutElastic)> {
  static const MethodInfo* get() {
    static auto* t = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::Experimental::Easing*), "OutElastic", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{t});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::Experimental::Easing::InOutElastic
// Il2CppName: InOutElastic
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (*)(float)>(&UnityEngine::UIElements::Experimental::Easing::InOutElastic)> {
  static const MethodInfo* get() {
    static auto* t = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::Experimental::Easing*), "InOutElastic", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{t});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::Experimental::Easing::InBack
// Il2CppName: InBack
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (*)(float)>(&UnityEngine::UIElements::Experimental::Easing::InBack)> {
  static const MethodInfo* get() {
    static auto* t = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::Experimental::Easing*), "InBack", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{t});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::Experimental::Easing::OutBack
// Il2CppName: OutBack
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (*)(float)>(&UnityEngine::UIElements::Experimental::Easing::OutBack)> {
  static const MethodInfo* get() {
    static auto* t = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::Experimental::Easing*), "OutBack", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{t});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::Experimental::Easing::InOutBack
// Il2CppName: InOutBack
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (*)(float)>(&UnityEngine::UIElements::Experimental::Easing::InOutBack)> {
  static const MethodInfo* get() {
    static auto* t = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::Experimental::Easing*), "InOutBack", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{t});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::Experimental::Easing::InCirc
// Il2CppName: InCirc
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (*)(float)>(&UnityEngine::UIElements::Experimental::Easing::InCirc)> {
  static const MethodInfo* get() {
    static auto* t = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::Experimental::Easing*), "InCirc", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{t});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::Experimental::Easing::OutCirc
// Il2CppName: OutCirc
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (*)(float)>(&UnityEngine::UIElements::Experimental::Easing::OutCirc)> {
  static const MethodInfo* get() {
    static auto* t = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::Experimental::Easing*), "OutCirc", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{t});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::Experimental::Easing::InOutCirc
// Il2CppName: InOutCirc
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (*)(float)>(&UnityEngine::UIElements::Experimental::Easing::InOutCirc)> {
  static const MethodInfo* get() {
    static auto* t = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::Experimental::Easing*), "InOutCirc", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{t});
  }
};
