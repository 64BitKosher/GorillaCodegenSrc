// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.UIElements.ReusableTreeViewItem
#include "UnityEngine/UIElements/ReusableTreeViewItem.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::UIElements
namespace UnityEngine::UIElements {
  // Forward declaring type: VisualElement
  class VisualElement;
  // Forward declaring type: Columns
  class Columns;
}
// Completed forward declares
// Type namespace: UnityEngine.UIElements
namespace UnityEngine::UIElements {
  // Forward declaring type: ReusableMultiColumnTreeViewItem
  class ReusableMultiColumnTreeViewItem;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::UIElements::ReusableMultiColumnTreeViewItem);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::UIElements::ReusableMultiColumnTreeViewItem*, "UnityEngine.UIElements", "ReusableMultiColumnTreeViewItem");
// Type namespace: UnityEngine.UIElements
namespace UnityEngine::UIElements {
  // Size: 0x98
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.UIElements.ReusableMultiColumnTreeViewItem
  // [TokenAttribute] Offset: FFFFFFFF
  class ReusableMultiColumnTreeViewItem : public ::UnityEngine::UIElements::ReusableTreeViewItem {
    public:
    // public System.Void Init(UnityEngine.UIElements.VisualElement container, UnityEngine.UIElements.Columns columns)
    // Offset: 0x559FD1C
    void Init(::UnityEngine::UIElements::VisualElement* container, ::UnityEngine::UIElements::Columns* columns);
    // public override UnityEngine.UIElements.VisualElement get_rootElement()
    // Offset: 0x55A1208
    // Implemented from: UnityEngine.UIElements.ReusableTreeViewItem
    // Base method: UnityEngine.UIElements.VisualElement ReusableTreeViewItem::get_rootElement()
    ::UnityEngine::UIElements::VisualElement* get_rootElement();
    // public override System.Void Init(UnityEngine.UIElements.VisualElement item)
    // Offset: 0x55A1210
    // Implemented from: UnityEngine.UIElements.ReusableTreeViewItem
    // Base method: System.Void ReusableTreeViewItem::Init(UnityEngine.UIElements.VisualElement item)
    void Init(::UnityEngine::UIElements::VisualElement* item);
    // public System.Void .ctor()
    // Offset: 0x55A1724
    // Implemented from: UnityEngine.UIElements.ReusableTreeViewItem
    // Base method: System.Void ReusableTreeViewItem::.ctor()
    // Base method: System.Void ReusableCollectionItem::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static ReusableMultiColumnTreeViewItem* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::ReusableMultiColumnTreeViewItem::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<ReusableMultiColumnTreeViewItem*, creationType>()));
    }
  }; // UnityEngine.UIElements.ReusableMultiColumnTreeViewItem
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::UIElements::ReusableMultiColumnTreeViewItem::Init
// Il2CppName: Init
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::ReusableMultiColumnTreeViewItem::*)(::UnityEngine::UIElements::VisualElement*, ::UnityEngine::UIElements::Columns*)>(&UnityEngine::UIElements::ReusableMultiColumnTreeViewItem::Init)> {
  static const MethodInfo* get() {
    static auto* container = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "VisualElement")->byval_arg;
    static auto* columns = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "Columns")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::ReusableMultiColumnTreeViewItem*), "Init", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{container, columns});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::ReusableMultiColumnTreeViewItem::get_rootElement
// Il2CppName: get_rootElement
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::VisualElement* (UnityEngine::UIElements::ReusableMultiColumnTreeViewItem::*)()>(&UnityEngine::UIElements::ReusableMultiColumnTreeViewItem::get_rootElement)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::ReusableMultiColumnTreeViewItem*), "get_rootElement", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::ReusableMultiColumnTreeViewItem::Init
// Il2CppName: Init
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::ReusableMultiColumnTreeViewItem::*)(::UnityEngine::UIElements::VisualElement*)>(&UnityEngine::UIElements::ReusableMultiColumnTreeViewItem::Init)> {
  static const MethodInfo* get() {
    static auto* item = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "VisualElement")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::ReusableMultiColumnTreeViewItem*), "Init", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{item});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::ReusableMultiColumnTreeViewItem::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
