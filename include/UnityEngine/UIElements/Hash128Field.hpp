// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.UIElements.TextInputBaseField`1
#include "UnityEngine/UIElements/TextInputBaseField_1.hpp"
// Including type: UnityEngine.Hash128
#include "UnityEngine/Hash128.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::UIElements
namespace UnityEngine::UIElements {
  // Forward declaring type: EventBase
  class EventBase;
}
// Completed forward declares
// Type namespace: UnityEngine.UIElements
namespace UnityEngine::UIElements {
  // Forward declaring type: Hash128Field
  class Hash128Field;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::UIElements::Hash128Field);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::UIElements::Hash128Field*, "UnityEngine.UIElements", "Hash128Field");
// Type namespace: UnityEngine.UIElements
namespace UnityEngine::UIElements {
  // WARNING Size may be invalid!
  // Autogenerated type: UnityEngine.UIElements.Hash128Field
  // [TokenAttribute] Offset: FFFFFFFF
  // [MovedFromAttribute] Offset: FFFFFFFF
  class Hash128Field : public ::UnityEngine::UIElements::TextInputBaseField_1<::UnityEngine::Hash128> {
    public:
    // Nested type: ::UnityEngine::UIElements::Hash128Field::UxmlFactory
    class UxmlFactory;
    // Nested type: ::UnityEngine::UIElements::Hash128Field::UxmlTraits
    class UxmlTraits;
    // Nested type: ::UnityEngine::UIElements::Hash128Field::Hash128Input
    class Hash128Input;
    public:
    // System.Boolean m_UpdateTextFromValue
    // Size: 0x1
    // Offset: 0x448
    bool m_UpdateTextFromValue;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    public:
    // Creating conversion operator: operator bool
    constexpr operator bool() const noexcept {
      return m_UpdateTextFromValue;
    }
    // Get static field: static public readonly System.String ussClassName
    static ::StringW _get_ussClassName();
    // Set static field: static public readonly System.String ussClassName
    static void _set_ussClassName(::StringW value);
    // Get static field: static public readonly System.String labelUssClassName
    static ::StringW _get_labelUssClassName();
    // Set static field: static public readonly System.String labelUssClassName
    static void _set_labelUssClassName(::StringW value);
    // Get static field: static public readonly System.String inputUssClassName
    static ::StringW _get_inputUssClassName();
    // Set static field: static public readonly System.String inputUssClassName
    static void _set_inputUssClassName(::StringW value);
    // Get instance field reference: System.Boolean m_UpdateTextFromValue
    [[deprecated("Use field access instead!")]] bool& dyn_m_UpdateTextFromValue();
    // public System.Void .ctor(System.String label, System.Int32 maxLength)
    // Offset: 0x55BB4EC
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static Hash128Field* New_ctor(::StringW label, int maxLength) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::Hash128Field::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<Hash128Field*, creationType>(label, maxLength)));
    }
    // public UnityEngine.Hash128 get_value()
    // Offset: 0x55BB7B8
    ::UnityEngine::Hash128 get_value();
    // public System.Void set_value(UnityEngine.Hash128 value)
    // Offset: 0x55BB800
    void set_value(::UnityEngine::Hash128 value);
    // public System.Void SetValueWithoutNotify(UnityEngine.Hash128 newValue)
    // Offset: 0x55BBA4C
    void SetValueWithoutNotify(::UnityEngine::Hash128 newValue);
    // protected System.String ValueToString(UnityEngine.Hash128 value)
    // Offset: 0x55BBB14
    ::StringW ValueToString(::UnityEngine::Hash128 value);
    // protected UnityEngine.Hash128 StringToValue(System.String str)
    // Offset: 0x55BBB38
    ::UnityEngine::Hash128 StringToValue(::StringW str);
    // public System.Void .ctor()
    // Offset: 0x55BB4E0
    // Implemented from: UnityEngine.UIElements.BindableElement
    // Base method: System.Void BindableElement::.ctor()
    // Base method: System.Void VisualElement::.ctor()
    // Base method: System.Void Focusable::.ctor()
    // Base method: System.Void CallbackEventHandler::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static Hash128Field* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::Hash128Field::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<Hash128Field*, creationType>()));
    }
    // override System.Void UpdateValueFromText()
    // Offset: 0x55BB8C8
    // Implemented from: UnityEngine.UIElements.TextInputBaseField`1
    // Base method: System.Void TextInputBaseField_1::UpdateValueFromText()
    void UpdateValueFromText();
    // override System.Void UpdateTextFromValue()
    // Offset: 0x55BB9B4
    // Implemented from: UnityEngine.UIElements.TextInputBaseField`1
    // Base method: System.Void TextInputBaseField_1::UpdateTextFromValue()
    void UpdateTextFromValue();
    // protected override System.Void ExecuteDefaultAction(UnityEngine.UIElements.EventBase evt)
    // Offset: 0x55BBBB0
    // Implemented from: UnityEngine.UIElements.VisualElement
    // Base method: System.Void VisualElement::ExecuteDefaultAction(UnityEngine.UIElements.EventBase evt)
    void ExecuteDefaultAction(::UnityEngine::UIElements::EventBase* evt);
    // static private System.Void .cctor()
    // Offset: 0x55BBDA0
    // Implemented from: UnityEngine.UIElements.TextInputBaseField`1
    // Base method: System.Void TextInputBaseField_1::.cctor()
    // Base method: System.Void BaseField_1::.cctor()
    // Base method: System.Void VisualElement::.cctor()
    static void _cctor();
  }; // UnityEngine.UIElements.Hash128Field
  // WARNING Not writing size check since size may be invalid!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::UIElements::Hash128Field::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::UIElements::Hash128Field::get_value
// Il2CppName: get_value
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Hash128 (UnityEngine::UIElements::Hash128Field::*)()>(&UnityEngine::UIElements::Hash128Field::get_value)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::Hash128Field*), "get_value", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::Hash128Field::set_value
// Il2CppName: set_value
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::Hash128Field::*)(::UnityEngine::Hash128)>(&UnityEngine::UIElements::Hash128Field::set_value)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Hash128")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::Hash128Field*), "set_value", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::Hash128Field::SetValueWithoutNotify
// Il2CppName: SetValueWithoutNotify
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::Hash128Field::*)(::UnityEngine::Hash128)>(&UnityEngine::UIElements::Hash128Field::SetValueWithoutNotify)> {
  static const MethodInfo* get() {
    static auto* newValue = &::il2cpp_utils::GetClassFromName("UnityEngine", "Hash128")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::Hash128Field*), "SetValueWithoutNotify", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{newValue});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::Hash128Field::ValueToString
// Il2CppName: ValueToString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (UnityEngine::UIElements::Hash128Field::*)(::UnityEngine::Hash128)>(&UnityEngine::UIElements::Hash128Field::ValueToString)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Hash128")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::Hash128Field*), "ValueToString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::Hash128Field::StringToValue
// Il2CppName: StringToValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Hash128 (UnityEngine::UIElements::Hash128Field::*)(::StringW)>(&UnityEngine::UIElements::Hash128Field::StringToValue)> {
  static const MethodInfo* get() {
    static auto* str = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::Hash128Field*), "StringToValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{str});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::Hash128Field::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::UIElements::Hash128Field::UpdateValueFromText
// Il2CppName: UpdateValueFromText
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::Hash128Field::*)()>(&UnityEngine::UIElements::Hash128Field::UpdateValueFromText)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::Hash128Field*), "UpdateValueFromText", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::Hash128Field::UpdateTextFromValue
// Il2CppName: UpdateTextFromValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::Hash128Field::*)()>(&UnityEngine::UIElements::Hash128Field::UpdateTextFromValue)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::Hash128Field*), "UpdateTextFromValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::Hash128Field::ExecuteDefaultAction
// Il2CppName: ExecuteDefaultAction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::Hash128Field::*)(::UnityEngine::UIElements::EventBase*)>(&UnityEngine::UIElements::Hash128Field::ExecuteDefaultAction)> {
  static const MethodInfo* get() {
    static auto* evt = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "EventBase")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::Hash128Field*), "ExecuteDefaultAction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{evt});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::Hash128Field::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&UnityEngine::UIElements::Hash128Field::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::Hash128Field*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
