// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.UIElements.BindableElement
#include "UnityEngine/UIElements/BindableElement.hpp"
// Including type: UnityEngine.ISerializationCallbackReceiver
#include "UnityEngine/ISerializationCallbackReceiver.hpp"
// Including type: UnityEngine.UIElements.CanStartDragArgs
#include "UnityEngine/UIElements/CanStartDragArgs.hpp"
// Including type: UnityEngine.UIElements.SetupDragAndDropArgs
#include "UnityEngine/UIElements/SetupDragAndDropArgs.hpp"
// Including type: UnityEngine.UIElements.HandleDragAndDropArgs
#include "UnityEngine/UIElements/HandleDragAndDropArgs.hpp"
// Including type: UnityEngine.UIElements.SelectionType
#include "UnityEngine/UIElements/SelectionType.hpp"
// Including type: UnityEngine.UIElements.AlternatingRowBackground
#include "UnityEngine/UIElements/AlternatingRowBackground.hpp"
// Including type: UnityEngine.UIElements.CollectionVirtualizationMethod
#include "UnityEngine/UIElements/CollectionVirtualizationMethod.hpp"
// Including type: UnityEngine.UIElements.CustomStyleProperty`1
#include "UnityEngine/UIElements/CustomStyleProperty_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::UIElements
namespace UnityEngine::UIElements {
  // Forward declaring type: ScrollView
  class ScrollView;
  // Forward declaring type: CollectionViewController
  class CollectionViewController;
  // Forward declaring type: CollectionVirtualizationController
  class CollectionVirtualizationController;
  // Forward declaring type: KeyboardNavigationManipulator
  class KeyboardNavigationManipulator;
  // Forward declaring type: SerializedVirtualizationData
  class SerializedVirtualizationData;
  // Forward declaring type: ListViewDragger
  class ListViewDragger;
  // Forward declaring type: ReusableCollectionItem
  class ReusableCollectionItem;
  // Skipping declaration: DragAndDropArgs because it is already included!
  // Forward declaring type: ICollectionDragAndDropController
  class ICollectionDragAndDropController;
  // Forward declaring type: AttachToPanelEvent
  class AttachToPanelEvent;
  // Forward declaring type: DetachFromPanelEvent
  class DetachFromPanelEvent;
  // Forward declaring type: KeyboardNavigationOperation
  struct KeyboardNavigationOperation;
  // Forward declaring type: EventBase
  class EventBase;
  // Forward declaring type: PointerMoveEvent
  class PointerMoveEvent;
  // Forward declaring type: PointerDownEvent
  class PointerDownEvent;
  // Forward declaring type: PointerCancelEvent
  class PointerCancelEvent;
  // Forward declaring type: PointerUpEvent
  class PointerUpEvent;
  // Forward declaring type: IPointerEvent
  class IPointerEvent;
  // Forward declaring type: GeometryChangedEvent
  class GeometryChangedEvent;
  // Forward declaring type: CustomStyleResolvedEvent
  class CustomStyleResolvedEvent;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Action`1<T>
  template<typename T>
  class Action_1;
  // Forward declaring type: Action`2<T1, T2>
  template<typename T1, typename T2>
  class Action_2;
  // Forward declaring type: Action
  class Action;
  // Forward declaring type: Func`2<T, TResult>
  template<typename T, typename TResult>
  class Func_2;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: IEnumerable`1<T>
  template<typename T>
  class IEnumerable_1;
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
  // Forward declaring type: IList`1<T>
  template<typename T>
  class IList_1;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Skipping declaration: Vector2 because it is already included!
}
// Forward declaring namespace: System::Collections
namespace System::Collections {
  // Forward declaring type: IList
  class IList;
}
// Completed forward declares
// Type namespace: UnityEngine.UIElements
namespace UnityEngine::UIElements {
  // Forward declaring type: BaseVerticalCollectionView
  class BaseVerticalCollectionView;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::UIElements::BaseVerticalCollectionView);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::UIElements::BaseVerticalCollectionView*, "UnityEngine.UIElements", "BaseVerticalCollectionView");
// Type namespace: UnityEngine.UIElements
namespace UnityEngine::UIElements {
  // WARNING Size may be invalid!
  // Autogenerated type: UnityEngine.UIElements.BaseVerticalCollectionView
  // [TokenAttribute] Offset: FFFFFFFF
  class BaseVerticalCollectionView : public ::UnityEngine::UIElements::BindableElement/*, public ::UnityEngine::ISerializationCallbackReceiver*/ {
    public:
    // Nested type: ::UnityEngine::UIElements::BaseVerticalCollectionView::UxmlTraits
    class UxmlTraits;
    // Nested type: ::UnityEngine::UIElements::BaseVerticalCollectionView::$$c__DisplayClass163_0
    class $$c__DisplayClass163_0;
    // Nested type: ::UnityEngine::UIElements::BaseVerticalCollectionView::$$c__DisplayClass183_0
    struct $$c__DisplayClass183_0;
    public:
    // private System.Action`1<System.Collections.Generic.IEnumerable`1<System.Object>> itemsChosen
    // Size: 0x8
    // Offset: 0x3D0
    ::System::Action_1<::System::Collections::Generic::IEnumerable_1<::Il2CppObject*>*>* itemsChosen;
    // Field size check
    static_assert(sizeof(::System::Action_1<::System::Collections::Generic::IEnumerable_1<::Il2CppObject*>*>*) == 0x8);
    // private System.Action`1<System.Collections.Generic.IEnumerable`1<System.Object>> selectionChanged
    // Size: 0x8
    // Offset: 0x3D8
    ::System::Action_1<::System::Collections::Generic::IEnumerable_1<::Il2CppObject*>*>* selectionChanged;
    // Field size check
    static_assert(sizeof(::System::Action_1<::System::Collections::Generic::IEnumerable_1<::Il2CppObject*>*>*) == 0x8);
    // private System.Action`1<System.Collections.Generic.IEnumerable`1<System.Int32>> selectedIndicesChanged
    // Size: 0x8
    // Offset: 0x3E0
    ::System::Action_1<::System::Collections::Generic::IEnumerable_1<int>*>* selectedIndicesChanged;
    // Field size check
    static_assert(sizeof(::System::Action_1<::System::Collections::Generic::IEnumerable_1<int>*>*) == 0x8);
    // private System.Action`2<System.Int32,System.Int32> itemIndexChanged
    // Size: 0x8
    // Offset: 0x3E8
    ::System::Action_2<int, int>* itemIndexChanged;
    // Field size check
    static_assert(sizeof(::System::Action_2<int, int>*) == 0x8);
    // private System.Action itemsSourceChanged
    // Size: 0x8
    // Offset: 0x3F0
    ::System::Action* itemsSourceChanged;
    // Field size check
    static_assert(sizeof(::System::Action*) == 0x8);
    // private System.Action selectionNotChanged
    // Size: 0x8
    // Offset: 0x3F8
    ::System::Action* selectionNotChanged;
    // Field size check
    static_assert(sizeof(::System::Action*) == 0x8);
    // private System.Func`2<UnityEngine.UIElements.CanStartDragArgs,System.Boolean> canStartDrag
    // Size: 0x8
    // Offset: 0x400
    ::System::Func_2<::UnityEngine::UIElements::CanStartDragArgs, bool>* canStartDrag;
    // Field size check
    static_assert(sizeof(::System::Func_2<::UnityEngine::UIElements::CanStartDragArgs, bool>*) == 0x8);
    // private System.Func`2<UnityEngine.UIElements.SetupDragAndDropArgs,UnityEngine.UIElements.StartDragArgs> setupDragAndDrop
    // Size: 0x8
    // Offset: 0x408
    ::System::Func_2<::UnityEngine::UIElements::SetupDragAndDropArgs, ::UnityEngine::UIElements::StartDragArgs>* setupDragAndDrop;
    // Field size check
    static_assert(sizeof(::System::Func_2<::UnityEngine::UIElements::SetupDragAndDropArgs, ::UnityEngine::UIElements::StartDragArgs>*) == 0x8);
    // private System.Func`2<UnityEngine.UIElements.HandleDragAndDropArgs,UnityEngine.UIElements.DragVisualMode> dragAndDropUpdate
    // Size: 0x8
    // Offset: 0x410
    ::System::Func_2<::UnityEngine::UIElements::HandleDragAndDropArgs, ::UnityEngine::UIElements::DragVisualMode>* dragAndDropUpdate;
    // Field size check
    static_assert(sizeof(::System::Func_2<::UnityEngine::UIElements::HandleDragAndDropArgs, ::UnityEngine::UIElements::DragVisualMode>*) == 0x8);
    // private System.Func`2<UnityEngine.UIElements.HandleDragAndDropArgs,UnityEngine.UIElements.DragVisualMode> handleDrop
    // Size: 0x8
    // Offset: 0x418
    ::System::Func_2<::UnityEngine::UIElements::HandleDragAndDropArgs, ::UnityEngine::UIElements::DragVisualMode>* handleDrop;
    // Field size check
    static_assert(sizeof(::System::Func_2<::UnityEngine::UIElements::HandleDragAndDropArgs, ::UnityEngine::UIElements::DragVisualMode>*) == 0x8);
    // private UnityEngine.UIElements.SelectionType m_SelectionType
    // Size: 0x4
    // Offset: 0x420
    ::UnityEngine::UIElements::SelectionType m_SelectionType;
    // Field size check
    static_assert(sizeof(::UnityEngine::UIElements::SelectionType) == 0x4);
    // private System.Boolean m_HorizontalScrollingEnabled
    // Size: 0x1
    // Offset: 0x424
    bool m_HorizontalScrollingEnabled;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private UnityEngine.UIElements.AlternatingRowBackground m_ShowAlternatingRowBackgrounds
    // Size: 0x4
    // Offset: 0x428
    ::UnityEngine::UIElements::AlternatingRowBackground m_ShowAlternatingRowBackgrounds;
    // Field size check
    static_assert(sizeof(::UnityEngine::UIElements::AlternatingRowBackground) == 0x4);
    // System.Single m_FixedItemHeight
    // Size: 0x4
    // Offset: 0x42C
    float m_FixedItemHeight;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // System.Boolean m_ItemHeightIsInline
    // Size: 0x1
    // Offset: 0x430
    bool m_ItemHeightIsInline;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private UnityEngine.UIElements.CollectionVirtualizationMethod m_VirtualizationMethod
    // Size: 0x4
    // Offset: 0x434
    ::UnityEngine::UIElements::CollectionVirtualizationMethod m_VirtualizationMethod;
    // Field size check
    static_assert(sizeof(::UnityEngine::UIElements::CollectionVirtualizationMethod) == 0x4);
    // private readonly UnityEngine.UIElements.ScrollView m_ScrollView
    // Size: 0x8
    // Offset: 0x438
    ::UnityEngine::UIElements::ScrollView* m_ScrollView;
    // Field size check
    static_assert(sizeof(::UnityEngine::UIElements::ScrollView*) == 0x8);
    // private UnityEngine.UIElements.CollectionViewController m_ViewController
    // Size: 0x8
    // Offset: 0x440
    ::UnityEngine::UIElements::CollectionViewController* m_ViewController;
    // Field size check
    static_assert(sizeof(::UnityEngine::UIElements::CollectionViewController*) == 0x8);
    // private UnityEngine.UIElements.CollectionVirtualizationController m_VirtualizationController
    // Size: 0x8
    // Offset: 0x448
    ::UnityEngine::UIElements::CollectionVirtualizationController* m_VirtualizationController;
    // Field size check
    static_assert(sizeof(::UnityEngine::UIElements::CollectionVirtualizationController*) == 0x8);
    // private UnityEngine.UIElements.KeyboardNavigationManipulator m_NavigationManipulator
    // Size: 0x8
    // Offset: 0x450
    ::UnityEngine::UIElements::KeyboardNavigationManipulator* m_NavigationManipulator;
    // Field size check
    static_assert(sizeof(::UnityEngine::UIElements::KeyboardNavigationManipulator*) == 0x8);
    // UnityEngine.UIElements.SerializedVirtualizationData serializedVirtualizationData
    // Size: 0x8
    // Offset: 0x458
    ::UnityEngine::UIElements::SerializedVirtualizationData* serializedVirtualizationData;
    // Field size check
    static_assert(sizeof(::UnityEngine::UIElements::SerializedVirtualizationData*) == 0x8);
    // private readonly System.Collections.Generic.List`1<System.Int32> m_SelectedIds
    // Size: 0x8
    // Offset: 0x460
    ::System::Collections::Generic::List_1<int>* m_SelectedIds;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<int>*) == 0x8);
    // private readonly System.Collections.Generic.List`1<System.Int32> m_SelectedIndices
    // Size: 0x8
    // Offset: 0x468
    ::System::Collections::Generic::List_1<int>* m_SelectedIndices;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<int>*) == 0x8);
    // private readonly System.Collections.Generic.List`1<System.Object> m_SelectedItems
    // Size: 0x8
    // Offset: 0x470
    ::System::Collections::Generic::List_1<::Il2CppObject*>* m_SelectedItems;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::Il2CppObject*>*) == 0x8);
    // private System.Single m_LastHeight
    // Size: 0x4
    // Offset: 0x478
    float m_LastHeight;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Boolean m_IsRangeSelectionDirectionUp
    // Size: 0x1
    // Offset: 0x47C
    bool m_IsRangeSelectionDirectionUp;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private UnityEngine.UIElements.ListViewDragger m_Dragger
    // Size: 0x8
    // Offset: 0x480
    ::UnityEngine::UIElements::ListViewDragger* m_Dragger;
    // Field size check
    static_assert(sizeof(::UnityEngine::UIElements::ListViewDragger*) == 0x8);
    // private System.Action`2<System.Int32,System.Int32> m_ItemIndexChangedCallback
    // Size: 0x8
    // Offset: 0x488
    ::System::Action_2<int, int>* m_ItemIndexChangedCallback;
    // Field size check
    static_assert(sizeof(::System::Action_2<int, int>*) == 0x8);
    // private System.Action m_ItemsSourceChangedCallback
    // Size: 0x8
    // Offset: 0x490
    ::System::Action* m_ItemsSourceChangedCallback;
    // Field size check
    static_assert(sizeof(::System::Action*) == 0x8);
    // private UnityEngine.Vector3 m_TouchDownPosition
    // Size: 0xC
    // Offset: 0x498
    ::UnityEngine::Vector3 m_TouchDownPosition;
    // Field size check
    static_assert(sizeof(::UnityEngine::Vector3) == 0xC);
    public:
    // Creating interface conversion operator: operator ::UnityEngine::ISerializationCallbackReceiver
    operator ::UnityEngine::ISerializationCallbackReceiver() noexcept {
      return *reinterpret_cast<::UnityEngine::ISerializationCallbackReceiver*>(this);
    }
    // Get static field: static private readonly Unity.Profiling.ProfilerMarker k_RefreshMarker
    static ::Unity::Profiling::ProfilerMarker _get_k_RefreshMarker();
    // Set static field: static private readonly Unity.Profiling.ProfilerMarker k_RefreshMarker
    static void _set_k_RefreshMarker(::Unity::Profiling::ProfilerMarker value);
    // Get static field: static private readonly Unity.Profiling.ProfilerMarker k_RebuildMarker
    static ::Unity::Profiling::ProfilerMarker _get_k_RebuildMarker();
    // Set static field: static private readonly Unity.Profiling.ProfilerMarker k_RebuildMarker
    static void _set_k_RebuildMarker(::Unity::Profiling::ProfilerMarker value);
    // Get static field: static private readonly System.Collections.Generic.List`1<UnityEngine.UIElements.ReusableCollectionItem> k_EmptyItems
    static ::System::Collections::Generic::List_1<::UnityEngine::UIElements::ReusableCollectionItem*>* _get_k_EmptyItems();
    // Set static field: static private readonly System.Collections.Generic.List`1<UnityEngine.UIElements.ReusableCollectionItem> k_EmptyItems
    static void _set_k_EmptyItems(::System::Collections::Generic::List_1<::UnityEngine::UIElements::ReusableCollectionItem*>* value);
    // Get static field: static readonly System.Int32 s_DefaultItemHeight
    static int _get_s_DefaultItemHeight();
    // Set static field: static readonly System.Int32 s_DefaultItemHeight
    static void _set_s_DefaultItemHeight(int value);
    // Get static field: static UnityEngine.UIElements.CustomStyleProperty`1<System.Int32> s_ItemHeightProperty
    static ::UnityEngine::UIElements::CustomStyleProperty_1<int> _get_s_ItemHeightProperty();
    // Set static field: static UnityEngine.UIElements.CustomStyleProperty`1<System.Int32> s_ItemHeightProperty
    static void _set_s_ItemHeightProperty(::UnityEngine::UIElements::CustomStyleProperty_1<int> value);
    // Get static field: static public readonly System.String ussClassName
    static ::StringW _get_ussClassName();
    // Set static field: static public readonly System.String ussClassName
    static void _set_ussClassName(::StringW value);
    // Get static field: static public readonly System.String borderUssClassName
    static ::StringW _get_borderUssClassName();
    // Set static field: static public readonly System.String borderUssClassName
    static void _set_borderUssClassName(::StringW value);
    // Get static field: static public readonly System.String itemUssClassName
    static ::StringW _get_itemUssClassName();
    // Set static field: static public readonly System.String itemUssClassName
    static void _set_itemUssClassName(::StringW value);
    // Get static field: static public readonly System.String dragHoverBarUssClassName
    static ::StringW _get_dragHoverBarUssClassName();
    // Set static field: static public readonly System.String dragHoverBarUssClassName
    static void _set_dragHoverBarUssClassName(::StringW value);
    // Get static field: static public readonly System.String dragHoverMarkerUssClassName
    static ::StringW _get_dragHoverMarkerUssClassName();
    // Set static field: static public readonly System.String dragHoverMarkerUssClassName
    static void _set_dragHoverMarkerUssClassName(::StringW value);
    // Get static field: static public readonly System.String itemDragHoverUssClassName
    static ::StringW _get_itemDragHoverUssClassName();
    // Set static field: static public readonly System.String itemDragHoverUssClassName
    static void _set_itemDragHoverUssClassName(::StringW value);
    // Get static field: static public readonly System.String itemSelectedVariantUssClassName
    static ::StringW _get_itemSelectedVariantUssClassName();
    // Set static field: static public readonly System.String itemSelectedVariantUssClassName
    static void _set_itemSelectedVariantUssClassName(::StringW value);
    // Get static field: static public readonly System.String itemAlternativeBackgroundUssClassName
    static ::StringW _get_itemAlternativeBackgroundUssClassName();
    // Set static field: static public readonly System.String itemAlternativeBackgroundUssClassName
    static void _set_itemAlternativeBackgroundUssClassName(::StringW value);
    // Get static field: static public readonly System.String listScrollViewUssClassName
    static ::StringW _get_listScrollViewUssClassName();
    // Set static field: static public readonly System.String listScrollViewUssClassName
    static void _set_listScrollViewUssClassName(::StringW value);
    // Get static field: static readonly System.String backgroundFillUssClassName
    static ::StringW _get_backgroundFillUssClassName();
    // Set static field: static readonly System.String backgroundFillUssClassName
    static void _set_backgroundFillUssClassName(::StringW value);
    // Get instance field reference: private System.Action`1<System.Collections.Generic.IEnumerable`1<System.Object>> itemsChosen
    [[deprecated("Use field access instead!")]] ::System::Action_1<::System::Collections::Generic::IEnumerable_1<::Il2CppObject*>*>*& dyn_itemsChosen();
    // Get instance field reference: private System.Action`1<System.Collections.Generic.IEnumerable`1<System.Object>> selectionChanged
    [[deprecated("Use field access instead!")]] ::System::Action_1<::System::Collections::Generic::IEnumerable_1<::Il2CppObject*>*>*& dyn_selectionChanged();
    // Get instance field reference: private System.Action`1<System.Collections.Generic.IEnumerable`1<System.Int32>> selectedIndicesChanged
    [[deprecated("Use field access instead!")]] ::System::Action_1<::System::Collections::Generic::IEnumerable_1<int>*>*& dyn_selectedIndicesChanged();
    // Get instance field reference: private System.Action`2<System.Int32,System.Int32> itemIndexChanged
    [[deprecated("Use field access instead!")]] ::System::Action_2<int, int>*& dyn_itemIndexChanged();
    // Get instance field reference: private System.Action itemsSourceChanged
    [[deprecated("Use field access instead!")]] ::System::Action*& dyn_itemsSourceChanged();
    // Get instance field reference: private System.Action selectionNotChanged
    [[deprecated("Use field access instead!")]] ::System::Action*& dyn_selectionNotChanged();
    // Get instance field reference: private System.Func`2<UnityEngine.UIElements.CanStartDragArgs,System.Boolean> canStartDrag
    [[deprecated("Use field access instead!")]] ::System::Func_2<::UnityEngine::UIElements::CanStartDragArgs, bool>*& dyn_canStartDrag();
    // Get instance field reference: private System.Func`2<UnityEngine.UIElements.SetupDragAndDropArgs,UnityEngine.UIElements.StartDragArgs> setupDragAndDrop
    [[deprecated("Use field access instead!")]] ::System::Func_2<::UnityEngine::UIElements::SetupDragAndDropArgs, ::UnityEngine::UIElements::StartDragArgs>*& dyn_setupDragAndDrop();
    // Get instance field reference: private System.Func`2<UnityEngine.UIElements.HandleDragAndDropArgs,UnityEngine.UIElements.DragVisualMode> dragAndDropUpdate
    [[deprecated("Use field access instead!")]] ::System::Func_2<::UnityEngine::UIElements::HandleDragAndDropArgs, ::UnityEngine::UIElements::DragVisualMode>*& dyn_dragAndDropUpdate();
    // Get instance field reference: private System.Func`2<UnityEngine.UIElements.HandleDragAndDropArgs,UnityEngine.UIElements.DragVisualMode> handleDrop
    [[deprecated("Use field access instead!")]] ::System::Func_2<::UnityEngine::UIElements::HandleDragAndDropArgs, ::UnityEngine::UIElements::DragVisualMode>*& dyn_handleDrop();
    // Get instance field reference: private UnityEngine.UIElements.SelectionType m_SelectionType
    [[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::SelectionType& dyn_m_SelectionType();
    // Get instance field reference: private System.Boolean m_HorizontalScrollingEnabled
    [[deprecated("Use field access instead!")]] bool& dyn_m_HorizontalScrollingEnabled();
    // Get instance field reference: private UnityEngine.UIElements.AlternatingRowBackground m_ShowAlternatingRowBackgrounds
    [[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::AlternatingRowBackground& dyn_m_ShowAlternatingRowBackgrounds();
    // Get instance field reference: System.Single m_FixedItemHeight
    [[deprecated("Use field access instead!")]] float& dyn_m_FixedItemHeight();
    // Get instance field reference: System.Boolean m_ItemHeightIsInline
    [[deprecated("Use field access instead!")]] bool& dyn_m_ItemHeightIsInline();
    // Get instance field reference: private UnityEngine.UIElements.CollectionVirtualizationMethod m_VirtualizationMethod
    [[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::CollectionVirtualizationMethod& dyn_m_VirtualizationMethod();
    // Get instance field reference: private readonly UnityEngine.UIElements.ScrollView m_ScrollView
    [[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::ScrollView*& dyn_m_ScrollView();
    // Get instance field reference: private UnityEngine.UIElements.CollectionViewController m_ViewController
    [[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::CollectionViewController*& dyn_m_ViewController();
    // Get instance field reference: private UnityEngine.UIElements.CollectionVirtualizationController m_VirtualizationController
    [[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::CollectionVirtualizationController*& dyn_m_VirtualizationController();
    // Get instance field reference: private UnityEngine.UIElements.KeyboardNavigationManipulator m_NavigationManipulator
    [[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::KeyboardNavigationManipulator*& dyn_m_NavigationManipulator();
    // Get instance field reference: UnityEngine.UIElements.SerializedVirtualizationData serializedVirtualizationData
    [[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::SerializedVirtualizationData*& dyn_serializedVirtualizationData();
    // Get instance field reference: private readonly System.Collections.Generic.List`1<System.Int32> m_SelectedIds
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<int>*& dyn_m_SelectedIds();
    // Get instance field reference: private readonly System.Collections.Generic.List`1<System.Int32> m_SelectedIndices
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<int>*& dyn_m_SelectedIndices();
    // Get instance field reference: private readonly System.Collections.Generic.List`1<System.Object> m_SelectedItems
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Il2CppObject*>*& dyn_m_SelectedItems();
    // Get instance field reference: private System.Single m_LastHeight
    [[deprecated("Use field access instead!")]] float& dyn_m_LastHeight();
    // Get instance field reference: private System.Boolean m_IsRangeSelectionDirectionUp
    [[deprecated("Use field access instead!")]] bool& dyn_m_IsRangeSelectionDirectionUp();
    // Get instance field reference: private UnityEngine.UIElements.ListViewDragger m_Dragger
    [[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::ListViewDragger*& dyn_m_Dragger();
    // Get instance field reference: private System.Action`2<System.Int32,System.Int32> m_ItemIndexChangedCallback
    [[deprecated("Use field access instead!")]] ::System::Action_2<int, int>*& dyn_m_ItemIndexChangedCallback();
    // Get instance field reference: private System.Action m_ItemsSourceChangedCallback
    [[deprecated("Use field access instead!")]] ::System::Action*& dyn_m_ItemsSourceChangedCallback();
    // Get instance field reference: private UnityEngine.Vector3 m_TouchDownPosition
    [[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& dyn_m_TouchDownPosition();
    // System.Boolean HasCanStartDrag()
    // Offset: 0x55A6D44
    bool HasCanStartDrag();
    // System.Boolean RaiseCanStartDrag(UnityEngine.UIElements.ReusableCollectionItem item, System.Collections.Generic.IEnumerable`1<System.Int32> ids)
    // Offset: 0x55A6D54
    bool RaiseCanStartDrag(::UnityEngine::UIElements::ReusableCollectionItem* item, ::System::Collections::Generic::IEnumerable_1<int>* ids);
    // UnityEngine.UIElements.StartDragArgs RaiseSetupDragAndDrop(UnityEngine.UIElements.ReusableCollectionItem item, System.Collections.Generic.IEnumerable`1<System.Int32> ids, UnityEngine.UIElements.StartDragArgs args)
    // Offset: 0x55A6DF0
    ::UnityEngine::UIElements::StartDragArgs RaiseSetupDragAndDrop(::UnityEngine::UIElements::ReusableCollectionItem* item, ::System::Collections::Generic::IEnumerable_1<int>* ids, ::UnityEngine::UIElements::StartDragArgs args);
    // UnityEngine.UIElements.DragVisualMode RaiseHandleDragAndDrop(UnityEngine.Vector2 pointerPosition, UnityEngine.UIElements.DragAndDropArgs dragAndDropArgs)
    // Offset: 0x55A6EC0
    ::UnityEngine::UIElements::DragVisualMode RaiseHandleDragAndDrop(::UnityEngine::Vector2 pointerPosition, ::UnityEngine::UIElements::DragAndDropArgs dragAndDropArgs);
    // UnityEngine.UIElements.DragVisualMode RaiseDrop(UnityEngine.Vector2 pointerPosition, UnityEngine.UIElements.DragAndDropArgs dragAndDropArgs)
    // Offset: 0x55A6F34
    ::UnityEngine::UIElements::DragVisualMode RaiseDrop(::UnityEngine::Vector2 pointerPosition, ::UnityEngine::UIElements::DragAndDropArgs dragAndDropArgs);
    // public System.Collections.IList get_itemsSource()
    // Offset: 0x55A6FA8
    ::System::Collections::IList* get_itemsSource();
    // public System.Void set_itemsSource(System.Collections.IList value)
    // Offset: 0x55A6FC0
    void set_itemsSource(::System::Collections::IList* value);
    // System.Boolean get_sourceIncludesArraySize()
    // Offset: 0x55A7070
    bool get_sourceIncludesArraySize();
    // public UnityEngine.UIElements.SelectionType get_selectionType()
    // Offset: 0x55A7080
    ::UnityEngine::UIElements::SelectionType get_selectionType();
    // public System.Void set_selectionType(UnityEngine.UIElements.SelectionType value)
    // Offset: 0x55A7088
    void set_selectionType(::UnityEngine::UIElements::SelectionType value);
    // public System.Int32 get_selectedIndex()
    // Offset: 0x55A7230
    int get_selectedIndex();
    // public System.Void set_selectedIndex(System.Int32 value)
    // Offset: 0x55A72A4
    void set_selectedIndex(int value);
    // public System.Collections.Generic.IEnumerable`1<System.Int32> get_selectedIndices()
    // Offset: 0x55A72A8
    ::System::Collections::Generic::IEnumerable_1<int>* get_selectedIndices();
    // System.Collections.Generic.IEnumerable`1<System.Int32> get_selectedIds()
    // Offset: 0x55A72B0
    ::System::Collections::Generic::IEnumerable_1<int>* get_selectedIds();
    // System.Collections.Generic.IEnumerable`1<UnityEngine.UIElements.ReusableCollectionItem> get_activeItems()
    // Offset: 0x55A72B8
    ::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::ReusableCollectionItem*>* get_activeItems();
    // UnityEngine.UIElements.ScrollView get_scrollView()
    // Offset: 0x55A7330
    ::UnityEngine::UIElements::ScrollView* get_scrollView();
    // UnityEngine.UIElements.ListViewDragger get_dragger()
    // Offset: 0x55A7338
    ::UnityEngine::UIElements::ListViewDragger* get_dragger();
    // UnityEngine.UIElements.CollectionVirtualizationController get_virtualizationController()
    // Offset: 0x55A7340
    ::UnityEngine::UIElements::CollectionVirtualizationController* get_virtualizationController();
    // public UnityEngine.UIElements.CollectionViewController get_viewController()
    // Offset: 0x55A73A0
    ::UnityEngine::UIElements::CollectionViewController* get_viewController();
    // System.Single ResolveItemHeight(System.Single height)
    // Offset: 0x55A73A8
    float ResolveItemHeight(float height);
    // public System.Void set_showBorder(System.Boolean value)
    // Offset: 0x55A7460
    void set_showBorder(bool value);
    // public System.Boolean get_reorderable()
    // Offset: 0x55A74E0
    bool get_reorderable();
    // public System.Void set_reorderable(System.Boolean value)
    // Offset: 0x55A75D0
    void set_reorderable(bool value);
    // public System.Void set_horizontalScrollingEnabled(System.Boolean value)
    // Offset: 0x55A787C
    void set_horizontalScrollingEnabled(bool value);
    // public UnityEngine.UIElements.AlternatingRowBackground get_showAlternatingRowBackgrounds()
    // Offset: 0x55A78EC
    ::UnityEngine::UIElements::AlternatingRowBackground get_showAlternatingRowBackgrounds();
    // public System.Void set_showAlternatingRowBackgrounds(UnityEngine.UIElements.AlternatingRowBackground value)
    // Offset: 0x55A78F4
    void set_showAlternatingRowBackgrounds(::UnityEngine::UIElements::AlternatingRowBackground value);
    // public UnityEngine.UIElements.CollectionVirtualizationMethod get_virtualizationMethod()
    // Offset: 0x55A7A7C
    ::UnityEngine::UIElements::CollectionVirtualizationMethod get_virtualizationMethod();
    // public System.Void set_virtualizationMethod(UnityEngine.UIElements.CollectionVirtualizationMethod value)
    // Offset: 0x55A7A84
    void set_virtualizationMethod(::UnityEngine::UIElements::CollectionVirtualizationMethod value);
    // public System.Single get_fixedItemHeight()
    // Offset: 0x55A7AC0
    float get_fixedItemHeight();
    // public System.Void set_fixedItemHeight(System.Single value)
    // Offset: 0x55A7AC8
    void set_fixedItemHeight(float value);
    // System.Single get_lastHeight()
    // Offset: 0x55A7BC0
    float get_lastHeight();
    // System.Void CreateVirtualizationController()
    // Offset: 0x55A7BC8
    void CreateVirtualizationController();
    // UnityEngine.UIElements.CollectionVirtualizationController GetOrCreateVirtualizationController()
    // Offset: 0x55A7370
    ::UnityEngine::UIElements::CollectionVirtualizationController* GetOrCreateVirtualizationController();
    // System.Void CreateVirtualizationController()
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class T>
    void CreateVirtualizationController() {
      static_assert(std::is_convertible_v<T, ::UnityEngine::UIElements::ReusableCollectionItem*>);
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::BaseVerticalCollectionView::CreateVirtualizationController");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateVirtualizationController", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}, ::std::vector<const Il2CppType*>{})));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___generic__method);
    }
    // UnityEngine.UIElements.CollectionViewController GetOrCreateViewController()
    // Offset: 0x55A7028
    ::UnityEngine::UIElements::CollectionViewController* GetOrCreateViewController();
    // protected UnityEngine.UIElements.CollectionViewController CreateViewController()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::UnityEngine::UIElements::CollectionViewController* CreateViewController();
    // public System.Void SetViewController(UnityEngine.UIElements.CollectionViewController controller)
    // Offset: 0x55A7C10
    void SetViewController(::UnityEngine::UIElements::CollectionViewController* controller);
    // UnityEngine.UIElements.ListViewDragger CreateDragger()
    // Offset: 0x55A7CD4
    ::UnityEngine::UIElements::ListViewDragger* CreateDragger();
    // System.Void InitializeDragAndDropController(System.Boolean enableReordering)
    // Offset: 0x55A7D30
    void InitializeDragAndDropController(bool enableReordering);
    // UnityEngine.UIElements.ICollectionDragAndDropController CreateDragAndDropController()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::UnityEngine::UIElements::ICollectionDragAndDropController* CreateDragAndDropController();
    // public System.Void .ctor(System.Collections.IList itemsSource, System.Single itemHeight)
    // Offset: 0x55A8440
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static BaseVerticalCollectionView* New_ctor(::System::Collections::IList* itemsSource, float itemHeight) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::BaseVerticalCollectionView::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<BaseVerticalCollectionView*, creationType>(itemsSource, itemHeight)));
    }
    // public UnityEngine.UIElements.VisualElement GetRootElementForId(System.Int32 id)
    // Offset: 0x55A84F4
    ::UnityEngine::UIElements::VisualElement* GetRootElementForId(int id);
    // System.Boolean HasValidDataAndBindings()
    // Offset: 0x55A8608
    bool HasValidDataAndBindings();
    // private System.Void OnItemIndexChanged(System.Int32 srcIndex, System.Int32 dstIndex)
    // Offset: 0x55A8630
    void OnItemIndexChanged(int srcIndex, int dstIndex);
    // private System.Void OnItemsSourceChanged()
    // Offset: 0x55A865C
    void OnItemsSourceChanged();
    // public System.Void RefreshItems()
    // Offset: 0x55A790C
    void RefreshItems();
    // public System.Void Rebuild()
    // Offset: 0x55A770C
    void Rebuild();
    // private System.Void RefreshSelection()
    // Offset: 0x55A8678
    void RefreshSelection();
    // System.Void PostRefresh()
    // Offset: 0x55A8934
    void PostRefresh();
    // public System.Void ScrollToItem(System.Int32 index)
    // Offset: 0x55A8A48
    void ScrollToItem(int index);
    // public System.Void ScrollToItemById(System.Int32 id)
    // Offset: 0x55A8ABC
    void ScrollToItemById(int id);
    // private System.Void OnScroll(UnityEngine.Vector2 offset)
    // Offset: 0x55A8B50
    void OnScroll(::UnityEngine::Vector2 offset);
    // private System.Void Resize(UnityEngine.Vector2 size)
    // Offset: 0x55A89B8
    void Resize(::UnityEngine::Vector2 size);
    // private System.Void OnAttachToPanel(UnityEngine.UIElements.AttachToPanelEvent evt)
    // Offset: 0x55A8BC8
    void OnAttachToPanel(::UnityEngine::UIElements::AttachToPanelEvent* evt);
    // private System.Void OnDetachFromPanel(UnityEngine.UIElements.DetachFromPanelEvent evt)
    // Offset: 0x55A8F18
    void OnDetachFromPanel(::UnityEngine::UIElements::DetachFromPanelEvent* evt);
    // private System.Boolean Apply(UnityEngine.UIElements.KeyboardNavigationOperation op, System.Boolean shiftKey, System.Boolean altKey)
    // Offset: 0x55A91D0
    bool Apply(::UnityEngine::UIElements::KeyboardNavigationOperation op, bool shiftKey, bool altKey);
    // private System.Void Apply(UnityEngine.UIElements.KeyboardNavigationOperation op, UnityEngine.UIElements.EventBase sourceEvent)
    // Offset: 0x55A9DB0
    void Apply(::UnityEngine::UIElements::KeyboardNavigationOperation op, ::UnityEngine::UIElements::EventBase* sourceEvent);
    // System.Boolean HandleItemNavigation(System.Boolean moveIn, System.Boolean altKey)
    // Offset: 0x55AA02C
    bool HandleItemNavigation(bool moveIn, bool altKey);
    // private System.Void OnPointerMove(UnityEngine.UIElements.PointerMoveEvent evt)
    // Offset: 0x55AA034
    void OnPointerMove(::UnityEngine::UIElements::PointerMoveEvent* evt);
    // private System.Void OnPointerDown(UnityEngine.UIElements.PointerDownEvent evt)
    // Offset: 0x55AAA78
    void OnPointerDown(::UnityEngine::UIElements::PointerDownEvent* evt);
    // private System.Void OnPointerCancel(UnityEngine.UIElements.PointerCancelEvent evt)
    // Offset: 0x55AAB34
    void OnPointerCancel(::UnityEngine::UIElements::PointerCancelEvent* evt);
    // private System.Void OnPointerUp(UnityEngine.UIElements.PointerUpEvent evt)
    // Offset: 0x55AABA8
    void OnPointerUp(::UnityEngine::UIElements::PointerUpEvent* evt);
    // private System.Void ProcessPointerDown(UnityEngine.UIElements.IPointerEvent evt)
    // Offset: 0x55AA698
    void ProcessPointerDown(::UnityEngine::UIElements::IPointerEvent* evt);
    // private System.Void ProcessPointerUp(UnityEngine.UIElements.IPointerEvent evt)
    // Offset: 0x55AA0BC
    void ProcessPointerUp(::UnityEngine::UIElements::IPointerEvent* evt);
    // private System.Void DoSelect(UnityEngine.Vector2 localPosition, System.Int32 clickCount, System.Boolean actionKey, System.Boolean shiftKey)
    // Offset: 0x55AAC64
    void DoSelect(::UnityEngine::Vector2 localPosition, int clickCount, bool actionKey, bool shiftKey);
    // System.Void DoRangeSelection(System.Int32 rangeSelectionFinalIndex)
    // Offset: 0x55AB060
    void DoRangeSelection(int rangeSelectionFinalIndex);
    // private System.Void ProcessSingleClick(System.Int32 clickedIndex)
    // Offset: 0x55AAF88
    void ProcessSingleClick(int clickedIndex);
    // System.Void SelectAll()
    // Offset: 0x55A9690
    void SelectAll();
    // public System.Void AddToSelection(System.Int32 index)
    // Offset: 0x55AAFE8
    void AddToSelection(int index);
    // System.Void AddToSelection(System.Collections.Generic.IList`1<System.Int32> indexes)
    // Offset: 0x55AB55C
    void AddToSelection(::System::Collections::Generic::IList_1<int>* indexes);
    // private System.Void AddToSelectionWithoutValidation(System.Int32 index)
    // Offset: 0x55AB938
    void AddToSelectionWithoutValidation(int index);
    // public System.Void RemoveFromSelection(System.Int32 index)
    // Offset: 0x55AAF8C
    void RemoveFromSelection(int index);
    // private System.Void RemoveFromSelectionWithoutValidation(System.Int32 index)
    // Offset: 0x55ABE24
    void RemoveFromSelectionWithoutValidation(int index);
    // public System.Void SetSelection(System.Int32 index)
    // Offset: 0x55A71A8
    void SetSelection(int index);
    // public System.Void SetSelection(System.Collections.Generic.IEnumerable`1<System.Int32> indices)
    // Offset: 0x55AC22C
    void SetSelection(::System::Collections::Generic::IEnumerable_1<int>* indices);
    // public System.Void SetSelectionWithoutNotify(System.Collections.Generic.IEnumerable`1<System.Int32> indices)
    // Offset: 0x55AC578
    void SetSelectionWithoutNotify(::System::Collections::Generic::IEnumerable_1<int>* indices);
    // System.Void SetSelectionInternal(System.Collections.Generic.IEnumerable`1<System.Int32> indices, System.Boolean sendNotification)
    // Offset: 0x55AC234
    void SetSelectionInternal(::System::Collections::Generic::IEnumerable_1<int>* indices, bool sendNotification);
    // private System.Boolean MatchesExistingSelection(System.Collections.Generic.IEnumerable`1<System.Int32> indices)
    // Offset: 0x55AC580
    bool MatchesExistingSelection(::System::Collections::Generic::IEnumerable_1<int>* indices);
    // private System.Void NotifyOfSelectionChange()
    // Offset: 0x55AB8D8
    void NotifyOfSelectionChange();
    // public System.Void ClearSelection()
    // Offset: 0x55A712C
    void ClearSelection();
    // private System.Void ClearSelectionWithoutValidation()
    // Offset: 0x55AB200
    void ClearSelectionWithoutValidation();
    // private System.Void OnSizeChanged(UnityEngine.UIElements.GeometryChangedEvent evt)
    // Offset: 0x55ACB60
    void OnSizeChanged(::UnityEngine::UIElements::GeometryChangedEvent* evt);
    // private System.Void OnCustomStyleResolved(UnityEngine.UIElements.CustomStyleResolvedEvent e)
    // Offset: 0x55ACC60
    void OnCustomStyleResolved(::UnityEngine::UIElements::CustomStyleResolvedEvent* e);
    // private System.Void UnityEngine.ISerializationCallbackReceiver.OnBeforeSerialize()
    // Offset: 0x55ACDC8
    void UnityEngine_ISerializationCallbackReceiver_OnBeforeSerialize();
    // private System.Void UnityEngine.ISerializationCallbackReceiver.OnAfterDeserialize()
    // Offset: 0x55ACDCC
    void UnityEngine_ISerializationCallbackReceiver_OnAfterDeserialize();
    // private System.Void <.ctor>b__160_0(System.Single v)
    // Offset: 0x55AD1EC
    void $_ctor$b__160_0(float v);
    // private System.Void <Apply>g__HandleSelectionAndScroll|183_0(System.Int32 index, ref UnityEngine.UIElements.BaseVerticalCollectionView/<>c__DisplayClass183_0 )
    // Offset: 0x55A9C70
    void $Apply$g__HandleSelectionAndScroll_183_0(int index, ByRef<::UnityEngine::UIElements::BaseVerticalCollectionView::$$c__DisplayClass183_0> param_1);
    // public override UnityEngine.UIElements.VisualElement get_contentContainer()
    // Offset: 0x55A7078
    // Implemented from: UnityEngine.UIElements.VisualElement
    // Base method: UnityEngine.UIElements.VisualElement VisualElement::get_contentContainer()
    ::UnityEngine::UIElements::VisualElement* get_contentContainer();
    // public System.Void .ctor()
    // Offset: 0x55A7E88
    // Implemented from: UnityEngine.UIElements.BindableElement
    // Base method: System.Void BindableElement::.ctor()
    // Base method: System.Void VisualElement::.ctor()
    // Base method: System.Void Focusable::.ctor()
    // Base method: System.Void CallbackEventHandler::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static BaseVerticalCollectionView* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::BaseVerticalCollectionView::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<BaseVerticalCollectionView*, creationType>()));
    }
    // override System.Void OnViewDataReady()
    // Offset: 0x55AC798
    // Implemented from: UnityEngine.UIElements.VisualElement
    // Base method: System.Void VisualElement::OnViewDataReady()
    void OnViewDataReady();
    // protected override System.Void ExecuteDefaultAction(UnityEngine.UIElements.EventBase evt)
    // Offset: 0x55AC7CC
    // Implemented from: UnityEngine.UIElements.VisualElement
    // Base method: System.Void VisualElement::ExecuteDefaultAction(UnityEngine.UIElements.EventBase evt)
    void ExecuteDefaultAction(::UnityEngine::UIElements::EventBase* evt);
    // static private System.Void .cctor()
    // Offset: 0x55ACDD0
    // Implemented from: UnityEngine.UIElements.VisualElement
    // Base method: System.Void VisualElement::.cctor()
    static void _cctor();
  }; // UnityEngine.UIElements.BaseVerticalCollectionView
  // WARNING Not writing size check since size may be invalid!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseVerticalCollectionView::HasCanStartDrag
// Il2CppName: HasCanStartDrag
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::BaseVerticalCollectionView::*)()>(&UnityEngine::UIElements::BaseVerticalCollectionView::HasCanStartDrag)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseVerticalCollectionView*), "HasCanStartDrag", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseVerticalCollectionView::RaiseCanStartDrag
// Il2CppName: RaiseCanStartDrag
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::BaseVerticalCollectionView::*)(::UnityEngine::UIElements::ReusableCollectionItem*, ::System::Collections::Generic::IEnumerable_1<int>*)>(&UnityEngine::UIElements::BaseVerticalCollectionView::RaiseCanStartDrag)> {
  static const MethodInfo* get() {
    static auto* item = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "ReusableCollectionItem")->byval_arg;
    static auto* ids = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "IEnumerable`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Int32")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseVerticalCollectionView*), "RaiseCanStartDrag", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{item, ids});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseVerticalCollectionView::RaiseSetupDragAndDrop
// Il2CppName: RaiseSetupDragAndDrop
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::StartDragArgs (UnityEngine::UIElements::BaseVerticalCollectionView::*)(::UnityEngine::UIElements::ReusableCollectionItem*, ::System::Collections::Generic::IEnumerable_1<int>*, ::UnityEngine::UIElements::StartDragArgs)>(&UnityEngine::UIElements::BaseVerticalCollectionView::RaiseSetupDragAndDrop)> {
  static const MethodInfo* get() {
    static auto* item = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "ReusableCollectionItem")->byval_arg;
    static auto* ids = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "IEnumerable`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Int32")})->byval_arg;
    static auto* args = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "StartDragArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseVerticalCollectionView*), "RaiseSetupDragAndDrop", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{item, ids, args});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseVerticalCollectionView::RaiseHandleDragAndDrop
// Il2CppName: RaiseHandleDragAndDrop
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::DragVisualMode (UnityEngine::UIElements::BaseVerticalCollectionView::*)(::UnityEngine::Vector2, ::UnityEngine::UIElements::DragAndDropArgs)>(&UnityEngine::UIElements::BaseVerticalCollectionView::RaiseHandleDragAndDrop)> {
  static const MethodInfo* get() {
    static auto* pointerPosition = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector2")->byval_arg;
    static auto* dragAndDropArgs = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "DragAndDropArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseVerticalCollectionView*), "RaiseHandleDragAndDrop", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{pointerPosition, dragAndDropArgs});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseVerticalCollectionView::RaiseDrop
// Il2CppName: RaiseDrop
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::DragVisualMode (UnityEngine::UIElements::BaseVerticalCollectionView::*)(::UnityEngine::Vector2, ::UnityEngine::UIElements::DragAndDropArgs)>(&UnityEngine::UIElements::BaseVerticalCollectionView::RaiseDrop)> {
  static const MethodInfo* get() {
    static auto* pointerPosition = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector2")->byval_arg;
    static auto* dragAndDropArgs = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "DragAndDropArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseVerticalCollectionView*), "RaiseDrop", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{pointerPosition, dragAndDropArgs});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseVerticalCollectionView::get_itemsSource
// Il2CppName: get_itemsSource
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::IList* (UnityEngine::UIElements::BaseVerticalCollectionView::*)()>(&UnityEngine::UIElements::BaseVerticalCollectionView::get_itemsSource)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseVerticalCollectionView*), "get_itemsSource", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseVerticalCollectionView::set_itemsSource
// Il2CppName: set_itemsSource
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::BaseVerticalCollectionView::*)(::System::Collections::IList*)>(&UnityEngine::UIElements::BaseVerticalCollectionView::set_itemsSource)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System.Collections", "IList")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseVerticalCollectionView*), "set_itemsSource", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseVerticalCollectionView::get_sourceIncludesArraySize
// Il2CppName: get_sourceIncludesArraySize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::BaseVerticalCollectionView::*)()>(&UnityEngine::UIElements::BaseVerticalCollectionView::get_sourceIncludesArraySize)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseVerticalCollectionView*), "get_sourceIncludesArraySize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseVerticalCollectionView::get_selectionType
// Il2CppName: get_selectionType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::SelectionType (UnityEngine::UIElements::BaseVerticalCollectionView::*)()>(&UnityEngine::UIElements::BaseVerticalCollectionView::get_selectionType)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseVerticalCollectionView*), "get_selectionType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseVerticalCollectionView::set_selectionType
// Il2CppName: set_selectionType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::BaseVerticalCollectionView::*)(::UnityEngine::UIElements::SelectionType)>(&UnityEngine::UIElements::BaseVerticalCollectionView::set_selectionType)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "SelectionType")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseVerticalCollectionView*), "set_selectionType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseVerticalCollectionView::get_selectedIndex
// Il2CppName: get_selectedIndex
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::UIElements::BaseVerticalCollectionView::*)()>(&UnityEngine::UIElements::BaseVerticalCollectionView::get_selectedIndex)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseVerticalCollectionView*), "get_selectedIndex", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseVerticalCollectionView::set_selectedIndex
// Il2CppName: set_selectedIndex
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::BaseVerticalCollectionView::*)(int)>(&UnityEngine::UIElements::BaseVerticalCollectionView::set_selectedIndex)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseVerticalCollectionView*), "set_selectedIndex", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseVerticalCollectionView::get_selectedIndices
// Il2CppName: get_selectedIndices
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::IEnumerable_1<int>* (UnityEngine::UIElements::BaseVerticalCollectionView::*)()>(&UnityEngine::UIElements::BaseVerticalCollectionView::get_selectedIndices)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseVerticalCollectionView*), "get_selectedIndices", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseVerticalCollectionView::get_selectedIds
// Il2CppName: get_selectedIds
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::IEnumerable_1<int>* (UnityEngine::UIElements::BaseVerticalCollectionView::*)()>(&UnityEngine::UIElements::BaseVerticalCollectionView::get_selectedIds)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseVerticalCollectionView*), "get_selectedIds", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseVerticalCollectionView::get_activeItems
// Il2CppName: get_activeItems
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::ReusableCollectionItem*>* (UnityEngine::UIElements::BaseVerticalCollectionView::*)()>(&UnityEngine::UIElements::BaseVerticalCollectionView::get_activeItems)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseVerticalCollectionView*), "get_activeItems", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseVerticalCollectionView::get_scrollView
// Il2CppName: get_scrollView
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::ScrollView* (UnityEngine::UIElements::BaseVerticalCollectionView::*)()>(&UnityEngine::UIElements::BaseVerticalCollectionView::get_scrollView)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseVerticalCollectionView*), "get_scrollView", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseVerticalCollectionView::get_dragger
// Il2CppName: get_dragger
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::ListViewDragger* (UnityEngine::UIElements::BaseVerticalCollectionView::*)()>(&UnityEngine::UIElements::BaseVerticalCollectionView::get_dragger)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseVerticalCollectionView*), "get_dragger", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseVerticalCollectionView::get_virtualizationController
// Il2CppName: get_virtualizationController
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::CollectionVirtualizationController* (UnityEngine::UIElements::BaseVerticalCollectionView::*)()>(&UnityEngine::UIElements::BaseVerticalCollectionView::get_virtualizationController)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseVerticalCollectionView*), "get_virtualizationController", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseVerticalCollectionView::get_viewController
// Il2CppName: get_viewController
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::CollectionViewController* (UnityEngine::UIElements::BaseVerticalCollectionView::*)()>(&UnityEngine::UIElements::BaseVerticalCollectionView::get_viewController)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseVerticalCollectionView*), "get_viewController", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseVerticalCollectionView::ResolveItemHeight
// Il2CppName: ResolveItemHeight
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::UIElements::BaseVerticalCollectionView::*)(float)>(&UnityEngine::UIElements::BaseVerticalCollectionView::ResolveItemHeight)> {
  static const MethodInfo* get() {
    static auto* height = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseVerticalCollectionView*), "ResolveItemHeight", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{height});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseVerticalCollectionView::set_showBorder
// Il2CppName: set_showBorder
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::BaseVerticalCollectionView::*)(bool)>(&UnityEngine::UIElements::BaseVerticalCollectionView::set_showBorder)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseVerticalCollectionView*), "set_showBorder", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseVerticalCollectionView::get_reorderable
// Il2CppName: get_reorderable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::BaseVerticalCollectionView::*)()>(&UnityEngine::UIElements::BaseVerticalCollectionView::get_reorderable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseVerticalCollectionView*), "get_reorderable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseVerticalCollectionView::set_reorderable
// Il2CppName: set_reorderable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::BaseVerticalCollectionView::*)(bool)>(&UnityEngine::UIElements::BaseVerticalCollectionView::set_reorderable)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseVerticalCollectionView*), "set_reorderable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseVerticalCollectionView::set_horizontalScrollingEnabled
// Il2CppName: set_horizontalScrollingEnabled
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::BaseVerticalCollectionView::*)(bool)>(&UnityEngine::UIElements::BaseVerticalCollectionView::set_horizontalScrollingEnabled)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseVerticalCollectionView*), "set_horizontalScrollingEnabled", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseVerticalCollectionView::get_showAlternatingRowBackgrounds
// Il2CppName: get_showAlternatingRowBackgrounds
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::AlternatingRowBackground (UnityEngine::UIElements::BaseVerticalCollectionView::*)()>(&UnityEngine::UIElements::BaseVerticalCollectionView::get_showAlternatingRowBackgrounds)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseVerticalCollectionView*), "get_showAlternatingRowBackgrounds", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseVerticalCollectionView::set_showAlternatingRowBackgrounds
// Il2CppName: set_showAlternatingRowBackgrounds
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::BaseVerticalCollectionView::*)(::UnityEngine::UIElements::AlternatingRowBackground)>(&UnityEngine::UIElements::BaseVerticalCollectionView::set_showAlternatingRowBackgrounds)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "AlternatingRowBackground")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseVerticalCollectionView*), "set_showAlternatingRowBackgrounds", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseVerticalCollectionView::get_virtualizationMethod
// Il2CppName: get_virtualizationMethod
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::CollectionVirtualizationMethod (UnityEngine::UIElements::BaseVerticalCollectionView::*)()>(&UnityEngine::UIElements::BaseVerticalCollectionView::get_virtualizationMethod)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseVerticalCollectionView*), "get_virtualizationMethod", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseVerticalCollectionView::set_virtualizationMethod
// Il2CppName: set_virtualizationMethod
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::BaseVerticalCollectionView::*)(::UnityEngine::UIElements::CollectionVirtualizationMethod)>(&UnityEngine::UIElements::BaseVerticalCollectionView::set_virtualizationMethod)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "CollectionVirtualizationMethod")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseVerticalCollectionView*), "set_virtualizationMethod", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseVerticalCollectionView::get_fixedItemHeight
// Il2CppName: get_fixedItemHeight
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::UIElements::BaseVerticalCollectionView::*)()>(&UnityEngine::UIElements::BaseVerticalCollectionView::get_fixedItemHeight)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseVerticalCollectionView*), "get_fixedItemHeight", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseVerticalCollectionView::set_fixedItemHeight
// Il2CppName: set_fixedItemHeight
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::BaseVerticalCollectionView::*)(float)>(&UnityEngine::UIElements::BaseVerticalCollectionView::set_fixedItemHeight)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseVerticalCollectionView*), "set_fixedItemHeight", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseVerticalCollectionView::get_lastHeight
// Il2CppName: get_lastHeight
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::UIElements::BaseVerticalCollectionView::*)()>(&UnityEngine::UIElements::BaseVerticalCollectionView::get_lastHeight)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseVerticalCollectionView*), "get_lastHeight", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseVerticalCollectionView::CreateVirtualizationController
// Il2CppName: CreateVirtualizationController
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::BaseVerticalCollectionView::*)()>(&UnityEngine::UIElements::BaseVerticalCollectionView::CreateVirtualizationController)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseVerticalCollectionView*), "CreateVirtualizationController", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseVerticalCollectionView::GetOrCreateVirtualizationController
// Il2CppName: GetOrCreateVirtualizationController
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::CollectionVirtualizationController* (UnityEngine::UIElements::BaseVerticalCollectionView::*)()>(&UnityEngine::UIElements::BaseVerticalCollectionView::GetOrCreateVirtualizationController)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseVerticalCollectionView*), "GetOrCreateVirtualizationController", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseVerticalCollectionView::CreateVirtualizationController
// Il2CppName: CreateVirtualizationController
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseVerticalCollectionView::GetOrCreateViewController
// Il2CppName: GetOrCreateViewController
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::CollectionViewController* (UnityEngine::UIElements::BaseVerticalCollectionView::*)()>(&UnityEngine::UIElements::BaseVerticalCollectionView::GetOrCreateViewController)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseVerticalCollectionView*), "GetOrCreateViewController", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseVerticalCollectionView::CreateViewController
// Il2CppName: CreateViewController
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::CollectionViewController* (UnityEngine::UIElements::BaseVerticalCollectionView::*)()>(&UnityEngine::UIElements::BaseVerticalCollectionView::CreateViewController)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseVerticalCollectionView*), "CreateViewController", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseVerticalCollectionView::SetViewController
// Il2CppName: SetViewController
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::BaseVerticalCollectionView::*)(::UnityEngine::UIElements::CollectionViewController*)>(&UnityEngine::UIElements::BaseVerticalCollectionView::SetViewController)> {
  static const MethodInfo* get() {
    static auto* controller = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "CollectionViewController")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseVerticalCollectionView*), "SetViewController", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{controller});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseVerticalCollectionView::CreateDragger
// Il2CppName: CreateDragger
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::ListViewDragger* (UnityEngine::UIElements::BaseVerticalCollectionView::*)()>(&UnityEngine::UIElements::BaseVerticalCollectionView::CreateDragger)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseVerticalCollectionView*), "CreateDragger", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseVerticalCollectionView::InitializeDragAndDropController
// Il2CppName: InitializeDragAndDropController
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::BaseVerticalCollectionView::*)(bool)>(&UnityEngine::UIElements::BaseVerticalCollectionView::InitializeDragAndDropController)> {
  static const MethodInfo* get() {
    static auto* enableReordering = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseVerticalCollectionView*), "InitializeDragAndDropController", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{enableReordering});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseVerticalCollectionView::CreateDragAndDropController
// Il2CppName: CreateDragAndDropController
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::ICollectionDragAndDropController* (UnityEngine::UIElements::BaseVerticalCollectionView::*)()>(&UnityEngine::UIElements::BaseVerticalCollectionView::CreateDragAndDropController)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseVerticalCollectionView*), "CreateDragAndDropController", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseVerticalCollectionView::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseVerticalCollectionView::GetRootElementForId
// Il2CppName: GetRootElementForId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::VisualElement* (UnityEngine::UIElements::BaseVerticalCollectionView::*)(int)>(&UnityEngine::UIElements::BaseVerticalCollectionView::GetRootElementForId)> {
  static const MethodInfo* get() {
    static auto* id = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseVerticalCollectionView*), "GetRootElementForId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{id});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseVerticalCollectionView::HasValidDataAndBindings
// Il2CppName: HasValidDataAndBindings
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::BaseVerticalCollectionView::*)()>(&UnityEngine::UIElements::BaseVerticalCollectionView::HasValidDataAndBindings)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseVerticalCollectionView*), "HasValidDataAndBindings", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseVerticalCollectionView::OnItemIndexChanged
// Il2CppName: OnItemIndexChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::BaseVerticalCollectionView::*)(int, int)>(&UnityEngine::UIElements::BaseVerticalCollectionView::OnItemIndexChanged)> {
  static const MethodInfo* get() {
    static auto* srcIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* dstIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseVerticalCollectionView*), "OnItemIndexChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{srcIndex, dstIndex});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseVerticalCollectionView::OnItemsSourceChanged
// Il2CppName: OnItemsSourceChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::BaseVerticalCollectionView::*)()>(&UnityEngine::UIElements::BaseVerticalCollectionView::OnItemsSourceChanged)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseVerticalCollectionView*), "OnItemsSourceChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseVerticalCollectionView::RefreshItems
// Il2CppName: RefreshItems
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::BaseVerticalCollectionView::*)()>(&UnityEngine::UIElements::BaseVerticalCollectionView::RefreshItems)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseVerticalCollectionView*), "RefreshItems", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseVerticalCollectionView::Rebuild
// Il2CppName: Rebuild
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::BaseVerticalCollectionView::*)()>(&UnityEngine::UIElements::BaseVerticalCollectionView::Rebuild)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseVerticalCollectionView*), "Rebuild", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseVerticalCollectionView::RefreshSelection
// Il2CppName: RefreshSelection
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::BaseVerticalCollectionView::*)()>(&UnityEngine::UIElements::BaseVerticalCollectionView::RefreshSelection)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseVerticalCollectionView*), "RefreshSelection", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseVerticalCollectionView::PostRefresh
// Il2CppName: PostRefresh
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::BaseVerticalCollectionView::*)()>(&UnityEngine::UIElements::BaseVerticalCollectionView::PostRefresh)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseVerticalCollectionView*), "PostRefresh", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseVerticalCollectionView::ScrollToItem
// Il2CppName: ScrollToItem
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::BaseVerticalCollectionView::*)(int)>(&UnityEngine::UIElements::BaseVerticalCollectionView::ScrollToItem)> {
  static const MethodInfo* get() {
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseVerticalCollectionView*), "ScrollToItem", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{index});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseVerticalCollectionView::ScrollToItemById
// Il2CppName: ScrollToItemById
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::BaseVerticalCollectionView::*)(int)>(&UnityEngine::UIElements::BaseVerticalCollectionView::ScrollToItemById)> {
  static const MethodInfo* get() {
    static auto* id = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseVerticalCollectionView*), "ScrollToItemById", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{id});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseVerticalCollectionView::OnScroll
// Il2CppName: OnScroll
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::BaseVerticalCollectionView::*)(::UnityEngine::Vector2)>(&UnityEngine::UIElements::BaseVerticalCollectionView::OnScroll)> {
  static const MethodInfo* get() {
    static auto* offset = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector2")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseVerticalCollectionView*), "OnScroll", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{offset});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseVerticalCollectionView::Resize
// Il2CppName: Resize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::BaseVerticalCollectionView::*)(::UnityEngine::Vector2)>(&UnityEngine::UIElements::BaseVerticalCollectionView::Resize)> {
  static const MethodInfo* get() {
    static auto* size = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector2")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseVerticalCollectionView*), "Resize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{size});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseVerticalCollectionView::OnAttachToPanel
// Il2CppName: OnAttachToPanel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::BaseVerticalCollectionView::*)(::UnityEngine::UIElements::AttachToPanelEvent*)>(&UnityEngine::UIElements::BaseVerticalCollectionView::OnAttachToPanel)> {
  static const MethodInfo* get() {
    static auto* evt = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "AttachToPanelEvent")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseVerticalCollectionView*), "OnAttachToPanel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{evt});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseVerticalCollectionView::OnDetachFromPanel
// Il2CppName: OnDetachFromPanel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::BaseVerticalCollectionView::*)(::UnityEngine::UIElements::DetachFromPanelEvent*)>(&UnityEngine::UIElements::BaseVerticalCollectionView::OnDetachFromPanel)> {
  static const MethodInfo* get() {
    static auto* evt = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "DetachFromPanelEvent")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseVerticalCollectionView*), "OnDetachFromPanel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{evt});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseVerticalCollectionView::Apply
// Il2CppName: Apply
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::BaseVerticalCollectionView::*)(::UnityEngine::UIElements::KeyboardNavigationOperation, bool, bool)>(&UnityEngine::UIElements::BaseVerticalCollectionView::Apply)> {
  static const MethodInfo* get() {
    static auto* op = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "KeyboardNavigationOperation")->byval_arg;
    static auto* shiftKey = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* altKey = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseVerticalCollectionView*), "Apply", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{op, shiftKey, altKey});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseVerticalCollectionView::Apply
// Il2CppName: Apply
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::BaseVerticalCollectionView::*)(::UnityEngine::UIElements::KeyboardNavigationOperation, ::UnityEngine::UIElements::EventBase*)>(&UnityEngine::UIElements::BaseVerticalCollectionView::Apply)> {
  static const MethodInfo* get() {
    static auto* op = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "KeyboardNavigationOperation")->byval_arg;
    static auto* sourceEvent = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "EventBase")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseVerticalCollectionView*), "Apply", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{op, sourceEvent});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseVerticalCollectionView::HandleItemNavigation
// Il2CppName: HandleItemNavigation
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::BaseVerticalCollectionView::*)(bool, bool)>(&UnityEngine::UIElements::BaseVerticalCollectionView::HandleItemNavigation)> {
  static const MethodInfo* get() {
    static auto* moveIn = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* altKey = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseVerticalCollectionView*), "HandleItemNavigation", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{moveIn, altKey});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseVerticalCollectionView::OnPointerMove
// Il2CppName: OnPointerMove
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::BaseVerticalCollectionView::*)(::UnityEngine::UIElements::PointerMoveEvent*)>(&UnityEngine::UIElements::BaseVerticalCollectionView::OnPointerMove)> {
  static const MethodInfo* get() {
    static auto* evt = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "PointerMoveEvent")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseVerticalCollectionView*), "OnPointerMove", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{evt});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseVerticalCollectionView::OnPointerDown
// Il2CppName: OnPointerDown
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::BaseVerticalCollectionView::*)(::UnityEngine::UIElements::PointerDownEvent*)>(&UnityEngine::UIElements::BaseVerticalCollectionView::OnPointerDown)> {
  static const MethodInfo* get() {
    static auto* evt = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "PointerDownEvent")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseVerticalCollectionView*), "OnPointerDown", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{evt});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseVerticalCollectionView::OnPointerCancel
// Il2CppName: OnPointerCancel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::BaseVerticalCollectionView::*)(::UnityEngine::UIElements::PointerCancelEvent*)>(&UnityEngine::UIElements::BaseVerticalCollectionView::OnPointerCancel)> {
  static const MethodInfo* get() {
    static auto* evt = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "PointerCancelEvent")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseVerticalCollectionView*), "OnPointerCancel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{evt});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseVerticalCollectionView::OnPointerUp
// Il2CppName: OnPointerUp
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::BaseVerticalCollectionView::*)(::UnityEngine::UIElements::PointerUpEvent*)>(&UnityEngine::UIElements::BaseVerticalCollectionView::OnPointerUp)> {
  static const MethodInfo* get() {
    static auto* evt = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "PointerUpEvent")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseVerticalCollectionView*), "OnPointerUp", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{evt});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseVerticalCollectionView::ProcessPointerDown
// Il2CppName: ProcessPointerDown
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::BaseVerticalCollectionView::*)(::UnityEngine::UIElements::IPointerEvent*)>(&UnityEngine::UIElements::BaseVerticalCollectionView::ProcessPointerDown)> {
  static const MethodInfo* get() {
    static auto* evt = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "IPointerEvent")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseVerticalCollectionView*), "ProcessPointerDown", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{evt});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseVerticalCollectionView::ProcessPointerUp
// Il2CppName: ProcessPointerUp
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::BaseVerticalCollectionView::*)(::UnityEngine::UIElements::IPointerEvent*)>(&UnityEngine::UIElements::BaseVerticalCollectionView::ProcessPointerUp)> {
  static const MethodInfo* get() {
    static auto* evt = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "IPointerEvent")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseVerticalCollectionView*), "ProcessPointerUp", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{evt});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseVerticalCollectionView::DoSelect
// Il2CppName: DoSelect
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::BaseVerticalCollectionView::*)(::UnityEngine::Vector2, int, bool, bool)>(&UnityEngine::UIElements::BaseVerticalCollectionView::DoSelect)> {
  static const MethodInfo* get() {
    static auto* localPosition = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector2")->byval_arg;
    static auto* clickCount = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* actionKey = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* shiftKey = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseVerticalCollectionView*), "DoSelect", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{localPosition, clickCount, actionKey, shiftKey});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseVerticalCollectionView::DoRangeSelection
// Il2CppName: DoRangeSelection
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::BaseVerticalCollectionView::*)(int)>(&UnityEngine::UIElements::BaseVerticalCollectionView::DoRangeSelection)> {
  static const MethodInfo* get() {
    static auto* rangeSelectionFinalIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseVerticalCollectionView*), "DoRangeSelection", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{rangeSelectionFinalIndex});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseVerticalCollectionView::ProcessSingleClick
// Il2CppName: ProcessSingleClick
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::BaseVerticalCollectionView::*)(int)>(&UnityEngine::UIElements::BaseVerticalCollectionView::ProcessSingleClick)> {
  static const MethodInfo* get() {
    static auto* clickedIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseVerticalCollectionView*), "ProcessSingleClick", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{clickedIndex});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseVerticalCollectionView::SelectAll
// Il2CppName: SelectAll
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::BaseVerticalCollectionView::*)()>(&UnityEngine::UIElements::BaseVerticalCollectionView::SelectAll)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseVerticalCollectionView*), "SelectAll", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseVerticalCollectionView::AddToSelection
// Il2CppName: AddToSelection
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::BaseVerticalCollectionView::*)(int)>(&UnityEngine::UIElements::BaseVerticalCollectionView::AddToSelection)> {
  static const MethodInfo* get() {
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseVerticalCollectionView*), "AddToSelection", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{index});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseVerticalCollectionView::AddToSelection
// Il2CppName: AddToSelection
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::BaseVerticalCollectionView::*)(::System::Collections::Generic::IList_1<int>*)>(&UnityEngine::UIElements::BaseVerticalCollectionView::AddToSelection)> {
  static const MethodInfo* get() {
    static auto* indexes = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "IList`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Int32")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseVerticalCollectionView*), "AddToSelection", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{indexes});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseVerticalCollectionView::AddToSelectionWithoutValidation
// Il2CppName: AddToSelectionWithoutValidation
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::BaseVerticalCollectionView::*)(int)>(&UnityEngine::UIElements::BaseVerticalCollectionView::AddToSelectionWithoutValidation)> {
  static const MethodInfo* get() {
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseVerticalCollectionView*), "AddToSelectionWithoutValidation", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{index});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseVerticalCollectionView::RemoveFromSelection
// Il2CppName: RemoveFromSelection
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::BaseVerticalCollectionView::*)(int)>(&UnityEngine::UIElements::BaseVerticalCollectionView::RemoveFromSelection)> {
  static const MethodInfo* get() {
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseVerticalCollectionView*), "RemoveFromSelection", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{index});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseVerticalCollectionView::RemoveFromSelectionWithoutValidation
// Il2CppName: RemoveFromSelectionWithoutValidation
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::BaseVerticalCollectionView::*)(int)>(&UnityEngine::UIElements::BaseVerticalCollectionView::RemoveFromSelectionWithoutValidation)> {
  static const MethodInfo* get() {
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseVerticalCollectionView*), "RemoveFromSelectionWithoutValidation", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{index});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseVerticalCollectionView::SetSelection
// Il2CppName: SetSelection
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::BaseVerticalCollectionView::*)(int)>(&UnityEngine::UIElements::BaseVerticalCollectionView::SetSelection)> {
  static const MethodInfo* get() {
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseVerticalCollectionView*), "SetSelection", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{index});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseVerticalCollectionView::SetSelection
// Il2CppName: SetSelection
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::BaseVerticalCollectionView::*)(::System::Collections::Generic::IEnumerable_1<int>*)>(&UnityEngine::UIElements::BaseVerticalCollectionView::SetSelection)> {
  static const MethodInfo* get() {
    static auto* indices = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "IEnumerable`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Int32")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseVerticalCollectionView*), "SetSelection", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{indices});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseVerticalCollectionView::SetSelectionWithoutNotify
// Il2CppName: SetSelectionWithoutNotify
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::BaseVerticalCollectionView::*)(::System::Collections::Generic::IEnumerable_1<int>*)>(&UnityEngine::UIElements::BaseVerticalCollectionView::SetSelectionWithoutNotify)> {
  static const MethodInfo* get() {
    static auto* indices = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "IEnumerable`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Int32")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseVerticalCollectionView*), "SetSelectionWithoutNotify", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{indices});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseVerticalCollectionView::SetSelectionInternal
// Il2CppName: SetSelectionInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::BaseVerticalCollectionView::*)(::System::Collections::Generic::IEnumerable_1<int>*, bool)>(&UnityEngine::UIElements::BaseVerticalCollectionView::SetSelectionInternal)> {
  static const MethodInfo* get() {
    static auto* indices = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "IEnumerable`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Int32")})->byval_arg;
    static auto* sendNotification = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseVerticalCollectionView*), "SetSelectionInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{indices, sendNotification});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseVerticalCollectionView::MatchesExistingSelection
// Il2CppName: MatchesExistingSelection
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::BaseVerticalCollectionView::*)(::System::Collections::Generic::IEnumerable_1<int>*)>(&UnityEngine::UIElements::BaseVerticalCollectionView::MatchesExistingSelection)> {
  static const MethodInfo* get() {
    static auto* indices = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "IEnumerable`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Int32")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseVerticalCollectionView*), "MatchesExistingSelection", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{indices});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseVerticalCollectionView::NotifyOfSelectionChange
// Il2CppName: NotifyOfSelectionChange
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::BaseVerticalCollectionView::*)()>(&UnityEngine::UIElements::BaseVerticalCollectionView::NotifyOfSelectionChange)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseVerticalCollectionView*), "NotifyOfSelectionChange", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseVerticalCollectionView::ClearSelection
// Il2CppName: ClearSelection
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::BaseVerticalCollectionView::*)()>(&UnityEngine::UIElements::BaseVerticalCollectionView::ClearSelection)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseVerticalCollectionView*), "ClearSelection", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseVerticalCollectionView::ClearSelectionWithoutValidation
// Il2CppName: ClearSelectionWithoutValidation
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::BaseVerticalCollectionView::*)()>(&UnityEngine::UIElements::BaseVerticalCollectionView::ClearSelectionWithoutValidation)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseVerticalCollectionView*), "ClearSelectionWithoutValidation", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseVerticalCollectionView::OnSizeChanged
// Il2CppName: OnSizeChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::BaseVerticalCollectionView::*)(::UnityEngine::UIElements::GeometryChangedEvent*)>(&UnityEngine::UIElements::BaseVerticalCollectionView::OnSizeChanged)> {
  static const MethodInfo* get() {
    static auto* evt = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "GeometryChangedEvent")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseVerticalCollectionView*), "OnSizeChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{evt});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseVerticalCollectionView::OnCustomStyleResolved
// Il2CppName: OnCustomStyleResolved
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::BaseVerticalCollectionView::*)(::UnityEngine::UIElements::CustomStyleResolvedEvent*)>(&UnityEngine::UIElements::BaseVerticalCollectionView::OnCustomStyleResolved)> {
  static const MethodInfo* get() {
    static auto* e = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "CustomStyleResolvedEvent")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseVerticalCollectionView*), "OnCustomStyleResolved", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{e});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseVerticalCollectionView::UnityEngine_ISerializationCallbackReceiver_OnBeforeSerialize
// Il2CppName: UnityEngine.ISerializationCallbackReceiver.OnBeforeSerialize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::BaseVerticalCollectionView::*)()>(&UnityEngine::UIElements::BaseVerticalCollectionView::UnityEngine_ISerializationCallbackReceiver_OnBeforeSerialize)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseVerticalCollectionView*), "UnityEngine.ISerializationCallbackReceiver.OnBeforeSerialize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseVerticalCollectionView::UnityEngine_ISerializationCallbackReceiver_OnAfterDeserialize
// Il2CppName: UnityEngine.ISerializationCallbackReceiver.OnAfterDeserialize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::BaseVerticalCollectionView::*)()>(&UnityEngine::UIElements::BaseVerticalCollectionView::UnityEngine_ISerializationCallbackReceiver_OnAfterDeserialize)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseVerticalCollectionView*), "UnityEngine.ISerializationCallbackReceiver.OnAfterDeserialize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseVerticalCollectionView::$_ctor$b__160_0
// Il2CppName: <.ctor>b__160_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::BaseVerticalCollectionView::*)(float)>(&UnityEngine::UIElements::BaseVerticalCollectionView::$_ctor$b__160_0)> {
  static const MethodInfo* get() {
    static auto* v = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseVerticalCollectionView*), "<.ctor>b__160_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{v});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseVerticalCollectionView::$Apply$g__HandleSelectionAndScroll_183_0
// Il2CppName: <Apply>g__HandleSelectionAndScroll|183_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::BaseVerticalCollectionView::*)(int, ByRef<::UnityEngine::UIElements::BaseVerticalCollectionView::$$c__DisplayClass183_0>)>(&UnityEngine::UIElements::BaseVerticalCollectionView::$Apply$g__HandleSelectionAndScroll_183_0)> {
  static const MethodInfo* get() {
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* param_1 = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "BaseVerticalCollectionView/<>c__DisplayClass183_0")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseVerticalCollectionView*), "<Apply>g__HandleSelectionAndScroll|183_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{index, param_1});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseVerticalCollectionView::get_contentContainer
// Il2CppName: get_contentContainer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::VisualElement* (UnityEngine::UIElements::BaseVerticalCollectionView::*)()>(&UnityEngine::UIElements::BaseVerticalCollectionView::get_contentContainer)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseVerticalCollectionView*), "get_contentContainer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseVerticalCollectionView::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseVerticalCollectionView::OnViewDataReady
// Il2CppName: OnViewDataReady
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::BaseVerticalCollectionView::*)()>(&UnityEngine::UIElements::BaseVerticalCollectionView::OnViewDataReady)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseVerticalCollectionView*), "OnViewDataReady", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseVerticalCollectionView::ExecuteDefaultAction
// Il2CppName: ExecuteDefaultAction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::BaseVerticalCollectionView::*)(::UnityEngine::UIElements::EventBase*)>(&UnityEngine::UIElements::BaseVerticalCollectionView::ExecuteDefaultAction)> {
  static const MethodInfo* get() {
    static auto* evt = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "EventBase")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseVerticalCollectionView*), "ExecuteDefaultAction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{evt});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseVerticalCollectionView::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&UnityEngine::UIElements::BaseVerticalCollectionView::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseVerticalCollectionView*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
