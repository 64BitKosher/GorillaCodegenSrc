// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.UIElements.UQueryState`1
#include "UnityEngine/UIElements/UQueryState_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::UIElements
namespace UnityEngine::UIElements {
  // Forward declaring type: VisualElement
  class VisualElement;
}
// Completed forward declares
// Type namespace: UnityEngine.UIElements
namespace UnityEngine::UIElements {
  // Forward declaring type: UQueryExtensions
  class UQueryExtensions;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::UIElements::UQueryExtensions);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::UIElements::UQueryExtensions*, "UnityEngine.UIElements", "UQueryExtensions");
// Type namespace: UnityEngine.UIElements
namespace UnityEngine::UIElements {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.UIElements.UQueryExtensions
  // [TokenAttribute] Offset: FFFFFFFF
  // [ExtensionAttribute] Offset: FFFFFFFF
  class UQueryExtensions : public ::Il2CppObject {
    public:
    // Get static field: static private UnityEngine.UIElements.UQueryState`1<UnityEngine.UIElements.VisualElement> SingleElementEmptyQuery
    static ::UnityEngine::UIElements::UQueryState_1<::UnityEngine::UIElements::VisualElement*> _get_SingleElementEmptyQuery();
    // Set static field: static private UnityEngine.UIElements.UQueryState`1<UnityEngine.UIElements.VisualElement> SingleElementEmptyQuery
    static void _set_SingleElementEmptyQuery(::UnityEngine::UIElements::UQueryState_1<::UnityEngine::UIElements::VisualElement*> value);
    // Get static field: static private UnityEngine.UIElements.UQueryState`1<UnityEngine.UIElements.VisualElement> SingleElementNameQuery
    static ::UnityEngine::UIElements::UQueryState_1<::UnityEngine::UIElements::VisualElement*> _get_SingleElementNameQuery();
    // Set static field: static private UnityEngine.UIElements.UQueryState`1<UnityEngine.UIElements.VisualElement> SingleElementNameQuery
    static void _set_SingleElementNameQuery(::UnityEngine::UIElements::UQueryState_1<::UnityEngine::UIElements::VisualElement*> value);
    // Get static field: static private UnityEngine.UIElements.UQueryState`1<UnityEngine.UIElements.VisualElement> SingleElementClassQuery
    static ::UnityEngine::UIElements::UQueryState_1<::UnityEngine::UIElements::VisualElement*> _get_SingleElementClassQuery();
    // Set static field: static private UnityEngine.UIElements.UQueryState`1<UnityEngine.UIElements.VisualElement> SingleElementClassQuery
    static void _set_SingleElementClassQuery(::UnityEngine::UIElements::UQueryState_1<::UnityEngine::UIElements::VisualElement*> value);
    // Get static field: static private UnityEngine.UIElements.UQueryState`1<UnityEngine.UIElements.VisualElement> SingleElementNameAndClassQuery
    static ::UnityEngine::UIElements::UQueryState_1<::UnityEngine::UIElements::VisualElement*> _get_SingleElementNameAndClassQuery();
    // Set static field: static private UnityEngine.UIElements.UQueryState`1<UnityEngine.UIElements.VisualElement> SingleElementNameAndClassQuery
    static void _set_SingleElementNameAndClassQuery(::UnityEngine::UIElements::UQueryState_1<::UnityEngine::UIElements::VisualElement*> value);
    // Get static field: static private UnityEngine.UIElements.UQueryState`1<UnityEngine.UIElements.VisualElement> SingleElementTypeQuery
    static ::UnityEngine::UIElements::UQueryState_1<::UnityEngine::UIElements::VisualElement*> _get_SingleElementTypeQuery();
    // Set static field: static private UnityEngine.UIElements.UQueryState`1<UnityEngine.UIElements.VisualElement> SingleElementTypeQuery
    static void _set_SingleElementTypeQuery(::UnityEngine::UIElements::UQueryState_1<::UnityEngine::UIElements::VisualElement*> value);
    // Get static field: static private UnityEngine.UIElements.UQueryState`1<UnityEngine.UIElements.VisualElement> SingleElementTypeAndNameQuery
    static ::UnityEngine::UIElements::UQueryState_1<::UnityEngine::UIElements::VisualElement*> _get_SingleElementTypeAndNameQuery();
    // Set static field: static private UnityEngine.UIElements.UQueryState`1<UnityEngine.UIElements.VisualElement> SingleElementTypeAndNameQuery
    static void _set_SingleElementTypeAndNameQuery(::UnityEngine::UIElements::UQueryState_1<::UnityEngine::UIElements::VisualElement*> value);
    // Get static field: static private UnityEngine.UIElements.UQueryState`1<UnityEngine.UIElements.VisualElement> SingleElementTypeAndClassQuery
    static ::UnityEngine::UIElements::UQueryState_1<::UnityEngine::UIElements::VisualElement*> _get_SingleElementTypeAndClassQuery();
    // Set static field: static private UnityEngine.UIElements.UQueryState`1<UnityEngine.UIElements.VisualElement> SingleElementTypeAndClassQuery
    static void _set_SingleElementTypeAndClassQuery(::UnityEngine::UIElements::UQueryState_1<::UnityEngine::UIElements::VisualElement*> value);
    // Get static field: static private UnityEngine.UIElements.UQueryState`1<UnityEngine.UIElements.VisualElement> SingleElementTypeAndNameAndClassQuery
    static ::UnityEngine::UIElements::UQueryState_1<::UnityEngine::UIElements::VisualElement*> _get_SingleElementTypeAndNameAndClassQuery();
    // Set static field: static private UnityEngine.UIElements.UQueryState`1<UnityEngine.UIElements.VisualElement> SingleElementTypeAndNameAndClassQuery
    static void _set_SingleElementTypeAndNameAndClassQuery(::UnityEngine::UIElements::UQueryState_1<::UnityEngine::UIElements::VisualElement*> value);
    // static public T Q(UnityEngine.UIElements.VisualElement e, System.String name, System.String className)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class T>
    static T Q(::UnityEngine::UIElements::VisualElement* e, ::StringW name, ::StringW className) {
      static_assert(std::is_convertible_v<T, ::UnityEngine::UIElements::VisualElement*>);
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::UQueryExtensions::Q");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UIElements", "UQueryExtensions", "Q", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(e), ::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(className)})));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}));
      return ::il2cpp_utils::RunMethodRethrow<T, false>(static_cast<Il2CppObject*>(nullptr), ___generic__method, e, name, className);
    }
    // static public UnityEngine.UIElements.VisualElement Q(UnityEngine.UIElements.VisualElement e, System.String name, System.String className)
    // Offset: 0x56C3C1C
    static ::UnityEngine::UIElements::VisualElement* Q(::UnityEngine::UIElements::VisualElement* e, ::StringW name, ::StringW className);
    // static private System.Void .cctor()
    // Offset: 0x56C401C
    static void _cctor();
  }; // UnityEngine.UIElements.UQueryExtensions
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::UIElements::UQueryExtensions::Q
// Il2CppName: Q
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: UnityEngine::UIElements::UQueryExtensions::Q
// Il2CppName: Q
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::VisualElement* (*)(::UnityEngine::UIElements::VisualElement*, ::StringW, ::StringW)>(&UnityEngine::UIElements::UQueryExtensions::Q)> {
  static const MethodInfo* get() {
    static auto* e = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "VisualElement")->byval_arg;
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* className = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::UQueryExtensions*), "Q", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{e, name, className});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::UQueryExtensions::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&UnityEngine::UIElements::UQueryExtensions::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::UQueryExtensions*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
