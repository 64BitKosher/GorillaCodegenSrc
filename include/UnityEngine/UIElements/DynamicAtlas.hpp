// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.UIElements.AtlasBase
#include "UnityEngine/UIElements/AtlasBase.hpp"
// Including type: UnityEngine.ColorSpace
#include "UnityEngine/ColorSpace.hpp"
// Including type: UnityEngine.UIElements.DynamicAtlasFilters
#include "UnityEngine/UIElements/DynamicAtlasFilters.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::UIElements
namespace UnityEngine::UIElements {
  // Forward declaring type: DynamicAtlasPage
  class DynamicAtlasPage;
  // Forward declaring type: IPanel
  class IPanel;
  // Forward declaring type: DynamicAtlasCustomFilter
  class DynamicAtlasCustomFilter;
  // Forward declaring type: VisualElement
  class VisualElement;
  // Forward declaring type: TextureId
  struct TextureId;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: Dictionary`2<TKey, TValue>
  template<typename TKey, typename TValue>
  class Dictionary_2;
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Texture
  class Texture;
  // Forward declaring type: TextureFormat
  struct TextureFormat;
  // Forward declaring type: Texture2D
  class Texture2D;
  // Forward declaring type: FilterMode
  struct FilterMode;
  // Forward declaring type: RectInt
  struct RectInt;
}
// Completed forward declares
// Type namespace: UnityEngine.UIElements
namespace UnityEngine::UIElements {
  // Forward declaring type: DynamicAtlas
  class DynamicAtlas;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::UIElements::DynamicAtlas);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::UIElements::DynamicAtlas*, "UnityEngine.UIElements", "DynamicAtlas");
// Type namespace: UnityEngine.UIElements
namespace UnityEngine::UIElements {
  // Size: 0x58
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.UIElements.DynamicAtlas
  // [TokenAttribute] Offset: FFFFFFFF
  class DynamicAtlas : public ::UnityEngine::UIElements::AtlasBase {
    public:
    // Nested type: ::UnityEngine::UIElements::DynamicAtlas::TextureInfo
    class TextureInfo;
    public:
    // private System.Collections.Generic.Dictionary`2<UnityEngine.Texture,UnityEngine.UIElements.DynamicAtlas/TextureInfo> m_Database
    // Size: 0x8
    // Offset: 0x18
    ::System::Collections::Generic::Dictionary_2<::UnityEngine::Texture*, ::UnityEngine::UIElements::DynamicAtlas::TextureInfo*>* m_Database;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::Dictionary_2<::UnityEngine::Texture*, ::UnityEngine::UIElements::DynamicAtlas::TextureInfo*>*) == 0x8);
    // private UnityEngine.UIElements.DynamicAtlasPage m_PointPage
    // Size: 0x8
    // Offset: 0x20
    ::UnityEngine::UIElements::DynamicAtlasPage* m_PointPage;
    // Field size check
    static_assert(sizeof(::UnityEngine::UIElements::DynamicAtlasPage*) == 0x8);
    // private UnityEngine.UIElements.DynamicAtlasPage m_BilinearPage
    // Size: 0x8
    // Offset: 0x28
    ::UnityEngine::UIElements::DynamicAtlasPage* m_BilinearPage;
    // Field size check
    static_assert(sizeof(::UnityEngine::UIElements::DynamicAtlasPage*) == 0x8);
    // private UnityEngine.ColorSpace m_ColorSpace
    // Size: 0x4
    // Offset: 0x30
    ::UnityEngine::ColorSpace m_ColorSpace;
    // Field size check
    static_assert(sizeof(::UnityEngine::ColorSpace) == 0x4);
    // Padding between fields: m_ColorSpace and: m_Panels
    char __padding3[0x4] = {};
    // private System.Collections.Generic.List`1<UnityEngine.UIElements.IPanel> m_Panels
    // Size: 0x8
    // Offset: 0x38
    ::System::Collections::Generic::List_1<::UnityEngine::UIElements::IPanel*>* m_Panels;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::UnityEngine::UIElements::IPanel*>*) == 0x8);
    // private System.Int32 m_MinAtlasSize
    // Size: 0x4
    // Offset: 0x40
    int m_MinAtlasSize;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private System.Int32 m_MaxAtlasSize
    // Size: 0x4
    // Offset: 0x44
    int m_MaxAtlasSize;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private System.Int32 m_MaxSubTextureSize
    // Size: 0x4
    // Offset: 0x48
    int m_MaxSubTextureSize;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private UnityEngine.UIElements.DynamicAtlasFilters m_ActiveFilters
    // Size: 0x4
    // Offset: 0x4C
    ::UnityEngine::UIElements::DynamicAtlasFilters m_ActiveFilters;
    // Field size check
    static_assert(sizeof(::UnityEngine::UIElements::DynamicAtlasFilters) == 0x4);
    // private UnityEngine.UIElements.DynamicAtlasCustomFilter m_CustomFilter
    // Size: 0x8
    // Offset: 0x50
    ::UnityEngine::UIElements::DynamicAtlasCustomFilter* m_CustomFilter;
    // Field size check
    static_assert(sizeof(::UnityEngine::UIElements::DynamicAtlasCustomFilter*) == 0x8);
    public:
    // Deleting conversion operator: operator ::UnityEngine::UIElements::TextureRegistry*
    constexpr operator ::UnityEngine::UIElements::TextureRegistry*() const noexcept = delete;
    // Get instance field reference: private System.Collections.Generic.Dictionary`2<UnityEngine.Texture,UnityEngine.UIElements.DynamicAtlas/TextureInfo> m_Database
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::UnityEngine::Texture*, ::UnityEngine::UIElements::DynamicAtlas::TextureInfo*>*& dyn_m_Database();
    // Get instance field reference: private UnityEngine.UIElements.DynamicAtlasPage m_PointPage
    [[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::DynamicAtlasPage*& dyn_m_PointPage();
    // Get instance field reference: private UnityEngine.UIElements.DynamicAtlasPage m_BilinearPage
    [[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::DynamicAtlasPage*& dyn_m_BilinearPage();
    // Get instance field reference: private UnityEngine.ColorSpace m_ColorSpace
    [[deprecated("Use field access instead!")]] ::UnityEngine::ColorSpace& dyn_m_ColorSpace();
    // Get instance field reference: private System.Collections.Generic.List`1<UnityEngine.UIElements.IPanel> m_Panels
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::UIElements::IPanel*>*& dyn_m_Panels();
    // Get instance field reference: private System.Int32 m_MinAtlasSize
    [[deprecated("Use field access instead!")]] int& dyn_m_MinAtlasSize();
    // Get instance field reference: private System.Int32 m_MaxAtlasSize
    [[deprecated("Use field access instead!")]] int& dyn_m_MaxAtlasSize();
    // Get instance field reference: private System.Int32 m_MaxSubTextureSize
    [[deprecated("Use field access instead!")]] int& dyn_m_MaxSubTextureSize();
    // Get instance field reference: private UnityEngine.UIElements.DynamicAtlasFilters m_ActiveFilters
    [[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::DynamicAtlasFilters& dyn_m_ActiveFilters();
    // Get instance field reference: private UnityEngine.UIElements.DynamicAtlasCustomFilter m_CustomFilter
    [[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::DynamicAtlasCustomFilter*& dyn_m_CustomFilter();
    // System.Boolean get_isInitialized()
    // Offset: 0x5591C04
    bool get_isInitialized();
    // private System.Void InitPages()
    // Offset: 0x5591ED8
    void InitPages();
    // private System.Void DestroyPages()
    // Offset: 0x5591D94
    void DestroyPages();
    // static System.Boolean IsTextureFormatSupported(UnityEngine.TextureFormat format)
    // Offset: 0x5592538
    static bool IsTextureFormatSupported(::UnityEngine::TextureFormat format);
    // public System.Boolean IsTextureValid(UnityEngine.Texture2D texture, UnityEngine.FilterMode atlasFilterMode)
    // Offset: 0x559256C
    bool IsTextureValid(::UnityEngine::Texture2D* texture, ::UnityEngine::FilterMode atlasFilterMode);
    // public System.Void set_minAtlasSize(System.Int32 value)
    // Offset: 0x55926AC
    void set_minAtlasSize(int value);
    // public System.Void set_maxAtlasSize(System.Int32 value)
    // Offset: 0x55926CC
    void set_maxAtlasSize(int value);
    // static public UnityEngine.UIElements.DynamicAtlasFilters get_defaultFilters()
    // Offset: 0x55926EC
    static ::UnityEngine::UIElements::DynamicAtlasFilters get_defaultFilters();
    // public System.Void set_activeFilters(UnityEngine.UIElements.DynamicAtlasFilters value)
    // Offset: 0x55926F4
    void set_activeFilters(::UnityEngine::UIElements::DynamicAtlasFilters value);
    // public System.Int32 get_maxSubTextureSize()
    // Offset: 0x55926A4
    int get_maxSubTextureSize();
    // public System.Void set_maxSubTextureSize(System.Int32 value)
    // Offset: 0x5592714
    void set_maxSubTextureSize(int value);
    // public System.Void set_customFilter(UnityEngine.UIElements.DynamicAtlasCustomFilter value)
    // Offset: 0x5592734
    void set_customFilter(::UnityEngine::UIElements::DynamicAtlasCustomFilter* value);
    // protected override System.Void OnAssignedToPanel(UnityEngine.UIElements.IPanel panel)
    // Offset: 0x5591C24
    // Implemented from: UnityEngine.UIElements.AtlasBase
    // Base method: System.Void AtlasBase::OnAssignedToPanel(UnityEngine.UIElements.IPanel panel)
    void OnAssignedToPanel(::UnityEngine::UIElements::IPanel* panel);
    // protected override System.Void OnRemovedFromPanel(UnityEngine.UIElements.IPanel panel)
    // Offset: 0x5591CFC
    // Implemented from: UnityEngine.UIElements.AtlasBase
    // Base method: System.Void AtlasBase::OnRemovedFromPanel(UnityEngine.UIElements.IPanel panel)
    void OnRemovedFromPanel(::UnityEngine::UIElements::IPanel* panel);
    // public override System.Void Reset()
    // Offset: 0x5591E2C
    // Implemented from: UnityEngine.UIElements.AtlasBase
    // Base method: System.Void AtlasBase::Reset()
    void Reset();
    // public override System.Boolean TryGetAtlas(UnityEngine.UIElements.VisualElement ve, UnityEngine.Texture2D src, out UnityEngine.UIElements.TextureId atlas, out UnityEngine.RectInt atlasRect)
    // Offset: 0x5591FE8
    // Implemented from: UnityEngine.UIElements.AtlasBase
    // Base method: System.Boolean AtlasBase::TryGetAtlas(UnityEngine.UIElements.VisualElement ve, UnityEngine.Texture2D src, out UnityEngine.UIElements.TextureId atlas, out UnityEngine.RectInt atlasRect)
    bool TryGetAtlas(::UnityEngine::UIElements::VisualElement* ve, ::UnityEngine::Texture2D* src, ByRef<::UnityEngine::UIElements::TextureId> atlas, ByRef<::UnityEngine::RectInt> atlasRect);
    // public override System.Void ReturnAtlas(UnityEngine.UIElements.VisualElement ve, UnityEngine.Texture2D src, UnityEngine.UIElements.TextureId atlas)
    // Offset: 0x5592394
    // Implemented from: UnityEngine.UIElements.AtlasBase
    // Base method: System.Void AtlasBase::ReturnAtlas(UnityEngine.UIElements.VisualElement ve, UnityEngine.Texture2D src, UnityEngine.UIElements.TextureId atlas)
    void ReturnAtlas(::UnityEngine::UIElements::VisualElement* ve, ::UnityEngine::Texture2D* src, ::UnityEngine::UIElements::TextureId atlas);
    // protected override System.Void OnUpdateDynamicTextures(UnityEngine.UIElements.IPanel panel)
    // Offset: 0x55924D0
    // Implemented from: UnityEngine.UIElements.AtlasBase
    // Base method: System.Void AtlasBase::OnUpdateDynamicTextures(UnityEngine.UIElements.IPanel panel)
    void OnUpdateDynamicTextures(::UnityEngine::UIElements::IPanel* panel);
    // public System.Void .ctor()
    // Offset: 0x559278C
    // Implemented from: UnityEngine.UIElements.AtlasBase
    // Base method: System.Void AtlasBase::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static DynamicAtlas* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::DynamicAtlas::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<DynamicAtlas*, creationType>()));
    }
  }; // UnityEngine.UIElements.DynamicAtlas
  #pragma pack(pop)
  static check_size<sizeof(DynamicAtlas), 80 + sizeof(::UnityEngine::UIElements::DynamicAtlasCustomFilter*)> __UnityEngine_UIElements_DynamicAtlasSizeCheck;
  static_assert(sizeof(DynamicAtlas) == 0x58);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::UIElements::DynamicAtlas::get_isInitialized
// Il2CppName: get_isInitialized
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::DynamicAtlas::*)()>(&UnityEngine::UIElements::DynamicAtlas::get_isInitialized)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::DynamicAtlas*), "get_isInitialized", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::DynamicAtlas::InitPages
// Il2CppName: InitPages
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::DynamicAtlas::*)()>(&UnityEngine::UIElements::DynamicAtlas::InitPages)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::DynamicAtlas*), "InitPages", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::DynamicAtlas::DestroyPages
// Il2CppName: DestroyPages
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::DynamicAtlas::*)()>(&UnityEngine::UIElements::DynamicAtlas::DestroyPages)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::DynamicAtlas*), "DestroyPages", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::DynamicAtlas::IsTextureFormatSupported
// Il2CppName: IsTextureFormatSupported
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::UnityEngine::TextureFormat)>(&UnityEngine::UIElements::DynamicAtlas::IsTextureFormatSupported)> {
  static const MethodInfo* get() {
    static auto* format = &::il2cpp_utils::GetClassFromName("UnityEngine", "TextureFormat")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::DynamicAtlas*), "IsTextureFormatSupported", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{format});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::DynamicAtlas::IsTextureValid
// Il2CppName: IsTextureValid
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::DynamicAtlas::*)(::UnityEngine::Texture2D*, ::UnityEngine::FilterMode)>(&UnityEngine::UIElements::DynamicAtlas::IsTextureValid)> {
  static const MethodInfo* get() {
    static auto* texture = &::il2cpp_utils::GetClassFromName("UnityEngine", "Texture2D")->byval_arg;
    static auto* atlasFilterMode = &::il2cpp_utils::GetClassFromName("UnityEngine", "FilterMode")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::DynamicAtlas*), "IsTextureValid", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{texture, atlasFilterMode});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::DynamicAtlas::set_minAtlasSize
// Il2CppName: set_minAtlasSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::DynamicAtlas::*)(int)>(&UnityEngine::UIElements::DynamicAtlas::set_minAtlasSize)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::DynamicAtlas*), "set_minAtlasSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::DynamicAtlas::set_maxAtlasSize
// Il2CppName: set_maxAtlasSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::DynamicAtlas::*)(int)>(&UnityEngine::UIElements::DynamicAtlas::set_maxAtlasSize)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::DynamicAtlas*), "set_maxAtlasSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::DynamicAtlas::get_defaultFilters
// Il2CppName: get_defaultFilters
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::DynamicAtlasFilters (*)()>(&UnityEngine::UIElements::DynamicAtlas::get_defaultFilters)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::DynamicAtlas*), "get_defaultFilters", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::DynamicAtlas::set_activeFilters
// Il2CppName: set_activeFilters
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::DynamicAtlas::*)(::UnityEngine::UIElements::DynamicAtlasFilters)>(&UnityEngine::UIElements::DynamicAtlas::set_activeFilters)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "DynamicAtlasFilters")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::DynamicAtlas*), "set_activeFilters", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::DynamicAtlas::get_maxSubTextureSize
// Il2CppName: get_maxSubTextureSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::UIElements::DynamicAtlas::*)()>(&UnityEngine::UIElements::DynamicAtlas::get_maxSubTextureSize)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::DynamicAtlas*), "get_maxSubTextureSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::DynamicAtlas::set_maxSubTextureSize
// Il2CppName: set_maxSubTextureSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::DynamicAtlas::*)(int)>(&UnityEngine::UIElements::DynamicAtlas::set_maxSubTextureSize)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::DynamicAtlas*), "set_maxSubTextureSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::DynamicAtlas::set_customFilter
// Il2CppName: set_customFilter
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::DynamicAtlas::*)(::UnityEngine::UIElements::DynamicAtlasCustomFilter*)>(&UnityEngine::UIElements::DynamicAtlas::set_customFilter)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "DynamicAtlasCustomFilter")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::DynamicAtlas*), "set_customFilter", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::DynamicAtlas::OnAssignedToPanel
// Il2CppName: OnAssignedToPanel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::DynamicAtlas::*)(::UnityEngine::UIElements::IPanel*)>(&UnityEngine::UIElements::DynamicAtlas::OnAssignedToPanel)> {
  static const MethodInfo* get() {
    static auto* panel = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "IPanel")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::DynamicAtlas*), "OnAssignedToPanel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{panel});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::DynamicAtlas::OnRemovedFromPanel
// Il2CppName: OnRemovedFromPanel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::DynamicAtlas::*)(::UnityEngine::UIElements::IPanel*)>(&UnityEngine::UIElements::DynamicAtlas::OnRemovedFromPanel)> {
  static const MethodInfo* get() {
    static auto* panel = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "IPanel")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::DynamicAtlas*), "OnRemovedFromPanel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{panel});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::DynamicAtlas::Reset
// Il2CppName: Reset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::DynamicAtlas::*)()>(&UnityEngine::UIElements::DynamicAtlas::Reset)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::DynamicAtlas*), "Reset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::DynamicAtlas::TryGetAtlas
// Il2CppName: TryGetAtlas
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::DynamicAtlas::*)(::UnityEngine::UIElements::VisualElement*, ::UnityEngine::Texture2D*, ByRef<::UnityEngine::UIElements::TextureId>, ByRef<::UnityEngine::RectInt>)>(&UnityEngine::UIElements::DynamicAtlas::TryGetAtlas)> {
  static const MethodInfo* get() {
    static auto* ve = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "VisualElement")->byval_arg;
    static auto* src = &::il2cpp_utils::GetClassFromName("UnityEngine", "Texture2D")->byval_arg;
    static auto* atlas = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "TextureId")->this_arg;
    static auto* atlasRect = &::il2cpp_utils::GetClassFromName("UnityEngine", "RectInt")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::DynamicAtlas*), "TryGetAtlas", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ve, src, atlas, atlasRect});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::DynamicAtlas::ReturnAtlas
// Il2CppName: ReturnAtlas
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::DynamicAtlas::*)(::UnityEngine::UIElements::VisualElement*, ::UnityEngine::Texture2D*, ::UnityEngine::UIElements::TextureId)>(&UnityEngine::UIElements::DynamicAtlas::ReturnAtlas)> {
  static const MethodInfo* get() {
    static auto* ve = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "VisualElement")->byval_arg;
    static auto* src = &::il2cpp_utils::GetClassFromName("UnityEngine", "Texture2D")->byval_arg;
    static auto* atlas = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "TextureId")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::DynamicAtlas*), "ReturnAtlas", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ve, src, atlas});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::DynamicAtlas::OnUpdateDynamicTextures
// Il2CppName: OnUpdateDynamicTextures
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::DynamicAtlas::*)(::UnityEngine::UIElements::IPanel*)>(&UnityEngine::UIElements::DynamicAtlas::OnUpdateDynamicTextures)> {
  static const MethodInfo* get() {
    static auto* panel = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "IPanel")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::DynamicAtlas*), "OnUpdateDynamicTextures", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{panel});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::DynamicAtlas::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
