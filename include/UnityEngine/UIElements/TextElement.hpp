// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.UIElements.BindableElement
#include "UnityEngine/UIElements/BindableElement.hpp"
// Including type: UnityEngine.UIElements.INotifyValueChanged`1
#include "UnityEngine/UIElements/INotifyValueChanged_1.hpp"
// Including type: UnityEngine.UIElements.ITextEdition
#include "UnityEngine/UIElements/ITextEdition.hpp"
// Including type: UnityEngine.UIElements.ITextSelection
#include "UnityEngine/UIElements/ITextSelection.hpp"
// Including type: UnityEngine.TouchScreenKeyboardType
#include "UnityEngine/TouchScreenKeyboardType.hpp"
// Including type: UnityEngine.UIElements.DropdownMenuAction
#include "UnityEngine/UIElements/DropdownMenuAction.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::UIElements
namespace UnityEngine::UIElements {
  // Forward declaring type: UITKTextHandle
  class UITKTextHandle;
  // Forward declaring type: TextEditingManipulator
  class TextEditingManipulator;
  // Forward declaring type: TextSelectingManipulator
  class TextSelectingManipulator;
  // Forward declaring type: GeometryChangedEvent
  class GeometryChangedEvent;
  // Forward declaring type: MeshGenerationContext
  class MeshGenerationContext;
  // Skipping declaration: TextOverflowPosition because it is already included!
  // Forward declaring type: EventBase
  class EventBase;
  // Forward declaring type: ContextualMenuPopulateEvent
  class ContextualMenuPopulateEvent;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: TouchScreenKeyboard
  class TouchScreenKeyboard;
  // Skipping declaration: Vector2 because it is already included!
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Func`2<T, TResult>
  template<typename T, typename TResult>
  class Func_2;
  // Forward declaring type: Action`1<T>
  template<typename T>
  class Action_1;
  // Forward declaring type: Action
  class Action;
}
// Completed forward declares
// Type namespace: UnityEngine.UIElements
namespace UnityEngine::UIElements {
  // Forward declaring type: TextElement
  class TextElement;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::UIElements::TextElement);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::UIElements::TextElement*, "UnityEngine.UIElements", "TextElement");
// Type namespace: UnityEngine.UIElements
namespace UnityEngine::UIElements {
  // WARNING Size may be invalid!
  // Autogenerated type: UnityEngine.UIElements.TextElement
  // [TokenAttribute] Offset: FFFFFFFF
  class TextElement : public ::UnityEngine::UIElements::BindableElement/*, public ::UnityEngine::UIElements::INotifyValueChanged_1<::StringW>, public ::UnityEngine::UIElements::ITextEdition, public ::UnityEngine::UIElements::ITextSelection*/ {
    public:
    // Nested type: ::UnityEngine::UIElements::TextElement::UxmlFactory
    class UxmlFactory;
    // Nested type: ::UnityEngine::UIElements::TextElement::UxmlTraits
    class UxmlTraits;
    public:
    // private UnityEngine.UIElements.UITKTextHandle <uitkTextHandle>k__BackingField
    // Size: 0x8
    // Offset: 0x3D0
    ::UnityEngine::UIElements::UITKTextHandle* uitkTextHandle;
    // Field size check
    static_assert(sizeof(::UnityEngine::UIElements::UITKTextHandle*) == 0x8);
    // private System.String m_Text
    // Size: 0x8
    // Offset: 0x3D8
    ::StringW m_Text;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private System.Boolean m_EnableRichText
    // Size: 0x1
    // Offset: 0x3E0
    bool m_EnableRichText;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean m_ParseEscapeSequences
    // Size: 0x1
    // Offset: 0x3E1
    bool m_ParseEscapeSequences;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean m_DisplayTooltipWhenElided
    // Size: 0x1
    // Offset: 0x3E2
    bool m_DisplayTooltipWhenElided;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean <isElided>k__BackingField
    // Size: 0x1
    // Offset: 0x3E3
    bool isElided;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // System.String elidedText
    // Size: 0x8
    // Offset: 0x3E8
    ::StringW elidedText;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private System.Boolean m_WasElided
    // Size: 0x1
    // Offset: 0x3F0
    bool m_WasElided;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // UnityEngine.UIElements.TextEditingManipulator editingManipulator
    // Size: 0x8
    // Offset: 0x3F8
    ::UnityEngine::UIElements::TextEditingManipulator* editingManipulator;
    // Field size check
    static_assert(sizeof(::UnityEngine::UIElements::TextEditingManipulator*) == 0x8);
    // private System.Boolean m_Multiline
    // Size: 0x1
    // Offset: 0x400
    bool m_Multiline;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // UnityEngine.TouchScreenKeyboard m_TouchScreenKeyboard
    // Size: 0x8
    // Offset: 0x408
    ::UnityEngine::TouchScreenKeyboard* m_TouchScreenKeyboard;
    // Field size check
    static_assert(sizeof(::UnityEngine::TouchScreenKeyboard*) == 0x8);
    // UnityEngine.TouchScreenKeyboardType m_KeyboardType
    // Size: 0x4
    // Offset: 0x410
    ::UnityEngine::TouchScreenKeyboardType m_KeyboardType;
    // Field size check
    static_assert(sizeof(::UnityEngine::TouchScreenKeyboardType) == 0x4);
    // private System.Boolean m_HideMobileInput
    // Size: 0x1
    // Offset: 0x414
    bool m_HideMobileInput;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean m_IsReadOnly
    // Size: 0x1
    // Offset: 0x415
    bool m_IsReadOnly;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Int32 m_MaxLength
    // Size: 0x4
    // Offset: 0x418
    int m_MaxLength;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private System.Boolean <UnityEngine.UIElements.ITextEdition.isDelayed>k__BackingField
    // Size: 0x1
    // Offset: 0x41C
    bool isDelayed;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Func`2<System.Char,System.Boolean> <UnityEngine.UIElements.ITextEdition.AcceptCharacter>k__BackingField
    // Size: 0x8
    // Offset: 0x420
    ::System::Func_2<::Il2CppChar, bool>* AcceptCharacter;
    // Field size check
    static_assert(sizeof(::System::Func_2<::Il2CppChar, bool>*) == 0x8);
    // private System.Action`1<System.Boolean> <UnityEngine.UIElements.ITextEdition.UpdateScrollOffset>k__BackingField
    // Size: 0x8
    // Offset: 0x428
    ::System::Action_1<bool>* UpdateScrollOffset;
    // Field size check
    static_assert(sizeof(::System::Action_1<bool>*) == 0x8);
    // private System.Action <UnityEngine.UIElements.ITextEdition.UpdateValueFromText>k__BackingField
    // Size: 0x8
    // Offset: 0x430
    ::System::Action* UpdateValueFromText;
    // Field size check
    static_assert(sizeof(::System::Action*) == 0x8);
    // private System.Action <UnityEngine.UIElements.ITextEdition.UpdateTextFromValue>k__BackingField
    // Size: 0x8
    // Offset: 0x438
    ::System::Action* UpdateTextFromValue;
    // Field size check
    static_assert(sizeof(::System::Action*) == 0x8);
    // private System.Action <UnityEngine.UIElements.ITextEdition.MoveFocusToCompositeRoot>k__BackingField
    // Size: 0x8
    // Offset: 0x440
    ::System::Action* MoveFocusToCompositeRoot;
    // Field size check
    static_assert(sizeof(::System::Action*) == 0x8);
    // private System.String m_RenderedText
    // Size: 0x8
    // Offset: 0x448
    ::StringW m_RenderedText;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private System.String m_OriginalText
    // Size: 0x8
    // Offset: 0x450
    ::StringW m_OriginalText;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private System.Char m_MaskChar
    // Size: 0x2
    // Offset: 0x458
    ::Il2CppChar m_MaskChar;
    // Field size check
    static_assert(sizeof(::Il2CppChar) == 0x2);
    // private System.Boolean m_IsPassword
    // Size: 0x1
    // Offset: 0x45A
    bool m_IsPassword;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean m_AutoCorrection
    // Size: 0x1
    // Offset: 0x45B
    bool m_AutoCorrection;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private UnityEngine.UIElements.TextSelectingManipulator m_SelectingManipulator
    // Size: 0x8
    // Offset: 0x460
    ::UnityEngine::UIElements::TextSelectingManipulator* m_SelectingManipulator;
    // Field size check
    static_assert(sizeof(::UnityEngine::UIElements::TextSelectingManipulator*) == 0x8);
    // private System.Boolean m_IsSelectable
    // Size: 0x1
    // Offset: 0x468
    bool m_IsSelectable;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean <UnityEngine.UIElements.ITextSelection.doubleClickSelectsWord>k__BackingField
    // Size: 0x1
    // Offset: 0x469
    bool doubleClickSelectsWord;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean <UnityEngine.UIElements.ITextSelection.tripleClickSelectsLine>k__BackingField
    // Size: 0x1
    // Offset: 0x46A
    bool tripleClickSelectsLine;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean <UnityEngine.UIElements.ITextSelection.selectAllOnFocus>k__BackingField
    // Size: 0x1
    // Offset: 0x46B
    bool selectAllOnFocus;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean <UnityEngine.UIElements.ITextSelection.selectAllOnMouseUp>k__BackingField
    // Size: 0x1
    // Offset: 0x46C
    bool selectAllOnMouseUp;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private UnityEngine.Color m_SelectionColor
    // Size: 0x10
    // Offset: 0x470
    ::UnityEngine::Color m_SelectionColor;
    // Field size check
    static_assert(sizeof(::UnityEngine::Color) == 0x10);
    // private UnityEngine.Color m_CursorColor
    // Size: 0x10
    // Offset: 0x480
    ::UnityEngine::Color m_CursorColor;
    // Field size check
    static_assert(sizeof(::UnityEngine::Color) == 0x10);
    // private System.Single m_CursorWidth
    // Size: 0x4
    // Offset: 0x490
    float m_CursorWidth;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    public:
    // Creating interface conversion operator: operator ::UnityEngine::UIElements::INotifyValueChanged_1<::StringW>
    operator ::UnityEngine::UIElements::INotifyValueChanged_1<::StringW>() noexcept {
      return *reinterpret_cast<::UnityEngine::UIElements::INotifyValueChanged_1<::StringW>*>(this);
    }
    // Creating interface conversion operator: operator ::UnityEngine::UIElements::ITextEdition
    operator ::UnityEngine::UIElements::ITextEdition() noexcept {
      return *reinterpret_cast<::UnityEngine::UIElements::ITextEdition*>(this);
    }
    // Creating interface conversion operator: operator ::UnityEngine::UIElements::ITextSelection
    operator ::UnityEngine::UIElements::ITextSelection() noexcept {
      return *reinterpret_cast<::UnityEngine::UIElements::ITextSelection*>(this);
    }
    // Get static field: static public readonly System.String ussClassName
    static ::StringW _get_ussClassName();
    // Set static field: static public readonly System.String ussClassName
    static void _set_ussClassName(::StringW value);
    // Get static field: static readonly System.String k_EllipsisText
    static ::StringW _get_k_EllipsisText();
    // Set static field: static readonly System.String k_EllipsisText
    static void _set_k_EllipsisText(::StringW value);
    // Get instance field reference: private UnityEngine.UIElements.UITKTextHandle <uitkTextHandle>k__BackingField
    [[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::UITKTextHandle*& dyn_$uitkTextHandle$k__BackingField();
    // Get instance field reference: private System.String m_Text
    [[deprecated("Use field access instead!")]] ::StringW& dyn_m_Text();
    // Get instance field reference: private System.Boolean m_EnableRichText
    [[deprecated("Use field access instead!")]] bool& dyn_m_EnableRichText();
    // Get instance field reference: private System.Boolean m_ParseEscapeSequences
    [[deprecated("Use field access instead!")]] bool& dyn_m_ParseEscapeSequences();
    // Get instance field reference: private System.Boolean m_DisplayTooltipWhenElided
    [[deprecated("Use field access instead!")]] bool& dyn_m_DisplayTooltipWhenElided();
    // Get instance field reference: private System.Boolean <isElided>k__BackingField
    [[deprecated("Use field access instead!")]] bool& dyn_$isElided$k__BackingField();
    // Get instance field reference: System.String elidedText
    [[deprecated("Use field access instead!")]] ::StringW& dyn_elidedText();
    // Get instance field reference: private System.Boolean m_WasElided
    [[deprecated("Use field access instead!")]] bool& dyn_m_WasElided();
    // Get instance field reference: UnityEngine.UIElements.TextEditingManipulator editingManipulator
    [[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::TextEditingManipulator*& dyn_editingManipulator();
    // Get instance field reference: private System.Boolean m_Multiline
    [[deprecated("Use field access instead!")]] bool& dyn_m_Multiline();
    // Get instance field reference: UnityEngine.TouchScreenKeyboard m_TouchScreenKeyboard
    [[deprecated("Use field access instead!")]] ::UnityEngine::TouchScreenKeyboard*& dyn_m_TouchScreenKeyboard();
    // Get instance field reference: UnityEngine.TouchScreenKeyboardType m_KeyboardType
    [[deprecated("Use field access instead!")]] ::UnityEngine::TouchScreenKeyboardType& dyn_m_KeyboardType();
    // Get instance field reference: private System.Boolean m_HideMobileInput
    [[deprecated("Use field access instead!")]] bool& dyn_m_HideMobileInput();
    // Get instance field reference: private System.Boolean m_IsReadOnly
    [[deprecated("Use field access instead!")]] bool& dyn_m_IsReadOnly();
    // Get instance field reference: private System.Int32 m_MaxLength
    [[deprecated("Use field access instead!")]] int& dyn_m_MaxLength();
    // Get instance field reference: private System.Boolean <UnityEngine.UIElements.ITextEdition.isDelayed>k__BackingField
    [[deprecated("Use field access instead!")]] bool& dyn_$UnityEngine_UIElements_ITextEdition_isDelayed$k__BackingField();
    // Get instance field reference: private System.Func`2<System.Char,System.Boolean> <UnityEngine.UIElements.ITextEdition.AcceptCharacter>k__BackingField
    [[deprecated("Use field access instead!")]] ::System::Func_2<::Il2CppChar, bool>*& dyn_$UnityEngine_UIElements_ITextEdition_AcceptCharacter$k__BackingField();
    // Get instance field reference: private System.Action`1<System.Boolean> <UnityEngine.UIElements.ITextEdition.UpdateScrollOffset>k__BackingField
    [[deprecated("Use field access instead!")]] ::System::Action_1<bool>*& dyn_$UnityEngine_UIElements_ITextEdition_UpdateScrollOffset$k__BackingField();
    // Get instance field reference: private System.Action <UnityEngine.UIElements.ITextEdition.UpdateValueFromText>k__BackingField
    [[deprecated("Use field access instead!")]] ::System::Action*& dyn_$UnityEngine_UIElements_ITextEdition_UpdateValueFromText$k__BackingField();
    // Get instance field reference: private System.Action <UnityEngine.UIElements.ITextEdition.UpdateTextFromValue>k__BackingField
    [[deprecated("Use field access instead!")]] ::System::Action*& dyn_$UnityEngine_UIElements_ITextEdition_UpdateTextFromValue$k__BackingField();
    // Get instance field reference: private System.Action <UnityEngine.UIElements.ITextEdition.MoveFocusToCompositeRoot>k__BackingField
    [[deprecated("Use field access instead!")]] ::System::Action*& dyn_$UnityEngine_UIElements_ITextEdition_MoveFocusToCompositeRoot$k__BackingField();
    // Get instance field reference: private System.String m_RenderedText
    [[deprecated("Use field access instead!")]] ::StringW& dyn_m_RenderedText();
    // Get instance field reference: private System.String m_OriginalText
    [[deprecated("Use field access instead!")]] ::StringW& dyn_m_OriginalText();
    // Get instance field reference: private System.Char m_MaskChar
    [[deprecated("Use field access instead!")]] ::Il2CppChar& dyn_m_MaskChar();
    // Get instance field reference: private System.Boolean m_IsPassword
    [[deprecated("Use field access instead!")]] bool& dyn_m_IsPassword();
    // Get instance field reference: private System.Boolean m_AutoCorrection
    [[deprecated("Use field access instead!")]] bool& dyn_m_AutoCorrection();
    // Get instance field reference: private UnityEngine.UIElements.TextSelectingManipulator m_SelectingManipulator
    [[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::TextSelectingManipulator*& dyn_m_SelectingManipulator();
    // Get instance field reference: private System.Boolean m_IsSelectable
    [[deprecated("Use field access instead!")]] bool& dyn_m_IsSelectable();
    // Get instance field reference: private System.Boolean <UnityEngine.UIElements.ITextSelection.doubleClickSelectsWord>k__BackingField
    [[deprecated("Use field access instead!")]] bool& dyn_$UnityEngine_UIElements_ITextSelection_doubleClickSelectsWord$k__BackingField();
    // Get instance field reference: private System.Boolean <UnityEngine.UIElements.ITextSelection.tripleClickSelectsLine>k__BackingField
    [[deprecated("Use field access instead!")]] bool& dyn_$UnityEngine_UIElements_ITextSelection_tripleClickSelectsLine$k__BackingField();
    // Get instance field reference: private System.Boolean <UnityEngine.UIElements.ITextSelection.selectAllOnFocus>k__BackingField
    [[deprecated("Use field access instead!")]] bool& dyn_$UnityEngine_UIElements_ITextSelection_selectAllOnFocus$k__BackingField();
    // Get instance field reference: private System.Boolean <UnityEngine.UIElements.ITextSelection.selectAllOnMouseUp>k__BackingField
    [[deprecated("Use field access instead!")]] bool& dyn_$UnityEngine_UIElements_ITextSelection_selectAllOnMouseUp$k__BackingField();
    // Get instance field reference: private UnityEngine.Color m_SelectionColor
    [[deprecated("Use field access instead!")]] ::UnityEngine::Color& dyn_m_SelectionColor();
    // Get instance field reference: private UnityEngine.Color m_CursorColor
    [[deprecated("Use field access instead!")]] ::UnityEngine::Color& dyn_m_CursorColor();
    // Get instance field reference: private System.Single m_CursorWidth
    [[deprecated("Use field access instead!")]] float& dyn_m_CursorWidth();
    // UnityEngine.UIElements.UITKTextHandle get_uitkTextHandle()
    // Offset: 0x56B9958
    ::UnityEngine::UIElements::UITKTextHandle* get_uitkTextHandle();
    // System.Void set_uitkTextHandle(UnityEngine.UIElements.UITKTextHandle value)
    // Offset: 0x56B9960
    void set_uitkTextHandle(::UnityEngine::UIElements::UITKTextHandle* value);
    // private System.Void OnGeometryChanged(UnityEngine.UIElements.GeometryChangedEvent e)
    // Offset: 0x56B9970
    void OnGeometryChanged(::UnityEngine::UIElements::GeometryChangedEvent* e);
    // public System.String get_text()
    // Offset: 0x56B9A98
    ::StringW get_text();
    // public System.Void set_text(System.String value)
    // Offset: 0x56B9B2C
    void set_text(::StringW value);
    // public System.Boolean get_enableRichText()
    // Offset: 0x56B9BD4
    bool get_enableRichText();
    // public System.Void set_enableRichText(System.Boolean value)
    // Offset: 0x56B9BDC
    void set_enableRichText(bool value);
    // public System.Boolean get_parseEscapeSequences()
    // Offset: 0x56B9BFC
    bool get_parseEscapeSequences();
    // public System.Boolean get_displayTooltipWhenElided()
    // Offset: 0x56B9C04
    bool get_displayTooltipWhenElided();
    // public System.Void set_displayTooltipWhenElided(System.Boolean value)
    // Offset: 0x56B9C0C
    void set_displayTooltipWhenElided(bool value);
    // public System.Boolean get_isElided()
    // Offset: 0x56B9C44
    bool get_isElided();
    // private System.Void set_isElided(System.Boolean value)
    // Offset: 0x56B9C4C
    void set_isElided(bool value);
    // System.Void OnGenerateVisualContent(UnityEngine.UIElements.MeshGenerationContext mgc)
    // Offset: 0x56B9C58
    void OnGenerateVisualContent(::UnityEngine::UIElements::MeshGenerationContext* mgc);
    // System.String ElideText(System.String drawText, System.String ellipsisText, System.Single width, UnityEngine.UIElements.TextOverflowPosition textOverflowPosition)
    // Offset: 0x56BAF5C
    ::StringW ElideText(::StringW drawText, ::StringW ellipsisText, float width, ::UnityEngine::UIElements::TextOverflowPosition textOverflowPosition);
    // private System.Void UpdateTooltip()
    // Offset: 0x56B9EE0
    void UpdateTooltip();
    // private System.Void UpdateVisibleText()
    // Offset: 0x56B9974
    void UpdateVisibleText();
    // private System.Boolean ShouldElide()
    // Offset: 0x56B9E94
    bool ShouldElide();
    // System.Boolean get_hasFocus()
    // Offset: 0x56B5914
    bool get_hasFocus();
    // public UnityEngine.Vector2 MeasureTextSize(System.String textToMeasure, System.Single width, UnityEngine.UIElements.VisualElement/MeasureMode widthMode, System.Single height, UnityEngine.UIElements.VisualElement/MeasureMode heightMode)
    // Offset: 0x56BB3BC
    ::UnityEngine::Vector2 MeasureTextSize(::StringW textToMeasure, float width, ::UnityEngine::UIElements::VisualElement::MeasureMode widthMode, float height, ::UnityEngine::UIElements::VisualElement::MeasureMode heightMode);
    // private System.String UnityEngine.UIElements.INotifyValueChanged<System.String>.get_value()
    // Offset: 0x56BB40C
    ::StringW UnityEngine_UIElements_INotifyValueChanged$System_String$_get_value();
    // private System.Void UnityEngine.UIElements.INotifyValueChanged<System.String>.set_value(System.String value)
    // Offset: 0x56BB460
    void UnityEngine_UIElements_INotifyValueChanged$System_String$_set_value(::StringW value);
    // private System.Void UnityEngine.UIElements.INotifyValueChanged<System.String>.SetValueWithoutNotify(System.String newValue)
    // Offset: 0x56BB75C
    void UnityEngine_UIElements_INotifyValueChanged$System_String$_SetValueWithoutNotify(::StringW newValue);
    // UnityEngine.UIElements.ITextEdition get_edition()
    // Offset: 0x56B4F44
    ::UnityEngine::UIElements::ITextEdition* get_edition();
    // private System.Boolean UnityEngine.UIElements.ITextEdition.get_multiline()
    // Offset: 0x56BB90C
    bool UnityEngine_UIElements_ITextEdition_get_multiline();
    // private System.Void UnityEngine.UIElements.ITextEdition.set_multiline(System.Boolean value)
    // Offset: 0x56BB914
    void UnityEngine_UIElements_ITextEdition_set_multiline(bool value);
    // private UnityEngine.TouchScreenKeyboardType UnityEngine.UIElements.ITextEdition.get_keyboardType()
    // Offset: 0x56BB9E0
    ::UnityEngine::TouchScreenKeyboardType UnityEngine_UIElements_ITextEdition_get_keyboardType();
    // private System.Void UnityEngine.UIElements.ITextEdition.set_keyboardType(UnityEngine.TouchScreenKeyboardType value)
    // Offset: 0x56BB9E8
    void UnityEngine_UIElements_ITextEdition_set_keyboardType(::UnityEngine::TouchScreenKeyboardType value);
    // private System.Boolean UnityEngine.UIElements.ITextEdition.get_hideMobileInput()
    // Offset: 0x56BB9F0
    bool UnityEngine_UIElements_ITextEdition_get_hideMobileInput();
    // private System.Void UnityEngine.UIElements.ITextEdition.set_hideMobileInput(System.Boolean value)
    // Offset: 0x56BBA88
    void UnityEngine_UIElements_ITextEdition_set_hideMobileInput(bool value);
    // private System.Boolean UnityEngine.UIElements.ITextEdition.get_isReadOnly()
    // Offset: 0x56BBB24
    bool UnityEngine_UIElements_ITextEdition_get_isReadOnly();
    // private System.Void UnityEngine.UIElements.ITextEdition.set_isReadOnly(System.Boolean value)
    // Offset: 0x56BBB50
    void UnityEngine_UIElements_ITextEdition_set_isReadOnly(bool value);
    // private System.Void ProcessMenuCommand(System.String command)
    // Offset: 0x56BBBE0
    void ProcessMenuCommand(::StringW command);
    // private System.Void Cut(UnityEngine.UIElements.DropdownMenuAction a)
    // Offset: 0x56BBD8C
    void Cut(::UnityEngine::UIElements::DropdownMenuAction* a);
    // private System.Void Copy(UnityEngine.UIElements.DropdownMenuAction a)
    // Offset: 0x56BBDD4
    void Copy(::UnityEngine::UIElements::DropdownMenuAction* a);
    // private System.Void Paste(UnityEngine.UIElements.DropdownMenuAction a)
    // Offset: 0x56BBE1C
    void Paste(::UnityEngine::UIElements::DropdownMenuAction* a);
    // private System.Void BuildContextualMenu(UnityEngine.UIElements.ContextualMenuPopulateEvent evt)
    // Offset: 0x56BBE64
    void BuildContextualMenu(::UnityEngine::UIElements::ContextualMenuPopulateEvent* evt);
    // private UnityEngine.UIElements.DropdownMenuAction/Status CutActionStatus(UnityEngine.UIElements.DropdownMenuAction a)
    // Offset: 0x56BC1E4
    ::UnityEngine::UIElements::DropdownMenuAction::Status CutActionStatus(::UnityEngine::UIElements::DropdownMenuAction* a);
    // private UnityEngine.UIElements.DropdownMenuAction/Status CopyActionStatus(UnityEngine.UIElements.DropdownMenuAction a)
    // Offset: 0x56BC320
    ::UnityEngine::UIElements::DropdownMenuAction::Status CopyActionStatus(::UnityEngine::UIElements::DropdownMenuAction* a);
    // private UnityEngine.UIElements.DropdownMenuAction/Status PasteActionStatus(UnityEngine.UIElements.DropdownMenuAction a)
    // Offset: 0x56BC460
    ::UnityEngine::UIElements::DropdownMenuAction::Status PasteActionStatus(::UnityEngine::UIElements::DropdownMenuAction* a);
    // private System.Int32 UnityEngine.UIElements.ITextEdition.get_maxLength()
    // Offset: 0x56BC81C
    int UnityEngine_UIElements_ITextEdition_get_maxLength();
    // private System.Void UnityEngine.UIElements.ITextEdition.set_maxLength(System.Int32 value)
    // Offset: 0x56BC824
    void UnityEngine_UIElements_ITextEdition_set_maxLength(int value);
    // private System.Boolean UnityEngine.UIElements.ITextEdition.get_isDelayed()
    // Offset: 0x56BC900
    bool UnityEngine_UIElements_ITextEdition_get_isDelayed();
    // private System.Void UnityEngine.UIElements.ITextEdition.set_isDelayed(System.Boolean value)
    // Offset: 0x56BC908
    void UnityEngine_UIElements_ITextEdition_set_isDelayed(bool value);
    // private System.Void UnityEngine.UIElements.ITextEdition.ResetValueAndText()
    // Offset: 0x56BC914
    void UnityEngine_UIElements_ITextEdition_ResetValueAndText();
    // private System.Void UnityEngine.UIElements.ITextEdition.SaveValueAndText()
    // Offset: 0x56BC944
    void UnityEngine_UIElements_ITextEdition_SaveValueAndText();
    // private System.Void UnityEngine.UIElements.ITextEdition.RestoreValueAndText()
    // Offset: 0x56BC970
    void UnityEngine_UIElements_ITextEdition_RestoreValueAndText();
    // private System.Func`2<System.Char,System.Boolean> UnityEngine.UIElements.ITextEdition.get_AcceptCharacter()
    // Offset: 0x56BC984
    ::System::Func_2<::Il2CppChar, bool>* UnityEngine_UIElements_ITextEdition_get_AcceptCharacter();
    // private System.Void UnityEngine.UIElements.ITextEdition.set_AcceptCharacter(System.Func`2<System.Char,System.Boolean> value)
    // Offset: 0x56BC98C
    void UnityEngine_UIElements_ITextEdition_set_AcceptCharacter(::System::Func_2<::Il2CppChar, bool>* value);
    // private System.Action`1<System.Boolean> UnityEngine.UIElements.ITextEdition.get_UpdateScrollOffset()
    // Offset: 0x56BC99C
    ::System::Action_1<bool>* UnityEngine_UIElements_ITextEdition_get_UpdateScrollOffset();
    // private System.Void UnityEngine.UIElements.ITextEdition.set_UpdateScrollOffset(System.Action`1<System.Boolean> value)
    // Offset: 0x56BC9A4
    void UnityEngine_UIElements_ITextEdition_set_UpdateScrollOffset(::System::Action_1<bool>* value);
    // private System.Action UnityEngine.UIElements.ITextEdition.get_UpdateValueFromText()
    // Offset: 0x56BC9B4
    ::System::Action* UnityEngine_UIElements_ITextEdition_get_UpdateValueFromText();
    // private System.Void UnityEngine.UIElements.ITextEdition.set_UpdateValueFromText(System.Action value)
    // Offset: 0x56BC9BC
    void UnityEngine_UIElements_ITextEdition_set_UpdateValueFromText(::System::Action* value);
    // private System.Action UnityEngine.UIElements.ITextEdition.get_UpdateTextFromValue()
    // Offset: 0x56BC9CC
    ::System::Action* UnityEngine_UIElements_ITextEdition_get_UpdateTextFromValue();
    // private System.Void UnityEngine.UIElements.ITextEdition.set_UpdateTextFromValue(System.Action value)
    // Offset: 0x56BC9D4
    void UnityEngine_UIElements_ITextEdition_set_UpdateTextFromValue(::System::Action* value);
    // private System.Action UnityEngine.UIElements.ITextEdition.get_MoveFocusToCompositeRoot()
    // Offset: 0x56BC9E4
    ::System::Action* UnityEngine_UIElements_ITextEdition_get_MoveFocusToCompositeRoot();
    // private System.Void UnityEngine.UIElements.ITextEdition.set_MoveFocusToCompositeRoot(System.Action value)
    // Offset: 0x56BC9EC
    void UnityEngine_UIElements_ITextEdition_set_MoveFocusToCompositeRoot(::System::Action* value);
    // private System.Void UnityEngine.UIElements.ITextEdition.UpdateText(System.String value)
    // Offset: 0x56BC9FC
    void UnityEngine_UIElements_ITextEdition_UpdateText(::StringW value);
    // private System.String UnityEngine.UIElements.ITextEdition.CullString(System.String s)
    // Offset: 0x56BCCC8
    ::StringW UnityEngine_UIElements_ITextEdition_CullString(::StringW s);
    // private System.Void UnityEngine.UIElements.ITextEdition.set_maskChar(System.Char value)
    // Offset: 0x56BCDA4
    void UnityEngine_UIElements_ITextEdition_set_maskChar(::Il2CppChar value);
    // private System.Char get_effectiveMaskChar()
    // Offset: 0x56BCE70
    ::Il2CppChar get_effectiveMaskChar();
    // private System.Boolean UnityEngine.UIElements.ITextEdition.get_isPassword()
    // Offset: 0x56BCF24
    bool UnityEngine_UIElements_ITextEdition_get_isPassword();
    // private System.Void UnityEngine.UIElements.ITextEdition.set_isPassword(System.Boolean value)
    // Offset: 0x56BCF2C
    void UnityEngine_UIElements_ITextEdition_set_isPassword(bool value);
    // private System.Boolean UnityEngine.UIElements.ITextEdition.get_autoCorrection()
    // Offset: 0x56BCF50
    bool UnityEngine_UIElements_ITextEdition_get_autoCorrection();
    // private System.Void UnityEngine.UIElements.ITextEdition.set_autoCorrection(System.Boolean value)
    // Offset: 0x56BCF58
    void UnityEngine_UIElements_ITextEdition_set_autoCorrection(bool value);
    // System.String get_renderedText()
    // Offset: 0x56B8F2C
    ::StringW get_renderedText();
    // System.Void set_renderedText(System.String value)
    // Offset: 0x56BB8A4
    void set_renderedText(::StringW value);
    // System.String get_originalText()
    // Offset: 0x56BCF64
    ::StringW get_originalText();
    // public UnityEngine.UIElements.ITextSelection get_selection()
    // Offset: 0x56B67C4
    ::UnityEngine::UIElements::ITextSelection* get_selection();
    // private System.Boolean UnityEngine.UIElements.ITextSelection.get_isSelectable()
    // Offset: 0x56BCF6C
    bool UnityEngine_UIElements_ITextSelection_get_isSelectable();
    // private System.Void UnityEngine.UIElements.ITextSelection.set_isSelectable(System.Boolean value)
    // Offset: 0x56BCF8C
    void UnityEngine_UIElements_ITextSelection_set_isSelectable(bool value);
    // private System.Int32 UnityEngine.UIElements.ITextSelection.get_cursorIndex()
    // Offset: 0x56BCFA8
    int UnityEngine_UIElements_ITextSelection_get_cursorIndex();
    // private System.Void UnityEngine.UIElements.ITextSelection.set_cursorIndex(System.Int32 value)
    // Offset: 0x56BD074
    void UnityEngine_UIElements_ITextSelection_set_cursorIndex(int value);
    // private System.Int32 UnityEngine.UIElements.ITextSelection.get_selectIndex()
    // Offset: 0x56BD144
    int UnityEngine_UIElements_ITextSelection_get_selectIndex();
    // private System.Void UnityEngine.UIElements.ITextSelection.set_selectIndex(System.Int32 value)
    // Offset: 0x56BD210
    void UnityEngine_UIElements_ITextSelection_set_selectIndex(int value);
    // private System.Void UnityEngine.UIElements.ITextSelection.SelectAll()
    // Offset: 0x56BD2E0
    void UnityEngine_UIElements_ITextSelection_SelectAll();
    // private System.Void UnityEngine.UIElements.ITextSelection.SelectNone()
    // Offset: 0x56BD3A8
    void UnityEngine_UIElements_ITextSelection_SelectNone();
    // private System.Boolean UnityEngine.UIElements.ITextSelection.HasSelection()
    // Offset: 0x56BD470
    bool UnityEngine_UIElements_ITextSelection_HasSelection();
    // private System.Boolean UnityEngine.UIElements.ITextSelection.get_doubleClickSelectsWord()
    // Offset: 0x56BD53C
    bool UnityEngine_UIElements_ITextSelection_get_doubleClickSelectsWord();
    // private System.Boolean UnityEngine.UIElements.ITextSelection.get_tripleClickSelectsLine()
    // Offset: 0x56BD544
    bool UnityEngine_UIElements_ITextSelection_get_tripleClickSelectsLine();
    // private System.Boolean UnityEngine.UIElements.ITextSelection.get_selectAllOnFocus()
    // Offset: 0x56BD54C
    bool UnityEngine_UIElements_ITextSelection_get_selectAllOnFocus();
    // private System.Void UnityEngine.UIElements.ITextSelection.set_selectAllOnFocus(System.Boolean value)
    // Offset: 0x56BD554
    void UnityEngine_UIElements_ITextSelection_set_selectAllOnFocus(bool value);
    // private System.Boolean UnityEngine.UIElements.ITextSelection.get_selectAllOnMouseUp()
    // Offset: 0x56BD560
    bool UnityEngine_UIElements_ITextSelection_get_selectAllOnMouseUp();
    // private System.Void UnityEngine.UIElements.ITextSelection.set_selectAllOnMouseUp(System.Boolean value)
    // Offset: 0x56BD568
    void UnityEngine_UIElements_ITextSelection_set_selectAllOnMouseUp(bool value);
    // private UnityEngine.Vector2 UnityEngine.UIElements.ITextSelection.get_cursorPosition()
    // Offset: 0x56BD574
    ::UnityEngine::Vector2 UnityEngine_UIElements_ITextSelection_get_cursorPosition();
    // private System.Single UnityEngine.UIElements.ITextSelection.get_lineHeightAtCursorPosition()
    // Offset: 0x56BD658
    float UnityEngine_UIElements_ITextSelection_get_lineHeightAtCursorPosition();
    // private UnityEngine.Color UnityEngine.UIElements.ITextSelection.get_selectionColor()
    // Offset: 0x56BD70C
    ::UnityEngine::Color UnityEngine_UIElements_ITextSelection_get_selectionColor();
    // private System.Void UnityEngine.UIElements.ITextSelection.set_selectionColor(UnityEngine.Color value)
    // Offset: 0x56BD720
    void UnityEngine_UIElements_ITextSelection_set_selectionColor(::UnityEngine::Color value);
    // private UnityEngine.Color UnityEngine.UIElements.ITextSelection.get_cursorColor()
    // Offset: 0x56BD788
    ::UnityEngine::Color UnityEngine_UIElements_ITextSelection_get_cursorColor();
    // private System.Void UnityEngine.UIElements.ITextSelection.set_cursorColor(UnityEngine.Color value)
    // Offset: 0x56BD79C
    void UnityEngine_UIElements_ITextSelection_set_cursorColor(::UnityEngine::Color value);
    // private System.Single UnityEngine.UIElements.ITextSelection.get_cursorWidth()
    // Offset: 0x56BD804
    float UnityEngine_UIElements_ITextSelection_get_cursorWidth();
    // UnityEngine.UIElements.TextSelectingManipulator get_selectingManipulator()
    // Offset: 0x56B4C9C
    ::UnityEngine::UIElements::TextSelectingManipulator* get_selectingManipulator();
    // private System.Void DrawHighlighting(UnityEngine.UIElements.MeshGenerationContext mgc)
    // Offset: 0x56B9F4C
    void DrawHighlighting(::UnityEngine::UIElements::MeshGenerationContext* mgc);
    // System.Void DrawCaret(UnityEngine.UIElements.MeshGenerationContext mgc)
    // Offset: 0x56BAB14
    void DrawCaret(::UnityEngine::UIElements::MeshGenerationContext* mgc);
    // public System.Void .ctor()
    // Offset: 0x56B971C
    // Implemented from: UnityEngine.UIElements.BindableElement
    // Base method: System.Void BindableElement::.ctor()
    // Base method: System.Void VisualElement::.ctor()
    // Base method: System.Void Focusable::.ctor()
    // Base method: System.Void CallbackEventHandler::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static TextElement* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::TextElement::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<TextElement*, creationType>()));
    }
    // protected internal override UnityEngine.Vector2 DoMeasure(System.Single desiredWidth, UnityEngine.UIElements.VisualElement/MeasureMode widthMode, System.Single desiredHeight, UnityEngine.UIElements.VisualElement/MeasureMode heightMode)
    // Offset: 0x56BB3C0
    // Implemented from: UnityEngine.UIElements.VisualElement
    // Base method: UnityEngine.Vector2 VisualElement::DoMeasure(System.Single desiredWidth, UnityEngine.UIElements.VisualElement/MeasureMode widthMode, System.Single desiredHeight, UnityEngine.UIElements.VisualElement/MeasureMode heightMode)
    ::UnityEngine::Vector2 DoMeasure(float desiredWidth, ::UnityEngine::UIElements::VisualElement::MeasureMode widthMode, float desiredHeight, ::UnityEngine::UIElements::VisualElement::MeasureMode heightMode);
    // protected override System.Void ExecuteDefaultActionAtTarget(UnityEngine.UIElements.EventBase evt)
    // Offset: 0x56BC4BC
    // Implemented from: UnityEngine.UIElements.CallbackEventHandler
    // Base method: System.Void CallbackEventHandler::ExecuteDefaultActionAtTarget(UnityEngine.UIElements.EventBase evt)
    void ExecuteDefaultActionAtTarget(::UnityEngine::UIElements::EventBase* evt);
    // static private System.Void .cctor()
    // Offset: 0x56BD80C
    // Implemented from: UnityEngine.UIElements.VisualElement
    // Base method: System.Void VisualElement::.cctor()
    static void _cctor();
  }; // UnityEngine.UIElements.TextElement
  // WARNING Not writing size check since size may be invalid!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::UIElements::TextElement::get_uitkTextHandle
// Il2CppName: get_uitkTextHandle
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::UITKTextHandle* (UnityEngine::UIElements::TextElement::*)()>(&UnityEngine::UIElements::TextElement::get_uitkTextHandle)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::TextElement*), "get_uitkTextHandle", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::TextElement::set_uitkTextHandle
// Il2CppName: set_uitkTextHandle
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::TextElement::*)(::UnityEngine::UIElements::UITKTextHandle*)>(&UnityEngine::UIElements::TextElement::set_uitkTextHandle)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "UITKTextHandle")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::TextElement*), "set_uitkTextHandle", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::TextElement::OnGeometryChanged
// Il2CppName: OnGeometryChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::TextElement::*)(::UnityEngine::UIElements::GeometryChangedEvent*)>(&UnityEngine::UIElements::TextElement::OnGeometryChanged)> {
  static const MethodInfo* get() {
    static auto* e = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "GeometryChangedEvent")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::TextElement*), "OnGeometryChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{e});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::TextElement::get_text
// Il2CppName: get_text
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (UnityEngine::UIElements::TextElement::*)()>(&UnityEngine::UIElements::TextElement::get_text)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::TextElement*), "get_text", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::TextElement::set_text
// Il2CppName: set_text
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::TextElement::*)(::StringW)>(&UnityEngine::UIElements::TextElement::set_text)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::TextElement*), "set_text", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::TextElement::get_enableRichText
// Il2CppName: get_enableRichText
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::TextElement::*)()>(&UnityEngine::UIElements::TextElement::get_enableRichText)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::TextElement*), "get_enableRichText", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::TextElement::set_enableRichText
// Il2CppName: set_enableRichText
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::TextElement::*)(bool)>(&UnityEngine::UIElements::TextElement::set_enableRichText)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::TextElement*), "set_enableRichText", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::TextElement::get_parseEscapeSequences
// Il2CppName: get_parseEscapeSequences
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::TextElement::*)()>(&UnityEngine::UIElements::TextElement::get_parseEscapeSequences)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::TextElement*), "get_parseEscapeSequences", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::TextElement::get_displayTooltipWhenElided
// Il2CppName: get_displayTooltipWhenElided
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::TextElement::*)()>(&UnityEngine::UIElements::TextElement::get_displayTooltipWhenElided)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::TextElement*), "get_displayTooltipWhenElided", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::TextElement::set_displayTooltipWhenElided
// Il2CppName: set_displayTooltipWhenElided
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::TextElement::*)(bool)>(&UnityEngine::UIElements::TextElement::set_displayTooltipWhenElided)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::TextElement*), "set_displayTooltipWhenElided", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::TextElement::get_isElided
// Il2CppName: get_isElided
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::TextElement::*)()>(&UnityEngine::UIElements::TextElement::get_isElided)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::TextElement*), "get_isElided", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::TextElement::set_isElided
// Il2CppName: set_isElided
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::TextElement::*)(bool)>(&UnityEngine::UIElements::TextElement::set_isElided)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::TextElement*), "set_isElided", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::TextElement::OnGenerateVisualContent
// Il2CppName: OnGenerateVisualContent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::TextElement::*)(::UnityEngine::UIElements::MeshGenerationContext*)>(&UnityEngine::UIElements::TextElement::OnGenerateVisualContent)> {
  static const MethodInfo* get() {
    static auto* mgc = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "MeshGenerationContext")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::TextElement*), "OnGenerateVisualContent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{mgc});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::TextElement::ElideText
// Il2CppName: ElideText
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (UnityEngine::UIElements::TextElement::*)(::StringW, ::StringW, float, ::UnityEngine::UIElements::TextOverflowPosition)>(&UnityEngine::UIElements::TextElement::ElideText)> {
  static const MethodInfo* get() {
    static auto* drawText = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* ellipsisText = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* width = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* textOverflowPosition = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "TextOverflowPosition")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::TextElement*), "ElideText", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{drawText, ellipsisText, width, textOverflowPosition});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::TextElement::UpdateTooltip
// Il2CppName: UpdateTooltip
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::TextElement::*)()>(&UnityEngine::UIElements::TextElement::UpdateTooltip)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::TextElement*), "UpdateTooltip", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::TextElement::UpdateVisibleText
// Il2CppName: UpdateVisibleText
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::TextElement::*)()>(&UnityEngine::UIElements::TextElement::UpdateVisibleText)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::TextElement*), "UpdateVisibleText", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::TextElement::ShouldElide
// Il2CppName: ShouldElide
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::TextElement::*)()>(&UnityEngine::UIElements::TextElement::ShouldElide)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::TextElement*), "ShouldElide", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::TextElement::get_hasFocus
// Il2CppName: get_hasFocus
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::TextElement::*)()>(&UnityEngine::UIElements::TextElement::get_hasFocus)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::TextElement*), "get_hasFocus", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::TextElement::MeasureTextSize
// Il2CppName: MeasureTextSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector2 (UnityEngine::UIElements::TextElement::*)(::StringW, float, ::UnityEngine::UIElements::VisualElement::MeasureMode, float, ::UnityEngine::UIElements::VisualElement::MeasureMode)>(&UnityEngine::UIElements::TextElement::MeasureTextSize)> {
  static const MethodInfo* get() {
    static auto* textToMeasure = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* width = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* widthMode = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "VisualElement/MeasureMode")->byval_arg;
    static auto* height = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* heightMode = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "VisualElement/MeasureMode")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::TextElement*), "MeasureTextSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{textToMeasure, width, widthMode, height, heightMode});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::TextElement::UnityEngine_UIElements_INotifyValueChanged$System_String$_get_value
// Il2CppName: UnityEngine.UIElements.INotifyValueChanged<System.String>.get_value
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (UnityEngine::UIElements::TextElement::*)()>(&UnityEngine::UIElements::TextElement::UnityEngine_UIElements_INotifyValueChanged$System_String$_get_value)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::TextElement*), "UnityEngine.UIElements.INotifyValueChanged<System.String>.get_value", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::TextElement::UnityEngine_UIElements_INotifyValueChanged$System_String$_set_value
// Il2CppName: UnityEngine.UIElements.INotifyValueChanged<System.String>.set_value
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::TextElement::*)(::StringW)>(&UnityEngine::UIElements::TextElement::UnityEngine_UIElements_INotifyValueChanged$System_String$_set_value)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::TextElement*), "UnityEngine.UIElements.INotifyValueChanged<System.String>.set_value", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::TextElement::UnityEngine_UIElements_INotifyValueChanged$System_String$_SetValueWithoutNotify
// Il2CppName: UnityEngine.UIElements.INotifyValueChanged<System.String>.SetValueWithoutNotify
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::TextElement::*)(::StringW)>(&UnityEngine::UIElements::TextElement::UnityEngine_UIElements_INotifyValueChanged$System_String$_SetValueWithoutNotify)> {
  static const MethodInfo* get() {
    static auto* newValue = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::TextElement*), "UnityEngine.UIElements.INotifyValueChanged<System.String>.SetValueWithoutNotify", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{newValue});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::TextElement::get_edition
// Il2CppName: get_edition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::ITextEdition* (UnityEngine::UIElements::TextElement::*)()>(&UnityEngine::UIElements::TextElement::get_edition)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::TextElement*), "get_edition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::TextElement::UnityEngine_UIElements_ITextEdition_get_multiline
// Il2CppName: UnityEngine.UIElements.ITextEdition.get_multiline
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::TextElement::*)()>(&UnityEngine::UIElements::TextElement::UnityEngine_UIElements_ITextEdition_get_multiline)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::TextElement*), "UnityEngine.UIElements.ITextEdition.get_multiline", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::TextElement::UnityEngine_UIElements_ITextEdition_set_multiline
// Il2CppName: UnityEngine.UIElements.ITextEdition.set_multiline
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::TextElement::*)(bool)>(&UnityEngine::UIElements::TextElement::UnityEngine_UIElements_ITextEdition_set_multiline)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::TextElement*), "UnityEngine.UIElements.ITextEdition.set_multiline", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::TextElement::UnityEngine_UIElements_ITextEdition_get_keyboardType
// Il2CppName: UnityEngine.UIElements.ITextEdition.get_keyboardType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::TouchScreenKeyboardType (UnityEngine::UIElements::TextElement::*)()>(&UnityEngine::UIElements::TextElement::UnityEngine_UIElements_ITextEdition_get_keyboardType)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::TextElement*), "UnityEngine.UIElements.ITextEdition.get_keyboardType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::TextElement::UnityEngine_UIElements_ITextEdition_set_keyboardType
// Il2CppName: UnityEngine.UIElements.ITextEdition.set_keyboardType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::TextElement::*)(::UnityEngine::TouchScreenKeyboardType)>(&UnityEngine::UIElements::TextElement::UnityEngine_UIElements_ITextEdition_set_keyboardType)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "TouchScreenKeyboardType")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::TextElement*), "UnityEngine.UIElements.ITextEdition.set_keyboardType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::TextElement::UnityEngine_UIElements_ITextEdition_get_hideMobileInput
// Il2CppName: UnityEngine.UIElements.ITextEdition.get_hideMobileInput
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::TextElement::*)()>(&UnityEngine::UIElements::TextElement::UnityEngine_UIElements_ITextEdition_get_hideMobileInput)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::TextElement*), "UnityEngine.UIElements.ITextEdition.get_hideMobileInput", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::TextElement::UnityEngine_UIElements_ITextEdition_set_hideMobileInput
// Il2CppName: UnityEngine.UIElements.ITextEdition.set_hideMobileInput
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::TextElement::*)(bool)>(&UnityEngine::UIElements::TextElement::UnityEngine_UIElements_ITextEdition_set_hideMobileInput)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::TextElement*), "UnityEngine.UIElements.ITextEdition.set_hideMobileInput", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::TextElement::UnityEngine_UIElements_ITextEdition_get_isReadOnly
// Il2CppName: UnityEngine.UIElements.ITextEdition.get_isReadOnly
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::TextElement::*)()>(&UnityEngine::UIElements::TextElement::UnityEngine_UIElements_ITextEdition_get_isReadOnly)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::TextElement*), "UnityEngine.UIElements.ITextEdition.get_isReadOnly", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::TextElement::UnityEngine_UIElements_ITextEdition_set_isReadOnly
// Il2CppName: UnityEngine.UIElements.ITextEdition.set_isReadOnly
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::TextElement::*)(bool)>(&UnityEngine::UIElements::TextElement::UnityEngine_UIElements_ITextEdition_set_isReadOnly)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::TextElement*), "UnityEngine.UIElements.ITextEdition.set_isReadOnly", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::TextElement::ProcessMenuCommand
// Il2CppName: ProcessMenuCommand
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::TextElement::*)(::StringW)>(&UnityEngine::UIElements::TextElement::ProcessMenuCommand)> {
  static const MethodInfo* get() {
    static auto* command = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::TextElement*), "ProcessMenuCommand", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{command});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::TextElement::Cut
// Il2CppName: Cut
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::TextElement::*)(::UnityEngine::UIElements::DropdownMenuAction*)>(&UnityEngine::UIElements::TextElement::Cut)> {
  static const MethodInfo* get() {
    static auto* a = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "DropdownMenuAction")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::TextElement*), "Cut", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{a});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::TextElement::Copy
// Il2CppName: Copy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::TextElement::*)(::UnityEngine::UIElements::DropdownMenuAction*)>(&UnityEngine::UIElements::TextElement::Copy)> {
  static const MethodInfo* get() {
    static auto* a = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "DropdownMenuAction")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::TextElement*), "Copy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{a});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::TextElement::Paste
// Il2CppName: Paste
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::TextElement::*)(::UnityEngine::UIElements::DropdownMenuAction*)>(&UnityEngine::UIElements::TextElement::Paste)> {
  static const MethodInfo* get() {
    static auto* a = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "DropdownMenuAction")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::TextElement*), "Paste", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{a});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::TextElement::BuildContextualMenu
// Il2CppName: BuildContextualMenu
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::TextElement::*)(::UnityEngine::UIElements::ContextualMenuPopulateEvent*)>(&UnityEngine::UIElements::TextElement::BuildContextualMenu)> {
  static const MethodInfo* get() {
    static auto* evt = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "ContextualMenuPopulateEvent")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::TextElement*), "BuildContextualMenu", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{evt});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::TextElement::CutActionStatus
// Il2CppName: CutActionStatus
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::DropdownMenuAction::Status (UnityEngine::UIElements::TextElement::*)(::UnityEngine::UIElements::DropdownMenuAction*)>(&UnityEngine::UIElements::TextElement::CutActionStatus)> {
  static const MethodInfo* get() {
    static auto* a = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "DropdownMenuAction")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::TextElement*), "CutActionStatus", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{a});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::TextElement::CopyActionStatus
// Il2CppName: CopyActionStatus
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::DropdownMenuAction::Status (UnityEngine::UIElements::TextElement::*)(::UnityEngine::UIElements::DropdownMenuAction*)>(&UnityEngine::UIElements::TextElement::CopyActionStatus)> {
  static const MethodInfo* get() {
    static auto* a = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "DropdownMenuAction")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::TextElement*), "CopyActionStatus", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{a});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::TextElement::PasteActionStatus
// Il2CppName: PasteActionStatus
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::DropdownMenuAction::Status (UnityEngine::UIElements::TextElement::*)(::UnityEngine::UIElements::DropdownMenuAction*)>(&UnityEngine::UIElements::TextElement::PasteActionStatus)> {
  static const MethodInfo* get() {
    static auto* a = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "DropdownMenuAction")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::TextElement*), "PasteActionStatus", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{a});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::TextElement::UnityEngine_UIElements_ITextEdition_get_maxLength
// Il2CppName: UnityEngine.UIElements.ITextEdition.get_maxLength
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::UIElements::TextElement::*)()>(&UnityEngine::UIElements::TextElement::UnityEngine_UIElements_ITextEdition_get_maxLength)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::TextElement*), "UnityEngine.UIElements.ITextEdition.get_maxLength", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::TextElement::UnityEngine_UIElements_ITextEdition_set_maxLength
// Il2CppName: UnityEngine.UIElements.ITextEdition.set_maxLength
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::TextElement::*)(int)>(&UnityEngine::UIElements::TextElement::UnityEngine_UIElements_ITextEdition_set_maxLength)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::TextElement*), "UnityEngine.UIElements.ITextEdition.set_maxLength", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::TextElement::UnityEngine_UIElements_ITextEdition_get_isDelayed
// Il2CppName: UnityEngine.UIElements.ITextEdition.get_isDelayed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::TextElement::*)()>(&UnityEngine::UIElements::TextElement::UnityEngine_UIElements_ITextEdition_get_isDelayed)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::TextElement*), "UnityEngine.UIElements.ITextEdition.get_isDelayed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::TextElement::UnityEngine_UIElements_ITextEdition_set_isDelayed
// Il2CppName: UnityEngine.UIElements.ITextEdition.set_isDelayed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::TextElement::*)(bool)>(&UnityEngine::UIElements::TextElement::UnityEngine_UIElements_ITextEdition_set_isDelayed)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::TextElement*), "UnityEngine.UIElements.ITextEdition.set_isDelayed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::TextElement::UnityEngine_UIElements_ITextEdition_ResetValueAndText
// Il2CppName: UnityEngine.UIElements.ITextEdition.ResetValueAndText
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::TextElement::*)()>(&UnityEngine::UIElements::TextElement::UnityEngine_UIElements_ITextEdition_ResetValueAndText)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::TextElement*), "UnityEngine.UIElements.ITextEdition.ResetValueAndText", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::TextElement::UnityEngine_UIElements_ITextEdition_SaveValueAndText
// Il2CppName: UnityEngine.UIElements.ITextEdition.SaveValueAndText
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::TextElement::*)()>(&UnityEngine::UIElements::TextElement::UnityEngine_UIElements_ITextEdition_SaveValueAndText)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::TextElement*), "UnityEngine.UIElements.ITextEdition.SaveValueAndText", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::TextElement::UnityEngine_UIElements_ITextEdition_RestoreValueAndText
// Il2CppName: UnityEngine.UIElements.ITextEdition.RestoreValueAndText
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::TextElement::*)()>(&UnityEngine::UIElements::TextElement::UnityEngine_UIElements_ITextEdition_RestoreValueAndText)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::TextElement*), "UnityEngine.UIElements.ITextEdition.RestoreValueAndText", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::TextElement::UnityEngine_UIElements_ITextEdition_get_AcceptCharacter
// Il2CppName: UnityEngine.UIElements.ITextEdition.get_AcceptCharacter
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Func_2<::Il2CppChar, bool>* (UnityEngine::UIElements::TextElement::*)()>(&UnityEngine::UIElements::TextElement::UnityEngine_UIElements_ITextEdition_get_AcceptCharacter)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::TextElement*), "UnityEngine.UIElements.ITextEdition.get_AcceptCharacter", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::TextElement::UnityEngine_UIElements_ITextEdition_set_AcceptCharacter
// Il2CppName: UnityEngine.UIElements.ITextEdition.set_AcceptCharacter
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::TextElement::*)(::System::Func_2<::Il2CppChar, bool>*)>(&UnityEngine::UIElements::TextElement::UnityEngine_UIElements_ITextEdition_set_AcceptCharacter)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Func`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Char"), ::il2cpp_utils::GetClassFromName("System", "Boolean")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::TextElement*), "UnityEngine.UIElements.ITextEdition.set_AcceptCharacter", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::TextElement::UnityEngine_UIElements_ITextEdition_get_UpdateScrollOffset
// Il2CppName: UnityEngine.UIElements.ITextEdition.get_UpdateScrollOffset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Action_1<bool>* (UnityEngine::UIElements::TextElement::*)()>(&UnityEngine::UIElements::TextElement::UnityEngine_UIElements_ITextEdition_get_UpdateScrollOffset)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::TextElement*), "UnityEngine.UIElements.ITextEdition.get_UpdateScrollOffset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::TextElement::UnityEngine_UIElements_ITextEdition_set_UpdateScrollOffset
// Il2CppName: UnityEngine.UIElements.ITextEdition.set_UpdateScrollOffset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::TextElement::*)(::System::Action_1<bool>*)>(&UnityEngine::UIElements::TextElement::UnityEngine_UIElements_ITextEdition_set_UpdateScrollOffset)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Boolean")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::TextElement*), "UnityEngine.UIElements.ITextEdition.set_UpdateScrollOffset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::TextElement::UnityEngine_UIElements_ITextEdition_get_UpdateValueFromText
// Il2CppName: UnityEngine.UIElements.ITextEdition.get_UpdateValueFromText
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Action* (UnityEngine::UIElements::TextElement::*)()>(&UnityEngine::UIElements::TextElement::UnityEngine_UIElements_ITextEdition_get_UpdateValueFromText)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::TextElement*), "UnityEngine.UIElements.ITextEdition.get_UpdateValueFromText", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::TextElement::UnityEngine_UIElements_ITextEdition_set_UpdateValueFromText
// Il2CppName: UnityEngine.UIElements.ITextEdition.set_UpdateValueFromText
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::TextElement::*)(::System::Action*)>(&UnityEngine::UIElements::TextElement::UnityEngine_UIElements_ITextEdition_set_UpdateValueFromText)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Action")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::TextElement*), "UnityEngine.UIElements.ITextEdition.set_UpdateValueFromText", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::TextElement::UnityEngine_UIElements_ITextEdition_get_UpdateTextFromValue
// Il2CppName: UnityEngine.UIElements.ITextEdition.get_UpdateTextFromValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Action* (UnityEngine::UIElements::TextElement::*)()>(&UnityEngine::UIElements::TextElement::UnityEngine_UIElements_ITextEdition_get_UpdateTextFromValue)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::TextElement*), "UnityEngine.UIElements.ITextEdition.get_UpdateTextFromValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::TextElement::UnityEngine_UIElements_ITextEdition_set_UpdateTextFromValue
// Il2CppName: UnityEngine.UIElements.ITextEdition.set_UpdateTextFromValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::TextElement::*)(::System::Action*)>(&UnityEngine::UIElements::TextElement::UnityEngine_UIElements_ITextEdition_set_UpdateTextFromValue)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Action")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::TextElement*), "UnityEngine.UIElements.ITextEdition.set_UpdateTextFromValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::TextElement::UnityEngine_UIElements_ITextEdition_get_MoveFocusToCompositeRoot
// Il2CppName: UnityEngine.UIElements.ITextEdition.get_MoveFocusToCompositeRoot
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Action* (UnityEngine::UIElements::TextElement::*)()>(&UnityEngine::UIElements::TextElement::UnityEngine_UIElements_ITextEdition_get_MoveFocusToCompositeRoot)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::TextElement*), "UnityEngine.UIElements.ITextEdition.get_MoveFocusToCompositeRoot", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::TextElement::UnityEngine_UIElements_ITextEdition_set_MoveFocusToCompositeRoot
// Il2CppName: UnityEngine.UIElements.ITextEdition.set_MoveFocusToCompositeRoot
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::TextElement::*)(::System::Action*)>(&UnityEngine::UIElements::TextElement::UnityEngine_UIElements_ITextEdition_set_MoveFocusToCompositeRoot)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Action")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::TextElement*), "UnityEngine.UIElements.ITextEdition.set_MoveFocusToCompositeRoot", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::TextElement::UnityEngine_UIElements_ITextEdition_UpdateText
// Il2CppName: UnityEngine.UIElements.ITextEdition.UpdateText
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::TextElement::*)(::StringW)>(&UnityEngine::UIElements::TextElement::UnityEngine_UIElements_ITextEdition_UpdateText)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::TextElement*), "UnityEngine.UIElements.ITextEdition.UpdateText", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::TextElement::UnityEngine_UIElements_ITextEdition_CullString
// Il2CppName: UnityEngine.UIElements.ITextEdition.CullString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (UnityEngine::UIElements::TextElement::*)(::StringW)>(&UnityEngine::UIElements::TextElement::UnityEngine_UIElements_ITextEdition_CullString)> {
  static const MethodInfo* get() {
    static auto* s = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::TextElement*), "UnityEngine.UIElements.ITextEdition.CullString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{s});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::TextElement::UnityEngine_UIElements_ITextEdition_set_maskChar
// Il2CppName: UnityEngine.UIElements.ITextEdition.set_maskChar
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::TextElement::*)(::Il2CppChar)>(&UnityEngine::UIElements::TextElement::UnityEngine_UIElements_ITextEdition_set_maskChar)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Char")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::TextElement*), "UnityEngine.UIElements.ITextEdition.set_maskChar", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::TextElement::get_effectiveMaskChar
// Il2CppName: get_effectiveMaskChar
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppChar (UnityEngine::UIElements::TextElement::*)()>(&UnityEngine::UIElements::TextElement::get_effectiveMaskChar)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::TextElement*), "get_effectiveMaskChar", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::TextElement::UnityEngine_UIElements_ITextEdition_get_isPassword
// Il2CppName: UnityEngine.UIElements.ITextEdition.get_isPassword
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::TextElement::*)()>(&UnityEngine::UIElements::TextElement::UnityEngine_UIElements_ITextEdition_get_isPassword)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::TextElement*), "UnityEngine.UIElements.ITextEdition.get_isPassword", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::TextElement::UnityEngine_UIElements_ITextEdition_set_isPassword
// Il2CppName: UnityEngine.UIElements.ITextEdition.set_isPassword
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::TextElement::*)(bool)>(&UnityEngine::UIElements::TextElement::UnityEngine_UIElements_ITextEdition_set_isPassword)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::TextElement*), "UnityEngine.UIElements.ITextEdition.set_isPassword", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::TextElement::UnityEngine_UIElements_ITextEdition_get_autoCorrection
// Il2CppName: UnityEngine.UIElements.ITextEdition.get_autoCorrection
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::TextElement::*)()>(&UnityEngine::UIElements::TextElement::UnityEngine_UIElements_ITextEdition_get_autoCorrection)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::TextElement*), "UnityEngine.UIElements.ITextEdition.get_autoCorrection", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::TextElement::UnityEngine_UIElements_ITextEdition_set_autoCorrection
// Il2CppName: UnityEngine.UIElements.ITextEdition.set_autoCorrection
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::TextElement::*)(bool)>(&UnityEngine::UIElements::TextElement::UnityEngine_UIElements_ITextEdition_set_autoCorrection)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::TextElement*), "UnityEngine.UIElements.ITextEdition.set_autoCorrection", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::TextElement::get_renderedText
// Il2CppName: get_renderedText
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (UnityEngine::UIElements::TextElement::*)()>(&UnityEngine::UIElements::TextElement::get_renderedText)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::TextElement*), "get_renderedText", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::TextElement::set_renderedText
// Il2CppName: set_renderedText
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::TextElement::*)(::StringW)>(&UnityEngine::UIElements::TextElement::set_renderedText)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::TextElement*), "set_renderedText", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::TextElement::get_originalText
// Il2CppName: get_originalText
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (UnityEngine::UIElements::TextElement::*)()>(&UnityEngine::UIElements::TextElement::get_originalText)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::TextElement*), "get_originalText", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::TextElement::get_selection
// Il2CppName: get_selection
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::ITextSelection* (UnityEngine::UIElements::TextElement::*)()>(&UnityEngine::UIElements::TextElement::get_selection)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::TextElement*), "get_selection", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::TextElement::UnityEngine_UIElements_ITextSelection_get_isSelectable
// Il2CppName: UnityEngine.UIElements.ITextSelection.get_isSelectable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::TextElement::*)()>(&UnityEngine::UIElements::TextElement::UnityEngine_UIElements_ITextSelection_get_isSelectable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::TextElement*), "UnityEngine.UIElements.ITextSelection.get_isSelectable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::TextElement::UnityEngine_UIElements_ITextSelection_set_isSelectable
// Il2CppName: UnityEngine.UIElements.ITextSelection.set_isSelectable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::TextElement::*)(bool)>(&UnityEngine::UIElements::TextElement::UnityEngine_UIElements_ITextSelection_set_isSelectable)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::TextElement*), "UnityEngine.UIElements.ITextSelection.set_isSelectable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::TextElement::UnityEngine_UIElements_ITextSelection_get_cursorIndex
// Il2CppName: UnityEngine.UIElements.ITextSelection.get_cursorIndex
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::UIElements::TextElement::*)()>(&UnityEngine::UIElements::TextElement::UnityEngine_UIElements_ITextSelection_get_cursorIndex)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::TextElement*), "UnityEngine.UIElements.ITextSelection.get_cursorIndex", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::TextElement::UnityEngine_UIElements_ITextSelection_set_cursorIndex
// Il2CppName: UnityEngine.UIElements.ITextSelection.set_cursorIndex
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::TextElement::*)(int)>(&UnityEngine::UIElements::TextElement::UnityEngine_UIElements_ITextSelection_set_cursorIndex)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::TextElement*), "UnityEngine.UIElements.ITextSelection.set_cursorIndex", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::TextElement::UnityEngine_UIElements_ITextSelection_get_selectIndex
// Il2CppName: UnityEngine.UIElements.ITextSelection.get_selectIndex
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::UIElements::TextElement::*)()>(&UnityEngine::UIElements::TextElement::UnityEngine_UIElements_ITextSelection_get_selectIndex)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::TextElement*), "UnityEngine.UIElements.ITextSelection.get_selectIndex", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::TextElement::UnityEngine_UIElements_ITextSelection_set_selectIndex
// Il2CppName: UnityEngine.UIElements.ITextSelection.set_selectIndex
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::TextElement::*)(int)>(&UnityEngine::UIElements::TextElement::UnityEngine_UIElements_ITextSelection_set_selectIndex)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::TextElement*), "UnityEngine.UIElements.ITextSelection.set_selectIndex", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::TextElement::UnityEngine_UIElements_ITextSelection_SelectAll
// Il2CppName: UnityEngine.UIElements.ITextSelection.SelectAll
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::TextElement::*)()>(&UnityEngine::UIElements::TextElement::UnityEngine_UIElements_ITextSelection_SelectAll)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::TextElement*), "UnityEngine.UIElements.ITextSelection.SelectAll", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::TextElement::UnityEngine_UIElements_ITextSelection_SelectNone
// Il2CppName: UnityEngine.UIElements.ITextSelection.SelectNone
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::TextElement::*)()>(&UnityEngine::UIElements::TextElement::UnityEngine_UIElements_ITextSelection_SelectNone)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::TextElement*), "UnityEngine.UIElements.ITextSelection.SelectNone", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::TextElement::UnityEngine_UIElements_ITextSelection_HasSelection
// Il2CppName: UnityEngine.UIElements.ITextSelection.HasSelection
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::TextElement::*)()>(&UnityEngine::UIElements::TextElement::UnityEngine_UIElements_ITextSelection_HasSelection)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::TextElement*), "UnityEngine.UIElements.ITextSelection.HasSelection", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::TextElement::UnityEngine_UIElements_ITextSelection_get_doubleClickSelectsWord
// Il2CppName: UnityEngine.UIElements.ITextSelection.get_doubleClickSelectsWord
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::TextElement::*)()>(&UnityEngine::UIElements::TextElement::UnityEngine_UIElements_ITextSelection_get_doubleClickSelectsWord)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::TextElement*), "UnityEngine.UIElements.ITextSelection.get_doubleClickSelectsWord", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::TextElement::UnityEngine_UIElements_ITextSelection_get_tripleClickSelectsLine
// Il2CppName: UnityEngine.UIElements.ITextSelection.get_tripleClickSelectsLine
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::TextElement::*)()>(&UnityEngine::UIElements::TextElement::UnityEngine_UIElements_ITextSelection_get_tripleClickSelectsLine)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::TextElement*), "UnityEngine.UIElements.ITextSelection.get_tripleClickSelectsLine", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::TextElement::UnityEngine_UIElements_ITextSelection_get_selectAllOnFocus
// Il2CppName: UnityEngine.UIElements.ITextSelection.get_selectAllOnFocus
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::TextElement::*)()>(&UnityEngine::UIElements::TextElement::UnityEngine_UIElements_ITextSelection_get_selectAllOnFocus)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::TextElement*), "UnityEngine.UIElements.ITextSelection.get_selectAllOnFocus", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::TextElement::UnityEngine_UIElements_ITextSelection_set_selectAllOnFocus
// Il2CppName: UnityEngine.UIElements.ITextSelection.set_selectAllOnFocus
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::TextElement::*)(bool)>(&UnityEngine::UIElements::TextElement::UnityEngine_UIElements_ITextSelection_set_selectAllOnFocus)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::TextElement*), "UnityEngine.UIElements.ITextSelection.set_selectAllOnFocus", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::TextElement::UnityEngine_UIElements_ITextSelection_get_selectAllOnMouseUp
// Il2CppName: UnityEngine.UIElements.ITextSelection.get_selectAllOnMouseUp
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::TextElement::*)()>(&UnityEngine::UIElements::TextElement::UnityEngine_UIElements_ITextSelection_get_selectAllOnMouseUp)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::TextElement*), "UnityEngine.UIElements.ITextSelection.get_selectAllOnMouseUp", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::TextElement::UnityEngine_UIElements_ITextSelection_set_selectAllOnMouseUp
// Il2CppName: UnityEngine.UIElements.ITextSelection.set_selectAllOnMouseUp
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::TextElement::*)(bool)>(&UnityEngine::UIElements::TextElement::UnityEngine_UIElements_ITextSelection_set_selectAllOnMouseUp)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::TextElement*), "UnityEngine.UIElements.ITextSelection.set_selectAllOnMouseUp", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::TextElement::UnityEngine_UIElements_ITextSelection_get_cursorPosition
// Il2CppName: UnityEngine.UIElements.ITextSelection.get_cursorPosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector2 (UnityEngine::UIElements::TextElement::*)()>(&UnityEngine::UIElements::TextElement::UnityEngine_UIElements_ITextSelection_get_cursorPosition)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::TextElement*), "UnityEngine.UIElements.ITextSelection.get_cursorPosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::TextElement::UnityEngine_UIElements_ITextSelection_get_lineHeightAtCursorPosition
// Il2CppName: UnityEngine.UIElements.ITextSelection.get_lineHeightAtCursorPosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::UIElements::TextElement::*)()>(&UnityEngine::UIElements::TextElement::UnityEngine_UIElements_ITextSelection_get_lineHeightAtCursorPosition)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::TextElement*), "UnityEngine.UIElements.ITextSelection.get_lineHeightAtCursorPosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::TextElement::UnityEngine_UIElements_ITextSelection_get_selectionColor
// Il2CppName: UnityEngine.UIElements.ITextSelection.get_selectionColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Color (UnityEngine::UIElements::TextElement::*)()>(&UnityEngine::UIElements::TextElement::UnityEngine_UIElements_ITextSelection_get_selectionColor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::TextElement*), "UnityEngine.UIElements.ITextSelection.get_selectionColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::TextElement::UnityEngine_UIElements_ITextSelection_set_selectionColor
// Il2CppName: UnityEngine.UIElements.ITextSelection.set_selectionColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::TextElement::*)(::UnityEngine::Color)>(&UnityEngine::UIElements::TextElement::UnityEngine_UIElements_ITextSelection_set_selectionColor)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Color")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::TextElement*), "UnityEngine.UIElements.ITextSelection.set_selectionColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::TextElement::UnityEngine_UIElements_ITextSelection_get_cursorColor
// Il2CppName: UnityEngine.UIElements.ITextSelection.get_cursorColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Color (UnityEngine::UIElements::TextElement::*)()>(&UnityEngine::UIElements::TextElement::UnityEngine_UIElements_ITextSelection_get_cursorColor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::TextElement*), "UnityEngine.UIElements.ITextSelection.get_cursorColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::TextElement::UnityEngine_UIElements_ITextSelection_set_cursorColor
// Il2CppName: UnityEngine.UIElements.ITextSelection.set_cursorColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::TextElement::*)(::UnityEngine::Color)>(&UnityEngine::UIElements::TextElement::UnityEngine_UIElements_ITextSelection_set_cursorColor)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Color")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::TextElement*), "UnityEngine.UIElements.ITextSelection.set_cursorColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::TextElement::UnityEngine_UIElements_ITextSelection_get_cursorWidth
// Il2CppName: UnityEngine.UIElements.ITextSelection.get_cursorWidth
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::UIElements::TextElement::*)()>(&UnityEngine::UIElements::TextElement::UnityEngine_UIElements_ITextSelection_get_cursorWidth)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::TextElement*), "UnityEngine.UIElements.ITextSelection.get_cursorWidth", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::TextElement::get_selectingManipulator
// Il2CppName: get_selectingManipulator
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::TextSelectingManipulator* (UnityEngine::UIElements::TextElement::*)()>(&UnityEngine::UIElements::TextElement::get_selectingManipulator)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::TextElement*), "get_selectingManipulator", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::TextElement::DrawHighlighting
// Il2CppName: DrawHighlighting
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::TextElement::*)(::UnityEngine::UIElements::MeshGenerationContext*)>(&UnityEngine::UIElements::TextElement::DrawHighlighting)> {
  static const MethodInfo* get() {
    static auto* mgc = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "MeshGenerationContext")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::TextElement*), "DrawHighlighting", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{mgc});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::TextElement::DrawCaret
// Il2CppName: DrawCaret
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::TextElement::*)(::UnityEngine::UIElements::MeshGenerationContext*)>(&UnityEngine::UIElements::TextElement::DrawCaret)> {
  static const MethodInfo* get() {
    static auto* mgc = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "MeshGenerationContext")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::TextElement*), "DrawCaret", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{mgc});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::TextElement::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::UIElements::TextElement::DoMeasure
// Il2CppName: DoMeasure
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector2 (UnityEngine::UIElements::TextElement::*)(float, ::UnityEngine::UIElements::VisualElement::MeasureMode, float, ::UnityEngine::UIElements::VisualElement::MeasureMode)>(&UnityEngine::UIElements::TextElement::DoMeasure)> {
  static const MethodInfo* get() {
    static auto* desiredWidth = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* widthMode = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "VisualElement/MeasureMode")->byval_arg;
    static auto* desiredHeight = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* heightMode = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "VisualElement/MeasureMode")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::TextElement*), "DoMeasure", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{desiredWidth, widthMode, desiredHeight, heightMode});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::TextElement::ExecuteDefaultActionAtTarget
// Il2CppName: ExecuteDefaultActionAtTarget
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::TextElement::*)(::UnityEngine::UIElements::EventBase*)>(&UnityEngine::UIElements::TextElement::ExecuteDefaultActionAtTarget)> {
  static const MethodInfo* get() {
    static auto* evt = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "EventBase")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::TextElement*), "ExecuteDefaultActionAtTarget", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{evt});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::TextElement::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&UnityEngine::UIElements::TextElement::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::TextElement*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
