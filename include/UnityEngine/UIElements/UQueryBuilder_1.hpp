// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Including type: System.IEquatable`1
#include "System/IEquatable_1.hpp"
// Including type: UnityEngine.UIElements.StyleSelectorPart
#include "UnityEngine/UIElements/StyleSelectorPart.hpp"
// Including type: UnityEngine.UIElements.RuleMatcher
#include "UnityEngine/UIElements/RuleMatcher.hpp"
// Including type: UnityEngine.UIElements.StyleSelectorRelationship
#include "UnityEngine/UIElements/StyleSelectorRelationship.hpp"
// Including type: UnityEngine.UIElements.UQueryState`1
#include "UnityEngine/UIElements/UQueryState_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::UIElements
namespace UnityEngine::UIElements {
  // Forward declaring type: VisualElement
  class VisualElement;
  // Forward declaring type: StyleSelector
  class StyleSelector;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Completed forward declares
// Type namespace: UnityEngine.UIElements
namespace UnityEngine::UIElements {
  // Forward declaring type: UQueryBuilder`1<T>
  template<typename T>
  struct UQueryBuilder_1;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE_GENERIC_STRUCT(::UnityEngine::UIElements::UQueryBuilder_1, "UnityEngine.UIElements", "UQueryBuilder`1");
// Type namespace: UnityEngine.UIElements
namespace UnityEngine::UIElements {
  // WARNING Size may be invalid!
  // WARNING Layout: Sequential may not be correctly taken into account!
  // Autogenerated type: UnityEngine.UIElements.UQueryBuilder`1
  // [TokenAttribute] Offset: FFFFFFFF
  template<typename T>
  struct UQueryBuilder_1/*, public ::System::ValueType, public ::System::IEquatable_1<::UnityEngine::UIElements::UQueryBuilder_1<T>>*/ {
    public:
    public:
    // private System.Collections.Generic.List`1<UnityEngine.UIElements.StyleSelector> m_StyleSelectors
    // Size: 0x8
    // Offset: 0x0
    ::System::Collections::Generic::List_1<::UnityEngine::UIElements::StyleSelector*>* m_StyleSelectors;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::UnityEngine::UIElements::StyleSelector*>*) == 0x8);
    // private System.Collections.Generic.List`1<UnityEngine.UIElements.StyleSelectorPart> m_Parts
    // Size: 0x8
    // Offset: 0x0
    ::System::Collections::Generic::List_1<::UnityEngine::UIElements::StyleSelectorPart>* m_Parts;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::UnityEngine::UIElements::StyleSelectorPart>*) == 0x8);
    // private UnityEngine.UIElements.VisualElement m_Element
    // Size: 0x8
    // Offset: 0x0
    ::UnityEngine::UIElements::VisualElement* m_Element;
    // Field size check
    static_assert(sizeof(::UnityEngine::UIElements::VisualElement*) == 0x8);
    // private System.Collections.Generic.List`1<UnityEngine.UIElements.RuleMatcher> m_Matchers
    // Size: 0x8
    // Offset: 0x0
    ::System::Collections::Generic::List_1<::UnityEngine::UIElements::RuleMatcher>* m_Matchers;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::UnityEngine::UIElements::RuleMatcher>*) == 0x8);
    // private UnityEngine.UIElements.StyleSelectorRelationship m_Relationship
    // Size: 0x4
    // Offset: 0x0
    ::UnityEngine::UIElements::StyleSelectorRelationship m_Relationship;
    // Field size check
    static_assert(sizeof(::UnityEngine::UIElements::StyleSelectorRelationship) == 0x4);
    // private System.Int32 pseudoStatesMask
    // Size: 0x4
    // Offset: 0x0
    int pseudoStatesMask;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private System.Int32 negatedPseudoStatesMask
    // Size: 0x4
    // Offset: 0x0
    int negatedPseudoStatesMask;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Creating value type constructor for type: UQueryBuilder_1
    constexpr UQueryBuilder_1(::System::Collections::Generic::List_1<::UnityEngine::UIElements::StyleSelector*>* m_StyleSelectors_ = {}, ::System::Collections::Generic::List_1<::UnityEngine::UIElements::StyleSelectorPart>* m_Parts_ = {}, ::UnityEngine::UIElements::VisualElement* m_Element_ = {}, ::System::Collections::Generic::List_1<::UnityEngine::UIElements::RuleMatcher>* m_Matchers_ = {}, ::UnityEngine::UIElements::StyleSelectorRelationship m_Relationship_ = {}, int pseudoStatesMask_ = {}, int negatedPseudoStatesMask_ = {}) noexcept : m_StyleSelectors{m_StyleSelectors_}, m_Parts{m_Parts_}, m_Element{m_Element_}, m_Matchers{m_Matchers_}, m_Relationship{m_Relationship_}, pseudoStatesMask{pseudoStatesMask_}, negatedPseudoStatesMask{negatedPseudoStatesMask_} {}
    // Creating interface conversion operator: operator ::System::ValueType
    operator ::System::ValueType() noexcept {
      return *reinterpret_cast<::System::ValueType*>(this);
    }
    // Creating interface conversion operator: operator ::System::IEquatable_1<::UnityEngine::UIElements::UQueryBuilder_1<T>>
    operator ::System::IEquatable_1<::UnityEngine::UIElements::UQueryBuilder_1<T>>() noexcept {
      return *reinterpret_cast<::System::IEquatable_1<::UnityEngine::UIElements::UQueryBuilder_1<T>>*>(this);
    }
    // Autogenerated instance field getter
    // Get instance field: private System.Collections.Generic.List`1<UnityEngine.UIElements.StyleSelector> m_StyleSelectors
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::UIElements::StyleSelector*>*& dyn_m_StyleSelectors() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::UQueryBuilder_1::dyn_m_StyleSelectors");
      auto ___internal__instance = *this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_StyleSelectors"))->offset;
      return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::UIElements::StyleSelector*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: private System.Collections.Generic.List`1<UnityEngine.UIElements.StyleSelectorPart> m_Parts
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::UIElements::StyleSelectorPart>*& dyn_m_Parts() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::UQueryBuilder_1::dyn_m_Parts");
      auto ___internal__instance = *this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Parts"))->offset;
      return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::UIElements::StyleSelectorPart>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: private UnityEngine.UIElements.VisualElement m_Element
    [[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::VisualElement*& dyn_m_Element() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::UQueryBuilder_1::dyn_m_Element");
      auto ___internal__instance = *this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Element"))->offset;
      return *reinterpret_cast<::UnityEngine::UIElements::VisualElement**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: private System.Collections.Generic.List`1<UnityEngine.UIElements.RuleMatcher> m_Matchers
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::UIElements::RuleMatcher>*& dyn_m_Matchers() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::UQueryBuilder_1::dyn_m_Matchers");
      auto ___internal__instance = *this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Matchers"))->offset;
      return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::UIElements::RuleMatcher>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: private UnityEngine.UIElements.StyleSelectorRelationship m_Relationship
    [[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::StyleSelectorRelationship& dyn_m_Relationship() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::UQueryBuilder_1::dyn_m_Relationship");
      auto ___internal__instance = *this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Relationship"))->offset;
      return *reinterpret_cast<::UnityEngine::UIElements::StyleSelectorRelationship*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: private System.Int32 pseudoStatesMask
    [[deprecated("Use field access instead!")]] int& dyn_pseudoStatesMask() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::UQueryBuilder_1::dyn_pseudoStatesMask");
      auto ___internal__instance = *this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pseudoStatesMask"))->offset;
      return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: private System.Int32 negatedPseudoStatesMask
    [[deprecated("Use field access instead!")]] int& dyn_negatedPseudoStatesMask() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::UQueryBuilder_1::dyn_negatedPseudoStatesMask");
      auto ___internal__instance = *this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "negatedPseudoStatesMask"))->offset;
      return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // private System.Collections.Generic.List`1<UnityEngine.UIElements.StyleSelector> get_styleSelectors()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::System::Collections::Generic::List_1<::UnityEngine::UIElements::StyleSelector*>* get_styleSelectors() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::UQueryBuilder_1::get_styleSelectors");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_styleSelectors", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::UnityEngine::UIElements::StyleSelector*>*, false>(this, ___internal__method);
    }
    // private System.Collections.Generic.List`1<UnityEngine.UIElements.StyleSelectorPart> get_parts()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::System::Collections::Generic::List_1<::UnityEngine::UIElements::StyleSelectorPart>* get_parts() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::UQueryBuilder_1::get_parts");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_parts", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::UnityEngine::UIElements::StyleSelectorPart>*, false>(this, ___internal__method);
    }
    // public System.Void .ctor(UnityEngine.UIElements.VisualElement visualElement)
    // Offset: 0xFFFFFFFFFFFFFFFF
    UQueryBuilder_1(::UnityEngine::UIElements::VisualElement* visualElement) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::UQueryBuilder_1::.ctor");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(visualElement)})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, visualElement);
    }
    // public UnityEngine.UIElements.UQueryBuilder`1<T> Class(System.String classname)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::UnityEngine::UIElements::UQueryBuilder_1<T> Class(::StringW classname) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::UQueryBuilder_1::Class");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Class", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(classname)})));
      return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::UIElements::UQueryBuilder_1<T>, false>(this, ___internal__method, classname);
    }
    // public UnityEngine.UIElements.UQueryBuilder`1<T> Name(System.String id)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::UnityEngine::UIElements::UQueryBuilder_1<T> Name(::StringW id) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::UQueryBuilder_1::Name");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(id)})));
      return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::UIElements::UQueryBuilder_1<T>, false>(this, ___internal__method, id);
    }
    // UnityEngine.UIElements.UQueryBuilder`1<T> SingleBaseType()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::UnityEngine::UIElements::UQueryBuilder_1<T> SingleBaseType() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::UQueryBuilder_1::SingleBaseType");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SingleBaseType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::UIElements::UQueryBuilder_1<T>, false>(this, ___internal__method);
    }
    // private System.Void AddClass(System.String c)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void AddClass(::StringW c) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::UQueryBuilder_1::AddClass");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "AddClass", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, c);
    }
    // private System.Void AddName(System.String id)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void AddName(::StringW id) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::UQueryBuilder_1::AddName");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "AddName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(id)})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, id);
    }
    // private System.Void AddPseudoStatesRuleIfNecessasy()
    // Offset: 0xFFFFFFFFFFFFFFFF
    void AddPseudoStatesRuleIfNecessasy() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::UQueryBuilder_1::AddPseudoStatesRuleIfNecessasy");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "AddPseudoStatesRuleIfNecessasy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
    }
    // private System.Void FinishSelector()
    // Offset: 0xFFFFFFFFFFFFFFFF
    void FinishSelector() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::UQueryBuilder_1::FinishSelector");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "FinishSelector", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
    }
    // private System.Boolean CurrentSelectorEmpty()
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool CurrentSelectorEmpty() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::UQueryBuilder_1::CurrentSelectorEmpty");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "CurrentSelectorEmpty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
    }
    // private System.Void FinishCurrentSelector()
    // Offset: 0xFFFFFFFFFFFFFFFF
    void FinishCurrentSelector() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::UQueryBuilder_1::FinishCurrentSelector");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "FinishCurrentSelector", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
    }
    // public UnityEngine.UIElements.UQueryState`1<T> Build()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::UnityEngine::UIElements::UQueryState_1<T> Build() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::UQueryBuilder_1::Build");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Build", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::UIElements::UQueryState_1<T>, false>(this, ___internal__method);
    }
    // public System.Boolean Equals(UnityEngine.UIElements.UQueryBuilder`1<T> other)
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool Equals(::UnityEngine::UIElements::UQueryBuilder_1<T> other) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::UQueryBuilder_1::Equals");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::UIElements::UQueryBuilder_1<T>), -1));
      return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
    }
    // public override System.Boolean Equals(System.Object obj)
    // Offset: 0xFFFFFFFFFFFFFFFF
    // Implemented from: System.ValueType
    // Base method: System.Boolean ValueType::Equals(System.Object obj)
    bool Equals(::Il2CppObject* obj) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::UQueryBuilder_1::Equals");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), -1));
      return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
    }
    // public override System.Int32 GetHashCode()
    // Offset: 0xFFFFFFFFFFFFFFFF
    // Implemented from: System.ValueType
    // Base method: System.Int32 ValueType::GetHashCode()
    int GetHashCode() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::UQueryBuilder_1::GetHashCode");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), -1));
      return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
    }
  }; // UnityEngine.UIElements.UQueryBuilder`1
  // Could not write size check! Type: UnityEngine.UIElements.UQueryBuilder`1 is generic, or has no fields that are valid for size checks!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
