// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/byref.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::UIElements
namespace UnityEngine::UIElements {
  // Forward declaring type: ScheduledItem
  class ScheduledItem;
}
// Completed forward declares
// Type namespace: UnityEngine.UIElements
namespace UnityEngine::UIElements {
  // Forward declaring type: IScheduler
  class IScheduler;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::UIElements::IScheduler);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::UIElements::IScheduler*, "UnityEngine.UIElements", "IScheduler");
// Type namespace: UnityEngine.UIElements
namespace UnityEngine::UIElements {
  // Size: 0x0
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.UIElements.IScheduler
  // [TokenAttribute] Offset: FFFFFFFF
  class IScheduler {
    public:
    // public System.Void Unschedule(UnityEngine.UIElements.ScheduledItem item)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void Unschedule(::UnityEngine::UIElements::ScheduledItem* item);
    // public System.Void Schedule(UnityEngine.UIElements.ScheduledItem item)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void Schedule(::UnityEngine::UIElements::ScheduledItem* item);
    // public System.Void UpdateScheduledEvents()
    // Offset: 0xFFFFFFFFFFFFFFFF
    void UpdateScheduledEvents();
  }; // UnityEngine.UIElements.IScheduler
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::UIElements::IScheduler::Unschedule
// Il2CppName: Unschedule
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::IScheduler::*)(::UnityEngine::UIElements::ScheduledItem*)>(&UnityEngine::UIElements::IScheduler::Unschedule)> {
  static const MethodInfo* get() {
    static auto* item = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "ScheduledItem")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::IScheduler*), "Unschedule", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{item});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::IScheduler::Schedule
// Il2CppName: Schedule
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::IScheduler::*)(::UnityEngine::UIElements::ScheduledItem*)>(&UnityEngine::UIElements::IScheduler::Schedule)> {
  static const MethodInfo* get() {
    static auto* item = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "ScheduledItem")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::IScheduler*), "Schedule", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{item});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::IScheduler::UpdateScheduledEvents
// Il2CppName: UpdateScheduledEvents
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::IScheduler::*)()>(&UnityEngine::UIElements::IScheduler::UpdateScheduledEvents)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::IScheduler*), "UpdateScheduledEvents", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
