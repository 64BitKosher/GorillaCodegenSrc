// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.ScriptableObject
#include "UnityEngine/ScriptableObject.hpp"
// Including type: UnityEngine.UIElements.StyleSheets.Dimension
#include "UnityEngine/UIElements/StyleSheets/Dimension.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
// Including type: UnityEngine.UIElements.StyleSheets.ScalableImage
#include "UnityEngine/UIElements/StyleSheets/ScalableImage.hpp"
// Including type: UnityEngine.UIElements.StyleValueType
#include "UnityEngine/UIElements/StyleValueType.hpp"
// Including type: UnityEngine.UIElements.StyleValueHandle
#include "UnityEngine/UIElements/StyleValueHandle.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
  // Forward declaring type: Dictionary`2<TKey, TValue>
  template<typename TKey, typename TValue>
  class Dictionary_2;
}
// Forward declaring namespace: UnityEngine::UIElements
namespace UnityEngine::UIElements {
  // Forward declaring type: StyleRule
  class StyleRule;
  // Forward declaring type: StyleComplexSelector
  class StyleComplexSelector;
  // Forward declaring type: StyleValueKeyword
  struct StyleValueKeyword;
  // Forward declaring type: StyleValueFunction
  struct StyleValueFunction;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Skipping declaration: Object because it is already included!
}
// Completed forward declares
// Type namespace: UnityEngine.UIElements
namespace UnityEngine::UIElements {
  // Forward declaring type: StyleSheet
  class StyleSheet;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::UIElements::StyleSheet);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::UIElements::StyleSheet*, "UnityEngine.UIElements", "StyleSheet");
// Type namespace: UnityEngine.UIElements
namespace UnityEngine::UIElements {
  // Size: 0x91
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.UIElements.StyleSheet
  // [TokenAttribute] Offset: FFFFFFFF
  class StyleSheet : public ::UnityEngine::ScriptableObject {
    public:
    // Nested type: ::UnityEngine::UIElements::StyleSheet::ImportStruct
    struct ImportStruct;
    // Size: 0x10
    #pragma pack(push, 1)
    // WARNING Layout: Sequential may not be correctly taken into account!
    // Autogenerated type: UnityEngine.UIElements.StyleSheet/ImportStruct
    // [TokenAttribute] Offset: FFFFFFFF
    struct ImportStruct/*, public ::System::ValueType*/ {
      public:
      public:
      // public UnityEngine.UIElements.StyleSheet styleSheet
      // Size: 0x8
      // Offset: 0x0
      ::UnityEngine::UIElements::StyleSheet* styleSheet;
      // Field size check
      static_assert(sizeof(::UnityEngine::UIElements::StyleSheet*) == 0x8);
      // public System.String[] mediaQueries
      // Size: 0x8
      // Offset: 0x8
      ::ArrayW<::StringW> mediaQueries;
      // Field size check
      static_assert(sizeof(::ArrayW<::StringW>) == 0x8);
      public:
      // Creating value type constructor for type: ImportStruct
      constexpr ImportStruct(::UnityEngine::UIElements::StyleSheet* styleSheet_ = {}, ::ArrayW<::StringW> mediaQueries_ = ::ArrayW<::StringW>(static_cast<void*>(nullptr))) noexcept : styleSheet{styleSheet_}, mediaQueries{mediaQueries_} {}
      // Creating interface conversion operator: operator ::System::ValueType
      operator ::System::ValueType() noexcept {
        return *reinterpret_cast<::System::ValueType*>(this);
      }
      // Get instance field reference: public UnityEngine.UIElements.StyleSheet styleSheet
      [[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::StyleSheet*& dyn_styleSheet();
      // Get instance field reference: public System.String[] mediaQueries
      [[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& dyn_mediaQueries();
    }; // UnityEngine.UIElements.StyleSheet/ImportStruct
    #pragma pack(pop)
    static check_size<sizeof(StyleSheet::ImportStruct), 8 + sizeof(::ArrayW<::StringW>)> __UnityEngine_UIElements_StyleSheet_ImportStructSizeCheck;
    static_assert(sizeof(StyleSheet::ImportStruct) == 0x10);
    public:
    // private System.Boolean m_ImportedWithErrors
    // Size: 0x1
    // Offset: 0x18
    bool m_ImportedWithErrors;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean m_ImportedWithWarnings
    // Size: 0x1
    // Offset: 0x19
    bool m_ImportedWithWarnings;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: m_ImportedWithWarnings and: m_Rules
    char __padding1[0x6] = {};
    // private UnityEngine.UIElements.StyleRule[] m_Rules
    // Size: 0x8
    // Offset: 0x20
    ::ArrayW<::UnityEngine::UIElements::StyleRule*> m_Rules;
    // Field size check
    static_assert(sizeof(::ArrayW<::UnityEngine::UIElements::StyleRule*>) == 0x8);
    // private UnityEngine.UIElements.StyleComplexSelector[] m_ComplexSelectors
    // Size: 0x8
    // Offset: 0x28
    ::ArrayW<::UnityEngine::UIElements::StyleComplexSelector*> m_ComplexSelectors;
    // Field size check
    static_assert(sizeof(::ArrayW<::UnityEngine::UIElements::StyleComplexSelector*>) == 0x8);
    // System.Single[] floats
    // Size: 0x8
    // Offset: 0x30
    ::ArrayW<float> floats;
    // Field size check
    static_assert(sizeof(::ArrayW<float>) == 0x8);
    // UnityEngine.UIElements.StyleSheets.Dimension[] dimensions
    // Size: 0x8
    // Offset: 0x38
    ::ArrayW<::UnityEngine::UIElements::StyleSheets::Dimension> dimensions;
    // Field size check
    static_assert(sizeof(::ArrayW<::UnityEngine::UIElements::StyleSheets::Dimension>) == 0x8);
    // UnityEngine.Color[] colors
    // Size: 0x8
    // Offset: 0x40
    ::ArrayW<::UnityEngine::Color> colors;
    // Field size check
    static_assert(sizeof(::ArrayW<::UnityEngine::Color>) == 0x8);
    // System.String[] strings
    // Size: 0x8
    // Offset: 0x48
    ::ArrayW<::StringW> strings;
    // Field size check
    static_assert(sizeof(::ArrayW<::StringW>) == 0x8);
    // UnityEngine.Object[] assets
    // Size: 0x8
    // Offset: 0x50
    ::ArrayW<::UnityEngine::Object*> assets;
    // Field size check
    static_assert(sizeof(::ArrayW<::UnityEngine::Object*>) == 0x8);
    // UnityEngine.UIElements.StyleSheet/ImportStruct[] imports
    // Size: 0x8
    // Offset: 0x58
    ::ArrayW<::UnityEngine::UIElements::StyleSheet::ImportStruct> imports;
    // Field size check
    static_assert(sizeof(::ArrayW<::UnityEngine::UIElements::StyleSheet::ImportStruct>) == 0x8);
    // private System.Collections.Generic.List`1<UnityEngine.UIElements.StyleSheet> m_FlattenedImportedStyleSheets
    // Size: 0x8
    // Offset: 0x60
    ::System::Collections::Generic::List_1<::UnityEngine::UIElements::StyleSheet*>* m_FlattenedImportedStyleSheets;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::UnityEngine::UIElements::StyleSheet*>*) == 0x8);
    // private System.Int32 m_ContentHash
    // Size: 0x4
    // Offset: 0x68
    int m_ContentHash;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // Padding between fields: m_ContentHash and: scalableImages
    char __padding11[0x4] = {};
    // UnityEngine.UIElements.StyleSheets.ScalableImage[] scalableImages
    // Size: 0x8
    // Offset: 0x70
    ::ArrayW<::UnityEngine::UIElements::StyleSheets::ScalableImage> scalableImages;
    // Field size check
    static_assert(sizeof(::ArrayW<::UnityEngine::UIElements::StyleSheets::ScalableImage>) == 0x8);
    // System.Collections.Generic.Dictionary`2<System.String,UnityEngine.UIElements.StyleComplexSelector> orderedNameSelectors
    // Size: 0x8
    // Offset: 0x78
    ::System::Collections::Generic::Dictionary_2<::StringW, ::UnityEngine::UIElements::StyleComplexSelector*>* orderedNameSelectors;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::Dictionary_2<::StringW, ::UnityEngine::UIElements::StyleComplexSelector*>*) == 0x8);
    // System.Collections.Generic.Dictionary`2<System.String,UnityEngine.UIElements.StyleComplexSelector> orderedTypeSelectors
    // Size: 0x8
    // Offset: 0x80
    ::System::Collections::Generic::Dictionary_2<::StringW, ::UnityEngine::UIElements::StyleComplexSelector*>* orderedTypeSelectors;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::Dictionary_2<::StringW, ::UnityEngine::UIElements::StyleComplexSelector*>*) == 0x8);
    // System.Collections.Generic.Dictionary`2<System.String,UnityEngine.UIElements.StyleComplexSelector> orderedClassSelectors
    // Size: 0x8
    // Offset: 0x88
    ::System::Collections::Generic::Dictionary_2<::StringW, ::UnityEngine::UIElements::StyleComplexSelector*>* orderedClassSelectors;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::Dictionary_2<::StringW, ::UnityEngine::UIElements::StyleComplexSelector*>*) == 0x8);
    // private System.Boolean m_IsDefaultStyleSheet
    // Size: 0x1
    // Offset: 0x90
    bool m_IsDefaultStyleSheet;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get static field: static private System.String kCustomPropertyMarker
    static ::StringW _get_kCustomPropertyMarker();
    // Set static field: static private System.String kCustomPropertyMarker
    static void _set_kCustomPropertyMarker(::StringW value);
    // Get instance field reference: private System.Boolean m_ImportedWithErrors
    [[deprecated("Use field access instead!")]] bool& dyn_m_ImportedWithErrors();
    // Get instance field reference: private System.Boolean m_ImportedWithWarnings
    [[deprecated("Use field access instead!")]] bool& dyn_m_ImportedWithWarnings();
    // Get instance field reference: private UnityEngine.UIElements.StyleRule[] m_Rules
    [[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::UIElements::StyleRule*>& dyn_m_Rules();
    // Get instance field reference: private UnityEngine.UIElements.StyleComplexSelector[] m_ComplexSelectors
    [[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::UIElements::StyleComplexSelector*>& dyn_m_ComplexSelectors();
    // Get instance field reference: System.Single[] floats
    [[deprecated("Use field access instead!")]] ::ArrayW<float>& dyn_floats();
    // Get instance field reference: UnityEngine.UIElements.StyleSheets.Dimension[] dimensions
    [[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::UIElements::StyleSheets::Dimension>& dyn_dimensions();
    // Get instance field reference: UnityEngine.Color[] colors
    [[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Color>& dyn_colors();
    // Get instance field reference: System.String[] strings
    [[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& dyn_strings();
    // Get instance field reference: UnityEngine.Object[] assets
    [[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Object*>& dyn_assets();
    // Get instance field reference: UnityEngine.UIElements.StyleSheet/ImportStruct[] imports
    [[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::UIElements::StyleSheet::ImportStruct>& dyn_imports();
    // Get instance field reference: private System.Collections.Generic.List`1<UnityEngine.UIElements.StyleSheet> m_FlattenedImportedStyleSheets
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::UIElements::StyleSheet*>*& dyn_m_FlattenedImportedStyleSheets();
    // Get instance field reference: private System.Int32 m_ContentHash
    [[deprecated("Use field access instead!")]] int& dyn_m_ContentHash();
    // Get instance field reference: UnityEngine.UIElements.StyleSheets.ScalableImage[] scalableImages
    [[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::UIElements::StyleSheets::ScalableImage>& dyn_scalableImages();
    // Get instance field reference: System.Collections.Generic.Dictionary`2<System.String,UnityEngine.UIElements.StyleComplexSelector> orderedNameSelectors
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::StringW, ::UnityEngine::UIElements::StyleComplexSelector*>*& dyn_orderedNameSelectors();
    // Get instance field reference: System.Collections.Generic.Dictionary`2<System.String,UnityEngine.UIElements.StyleComplexSelector> orderedTypeSelectors
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::StringW, ::UnityEngine::UIElements::StyleComplexSelector*>*& dyn_orderedTypeSelectors();
    // Get instance field reference: System.Collections.Generic.Dictionary`2<System.String,UnityEngine.UIElements.StyleComplexSelector> orderedClassSelectors
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::StringW, ::UnityEngine::UIElements::StyleComplexSelector*>*& dyn_orderedClassSelectors();
    // Get instance field reference: private System.Boolean m_IsDefaultStyleSheet
    [[deprecated("Use field access instead!")]] bool& dyn_m_IsDefaultStyleSheet();
    // public System.Boolean get_importedWithErrors()
    // Offset: 0x56B0FF8
    bool get_importedWithErrors();
    // System.Void set_importedWithErrors(System.Boolean value)
    // Offset: 0x56B1000
    void set_importedWithErrors(bool value);
    // public System.Boolean get_importedWithWarnings()
    // Offset: 0x56B100C
    bool get_importedWithWarnings();
    // System.Void set_importedWithWarnings(System.Boolean value)
    // Offset: 0x56B1014
    void set_importedWithWarnings(bool value);
    // UnityEngine.UIElements.StyleRule[] get_rules()
    // Offset: 0x56B1020
    ::ArrayW<::UnityEngine::UIElements::StyleRule*> get_rules();
    // System.Void set_rules(UnityEngine.UIElements.StyleRule[] value)
    // Offset: 0x56B1028
    void set_rules(::ArrayW<::UnityEngine::UIElements::StyleRule*> value);
    // UnityEngine.UIElements.StyleComplexSelector[] get_complexSelectors()
    // Offset: 0x56B15B0
    ::ArrayW<::UnityEngine::UIElements::StyleComplexSelector*> get_complexSelectors();
    // System.Void set_complexSelectors(UnityEngine.UIElements.StyleComplexSelector[] value)
    // Offset: 0x56B15B8
    void set_complexSelectors(::ArrayW<::UnityEngine::UIElements::StyleComplexSelector*> value);
    // System.Collections.Generic.List`1<UnityEngine.UIElements.StyleSheet> get_flattenedRecursiveImports()
    // Offset: 0x56B15D4
    ::System::Collections::Generic::List_1<::UnityEngine::UIElements::StyleSheet*>* get_flattenedRecursiveImports();
    // public System.Int32 get_contentHash()
    // Offset: 0x56B15DC
    int get_contentHash();
    // public System.Void set_contentHash(System.Int32 value)
    // Offset: 0x56B15E4
    void set_contentHash(int value);
    // System.Boolean get_isDefaultStyleSheet()
    // Offset: 0x56B15EC
    bool get_isDefaultStyleSheet();
    // System.Void set_isDefaultStyleSheet(System.Boolean value)
    // Offset: 0x56B15F4
    void set_isDefaultStyleSheet(bool value);
    // static private System.Boolean TryCheckAccess(T[] list, UnityEngine.UIElements.StyleValueType type, UnityEngine.UIElements.StyleValueHandle handle, out T value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class T>
    static bool TryCheckAccess(::ArrayW<T> list, ::UnityEngine::UIElements::StyleValueType type, ::UnityEngine::UIElements::StyleValueHandle handle, ByRef<T> value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::StyleSheet::TryCheckAccess");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UIElements", "StyleSheet", "TryCheckAccess", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(list), ::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractIndependentType<T&>()})));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}));
      return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___generic__method, list, type, handle, byref(value));
    }
    // static private T CheckAccess(T[] list, UnityEngine.UIElements.StyleValueType type, UnityEngine.UIElements.StyleValueHandle handle)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class T>
    static T CheckAccess(::ArrayW<T> list, ::UnityEngine::UIElements::StyleValueType type, ::UnityEngine::UIElements::StyleValueHandle handle) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::StyleSheet::CheckAccess");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UIElements", "StyleSheet", "CheckAccess", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(list), ::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(handle)})));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}));
      return ::il2cpp_utils::RunMethodRethrow<T, false>(static_cast<Il2CppObject*>(nullptr), ___generic__method, list, type, handle);
    }
    // System.Void OnEnable()
    // Offset: 0x56B1754
    void OnEnable();
    // System.Void FlattenImportedStyleSheetsRecursive()
    // Offset: 0x56B1758
    void FlattenImportedStyleSheetsRecursive();
    // private System.Void FlattenImportedStyleSheetsRecursive(UnityEngine.UIElements.StyleSheet sheet)
    // Offset: 0x56B17E0
    void FlattenImportedStyleSheetsRecursive(::UnityEngine::UIElements::StyleSheet* sheet);
    // private System.Void SetupReferences()
    // Offset: 0x56B1044
    void SetupReferences();
    // UnityEngine.UIElements.StyleValueKeyword ReadKeyword(UnityEngine.UIElements.StyleValueHandle handle)
    // Offset: 0x56B19F8
    ::UnityEngine::UIElements::StyleValueKeyword ReadKeyword(::UnityEngine::UIElements::StyleValueHandle handle);
    // System.Single ReadFloat(UnityEngine.UIElements.StyleValueHandle handle)
    // Offset: 0x56B1A00
    float ReadFloat(::UnityEngine::UIElements::StyleValueHandle handle);
    // System.Boolean TryReadFloat(UnityEngine.UIElements.StyleValueHandle handle, out System.Single value)
    // Offset: 0x56A4600
    bool TryReadFloat(::UnityEngine::UIElements::StyleValueHandle handle, ByRef<float> value);
    // UnityEngine.UIElements.StyleSheets.Dimension ReadDimension(UnityEngine.UIElements.StyleValueHandle handle)
    // Offset: 0x56B1AD4
    ::UnityEngine::UIElements::StyleSheets::Dimension ReadDimension(::UnityEngine::UIElements::StyleValueHandle handle);
    // System.Boolean TryReadDimension(UnityEngine.UIElements.StyleValueHandle handle, out UnityEngine.UIElements.StyleSheets.Dimension value)
    // Offset: 0x56B1BC4
    bool TryReadDimension(::UnityEngine::UIElements::StyleValueHandle handle, ByRef<::UnityEngine::UIElements::StyleSheets::Dimension> value);
    // UnityEngine.Color ReadColor(UnityEngine.UIElements.StyleValueHandle handle)
    // Offset: 0x56B1CDC
    ::UnityEngine::Color ReadColor(::UnityEngine::UIElements::StyleValueHandle handle);
    // System.Boolean TryReadColor(UnityEngine.UIElements.StyleValueHandle handle, out UnityEngine.Color value)
    // Offset: 0x56A48EC
    bool TryReadColor(::UnityEngine::UIElements::StyleValueHandle handle, ByRef<::UnityEngine::Color> value);
    // System.String ReadString(UnityEngine.UIElements.StyleValueHandle handle)
    // Offset: 0x56B1D60
    ::StringW ReadString(::UnityEngine::UIElements::StyleValueHandle handle);
    // System.Boolean TryReadString(UnityEngine.UIElements.StyleValueHandle handle, out System.String value)
    // Offset: 0x56B1DE4
    bool TryReadString(::UnityEngine::UIElements::StyleValueHandle handle, ByRef<::StringW> value);
    // System.String ReadEnum(UnityEngine.UIElements.StyleValueHandle handle)
    // Offset: 0x56B1E70
    ::StringW ReadEnum(::UnityEngine::UIElements::StyleValueHandle handle);
    // System.Boolean TryReadEnum(UnityEngine.UIElements.StyleValueHandle handle, out System.String value)
    // Offset: 0x56B1EF4
    bool TryReadEnum(::UnityEngine::UIElements::StyleValueHandle handle, ByRef<::StringW> value);
    // System.String ReadVariable(UnityEngine.UIElements.StyleValueHandle handle)
    // Offset: 0x56B1F80
    ::StringW ReadVariable(::UnityEngine::UIElements::StyleValueHandle handle);
    // System.Boolean TryReadVariable(UnityEngine.UIElements.StyleValueHandle handle, out System.String value)
    // Offset: 0x56B2004
    bool TryReadVariable(::UnityEngine::UIElements::StyleValueHandle handle, ByRef<::StringW> value);
    // System.String ReadResourcePath(UnityEngine.UIElements.StyleValueHandle handle)
    // Offset: 0x56B2090
    ::StringW ReadResourcePath(::UnityEngine::UIElements::StyleValueHandle handle);
    // System.Boolean TryReadResourcePath(UnityEngine.UIElements.StyleValueHandle handle, out System.String value)
    // Offset: 0x56B2114
    bool TryReadResourcePath(::UnityEngine::UIElements::StyleValueHandle handle, ByRef<::StringW> value);
    // UnityEngine.Object ReadAssetReference(UnityEngine.UIElements.StyleValueHandle handle)
    // Offset: 0x56B21A0
    ::UnityEngine::Object* ReadAssetReference(::UnityEngine::UIElements::StyleValueHandle handle);
    // System.String ReadMissingAssetReferenceUrl(UnityEngine.UIElements.StyleValueHandle handle)
    // Offset: 0x56B2224
    ::StringW ReadMissingAssetReferenceUrl(::UnityEngine::UIElements::StyleValueHandle handle);
    // System.Boolean TryReadAssetReference(UnityEngine.UIElements.StyleValueHandle handle, out UnityEngine.Object value)
    // Offset: 0x56B22A8
    bool TryReadAssetReference(::UnityEngine::UIElements::StyleValueHandle handle, ByRef<::UnityEngine::Object*> value);
    // UnityEngine.UIElements.StyleValueFunction ReadFunction(UnityEngine.UIElements.StyleValueHandle handle)
    // Offset: 0x56B2334
    ::UnityEngine::UIElements::StyleValueFunction ReadFunction(::UnityEngine::UIElements::StyleValueHandle handle);
    // System.String ReadFunctionName(UnityEngine.UIElements.StyleValueHandle handle)
    // Offset: 0x56B233C
    ::StringW ReadFunctionName(::UnityEngine::UIElements::StyleValueHandle handle);
    // UnityEngine.UIElements.StyleSheets.ScalableImage ReadScalableImage(UnityEngine.UIElements.StyleValueHandle handle)
    // Offset: 0x56B25B0
    ::UnityEngine::UIElements::StyleSheets::ScalableImage ReadScalableImage(::UnityEngine::UIElements::StyleValueHandle handle);
    // static private System.Boolean CustomStartsWith(System.String originalString, System.String pattern)
    // Offset: 0x56B1930
    static bool CustomStartsWith(::StringW originalString, ::StringW pattern);
    // public System.Void .ctor()
    // Offset: 0x56B2634
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static StyleSheet* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::StyleSheet::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<StyleSheet*, creationType>()));
    }
    // static private System.Void .cctor()
    // Offset: 0x56B263C
    static void _cctor();
  }; // UnityEngine.UIElements.StyleSheet
  #pragma pack(pop)
  static check_size<sizeof(StyleSheet), 144 + sizeof(bool)> __UnityEngine_UIElements_StyleSheetSizeCheck;
  static_assert(sizeof(StyleSheet) == 0x91);
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::UIElements::StyleSheet::ImportStruct, "UnityEngine.UIElements", "StyleSheet/ImportStruct");
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::UIElements::StyleSheet::get_importedWithErrors
// Il2CppName: get_importedWithErrors
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::StyleSheet::*)()>(&UnityEngine::UIElements::StyleSheet::get_importedWithErrors)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::StyleSheet*), "get_importedWithErrors", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::StyleSheet::set_importedWithErrors
// Il2CppName: set_importedWithErrors
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::StyleSheet::*)(bool)>(&UnityEngine::UIElements::StyleSheet::set_importedWithErrors)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::StyleSheet*), "set_importedWithErrors", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::StyleSheet::get_importedWithWarnings
// Il2CppName: get_importedWithWarnings
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::StyleSheet::*)()>(&UnityEngine::UIElements::StyleSheet::get_importedWithWarnings)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::StyleSheet*), "get_importedWithWarnings", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::StyleSheet::set_importedWithWarnings
// Il2CppName: set_importedWithWarnings
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::StyleSheet::*)(bool)>(&UnityEngine::UIElements::StyleSheet::set_importedWithWarnings)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::StyleSheet*), "set_importedWithWarnings", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::StyleSheet::get_rules
// Il2CppName: get_rules
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::UnityEngine::UIElements::StyleRule*> (UnityEngine::UIElements::StyleSheet::*)()>(&UnityEngine::UIElements::StyleSheet::get_rules)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::StyleSheet*), "get_rules", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::StyleSheet::set_rules
// Il2CppName: set_rules
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::StyleSheet::*)(::ArrayW<::UnityEngine::UIElements::StyleRule*>)>(&UnityEngine::UIElements::StyleSheet::set_rules)> {
  static const MethodInfo* get() {
    static auto* value = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "StyleRule"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::StyleSheet*), "set_rules", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::StyleSheet::get_complexSelectors
// Il2CppName: get_complexSelectors
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::UnityEngine::UIElements::StyleComplexSelector*> (UnityEngine::UIElements::StyleSheet::*)()>(&UnityEngine::UIElements::StyleSheet::get_complexSelectors)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::StyleSheet*), "get_complexSelectors", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::StyleSheet::set_complexSelectors
// Il2CppName: set_complexSelectors
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::StyleSheet::*)(::ArrayW<::UnityEngine::UIElements::StyleComplexSelector*>)>(&UnityEngine::UIElements::StyleSheet::set_complexSelectors)> {
  static const MethodInfo* get() {
    static auto* value = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "StyleComplexSelector"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::StyleSheet*), "set_complexSelectors", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::StyleSheet::get_flattenedRecursiveImports
// Il2CppName: get_flattenedRecursiveImports
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::List_1<::UnityEngine::UIElements::StyleSheet*>* (UnityEngine::UIElements::StyleSheet::*)()>(&UnityEngine::UIElements::StyleSheet::get_flattenedRecursiveImports)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::StyleSheet*), "get_flattenedRecursiveImports", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::StyleSheet::get_contentHash
// Il2CppName: get_contentHash
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::UIElements::StyleSheet::*)()>(&UnityEngine::UIElements::StyleSheet::get_contentHash)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::StyleSheet*), "get_contentHash", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::StyleSheet::set_contentHash
// Il2CppName: set_contentHash
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::StyleSheet::*)(int)>(&UnityEngine::UIElements::StyleSheet::set_contentHash)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::StyleSheet*), "set_contentHash", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::StyleSheet::get_isDefaultStyleSheet
// Il2CppName: get_isDefaultStyleSheet
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::StyleSheet::*)()>(&UnityEngine::UIElements::StyleSheet::get_isDefaultStyleSheet)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::StyleSheet*), "get_isDefaultStyleSheet", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::StyleSheet::set_isDefaultStyleSheet
// Il2CppName: set_isDefaultStyleSheet
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::StyleSheet::*)(bool)>(&UnityEngine::UIElements::StyleSheet::set_isDefaultStyleSheet)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::StyleSheet*), "set_isDefaultStyleSheet", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::StyleSheet::TryCheckAccess
// Il2CppName: TryCheckAccess
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: UnityEngine::UIElements::StyleSheet::CheckAccess
// Il2CppName: CheckAccess
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: UnityEngine::UIElements::StyleSheet::OnEnable
// Il2CppName: OnEnable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::StyleSheet::*)()>(&UnityEngine::UIElements::StyleSheet::OnEnable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::StyleSheet*), "OnEnable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::StyleSheet::FlattenImportedStyleSheetsRecursive
// Il2CppName: FlattenImportedStyleSheetsRecursive
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::StyleSheet::*)()>(&UnityEngine::UIElements::StyleSheet::FlattenImportedStyleSheetsRecursive)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::StyleSheet*), "FlattenImportedStyleSheetsRecursive", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::StyleSheet::FlattenImportedStyleSheetsRecursive
// Il2CppName: FlattenImportedStyleSheetsRecursive
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::StyleSheet::*)(::UnityEngine::UIElements::StyleSheet*)>(&UnityEngine::UIElements::StyleSheet::FlattenImportedStyleSheetsRecursive)> {
  static const MethodInfo* get() {
    static auto* sheet = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "StyleSheet")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::StyleSheet*), "FlattenImportedStyleSheetsRecursive", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sheet});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::StyleSheet::SetupReferences
// Il2CppName: SetupReferences
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::StyleSheet::*)()>(&UnityEngine::UIElements::StyleSheet::SetupReferences)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::StyleSheet*), "SetupReferences", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::StyleSheet::ReadKeyword
// Il2CppName: ReadKeyword
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::StyleValueKeyword (UnityEngine::UIElements::StyleSheet::*)(::UnityEngine::UIElements::StyleValueHandle)>(&UnityEngine::UIElements::StyleSheet::ReadKeyword)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "StyleValueHandle")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::StyleSheet*), "ReadKeyword", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::StyleSheet::ReadFloat
// Il2CppName: ReadFloat
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::UIElements::StyleSheet::*)(::UnityEngine::UIElements::StyleValueHandle)>(&UnityEngine::UIElements::StyleSheet::ReadFloat)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "StyleValueHandle")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::StyleSheet*), "ReadFloat", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::StyleSheet::TryReadFloat
// Il2CppName: TryReadFloat
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::StyleSheet::*)(::UnityEngine::UIElements::StyleValueHandle, ByRef<float>)>(&UnityEngine::UIElements::StyleSheet::TryReadFloat)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "StyleValueHandle")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::StyleSheet*), "TryReadFloat", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle, value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::StyleSheet::ReadDimension
// Il2CppName: ReadDimension
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::StyleSheets::Dimension (UnityEngine::UIElements::StyleSheet::*)(::UnityEngine::UIElements::StyleValueHandle)>(&UnityEngine::UIElements::StyleSheet::ReadDimension)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "StyleValueHandle")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::StyleSheet*), "ReadDimension", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::StyleSheet::TryReadDimension
// Il2CppName: TryReadDimension
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::StyleSheet::*)(::UnityEngine::UIElements::StyleValueHandle, ByRef<::UnityEngine::UIElements::StyleSheets::Dimension>)>(&UnityEngine::UIElements::StyleSheet::TryReadDimension)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "StyleValueHandle")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements.StyleSheets", "Dimension")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::StyleSheet*), "TryReadDimension", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle, value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::StyleSheet::ReadColor
// Il2CppName: ReadColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Color (UnityEngine::UIElements::StyleSheet::*)(::UnityEngine::UIElements::StyleValueHandle)>(&UnityEngine::UIElements::StyleSheet::ReadColor)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "StyleValueHandle")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::StyleSheet*), "ReadColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::StyleSheet::TryReadColor
// Il2CppName: TryReadColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::StyleSheet::*)(::UnityEngine::UIElements::StyleValueHandle, ByRef<::UnityEngine::Color>)>(&UnityEngine::UIElements::StyleSheet::TryReadColor)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "StyleValueHandle")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Color")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::StyleSheet*), "TryReadColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle, value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::StyleSheet::ReadString
// Il2CppName: ReadString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (UnityEngine::UIElements::StyleSheet::*)(::UnityEngine::UIElements::StyleValueHandle)>(&UnityEngine::UIElements::StyleSheet::ReadString)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "StyleValueHandle")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::StyleSheet*), "ReadString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::StyleSheet::TryReadString
// Il2CppName: TryReadString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::StyleSheet::*)(::UnityEngine::UIElements::StyleValueHandle, ByRef<::StringW>)>(&UnityEngine::UIElements::StyleSheet::TryReadString)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "StyleValueHandle")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::StyleSheet*), "TryReadString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle, value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::StyleSheet::ReadEnum
// Il2CppName: ReadEnum
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (UnityEngine::UIElements::StyleSheet::*)(::UnityEngine::UIElements::StyleValueHandle)>(&UnityEngine::UIElements::StyleSheet::ReadEnum)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "StyleValueHandle")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::StyleSheet*), "ReadEnum", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::StyleSheet::TryReadEnum
// Il2CppName: TryReadEnum
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::StyleSheet::*)(::UnityEngine::UIElements::StyleValueHandle, ByRef<::StringW>)>(&UnityEngine::UIElements::StyleSheet::TryReadEnum)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "StyleValueHandle")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::StyleSheet*), "TryReadEnum", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle, value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::StyleSheet::ReadVariable
// Il2CppName: ReadVariable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (UnityEngine::UIElements::StyleSheet::*)(::UnityEngine::UIElements::StyleValueHandle)>(&UnityEngine::UIElements::StyleSheet::ReadVariable)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "StyleValueHandle")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::StyleSheet*), "ReadVariable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::StyleSheet::TryReadVariable
// Il2CppName: TryReadVariable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::StyleSheet::*)(::UnityEngine::UIElements::StyleValueHandle, ByRef<::StringW>)>(&UnityEngine::UIElements::StyleSheet::TryReadVariable)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "StyleValueHandle")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::StyleSheet*), "TryReadVariable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle, value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::StyleSheet::ReadResourcePath
// Il2CppName: ReadResourcePath
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (UnityEngine::UIElements::StyleSheet::*)(::UnityEngine::UIElements::StyleValueHandle)>(&UnityEngine::UIElements::StyleSheet::ReadResourcePath)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "StyleValueHandle")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::StyleSheet*), "ReadResourcePath", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::StyleSheet::TryReadResourcePath
// Il2CppName: TryReadResourcePath
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::StyleSheet::*)(::UnityEngine::UIElements::StyleValueHandle, ByRef<::StringW>)>(&UnityEngine::UIElements::StyleSheet::TryReadResourcePath)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "StyleValueHandle")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::StyleSheet*), "TryReadResourcePath", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle, value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::StyleSheet::ReadAssetReference
// Il2CppName: ReadAssetReference
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Object* (UnityEngine::UIElements::StyleSheet::*)(::UnityEngine::UIElements::StyleValueHandle)>(&UnityEngine::UIElements::StyleSheet::ReadAssetReference)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "StyleValueHandle")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::StyleSheet*), "ReadAssetReference", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::StyleSheet::ReadMissingAssetReferenceUrl
// Il2CppName: ReadMissingAssetReferenceUrl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (UnityEngine::UIElements::StyleSheet::*)(::UnityEngine::UIElements::StyleValueHandle)>(&UnityEngine::UIElements::StyleSheet::ReadMissingAssetReferenceUrl)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "StyleValueHandle")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::StyleSheet*), "ReadMissingAssetReferenceUrl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::StyleSheet::TryReadAssetReference
// Il2CppName: TryReadAssetReference
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::StyleSheet::*)(::UnityEngine::UIElements::StyleValueHandle, ByRef<::UnityEngine::Object*>)>(&UnityEngine::UIElements::StyleSheet::TryReadAssetReference)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "StyleValueHandle")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Object")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::StyleSheet*), "TryReadAssetReference", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle, value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::StyleSheet::ReadFunction
// Il2CppName: ReadFunction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::StyleValueFunction (UnityEngine::UIElements::StyleSheet::*)(::UnityEngine::UIElements::StyleValueHandle)>(&UnityEngine::UIElements::StyleSheet::ReadFunction)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "StyleValueHandle")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::StyleSheet*), "ReadFunction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::StyleSheet::ReadFunctionName
// Il2CppName: ReadFunctionName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (UnityEngine::UIElements::StyleSheet::*)(::UnityEngine::UIElements::StyleValueHandle)>(&UnityEngine::UIElements::StyleSheet::ReadFunctionName)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "StyleValueHandle")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::StyleSheet*), "ReadFunctionName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::StyleSheet::ReadScalableImage
// Il2CppName: ReadScalableImage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::StyleSheets::ScalableImage (UnityEngine::UIElements::StyleSheet::*)(::UnityEngine::UIElements::StyleValueHandle)>(&UnityEngine::UIElements::StyleSheet::ReadScalableImage)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "StyleValueHandle")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::StyleSheet*), "ReadScalableImage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::StyleSheet::CustomStartsWith
// Il2CppName: CustomStartsWith
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::StringW, ::StringW)>(&UnityEngine::UIElements::StyleSheet::CustomStartsWith)> {
  static const MethodInfo* get() {
    static auto* originalString = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* pattern = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::StyleSheet*), "CustomStartsWith", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{originalString, pattern});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::StyleSheet::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::UIElements::StyleSheet::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&UnityEngine::UIElements::StyleSheet::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::StyleSheet*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
