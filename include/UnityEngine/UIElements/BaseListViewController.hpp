// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.UIElements.CollectionViewController
#include "UnityEngine/UIElements/CollectionViewController.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Action
  class Action;
  // Forward declaring type: Action`1<T>
  template<typename T>
  class Action_1;
  // Forward declaring type: Array
  class Array;
  // Forward declaring type: Type
  class Type;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: IEnumerable`1<T>
  template<typename T>
  class IEnumerable_1;
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Forward declaring namespace: UnityEngine::UIElements
namespace UnityEngine::UIElements {
  // Forward declaring type: BaseListView
  class BaseListView;
  // Forward declaring type: ReusableListViewItem
  class ReusableListViewItem;
  // Forward declaring type: ReusableCollectionItem
  class ReusableCollectionItem;
}
// Completed forward declares
// Type namespace: UnityEngine.UIElements
namespace UnityEngine::UIElements {
  // Forward declaring type: BaseListViewController
  class BaseListViewController;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::UIElements::BaseListViewController);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::UIElements::BaseListViewController*, "UnityEngine.UIElements", "BaseListViewController");
// Type namespace: UnityEngine.UIElements
namespace UnityEngine::UIElements {
  // Size: 0x48
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.UIElements.BaseListViewController
  // [TokenAttribute] Offset: FFFFFFFF
  class BaseListViewController : public ::UnityEngine::UIElements::CollectionViewController {
    public:
    public:
    // private System.Action itemsSourceSizeChanged
    // Size: 0x8
    // Offset: 0x30
    ::System::Action* itemsSourceSizeChanged;
    // Field size check
    static_assert(sizeof(::System::Action*) == 0x8);
    // private System.Action`1<System.Collections.Generic.IEnumerable`1<System.Int32>> itemsAdded
    // Size: 0x8
    // Offset: 0x38
    ::System::Action_1<::System::Collections::Generic::IEnumerable_1<int>*>* itemsAdded;
    // Field size check
    static_assert(sizeof(::System::Action_1<::System::Collections::Generic::IEnumerable_1<int>*>*) == 0x8);
    // private System.Action`1<System.Collections.Generic.IEnumerable`1<System.Int32>> itemsRemoved
    // Size: 0x8
    // Offset: 0x40
    ::System::Action_1<::System::Collections::Generic::IEnumerable_1<int>*>* itemsRemoved;
    // Field size check
    static_assert(sizeof(::System::Action_1<::System::Collections::Generic::IEnumerable_1<int>*>*) == 0x8);
    public:
    // Get instance field reference: private System.Action itemsSourceSizeChanged
    [[deprecated("Use field access instead!")]] ::System::Action*& dyn_itemsSourceSizeChanged();
    // Get instance field reference: private System.Action`1<System.Collections.Generic.IEnumerable`1<System.Int32>> itemsAdded
    [[deprecated("Use field access instead!")]] ::System::Action_1<::System::Collections::Generic::IEnumerable_1<int>*>*& dyn_itemsAdded();
    // Get instance field reference: private System.Action`1<System.Collections.Generic.IEnumerable`1<System.Int32>> itemsRemoved
    [[deprecated("Use field access instead!")]] ::System::Action_1<::System::Collections::Generic::IEnumerable_1<int>*>*& dyn_itemsRemoved();
    // public System.Void add_itemsSourceSizeChanged(System.Action value)
    // Offset: 0x5598470
    void add_itemsSourceSizeChanged(::System::Action* value);
    // public System.Void remove_itemsSourceSizeChanged(System.Action value)
    // Offset: 0x559850C
    void remove_itemsSourceSizeChanged(::System::Action* value);
    // public System.Void add_itemsAdded(System.Action`1<System.Collections.Generic.IEnumerable`1<System.Int32>> value)
    // Offset: 0x55985A8
    void add_itemsAdded(::System::Action_1<::System::Collections::Generic::IEnumerable_1<int>*>* value);
    // public System.Void remove_itemsAdded(System.Action`1<System.Collections.Generic.IEnumerable`1<System.Int32>> value)
    // Offset: 0x5598658
    void remove_itemsAdded(::System::Action_1<::System::Collections::Generic::IEnumerable_1<int>*>* value);
    // public System.Void add_itemsRemoved(System.Action`1<System.Collections.Generic.IEnumerable`1<System.Int32>> value)
    // Offset: 0x5598708
    void add_itemsRemoved(::System::Action_1<::System::Collections::Generic::IEnumerable_1<int>*>* value);
    // public System.Void remove_itemsRemoved(System.Action`1<System.Collections.Generic.IEnumerable`1<System.Int32>> value)
    // Offset: 0x55987B8
    void remove_itemsRemoved(::System::Action_1<::System::Collections::Generic::IEnumerable_1<int>*>* value);
    // protected UnityEngine.UIElements.BaseListView get_baseListView()
    // Offset: 0x5598868
    ::UnityEngine::UIElements::BaseListView* get_baseListView();
    // System.Void PostInitRegistration(UnityEngine.UIElements.ReusableListViewItem listItem)
    // Offset: 0x5598A9C
    void PostInitRegistration(::UnityEngine::UIElements::ReusableListViewItem* listItem);
    // public System.Boolean NeedsDragHandle(System.Int32 index)
    // Offset: 0x55991E0
    bool NeedsDragHandle(int index);
    // public System.Void AddItems(System.Int32 itemCount)
    // Offset: 0x559921C
    void AddItems(int itemCount);
    // public System.Void Move(System.Int32 index, System.Int32 newIndex)
    // Offset: 0x5599C44
    void Move(int index, int newIndex);
    // public System.Void RemoveItem(System.Int32 index)
    // Offset: 0x559A014
    void RemoveItem(int index);
    // public System.Void RemoveItems(System.Collections.Generic.List`1<System.Int32> indices)
    // Offset: 0x559A1C0
    void RemoveItems(::System::Collections::Generic::List_1<int>* indices);
    // System.Void RemoveItems(System.Int32 itemCount)
    // Offset: 0x559A604
    void RemoveItems(int itemCount);
    // public System.Void ClearItems()
    // Offset: 0x559A7F4
    void ClearItems();
    // protected System.Void RaiseOnSizeChanged()
    // Offset: 0x5599C28
    void RaiseOnSizeChanged();
    // protected System.Void RaiseItemsAdded(System.Collections.Generic.IEnumerable`1<System.Int32> indices)
    // Offset: 0x5599C0C
    void RaiseItemsAdded(::System::Collections::Generic::IEnumerable_1<int>* indices);
    // protected System.Void RaiseItemsRemoved(System.Collections.Generic.IEnumerable`1<System.Int32> indices)
    // Offset: 0x559A438
    void RaiseItemsRemoved(::System::Collections::Generic::IEnumerable_1<int>* indices);
    // static private System.Array AddToArray(System.Array source, System.Int32 itemCount)
    // Offset: 0x5599AE8
    static ::System::Array* AddToArray(::System::Array* source, int itemCount);
    // static private System.Array RemoveFromArray(System.Array source, System.Collections.Generic.List`1<System.Int32> indicesToRemove)
    // Offset: 0x559A454
    static ::System::Array* RemoveFromArray(::System::Array* source, ::System::Collections::Generic::List_1<int>* indicesToRemove);
    // private System.Void Swap(System.Int32 lhs, System.Int32 rhs)
    // Offset: 0x5599DB8
    void Swap(int lhs, int rhs);
    // private System.Void EnsureItemSourceCanBeResized()
    // Offset: 0x5599994
    void EnsureItemSourceCanBeResized();
    // static System.Boolean <AddItems>g__IsGenericList|15_0(System.Type t)
    // Offset: 0x559A9B0
    static bool $AddItems$g__IsGenericList_15_0(::System::Type* t);
    // override System.Void InvokeMakeItem(UnityEngine.UIElements.ReusableCollectionItem reusableItem)
    // Offset: 0x55988E4
    // Implemented from: UnityEngine.UIElements.CollectionViewController
    // Base method: System.Void CollectionViewController::InvokeMakeItem(UnityEngine.UIElements.ReusableCollectionItem reusableItem)
    void InvokeMakeItem(::UnityEngine::UIElements::ReusableCollectionItem* reusableItem);
    // override System.Void InvokeBindItem(UnityEngine.UIElements.ReusableCollectionItem reusableItem, System.Int32 index)
    // Offset: 0x5598EE4
    // Implemented from: UnityEngine.UIElements.CollectionViewController
    // Base method: System.Void CollectionViewController::InvokeBindItem(UnityEngine.UIElements.ReusableCollectionItem reusableItem, System.Int32 index)
    void InvokeBindItem(::UnityEngine::UIElements::ReusableCollectionItem* reusableItem, int index);
    // protected System.Void .ctor()
    // Offset: 0x559A9A0
    // Implemented from: UnityEngine.UIElements.CollectionViewController
    // Base method: System.Void CollectionViewController::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static BaseListViewController* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::BaseListViewController::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<BaseListViewController*, creationType>()));
    }
  }; // UnityEngine.UIElements.BaseListViewController
  #pragma pack(pop)
  static check_size<sizeof(BaseListViewController), 64 + sizeof(::System::Action_1<::System::Collections::Generic::IEnumerable_1<int>*>*)> __UnityEngine_UIElements_BaseListViewControllerSizeCheck;
  static_assert(sizeof(BaseListViewController) == 0x48);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseListViewController::add_itemsSourceSizeChanged
// Il2CppName: add_itemsSourceSizeChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::BaseListViewController::*)(::System::Action*)>(&UnityEngine::UIElements::BaseListViewController::add_itemsSourceSizeChanged)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Action")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseListViewController*), "add_itemsSourceSizeChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseListViewController::remove_itemsSourceSizeChanged
// Il2CppName: remove_itemsSourceSizeChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::BaseListViewController::*)(::System::Action*)>(&UnityEngine::UIElements::BaseListViewController::remove_itemsSourceSizeChanged)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Action")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseListViewController*), "remove_itemsSourceSizeChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseListViewController::add_itemsAdded
// Il2CppName: add_itemsAdded
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::BaseListViewController::*)(::System::Action_1<::System::Collections::Generic::IEnumerable_1<int>*>*)>(&UnityEngine::UIElements::BaseListViewController::add_itemsAdded)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "IEnumerable`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Int32")})})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseListViewController*), "add_itemsAdded", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseListViewController::remove_itemsAdded
// Il2CppName: remove_itemsAdded
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::BaseListViewController::*)(::System::Action_1<::System::Collections::Generic::IEnumerable_1<int>*>*)>(&UnityEngine::UIElements::BaseListViewController::remove_itemsAdded)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "IEnumerable`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Int32")})})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseListViewController*), "remove_itemsAdded", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseListViewController::add_itemsRemoved
// Il2CppName: add_itemsRemoved
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::BaseListViewController::*)(::System::Action_1<::System::Collections::Generic::IEnumerable_1<int>*>*)>(&UnityEngine::UIElements::BaseListViewController::add_itemsRemoved)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "IEnumerable`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Int32")})})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseListViewController*), "add_itemsRemoved", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseListViewController::remove_itemsRemoved
// Il2CppName: remove_itemsRemoved
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::BaseListViewController::*)(::System::Action_1<::System::Collections::Generic::IEnumerable_1<int>*>*)>(&UnityEngine::UIElements::BaseListViewController::remove_itemsRemoved)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "IEnumerable`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Int32")})})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseListViewController*), "remove_itemsRemoved", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseListViewController::get_baseListView
// Il2CppName: get_baseListView
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::BaseListView* (UnityEngine::UIElements::BaseListViewController::*)()>(&UnityEngine::UIElements::BaseListViewController::get_baseListView)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseListViewController*), "get_baseListView", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseListViewController::PostInitRegistration
// Il2CppName: PostInitRegistration
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::BaseListViewController::*)(::UnityEngine::UIElements::ReusableListViewItem*)>(&UnityEngine::UIElements::BaseListViewController::PostInitRegistration)> {
  static const MethodInfo* get() {
    static auto* listItem = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "ReusableListViewItem")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseListViewController*), "PostInitRegistration", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{listItem});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseListViewController::NeedsDragHandle
// Il2CppName: NeedsDragHandle
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::BaseListViewController::*)(int)>(&UnityEngine::UIElements::BaseListViewController::NeedsDragHandle)> {
  static const MethodInfo* get() {
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseListViewController*), "NeedsDragHandle", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{index});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseListViewController::AddItems
// Il2CppName: AddItems
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::BaseListViewController::*)(int)>(&UnityEngine::UIElements::BaseListViewController::AddItems)> {
  static const MethodInfo* get() {
    static auto* itemCount = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseListViewController*), "AddItems", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{itemCount});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseListViewController::Move
// Il2CppName: Move
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::BaseListViewController::*)(int, int)>(&UnityEngine::UIElements::BaseListViewController::Move)> {
  static const MethodInfo* get() {
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* newIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseListViewController*), "Move", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{index, newIndex});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseListViewController::RemoveItem
// Il2CppName: RemoveItem
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::BaseListViewController::*)(int)>(&UnityEngine::UIElements::BaseListViewController::RemoveItem)> {
  static const MethodInfo* get() {
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseListViewController*), "RemoveItem", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{index});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseListViewController::RemoveItems
// Il2CppName: RemoveItems
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::BaseListViewController::*)(::System::Collections::Generic::List_1<int>*)>(&UnityEngine::UIElements::BaseListViewController::RemoveItems)> {
  static const MethodInfo* get() {
    static auto* indices = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Int32")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseListViewController*), "RemoveItems", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{indices});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseListViewController::RemoveItems
// Il2CppName: RemoveItems
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::BaseListViewController::*)(int)>(&UnityEngine::UIElements::BaseListViewController::RemoveItems)> {
  static const MethodInfo* get() {
    static auto* itemCount = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseListViewController*), "RemoveItems", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{itemCount});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseListViewController::ClearItems
// Il2CppName: ClearItems
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::BaseListViewController::*)()>(&UnityEngine::UIElements::BaseListViewController::ClearItems)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseListViewController*), "ClearItems", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseListViewController::RaiseOnSizeChanged
// Il2CppName: RaiseOnSizeChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::BaseListViewController::*)()>(&UnityEngine::UIElements::BaseListViewController::RaiseOnSizeChanged)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseListViewController*), "RaiseOnSizeChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseListViewController::RaiseItemsAdded
// Il2CppName: RaiseItemsAdded
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::BaseListViewController::*)(::System::Collections::Generic::IEnumerable_1<int>*)>(&UnityEngine::UIElements::BaseListViewController::RaiseItemsAdded)> {
  static const MethodInfo* get() {
    static auto* indices = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "IEnumerable`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Int32")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseListViewController*), "RaiseItemsAdded", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{indices});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseListViewController::RaiseItemsRemoved
// Il2CppName: RaiseItemsRemoved
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::BaseListViewController::*)(::System::Collections::Generic::IEnumerable_1<int>*)>(&UnityEngine::UIElements::BaseListViewController::RaiseItemsRemoved)> {
  static const MethodInfo* get() {
    static auto* indices = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "IEnumerable`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Int32")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseListViewController*), "RaiseItemsRemoved", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{indices});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseListViewController::AddToArray
// Il2CppName: AddToArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Array* (*)(::System::Array*, int)>(&UnityEngine::UIElements::BaseListViewController::AddToArray)> {
  static const MethodInfo* get() {
    static auto* source = &::il2cpp_utils::GetClassFromName("System", "Array")->byval_arg;
    static auto* itemCount = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseListViewController*), "AddToArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{source, itemCount});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseListViewController::RemoveFromArray
// Il2CppName: RemoveFromArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Array* (*)(::System::Array*, ::System::Collections::Generic::List_1<int>*)>(&UnityEngine::UIElements::BaseListViewController::RemoveFromArray)> {
  static const MethodInfo* get() {
    static auto* source = &::il2cpp_utils::GetClassFromName("System", "Array")->byval_arg;
    static auto* indicesToRemove = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Int32")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseListViewController*), "RemoveFromArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{source, indicesToRemove});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseListViewController::Swap
// Il2CppName: Swap
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::BaseListViewController::*)(int, int)>(&UnityEngine::UIElements::BaseListViewController::Swap)> {
  static const MethodInfo* get() {
    static auto* lhs = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* rhs = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseListViewController*), "Swap", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{lhs, rhs});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseListViewController::EnsureItemSourceCanBeResized
// Il2CppName: EnsureItemSourceCanBeResized
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::BaseListViewController::*)()>(&UnityEngine::UIElements::BaseListViewController::EnsureItemSourceCanBeResized)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseListViewController*), "EnsureItemSourceCanBeResized", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseListViewController::$AddItems$g__IsGenericList_15_0
// Il2CppName: <AddItems>g__IsGenericList|15_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::System::Type*)>(&UnityEngine::UIElements::BaseListViewController::$AddItems$g__IsGenericList_15_0)> {
  static const MethodInfo* get() {
    static auto* t = &::il2cpp_utils::GetClassFromName("System", "Type")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseListViewController*), "<AddItems>g__IsGenericList|15_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{t});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseListViewController::InvokeMakeItem
// Il2CppName: InvokeMakeItem
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::BaseListViewController::*)(::UnityEngine::UIElements::ReusableCollectionItem*)>(&UnityEngine::UIElements::BaseListViewController::InvokeMakeItem)> {
  static const MethodInfo* get() {
    static auto* reusableItem = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "ReusableCollectionItem")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseListViewController*), "InvokeMakeItem", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{reusableItem});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseListViewController::InvokeBindItem
// Il2CppName: InvokeBindItem
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::BaseListViewController::*)(::UnityEngine::UIElements::ReusableCollectionItem*, int)>(&UnityEngine::UIElements::BaseListViewController::InvokeBindItem)> {
  static const MethodInfo* get() {
    static auto* reusableItem = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "ReusableCollectionItem")->byval_arg;
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseListViewController*), "InvokeBindItem", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{reusableItem, index});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseListViewController::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
