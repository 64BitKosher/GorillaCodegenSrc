// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.UIElements.StylePropertyAnimationSystem
#include "UnityEngine/UIElements/StylePropertyAnimationSystem.hpp"
// Including type: UnityEngine.UIElements.StylePropertyAnimationSystem/Values
#include "UnityEngine/UIElements/StylePropertyAnimationSystem_Values.hpp"
// Including type: UnityEngine.UIElements.StylePropertyAnimationSystem/AnimationDataSet`2
#include "UnityEngine/UIElements/StylePropertyAnimationSystem_AnimationDataSet_2.hpp"
// Including type: UnityEngine.UIElements.StylePropertyAnimationSystem/TransitionState
#include "UnityEngine/UIElements/StylePropertyAnimationSystem_TransitionState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::UIElements
namespace UnityEngine::UIElements {
  // Skipping declaration: TransitionEventsFrameState because it is already included!
  // Skipping declaration: TimingData because it is already included!
  // Skipping declaration: StyleData because it is already included!
  // Skipping declaration: EmptyData because it is already included!
  // Forward declaring type: VisualElement
  class VisualElement;
  // Forward declaring type: EventBase
  class EventBase;
  // Forward declaring type: IPanel
  class IPanel;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Func`3<T1, T2, TResult>
  template<typename T1, typename T2, typename TResult>
  class Func_3;
  // Forward declaring type: Func`2<T, TResult>
  template<typename T, typename TResult>
  class Func_2;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
  // Forward declaring type: Dictionary`2<TKey, TValue>
  template<typename TKey, typename TValue>
  class Dictionary_2;
  // Forward declaring type: Queue`1<T>
  template<typename T>
  class Queue_1;
}
// Forward declaring namespace: UnityEngine::Pool
namespace UnityEngine::Pool {
  // Forward declaring type: ObjectPool`1<T>
  template<typename T>
  class ObjectPool_1;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE_GENERIC_CLASS(::UnityEngine::UIElements::StylePropertyAnimationSystem::Values_1, "UnityEngine.UIElements", "StylePropertyAnimationSystem/Values`1");
// Type namespace: UnityEngine.UIElements
namespace UnityEngine::UIElements {
  // WARNING Size may be invalid!
  // Autogenerated type: UnityEngine.UIElements.StylePropertyAnimationSystem/Values`1
  // [TokenAttribute] Offset: FFFFFFFF
  template<typename T>
  class StylePropertyAnimationSystem::Values_1 : public ::UnityEngine::UIElements::StylePropertyAnimationSystem::Values {
    public:
    // Nested type: ::UnityEngine::UIElements::StylePropertyAnimationSystem::Values_1::TransitionEventsFrameState<T>
    class TransitionEventsFrameState;
    // Nested type: ::UnityEngine::UIElements::StylePropertyAnimationSystem::Values_1::TimingData<T>
    struct TimingData;
    // Nested type: ::UnityEngine::UIElements::StylePropertyAnimationSystem::Values_1::StyleData<T>
    struct StyleData;
    // Nested type: ::UnityEngine::UIElements::StylePropertyAnimationSystem::Values_1::EmptyData<T>
    struct EmptyData;
    // WARNING Size may be invalid!
    // Autogenerated type: UnityEngine.UIElements.StylePropertyAnimationSystem/Values`1/TransitionEventsFrameState
    // [TokenAttribute] Offset: FFFFFFFF
    class TransitionEventsFrameState : public ::il2cpp_utils::il2cpp_type_check::NestedType, public ::Il2CppObject {
      public:
      using declaring_type = StylePropertyAnimationSystem::Values_1<T>*;
      static constexpr std::string_view NESTED_NAME = "TransitionEventsFrameState";
      static constexpr bool IS_VALUE_TYPE = false;
      // Nested type: ::UnityEngine::UIElements::StylePropertyAnimationSystem::Values_1::TransitionEventsFrameState::$$c<T>
      class $$c;
      // WARNING Size may be invalid!
      // Autogenerated type: UnityEngine.UIElements.StylePropertyAnimationSystem/Values`1/TransitionEventsFrameState/<>c
      // [TokenAttribute] Offset: FFFFFFFF
      // [CompilerGeneratedAttribute] Offset: FFFFFFFF
      class $$c : public ::il2cpp_utils::il2cpp_type_check::NestedType, public ::Il2CppObject {
        public:
        using declaring_type = typename StylePropertyAnimationSystem::Values_1<T>::TransitionEventsFrameState*;
        static constexpr std::string_view NESTED_NAME = "<>c";
        static constexpr bool IS_VALUE_TYPE = false;
        // Autogenerated static field getter
        // Get static field: static public readonly UnityEngine.UIElements.StylePropertyAnimationSystem/Values`1/TransitionEventsFrameState/<>c<T> <>9
        static typename ::UnityEngine::UIElements::StylePropertyAnimationSystem::Values_1<T>::TransitionEventsFrameState::$$c* _get_$$9() {
          static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::StylePropertyAnimationSystem::Values_1::TransitionEventsFrameState::$$c::_get_$$9");
          return THROW_UNLESS((il2cpp_utils::GetFieldValue<typename ::UnityEngine::UIElements::StylePropertyAnimationSystem::Values_1<T>::TransitionEventsFrameState::$$c*>(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<typename StylePropertyAnimationSystem::Values_1<T>::TransitionEventsFrameState::$$c*>::get(), "<>9")));
        }
        // Autogenerated static field setter
        // Set static field: static public readonly UnityEngine.UIElements.StylePropertyAnimationSystem/Values`1/TransitionEventsFrameState/<>c<T> <>9
        static void _set_$$9(typename ::UnityEngine::UIElements::StylePropertyAnimationSystem::Values_1<T>::TransitionEventsFrameState::$$c* value) {
          static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::StylePropertyAnimationSystem::Values_1::TransitionEventsFrameState::$$c::_set_$$9");
          THROW_UNLESS((il2cpp_utils::SetFieldValue(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<typename StylePropertyAnimationSystem::Values_1<T>::TransitionEventsFrameState::$$c*>::get(), "<>9", value)));
        }
        // static private System.Void .cctor()
        // Offset: 0xFFFFFFFFFFFFFFFF
        static void _cctor() {
          static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::StylePropertyAnimationSystem::Values_1::TransitionEventsFrameState::$$c::.cctor");
          static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<typename StylePropertyAnimationSystem::Values_1<T>::TransitionEventsFrameState::$$c*>::get(), ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
          ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
        }
        // public System.Void .ctor()
        // Offset: 0xFFFFFFFFFFFFFFFF
        template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
        static typename StylePropertyAnimationSystem::Values_1<T>::TransitionEventsFrameState::$$c* New_ctor() {
          static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::StylePropertyAnimationSystem::Values_1::TransitionEventsFrameState::$$c::.ctor");
          return THROW_UNLESS((::il2cpp_utils::New<typename StylePropertyAnimationSystem::Values_1<T>::TransitionEventsFrameState::$$c*, creationType>()));
        }
        // System.Collections.Generic.Queue`1<UnityEngine.UIElements.EventBase> <.cctor>b__11_0()
        // Offset: 0xFFFFFFFFFFFFFFFF
        ::System::Collections::Generic::Queue_1<::UnityEngine::UIElements::EventBase*>* $_cctor$b__11_0() {
          static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::StylePropertyAnimationSystem::Values_1::TransitionEventsFrameState::$$c::<.cctor>b__11_0");
          static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.cctor>b__11_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
          return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::Queue_1<::UnityEngine::UIElements::EventBase*>*, false>(this, ___internal__method);
        }
      }; // UnityEngine.UIElements.StylePropertyAnimationSystem/Values`1/TransitionEventsFrameState/<>c
      // Could not write size check! Type: UnityEngine.UIElements.StylePropertyAnimationSystem/Values`1/TransitionEventsFrameState/<>c is generic, or has no fields that are valid for size checks!
      public:
      // public readonly System.Collections.Generic.Dictionary`2<UnityEngine.UIElements.StylePropertyAnimationSystem/ElementPropertyPair,UnityEngine.UIElements.StylePropertyAnimationSystem/TransitionState> elementPropertyStateDelta
      // Size: 0x8
      // Offset: 0x0
      ::System::Collections::Generic::Dictionary_2<::UnityEngine::UIElements::StylePropertyAnimationSystem::ElementPropertyPair, ::UnityEngine::UIElements::StylePropertyAnimationSystem::TransitionState>* elementPropertyStateDelta;
      // Field size check
      static_assert(sizeof(::System::Collections::Generic::Dictionary_2<::UnityEngine::UIElements::StylePropertyAnimationSystem::ElementPropertyPair, ::UnityEngine::UIElements::StylePropertyAnimationSystem::TransitionState>*) == 0x8);
      // public readonly System.Collections.Generic.Dictionary`2<UnityEngine.UIElements.StylePropertyAnimationSystem/ElementPropertyPair,System.Collections.Generic.Queue`1<UnityEngine.UIElements.EventBase>> elementPropertyQueuedEvents
      // Size: 0x8
      // Offset: 0x0
      ::System::Collections::Generic::Dictionary_2<::UnityEngine::UIElements::StylePropertyAnimationSystem::ElementPropertyPair, ::System::Collections::Generic::Queue_1<::UnityEngine::UIElements::EventBase*>*>* elementPropertyQueuedEvents;
      // Field size check
      static_assert(sizeof(::System::Collections::Generic::Dictionary_2<::UnityEngine::UIElements::StylePropertyAnimationSystem::ElementPropertyPair, ::System::Collections::Generic::Queue_1<::UnityEngine::UIElements::EventBase*>*>*) == 0x8);
      // public UnityEngine.UIElements.IPanel panel
      // Size: 0x8
      // Offset: 0x0
      ::UnityEngine::UIElements::IPanel* panel;
      // Field size check
      static_assert(sizeof(::UnityEngine::UIElements::IPanel*) == 0x8);
      // private System.Int32 m_ChangesCount
      // Size: 0x4
      // Offset: 0x0
      int m_ChangesCount;
      // Field size check
      static_assert(sizeof(int) == 0x4);
      public:
      // Autogenerated static field getter
      // Get static field: static private readonly UnityEngine.Pool.ObjectPool`1<System.Collections.Generic.Queue`1<UnityEngine.UIElements.EventBase>> k_EventQueuePool
      static ::UnityEngine::Pool::ObjectPool_1<::System::Collections::Generic::Queue_1<::UnityEngine::UIElements::EventBase*>*>* _get_k_EventQueuePool() {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::StylePropertyAnimationSystem::Values_1::TransitionEventsFrameState::_get_k_EventQueuePool");
        return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Pool::ObjectPool_1<::System::Collections::Generic::Queue_1<::UnityEngine::UIElements::EventBase*>*>*>(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<typename StylePropertyAnimationSystem::Values_1<T>::TransitionEventsFrameState*>::get(), "k_EventQueuePool"));
      }
      // Autogenerated static field setter
      // Set static field: static private readonly UnityEngine.Pool.ObjectPool`1<System.Collections.Generic.Queue`1<UnityEngine.UIElements.EventBase>> k_EventQueuePool
      static void _set_k_EventQueuePool(::UnityEngine::Pool::ObjectPool_1<::System::Collections::Generic::Queue_1<::UnityEngine::UIElements::EventBase*>*>* value) {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::StylePropertyAnimationSystem::Values_1::TransitionEventsFrameState::_set_k_EventQueuePool");
        THROW_UNLESS(il2cpp_utils::SetFieldValue(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<typename StylePropertyAnimationSystem::Values_1<T>::TransitionEventsFrameState*>::get(), "k_EventQueuePool", value));
      }
      // Autogenerated instance field getter
      // Get instance field: public readonly System.Collections.Generic.Dictionary`2<UnityEngine.UIElements.StylePropertyAnimationSystem/ElementPropertyPair,UnityEngine.UIElements.StylePropertyAnimationSystem/TransitionState> elementPropertyStateDelta
      [[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::UnityEngine::UIElements::StylePropertyAnimationSystem::ElementPropertyPair, ::UnityEngine::UIElements::StylePropertyAnimationSystem::TransitionState>*& dyn_elementPropertyStateDelta() {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::StylePropertyAnimationSystem::Values_1::TransitionEventsFrameState::dyn_elementPropertyStateDelta");
        auto ___internal__instance = this;
        static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "elementPropertyStateDelta"))->offset;
        return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::UnityEngine::UIElements::StylePropertyAnimationSystem::ElementPropertyPair, ::UnityEngine::UIElements::StylePropertyAnimationSystem::TransitionState>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
      }
      // Autogenerated instance field getter
      // Get instance field: public readonly System.Collections.Generic.Dictionary`2<UnityEngine.UIElements.StylePropertyAnimationSystem/ElementPropertyPair,System.Collections.Generic.Queue`1<UnityEngine.UIElements.EventBase>> elementPropertyQueuedEvents
      [[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::UnityEngine::UIElements::StylePropertyAnimationSystem::ElementPropertyPair, ::System::Collections::Generic::Queue_1<::UnityEngine::UIElements::EventBase*>*>*& dyn_elementPropertyQueuedEvents() {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::StylePropertyAnimationSystem::Values_1::TransitionEventsFrameState::dyn_elementPropertyQueuedEvents");
        auto ___internal__instance = this;
        static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "elementPropertyQueuedEvents"))->offset;
        return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::UnityEngine::UIElements::StylePropertyAnimationSystem::ElementPropertyPair, ::System::Collections::Generic::Queue_1<::UnityEngine::UIElements::EventBase*>*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
      }
      // Autogenerated instance field getter
      // Get instance field: public UnityEngine.UIElements.IPanel panel
      [[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::IPanel*& dyn_panel() {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::StylePropertyAnimationSystem::Values_1::TransitionEventsFrameState::dyn_panel");
        auto ___internal__instance = this;
        static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "panel"))->offset;
        return *reinterpret_cast<::UnityEngine::UIElements::IPanel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
      }
      // Autogenerated instance field getter
      // Get instance field: private System.Int32 m_ChangesCount
      [[deprecated("Use field access instead!")]] int& dyn_m_ChangesCount() {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::StylePropertyAnimationSystem::Values_1::TransitionEventsFrameState::dyn_m_ChangesCount");
        auto ___internal__instance = this;
        static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ChangesCount"))->offset;
        return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
      }
      // static public System.Collections.Generic.Queue`1<UnityEngine.UIElements.EventBase> GetPooledQueue()
      // Offset: 0xFFFFFFFFFFFFFFFF
      static ::System::Collections::Generic::Queue_1<::UnityEngine::UIElements::EventBase*>* GetPooledQueue() {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::StylePropertyAnimationSystem::Values_1::TransitionEventsFrameState::GetPooledQueue");
        static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<typename StylePropertyAnimationSystem::Values_1<T>::TransitionEventsFrameState*>::get(), "GetPooledQueue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
        return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::Queue_1<::UnityEngine::UIElements::EventBase*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
      }
      // public System.Void RegisterChange()
      // Offset: 0xFFFFFFFFFFFFFFFF
      void RegisterChange() {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::StylePropertyAnimationSystem::Values_1::TransitionEventsFrameState::RegisterChange");
        static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RegisterChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
        ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
      }
      // public System.Void UnregisterChange()
      // Offset: 0xFFFFFFFFFFFFFFFF
      void UnregisterChange() {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::StylePropertyAnimationSystem::Values_1::TransitionEventsFrameState::UnregisterChange");
        static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnregisterChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
        ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
      }
      // public System.Boolean StateChanged()
      // Offset: 0xFFFFFFFFFFFFFFFF
      bool StateChanged() {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::StylePropertyAnimationSystem::Values_1::TransitionEventsFrameState::StateChanged");
        static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StateChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
        return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
      }
      // public System.Void Clear()
      // Offset: 0xFFFFFFFFFFFFFFFF
      void Clear() {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::StylePropertyAnimationSystem::Values_1::TransitionEventsFrameState::Clear");
        static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
        ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
      }
      // public System.Void .ctor()
      // Offset: 0xFFFFFFFFFFFFFFFF
      template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
      static typename StylePropertyAnimationSystem::Values_1<T>::TransitionEventsFrameState* New_ctor() {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::StylePropertyAnimationSystem::Values_1::TransitionEventsFrameState::.ctor");
        return THROW_UNLESS((::il2cpp_utils::New<typename StylePropertyAnimationSystem::Values_1<T>::TransitionEventsFrameState*, creationType>()));
      }
      // static private System.Void .cctor()
      // Offset: 0xFFFFFFFFFFFFFFFF
      static void _cctor() {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::StylePropertyAnimationSystem::Values_1::TransitionEventsFrameState::.cctor");
        static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<typename StylePropertyAnimationSystem::Values_1<T>::TransitionEventsFrameState*>::get(), ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
        ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
      }
    }; // UnityEngine.UIElements.StylePropertyAnimationSystem/Values`1/TransitionEventsFrameState
    // Could not write size check! Type: UnityEngine.UIElements.StylePropertyAnimationSystem/Values`1/TransitionEventsFrameState is generic, or has no fields that are valid for size checks!
    // WARNING Size may be invalid!
    // WARNING Layout: Sequential may not be correctly taken into account!
    // Autogenerated type: UnityEngine.UIElements.StylePropertyAnimationSystem/Values`1/TimingData
    // [TokenAttribute] Offset: FFFFFFFF
    struct TimingData : public ::il2cpp_utils::il2cpp_type_check::NestedType/*, public ::System::ValueType*/ {
      public:
      using declaring_type = StylePropertyAnimationSystem::Values_1<T>*;
      static constexpr std::string_view NESTED_NAME = "TimingData";
      static constexpr bool IS_VALUE_TYPE = true;
      public:
      // public System.Int64 startTimeMs
      // Size: 0x8
      // Offset: 0x0
      int64_t startTimeMs;
      // Field size check
      static_assert(sizeof(int64_t) == 0x8);
      // public System.Int32 durationMs
      // Size: 0x4
      // Offset: 0x0
      int durationMs;
      // Field size check
      static_assert(sizeof(int) == 0x4);
      // public System.Func`2<System.Single,System.Single> easingCurve
      // Size: 0x8
      // Offset: 0x0
      ::System::Func_2<float, float>* easingCurve;
      // Field size check
      static_assert(sizeof(::System::Func_2<float, float>*) == 0x8);
      // public System.Single easedProgress
      // Size: 0x4
      // Offset: 0x0
      float easedProgress;
      // Field size check
      static_assert(sizeof(float) == 0x4);
      // public System.Single reversingShorteningFactor
      // Size: 0x4
      // Offset: 0x0
      float reversingShorteningFactor;
      // Field size check
      static_assert(sizeof(float) == 0x4);
      // public System.Boolean isStarted
      // Size: 0x1
      // Offset: 0x0
      bool isStarted;
      // Field size check
      static_assert(sizeof(bool) == 0x1);
      // public System.Int32 delayMs
      // Size: 0x4
      // Offset: 0x0
      int delayMs;
      // Field size check
      static_assert(sizeof(int) == 0x4);
      public:
      // Creating value type constructor for type: TimingData
      constexpr TimingData(int64_t startTimeMs_ = {}, int durationMs_ = {}, ::System::Func_2<float, float>* easingCurve_ = {}, float easedProgress_ = {}, float reversingShorteningFactor_ = {}, bool isStarted_ = {}, int delayMs_ = {}) noexcept : startTimeMs{startTimeMs_}, durationMs{durationMs_}, easingCurve{easingCurve_}, easedProgress{easedProgress_}, reversingShorteningFactor{reversingShorteningFactor_}, isStarted{isStarted_}, delayMs{delayMs_} {}
      // Creating interface conversion operator: operator ::System::ValueType
      operator ::System::ValueType() noexcept {
        return *reinterpret_cast<::System::ValueType*>(this);
      }
      // Autogenerated instance field getter
      // Get instance field: public System.Int64 startTimeMs
      [[deprecated("Use field access instead!")]] int64_t& dyn_startTimeMs() {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::StylePropertyAnimationSystem::Values_1::TimingData::dyn_startTimeMs");
        auto ___internal__instance = *this;
        static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "startTimeMs"))->offset;
        return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
      }
      // Autogenerated instance field getter
      // Get instance field: public System.Int32 durationMs
      [[deprecated("Use field access instead!")]] int& dyn_durationMs() {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::StylePropertyAnimationSystem::Values_1::TimingData::dyn_durationMs");
        auto ___internal__instance = *this;
        static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "durationMs"))->offset;
        return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
      }
      // Autogenerated instance field getter
      // Get instance field: public System.Func`2<System.Single,System.Single> easingCurve
      [[deprecated("Use field access instead!")]] ::System::Func_2<float, float>*& dyn_easingCurve() {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::StylePropertyAnimationSystem::Values_1::TimingData::dyn_easingCurve");
        auto ___internal__instance = *this;
        static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "easingCurve"))->offset;
        return *reinterpret_cast<::System::Func_2<float, float>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
      }
      // Autogenerated instance field getter
      // Get instance field: public System.Single easedProgress
      [[deprecated("Use field access instead!")]] float& dyn_easedProgress() {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::StylePropertyAnimationSystem::Values_1::TimingData::dyn_easedProgress");
        auto ___internal__instance = *this;
        static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "easedProgress"))->offset;
        return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
      }
      // Autogenerated instance field getter
      // Get instance field: public System.Single reversingShorteningFactor
      [[deprecated("Use field access instead!")]] float& dyn_reversingShorteningFactor() {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::StylePropertyAnimationSystem::Values_1::TimingData::dyn_reversingShorteningFactor");
        auto ___internal__instance = *this;
        static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "reversingShorteningFactor"))->offset;
        return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
      }
      // Autogenerated instance field getter
      // Get instance field: public System.Boolean isStarted
      [[deprecated("Use field access instead!")]] bool& dyn_isStarted() {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::StylePropertyAnimationSystem::Values_1::TimingData::dyn_isStarted");
        auto ___internal__instance = *this;
        static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isStarted"))->offset;
        return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
      }
      // Autogenerated instance field getter
      // Get instance field: public System.Int32 delayMs
      [[deprecated("Use field access instead!")]] int& dyn_delayMs() {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::StylePropertyAnimationSystem::Values_1::TimingData::dyn_delayMs");
        auto ___internal__instance = *this;
        static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "delayMs"))->offset;
        return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
      }
    }; // UnityEngine.UIElements.StylePropertyAnimationSystem/Values`1/TimingData
    // Could not write size check! Type: UnityEngine.UIElements.StylePropertyAnimationSystem/Values`1/TimingData is generic, or has no fields that are valid for size checks!
    // WARNING Size may be invalid!
    // WARNING Layout: Sequential may not be correctly taken into account!
    // Autogenerated type: UnityEngine.UIElements.StylePropertyAnimationSystem/Values`1/StyleData
    // [TokenAttribute] Offset: FFFFFFFF
    struct StyleData : public ::il2cpp_utils::il2cpp_type_check::NestedType/*, public ::System::ValueType*/ {
      public:
      using declaring_type = StylePropertyAnimationSystem::Values_1<T>*;
      static constexpr std::string_view NESTED_NAME = "StyleData";
      static constexpr bool IS_VALUE_TYPE = true;
      public:
      // public T startValue
      // Size: 0xFFFFFFFF
      // Offset: 0x0
      T startValue;
      // public T endValue
      // Size: 0xFFFFFFFF
      // Offset: 0x0
      T endValue;
      // public T reversingAdjustedStartValue
      // Size: 0xFFFFFFFF
      // Offset: 0x0
      T reversingAdjustedStartValue;
      // public T currentValue
      // Size: 0xFFFFFFFF
      // Offset: 0x0
      T currentValue;
      public:
      // Creating value type constructor for type: StyleData
      constexpr StyleData(T startValue_ = {}, T endValue_ = {}, T reversingAdjustedStartValue_ = {}, T currentValue_ = {}) noexcept : startValue{startValue_}, endValue{endValue_}, reversingAdjustedStartValue{reversingAdjustedStartValue_}, currentValue{currentValue_} {}
      // Creating interface conversion operator: operator ::System::ValueType
      operator ::System::ValueType() noexcept {
        return *reinterpret_cast<::System::ValueType*>(this);
      }
      // Autogenerated instance field getter
      // Get instance field: public T startValue
      [[deprecated("Use field access instead!")]] T& dyn_startValue() {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::StylePropertyAnimationSystem::Values_1::StyleData::dyn_startValue");
        auto ___internal__instance = *this;
        static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "startValue"))->offset;
        return *reinterpret_cast<T*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
      }
      // Autogenerated instance field getter
      // Get instance field: public T endValue
      [[deprecated("Use field access instead!")]] T& dyn_endValue() {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::StylePropertyAnimationSystem::Values_1::StyleData::dyn_endValue");
        auto ___internal__instance = *this;
        static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "endValue"))->offset;
        return *reinterpret_cast<T*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
      }
      // Autogenerated instance field getter
      // Get instance field: public T reversingAdjustedStartValue
      [[deprecated("Use field access instead!")]] T& dyn_reversingAdjustedStartValue() {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::StylePropertyAnimationSystem::Values_1::StyleData::dyn_reversingAdjustedStartValue");
        auto ___internal__instance = *this;
        static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "reversingAdjustedStartValue"))->offset;
        return *reinterpret_cast<T*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
      }
      // Autogenerated instance field getter
      // Get instance field: public T currentValue
      [[deprecated("Use field access instead!")]] T& dyn_currentValue() {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::StylePropertyAnimationSystem::Values_1::StyleData::dyn_currentValue");
        auto ___internal__instance = *this;
        static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentValue"))->offset;
        return *reinterpret_cast<T*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
      }
    }; // UnityEngine.UIElements.StylePropertyAnimationSystem/Values`1/StyleData
    // Could not write size check! Type: UnityEngine.UIElements.StylePropertyAnimationSystem/Values`1/StyleData is generic, or has no fields that are valid for size checks!
    // WARNING Size may be invalid!
    // WARNING Layout: Sequential may not be correctly taken into account!
    // Autogenerated type: UnityEngine.UIElements.StylePropertyAnimationSystem/Values`1/EmptyData
    // [TokenAttribute] Offset: FFFFFFFF
    struct EmptyData : public ::il2cpp_utils::il2cpp_type_check::NestedType/*, public ::System::ValueType*/ {
      public:
      using declaring_type = StylePropertyAnimationSystem::Values_1<T>*;
      static constexpr std::string_view NESTED_NAME = "EmptyData";
      static constexpr bool IS_VALUE_TYPE = true;
      // Creating value type constructor for type: EmptyData
      constexpr EmptyData() noexcept {}
      // Creating interface conversion operator: operator ::System::ValueType
      operator ::System::ValueType() noexcept {
        return *reinterpret_cast<::System::ValueType*>(this);
      }
      // Autogenerated static field getter
      // Get static field: static public UnityEngine.UIElements.StylePropertyAnimationSystem/Values`1/EmptyData<T> Default
      static typename ::UnityEngine::UIElements::StylePropertyAnimationSystem::Values_1<T>::EmptyData _get_Default() {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::StylePropertyAnimationSystem::Values_1::EmptyData::_get_Default");
        return THROW_UNLESS(il2cpp_utils::GetFieldValue<typename ::UnityEngine::UIElements::StylePropertyAnimationSystem::Values_1<T>::EmptyData>(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<typename StylePropertyAnimationSystem::Values_1<T>::EmptyData>::get(), "Default"));
      }
      // Autogenerated static field setter
      // Set static field: static public UnityEngine.UIElements.StylePropertyAnimationSystem/Values`1/EmptyData<T> Default
      static void _set_Default(typename ::UnityEngine::UIElements::StylePropertyAnimationSystem::Values_1<T>::EmptyData value) {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::StylePropertyAnimationSystem::Values_1::EmptyData::_set_Default");
        THROW_UNLESS(il2cpp_utils::SetFieldValue(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<typename StylePropertyAnimationSystem::Values_1<T>::EmptyData>::get(), "Default", value));
      }
      // static private System.Void .cctor()
      // Offset: 0xFFFFFFFFFFFFFFFF
      static void _cctor() {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::StylePropertyAnimationSystem::Values_1::EmptyData::.cctor");
        static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<typename StylePropertyAnimationSystem::Values_1<T>::EmptyData>::get(), ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
        ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
      }
    }; // UnityEngine.UIElements.StylePropertyAnimationSystem/Values`1/EmptyData
    // Could not write size check! Type: UnityEngine.UIElements.StylePropertyAnimationSystem/Values`1/EmptyData is generic, or has no fields that are valid for size checks!
    public:
    // private System.Int64 m_CurrentTimeMs
    // Size: 0x8
    // Offset: 0x0
    int64_t m_CurrentTimeMs;
    // Field size check
    static_assert(sizeof(int64_t) == 0x8);
    // private UnityEngine.UIElements.StylePropertyAnimationSystem/Values`1/TransitionEventsFrameState<T> m_CurrentFrameEventsState
    // Size: 0x8
    // Offset: 0x0
    typename ::UnityEngine::UIElements::StylePropertyAnimationSystem::Values_1<T>::TransitionEventsFrameState* m_CurrentFrameEventsState;
    // Field size check
    static_assert(sizeof(typename ::UnityEngine::UIElements::StylePropertyAnimationSystem::Values_1<T>::TransitionEventsFrameState*) == 0x8);
    // private UnityEngine.UIElements.StylePropertyAnimationSystem/Values`1/TransitionEventsFrameState<T> m_NextFrameEventsState
    // Size: 0x8
    // Offset: 0x0
    typename ::UnityEngine::UIElements::StylePropertyAnimationSystem::Values_1<T>::TransitionEventsFrameState* m_NextFrameEventsState;
    // Field size check
    static_assert(sizeof(typename ::UnityEngine::UIElements::StylePropertyAnimationSystem::Values_1<T>::TransitionEventsFrameState*) == 0x8);
    // public UnityEngine.UIElements.StylePropertyAnimationSystem/AnimationDataSet`2<UnityEngine.UIElements.StylePropertyAnimationSystem/Values`1/TimingData<T>,UnityEngine.UIElements.StylePropertyAnimationSystem/Values`1/StyleData<T>> running
    // Size: 0xFFFFFFFF
    // Offset: 0x0
    ::UnityEngine::UIElements::StylePropertyAnimationSystem::AnimationDataSet_2<typename ::UnityEngine::UIElements::StylePropertyAnimationSystem::Values_1<T>::TimingData, typename ::UnityEngine::UIElements::StylePropertyAnimationSystem::Values_1<T>::StyleData> running;
    // public UnityEngine.UIElements.StylePropertyAnimationSystem/AnimationDataSet`2<UnityEngine.UIElements.StylePropertyAnimationSystem/Values`1/EmptyData<T>,T> completed
    // Size: 0xFFFFFFFF
    // Offset: 0x0
    ::UnityEngine::UIElements::StylePropertyAnimationSystem::AnimationDataSet_2<typename ::UnityEngine::UIElements::StylePropertyAnimationSystem::Values_1<T>::EmptyData, T> completed;
    public:
    // Autogenerated instance field getter
    // Get instance field: private System.Int64 m_CurrentTimeMs
    [[deprecated("Use field access instead!")]] int64_t& dyn_m_CurrentTimeMs() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::StylePropertyAnimationSystem::Values_1::dyn_m_CurrentTimeMs");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_CurrentTimeMs"))->offset;
      return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: private UnityEngine.UIElements.StylePropertyAnimationSystem/Values`1/TransitionEventsFrameState<T> m_CurrentFrameEventsState
    [[deprecated("Use field access instead!")]] typename ::UnityEngine::UIElements::StylePropertyAnimationSystem::Values_1<T>::TransitionEventsFrameState*& dyn_m_CurrentFrameEventsState() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::StylePropertyAnimationSystem::Values_1::dyn_m_CurrentFrameEventsState");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_CurrentFrameEventsState"))->offset;
      return *reinterpret_cast<typename ::UnityEngine::UIElements::StylePropertyAnimationSystem::Values_1<T>::TransitionEventsFrameState**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: private UnityEngine.UIElements.StylePropertyAnimationSystem/Values`1/TransitionEventsFrameState<T> m_NextFrameEventsState
    [[deprecated("Use field access instead!")]] typename ::UnityEngine::UIElements::StylePropertyAnimationSystem::Values_1<T>::TransitionEventsFrameState*& dyn_m_NextFrameEventsState() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::StylePropertyAnimationSystem::Values_1::dyn_m_NextFrameEventsState");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_NextFrameEventsState"))->offset;
      return *reinterpret_cast<typename ::UnityEngine::UIElements::StylePropertyAnimationSystem::Values_1<T>::TransitionEventsFrameState**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: public UnityEngine.UIElements.StylePropertyAnimationSystem/AnimationDataSet`2<UnityEngine.UIElements.StylePropertyAnimationSystem/Values`1/TimingData<T>,UnityEngine.UIElements.StylePropertyAnimationSystem/Values`1/StyleData<T>> running
    [[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::StylePropertyAnimationSystem::AnimationDataSet_2<typename ::UnityEngine::UIElements::StylePropertyAnimationSystem::Values_1<T>::TimingData, typename ::UnityEngine::UIElements::StylePropertyAnimationSystem::Values_1<T>::StyleData>& dyn_running() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::StylePropertyAnimationSystem::Values_1::dyn_running");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "running"))->offset;
      return *reinterpret_cast<::UnityEngine::UIElements::StylePropertyAnimationSystem::AnimationDataSet_2<typename ::UnityEngine::UIElements::StylePropertyAnimationSystem::Values_1<T>::TimingData, typename ::UnityEngine::UIElements::StylePropertyAnimationSystem::Values_1<T>::StyleData>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: public UnityEngine.UIElements.StylePropertyAnimationSystem/AnimationDataSet`2<UnityEngine.UIElements.StylePropertyAnimationSystem/Values`1/EmptyData<T>,T> completed
    [[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::StylePropertyAnimationSystem::AnimationDataSet_2<typename ::UnityEngine::UIElements::StylePropertyAnimationSystem::Values_1<T>::EmptyData, T>& dyn_completed() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::StylePropertyAnimationSystem::Values_1::dyn_completed");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "completed"))->offset;
      return *reinterpret_cast<::UnityEngine::UIElements::StylePropertyAnimationSystem::AnimationDataSet_2<typename ::UnityEngine::UIElements::StylePropertyAnimationSystem::Values_1<T>::EmptyData, T>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // public System.Boolean get_isEmpty()
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool get_isEmpty() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::StylePropertyAnimationSystem::Values_1::get_isEmpty");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isEmpty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
    }
    // public System.Func`3<T,T,System.Boolean> get_SameFunc()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::System::Func_3<T, T, bool>* get_SameFunc() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::StylePropertyAnimationSystem::Values_1::get_SameFunc");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UIElements::StylePropertyAnimationSystem::Values_1<T>*), -1));
      return ::il2cpp_utils::RunMethodRethrow<::System::Func_3<T, T, bool>*, false>(this, ___internal__method);
    }
    // protected System.Boolean ConvertUnits(UnityEngine.UIElements.VisualElement owner, UnityEngine.UIElements.StyleSheets.StylePropertyId prop, ref T a, ref T b)
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool ConvertUnits(::UnityEngine::UIElements::VisualElement* owner, ::UnityEngine::UIElements::StyleSheets::StylePropertyId prop, ByRef<T> a, ByRef<T> b) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::StylePropertyAnimationSystem::Values_1::ConvertUnits");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UIElements::StylePropertyAnimationSystem::Values_1<T>*), -1));
      return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, owner, prop, byref(a), byref(b));
    }
    // private System.Void SwapFrameStates()
    // Offset: 0xFFFFFFFFFFFFFFFF
    void SwapFrameStates() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::StylePropertyAnimationSystem::Values_1::SwapFrameStates");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SwapFrameStates", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
    }
    // private System.Void QueueEvent(UnityEngine.UIElements.EventBase evt, UnityEngine.UIElements.StylePropertyAnimationSystem/ElementPropertyPair epp)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void QueueEvent(::UnityEngine::UIElements::EventBase* evt, ::UnityEngine::UIElements::StylePropertyAnimationSystem::ElementPropertyPair epp) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::StylePropertyAnimationSystem::Values_1::QueueEvent");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "QueueEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(evt), ::il2cpp_utils::ExtractType(epp)})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, evt, epp);
    }
    // private System.Void ClearEventQueue(UnityEngine.UIElements.StylePropertyAnimationSystem/ElementPropertyPair epp)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void ClearEventQueue(::UnityEngine::UIElements::StylePropertyAnimationSystem::ElementPropertyPair epp) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::StylePropertyAnimationSystem::Values_1::ClearEventQueue");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearEventQueue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(epp)})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, epp);
    }
    // private System.Void QueueTransitionRunEvent(UnityEngine.UIElements.VisualElement ve, System.Int32 runningIndex)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void QueueTransitionRunEvent(::UnityEngine::UIElements::VisualElement* ve, int runningIndex) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::StylePropertyAnimationSystem::Values_1::QueueTransitionRunEvent");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "QueueTransitionRunEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ve), ::il2cpp_utils::ExtractType(runningIndex)})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ve, runningIndex);
    }
    // private System.Void QueueTransitionStartEvent(UnityEngine.UIElements.VisualElement ve, System.Int32 runningIndex)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void QueueTransitionStartEvent(::UnityEngine::UIElements::VisualElement* ve, int runningIndex) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::StylePropertyAnimationSystem::Values_1::QueueTransitionStartEvent");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "QueueTransitionStartEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ve), ::il2cpp_utils::ExtractType(runningIndex)})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ve, runningIndex);
    }
    // private System.Void QueueTransitionEndEvent(UnityEngine.UIElements.VisualElement ve, System.Int32 runningIndex)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void QueueTransitionEndEvent(::UnityEngine::UIElements::VisualElement* ve, int runningIndex) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::StylePropertyAnimationSystem::Values_1::QueueTransitionEndEvent");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "QueueTransitionEndEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ve), ::il2cpp_utils::ExtractType(runningIndex)})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ve, runningIndex);
    }
    // private System.Void QueueTransitionCancelEvent(UnityEngine.UIElements.VisualElement ve, System.Int32 runningIndex, System.Int64 panelElapsedMs)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void QueueTransitionCancelEvent(::UnityEngine::UIElements::VisualElement* ve, int runningIndex, int64_t panelElapsedMs) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::StylePropertyAnimationSystem::Values_1::QueueTransitionCancelEvent");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "QueueTransitionCancelEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ve), ::il2cpp_utils::ExtractType(runningIndex), ::il2cpp_utils::ExtractType(panelElapsedMs)})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ve, runningIndex, panelElapsedMs);
    }
    // private System.Void SendTransitionCancelEvent(UnityEngine.UIElements.VisualElement ve, System.Int32 runningIndex, System.Int64 panelElapsedMs)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void SendTransitionCancelEvent(::UnityEngine::UIElements::VisualElement* ve, int runningIndex, int64_t panelElapsedMs) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::StylePropertyAnimationSystem::Values_1::SendTransitionCancelEvent");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendTransitionCancelEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ve), ::il2cpp_utils::ExtractType(runningIndex), ::il2cpp_utils::ExtractType(panelElapsedMs)})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ve, runningIndex, panelElapsedMs);
    }
    // private System.Single ComputeReversingShorteningFactor(System.Int32 oldIndex)
    // Offset: 0xFFFFFFFFFFFFFFFF
    float ComputeReversingShorteningFactor(int oldIndex) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::StylePropertyAnimationSystem::Values_1::ComputeReversingShorteningFactor");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ComputeReversingShorteningFactor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(oldIndex)})));
      return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, oldIndex);
    }
    // private System.Int32 ComputeReversingDuration(System.Int32 newTransitionDurationMs, System.Single newReversingShorteningFactor)
    // Offset: 0xFFFFFFFFFFFFFFFF
    int ComputeReversingDuration(int newTransitionDurationMs, float newReversingShorteningFactor) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::StylePropertyAnimationSystem::Values_1::ComputeReversingDuration");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ComputeReversingDuration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newTransitionDurationMs), ::il2cpp_utils::ExtractType(newReversingShorteningFactor)})));
      return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, newTransitionDurationMs, newReversingShorteningFactor);
    }
    // private System.Int32 ComputeReversingDelay(System.Int32 delayMs, System.Single newReversingShorteningFactor)
    // Offset: 0xFFFFFFFFFFFFFFFF
    int ComputeReversingDelay(int delayMs, float newReversingShorteningFactor) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::StylePropertyAnimationSystem::Values_1::ComputeReversingDelay");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ComputeReversingDelay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(delayMs), ::il2cpp_utils::ExtractType(newReversingShorteningFactor)})));
      return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, delayMs, newReversingShorteningFactor);
    }
    // public System.Boolean StartTransition(UnityEngine.UIElements.VisualElement owner, UnityEngine.UIElements.StyleSheets.StylePropertyId prop, T startValue, T endValue, System.Int32 durationMs, System.Int32 delayMs, System.Func`2<System.Single,System.Single> easingCurve, System.Int64 currentTimeMs)
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool StartTransition(::UnityEngine::UIElements::VisualElement* owner, ::UnityEngine::UIElements::StyleSheets::StylePropertyId prop, T startValue, T endValue, int durationMs, int delayMs, ::System::Func_2<float, float>* easingCurve, int64_t currentTimeMs) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::StylePropertyAnimationSystem::Values_1::StartTransition");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartTransition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(owner), ::il2cpp_utils::ExtractType(prop), ::il2cpp_utils::ExtractType(startValue), ::il2cpp_utils::ExtractType(endValue), ::il2cpp_utils::ExtractType(durationMs), ::il2cpp_utils::ExtractType(delayMs), ::il2cpp_utils::ExtractType(easingCurve), ::il2cpp_utils::ExtractType(currentTimeMs)})));
      return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, owner, prop, startValue, endValue, durationMs, delayMs, easingCurve, currentTimeMs);
    }
    // private System.Void ForceComputedStyleEndValue(System.Int32 runningIndex)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void ForceComputedStyleEndValue(int runningIndex) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::StylePropertyAnimationSystem::Values_1::ForceComputedStyleEndValue");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ForceComputedStyleEndValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(runningIndex)})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, runningIndex);
    }
    // private System.Void ProcessEventQueue()
    // Offset: 0xFFFFFFFFFFFFFFFF
    void ProcessEventQueue() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::StylePropertyAnimationSystem::Values_1::ProcessEventQueue");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessEventQueue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
    }
    // private System.Void UpdateProgress(System.Int64 currentTimeMs)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void UpdateProgress(int64_t currentTimeMs) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::StylePropertyAnimationSystem::Values_1::UpdateProgress");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateProgress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(currentTimeMs)})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, currentTimeMs);
    }
    // protected System.Void .ctor()
    // Offset: 0xFFFFFFFFFFFFFFFF
    // Implemented from: UnityEngine.UIElements.StylePropertyAnimationSystem/Values
    // Base method: System.Void Values::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static StylePropertyAnimationSystem::Values_1<T>* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::StylePropertyAnimationSystem::Values_1::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<StylePropertyAnimationSystem::Values_1<T>*, creationType>()));
    }
    // public override System.Void CancelAllAnimations()
    // Offset: 0xFFFFFFFFFFFFFFFF
    // Implemented from: UnityEngine.UIElements.StylePropertyAnimationSystem/Values
    // Base method: System.Void Values::CancelAllAnimations()
    void CancelAllAnimations() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::StylePropertyAnimationSystem::Values_1::CancelAllAnimations");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UIElements::StylePropertyAnimationSystem::Values*), -1));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
    }
    // public override System.Void CancelAllAnimations(UnityEngine.UIElements.VisualElement ve)
    // Offset: 0xFFFFFFFFFFFFFFFF
    // Implemented from: UnityEngine.UIElements.StylePropertyAnimationSystem/Values
    // Base method: System.Void Values::CancelAllAnimations(UnityEngine.UIElements.VisualElement ve)
    void CancelAllAnimations(::UnityEngine::UIElements::VisualElement* ve) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::StylePropertyAnimationSystem::Values_1::CancelAllAnimations");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UIElements::StylePropertyAnimationSystem::Values*), -1));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ve);
    }
    // public override System.Void CancelAnimation(UnityEngine.UIElements.VisualElement ve, UnityEngine.UIElements.StyleSheets.StylePropertyId id)
    // Offset: 0xFFFFFFFFFFFFFFFF
    // Implemented from: UnityEngine.UIElements.StylePropertyAnimationSystem/Values
    // Base method: System.Void Values::CancelAnimation(UnityEngine.UIElements.VisualElement ve, UnityEngine.UIElements.StyleSheets.StylePropertyId id)
    void CancelAnimation(::UnityEngine::UIElements::VisualElement* ve, ::UnityEngine::UIElements::StyleSheets::StylePropertyId id) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::StylePropertyAnimationSystem::Values_1::CancelAnimation");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UIElements::StylePropertyAnimationSystem::Values*), -1));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ve, id);
    }
    // public override System.Void UpdateAnimation(UnityEngine.UIElements.VisualElement ve, UnityEngine.UIElements.StyleSheets.StylePropertyId id)
    // Offset: 0xFFFFFFFFFFFFFFFF
    // Implemented from: UnityEngine.UIElements.StylePropertyAnimationSystem/Values
    // Base method: System.Void Values::UpdateAnimation(UnityEngine.UIElements.VisualElement ve, UnityEngine.UIElements.StyleSheets.StylePropertyId id)
    void UpdateAnimation(::UnityEngine::UIElements::VisualElement* ve, ::UnityEngine::UIElements::StyleSheets::StylePropertyId id) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::StylePropertyAnimationSystem::Values_1::UpdateAnimation");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UIElements::StylePropertyAnimationSystem::Values*), -1));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ve, id);
    }
    // public override System.Void GetAllAnimations(UnityEngine.UIElements.VisualElement ve, System.Collections.Generic.List`1<UnityEngine.UIElements.StyleSheets.StylePropertyId> outPropertyIds)
    // Offset: 0xFFFFFFFFFFFFFFFF
    // Implemented from: UnityEngine.UIElements.StylePropertyAnimationSystem/Values
    // Base method: System.Void Values::GetAllAnimations(UnityEngine.UIElements.VisualElement ve, System.Collections.Generic.List`1<UnityEngine.UIElements.StyleSheets.StylePropertyId> outPropertyIds)
    void GetAllAnimations(::UnityEngine::UIElements::VisualElement* ve, ::System::Collections::Generic::List_1<::UnityEngine::UIElements::StyleSheets::StylePropertyId>* outPropertyIds) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::StylePropertyAnimationSystem::Values_1::GetAllAnimations");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UIElements::StylePropertyAnimationSystem::Values*), -1));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ve, outPropertyIds);
    }
    // public override System.Void Update(System.Int64 currentTimeMs)
    // Offset: 0xFFFFFFFFFFFFFFFF
    // Implemented from: UnityEngine.UIElements.StylePropertyAnimationSystem/Values
    // Base method: System.Void Values::Update(System.Int64 currentTimeMs)
    void Update(int64_t currentTimeMs) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::StylePropertyAnimationSystem::Values_1::Update");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UIElements::StylePropertyAnimationSystem::Values*), -1));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, currentTimeMs);
    }
  }; // UnityEngine.UIElements.StylePropertyAnimationSystem/Values`1
  // Could not write size check! Type: UnityEngine.UIElements.StylePropertyAnimationSystem/Values`1 is generic, or has no fields that are valid for size checks!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
