// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.UIElements.VisualElement
#include "UnityEngine/UIElements/VisualElement.hpp"
// Including type: UnityEngine.UIElements.VisualElement/BaseVisualElementScheduledItem
#include "UnityEngine/UIElements/VisualElement_BaseVisualElementScheduledItem.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE_GENERIC_CLASS(::UnityEngine::UIElements::VisualElement::VisualElementScheduledItem_1, "UnityEngine.UIElements", "VisualElement/VisualElementScheduledItem`1");
// Type namespace: UnityEngine.UIElements
namespace UnityEngine::UIElements {
  // WARNING Size may be invalid!
  // Autogenerated type: UnityEngine.UIElements.VisualElement/VisualElementScheduledItem`1
  // [TokenAttribute] Offset: FFFFFFFF
  template<typename ActionType>
  class VisualElement::VisualElementScheduledItem_1 : public ::UnityEngine::UIElements::VisualElement::BaseVisualElementScheduledItem {
    public:
    public:
    // public ActionType updateEvent
    // Size: 0xFFFFFFFF
    // Offset: 0x0
    ActionType updateEvent;
    public:
    // Autogenerated instance field getter
    // Get instance field: public ActionType updateEvent
    [[deprecated("Use field access instead!")]] ActionType& dyn_updateEvent() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::VisualElement::VisualElementScheduledItem_1::dyn_updateEvent");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "updateEvent"))->offset;
      return *reinterpret_cast<ActionType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // public System.Void .ctor(UnityEngine.UIElements.VisualElement handler, ActionType upEvent)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static VisualElement::VisualElementScheduledItem_1<ActionType>* New_ctor(::UnityEngine::UIElements::VisualElement* handler, ActionType upEvent) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::VisualElement::VisualElementScheduledItem_1::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<VisualElement::VisualElementScheduledItem_1<ActionType>*, creationType>(handler, upEvent)));
    }
  }; // UnityEngine.UIElements.VisualElement/VisualElementScheduledItem`1
  // Could not write size check! Type: UnityEngine.UIElements.VisualElement/VisualElementScheduledItem`1 is generic, or has no fields that are valid for size checks!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
