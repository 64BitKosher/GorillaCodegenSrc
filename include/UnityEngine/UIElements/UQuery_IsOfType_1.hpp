// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.UIElements.UQuery
#include "UnityEngine/UIElements/UQuery.hpp"
// Including type: UnityEngine.UIElements.UQuery/IVisualPredicateWrapper
#include "UnityEngine/UIElements/UQuery_IVisualPredicateWrapper.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::UIElements
namespace UnityEngine::UIElements {
  // Forward declaring type: VisualElement
  class VisualElement;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE_GENERIC_CLASS(::UnityEngine::UIElements::UQuery::IsOfType_1, "UnityEngine.UIElements", "UQuery/IsOfType`1");
// Type namespace: UnityEngine.UIElements
namespace UnityEngine::UIElements {
  // WARNING Size may be invalid!
  // Autogenerated type: UnityEngine.UIElements.UQuery/IsOfType`1
  // [TokenAttribute] Offset: FFFFFFFF
  template<typename T>
  class UQuery::IsOfType_1 : public ::Il2CppObject/*, public ::UnityEngine::UIElements::UQuery::IVisualPredicateWrapper*/ {
    public:
    // Creating interface conversion operator: operator ::UnityEngine::UIElements::UQuery::IVisualPredicateWrapper
    operator ::UnityEngine::UIElements::UQuery::IVisualPredicateWrapper() noexcept {
      return *reinterpret_cast<::UnityEngine::UIElements::UQuery::IVisualPredicateWrapper*>(this);
    }
    // Autogenerated static field getter
    // Get static field: static public UnityEngine.UIElements.UQuery/IsOfType`1<T> s_Instance
    static ::UnityEngine::UIElements::UQuery::IsOfType_1<T>* _get_s_Instance() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::UQuery::IsOfType_1::_get_s_Instance");
      return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::UIElements::UQuery::IsOfType_1<T>*>(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<UQuery::IsOfType_1<T>*>::get(), "s_Instance"));
    }
    // Autogenerated static field setter
    // Set static field: static public UnityEngine.UIElements.UQuery/IsOfType`1<T> s_Instance
    static void _set_s_Instance(::UnityEngine::UIElements::UQuery::IsOfType_1<T>* value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::UQuery::IsOfType_1::_set_s_Instance");
      THROW_UNLESS(il2cpp_utils::SetFieldValue(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<UQuery::IsOfType_1<T>*>::get(), "s_Instance", value));
    }
    // public System.Boolean Predicate(System.Object e)
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool Predicate(::Il2CppObject* e) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::UQuery::IsOfType_1::Predicate");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UIElements::UQuery::IsOfType_1<T>*), -1));
      return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, e);
    }
    // public System.Void .ctor()
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static UQuery::IsOfType_1<T>* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::UQuery::IsOfType_1::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<UQuery::IsOfType_1<T>*, creationType>()));
    }
    // static private System.Void .cctor()
    // Offset: 0xFFFFFFFFFFFFFFFF
    static void _cctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::UQuery::IsOfType_1::.cctor");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<UQuery::IsOfType_1<T>*>::get(), ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
    }
  }; // UnityEngine.UIElements.UQuery/IsOfType`1
  // Could not write size check! Type: UnityEngine.UIElements.UQuery/IsOfType`1 is generic, or has no fields that are valid for size checks!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
