// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Action
  class Action;
  // Forward declaring type: Action`1<T>
  template<typename T>
  class Action_1;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Rect
  struct Rect;
}
// Forward declaring namespace: UnityEngine::UIElements
namespace UnityEngine::UIElements {
  // Forward declaring type: VisualElement
  class VisualElement;
}
// Completed forward declares
// Begin il2cpp-utils forward declares
struct Il2CppObject;
// Completed il2cpp-utils forward declares
// Type namespace: UnityEngine.UIElements
namespace UnityEngine::UIElements {
  // Forward declaring type: IGenericMenu
  class IGenericMenu;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::UIElements::IGenericMenu);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::UIElements::IGenericMenu*, "UnityEngine.UIElements", "IGenericMenu");
// Type namespace: UnityEngine.UIElements
namespace UnityEngine::UIElements {
  // Size: 0x0
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.UIElements.IGenericMenu
  // [TokenAttribute] Offset: FFFFFFFF
  class IGenericMenu {
    public:
    // public System.Void AddItem(System.String itemName, System.Boolean isChecked, System.Action action)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void AddItem(::StringW itemName, bool isChecked, ::System::Action* action);
    // public System.Void AddItem(System.String itemName, System.Boolean isChecked, System.Action`1<System.Object> action, System.Object data)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void AddItem(::StringW itemName, bool isChecked, ::System::Action_1<::Il2CppObject*>* action, ::Il2CppObject* data);
    // public System.Void DropDown(UnityEngine.Rect position, UnityEngine.UIElements.VisualElement targetElement, System.Boolean anchored)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void DropDown(::UnityEngine::Rect position, ::UnityEngine::UIElements::VisualElement* targetElement, bool anchored);
  }; // UnityEngine.UIElements.IGenericMenu
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::UIElements::IGenericMenu::AddItem
// Il2CppName: AddItem
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::IGenericMenu::*)(::StringW, bool, ::System::Action*)>(&UnityEngine::UIElements::IGenericMenu::AddItem)> {
  static const MethodInfo* get() {
    static auto* itemName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* isChecked = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* action = &::il2cpp_utils::GetClassFromName("System", "Action")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::IGenericMenu*), "AddItem", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{itemName, isChecked, action});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::IGenericMenu::AddItem
// Il2CppName: AddItem
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::IGenericMenu::*)(::StringW, bool, ::System::Action_1<::Il2CppObject*>*, ::Il2CppObject*)>(&UnityEngine::UIElements::IGenericMenu::AddItem)> {
  static const MethodInfo* get() {
    static auto* itemName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* isChecked = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* action = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Object")})->byval_arg;
    static auto* data = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::IGenericMenu*), "AddItem", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{itemName, isChecked, action, data});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::IGenericMenu::DropDown
// Il2CppName: DropDown
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::IGenericMenu::*)(::UnityEngine::Rect, ::UnityEngine::UIElements::VisualElement*, bool)>(&UnityEngine::UIElements::IGenericMenu::DropDown)> {
  static const MethodInfo* get() {
    static auto* position = &::il2cpp_utils::GetClassFromName("UnityEngine", "Rect")->byval_arg;
    static auto* targetElement = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "VisualElement")->byval_arg;
    static auto* anchored = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::IGenericMenu*), "DropDown", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{position, targetElement, anchored});
  }
};
