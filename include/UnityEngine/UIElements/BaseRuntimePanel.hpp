// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.UIElements.Panel
#include "UnityEngine/UIElements/Panel.hpp"
// Including type: UnityEngine.Matrix4x4
#include "UnityEngine/Matrix4x4.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::UIElements
namespace UnityEngine::UIElements {
  // Forward declaring type: EventDispatcher
  class EventDispatcher;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: GameObject
  class GameObject;
  // Forward declaring type: Shader
  class Shader;
  // Forward declaring type: RenderTexture
  class RenderTexture;
  // Forward declaring type: ScriptableObject
  class ScriptableObject;
  // Forward declaring type: Event
  class Event;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Action
  class Action;
  // Forward declaring type: Func`2<T, TResult>
  template<typename T, typename TResult>
  class Func_2;
}
// Completed forward declares
// Type namespace: UnityEngine.UIElements
namespace UnityEngine::UIElements {
  // Forward declaring type: BaseRuntimePanel
  class BaseRuntimePanel;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::UIElements::BaseRuntimePanel);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::UIElements::BaseRuntimePanel*, "UnityEngine.UIElements", "BaseRuntimePanel");
// Type namespace: UnityEngine.UIElements
namespace UnityEngine::UIElements {
  // Size: 0x1E8
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.UIElements.BaseRuntimePanel
  // [TokenAttribute] Offset: FFFFFFFF
  class BaseRuntimePanel : public ::UnityEngine::UIElements::Panel {
    public:
    // Writing base type padding for base size: 0x159 to desired offset: 0x160
    char ___base_padding[0x7] = {};
    // Nested type: ::UnityEngine::UIElements::BaseRuntimePanel::$$c
    class $$c;
    public:
    // private UnityEngine.GameObject m_SelectableGameObject
    // Size: 0x8
    // Offset: 0x160
    ::UnityEngine::GameObject* m_SelectableGameObject;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // readonly System.Int32 m_RuntimePanelCreationIndex
    // Size: 0x4
    // Offset: 0x168
    int m_RuntimePanelCreationIndex;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private System.Single m_SortingPriority
    // Size: 0x4
    // Offset: 0x16C
    float m_SortingPriority;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // System.Int32 resolvedSortingIndex
    // Size: 0x4
    // Offset: 0x170
    int resolvedSortingIndex;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // Padding between fields: resolvedSortingIndex and: destroyed
    char __padding3[0x4] = {};
    // private System.Action destroyed
    // Size: 0x8
    // Offset: 0x178
    ::System::Action* destroyed;
    // Field size check
    static_assert(sizeof(::System::Action*) == 0x8);
    // private UnityEngine.Shader m_StandardWorldSpaceShader
    // Size: 0x8
    // Offset: 0x180
    ::UnityEngine::Shader* m_StandardWorldSpaceShader;
    // Field size check
    static_assert(sizeof(::UnityEngine::Shader*) == 0x8);
    // private System.Boolean m_DrawToCameras
    // Size: 0x1
    // Offset: 0x188
    bool m_DrawToCameras;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: m_DrawToCameras and: targetTexture
    char __padding6[0x7] = {};
    // UnityEngine.RenderTexture targetTexture
    // Size: 0x8
    // Offset: 0x190
    ::UnityEngine::RenderTexture* targetTexture;
    // Field size check
    static_assert(sizeof(::UnityEngine::RenderTexture*) == 0x8);
    // UnityEngine.Matrix4x4 panelToWorld
    // Size: 0x40
    // Offset: 0x198
    ::UnityEngine::Matrix4x4 panelToWorld;
    // Field size check
    static_assert(sizeof(::UnityEngine::Matrix4x4) == 0x40);
    // private System.Int32 <targetDisplay>k__BackingField
    // Size: 0x4
    // Offset: 0x1D8
    int targetDisplay;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // Padding between fields: targetDisplay and: m_ScreenToPanelSpace
    char __padding9[0x4] = {};
    // private System.Func`2<UnityEngine.Vector2,UnityEngine.Vector2> m_ScreenToPanelSpace
    // Size: 0x8
    // Offset: 0x1E0
    ::System::Func_2<::UnityEngine::Vector2, ::UnityEngine::Vector2>* m_ScreenToPanelSpace;
    // Field size check
    static_assert(sizeof(::System::Func_2<::UnityEngine::Vector2, ::UnityEngine::Vector2>*) == 0x8);
    public:
    // Get static field: static private System.Int32 s_CurrentRuntimePanelCounter
    static int _get_s_CurrentRuntimePanelCounter();
    // Set static field: static private System.Int32 s_CurrentRuntimePanelCounter
    static void _set_s_CurrentRuntimePanelCounter(int value);
    // Get static field: static readonly System.Func`2<UnityEngine.Vector2,UnityEngine.Vector2> DefaultScreenToPanelSpace
    static ::System::Func_2<::UnityEngine::Vector2, ::UnityEngine::Vector2>* _get_DefaultScreenToPanelSpace();
    // Set static field: static readonly System.Func`2<UnityEngine.Vector2,UnityEngine.Vector2> DefaultScreenToPanelSpace
    static void _set_DefaultScreenToPanelSpace(::System::Func_2<::UnityEngine::Vector2, ::UnityEngine::Vector2>* value);
    // Get instance field reference: private UnityEngine.GameObject m_SelectableGameObject
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_m_SelectableGameObject();
    // Get instance field reference: readonly System.Int32 m_RuntimePanelCreationIndex
    [[deprecated("Use field access instead!")]] int& dyn_m_RuntimePanelCreationIndex();
    // Get instance field reference: private System.Single m_SortingPriority
    [[deprecated("Use field access instead!")]] float& dyn_m_SortingPriority();
    // Get instance field reference: System.Int32 resolvedSortingIndex
    [[deprecated("Use field access instead!")]] int& dyn_resolvedSortingIndex();
    // Get instance field reference: private System.Action destroyed
    [[deprecated("Use field access instead!")]] ::System::Action*& dyn_destroyed();
    // Get instance field reference: private UnityEngine.Shader m_StandardWorldSpaceShader
    [[deprecated("Use field access instead!")]] ::UnityEngine::Shader*& dyn_m_StandardWorldSpaceShader();
    // Get instance field reference: private System.Boolean m_DrawToCameras
    [[deprecated("Use field access instead!")]] bool& dyn_m_DrawToCameras();
    // Get instance field reference: UnityEngine.RenderTexture targetTexture
    [[deprecated("Use field access instead!")]] ::UnityEngine::RenderTexture*& dyn_targetTexture();
    // Get instance field reference: UnityEngine.Matrix4x4 panelToWorld
    [[deprecated("Use field access instead!")]] ::UnityEngine::Matrix4x4& dyn_panelToWorld();
    // Get instance field reference: private System.Int32 <targetDisplay>k__BackingField
    [[deprecated("Use field access instead!")]] int& dyn_$targetDisplay$k__BackingField();
    // Get instance field reference: private System.Func`2<UnityEngine.Vector2,UnityEngine.Vector2> m_ScreenToPanelSpace
    [[deprecated("Use field access instead!")]] ::System::Func_2<::UnityEngine::Vector2, ::UnityEngine::Vector2>*& dyn_m_ScreenToPanelSpace();
    // public UnityEngine.GameObject get_selectableGameObject()
    // Offset: 0x5668288
    ::UnityEngine::GameObject* get_selectableGameObject();
    // public System.Void set_selectableGameObject(UnityEngine.GameObject value)
    // Offset: 0x5668290
    void set_selectableGameObject(::UnityEngine::GameObject* value);
    // public System.Single get_sortingPriority()
    // Offset: 0x5668670
    float get_sortingPriority();
    // public System.Void set_sortingPriority(System.Single value)
    // Offset: 0x565D518
    void set_sortingPriority(float value);
    // public System.Void add_destroyed(System.Action value)
    // Offset: 0x5668678
    void add_destroyed(::System::Action* value);
    // public System.Void remove_destroyed(System.Action value)
    // Offset: 0x5668718
    void remove_destroyed(::System::Action* value);
    // protected System.Void .ctor(UnityEngine.ScriptableObject ownerObject, UnityEngine.UIElements.EventDispatcher dispatcher)
    // Offset: 0x565DE10
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static BaseRuntimePanel* New_ctor(::UnityEngine::ScriptableObject* ownerObject, ::UnityEngine::UIElements::EventDispatcher* dispatcher) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::BaseRuntimePanel::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<BaseRuntimePanel*, creationType>(ownerObject, dispatcher)));
    }
    // System.Boolean get_drawToCameras()
    // Offset: 0x5668814
    bool get_drawToCameras();
    // System.Void set_drawToCameras(System.Boolean value)
    // Offset: 0x566881C
    void set_drawToCameras(bool value);
    // System.Int32 get_targetDisplay()
    // Offset: 0x5668930
    int get_targetDisplay();
    // System.Void set_targetDisplay(System.Int32 value)
    // Offset: 0x5668938
    void set_targetDisplay(int value);
    // System.Int32 get_screenRenderingWidth()
    // Offset: 0x5668940
    int get_screenRenderingWidth();
    // System.Int32 get_screenRenderingHeight()
    // Offset: 0x5668A58
    int get_screenRenderingHeight();
    // static System.Int32 getScreenRenderingHeight(System.Int32 display)
    // Offset: 0x5668AB0
    static int getScreenRenderingHeight(int display);
    // static System.Int32 getScreenRenderingWidth(System.Int32 display)
    // Offset: 0x5668998
    static int getScreenRenderingWidth(int display);
    // public System.Func`2<UnityEngine.Vector2,UnityEngine.Vector2> get_screenToPanelSpace()
    // Offset: 0x5668D4C
    ::System::Func_2<::UnityEngine::Vector2, ::UnityEngine::Vector2>* get_screenToPanelSpace();
    // public System.Void set_screenToPanelSpace(System.Func`2<UnityEngine.Vector2,UnityEngine.Vector2> value)
    // Offset: 0x5668D54
    void set_screenToPanelSpace(::System::Func_2<::UnityEngine::Vector2, ::UnityEngine::Vector2>* value);
    // UnityEngine.Vector2 ScreenToPanel(UnityEngine.Vector2 screen)
    // Offset: 0x5668DD4
    ::UnityEngine::Vector2 ScreenToPanel(::UnityEngine::Vector2 screen);
    // System.Boolean ScreenToPanel(UnityEngine.Vector2 screenPosition, UnityEngine.Vector2 screenDelta, out UnityEngine.Vector2 panelPosition, out UnityEngine.Vector2 panelDelta, System.Boolean allowOutside)
    // Offset: 0x5668E0C
    bool ScreenToPanel(::UnityEngine::Vector2 screenPosition, ::UnityEngine::Vector2 screenDelta, ByRef<::UnityEngine::Vector2> panelPosition, ByRef<::UnityEngine::Vector2> panelDelta, bool allowOutside);
    // private System.Void AssignPanelToComponents(UnityEngine.UIElements.BaseRuntimePanel panel)
    // Offset: 0x566833C
    void AssignPanelToComponents(::UnityEngine::UIElements::BaseRuntimePanel* panel);
    // System.Void PointerLeavesPanel(System.Int32 pointerId, UnityEngine.Vector2 position)
    // Offset: 0x5668F30
    void PointerLeavesPanel(int pointerId, ::UnityEngine::Vector2 position);
    // System.Void PointerEntersPanel(System.Int32 pointerId, UnityEngine.Vector2 position)
    // Offset: 0x5668FE8
    void PointerEntersPanel(int pointerId, ::UnityEngine::Vector2 position);
    // protected override System.Void Dispose(System.Boolean disposing)
    // Offset: 0x56687B8
    // Implemented from: UnityEngine.UIElements.Panel
    // Base method: System.Void Panel::Dispose(System.Boolean disposing)
    void Dispose(bool disposing);
    // override UnityEngine.Shader get_standardWorldSpaceShader()
    // Offset: 0x566880C
    // Implemented from: UnityEngine.UIElements.BaseVisualElementPanel
    // Base method: UnityEngine.Shader BaseVisualElementPanel::get_standardWorldSpaceShader()
    ::UnityEngine::Shader* get_standardWorldSpaceShader();
    // public override System.Void Repaint(UnityEngine.Event e)
    // Offset: 0x5668B70
    // Implemented from: UnityEngine.UIElements.Panel
    // Base method: System.Void Panel::Repaint(UnityEngine.Event e)
    void Repaint(::UnityEngine::Event* e);
    // static private System.Void .cctor()
    // Offset: 0x5669088
    // Implemented from: UnityEngine.UIElements.Panel
    // Base method: System.Void Panel::.cctor()
    static void _cctor();
  }; // UnityEngine.UIElements.BaseRuntimePanel
  #pragma pack(pop)
  static check_size<sizeof(BaseRuntimePanel), 480 + sizeof(::System::Func_2<::UnityEngine::Vector2, ::UnityEngine::Vector2>*)> __UnityEngine_UIElements_BaseRuntimePanelSizeCheck;
  static_assert(sizeof(BaseRuntimePanel) == 0x1E8);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseRuntimePanel::get_selectableGameObject
// Il2CppName: get_selectableGameObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::GameObject* (UnityEngine::UIElements::BaseRuntimePanel::*)()>(&UnityEngine::UIElements::BaseRuntimePanel::get_selectableGameObject)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseRuntimePanel*), "get_selectableGameObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseRuntimePanel::set_selectableGameObject
// Il2CppName: set_selectableGameObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::BaseRuntimePanel::*)(::UnityEngine::GameObject*)>(&UnityEngine::UIElements::BaseRuntimePanel::set_selectableGameObject)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseRuntimePanel*), "set_selectableGameObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseRuntimePanel::get_sortingPriority
// Il2CppName: get_sortingPriority
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::UIElements::BaseRuntimePanel::*)()>(&UnityEngine::UIElements::BaseRuntimePanel::get_sortingPriority)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseRuntimePanel*), "get_sortingPriority", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseRuntimePanel::set_sortingPriority
// Il2CppName: set_sortingPriority
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::BaseRuntimePanel::*)(float)>(&UnityEngine::UIElements::BaseRuntimePanel::set_sortingPriority)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseRuntimePanel*), "set_sortingPriority", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseRuntimePanel::add_destroyed
// Il2CppName: add_destroyed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::BaseRuntimePanel::*)(::System::Action*)>(&UnityEngine::UIElements::BaseRuntimePanel::add_destroyed)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Action")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseRuntimePanel*), "add_destroyed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseRuntimePanel::remove_destroyed
// Il2CppName: remove_destroyed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::BaseRuntimePanel::*)(::System::Action*)>(&UnityEngine::UIElements::BaseRuntimePanel::remove_destroyed)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Action")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseRuntimePanel*), "remove_destroyed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseRuntimePanel::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseRuntimePanel::get_drawToCameras
// Il2CppName: get_drawToCameras
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::BaseRuntimePanel::*)()>(&UnityEngine::UIElements::BaseRuntimePanel::get_drawToCameras)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseRuntimePanel*), "get_drawToCameras", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseRuntimePanel::set_drawToCameras
// Il2CppName: set_drawToCameras
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::BaseRuntimePanel::*)(bool)>(&UnityEngine::UIElements::BaseRuntimePanel::set_drawToCameras)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseRuntimePanel*), "set_drawToCameras", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseRuntimePanel::get_targetDisplay
// Il2CppName: get_targetDisplay
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::UIElements::BaseRuntimePanel::*)()>(&UnityEngine::UIElements::BaseRuntimePanel::get_targetDisplay)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseRuntimePanel*), "get_targetDisplay", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseRuntimePanel::set_targetDisplay
// Il2CppName: set_targetDisplay
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::BaseRuntimePanel::*)(int)>(&UnityEngine::UIElements::BaseRuntimePanel::set_targetDisplay)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseRuntimePanel*), "set_targetDisplay", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseRuntimePanel::get_screenRenderingWidth
// Il2CppName: get_screenRenderingWidth
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::UIElements::BaseRuntimePanel::*)()>(&UnityEngine::UIElements::BaseRuntimePanel::get_screenRenderingWidth)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseRuntimePanel*), "get_screenRenderingWidth", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseRuntimePanel::get_screenRenderingHeight
// Il2CppName: get_screenRenderingHeight
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::UIElements::BaseRuntimePanel::*)()>(&UnityEngine::UIElements::BaseRuntimePanel::get_screenRenderingHeight)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseRuntimePanel*), "get_screenRenderingHeight", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseRuntimePanel::getScreenRenderingHeight
// Il2CppName: getScreenRenderingHeight
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(int)>(&UnityEngine::UIElements::BaseRuntimePanel::getScreenRenderingHeight)> {
  static const MethodInfo* get() {
    static auto* display = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseRuntimePanel*), "getScreenRenderingHeight", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{display});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseRuntimePanel::getScreenRenderingWidth
// Il2CppName: getScreenRenderingWidth
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(int)>(&UnityEngine::UIElements::BaseRuntimePanel::getScreenRenderingWidth)> {
  static const MethodInfo* get() {
    static auto* display = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseRuntimePanel*), "getScreenRenderingWidth", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{display});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseRuntimePanel::get_screenToPanelSpace
// Il2CppName: get_screenToPanelSpace
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Func_2<::UnityEngine::Vector2, ::UnityEngine::Vector2>* (UnityEngine::UIElements::BaseRuntimePanel::*)()>(&UnityEngine::UIElements::BaseRuntimePanel::get_screenToPanelSpace)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseRuntimePanel*), "get_screenToPanelSpace", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseRuntimePanel::set_screenToPanelSpace
// Il2CppName: set_screenToPanelSpace
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::BaseRuntimePanel::*)(::System::Func_2<::UnityEngine::Vector2, ::UnityEngine::Vector2>*)>(&UnityEngine::UIElements::BaseRuntimePanel::set_screenToPanelSpace)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Func`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine", "Vector2"), ::il2cpp_utils::GetClassFromName("UnityEngine", "Vector2")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseRuntimePanel*), "set_screenToPanelSpace", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseRuntimePanel::ScreenToPanel
// Il2CppName: ScreenToPanel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector2 (UnityEngine::UIElements::BaseRuntimePanel::*)(::UnityEngine::Vector2)>(&UnityEngine::UIElements::BaseRuntimePanel::ScreenToPanel)> {
  static const MethodInfo* get() {
    static auto* screen = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector2")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseRuntimePanel*), "ScreenToPanel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{screen});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseRuntimePanel::ScreenToPanel
// Il2CppName: ScreenToPanel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::BaseRuntimePanel::*)(::UnityEngine::Vector2, ::UnityEngine::Vector2, ByRef<::UnityEngine::Vector2>, ByRef<::UnityEngine::Vector2>, bool)>(&UnityEngine::UIElements::BaseRuntimePanel::ScreenToPanel)> {
  static const MethodInfo* get() {
    static auto* screenPosition = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector2")->byval_arg;
    static auto* screenDelta = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector2")->byval_arg;
    static auto* panelPosition = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector2")->this_arg;
    static auto* panelDelta = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector2")->this_arg;
    static auto* allowOutside = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseRuntimePanel*), "ScreenToPanel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{screenPosition, screenDelta, panelPosition, panelDelta, allowOutside});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseRuntimePanel::AssignPanelToComponents
// Il2CppName: AssignPanelToComponents
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::BaseRuntimePanel::*)(::UnityEngine::UIElements::BaseRuntimePanel*)>(&UnityEngine::UIElements::BaseRuntimePanel::AssignPanelToComponents)> {
  static const MethodInfo* get() {
    static auto* panel = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "BaseRuntimePanel")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseRuntimePanel*), "AssignPanelToComponents", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{panel});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseRuntimePanel::PointerLeavesPanel
// Il2CppName: PointerLeavesPanel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::BaseRuntimePanel::*)(int, ::UnityEngine::Vector2)>(&UnityEngine::UIElements::BaseRuntimePanel::PointerLeavesPanel)> {
  static const MethodInfo* get() {
    static auto* pointerId = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* position = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector2")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseRuntimePanel*), "PointerLeavesPanel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{pointerId, position});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseRuntimePanel::PointerEntersPanel
// Il2CppName: PointerEntersPanel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::BaseRuntimePanel::*)(int, ::UnityEngine::Vector2)>(&UnityEngine::UIElements::BaseRuntimePanel::PointerEntersPanel)> {
  static const MethodInfo* get() {
    static auto* pointerId = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* position = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector2")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseRuntimePanel*), "PointerEntersPanel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{pointerId, position});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseRuntimePanel::Dispose
// Il2CppName: Dispose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::BaseRuntimePanel::*)(bool)>(&UnityEngine::UIElements::BaseRuntimePanel::Dispose)> {
  static const MethodInfo* get() {
    static auto* disposing = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseRuntimePanel*), "Dispose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{disposing});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseRuntimePanel::get_standardWorldSpaceShader
// Il2CppName: get_standardWorldSpaceShader
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Shader* (UnityEngine::UIElements::BaseRuntimePanel::*)()>(&UnityEngine::UIElements::BaseRuntimePanel::get_standardWorldSpaceShader)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseRuntimePanel*), "get_standardWorldSpaceShader", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseRuntimePanel::Repaint
// Il2CppName: Repaint
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::BaseRuntimePanel::*)(::UnityEngine::Event*)>(&UnityEngine::UIElements::BaseRuntimePanel::Repaint)> {
  static const MethodInfo* get() {
    static auto* e = &::il2cpp_utils::GetClassFromName("UnityEngine", "Event")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseRuntimePanel*), "Repaint", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{e});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseRuntimePanel::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&UnityEngine::UIElements::BaseRuntimePanel::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseRuntimePanel*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
