// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.EventModifiers
#include "UnityEngine/EventModifiers.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
// Including type: UnityEngine.KeyCode
#include "UnityEngine/KeyCode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::UIElements
namespace UnityEngine::UIElements {
  // Forward declaring type: EventBase
  class EventBase;
}
// Completed forward declares
// Type namespace: UnityEngine.UIElements
namespace UnityEngine::UIElements {
  // Forward declaring type: DropdownMenuEventInfo
  class DropdownMenuEventInfo;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::UIElements::DropdownMenuEventInfo);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::UIElements::DropdownMenuEventInfo*, "UnityEngine.UIElements", "DropdownMenuEventInfo");
// Type namespace: UnityEngine.UIElements
namespace UnityEngine::UIElements {
  // Size: 0x2C
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.UIElements.DropdownMenuEventInfo
  // [TokenAttribute] Offset: FFFFFFFF
  class DropdownMenuEventInfo : public ::Il2CppObject {
    public:
    public:
    // private readonly UnityEngine.EventModifiers <modifiers>k__BackingField
    // Size: 0x4
    // Offset: 0x10
    ::UnityEngine::EventModifiers modifiers;
    // Field size check
    static_assert(sizeof(::UnityEngine::EventModifiers) == 0x4);
    // private readonly UnityEngine.Vector2 <mousePosition>k__BackingField
    // Size: 0x8
    // Offset: 0x14
    ::UnityEngine::Vector2 mousePosition;
    // Field size check
    static_assert(sizeof(::UnityEngine::Vector2) == 0x8);
    // private readonly UnityEngine.Vector2 <localMousePosition>k__BackingField
    // Size: 0x8
    // Offset: 0x1C
    ::UnityEngine::Vector2 localMousePosition;
    // Field size check
    static_assert(sizeof(::UnityEngine::Vector2) == 0x8);
    // private readonly System.Char <character>k__BackingField
    // Size: 0x2
    // Offset: 0x24
    ::Il2CppChar character;
    // Field size check
    static_assert(sizeof(::Il2CppChar) == 0x2);
    // Padding between fields: character and: keyCode
    char __padding3[0x2] = {};
    // private readonly UnityEngine.KeyCode <keyCode>k__BackingField
    // Size: 0x4
    // Offset: 0x28
    ::UnityEngine::KeyCode keyCode;
    // Field size check
    static_assert(sizeof(::UnityEngine::KeyCode) == 0x4);
    public:
    // Get instance field reference: private readonly UnityEngine.EventModifiers <modifiers>k__BackingField
    [[deprecated("Use field access instead!")]] ::UnityEngine::EventModifiers& dyn_$modifiers$k__BackingField();
    // Get instance field reference: private readonly UnityEngine.Vector2 <mousePosition>k__BackingField
    [[deprecated("Use field access instead!")]] ::UnityEngine::Vector2& dyn_$mousePosition$k__BackingField();
    // Get instance field reference: private readonly UnityEngine.Vector2 <localMousePosition>k__BackingField
    [[deprecated("Use field access instead!")]] ::UnityEngine::Vector2& dyn_$localMousePosition$k__BackingField();
    // Get instance field reference: private readonly System.Char <character>k__BackingField
    [[deprecated("Use field access instead!")]] ::Il2CppChar& dyn_$character$k__BackingField();
    // Get instance field reference: private readonly UnityEngine.KeyCode <keyCode>k__BackingField
    [[deprecated("Use field access instead!")]] ::UnityEngine::KeyCode& dyn_$keyCode$k__BackingField();
    // public System.Void .ctor(UnityEngine.UIElements.EventBase e)
    // Offset: 0x5643E64
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static DropdownMenuEventInfo* New_ctor(::UnityEngine::UIElements::EventBase* e) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::DropdownMenuEventInfo::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<DropdownMenuEventInfo*, creationType>(e)));
    }
  }; // UnityEngine.UIElements.DropdownMenuEventInfo
  #pragma pack(pop)
  static check_size<sizeof(DropdownMenuEventInfo), 40 + sizeof(::UnityEngine::KeyCode)> __UnityEngine_UIElements_DropdownMenuEventInfoSizeCheck;
  static_assert(sizeof(DropdownMenuEventInfo) == 0x2C);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::UIElements::DropdownMenuEventInfo::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
