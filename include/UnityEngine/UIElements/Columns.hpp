// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Collections.Generic.ICollection`1
#include "System/Collections/Generic/ICollection_1.hpp"
// Including type: UnityEngine.UIElements.ColumnsDataType
#include "UnityEngine/UIElements/ColumnsDataType.hpp"
// Including type: UnityEngine.UIElements.ColumnDataType
#include "UnityEngine/UIElements/ColumnDataType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Action`1<T>
  template<typename T>
  class Action_1;
  // Forward declaring type: Action`2<T1, T2>
  template<typename T1, typename T2>
  class Action_2;
  // Forward declaring type: Action`3<T1, T2, T3>
  template<typename T1, typename T2, typename T3>
  class Action_3;
}
// Forward declaring namespace: UnityEngine::UIElements
namespace UnityEngine::UIElements {
  // Forward declaring type: Column
  class Column;
  // Skipping declaration: StretchMode because it is already included!
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: IList`1<T>
  template<typename T>
  class IList_1;
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
  // Skipping declaration: IEnumerable`1 because it is already included!
  // Forward declaring type: IEnumerator`1<T>
  template<typename T>
  class IEnumerator_1;
}
// Forward declaring namespace: System::Collections
namespace System::Collections {
  // Forward declaring type: IEnumerator
  class IEnumerator;
}
// Completed forward declares
// Type namespace: UnityEngine.UIElements
namespace UnityEngine::UIElements {
  // Forward declaring type: Columns
  class Columns;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::UIElements::Columns);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::UIElements::Columns*, "UnityEngine.UIElements", "Columns");
// Type namespace: UnityEngine.UIElements
namespace UnityEngine::UIElements {
  // Size: 0x70
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.UIElements.Columns
  // [TokenAttribute] Offset: FFFFFFFF
  // [DefaultMemberAttribute] Offset: FFFFFFFF
  class Columns : public ::Il2CppObject/*, public ::System::Collections::Generic::ICollection_1<::UnityEngine::UIElements::Column*>*/ {
    public:
    // Nested type: ::UnityEngine::UIElements::Columns::StretchMode
    struct StretchMode;
    // Nested type: ::UnityEngine::UIElements::Columns::UxmlObjectFactory_1<T>
    template<typename T>
    class UxmlObjectFactory_1;
    // Nested type: ::UnityEngine::UIElements::Columns::UxmlObjectTraits_1<T>
    template<typename T>
    class UxmlObjectTraits_1;
    // Nested type: ::UnityEngine::UIElements::Columns::$$c
    class $$c;
    // Size: 0x4
    #pragma pack(push, 1)
    // Autogenerated type: UnityEngine.UIElements.Columns/StretchMode
    // [TokenAttribute] Offset: FFFFFFFF
    struct StretchMode/*, public ::System::Enum*/ {
      public:
      public:
      // public System.Int32 value__
      // Size: 0x4
      // Offset: 0x0
      int value;
      // Field size check
      static_assert(sizeof(int) == 0x4);
      public:
      // Creating value type constructor for type: StretchMode
      constexpr StretchMode(int value_ = {}) noexcept : value{value_} {}
      // Creating interface conversion operator: operator ::System::Enum
      operator ::System::Enum() noexcept {
        return *reinterpret_cast<::System::Enum*>(this);
      }
      // Creating conversion operator: operator int
      constexpr operator int() const noexcept {
        return value;
      }
      // static field const value: static public UnityEngine.UIElements.Columns/StretchMode Grow
      static constexpr const int Grow = 0;
      // Get static field: static public UnityEngine.UIElements.Columns/StretchMode Grow
      static ::UnityEngine::UIElements::Columns::StretchMode _get_Grow();
      // Set static field: static public UnityEngine.UIElements.Columns/StretchMode Grow
      static void _set_Grow(::UnityEngine::UIElements::Columns::StretchMode value);
      // static field const value: static public UnityEngine.UIElements.Columns/StretchMode GrowAndFill
      static constexpr const int GrowAndFill = 1;
      // Get static field: static public UnityEngine.UIElements.Columns/StretchMode GrowAndFill
      static ::UnityEngine::UIElements::Columns::StretchMode _get_GrowAndFill();
      // Set static field: static public UnityEngine.UIElements.Columns/StretchMode GrowAndFill
      static void _set_GrowAndFill(::UnityEngine::UIElements::Columns::StretchMode value);
      // Get instance field reference: public System.Int32 value__
      [[deprecated("Use field access instead!")]] int& dyn_value__();
    }; // UnityEngine.UIElements.Columns/StretchMode
    #pragma pack(pop)
    static check_size<sizeof(Columns::StretchMode), 0 + sizeof(int)> __UnityEngine_UIElements_Columns_StretchModeSizeCheck;
    static_assert(sizeof(Columns::StretchMode) == 0x4);
    public:
    // private System.Collections.Generic.IList`1<UnityEngine.UIElements.Column> m_Columns
    // Size: 0x8
    // Offset: 0x10
    ::System::Collections::Generic::IList_1<::UnityEngine::UIElements::Column*>* m_Columns;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::IList_1<::UnityEngine::UIElements::Column*>*) == 0x8);
    // private System.Collections.Generic.List`1<UnityEngine.UIElements.Column> m_DisplayColumns
    // Size: 0x8
    // Offset: 0x18
    ::System::Collections::Generic::List_1<::UnityEngine::UIElements::Column*>* m_DisplayColumns;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::UnityEngine::UIElements::Column*>*) == 0x8);
    // private System.Collections.Generic.List`1<UnityEngine.UIElements.Column> m_VisibleColumns
    // Size: 0x8
    // Offset: 0x20
    ::System::Collections::Generic::List_1<::UnityEngine::UIElements::Column*>* m_VisibleColumns;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::UnityEngine::UIElements::Column*>*) == 0x8);
    // private System.Boolean m_VisibleColumnsDirty
    // Size: 0x1
    // Offset: 0x28
    bool m_VisibleColumnsDirty;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: m_VisibleColumnsDirty and: m_StretchMode
    char __padding3[0x3] = {};
    // private UnityEngine.UIElements.Columns/StretchMode m_StretchMode
    // Size: 0x4
    // Offset: 0x2C
    ::UnityEngine::UIElements::Columns::StretchMode m_StretchMode;
    // Field size check
    static_assert(sizeof(::UnityEngine::UIElements::Columns::StretchMode) == 0x4);
    // private System.Boolean m_Reorderable
    // Size: 0x1
    // Offset: 0x30
    bool m_Reorderable;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean m_Resizable
    // Size: 0x1
    // Offset: 0x31
    bool m_Resizable;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean m_ResizePreview
    // Size: 0x1
    // Offset: 0x32
    bool m_ResizePreview;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: m_ResizePreview and: m_PrimaryColumnName
    char __padding7[0x5] = {};
    // private System.String m_PrimaryColumnName
    // Size: 0x8
    // Offset: 0x38
    ::StringW m_PrimaryColumnName;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private System.Action`1<UnityEngine.UIElements.ColumnsDataType> changed
    // Size: 0x8
    // Offset: 0x40
    ::System::Action_1<::UnityEngine::UIElements::ColumnsDataType>* changed;
    // Field size check
    static_assert(sizeof(::System::Action_1<::UnityEngine::UIElements::ColumnsDataType>*) == 0x8);
    // private System.Action`2<UnityEngine.UIElements.Column,System.Int32> columnAdded
    // Size: 0x8
    // Offset: 0x48
    ::System::Action_2<::UnityEngine::UIElements::Column*, int>* columnAdded;
    // Field size check
    static_assert(sizeof(::System::Action_2<::UnityEngine::UIElements::Column*, int>*) == 0x8);
    // private System.Action`1<UnityEngine.UIElements.Column> columnRemoved
    // Size: 0x8
    // Offset: 0x50
    ::System::Action_1<::UnityEngine::UIElements::Column*>* columnRemoved;
    // Field size check
    static_assert(sizeof(::System::Action_1<::UnityEngine::UIElements::Column*>*) == 0x8);
    // private System.Action`2<UnityEngine.UIElements.Column,UnityEngine.UIElements.ColumnDataType> columnChanged
    // Size: 0x8
    // Offset: 0x58
    ::System::Action_2<::UnityEngine::UIElements::Column*, ::UnityEngine::UIElements::ColumnDataType>* columnChanged;
    // Field size check
    static_assert(sizeof(::System::Action_2<::UnityEngine::UIElements::Column*, ::UnityEngine::UIElements::ColumnDataType>*) == 0x8);
    // private System.Action`1<UnityEngine.UIElements.Column> columnResized
    // Size: 0x8
    // Offset: 0x60
    ::System::Action_1<::UnityEngine::UIElements::Column*>* columnResized;
    // Field size check
    static_assert(sizeof(::System::Action_1<::UnityEngine::UIElements::Column*>*) == 0x8);
    // private System.Action`3<UnityEngine.UIElements.Column,System.Int32,System.Int32> columnReordered
    // Size: 0x8
    // Offset: 0x68
    ::System::Action_3<::UnityEngine::UIElements::Column*, int, int>* columnReordered;
    // Field size check
    static_assert(sizeof(::System::Action_3<::UnityEngine::UIElements::Column*, int, int>*) == 0x8);
    public:
    // Creating interface conversion operator: operator ::System::Collections::Generic::ICollection_1<::UnityEngine::UIElements::Column*>
    operator ::System::Collections::Generic::ICollection_1<::UnityEngine::UIElements::Column*>() noexcept {
      return *reinterpret_cast<::System::Collections::Generic::ICollection_1<::UnityEngine::UIElements::Column*>*>(this);
    }
    // Get instance field reference: private System.Collections.Generic.IList`1<UnityEngine.UIElements.Column> m_Columns
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::IList_1<::UnityEngine::UIElements::Column*>*& dyn_m_Columns();
    // Get instance field reference: private System.Collections.Generic.List`1<UnityEngine.UIElements.Column> m_DisplayColumns
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::UIElements::Column*>*& dyn_m_DisplayColumns();
    // Get instance field reference: private System.Collections.Generic.List`1<UnityEngine.UIElements.Column> m_VisibleColumns
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::UIElements::Column*>*& dyn_m_VisibleColumns();
    // Get instance field reference: private System.Boolean m_VisibleColumnsDirty
    [[deprecated("Use field access instead!")]] bool& dyn_m_VisibleColumnsDirty();
    // Get instance field reference: private UnityEngine.UIElements.Columns/StretchMode m_StretchMode
    [[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::Columns::StretchMode& dyn_m_StretchMode();
    // Get instance field reference: private System.Boolean m_Reorderable
    [[deprecated("Use field access instead!")]] bool& dyn_m_Reorderable();
    // Get instance field reference: private System.Boolean m_Resizable
    [[deprecated("Use field access instead!")]] bool& dyn_m_Resizable();
    // Get instance field reference: private System.Boolean m_ResizePreview
    [[deprecated("Use field access instead!")]] bool& dyn_m_ResizePreview();
    // Get instance field reference: private System.String m_PrimaryColumnName
    [[deprecated("Use field access instead!")]] ::StringW& dyn_m_PrimaryColumnName();
    // Get instance field reference: private System.Action`1<UnityEngine.UIElements.ColumnsDataType> changed
    [[deprecated("Use field access instead!")]] ::System::Action_1<::UnityEngine::UIElements::ColumnsDataType>*& dyn_changed();
    // Get instance field reference: private System.Action`2<UnityEngine.UIElements.Column,System.Int32> columnAdded
    [[deprecated("Use field access instead!")]] ::System::Action_2<::UnityEngine::UIElements::Column*, int>*& dyn_columnAdded();
    // Get instance field reference: private System.Action`1<UnityEngine.UIElements.Column> columnRemoved
    [[deprecated("Use field access instead!")]] ::System::Action_1<::UnityEngine::UIElements::Column*>*& dyn_columnRemoved();
    // Get instance field reference: private System.Action`2<UnityEngine.UIElements.Column,UnityEngine.UIElements.ColumnDataType> columnChanged
    [[deprecated("Use field access instead!")]] ::System::Action_2<::UnityEngine::UIElements::Column*, ::UnityEngine::UIElements::ColumnDataType>*& dyn_columnChanged();
    // Get instance field reference: private System.Action`1<UnityEngine.UIElements.Column> columnResized
    [[deprecated("Use field access instead!")]] ::System::Action_1<::UnityEngine::UIElements::Column*>*& dyn_columnResized();
    // Get instance field reference: private System.Action`3<UnityEngine.UIElements.Column,System.Int32,System.Int32> columnReordered
    [[deprecated("Use field access instead!")]] ::System::Action_3<::UnityEngine::UIElements::Column*, int, int>*& dyn_columnReordered();
    // public System.String get_primaryColumnName()
    // Offset: 0x561D93C
    ::StringW get_primaryColumnName();
    // public System.Void set_primaryColumnName(System.String value)
    // Offset: 0x561D944
    void set_primaryColumnName(::StringW value);
    // public System.Boolean get_reorderable()
    // Offset: 0x561D9C4
    bool get_reorderable();
    // public System.Void set_reorderable(System.Boolean value)
    // Offset: 0x561D9CC
    void set_reorderable(bool value);
    // public System.Boolean get_resizable()
    // Offset: 0x561DA00
    bool get_resizable();
    // public System.Void set_resizable(System.Boolean value)
    // Offset: 0x561DA08
    void set_resizable(bool value);
    // public System.Boolean get_resizePreview()
    // Offset: 0x561DA3C
    bool get_resizePreview();
    // public System.Void set_resizePreview(System.Boolean value)
    // Offset: 0x561DA44
    void set_resizePreview(bool value);
    // System.Collections.Generic.IEnumerable`1<UnityEngine.UIElements.Column> get_displayList()
    // Offset: 0x5619A2C
    ::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::Column*>* get_displayList();
    // System.Collections.Generic.IEnumerable`1<UnityEngine.UIElements.Column> get_visibleList()
    // Offset: 0x5619AF4
    ::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::Column*>* get_visibleList();
    // System.Void add_changed(System.Action`1<UnityEngine.UIElements.ColumnsDataType> value)
    // Offset: 0x561DD30
    void add_changed(::System::Action_1<::UnityEngine::UIElements::ColumnsDataType>* value);
    // System.Void remove_changed(System.Action`1<UnityEngine.UIElements.ColumnsDataType> value)
    // Offset: 0x561DDE0
    void remove_changed(::System::Action_1<::UnityEngine::UIElements::ColumnsDataType>* value);
    // public UnityEngine.UIElements.Columns/StretchMode get_stretchMode()
    // Offset: 0x561DE90
    ::UnityEngine::UIElements::Columns::StretchMode get_stretchMode();
    // public System.Void set_stretchMode(UnityEngine.UIElements.Columns/StretchMode value)
    // Offset: 0x561DE98
    void set_stretchMode(::UnityEngine::UIElements::Columns::StretchMode value);
    // System.Void add_columnAdded(System.Action`2<UnityEngine.UIElements.Column,System.Int32> value)
    // Offset: 0x561ABF8
    void add_columnAdded(::System::Action_2<::UnityEngine::UIElements::Column*, int>* value);
    // System.Void remove_columnAdded(System.Action`2<UnityEngine.UIElements.Column,System.Int32> value)
    // Offset: 0x561DEC8
    void remove_columnAdded(::System::Action_2<::UnityEngine::UIElements::Column*, int>* value);
    // System.Void add_columnRemoved(System.Action`1<UnityEngine.UIElements.Column> value)
    // Offset: 0x561ACA8
    void add_columnRemoved(::System::Action_1<::UnityEngine::UIElements::Column*>* value);
    // System.Void remove_columnRemoved(System.Action`1<UnityEngine.UIElements.Column> value)
    // Offset: 0x561DF78
    void remove_columnRemoved(::System::Action_1<::UnityEngine::UIElements::Column*>* value);
    // System.Void add_columnChanged(System.Action`2<UnityEngine.UIElements.Column,UnityEngine.UIElements.ColumnDataType> value)
    // Offset: 0x561E028
    void add_columnChanged(::System::Action_2<::UnityEngine::UIElements::Column*, ::UnityEngine::UIElements::ColumnDataType>* value);
    // System.Void remove_columnChanged(System.Action`2<UnityEngine.UIElements.Column,UnityEngine.UIElements.ColumnDataType> value)
    // Offset: 0x561E0D8
    void remove_columnChanged(::System::Action_2<::UnityEngine::UIElements::Column*, ::UnityEngine::UIElements::ColumnDataType>* value);
    // System.Void add_columnResized(System.Action`1<UnityEngine.UIElements.Column> value)
    // Offset: 0x561E188
    void add_columnResized(::System::Action_1<::UnityEngine::UIElements::Column*>* value);
    // System.Void remove_columnResized(System.Action`1<UnityEngine.UIElements.Column> value)
    // Offset: 0x561E238
    void remove_columnResized(::System::Action_1<::UnityEngine::UIElements::Column*>* value);
    // System.Void add_columnReordered(System.Action`3<UnityEngine.UIElements.Column,System.Int32,System.Int32> value)
    // Offset: 0x561AD58
    void add_columnReordered(::System::Action_3<::UnityEngine::UIElements::Column*, int, int>* value);
    // System.Void remove_columnReordered(System.Action`3<UnityEngine.UIElements.Column,System.Int32,System.Int32> value)
    // Offset: 0x561E2E8
    void remove_columnReordered(::System::Action_3<::UnityEngine::UIElements::Column*, int, int>* value);
    // public System.Boolean IsPrimary(UnityEngine.UIElements.Column column)
    // Offset: 0x561E398
    bool IsPrimary(::UnityEngine::UIElements::Column* column);
    // public System.Collections.Generic.IEnumerator`1<UnityEngine.UIElements.Column> GetEnumerator()
    // Offset: 0x561BEA4
    ::System::Collections::Generic::IEnumerator_1<::UnityEngine::UIElements::Column*>* GetEnumerator();
    // private System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()
    // Offset: 0x561E400
    ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator();
    // public System.Void Add(UnityEngine.UIElements.Column item)
    // Offset: 0x561E404
    void Add(::UnityEngine::UIElements::Column* item);
    // public System.Void Clear()
    // Offset: 0x561E728
    void Clear();
    // public System.Boolean Contains(UnityEngine.UIElements.Column item)
    // Offset: 0x561EAE0
    bool Contains(::UnityEngine::UIElements::Column* item);
    // public System.Boolean Contains(System.String name)
    // Offset: 0x561EB8C
    bool Contains(::StringW name);
    // public System.Void CopyTo(UnityEngine.UIElements.Column[] array, System.Int32 arrayIndex)
    // Offset: 0x561EEB4
    void CopyTo(::ArrayW<::UnityEngine::UIElements::Column*> array, int arrayIndex);
    // public System.Boolean Remove(UnityEngine.UIElements.Column column)
    // Offset: 0x561E8C4
    bool Remove(::UnityEngine::UIElements::Column* column);
    // private System.Void OnColumnChanged(UnityEngine.UIElements.Column column, UnityEngine.UIElements.ColumnDataType type)
    // Offset: 0x561EF70
    void OnColumnChanged(::UnityEngine::UIElements::Column* column, ::UnityEngine::UIElements::ColumnDataType type);
    // private System.Void OnColumnResized(UnityEngine.UIElements.Column column)
    // Offset: 0x561F03C
    void OnColumnResized(::UnityEngine::UIElements::Column* column);
    // public System.Int32 get_Count()
    // Offset: 0x561AB58
    int get_Count();
    // public System.Boolean get_IsReadOnly()
    // Offset: 0x561F058
    bool get_IsReadOnly();
    // public System.Int32 IndexOf(UnityEngine.UIElements.Column column)
    // Offset: 0x56198D0
    int IndexOf(::UnityEngine::UIElements::Column* column);
    // public System.Void Insert(System.Int32 index, UnityEngine.UIElements.Column column)
    // Offset: 0x561E4B8
    void Insert(int index, ::UnityEngine::UIElements::Column* column);
    // public UnityEngine.UIElements.Column get_Item(System.Int32 index)
    // Offset: 0x561A9CC
    ::UnityEngine::UIElements::Column* get_Item(int index);
    // public UnityEngine.UIElements.Column get_Item(System.String name)
    // Offset: 0x561F0FC
    ::UnityEngine::UIElements::Column* get_Item(::StringW name);
    // public System.Void ReorderDisplay(System.Int32 from, System.Int32 to)
    // Offset: 0x561F424
    void ReorderDisplay(int from, int to);
    // private System.Void InitOrderColumns()
    // Offset: 0x561DA78
    void InitOrderColumns();
    // private System.Void DirtyVisibleColumns()
    // Offset: 0x561EFC8
    void DirtyVisibleColumns();
    // private System.Void UpdateVisibleColumns()
    // Offset: 0x561DB08
    void UpdateVisibleColumns();
    // private System.Void NotifyChange(UnityEngine.UIElements.ColumnsDataType type)
    // Offset: 0x561D9A8
    void NotifyChange(::UnityEngine::UIElements::ColumnsDataType type);
    // public System.Void .ctor()
    // Offset: 0x561F528
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static Columns* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::Columns::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<Columns*, creationType>()));
    }
  }; // UnityEngine.UIElements.Columns
  #pragma pack(pop)
  static check_size<sizeof(Columns), 104 + sizeof(::System::Action_3<::UnityEngine::UIElements::Column*, int, int>*)> __UnityEngine_UIElements_ColumnsSizeCheck;
  static_assert(sizeof(Columns) == 0x70);
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::UIElements::Columns::StretchMode, "UnityEngine.UIElements", "Columns/StretchMode");
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::UIElements::Columns::get_primaryColumnName
// Il2CppName: get_primaryColumnName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (UnityEngine::UIElements::Columns::*)()>(&UnityEngine::UIElements::Columns::get_primaryColumnName)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::Columns*), "get_primaryColumnName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::Columns::set_primaryColumnName
// Il2CppName: set_primaryColumnName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::Columns::*)(::StringW)>(&UnityEngine::UIElements::Columns::set_primaryColumnName)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::Columns*), "set_primaryColumnName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::Columns::get_reorderable
// Il2CppName: get_reorderable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::Columns::*)()>(&UnityEngine::UIElements::Columns::get_reorderable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::Columns*), "get_reorderable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::Columns::set_reorderable
// Il2CppName: set_reorderable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::Columns::*)(bool)>(&UnityEngine::UIElements::Columns::set_reorderable)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::Columns*), "set_reorderable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::Columns::get_resizable
// Il2CppName: get_resizable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::Columns::*)()>(&UnityEngine::UIElements::Columns::get_resizable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::Columns*), "get_resizable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::Columns::set_resizable
// Il2CppName: set_resizable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::Columns::*)(bool)>(&UnityEngine::UIElements::Columns::set_resizable)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::Columns*), "set_resizable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::Columns::get_resizePreview
// Il2CppName: get_resizePreview
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::Columns::*)()>(&UnityEngine::UIElements::Columns::get_resizePreview)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::Columns*), "get_resizePreview", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::Columns::set_resizePreview
// Il2CppName: set_resizePreview
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::Columns::*)(bool)>(&UnityEngine::UIElements::Columns::set_resizePreview)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::Columns*), "set_resizePreview", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::Columns::get_displayList
// Il2CppName: get_displayList
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::Column*>* (UnityEngine::UIElements::Columns::*)()>(&UnityEngine::UIElements::Columns::get_displayList)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::Columns*), "get_displayList", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::Columns::get_visibleList
// Il2CppName: get_visibleList
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::Column*>* (UnityEngine::UIElements::Columns::*)()>(&UnityEngine::UIElements::Columns::get_visibleList)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::Columns*), "get_visibleList", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::Columns::add_changed
// Il2CppName: add_changed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::Columns::*)(::System::Action_1<::UnityEngine::UIElements::ColumnsDataType>*)>(&UnityEngine::UIElements::Columns::add_changed)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "ColumnsDataType")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::Columns*), "add_changed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::Columns::remove_changed
// Il2CppName: remove_changed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::Columns::*)(::System::Action_1<::UnityEngine::UIElements::ColumnsDataType>*)>(&UnityEngine::UIElements::Columns::remove_changed)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "ColumnsDataType")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::Columns*), "remove_changed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::Columns::get_stretchMode
// Il2CppName: get_stretchMode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::Columns::StretchMode (UnityEngine::UIElements::Columns::*)()>(&UnityEngine::UIElements::Columns::get_stretchMode)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::Columns*), "get_stretchMode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::Columns::set_stretchMode
// Il2CppName: set_stretchMode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::Columns::*)(::UnityEngine::UIElements::Columns::StretchMode)>(&UnityEngine::UIElements::Columns::set_stretchMode)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "Columns/StretchMode")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::Columns*), "set_stretchMode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::Columns::add_columnAdded
// Il2CppName: add_columnAdded
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::Columns::*)(::System::Action_2<::UnityEngine::UIElements::Column*, int>*)>(&UnityEngine::UIElements::Columns::add_columnAdded)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "Column"), ::il2cpp_utils::GetClassFromName("System", "Int32")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::Columns*), "add_columnAdded", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::Columns::remove_columnAdded
// Il2CppName: remove_columnAdded
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::Columns::*)(::System::Action_2<::UnityEngine::UIElements::Column*, int>*)>(&UnityEngine::UIElements::Columns::remove_columnAdded)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "Column"), ::il2cpp_utils::GetClassFromName("System", "Int32")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::Columns*), "remove_columnAdded", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::Columns::add_columnRemoved
// Il2CppName: add_columnRemoved
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::Columns::*)(::System::Action_1<::UnityEngine::UIElements::Column*>*)>(&UnityEngine::UIElements::Columns::add_columnRemoved)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "Column")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::Columns*), "add_columnRemoved", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::Columns::remove_columnRemoved
// Il2CppName: remove_columnRemoved
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::Columns::*)(::System::Action_1<::UnityEngine::UIElements::Column*>*)>(&UnityEngine::UIElements::Columns::remove_columnRemoved)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "Column")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::Columns*), "remove_columnRemoved", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::Columns::add_columnChanged
// Il2CppName: add_columnChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::Columns::*)(::System::Action_2<::UnityEngine::UIElements::Column*, ::UnityEngine::UIElements::ColumnDataType>*)>(&UnityEngine::UIElements::Columns::add_columnChanged)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "Column"), ::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "ColumnDataType")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::Columns*), "add_columnChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::Columns::remove_columnChanged
// Il2CppName: remove_columnChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::Columns::*)(::System::Action_2<::UnityEngine::UIElements::Column*, ::UnityEngine::UIElements::ColumnDataType>*)>(&UnityEngine::UIElements::Columns::remove_columnChanged)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "Column"), ::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "ColumnDataType")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::Columns*), "remove_columnChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::Columns::add_columnResized
// Il2CppName: add_columnResized
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::Columns::*)(::System::Action_1<::UnityEngine::UIElements::Column*>*)>(&UnityEngine::UIElements::Columns::add_columnResized)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "Column")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::Columns*), "add_columnResized", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::Columns::remove_columnResized
// Il2CppName: remove_columnResized
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::Columns::*)(::System::Action_1<::UnityEngine::UIElements::Column*>*)>(&UnityEngine::UIElements::Columns::remove_columnResized)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "Column")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::Columns*), "remove_columnResized", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::Columns::add_columnReordered
// Il2CppName: add_columnReordered
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::Columns::*)(::System::Action_3<::UnityEngine::UIElements::Column*, int, int>*)>(&UnityEngine::UIElements::Columns::add_columnReordered)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`3"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "Column"), ::il2cpp_utils::GetClassFromName("System", "Int32"), ::il2cpp_utils::GetClassFromName("System", "Int32")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::Columns*), "add_columnReordered", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::Columns::remove_columnReordered
// Il2CppName: remove_columnReordered
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::Columns::*)(::System::Action_3<::UnityEngine::UIElements::Column*, int, int>*)>(&UnityEngine::UIElements::Columns::remove_columnReordered)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`3"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "Column"), ::il2cpp_utils::GetClassFromName("System", "Int32"), ::il2cpp_utils::GetClassFromName("System", "Int32")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::Columns*), "remove_columnReordered", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::Columns::IsPrimary
// Il2CppName: IsPrimary
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::Columns::*)(::UnityEngine::UIElements::Column*)>(&UnityEngine::UIElements::Columns::IsPrimary)> {
  static const MethodInfo* get() {
    static auto* column = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "Column")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::Columns*), "IsPrimary", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{column});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::Columns::GetEnumerator
// Il2CppName: GetEnumerator
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::IEnumerator_1<::UnityEngine::UIElements::Column*>* (UnityEngine::UIElements::Columns::*)()>(&UnityEngine::UIElements::Columns::GetEnumerator)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::Columns*), "GetEnumerator", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::Columns::System_Collections_IEnumerable_GetEnumerator
// Il2CppName: System.Collections.IEnumerable.GetEnumerator
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::IEnumerator* (UnityEngine::UIElements::Columns::*)()>(&UnityEngine::UIElements::Columns::System_Collections_IEnumerable_GetEnumerator)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::Columns*), "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::Columns::Add
// Il2CppName: Add
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::Columns::*)(::UnityEngine::UIElements::Column*)>(&UnityEngine::UIElements::Columns::Add)> {
  static const MethodInfo* get() {
    static auto* item = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "Column")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::Columns*), "Add", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{item});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::Columns::Clear
// Il2CppName: Clear
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::Columns::*)()>(&UnityEngine::UIElements::Columns::Clear)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::Columns*), "Clear", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::Columns::Contains
// Il2CppName: Contains
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::Columns::*)(::UnityEngine::UIElements::Column*)>(&UnityEngine::UIElements::Columns::Contains)> {
  static const MethodInfo* get() {
    static auto* item = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "Column")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::Columns*), "Contains", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{item});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::Columns::Contains
// Il2CppName: Contains
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::Columns::*)(::StringW)>(&UnityEngine::UIElements::Columns::Contains)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::Columns*), "Contains", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::Columns::CopyTo
// Il2CppName: CopyTo
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::Columns::*)(::ArrayW<::UnityEngine::UIElements::Column*>, int)>(&UnityEngine::UIElements::Columns::CopyTo)> {
  static const MethodInfo* get() {
    static auto* array = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "Column"), 1)->byval_arg;
    static auto* arrayIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::Columns*), "CopyTo", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{array, arrayIndex});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::Columns::Remove
// Il2CppName: Remove
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::Columns::*)(::UnityEngine::UIElements::Column*)>(&UnityEngine::UIElements::Columns::Remove)> {
  static const MethodInfo* get() {
    static auto* column = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "Column")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::Columns*), "Remove", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{column});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::Columns::OnColumnChanged
// Il2CppName: OnColumnChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::Columns::*)(::UnityEngine::UIElements::Column*, ::UnityEngine::UIElements::ColumnDataType)>(&UnityEngine::UIElements::Columns::OnColumnChanged)> {
  static const MethodInfo* get() {
    static auto* column = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "Column")->byval_arg;
    static auto* type = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "ColumnDataType")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::Columns*), "OnColumnChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{column, type});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::Columns::OnColumnResized
// Il2CppName: OnColumnResized
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::Columns::*)(::UnityEngine::UIElements::Column*)>(&UnityEngine::UIElements::Columns::OnColumnResized)> {
  static const MethodInfo* get() {
    static auto* column = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "Column")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::Columns*), "OnColumnResized", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{column});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::Columns::get_Count
// Il2CppName: get_Count
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::UIElements::Columns::*)()>(&UnityEngine::UIElements::Columns::get_Count)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::Columns*), "get_Count", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::Columns::get_IsReadOnly
// Il2CppName: get_IsReadOnly
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::Columns::*)()>(&UnityEngine::UIElements::Columns::get_IsReadOnly)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::Columns*), "get_IsReadOnly", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::Columns::IndexOf
// Il2CppName: IndexOf
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::UIElements::Columns::*)(::UnityEngine::UIElements::Column*)>(&UnityEngine::UIElements::Columns::IndexOf)> {
  static const MethodInfo* get() {
    static auto* column = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "Column")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::Columns*), "IndexOf", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{column});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::Columns::Insert
// Il2CppName: Insert
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::Columns::*)(int, ::UnityEngine::UIElements::Column*)>(&UnityEngine::UIElements::Columns::Insert)> {
  static const MethodInfo* get() {
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* column = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "Column")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::Columns*), "Insert", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{index, column});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::Columns::get_Item
// Il2CppName: get_Item
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::Column* (UnityEngine::UIElements::Columns::*)(int)>(&UnityEngine::UIElements::Columns::get_Item)> {
  static const MethodInfo* get() {
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::Columns*), "get_Item", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{index});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::Columns::get_Item
// Il2CppName: get_Item
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::Column* (UnityEngine::UIElements::Columns::*)(::StringW)>(&UnityEngine::UIElements::Columns::get_Item)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::Columns*), "get_Item", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::Columns::ReorderDisplay
// Il2CppName: ReorderDisplay
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::Columns::*)(int, int)>(&UnityEngine::UIElements::Columns::ReorderDisplay)> {
  static const MethodInfo* get() {
    static auto* from = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* to = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::Columns*), "ReorderDisplay", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{from, to});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::Columns::InitOrderColumns
// Il2CppName: InitOrderColumns
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::Columns::*)()>(&UnityEngine::UIElements::Columns::InitOrderColumns)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::Columns*), "InitOrderColumns", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::Columns::DirtyVisibleColumns
// Il2CppName: DirtyVisibleColumns
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::Columns::*)()>(&UnityEngine::UIElements::Columns::DirtyVisibleColumns)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::Columns*), "DirtyVisibleColumns", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::Columns::UpdateVisibleColumns
// Il2CppName: UpdateVisibleColumns
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::Columns::*)()>(&UnityEngine::UIElements::Columns::UpdateVisibleColumns)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::Columns*), "UpdateVisibleColumns", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::Columns::NotifyChange
// Il2CppName: NotifyChange
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::Columns::*)(::UnityEngine::UIElements::ColumnsDataType)>(&UnityEngine::UIElements::Columns::NotifyChange)> {
  static const MethodInfo* get() {
    static auto* type = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "ColumnsDataType")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::Columns*), "NotifyChange", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{type});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::Columns::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
