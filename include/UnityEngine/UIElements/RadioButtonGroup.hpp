// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.UIElements.BaseField`1
#include "UnityEngine/UIElements/BaseField_1.hpp"
// Including type: UnityEngine.UIElements.IGroupBox
#include "UnityEngine/UIElements/IGroupBox.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::UIElements
namespace UnityEngine::UIElements {
  // Forward declaring type: RadioButton
  class RadioButton;
  // Forward declaring type: EventCallback`1<TEventType>
  template<typename TEventType>
  class EventCallback_1;
  // Forward declaring type: ChangeEvent`1<T>
  template<typename T>
  class ChangeEvent_1;
  // Skipping declaration: VisualElement because it is already included!
  // Forward declaring type: IGroupBoxOption
  class IGroupBoxOption;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
  // Forward declaring type: IEnumerable`1<T>
  template<typename T>
  class IEnumerable_1;
}
// Completed forward declares
// Type namespace: UnityEngine.UIElements
namespace UnityEngine::UIElements {
  // Forward declaring type: RadioButtonGroup
  class RadioButtonGroup;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::UIElements::RadioButtonGroup);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::UIElements::RadioButtonGroup*, "UnityEngine.UIElements", "RadioButtonGroup");
// Type namespace: UnityEngine.UIElements
namespace UnityEngine::UIElements {
  // WARNING Size may be invalid!
  // Autogenerated type: UnityEngine.UIElements.RadioButtonGroup
  // [TokenAttribute] Offset: FFFFFFFF
  class RadioButtonGroup : public ::UnityEngine::UIElements::BaseField_1<int>/*, public ::UnityEngine::UIElements::IGroupBox*/ {
    public:
    // Nested type: ::UnityEngine::UIElements::RadioButtonGroup::UxmlFactory
    class UxmlFactory;
    // Nested type: ::UnityEngine::UIElements::RadioButtonGroup::UxmlTraits
    class UxmlTraits;
    public:
    // private System.Collections.Generic.List`1<UnityEngine.UIElements.RadioButton> m_RadioButtons
    // Size: 0x8
    // Offset: 0x428
    ::System::Collections::Generic::List_1<::UnityEngine::UIElements::RadioButton*>* m_RadioButtons;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::UnityEngine::UIElements::RadioButton*>*) == 0x8);
    // private UnityEngine.UIElements.EventCallback`1<UnityEngine.UIElements.ChangeEvent`1<System.Boolean>> m_RadioButtonValueChangedCallback
    // Size: 0x8
    // Offset: 0x430
    ::UnityEngine::UIElements::EventCallback_1<::UnityEngine::UIElements::ChangeEvent_1<bool>*>* m_RadioButtonValueChangedCallback;
    // Field size check
    static_assert(sizeof(::UnityEngine::UIElements::EventCallback_1<::UnityEngine::UIElements::ChangeEvent_1<bool>*>*) == 0x8);
    // private UnityEngine.UIElements.VisualElement m_RadioButtonContainer
    // Size: 0x8
    // Offset: 0x438
    ::UnityEngine::UIElements::VisualElement* m_RadioButtonContainer;
    // Field size check
    static_assert(sizeof(::UnityEngine::UIElements::VisualElement*) == 0x8);
    public:
    // Creating interface conversion operator: operator ::UnityEngine::UIElements::IGroupBox
    operator ::UnityEngine::UIElements::IGroupBox() noexcept {
      return *reinterpret_cast<::UnityEngine::UIElements::IGroupBox*>(this);
    }
    // Get static field: static public readonly System.String ussClassName
    static ::StringW _get_ussClassName();
    // Set static field: static public readonly System.String ussClassName
    static void _set_ussClassName(::StringW value);
    // Get static field: static public readonly System.String containerUssClassName
    static ::StringW _get_containerUssClassName();
    // Set static field: static public readonly System.String containerUssClassName
    static void _set_containerUssClassName(::StringW value);
    // Get instance field reference: private System.Collections.Generic.List`1<UnityEngine.UIElements.RadioButton> m_RadioButtons
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::UIElements::RadioButton*>*& dyn_m_RadioButtons();
    // Get instance field reference: private UnityEngine.UIElements.EventCallback`1<UnityEngine.UIElements.ChangeEvent`1<System.Boolean>> m_RadioButtonValueChangedCallback
    [[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::EventCallback_1<::UnityEngine::UIElements::ChangeEvent_1<bool>*>*& dyn_m_RadioButtonValueChangedCallback();
    // Get instance field reference: private UnityEngine.UIElements.VisualElement m_RadioButtonContainer
    [[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::VisualElement*& dyn_m_RadioButtonContainer();
    // public System.Void set_choices(System.Collections.Generic.IEnumerable`1<System.String> value)
    // Offset: 0x5625850
    void set_choices(::System::Collections::Generic::IEnumerable_1<::StringW>* value);
    // public System.Void .ctor(System.String label, System.Collections.Generic.List`1<System.String> radioButtonChoices)
    // Offset: 0x5625F78
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static RadioButtonGroup* New_ctor(::StringW label, ::System::Collections::Generic::List_1<::StringW>* radioButtonChoices) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::RadioButtonGroup::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<RadioButtonGroup*, creationType>(label, radioButtonChoices)));
    }
    // private System.Void RadioButtonValueChangedCallback(UnityEngine.UIElements.ChangeEvent`1<System.Boolean> evt)
    // Offset: 0x56261DC
    void RadioButtonValueChangedCallback(::UnityEngine::UIElements::ChangeEvent_1<bool>* evt);
    // public System.Void SetValueWithoutNotify(System.Int32 newValue)
    // Offset: 0x56262D4
    void SetValueWithoutNotify(int newValue);
    // private System.Void UpdateRadioButtons()
    // Offset: 0x5625D80
    void UpdateRadioButtons();
    // private System.Void UnityEngine.UIElements.IGroupBox.OnOptionAdded(UnityEngine.UIElements.IGroupBoxOption option)
    // Offset: 0x5626334
    void UnityEngine_UIElements_IGroupBox_OnOptionAdded(::UnityEngine::UIElements::IGroupBoxOption* option);
    // private System.Void UnityEngine.UIElements.IGroupBox.OnOptionRemoved(UnityEngine.UIElements.IGroupBoxOption option)
    // Offset: 0x562653C
    void UnityEngine_UIElements_IGroupBox_OnOptionRemoved(::UnityEngine::UIElements::IGroupBoxOption* option);
    // public System.Void .ctor()
    // Offset: 0x5625F6C
    // Implemented from: UnityEngine.UIElements.BindableElement
    // Base method: System.Void BindableElement::.ctor()
    // Base method: System.Void VisualElement::.ctor()
    // Base method: System.Void Focusable::.ctor()
    // Base method: System.Void CallbackEventHandler::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static RadioButtonGroup* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::RadioButtonGroup::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<RadioButtonGroup*, creationType>()));
    }
    // static private System.Void .cctor()
    // Offset: 0x56266B0
    // Implemented from: UnityEngine.UIElements.BaseField`1
    // Base method: System.Void BaseField_1::.cctor()
    // Base method: System.Void VisualElement::.cctor()
    static void _cctor();
  }; // UnityEngine.UIElements.RadioButtonGroup
  // WARNING Not writing size check since size may be invalid!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::UIElements::RadioButtonGroup::set_choices
// Il2CppName: set_choices
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::RadioButtonGroup::*)(::System::Collections::Generic::IEnumerable_1<::StringW>*)>(&UnityEngine::UIElements::RadioButtonGroup::set_choices)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "IEnumerable`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::RadioButtonGroup*), "set_choices", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::RadioButtonGroup::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::UIElements::RadioButtonGroup::RadioButtonValueChangedCallback
// Il2CppName: RadioButtonValueChangedCallback
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::RadioButtonGroup::*)(::UnityEngine::UIElements::ChangeEvent_1<bool>*)>(&UnityEngine::UIElements::RadioButtonGroup::RadioButtonValueChangedCallback)> {
  static const MethodInfo* get() {
    static auto* evt = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "ChangeEvent`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Boolean")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::RadioButtonGroup*), "RadioButtonValueChangedCallback", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{evt});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::RadioButtonGroup::SetValueWithoutNotify
// Il2CppName: SetValueWithoutNotify
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::RadioButtonGroup::*)(int)>(&UnityEngine::UIElements::RadioButtonGroup::SetValueWithoutNotify)> {
  static const MethodInfo* get() {
    static auto* newValue = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::RadioButtonGroup*), "SetValueWithoutNotify", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{newValue});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::RadioButtonGroup::UpdateRadioButtons
// Il2CppName: UpdateRadioButtons
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::RadioButtonGroup::*)()>(&UnityEngine::UIElements::RadioButtonGroup::UpdateRadioButtons)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::RadioButtonGroup*), "UpdateRadioButtons", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::RadioButtonGroup::UnityEngine_UIElements_IGroupBox_OnOptionAdded
// Il2CppName: UnityEngine.UIElements.IGroupBox.OnOptionAdded
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::RadioButtonGroup::*)(::UnityEngine::UIElements::IGroupBoxOption*)>(&UnityEngine::UIElements::RadioButtonGroup::UnityEngine_UIElements_IGroupBox_OnOptionAdded)> {
  static const MethodInfo* get() {
    static auto* option = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "IGroupBoxOption")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::RadioButtonGroup*), "UnityEngine.UIElements.IGroupBox.OnOptionAdded", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{option});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::RadioButtonGroup::UnityEngine_UIElements_IGroupBox_OnOptionRemoved
// Il2CppName: UnityEngine.UIElements.IGroupBox.OnOptionRemoved
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::RadioButtonGroup::*)(::UnityEngine::UIElements::IGroupBoxOption*)>(&UnityEngine::UIElements::RadioButtonGroup::UnityEngine_UIElements_IGroupBox_OnOptionRemoved)> {
  static const MethodInfo* get() {
    static auto* option = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "IGroupBoxOption")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::RadioButtonGroup*), "UnityEngine.UIElements.IGroupBox.OnOptionRemoved", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{option});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::RadioButtonGroup::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::UIElements::RadioButtonGroup::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&UnityEngine::UIElements::RadioButtonGroup::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::RadioButtonGroup*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
