// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.UIElements.VisualTreeAsset
#include "UnityEngine/UIElements/VisualTreeAsset.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::UIElements
namespace UnityEngine::UIElements {
  // Forward declaring type: VisualElementAsset
  class VisualElementAsset;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::UIElements::VisualTreeAsset::$$c__DisplayClass65_0, "UnityEngine.UIElements", "VisualTreeAsset/<>c__DisplayClass65_0");
// Type namespace: UnityEngine.UIElements
namespace UnityEngine::UIElements {
  // Size: 0x8
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.UIElements.VisualTreeAsset/<>c__DisplayClass65_0
  // [TokenAttribute] Offset: FFFFFFFF
  // [CompilerGeneratedAttribute] Offset: FFFFFFFF
  struct VisualTreeAsset::$$c__DisplayClass65_0/*, public ::System::ValueType*/ {
    public:
    public:
    // public UnityEngine.UIElements.VisualElementAsset asset
    // Size: 0x8
    // Offset: 0x0
    ::UnityEngine::UIElements::VisualElementAsset* asset;
    // Field size check
    static_assert(sizeof(::UnityEngine::UIElements::VisualElementAsset*) == 0x8);
    public:
    // Creating value type constructor for type: $$c__DisplayClass65_0
    constexpr $$c__DisplayClass65_0(::UnityEngine::UIElements::VisualElementAsset* asset_ = {}) noexcept : asset{asset_} {}
    // Creating interface conversion operator: operator ::System::ValueType
    operator ::System::ValueType() noexcept {
      return *reinterpret_cast<::System::ValueType*>(this);
    }
    // Creating conversion operator: operator ::UnityEngine::UIElements::VisualElementAsset*
    constexpr operator ::UnityEngine::UIElements::VisualElementAsset*() const noexcept {
      return asset;
    }
    // Get instance field reference: public UnityEngine.UIElements.VisualElementAsset asset
    [[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::VisualElementAsset*& dyn_asset();
  }; // UnityEngine.UIElements.VisualTreeAsset/<>c__DisplayClass65_0
  #pragma pack(pop)
  static check_size<sizeof(VisualTreeAsset::$$c__DisplayClass65_0), 0 + sizeof(::UnityEngine::UIElements::VisualElementAsset*)> __UnityEngine_UIElements_VisualTreeAsset_$$c__DisplayClass65_0SizeCheck;
  static_assert(sizeof(VisualTreeAsset::$$c__DisplayClass65_0) == 0x8);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
