// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.UIElements.VisualTreeAsset
#include "UnityEngine/UIElements/VisualTreeAsset.hpp"
// Including type: System.Collections.Generic.IComparer`1
#include "System/Collections/Generic/IComparer_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::UIElements::VisualTreeAsset::UsingEntryComparer);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::UIElements::VisualTreeAsset::UsingEntryComparer*, "UnityEngine.UIElements", "VisualTreeAsset/UsingEntryComparer");
// Type namespace: UnityEngine.UIElements
namespace UnityEngine::UIElements {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.UIElements.VisualTreeAsset/UsingEntryComparer
  // [TokenAttribute] Offset: FFFFFFFF
  class VisualTreeAsset::UsingEntryComparer : public ::Il2CppObject/*, public ::System::Collections::Generic::IComparer_1<::UnityEngine::UIElements::VisualTreeAsset::UsingEntry>*/ {
    public:
    // Creating interface conversion operator: operator ::System::Collections::Generic::IComparer_1<::UnityEngine::UIElements::VisualTreeAsset::UsingEntry>
    operator ::System::Collections::Generic::IComparer_1<::UnityEngine::UIElements::VisualTreeAsset::UsingEntry>() noexcept {
      return *reinterpret_cast<::System::Collections::Generic::IComparer_1<::UnityEngine::UIElements::VisualTreeAsset::UsingEntry>*>(this);
    }
    // public System.Int32 Compare(UnityEngine.UIElements.VisualTreeAsset/UsingEntry x, UnityEngine.UIElements.VisualTreeAsset/UsingEntry y)
    // Offset: 0x55BF6C8
    int Compare(::UnityEngine::UIElements::VisualTreeAsset::UsingEntry x, ::UnityEngine::UIElements::VisualTreeAsset::UsingEntry y);
    // public System.Void .ctor()
    // Offset: 0x55BF6C0
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static VisualTreeAsset::UsingEntryComparer* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::VisualTreeAsset::UsingEntryComparer::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<VisualTreeAsset::UsingEntryComparer*, creationType>()));
    }
  }; // UnityEngine.UIElements.VisualTreeAsset/UsingEntryComparer
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualTreeAsset::UsingEntryComparer::Compare
// Il2CppName: Compare
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::UIElements::VisualTreeAsset::UsingEntryComparer::*)(::UnityEngine::UIElements::VisualTreeAsset::UsingEntry, ::UnityEngine::UIElements::VisualTreeAsset::UsingEntry)>(&UnityEngine::UIElements::VisualTreeAsset::UsingEntryComparer::Compare)> {
  static const MethodInfo* get() {
    static auto* x = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "VisualTreeAsset/UsingEntry")->byval_arg;
    static auto* y = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "VisualTreeAsset/UsingEntry")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualTreeAsset::UsingEntryComparer*), "Compare", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{x, y});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualTreeAsset::UsingEntryComparer::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
