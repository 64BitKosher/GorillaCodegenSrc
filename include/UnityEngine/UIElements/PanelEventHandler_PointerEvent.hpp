// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.UIElements.PanelEventHandler
#include "UnityEngine/UIElements/PanelEventHandler.hpp"
// Including type: UnityEngine.UIElements.IPointerEvent
#include "UnityEngine/UIElements/IPointerEvent.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
// Including type: UnityEngine.PenStatus
#include "UnityEngine/PenStatus.hpp"
// Including type: UnityEngine.EventModifiers
#include "UnityEngine/EventModifiers.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::EventSystems
namespace UnityEngine::EventSystems {
  // Forward declaring type: PointerEventData
  class PointerEventData;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::UIElements::PanelEventHandler::PointerEvent);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::UIElements::PanelEventHandler::PointerEvent*, "UnityEngine.UIElements", "PanelEventHandler/PointerEvent");
// Type namespace: UnityEngine.UIElements
namespace UnityEngine::UIElements {
  // Size: 0x8C
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.UIElements.PanelEventHandler/PointerEvent
  // [TokenAttribute] Offset: FFFFFFFF
  class PanelEventHandler::PointerEvent : public ::Il2CppObject/*, public ::UnityEngine::UIElements::IPointerEvent*/ {
    public:
    public:
    // private System.Int32 <pointerId>k__BackingField
    // Size: 0x4
    // Offset: 0x10
    int pointerId;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // Padding between fields: pointerId and: pointerType
    char __padding0[0x4] = {};
    // private System.String <pointerType>k__BackingField
    // Size: 0x8
    // Offset: 0x18
    ::StringW pointerType;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private System.Boolean <isPrimary>k__BackingField
    // Size: 0x1
    // Offset: 0x20
    bool isPrimary;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: isPrimary and: button
    char __padding2[0x3] = {};
    // private System.Int32 <button>k__BackingField
    // Size: 0x4
    // Offset: 0x24
    int button;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private System.Int32 <pressedButtons>k__BackingField
    // Size: 0x4
    // Offset: 0x28
    int pressedButtons;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private UnityEngine.Vector3 <position>k__BackingField
    // Size: 0xC
    // Offset: 0x2C
    ::UnityEngine::Vector3 position;
    // Field size check
    static_assert(sizeof(::UnityEngine::Vector3) == 0xC);
    // private UnityEngine.Vector3 <localPosition>k__BackingField
    // Size: 0xC
    // Offset: 0x38
    ::UnityEngine::Vector3 localPosition;
    // Field size check
    static_assert(sizeof(::UnityEngine::Vector3) == 0xC);
    // private UnityEngine.Vector3 <deltaPosition>k__BackingField
    // Size: 0xC
    // Offset: 0x44
    ::UnityEngine::Vector3 deltaPosition;
    // Field size check
    static_assert(sizeof(::UnityEngine::Vector3) == 0xC);
    // private System.Single <deltaTime>k__BackingField
    // Size: 0x4
    // Offset: 0x50
    float deltaTime;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Int32 <clickCount>k__BackingField
    // Size: 0x4
    // Offset: 0x54
    int clickCount;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private System.Single <pressure>k__BackingField
    // Size: 0x4
    // Offset: 0x58
    float pressure;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Single <tangentialPressure>k__BackingField
    // Size: 0x4
    // Offset: 0x5C
    float tangentialPressure;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Single <altitudeAngle>k__BackingField
    // Size: 0x4
    // Offset: 0x60
    float altitudeAngle;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Single <azimuthAngle>k__BackingField
    // Size: 0x4
    // Offset: 0x64
    float azimuthAngle;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Single <twist>k__BackingField
    // Size: 0x4
    // Offset: 0x68
    float twist;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private UnityEngine.Vector2 <tilt>k__BackingField
    // Size: 0x8
    // Offset: 0x6C
    ::UnityEngine::Vector2 tilt;
    // Field size check
    static_assert(sizeof(::UnityEngine::Vector2) == 0x8);
    // private UnityEngine.PenStatus <penStatus>k__BackingField
    // Size: 0x4
    // Offset: 0x74
    ::UnityEngine::PenStatus penStatus;
    // Field size check
    static_assert(sizeof(::UnityEngine::PenStatus) == 0x4);
    // private UnityEngine.Vector2 <radius>k__BackingField
    // Size: 0x8
    // Offset: 0x78
    ::UnityEngine::Vector2 radius;
    // Field size check
    static_assert(sizeof(::UnityEngine::Vector2) == 0x8);
    // private UnityEngine.Vector2 <radiusVariance>k__BackingField
    // Size: 0x8
    // Offset: 0x80
    ::UnityEngine::Vector2 radiusVariance;
    // Field size check
    static_assert(sizeof(::UnityEngine::Vector2) == 0x8);
    // private UnityEngine.EventModifiers <modifiers>k__BackingField
    // Size: 0x4
    // Offset: 0x88
    ::UnityEngine::EventModifiers modifiers;
    // Field size check
    static_assert(sizeof(::UnityEngine::EventModifiers) == 0x4);
    public:
    // Creating interface conversion operator: operator ::UnityEngine::UIElements::IPointerEvent
    operator ::UnityEngine::UIElements::IPointerEvent() noexcept {
      return *reinterpret_cast<::UnityEngine::UIElements::IPointerEvent*>(this);
    }
    // Get instance field reference: private System.Int32 <pointerId>k__BackingField
    [[deprecated("Use field access instead!")]] int& dyn_$pointerId$k__BackingField();
    // Get instance field reference: private System.String <pointerType>k__BackingField
    [[deprecated("Use field access instead!")]] ::StringW& dyn_$pointerType$k__BackingField();
    // Get instance field reference: private System.Boolean <isPrimary>k__BackingField
    [[deprecated("Use field access instead!")]] bool& dyn_$isPrimary$k__BackingField();
    // Get instance field reference: private System.Int32 <button>k__BackingField
    [[deprecated("Use field access instead!")]] int& dyn_$button$k__BackingField();
    // Get instance field reference: private System.Int32 <pressedButtons>k__BackingField
    [[deprecated("Use field access instead!")]] int& dyn_$pressedButtons$k__BackingField();
    // Get instance field reference: private UnityEngine.Vector3 <position>k__BackingField
    [[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& dyn_$position$k__BackingField();
    // Get instance field reference: private UnityEngine.Vector3 <localPosition>k__BackingField
    [[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& dyn_$localPosition$k__BackingField();
    // Get instance field reference: private UnityEngine.Vector3 <deltaPosition>k__BackingField
    [[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& dyn_$deltaPosition$k__BackingField();
    // Get instance field reference: private System.Single <deltaTime>k__BackingField
    [[deprecated("Use field access instead!")]] float& dyn_$deltaTime$k__BackingField();
    // Get instance field reference: private System.Int32 <clickCount>k__BackingField
    [[deprecated("Use field access instead!")]] int& dyn_$clickCount$k__BackingField();
    // Get instance field reference: private System.Single <pressure>k__BackingField
    [[deprecated("Use field access instead!")]] float& dyn_$pressure$k__BackingField();
    // Get instance field reference: private System.Single <tangentialPressure>k__BackingField
    [[deprecated("Use field access instead!")]] float& dyn_$tangentialPressure$k__BackingField();
    // Get instance field reference: private System.Single <altitudeAngle>k__BackingField
    [[deprecated("Use field access instead!")]] float& dyn_$altitudeAngle$k__BackingField();
    // Get instance field reference: private System.Single <azimuthAngle>k__BackingField
    [[deprecated("Use field access instead!")]] float& dyn_$azimuthAngle$k__BackingField();
    // Get instance field reference: private System.Single <twist>k__BackingField
    [[deprecated("Use field access instead!")]] float& dyn_$twist$k__BackingField();
    // Get instance field reference: private UnityEngine.Vector2 <tilt>k__BackingField
    [[deprecated("Use field access instead!")]] ::UnityEngine::Vector2& dyn_$tilt$k__BackingField();
    // Get instance field reference: private UnityEngine.PenStatus <penStatus>k__BackingField
    [[deprecated("Use field access instead!")]] ::UnityEngine::PenStatus& dyn_$penStatus$k__BackingField();
    // Get instance field reference: private UnityEngine.Vector2 <radius>k__BackingField
    [[deprecated("Use field access instead!")]] ::UnityEngine::Vector2& dyn_$radius$k__BackingField();
    // Get instance field reference: private UnityEngine.Vector2 <radiusVariance>k__BackingField
    [[deprecated("Use field access instead!")]] ::UnityEngine::Vector2& dyn_$radiusVariance$k__BackingField();
    // Get instance field reference: private UnityEngine.EventModifiers <modifiers>k__BackingField
    [[deprecated("Use field access instead!")]] ::UnityEngine::EventModifiers& dyn_$modifiers$k__BackingField();
    // public System.Int32 get_pointerId()
    // Offset: 0x56FAB94
    int get_pointerId();
    // private System.Void set_pointerId(System.Int32 value)
    // Offset: 0x56FAB9C
    void set_pointerId(int value);
    // public System.String get_pointerType()
    // Offset: 0x56FABA4
    ::StringW get_pointerType();
    // private System.Void set_pointerType(System.String value)
    // Offset: 0x56FABAC
    void set_pointerType(::StringW value);
    // public System.Boolean get_isPrimary()
    // Offset: 0x56FABB4
    bool get_isPrimary();
    // private System.Void set_isPrimary(System.Boolean value)
    // Offset: 0x56FABBC
    void set_isPrimary(bool value);
    // public System.Int32 get_button()
    // Offset: 0x56FABC8
    int get_button();
    // private System.Void set_button(System.Int32 value)
    // Offset: 0x56FABD0
    void set_button(int value);
    // public System.Int32 get_pressedButtons()
    // Offset: 0x56FABD8
    int get_pressedButtons();
    // private System.Void set_pressedButtons(System.Int32 value)
    // Offset: 0x56FABE0
    void set_pressedButtons(int value);
    // public UnityEngine.Vector3 get_position()
    // Offset: 0x56FABE8
    ::UnityEngine::Vector3 get_position();
    // private System.Void set_position(UnityEngine.Vector3 value)
    // Offset: 0x56FABF4
    void set_position(::UnityEngine::Vector3 value);
    // public UnityEngine.Vector3 get_localPosition()
    // Offset: 0x56FAC00
    ::UnityEngine::Vector3 get_localPosition();
    // private System.Void set_localPosition(UnityEngine.Vector3 value)
    // Offset: 0x56FAC0C
    void set_localPosition(::UnityEngine::Vector3 value);
    // public UnityEngine.Vector3 get_deltaPosition()
    // Offset: 0x56FAC18
    ::UnityEngine::Vector3 get_deltaPosition();
    // private System.Void set_deltaPosition(UnityEngine.Vector3 value)
    // Offset: 0x56FAC24
    void set_deltaPosition(::UnityEngine::Vector3 value);
    // public System.Single get_deltaTime()
    // Offset: 0x56FAC30
    float get_deltaTime();
    // private System.Void set_deltaTime(System.Single value)
    // Offset: 0x56FAC38
    void set_deltaTime(float value);
    // public System.Int32 get_clickCount()
    // Offset: 0x56FAC40
    int get_clickCount();
    // private System.Void set_clickCount(System.Int32 value)
    // Offset: 0x56FAC48
    void set_clickCount(int value);
    // public System.Single get_pressure()
    // Offset: 0x56FAC50
    float get_pressure();
    // private System.Void set_pressure(System.Single value)
    // Offset: 0x56FAC58
    void set_pressure(float value);
    // public System.Single get_tangentialPressure()
    // Offset: 0x56FAC60
    float get_tangentialPressure();
    // private System.Void set_tangentialPressure(System.Single value)
    // Offset: 0x56FAC68
    void set_tangentialPressure(float value);
    // public System.Single get_altitudeAngle()
    // Offset: 0x56FAC70
    float get_altitudeAngle();
    // private System.Void set_altitudeAngle(System.Single value)
    // Offset: 0x56FAC78
    void set_altitudeAngle(float value);
    // public System.Single get_azimuthAngle()
    // Offset: 0x56FAC80
    float get_azimuthAngle();
    // private System.Void set_azimuthAngle(System.Single value)
    // Offset: 0x56FAC88
    void set_azimuthAngle(float value);
    // public System.Single get_twist()
    // Offset: 0x56FAC90
    float get_twist();
    // private System.Void set_twist(System.Single value)
    // Offset: 0x56FAC98
    void set_twist(float value);
    // public UnityEngine.Vector2 get_tilt()
    // Offset: 0x56FACA0
    ::UnityEngine::Vector2 get_tilt();
    // private System.Void set_tilt(UnityEngine.Vector2 value)
    // Offset: 0x56FACA8
    void set_tilt(::UnityEngine::Vector2 value);
    // public UnityEngine.PenStatus get_penStatus()
    // Offset: 0x56FACB0
    ::UnityEngine::PenStatus get_penStatus();
    // private System.Void set_penStatus(UnityEngine.PenStatus value)
    // Offset: 0x56FACB8
    void set_penStatus(::UnityEngine::PenStatus value);
    // public UnityEngine.Vector2 get_radius()
    // Offset: 0x56FACC0
    ::UnityEngine::Vector2 get_radius();
    // private System.Void set_radius(UnityEngine.Vector2 value)
    // Offset: 0x56FACC8
    void set_radius(::UnityEngine::Vector2 value);
    // public UnityEngine.Vector2 get_radiusVariance()
    // Offset: 0x56FACD0
    ::UnityEngine::Vector2 get_radiusVariance();
    // private System.Void set_radiusVariance(UnityEngine.Vector2 value)
    // Offset: 0x56FACD8
    void set_radiusVariance(::UnityEngine::Vector2 value);
    // public UnityEngine.EventModifiers get_modifiers()
    // Offset: 0x56FACE0
    ::UnityEngine::EventModifiers get_modifiers();
    // private System.Void set_modifiers(UnityEngine.EventModifiers value)
    // Offset: 0x56FACE8
    void set_modifiers(::UnityEngine::EventModifiers value);
    // public System.Boolean get_shiftKey()
    // Offset: 0x56FACF0
    bool get_shiftKey();
    // public System.Boolean get_ctrlKey()
    // Offset: 0x56FACFC
    bool get_ctrlKey();
    // public System.Boolean get_commandKey()
    // Offset: 0x56FAD08
    bool get_commandKey();
    // public System.Boolean get_altKey()
    // Offset: 0x56FAD14
    bool get_altKey();
    // public System.Boolean get_actionKey()
    // Offset: 0x56FAD20
    bool get_actionKey();
    // public System.Void Read(UnityEngine.UIElements.PanelEventHandler self, UnityEngine.EventSystems.PointerEventData eventData, UnityEngine.UIElements.PanelEventHandler/PointerEventType eventType)
    // Offset: 0x56FA5FC
    void Read(::UnityEngine::UIElements::PanelEventHandler* self, ::UnityEngine::EventSystems::PointerEventData* eventData, ::UnityEngine::UIElements::PanelEventHandler::PointerEventType eventType);
    // public System.Void SetPosition(UnityEngine.Vector3 positionOverride, UnityEngine.Vector3 deltaOverride)
    // Offset: 0x56FAAC0
    void SetPosition(::UnityEngine::Vector3 positionOverride, ::UnityEngine::Vector3 deltaOverride);
    // public System.Void .ctor()
    // Offset: 0x56FAB84
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static PanelEventHandler::PointerEvent* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PanelEventHandler::PointerEvent::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<PanelEventHandler::PointerEvent*, creationType>()));
    }
    // static System.Boolean <Read>g__InRange|90_0(System.Int32 i, System.Int32 start, System.Int32 count)
    // Offset: 0x56FADB4
    static bool $Read$g__InRange_90_0(int i, int start, int count);
  }; // UnityEngine.UIElements.PanelEventHandler/PointerEvent
  #pragma pack(pop)
  static check_size<sizeof(PanelEventHandler::PointerEvent), 136 + sizeof(::UnityEngine::EventModifiers)> __UnityEngine_UIElements_PanelEventHandler_PointerEventSizeCheck;
  static_assert(sizeof(PanelEventHandler::PointerEvent) == 0x8C);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::UIElements::PanelEventHandler::PointerEvent::get_pointerId
// Il2CppName: get_pointerId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::UIElements::PanelEventHandler::PointerEvent::*)()>(&UnityEngine::UIElements::PanelEventHandler::PointerEvent::get_pointerId)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::PanelEventHandler::PointerEvent*), "get_pointerId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::PanelEventHandler::PointerEvent::set_pointerId
// Il2CppName: set_pointerId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::PanelEventHandler::PointerEvent::*)(int)>(&UnityEngine::UIElements::PanelEventHandler::PointerEvent::set_pointerId)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::PanelEventHandler::PointerEvent*), "set_pointerId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::PanelEventHandler::PointerEvent::get_pointerType
// Il2CppName: get_pointerType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (UnityEngine::UIElements::PanelEventHandler::PointerEvent::*)()>(&UnityEngine::UIElements::PanelEventHandler::PointerEvent::get_pointerType)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::PanelEventHandler::PointerEvent*), "get_pointerType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::PanelEventHandler::PointerEvent::set_pointerType
// Il2CppName: set_pointerType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::PanelEventHandler::PointerEvent::*)(::StringW)>(&UnityEngine::UIElements::PanelEventHandler::PointerEvent::set_pointerType)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::PanelEventHandler::PointerEvent*), "set_pointerType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::PanelEventHandler::PointerEvent::get_isPrimary
// Il2CppName: get_isPrimary
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::PanelEventHandler::PointerEvent::*)()>(&UnityEngine::UIElements::PanelEventHandler::PointerEvent::get_isPrimary)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::PanelEventHandler::PointerEvent*), "get_isPrimary", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::PanelEventHandler::PointerEvent::set_isPrimary
// Il2CppName: set_isPrimary
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::PanelEventHandler::PointerEvent::*)(bool)>(&UnityEngine::UIElements::PanelEventHandler::PointerEvent::set_isPrimary)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::PanelEventHandler::PointerEvent*), "set_isPrimary", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::PanelEventHandler::PointerEvent::get_button
// Il2CppName: get_button
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::UIElements::PanelEventHandler::PointerEvent::*)()>(&UnityEngine::UIElements::PanelEventHandler::PointerEvent::get_button)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::PanelEventHandler::PointerEvent*), "get_button", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::PanelEventHandler::PointerEvent::set_button
// Il2CppName: set_button
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::PanelEventHandler::PointerEvent::*)(int)>(&UnityEngine::UIElements::PanelEventHandler::PointerEvent::set_button)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::PanelEventHandler::PointerEvent*), "set_button", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::PanelEventHandler::PointerEvent::get_pressedButtons
// Il2CppName: get_pressedButtons
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::UIElements::PanelEventHandler::PointerEvent::*)()>(&UnityEngine::UIElements::PanelEventHandler::PointerEvent::get_pressedButtons)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::PanelEventHandler::PointerEvent*), "get_pressedButtons", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::PanelEventHandler::PointerEvent::set_pressedButtons
// Il2CppName: set_pressedButtons
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::PanelEventHandler::PointerEvent::*)(int)>(&UnityEngine::UIElements::PanelEventHandler::PointerEvent::set_pressedButtons)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::PanelEventHandler::PointerEvent*), "set_pressedButtons", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::PanelEventHandler::PointerEvent::get_position
// Il2CppName: get_position
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector3 (UnityEngine::UIElements::PanelEventHandler::PointerEvent::*)()>(&UnityEngine::UIElements::PanelEventHandler::PointerEvent::get_position)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::PanelEventHandler::PointerEvent*), "get_position", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::PanelEventHandler::PointerEvent::set_position
// Il2CppName: set_position
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::PanelEventHandler::PointerEvent::*)(::UnityEngine::Vector3)>(&UnityEngine::UIElements::PanelEventHandler::PointerEvent::set_position)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::PanelEventHandler::PointerEvent*), "set_position", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::PanelEventHandler::PointerEvent::get_localPosition
// Il2CppName: get_localPosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector3 (UnityEngine::UIElements::PanelEventHandler::PointerEvent::*)()>(&UnityEngine::UIElements::PanelEventHandler::PointerEvent::get_localPosition)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::PanelEventHandler::PointerEvent*), "get_localPosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::PanelEventHandler::PointerEvent::set_localPosition
// Il2CppName: set_localPosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::PanelEventHandler::PointerEvent::*)(::UnityEngine::Vector3)>(&UnityEngine::UIElements::PanelEventHandler::PointerEvent::set_localPosition)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::PanelEventHandler::PointerEvent*), "set_localPosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::PanelEventHandler::PointerEvent::get_deltaPosition
// Il2CppName: get_deltaPosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector3 (UnityEngine::UIElements::PanelEventHandler::PointerEvent::*)()>(&UnityEngine::UIElements::PanelEventHandler::PointerEvent::get_deltaPosition)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::PanelEventHandler::PointerEvent*), "get_deltaPosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::PanelEventHandler::PointerEvent::set_deltaPosition
// Il2CppName: set_deltaPosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::PanelEventHandler::PointerEvent::*)(::UnityEngine::Vector3)>(&UnityEngine::UIElements::PanelEventHandler::PointerEvent::set_deltaPosition)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::PanelEventHandler::PointerEvent*), "set_deltaPosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::PanelEventHandler::PointerEvent::get_deltaTime
// Il2CppName: get_deltaTime
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::UIElements::PanelEventHandler::PointerEvent::*)()>(&UnityEngine::UIElements::PanelEventHandler::PointerEvent::get_deltaTime)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::PanelEventHandler::PointerEvent*), "get_deltaTime", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::PanelEventHandler::PointerEvent::set_deltaTime
// Il2CppName: set_deltaTime
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::PanelEventHandler::PointerEvent::*)(float)>(&UnityEngine::UIElements::PanelEventHandler::PointerEvent::set_deltaTime)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::PanelEventHandler::PointerEvent*), "set_deltaTime", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::PanelEventHandler::PointerEvent::get_clickCount
// Il2CppName: get_clickCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::UIElements::PanelEventHandler::PointerEvent::*)()>(&UnityEngine::UIElements::PanelEventHandler::PointerEvent::get_clickCount)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::PanelEventHandler::PointerEvent*), "get_clickCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::PanelEventHandler::PointerEvent::set_clickCount
// Il2CppName: set_clickCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::PanelEventHandler::PointerEvent::*)(int)>(&UnityEngine::UIElements::PanelEventHandler::PointerEvent::set_clickCount)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::PanelEventHandler::PointerEvent*), "set_clickCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::PanelEventHandler::PointerEvent::get_pressure
// Il2CppName: get_pressure
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::UIElements::PanelEventHandler::PointerEvent::*)()>(&UnityEngine::UIElements::PanelEventHandler::PointerEvent::get_pressure)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::PanelEventHandler::PointerEvent*), "get_pressure", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::PanelEventHandler::PointerEvent::set_pressure
// Il2CppName: set_pressure
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::PanelEventHandler::PointerEvent::*)(float)>(&UnityEngine::UIElements::PanelEventHandler::PointerEvent::set_pressure)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::PanelEventHandler::PointerEvent*), "set_pressure", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::PanelEventHandler::PointerEvent::get_tangentialPressure
// Il2CppName: get_tangentialPressure
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::UIElements::PanelEventHandler::PointerEvent::*)()>(&UnityEngine::UIElements::PanelEventHandler::PointerEvent::get_tangentialPressure)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::PanelEventHandler::PointerEvent*), "get_tangentialPressure", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::PanelEventHandler::PointerEvent::set_tangentialPressure
// Il2CppName: set_tangentialPressure
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::PanelEventHandler::PointerEvent::*)(float)>(&UnityEngine::UIElements::PanelEventHandler::PointerEvent::set_tangentialPressure)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::PanelEventHandler::PointerEvent*), "set_tangentialPressure", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::PanelEventHandler::PointerEvent::get_altitudeAngle
// Il2CppName: get_altitudeAngle
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::UIElements::PanelEventHandler::PointerEvent::*)()>(&UnityEngine::UIElements::PanelEventHandler::PointerEvent::get_altitudeAngle)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::PanelEventHandler::PointerEvent*), "get_altitudeAngle", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::PanelEventHandler::PointerEvent::set_altitudeAngle
// Il2CppName: set_altitudeAngle
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::PanelEventHandler::PointerEvent::*)(float)>(&UnityEngine::UIElements::PanelEventHandler::PointerEvent::set_altitudeAngle)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::PanelEventHandler::PointerEvent*), "set_altitudeAngle", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::PanelEventHandler::PointerEvent::get_azimuthAngle
// Il2CppName: get_azimuthAngle
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::UIElements::PanelEventHandler::PointerEvent::*)()>(&UnityEngine::UIElements::PanelEventHandler::PointerEvent::get_azimuthAngle)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::PanelEventHandler::PointerEvent*), "get_azimuthAngle", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::PanelEventHandler::PointerEvent::set_azimuthAngle
// Il2CppName: set_azimuthAngle
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::PanelEventHandler::PointerEvent::*)(float)>(&UnityEngine::UIElements::PanelEventHandler::PointerEvent::set_azimuthAngle)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::PanelEventHandler::PointerEvent*), "set_azimuthAngle", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::PanelEventHandler::PointerEvent::get_twist
// Il2CppName: get_twist
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::UIElements::PanelEventHandler::PointerEvent::*)()>(&UnityEngine::UIElements::PanelEventHandler::PointerEvent::get_twist)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::PanelEventHandler::PointerEvent*), "get_twist", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::PanelEventHandler::PointerEvent::set_twist
// Il2CppName: set_twist
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::PanelEventHandler::PointerEvent::*)(float)>(&UnityEngine::UIElements::PanelEventHandler::PointerEvent::set_twist)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::PanelEventHandler::PointerEvent*), "set_twist", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::PanelEventHandler::PointerEvent::get_tilt
// Il2CppName: get_tilt
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector2 (UnityEngine::UIElements::PanelEventHandler::PointerEvent::*)()>(&UnityEngine::UIElements::PanelEventHandler::PointerEvent::get_tilt)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::PanelEventHandler::PointerEvent*), "get_tilt", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::PanelEventHandler::PointerEvent::set_tilt
// Il2CppName: set_tilt
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::PanelEventHandler::PointerEvent::*)(::UnityEngine::Vector2)>(&UnityEngine::UIElements::PanelEventHandler::PointerEvent::set_tilt)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector2")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::PanelEventHandler::PointerEvent*), "set_tilt", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::PanelEventHandler::PointerEvent::get_penStatus
// Il2CppName: get_penStatus
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::PenStatus (UnityEngine::UIElements::PanelEventHandler::PointerEvent::*)()>(&UnityEngine::UIElements::PanelEventHandler::PointerEvent::get_penStatus)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::PanelEventHandler::PointerEvent*), "get_penStatus", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::PanelEventHandler::PointerEvent::set_penStatus
// Il2CppName: set_penStatus
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::PanelEventHandler::PointerEvent::*)(::UnityEngine::PenStatus)>(&UnityEngine::UIElements::PanelEventHandler::PointerEvent::set_penStatus)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "PenStatus")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::PanelEventHandler::PointerEvent*), "set_penStatus", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::PanelEventHandler::PointerEvent::get_radius
// Il2CppName: get_radius
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector2 (UnityEngine::UIElements::PanelEventHandler::PointerEvent::*)()>(&UnityEngine::UIElements::PanelEventHandler::PointerEvent::get_radius)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::PanelEventHandler::PointerEvent*), "get_radius", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::PanelEventHandler::PointerEvent::set_radius
// Il2CppName: set_radius
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::PanelEventHandler::PointerEvent::*)(::UnityEngine::Vector2)>(&UnityEngine::UIElements::PanelEventHandler::PointerEvent::set_radius)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector2")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::PanelEventHandler::PointerEvent*), "set_radius", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::PanelEventHandler::PointerEvent::get_radiusVariance
// Il2CppName: get_radiusVariance
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector2 (UnityEngine::UIElements::PanelEventHandler::PointerEvent::*)()>(&UnityEngine::UIElements::PanelEventHandler::PointerEvent::get_radiusVariance)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::PanelEventHandler::PointerEvent*), "get_radiusVariance", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::PanelEventHandler::PointerEvent::set_radiusVariance
// Il2CppName: set_radiusVariance
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::PanelEventHandler::PointerEvent::*)(::UnityEngine::Vector2)>(&UnityEngine::UIElements::PanelEventHandler::PointerEvent::set_radiusVariance)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector2")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::PanelEventHandler::PointerEvent*), "set_radiusVariance", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::PanelEventHandler::PointerEvent::get_modifiers
// Il2CppName: get_modifiers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::EventModifiers (UnityEngine::UIElements::PanelEventHandler::PointerEvent::*)()>(&UnityEngine::UIElements::PanelEventHandler::PointerEvent::get_modifiers)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::PanelEventHandler::PointerEvent*), "get_modifiers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::PanelEventHandler::PointerEvent::set_modifiers
// Il2CppName: set_modifiers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::PanelEventHandler::PointerEvent::*)(::UnityEngine::EventModifiers)>(&UnityEngine::UIElements::PanelEventHandler::PointerEvent::set_modifiers)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "EventModifiers")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::PanelEventHandler::PointerEvent*), "set_modifiers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::PanelEventHandler::PointerEvent::get_shiftKey
// Il2CppName: get_shiftKey
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::PanelEventHandler::PointerEvent::*)()>(&UnityEngine::UIElements::PanelEventHandler::PointerEvent::get_shiftKey)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::PanelEventHandler::PointerEvent*), "get_shiftKey", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::PanelEventHandler::PointerEvent::get_ctrlKey
// Il2CppName: get_ctrlKey
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::PanelEventHandler::PointerEvent::*)()>(&UnityEngine::UIElements::PanelEventHandler::PointerEvent::get_ctrlKey)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::PanelEventHandler::PointerEvent*), "get_ctrlKey", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::PanelEventHandler::PointerEvent::get_commandKey
// Il2CppName: get_commandKey
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::PanelEventHandler::PointerEvent::*)()>(&UnityEngine::UIElements::PanelEventHandler::PointerEvent::get_commandKey)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::PanelEventHandler::PointerEvent*), "get_commandKey", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::PanelEventHandler::PointerEvent::get_altKey
// Il2CppName: get_altKey
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::PanelEventHandler::PointerEvent::*)()>(&UnityEngine::UIElements::PanelEventHandler::PointerEvent::get_altKey)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::PanelEventHandler::PointerEvent*), "get_altKey", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::PanelEventHandler::PointerEvent::get_actionKey
// Il2CppName: get_actionKey
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::PanelEventHandler::PointerEvent::*)()>(&UnityEngine::UIElements::PanelEventHandler::PointerEvent::get_actionKey)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::PanelEventHandler::PointerEvent*), "get_actionKey", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::PanelEventHandler::PointerEvent::Read
// Il2CppName: Read
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::PanelEventHandler::PointerEvent::*)(::UnityEngine::UIElements::PanelEventHandler*, ::UnityEngine::EventSystems::PointerEventData*, ::UnityEngine::UIElements::PanelEventHandler::PointerEventType)>(&UnityEngine::UIElements::PanelEventHandler::PointerEvent::Read)> {
  static const MethodInfo* get() {
    static auto* self = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "PanelEventHandler")->byval_arg;
    static auto* eventData = &::il2cpp_utils::GetClassFromName("UnityEngine.EventSystems", "PointerEventData")->byval_arg;
    static auto* eventType = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "PanelEventHandler/PointerEventType")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::PanelEventHandler::PointerEvent*), "Read", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{self, eventData, eventType});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::PanelEventHandler::PointerEvent::SetPosition
// Il2CppName: SetPosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::PanelEventHandler::PointerEvent::*)(::UnityEngine::Vector3, ::UnityEngine::Vector3)>(&UnityEngine::UIElements::PanelEventHandler::PointerEvent::SetPosition)> {
  static const MethodInfo* get() {
    static auto* positionOverride = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* deltaOverride = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::PanelEventHandler::PointerEvent*), "SetPosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{positionOverride, deltaOverride});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::PanelEventHandler::PointerEvent::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::UIElements::PanelEventHandler::PointerEvent::$Read$g__InRange_90_0
// Il2CppName: <Read>g__InRange|90_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(int, int, int)>(&UnityEngine::UIElements::PanelEventHandler::PointerEvent::$Read$g__InRange_90_0)> {
  static const MethodInfo* get() {
    static auto* i = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* start = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* count = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::PanelEventHandler::PointerEvent*), "<Read>g__InRange|90_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{i, start, count});
  }
};
