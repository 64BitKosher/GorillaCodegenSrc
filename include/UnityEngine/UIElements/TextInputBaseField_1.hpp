// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.UIElements.BaseField`1
#include "UnityEngine/UIElements/BaseField_1.hpp"
// Including type: UnityEngine.TouchScreenKeyboardType
#include "UnityEngine/TouchScreenKeyboardType.hpp"
// Including type: UnityEngine.UIElements.BaseFieldTraits`2
#include "UnityEngine/UIElements/BaseFieldTraits_2.hpp"
// Including type: UnityEngine.UIElements.ScrollerVisibility
#include "UnityEngine/UIElements/ScrollerVisibility.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::UIElements
namespace UnityEngine::UIElements {
  // Skipping declaration: UxmlTraits because it is already included!
  // Skipping declaration: TextInputBase because it is already included!
  // Forward declaring type: ITextEdition
  class ITextEdition;
  // Forward declaring type: CustomStyleResolvedEvent
  class CustomStyleResolvedEvent;
  // Forward declaring type: EventBase
  class EventBase;
  // Forward declaring type: UxmlStringAttributeDescription
  class UxmlStringAttributeDescription;
  // Forward declaring type: UxmlIntAttributeDescription
  class UxmlIntAttributeDescription;
  // Forward declaring type: UxmlBoolAttributeDescription
  class UxmlBoolAttributeDescription;
  // Forward declaring type: UxmlEnumAttributeDescription`1<T>
  template<typename T>
  class UxmlEnumAttributeDescription_1;
  // Forward declaring type: IUxmlAttributes
  class IUxmlAttributes;
  // Forward declaring type: TextElement
  class TextElement;
  // Forward declaring type: ScrollView
  class ScrollView;
  // Forward declaring type: ITextSelection
  class ITextSelection;
  // Forward declaring type: ChangeEvent`1<T>
  template<typename T>
  class ChangeEvent_1;
  // Forward declaring type: GeometryChangedEvent
  class GeometryChangedEvent;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Action`1<T>
  template<typename T>
  class Action_1;
}
// Completed forward declares
// Type namespace: UnityEngine.UIElements
namespace UnityEngine::UIElements {
  // Forward declaring type: TextInputBaseField`1<TValueType>
  template<typename TValueType>
  class TextInputBaseField_1;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE_GENERIC_CLASS(::UnityEngine::UIElements::TextInputBaseField_1, "UnityEngine.UIElements", "TextInputBaseField`1");
// Type namespace: UnityEngine.UIElements
namespace UnityEngine::UIElements {
  // WARNING Size may be invalid!
  // Autogenerated type: UnityEngine.UIElements.TextInputBaseField`1
  // [TokenAttribute] Offset: FFFFFFFF
  template<typename TValueType>
  class TextInputBaseField_1 : public ::UnityEngine::UIElements::BaseField_1<TValueType> {
    public:
    // Nested type: ::UnityEngine::UIElements::TextInputBaseField_1::UxmlTraits<TValueType>
    class UxmlTraits;
    // Nested type: ::UnityEngine::UIElements::TextInputBaseField_1::TextInputBase<TValueType>
    class TextInputBase;
    // WARNING Size may be invalid!
    // Autogenerated type: UnityEngine.UIElements.TextInputBaseField`1/UxmlTraits
    // [TokenAttribute] Offset: FFFFFFFF
    class UxmlTraits : public ::il2cpp_utils::il2cpp_type_check::NestedType, public ::UnityEngine::UIElements::BaseFieldTraits_2<::StringW, ::UnityEngine::UIElements::UxmlStringAttributeDescription*> {
      public:
      using declaring_type = TextInputBaseField_1<TValueType>*;
      static constexpr std::string_view NESTED_NAME = "UxmlTraits";
      static constexpr bool IS_VALUE_TYPE = false;
      public:
      // private UnityEngine.UIElements.UxmlIntAttributeDescription m_MaxLength
      // Size: 0x8
      // Offset: 0x0
      ::UnityEngine::UIElements::UxmlIntAttributeDescription* m_MaxLength;
      // Field size check
      static_assert(sizeof(::UnityEngine::UIElements::UxmlIntAttributeDescription*) == 0x8);
      // private UnityEngine.UIElements.UxmlBoolAttributeDescription m_Password
      // Size: 0x8
      // Offset: 0x0
      ::UnityEngine::UIElements::UxmlBoolAttributeDescription* m_Password;
      // Field size check
      static_assert(sizeof(::UnityEngine::UIElements::UxmlBoolAttributeDescription*) == 0x8);
      // private UnityEngine.UIElements.UxmlStringAttributeDescription m_MaskCharacter
      // Size: 0x8
      // Offset: 0x0
      ::UnityEngine::UIElements::UxmlStringAttributeDescription* m_MaskCharacter;
      // Field size check
      static_assert(sizeof(::UnityEngine::UIElements::UxmlStringAttributeDescription*) == 0x8);
      // private UnityEngine.UIElements.UxmlBoolAttributeDescription m_IsReadOnly
      // Size: 0x8
      // Offset: 0x0
      ::UnityEngine::UIElements::UxmlBoolAttributeDescription* m_IsReadOnly;
      // Field size check
      static_assert(sizeof(::UnityEngine::UIElements::UxmlBoolAttributeDescription*) == 0x8);
      // private UnityEngine.UIElements.UxmlBoolAttributeDescription m_IsDelayed
      // Size: 0x8
      // Offset: 0x0
      ::UnityEngine::UIElements::UxmlBoolAttributeDescription* m_IsDelayed;
      // Field size check
      static_assert(sizeof(::UnityEngine::UIElements::UxmlBoolAttributeDescription*) == 0x8);
      // private UnityEngine.UIElements.UxmlBoolAttributeDescription m_HideMobileInput
      // Size: 0x8
      // Offset: 0x0
      ::UnityEngine::UIElements::UxmlBoolAttributeDescription* m_HideMobileInput;
      // Field size check
      static_assert(sizeof(::UnityEngine::UIElements::UxmlBoolAttributeDescription*) == 0x8);
      // private UnityEngine.UIElements.UxmlEnumAttributeDescription`1<UnityEngine.TouchScreenKeyboardType> m_KeyboardType
      // Size: 0x8
      // Offset: 0x0
      ::UnityEngine::UIElements::UxmlEnumAttributeDescription_1<::UnityEngine::TouchScreenKeyboardType>* m_KeyboardType;
      // Field size check
      static_assert(sizeof(::UnityEngine::UIElements::UxmlEnumAttributeDescription_1<::UnityEngine::TouchScreenKeyboardType>*) == 0x8);
      // private UnityEngine.UIElements.UxmlBoolAttributeDescription m_AutoCorrection
      // Size: 0x8
      // Offset: 0x0
      ::UnityEngine::UIElements::UxmlBoolAttributeDescription* m_AutoCorrection;
      // Field size check
      static_assert(sizeof(::UnityEngine::UIElements::UxmlBoolAttributeDescription*) == 0x8);
      public:
      // Autogenerated instance field getter
      // Get instance field: private UnityEngine.UIElements.UxmlIntAttributeDescription m_MaxLength
      [[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::UxmlIntAttributeDescription*& dyn_m_MaxLength() {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::TextInputBaseField_1::UxmlTraits::dyn_m_MaxLength");
        auto ___internal__instance = this;
        static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_MaxLength"))->offset;
        return *reinterpret_cast<::UnityEngine::UIElements::UxmlIntAttributeDescription**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
      }
      // Autogenerated instance field getter
      // Get instance field: private UnityEngine.UIElements.UxmlBoolAttributeDescription m_Password
      [[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::UxmlBoolAttributeDescription*& dyn_m_Password() {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::TextInputBaseField_1::UxmlTraits::dyn_m_Password");
        auto ___internal__instance = this;
        static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Password"))->offset;
        return *reinterpret_cast<::UnityEngine::UIElements::UxmlBoolAttributeDescription**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
      }
      // Autogenerated instance field getter
      // Get instance field: private UnityEngine.UIElements.UxmlStringAttributeDescription m_MaskCharacter
      [[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::UxmlStringAttributeDescription*& dyn_m_MaskCharacter() {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::TextInputBaseField_1::UxmlTraits::dyn_m_MaskCharacter");
        auto ___internal__instance = this;
        static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_MaskCharacter"))->offset;
        return *reinterpret_cast<::UnityEngine::UIElements::UxmlStringAttributeDescription**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
      }
      // Autogenerated instance field getter
      // Get instance field: private UnityEngine.UIElements.UxmlBoolAttributeDescription m_IsReadOnly
      [[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::UxmlBoolAttributeDescription*& dyn_m_IsReadOnly() {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::TextInputBaseField_1::UxmlTraits::dyn_m_IsReadOnly");
        auto ___internal__instance = this;
        static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_IsReadOnly"))->offset;
        return *reinterpret_cast<::UnityEngine::UIElements::UxmlBoolAttributeDescription**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
      }
      // Autogenerated instance field getter
      // Get instance field: private UnityEngine.UIElements.UxmlBoolAttributeDescription m_IsDelayed
      [[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::UxmlBoolAttributeDescription*& dyn_m_IsDelayed() {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::TextInputBaseField_1::UxmlTraits::dyn_m_IsDelayed");
        auto ___internal__instance = this;
        static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_IsDelayed"))->offset;
        return *reinterpret_cast<::UnityEngine::UIElements::UxmlBoolAttributeDescription**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
      }
      // Autogenerated instance field getter
      // Get instance field: private UnityEngine.UIElements.UxmlBoolAttributeDescription m_HideMobileInput
      [[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::UxmlBoolAttributeDescription*& dyn_m_HideMobileInput() {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::TextInputBaseField_1::UxmlTraits::dyn_m_HideMobileInput");
        auto ___internal__instance = this;
        static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_HideMobileInput"))->offset;
        return *reinterpret_cast<::UnityEngine::UIElements::UxmlBoolAttributeDescription**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
      }
      // Autogenerated instance field getter
      // Get instance field: private UnityEngine.UIElements.UxmlEnumAttributeDescription`1<UnityEngine.TouchScreenKeyboardType> m_KeyboardType
      [[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::UxmlEnumAttributeDescription_1<::UnityEngine::TouchScreenKeyboardType>*& dyn_m_KeyboardType() {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::TextInputBaseField_1::UxmlTraits::dyn_m_KeyboardType");
        auto ___internal__instance = this;
        static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_KeyboardType"))->offset;
        return *reinterpret_cast<::UnityEngine::UIElements::UxmlEnumAttributeDescription_1<::UnityEngine::TouchScreenKeyboardType>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
      }
      // Autogenerated instance field getter
      // Get instance field: private UnityEngine.UIElements.UxmlBoolAttributeDescription m_AutoCorrection
      [[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::UxmlBoolAttributeDescription*& dyn_m_AutoCorrection() {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::TextInputBaseField_1::UxmlTraits::dyn_m_AutoCorrection");
        auto ___internal__instance = this;
        static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_AutoCorrection"))->offset;
        return *reinterpret_cast<::UnityEngine::UIElements::UxmlBoolAttributeDescription**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
      }
      // public override System.Void Init(UnityEngine.UIElements.VisualElement ve, UnityEngine.UIElements.IUxmlAttributes bag, UnityEngine.UIElements.CreationContext cc)
      // Offset: 0xFFFFFFFFFFFFFFFF
      // Implemented from: UnityEngine.UIElements.BaseFieldTraits`2
      // Base method: System.Void BaseFieldTraits_2::Init(UnityEngine.UIElements.VisualElement ve, UnityEngine.UIElements.IUxmlAttributes bag, UnityEngine.UIElements.CreationContext cc)
      void Init(::UnityEngine::UIElements::VisualElement* ve, ::UnityEngine::UIElements::IUxmlAttributes* bag, ::UnityEngine::UIElements::CreationContext cc) {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::TextInputBaseField_1::UxmlTraits::Init");
        auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UIElements::BaseFieldTraits_2<TValueType, TValueUxmlAttributeType>*), -1)));
        ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ve, bag, cc);
      }
      // public System.Void .ctor()
      // Offset: 0xFFFFFFFFFFFFFFFF
      // Implemented from: UnityEngine.UIElements.BaseFieldTraits`2
      // Base method: System.Void BaseFieldTraits_2::.ctor()
      // Base method: System.Void UxmlTraits::.ctor()
      // Base method: System.Void UxmlTraits::.ctor()
      // Base method: System.Void UxmlTraits::.ctor()
      // Base method: System.Void UxmlTraits::.ctor()
      // Base method: System.Void BaseUxmlTraits::.ctor()
      template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
      static typename TextInputBaseField_1<TValueType>::UxmlTraits* New_ctor() {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::TextInputBaseField_1::UxmlTraits::.ctor");
        return THROW_UNLESS((::il2cpp_utils::New<typename TextInputBaseField_1<TValueType>::UxmlTraits*, creationType>()));
      }
    }; // UnityEngine.UIElements.TextInputBaseField`1/UxmlTraits
    // Could not write size check! Type: UnityEngine.UIElements.TextInputBaseField`1/UxmlTraits is generic, or has no fields that are valid for size checks!
    // WARNING Size may be invalid!
    // Autogenerated type: UnityEngine.UIElements.TextInputBaseField`1/TextInputBase
    // [TokenAttribute] Offset: FFFFFFFF
    class TextInputBase : public ::il2cpp_utils::il2cpp_type_check::NestedType, public ::UnityEngine::UIElements::VisualElement {
      public:
      using declaring_type = TextInputBaseField_1<TValueType>*;
      static constexpr std::string_view NESTED_NAME = "TextInputBase";
      static constexpr bool IS_VALUE_TYPE = false;
      public:
      // private UnityEngine.UIElements.TextElement <textElement>k__BackingField
      // Size: 0x8
      // Offset: 0x0
      ::UnityEngine::UIElements::TextElement* textElement;
      // Field size check
      static_assert(sizeof(::UnityEngine::UIElements::TextElement*) == 0x8);
      // UnityEngine.UIElements.ScrollView scrollView
      // Size: 0x8
      // Offset: 0x0
      ::UnityEngine::UIElements::ScrollView* scrollView;
      // Field size check
      static_assert(sizeof(::UnityEngine::UIElements::ScrollView*) == 0x8);
      // UnityEngine.UIElements.VisualElement multilineContainer
      // Size: 0x8
      // Offset: 0x0
      ::UnityEngine::UIElements::VisualElement* multilineContainer;
      // Field size check
      static_assert(sizeof(::UnityEngine::UIElements::VisualElement*) == 0x8);
      // private System.Boolean <isDragging>k__BackingField
      // Size: 0x1
      // Offset: 0x0
      bool isDragging;
      // Field size check
      static_assert(sizeof(bool) == 0x1);
      // UnityEngine.Vector2 scrollOffset
      // Size: 0x8
      // Offset: 0x0
      ::UnityEngine::Vector2 scrollOffset;
      // Field size check
      static_assert(sizeof(::UnityEngine::Vector2) == 0x8);
      // private System.Boolean m_ScrollViewWasClamped
      // Size: 0x1
      // Offset: 0x0
      bool m_ScrollViewWasClamped;
      // Field size check
      static_assert(sizeof(bool) == 0x1);
      // private UnityEngine.Vector2 lastCursorPos
      // Size: 0x8
      // Offset: 0x0
      ::UnityEngine::Vector2 lastCursorPos;
      // Field size check
      static_assert(sizeof(::UnityEngine::Vector2) == 0x8);
      // private UnityEngine.UIElements.ScrollerVisibility m_VerticalScrollerVisibility
      // Size: 0x4
      // Offset: 0x0
      ::UnityEngine::UIElements::ScrollerVisibility m_VerticalScrollerVisibility;
      // Field size check
      static_assert(sizeof(::UnityEngine::UIElements::ScrollerVisibility) == 0x4);
      public:
      // Autogenerated static field getter
      // Get static field: static public readonly System.String innerComponentsModifierName
      static ::StringW _get_innerComponentsModifierName() {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::TextInputBaseField_1::TextInputBase::_get_innerComponentsModifierName");
        return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<typename TextInputBaseField_1<TValueType>::TextInputBase*>::get(), "innerComponentsModifierName"));
      }
      // Autogenerated static field setter
      // Set static field: static public readonly System.String innerComponentsModifierName
      static void _set_innerComponentsModifierName(::StringW value) {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::TextInputBaseField_1::TextInputBase::_set_innerComponentsModifierName");
        THROW_UNLESS(il2cpp_utils::SetFieldValue(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<typename TextInputBaseField_1<TValueType>::TextInputBase*>::get(), "innerComponentsModifierName", value));
      }
      // Autogenerated static field getter
      // Get static field: static public readonly System.String innerTextElementUssClassName
      static ::StringW _get_innerTextElementUssClassName() {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::TextInputBaseField_1::TextInputBase::_get_innerTextElementUssClassName");
        return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<typename TextInputBaseField_1<TValueType>::TextInputBase*>::get(), "innerTextElementUssClassName"));
      }
      // Autogenerated static field setter
      // Set static field: static public readonly System.String innerTextElementUssClassName
      static void _set_innerTextElementUssClassName(::StringW value) {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::TextInputBaseField_1::TextInputBase::_set_innerTextElementUssClassName");
        THROW_UNLESS(il2cpp_utils::SetFieldValue(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<typename TextInputBaseField_1<TValueType>::TextInputBase*>::get(), "innerTextElementUssClassName", value));
      }
      // Autogenerated static field getter
      // Get static field: static readonly System.String innerTextElementWithScrollViewUssClassName
      static ::StringW _get_innerTextElementWithScrollViewUssClassName() {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::TextInputBaseField_1::TextInputBase::_get_innerTextElementWithScrollViewUssClassName");
        return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<typename TextInputBaseField_1<TValueType>::TextInputBase*>::get(), "innerTextElementWithScrollViewUssClassName"));
      }
      // Autogenerated static field setter
      // Set static field: static readonly System.String innerTextElementWithScrollViewUssClassName
      static void _set_innerTextElementWithScrollViewUssClassName(::StringW value) {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::TextInputBaseField_1::TextInputBase::_set_innerTextElementWithScrollViewUssClassName");
        THROW_UNLESS(il2cpp_utils::SetFieldValue(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<typename TextInputBaseField_1<TValueType>::TextInputBase*>::get(), "innerTextElementWithScrollViewUssClassName", value));
      }
      // Autogenerated static field getter
      // Get static field: static public readonly System.String horizontalVariantInnerTextElementUssClassName
      static ::StringW _get_horizontalVariantInnerTextElementUssClassName() {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::TextInputBaseField_1::TextInputBase::_get_horizontalVariantInnerTextElementUssClassName");
        return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<typename TextInputBaseField_1<TValueType>::TextInputBase*>::get(), "horizontalVariantInnerTextElementUssClassName"));
      }
      // Autogenerated static field setter
      // Set static field: static public readonly System.String horizontalVariantInnerTextElementUssClassName
      static void _set_horizontalVariantInnerTextElementUssClassName(::StringW value) {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::TextInputBaseField_1::TextInputBase::_set_horizontalVariantInnerTextElementUssClassName");
        THROW_UNLESS(il2cpp_utils::SetFieldValue(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<typename TextInputBaseField_1<TValueType>::TextInputBase*>::get(), "horizontalVariantInnerTextElementUssClassName", value));
      }
      // Autogenerated static field getter
      // Get static field: static public readonly System.String verticalVariantInnerTextElementUssClassName
      static ::StringW _get_verticalVariantInnerTextElementUssClassName() {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::TextInputBaseField_1::TextInputBase::_get_verticalVariantInnerTextElementUssClassName");
        return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<typename TextInputBaseField_1<TValueType>::TextInputBase*>::get(), "verticalVariantInnerTextElementUssClassName"));
      }
      // Autogenerated static field setter
      // Set static field: static public readonly System.String verticalVariantInnerTextElementUssClassName
      static void _set_verticalVariantInnerTextElementUssClassName(::StringW value) {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::TextInputBaseField_1::TextInputBase::_set_verticalVariantInnerTextElementUssClassName");
        THROW_UNLESS(il2cpp_utils::SetFieldValue(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<typename TextInputBaseField_1<TValueType>::TextInputBase*>::get(), "verticalVariantInnerTextElementUssClassName", value));
      }
      // Autogenerated static field getter
      // Get static field: static public readonly System.String verticalHorizontalVariantInnerTextElementUssClassName
      static ::StringW _get_verticalHorizontalVariantInnerTextElementUssClassName() {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::TextInputBaseField_1::TextInputBase::_get_verticalHorizontalVariantInnerTextElementUssClassName");
        return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<typename TextInputBaseField_1<TValueType>::TextInputBase*>::get(), "verticalHorizontalVariantInnerTextElementUssClassName"));
      }
      // Autogenerated static field setter
      // Set static field: static public readonly System.String verticalHorizontalVariantInnerTextElementUssClassName
      static void _set_verticalHorizontalVariantInnerTextElementUssClassName(::StringW value) {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::TextInputBaseField_1::TextInputBase::_set_verticalHorizontalVariantInnerTextElementUssClassName");
        THROW_UNLESS(il2cpp_utils::SetFieldValue(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<typename TextInputBaseField_1<TValueType>::TextInputBase*>::get(), "verticalHorizontalVariantInnerTextElementUssClassName", value));
      }
      // Autogenerated static field getter
      // Get static field: static public readonly System.String innerScrollviewUssClassName
      static ::StringW _get_innerScrollviewUssClassName() {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::TextInputBaseField_1::TextInputBase::_get_innerScrollviewUssClassName");
        return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<typename TextInputBaseField_1<TValueType>::TextInputBase*>::get(), "innerScrollviewUssClassName"));
      }
      // Autogenerated static field setter
      // Set static field: static public readonly System.String innerScrollviewUssClassName
      static void _set_innerScrollviewUssClassName(::StringW value) {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::TextInputBaseField_1::TextInputBase::_set_innerScrollviewUssClassName");
        THROW_UNLESS(il2cpp_utils::SetFieldValue(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<typename TextInputBaseField_1<TValueType>::TextInputBase*>::get(), "innerScrollviewUssClassName", value));
      }
      // Autogenerated static field getter
      // Get static field: static public readonly System.String innerViewportUssClassName
      static ::StringW _get_innerViewportUssClassName() {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::TextInputBaseField_1::TextInputBase::_get_innerViewportUssClassName");
        return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<typename TextInputBaseField_1<TValueType>::TextInputBase*>::get(), "innerViewportUssClassName"));
      }
      // Autogenerated static field setter
      // Set static field: static public readonly System.String innerViewportUssClassName
      static void _set_innerViewportUssClassName(::StringW value) {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::TextInputBaseField_1::TextInputBase::_set_innerViewportUssClassName");
        THROW_UNLESS(il2cpp_utils::SetFieldValue(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<typename TextInputBaseField_1<TValueType>::TextInputBase*>::get(), "innerViewportUssClassName", value));
      }
      // Autogenerated static field getter
      // Get static field: static public readonly System.String innerContentContainerUssClassName
      static ::StringW _get_innerContentContainerUssClassName() {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::TextInputBaseField_1::TextInputBase::_get_innerContentContainerUssClassName");
        return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<typename TextInputBaseField_1<TValueType>::TextInputBase*>::get(), "innerContentContainerUssClassName"));
      }
      // Autogenerated static field setter
      // Set static field: static public readonly System.String innerContentContainerUssClassName
      static void _set_innerContentContainerUssClassName(::StringW value) {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::TextInputBaseField_1::TextInputBase::_set_innerContentContainerUssClassName");
        THROW_UNLESS(il2cpp_utils::SetFieldValue(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<typename TextInputBaseField_1<TValueType>::TextInputBase*>::get(), "innerContentContainerUssClassName", value));
      }
      // Autogenerated instance field getter
      // Get instance field: private UnityEngine.UIElements.TextElement <textElement>k__BackingField
      [[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::TextElement*& dyn_$textElement$k__BackingField() {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::TextInputBaseField_1::TextInputBase::dyn_$textElement$k__BackingField");
        auto ___internal__instance = this;
        static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<textElement>k__BackingField"))->offset;
        return *reinterpret_cast<::UnityEngine::UIElements::TextElement**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
      }
      // Autogenerated instance field getter
      // Get instance field: UnityEngine.UIElements.ScrollView scrollView
      [[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::ScrollView*& dyn_scrollView() {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::TextInputBaseField_1::TextInputBase::dyn_scrollView");
        auto ___internal__instance = this;
        static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "scrollView"))->offset;
        return *reinterpret_cast<::UnityEngine::UIElements::ScrollView**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
      }
      // Autogenerated instance field getter
      // Get instance field: UnityEngine.UIElements.VisualElement multilineContainer
      [[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::VisualElement*& dyn_multilineContainer() {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::TextInputBaseField_1::TextInputBase::dyn_multilineContainer");
        auto ___internal__instance = this;
        static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "multilineContainer"))->offset;
        return *reinterpret_cast<::UnityEngine::UIElements::VisualElement**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
      }
      // Autogenerated instance field getter
      // Get instance field: private System.Boolean <isDragging>k__BackingField
      [[deprecated("Use field access instead!")]] bool& dyn_$isDragging$k__BackingField() {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::TextInputBaseField_1::TextInputBase::dyn_$isDragging$k__BackingField");
        auto ___internal__instance = this;
        static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<isDragging>k__BackingField"))->offset;
        return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
      }
      // Autogenerated instance field getter
      // Get instance field: UnityEngine.Vector2 scrollOffset
      [[deprecated("Use field access instead!")]] ::UnityEngine::Vector2& dyn_scrollOffset() {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::TextInputBaseField_1::TextInputBase::dyn_scrollOffset");
        auto ___internal__instance = this;
        static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "scrollOffset"))->offset;
        return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
      }
      // Autogenerated instance field getter
      // Get instance field: private System.Boolean m_ScrollViewWasClamped
      [[deprecated("Use field access instead!")]] bool& dyn_m_ScrollViewWasClamped() {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::TextInputBaseField_1::TextInputBase::dyn_m_ScrollViewWasClamped");
        auto ___internal__instance = this;
        static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ScrollViewWasClamped"))->offset;
        return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
      }
      // Autogenerated instance field getter
      // Get instance field: private UnityEngine.Vector2 lastCursorPos
      [[deprecated("Use field access instead!")]] ::UnityEngine::Vector2& dyn_lastCursorPos() {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::TextInputBaseField_1::TextInputBase::dyn_lastCursorPos");
        auto ___internal__instance = this;
        static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastCursorPos"))->offset;
        return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
      }
      // Autogenerated instance field getter
      // Get instance field: private UnityEngine.UIElements.ScrollerVisibility m_VerticalScrollerVisibility
      [[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::ScrollerVisibility& dyn_m_VerticalScrollerVisibility() {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::TextInputBaseField_1::TextInputBase::dyn_m_VerticalScrollerVisibility");
        auto ___internal__instance = this;
        static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_VerticalScrollerVisibility"))->offset;
        return *reinterpret_cast<::UnityEngine::UIElements::ScrollerVisibility*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
      }
      // UnityEngine.UIElements.TextElement get_textElement()
      // Offset: 0xFFFFFFFFFFFFFFFF
      ::UnityEngine::UIElements::TextElement* get_textElement() {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::TextInputBaseField_1::TextInputBase::get_textElement");
        static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_textElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
        return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::UIElements::TextElement*, false>(this, ___internal__method);
      }
      // private System.Void set_textElement(UnityEngine.UIElements.TextElement value)
      // Offset: 0xFFFFFFFFFFFFFFFF
      void set_textElement(::UnityEngine::UIElements::TextElement* value) {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::TextInputBaseField_1::TextInputBase::set_textElement");
        static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_textElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
        ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
      }
      // public UnityEngine.UIElements.ITextSelection get_textSelection()
      // Offset: 0xFFFFFFFFFFFFFFFF
      ::UnityEngine::UIElements::ITextSelection* get_textSelection() {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::TextInputBaseField_1::TextInputBase::get_textSelection");
        static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_textSelection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
        return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::UIElements::ITextSelection*, false>(this, ___internal__method);
      }
      // public UnityEngine.UIElements.ITextEdition get_textEdition()
      // Offset: 0xFFFFFFFFFFFFFFFF
      ::UnityEngine::UIElements::ITextEdition* get_textEdition() {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::TextInputBaseField_1::TextInputBase::get_textEdition");
        static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_textEdition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
        return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::UIElements::ITextEdition*, false>(this, ___internal__method);
      }
      // public System.Void SelectAll()
      // Offset: 0xFFFFFFFFFFFFFFFF
      void SelectAll() {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::TextInputBaseField_1::TextInputBase::SelectAll");
        static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SelectAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
        ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
      }
      // System.Void SelectNone()
      // Offset: 0xFFFFFFFFFFFFFFFF
      void SelectNone() {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::TextInputBaseField_1::TextInputBase::SelectNone");
        static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SelectNone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
        ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
      }
      // System.String get_originalText()
      // Offset: 0xFFFFFFFFFFFFFFFF
      ::StringW get_originalText() {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::TextInputBaseField_1::TextInputBase::get_originalText");
        static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_originalText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
        return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
      }
      // protected TValueType StringToValue(System.String str)
      // Offset: 0xFFFFFFFFFFFFFFFF
      TValueType StringToValue(::StringW str) {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::TextInputBaseField_1::TextInputBase::StringToValue");
        auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(typename ::UnityEngine::UIElements::TextInputBaseField_1<TValueType>::TextInputBase*), -1));
        return ::il2cpp_utils::RunMethodRethrow<TValueType, false>(this, ___internal__method, str);
      }
      // System.Void UpdateValueFromText()
      // Offset: 0xFFFFFFFFFFFFFFFF
      void UpdateValueFromText() {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::TextInputBaseField_1::TextInputBase::UpdateValueFromText");
        static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateValueFromText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
        ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
      }
      // System.Void UpdateTextFromValue()
      // Offset: 0xFFFFFFFFFFFFFFFF
      void UpdateTextFromValue() {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::TextInputBaseField_1::TextInputBase::UpdateTextFromValue");
        static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateTextFromValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
        ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
      }
      // System.Void MoveFocusToCompositeRoot()
      // Offset: 0xFFFFFFFFFFFFFFFF
      void MoveFocusToCompositeRoot() {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::TextInputBaseField_1::TextInputBase::MoveFocusToCompositeRoot");
        static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveFocusToCompositeRoot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
        ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
      }
      // public System.Boolean get_isReadOnly()
      // Offset: 0xFFFFFFFFFFFFFFFF
      bool get_isReadOnly() {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::TextInputBaseField_1::TextInputBase::get_isReadOnly");
        static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isReadOnly", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
        return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
      }
      // public System.Void set_maxLength(System.Int32 value)
      // Offset: 0xFFFFFFFFFFFFFFFF
      void set_maxLength(int value) {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::TextInputBaseField_1::TextInputBase::set_maxLength");
        static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_maxLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
        ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
      }
      // public System.Void set_maskChar(System.Char value)
      // Offset: 0xFFFFFFFFFFFFFFFF
      void set_maskChar(::Il2CppChar value) {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::TextInputBaseField_1::TextInputBase::set_maskChar");
        static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_maskChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
        ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
      }
      // public System.Boolean get_isPasswordField()
      // Offset: 0xFFFFFFFFFFFFFFFF
      bool get_isPasswordField() {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::TextInputBaseField_1::TextInputBase::get_isPasswordField");
        auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(typename ::UnityEngine::UIElements::TextInputBaseField_1<TValueType>::TextInputBase*), -1));
        return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
      }
      // public System.Void set_isPasswordField(System.Boolean value)
      // Offset: 0xFFFFFFFFFFFFFFFF
      void set_isPasswordField(bool value) {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::TextInputBaseField_1::TextInputBase::set_isPasswordField");
        auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(typename ::UnityEngine::UIElements::TextInputBaseField_1<TValueType>::TextInputBase*), -1));
        ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
      }
      // System.Void set_isDragging(System.Boolean value)
      // Offset: 0xFFFFFFFFFFFFFFFF
      void set_isDragging(bool value) {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::TextInputBaseField_1::TextInputBase::set_isDragging");
        static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_isDragging", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
        ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
      }
      // public System.String get_text()
      // Offset: 0xFFFFFFFFFFFFFFFF
      ::StringW get_text() {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::TextInputBaseField_1::TextInputBase::get_text");
        static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_text", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
        return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
      }
      // public System.Void set_text(System.String value)
      // Offset: 0xFFFFFFFFFFFFFFFF
      void set_text(::StringW value) {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::TextInputBaseField_1::TextInputBase::set_text");
        static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_text", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
        ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
      }
      // private System.Void MakeSureScrollViewDoesNotLeakEvents(UnityEngine.UIElements.ChangeEvent`1<System.Single> evt)
      // Offset: 0xFFFFFFFFFFFFFFFF
      void MakeSureScrollViewDoesNotLeakEvents(::UnityEngine::UIElements::ChangeEvent_1<float>* evt) {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::TextInputBaseField_1::TextInputBase::MakeSureScrollViewDoesNotLeakEvents");
        static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MakeSureScrollViewDoesNotLeakEvents", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(evt)})));
        ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, evt);
      }
      // System.Void SetSingleLine()
      // Offset: 0xFFFFFFFFFFFFFFFF
      void SetSingleLine() {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::TextInputBaseField_1::TextInputBase::SetSingleLine");
        static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetSingleLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
        ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
      }
      // System.Void SetMultiline()
      // Offset: 0xFFFFFFFFFFFFFFFF
      void SetMultiline() {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::TextInputBaseField_1::TextInputBase::SetMultiline");
        static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetMultiline", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
        ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
      }
      // private System.Void ScrollViewOnGeometryChangedEvent(UnityEngine.UIElements.GeometryChangedEvent e)
      // Offset: 0xFFFFFFFFFFFFFFFF
      void ScrollViewOnGeometryChangedEvent(::UnityEngine::UIElements::GeometryChangedEvent* e) {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::TextInputBaseField_1::TextInputBase::ScrollViewOnGeometryChangedEvent");
        static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScrollViewOnGeometryChangedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(e)})));
        ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, e);
      }
      // private System.Void TextElementOnGeometryChangedEvent(UnityEngine.UIElements.GeometryChangedEvent e)
      // Offset: 0xFFFFFFFFFFFFFFFF
      void TextElementOnGeometryChangedEvent(::UnityEngine::UIElements::GeometryChangedEvent* e) {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::TextInputBaseField_1::TextInputBase::TextElementOnGeometryChangedEvent");
        static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TextElementOnGeometryChangedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(e)})));
        ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, e);
      }
      // System.Void OnInputCustomStyleResolved(UnityEngine.UIElements.CustomStyleResolvedEvent e)
      // Offset: 0xFFFFFFFFFFFFFFFF
      void OnInputCustomStyleResolved(::UnityEngine::UIElements::CustomStyleResolvedEvent* e) {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::TextInputBaseField_1::TextInputBase::OnInputCustomStyleResolved");
        static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnInputCustomStyleResolved", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(e)})));
        ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, e);
      }
      // System.Boolean AcceptCharacter(System.Char c)
      // Offset: 0xFFFFFFFFFFFFFFFF
      bool AcceptCharacter(::Il2CppChar c) {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::TextInputBaseField_1::TextInputBase::AcceptCharacter");
        auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(typename ::UnityEngine::UIElements::TextInputBaseField_1<TValueType>::TextInputBase*), -1));
        return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, c);
      }
      // System.Void UpdateScrollOffset(System.Boolean isBackspace)
      // Offset: 0xFFFFFFFFFFFFFFFF
      void UpdateScrollOffset(bool isBackspace) {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::TextInputBaseField_1::TextInputBase::UpdateScrollOffset");
        static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateScrollOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isBackspace)})));
        ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, isBackspace);
      }
      // System.Void UpdateScrollOffset(System.Boolean isBackspace, System.Boolean widthChanged)
      // Offset: 0xFFFFFFFFFFFFFFFF
      void UpdateScrollOffset(bool isBackspace, bool widthChanged) {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::TextInputBaseField_1::TextInputBase::UpdateScrollOffset");
        static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateScrollOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isBackspace), ::il2cpp_utils::ExtractType(widthChanged)})));
        ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, isBackspace, widthChanged);
      }
      // private UnityEngine.Vector2 GetScrollOffset(System.Single xOffset, System.Single yOffset, System.Single contentViewportWidth, System.Boolean isBackspace, System.Boolean widthChanged)
      // Offset: 0xFFFFFFFFFFFFFFFF
      ::UnityEngine::Vector2 GetScrollOffset(float xOffset, float yOffset, float contentViewportWidth, bool isBackspace, bool widthChanged) {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::TextInputBaseField_1::TextInputBase::GetScrollOffset");
        static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetScrollOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(xOffset), ::il2cpp_utils::ExtractType(yOffset), ::il2cpp_utils::ExtractType(contentViewportWidth), ::il2cpp_utils::ExtractType(isBackspace), ::il2cpp_utils::ExtractType(widthChanged)})));
        return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(this, ___internal__method, xOffset, yOffset, contentViewportWidth, isBackspace, widthChanged);
      }
      // System.Void SetScrollViewMode()
      // Offset: 0xFFFFFFFFFFFFFFFF
      void SetScrollViewMode() {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::TextInputBaseField_1::TextInputBase::SetScrollViewMode");
        static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetScrollViewMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
        ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
      }
      // private System.Void SetMultilineContainerStyle()
      // Offset: 0xFFFFFFFFFFFFFFFF
      void SetMultilineContainerStyle() {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::TextInputBaseField_1::TextInputBase::SetMultilineContainerStyle");
        static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetMultilineContainerStyle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
        ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
      }
      // private System.Void RemoveSingleLineComponents()
      // Offset: 0xFFFFFFFFFFFFFFFF
      void RemoveSingleLineComponents() {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::TextInputBaseField_1::TextInputBase::RemoveSingleLineComponents");
        static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveSingleLineComponents", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
        ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
      }
      // private System.Void RemoveMultilineComponents()
      // Offset: 0xFFFFFFFFFFFFFFFF
      void RemoveMultilineComponents() {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::TextInputBaseField_1::TextInputBase::RemoveMultilineComponents");
        static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveMultilineComponents", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
        ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
      }
      // System.Void .ctor()
      // Offset: 0xFFFFFFFFFFFFFFFF
      // Implemented from: UnityEngine.UIElements.VisualElement
      // Base method: System.Void VisualElement::.ctor()
      // Base method: System.Void Focusable::.ctor()
      // Base method: System.Void CallbackEventHandler::.ctor()
      template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
      static typename TextInputBaseField_1<TValueType>::TextInputBase* New_ctor() {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::TextInputBaseField_1::TextInputBase::.ctor");
        return THROW_UNLESS((::il2cpp_utils::New<typename TextInputBaseField_1<TValueType>::TextInputBase*, creationType>()));
      }
      // static private System.Void .cctor()
      // Offset: 0xFFFFFFFFFFFFFFFF
      // Implemented from: UnityEngine.UIElements.VisualElement
      // Base method: System.Void VisualElement::.cctor()
      static void _cctor() {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::TextInputBaseField_1::TextInputBase::.cctor");
        static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<typename TextInputBaseField_1<TValueType>::TextInputBase*>::get(), ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
        ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
      }
    }; // UnityEngine.UIElements.TextInputBaseField`1/TextInputBase
    // Could not write size check! Type: UnityEngine.UIElements.TextInputBaseField`1/TextInputBase is generic, or has no fields that are valid for size checks!
    public:
    // private System.Int32 m_VisualInputTabIndex
    // Size: 0x4
    // Offset: 0x0
    int m_VisualInputTabIndex;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private UnityEngine.UIElements.TextInputBaseField`1/TextInputBase<TValueType> m_TextInputBase
    // Size: 0x8
    // Offset: 0x0
    typename ::UnityEngine::UIElements::TextInputBaseField_1<TValueType>::TextInputBase* m_TextInputBase;
    // Field size check
    static_assert(sizeof(typename ::UnityEngine::UIElements::TextInputBaseField_1<TValueType>::TextInputBase*) == 0x8);
    // private System.Action`1<System.Boolean> onIsReadOnlyChanged
    // Size: 0x8
    // Offset: 0x0
    ::System::Action_1<bool>* onIsReadOnlyChanged;
    // Field size check
    static_assert(sizeof(::System::Action_1<bool>*) == 0x8);
    public:
    // Autogenerated static field getter
    // Get static field: static private UnityEngine.UIElements.CustomStyleProperty`1<UnityEngine.Color> s_SelectionColorProperty
    static ::UnityEngine::UIElements::CustomStyleProperty_1<::UnityEngine::Color> _get_s_SelectionColorProperty() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::TextInputBaseField_1::_get_s_SelectionColorProperty");
      return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::UIElements::CustomStyleProperty_1<::UnityEngine::Color>>(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TextInputBaseField_1<TValueType>*>::get(), "s_SelectionColorProperty"));
    }
    // Autogenerated static field setter
    // Set static field: static private UnityEngine.UIElements.CustomStyleProperty`1<UnityEngine.Color> s_SelectionColorProperty
    static void _set_s_SelectionColorProperty(::UnityEngine::UIElements::CustomStyleProperty_1<::UnityEngine::Color> value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::TextInputBaseField_1::_set_s_SelectionColorProperty");
      THROW_UNLESS(il2cpp_utils::SetFieldValue(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TextInputBaseField_1<TValueType>*>::get(), "s_SelectionColorProperty", value));
    }
    // Autogenerated static field getter
    // Get static field: static private UnityEngine.UIElements.CustomStyleProperty`1<UnityEngine.Color> s_CursorColorProperty
    static ::UnityEngine::UIElements::CustomStyleProperty_1<::UnityEngine::Color> _get_s_CursorColorProperty() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::TextInputBaseField_1::_get_s_CursorColorProperty");
      return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::UIElements::CustomStyleProperty_1<::UnityEngine::Color>>(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TextInputBaseField_1<TValueType>*>::get(), "s_CursorColorProperty"));
    }
    // Autogenerated static field setter
    // Set static field: static private UnityEngine.UIElements.CustomStyleProperty`1<UnityEngine.Color> s_CursorColorProperty
    static void _set_s_CursorColorProperty(::UnityEngine::UIElements::CustomStyleProperty_1<::UnityEngine::Color> value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::TextInputBaseField_1::_set_s_CursorColorProperty");
      THROW_UNLESS(il2cpp_utils::SetFieldValue(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TextInputBaseField_1<TValueType>*>::get(), "s_CursorColorProperty", value));
    }
    // Autogenerated static field getter
    // Get static field: static public readonly System.String ussClassName
    static ::StringW _get_ussClassName() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::TextInputBaseField_1::_get_ussClassName");
      return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TextInputBaseField_1<TValueType>*>::get(), "ussClassName"));
    }
    // Autogenerated static field setter
    // Set static field: static public readonly System.String ussClassName
    static void _set_ussClassName(::StringW value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::TextInputBaseField_1::_set_ussClassName");
      THROW_UNLESS(il2cpp_utils::SetFieldValue(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TextInputBaseField_1<TValueType>*>::get(), "ussClassName", value));
    }
    // Autogenerated static field getter
    // Get static field: static public readonly System.String labelUssClassName
    static ::StringW _get_labelUssClassName() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::TextInputBaseField_1::_get_labelUssClassName");
      return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TextInputBaseField_1<TValueType>*>::get(), "labelUssClassName"));
    }
    // Autogenerated static field setter
    // Set static field: static public readonly System.String labelUssClassName
    static void _set_labelUssClassName(::StringW value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::TextInputBaseField_1::_set_labelUssClassName");
      THROW_UNLESS(il2cpp_utils::SetFieldValue(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TextInputBaseField_1<TValueType>*>::get(), "labelUssClassName", value));
    }
    // Autogenerated static field getter
    // Get static field: static public readonly System.String inputUssClassName
    static ::StringW _get_inputUssClassName() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::TextInputBaseField_1::_get_inputUssClassName");
      return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TextInputBaseField_1<TValueType>*>::get(), "inputUssClassName"));
    }
    // Autogenerated static field setter
    // Set static field: static public readonly System.String inputUssClassName
    static void _set_inputUssClassName(::StringW value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::TextInputBaseField_1::_set_inputUssClassName");
      THROW_UNLESS(il2cpp_utils::SetFieldValue(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TextInputBaseField_1<TValueType>*>::get(), "inputUssClassName", value));
    }
    // Autogenerated static field getter
    // Get static field: static readonly System.String multilineContainerClassName
    static ::StringW _get_multilineContainerClassName() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::TextInputBaseField_1::_get_multilineContainerClassName");
      return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TextInputBaseField_1<TValueType>*>::get(), "multilineContainerClassName"));
    }
    // Autogenerated static field setter
    // Set static field: static readonly System.String multilineContainerClassName
    static void _set_multilineContainerClassName(::StringW value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::TextInputBaseField_1::_set_multilineContainerClassName");
      THROW_UNLESS(il2cpp_utils::SetFieldValue(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TextInputBaseField_1<TValueType>*>::get(), "multilineContainerClassName", value));
    }
    // Autogenerated static field getter
    // Get static field: static public readonly System.String singleLineInputUssClassName
    static ::StringW _get_singleLineInputUssClassName() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::TextInputBaseField_1::_get_singleLineInputUssClassName");
      return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TextInputBaseField_1<TValueType>*>::get(), "singleLineInputUssClassName"));
    }
    // Autogenerated static field setter
    // Set static field: static public readonly System.String singleLineInputUssClassName
    static void _set_singleLineInputUssClassName(::StringW value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::TextInputBaseField_1::_set_singleLineInputUssClassName");
      THROW_UNLESS(il2cpp_utils::SetFieldValue(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TextInputBaseField_1<TValueType>*>::get(), "singleLineInputUssClassName", value));
    }
    // Autogenerated static field getter
    // Get static field: static public readonly System.String multilineInputUssClassName
    static ::StringW _get_multilineInputUssClassName() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::TextInputBaseField_1::_get_multilineInputUssClassName");
      return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TextInputBaseField_1<TValueType>*>::get(), "multilineInputUssClassName"));
    }
    // Autogenerated static field setter
    // Set static field: static public readonly System.String multilineInputUssClassName
    static void _set_multilineInputUssClassName(::StringW value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::TextInputBaseField_1::_set_multilineInputUssClassName");
      THROW_UNLESS(il2cpp_utils::SetFieldValue(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TextInputBaseField_1<TValueType>*>::get(), "multilineInputUssClassName", value));
    }
    // Autogenerated static field getter
    // Get static field: static readonly System.String multilineInputWithScrollViewUssClassName
    static ::StringW _get_multilineInputWithScrollViewUssClassName() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::TextInputBaseField_1::_get_multilineInputWithScrollViewUssClassName");
      return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TextInputBaseField_1<TValueType>*>::get(), "multilineInputWithScrollViewUssClassName"));
    }
    // Autogenerated static field setter
    // Set static field: static readonly System.String multilineInputWithScrollViewUssClassName
    static void _set_multilineInputWithScrollViewUssClassName(::StringW value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::TextInputBaseField_1::_set_multilineInputWithScrollViewUssClassName");
      THROW_UNLESS(il2cpp_utils::SetFieldValue(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TextInputBaseField_1<TValueType>*>::get(), "multilineInputWithScrollViewUssClassName", value));
    }
    // Autogenerated static field getter
    // Get static field: static public readonly System.String textInputUssName
    static ::StringW _get_textInputUssName() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::TextInputBaseField_1::_get_textInputUssName");
      return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TextInputBaseField_1<TValueType>*>::get(), "textInputUssName"));
    }
    // Autogenerated static field setter
    // Set static field: static public readonly System.String textInputUssName
    static void _set_textInputUssName(::StringW value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::TextInputBaseField_1::_set_textInputUssName");
      THROW_UNLESS(il2cpp_utils::SetFieldValue(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TextInputBaseField_1<TValueType>*>::get(), "textInputUssName", value));
    }
    // Autogenerated instance field getter
    // Get instance field: private System.Int32 m_VisualInputTabIndex
    [[deprecated("Use field access instead!")]] int& dyn_m_VisualInputTabIndex() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::TextInputBaseField_1::dyn_m_VisualInputTabIndex");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_VisualInputTabIndex"))->offset;
      return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: private UnityEngine.UIElements.TextInputBaseField`1/TextInputBase<TValueType> m_TextInputBase
    [[deprecated("Use field access instead!")]] typename ::UnityEngine::UIElements::TextInputBaseField_1<TValueType>::TextInputBase*& dyn_m_TextInputBase() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::TextInputBaseField_1::dyn_m_TextInputBase");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_TextInputBase"))->offset;
      return *reinterpret_cast<typename ::UnityEngine::UIElements::TextInputBaseField_1<TValueType>::TextInputBase**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: private System.Action`1<System.Boolean> onIsReadOnlyChanged
    [[deprecated("Use field access instead!")]] ::System::Action_1<bool>*& dyn_onIsReadOnlyChanged() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::TextInputBaseField_1::dyn_onIsReadOnlyChanged");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onIsReadOnlyChanged"))->offset;
      return *reinterpret_cast<::System::Action_1<bool>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // protected internal UnityEngine.UIElements.TextInputBaseField`1/TextInputBase<TValueType> get_textInputBase()
    // Offset: 0xFFFFFFFFFFFFFFFF
    typename ::UnityEngine::UIElements::TextInputBaseField_1<TValueType>::TextInputBase* get_textInputBase() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::TextInputBaseField_1::get_textInputBase");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_textInputBase", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      return ::il2cpp_utils::RunMethodRethrow<typename ::UnityEngine::UIElements::TextInputBaseField_1<TValueType>::TextInputBase*, false>(this, ___internal__method);
    }
    // public System.String get_text()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::StringW get_text() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::TextInputBaseField_1::get_text");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_text", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
    }
    // protected System.Void set_text(System.String value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void set_text(::StringW value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::TextInputBaseField_1::set_text");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_text", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
    }
    // protected System.Void add_onIsReadOnlyChanged(System.Action`1<System.Boolean> value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void add_onIsReadOnlyChanged(::System::Action_1<bool>* value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::TextInputBaseField_1::add_onIsReadOnlyChanged");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_onIsReadOnlyChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
    }
    // protected System.Void remove_onIsReadOnlyChanged(System.Action`1<System.Boolean> value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void remove_onIsReadOnlyChanged(::System::Action_1<bool>* value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::TextInputBaseField_1::remove_onIsReadOnlyChanged");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_onIsReadOnlyChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
    }
    // public System.Boolean get_isReadOnly()
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool get_isReadOnly() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::TextInputBaseField_1::get_isReadOnly");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isReadOnly", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
    }
    // public System.Void set_isReadOnly(System.Boolean value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void set_isReadOnly(bool value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::TextInputBaseField_1::set_isReadOnly");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_isReadOnly", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
    }
    // public System.Void set_isPasswordField(System.Boolean value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void set_isPasswordField(bool value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::TextInputBaseField_1::set_isPasswordField");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_isPasswordField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
    }
    // public System.Void set_autoCorrection(System.Boolean value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void set_autoCorrection(bool value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::TextInputBaseField_1::set_autoCorrection");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_autoCorrection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
    }
    // public System.Void set_hideMobileInput(System.Boolean value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void set_hideMobileInput(bool value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::TextInputBaseField_1::set_hideMobileInput");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_hideMobileInput", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
    }
    // public System.Void set_keyboardType(UnityEngine.TouchScreenKeyboardType value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void set_keyboardType(::UnityEngine::TouchScreenKeyboardType value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::TextInputBaseField_1::set_keyboardType");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_keyboardType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
    }
    // public UnityEngine.UIElements.ITextEdition get_textEdition()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::UnityEngine::UIElements::ITextEdition* get_textEdition() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::TextInputBaseField_1::get_textEdition");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_textEdition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::UIElements::ITextEdition*, false>(this, ___internal__method);
    }
    // public System.Void set_maxLength(System.Int32 value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void set_maxLength(int value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::TextInputBaseField_1::set_maxLength");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_maxLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
    }
    // public System.Boolean get_isDelayed()
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool get_isDelayed() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::TextInputBaseField_1::get_isDelayed");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isDelayed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
    }
    // public System.Void set_isDelayed(System.Boolean value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void set_isDelayed(bool value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::TextInputBaseField_1::set_isDelayed");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_isDelayed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
    }
    // public System.Void set_maskChar(System.Char value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void set_maskChar(::Il2CppChar value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::TextInputBaseField_1::set_maskChar");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_maskChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
    }
    // protected System.String ValueToString(TValueType value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::StringW ValueToString(TValueType value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::TextInputBaseField_1::ValueToString");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UIElements::TextInputBaseField_1<TValueType>*), -1));
      return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value);
    }
    // protected TValueType StringToValue(System.String str)
    // Offset: 0xFFFFFFFFFFFFFFFF
    TValueType StringToValue(::StringW str) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::TextInputBaseField_1::StringToValue");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UIElements::TextInputBaseField_1<TValueType>*), -1));
      return ::il2cpp_utils::RunMethodRethrow<TValueType, false>(this, ___internal__method, str);
    }
    // protected System.Void .ctor(System.String label, System.Int32 maxLength, System.Char maskChar, UnityEngine.UIElements.TextInputBaseField`1/TextInputBase<TValueType> textInputBase)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static TextInputBaseField_1<TValueType>* New_ctor(::StringW label, int maxLength, ::Il2CppChar maskChar, typename ::UnityEngine::UIElements::TextInputBaseField_1<TValueType>::TextInputBase* textInputBase) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::TextInputBaseField_1::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<TextInputBaseField_1<TValueType>*, creationType>(label, maxLength, maskChar, textInputBase)));
    }
    // private System.Void OnFieldCustomStyleResolved(UnityEngine.UIElements.CustomStyleResolvedEvent e)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void OnFieldCustomStyleResolved(::UnityEngine::UIElements::CustomStyleResolvedEvent* e) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::TextInputBaseField_1::OnFieldCustomStyleResolved");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnFieldCustomStyleResolved", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(e)})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, e);
    }
    // System.Void UpdateValueFromText()
    // Offset: 0xFFFFFFFFFFFFFFFF
    void UpdateValueFromText() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::TextInputBaseField_1::UpdateValueFromText");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UIElements::TextInputBaseField_1<TValueType>*), -1));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
    }
    // System.Void UpdateTextFromValue()
    // Offset: 0xFFFFFFFFFFFFFFFF
    void UpdateTextFromValue() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::TextInputBaseField_1::UpdateTextFromValue");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UIElements::TextInputBaseField_1<TValueType>*), -1));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
    }
    // protected override System.Void ExecuteDefaultActionAtTarget(UnityEngine.UIElements.EventBase evt)
    // Offset: 0xFFFFFFFFFFFFFFFF
    // Implemented from: UnityEngine.UIElements.CallbackEventHandler
    // Base method: System.Void CallbackEventHandler::ExecuteDefaultActionAtTarget(UnityEngine.UIElements.EventBase evt)
    void ExecuteDefaultActionAtTarget(::UnityEngine::UIElements::EventBase* evt) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::TextInputBaseField_1::ExecuteDefaultActionAtTarget");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UIElements::CallbackEventHandler*), -1));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, evt);
    }
    // protected override System.Void UpdateMixedValueContent()
    // Offset: 0xFFFFFFFFFFFFFFFF
    // Implemented from: UnityEngine.UIElements.BaseField`1
    // Base method: System.Void BaseField_1::UpdateMixedValueContent()
    void UpdateMixedValueContent() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::TextInputBaseField_1::UpdateMixedValueContent");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UIElements::BaseField_1<TValueType>*), -1));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
    }
    // static private System.Void .cctor()
    // Offset: 0xFFFFFFFFFFFFFFFF
    // Implemented from: UnityEngine.UIElements.BaseField`1
    // Base method: System.Void BaseField_1::.cctor()
    // Base method: System.Void VisualElement::.cctor()
    static void _cctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::TextInputBaseField_1::.cctor");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TextInputBaseField_1<TValueType>*>::get(), ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
    }
  }; // UnityEngine.UIElements.TextInputBaseField`1
  // Could not write size check! Type: UnityEngine.UIElements.TextInputBaseField`1 is generic, or has no fields that are valid for size checks!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
