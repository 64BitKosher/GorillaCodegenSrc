// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Including type: System.IEquatable`1
#include "System/IEquatable_1.hpp"
// Including type: UnityEngine.UIElements.BackgroundSizeType
#include "UnityEngine/UIElements/BackgroundSizeType.hpp"
// Including type: UnityEngine.UIElements.Length
#include "UnityEngine/UIElements/Length.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Type namespace: UnityEngine.UIElements
namespace UnityEngine::UIElements {
  // Forward declaring type: BackgroundSize
  struct BackgroundSize;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::UIElements::BackgroundSize, "UnityEngine.UIElements", "BackgroundSize");
// Type namespace: UnityEngine.UIElements
namespace UnityEngine::UIElements {
  // Size: 0x14
  #pragma pack(push, 1)
  // WARNING Layout: Sequential may not be correctly taken into account!
  // Autogenerated type: UnityEngine.UIElements.BackgroundSize
  // [TokenAttribute] Offset: FFFFFFFF
  struct BackgroundSize/*, public ::System::ValueType, public ::System::IEquatable_1<::UnityEngine::UIElements::BackgroundSize>*/ {
    public:
    public:
    // private UnityEngine.UIElements.BackgroundSizeType m_SizeType
    // Size: 0x4
    // Offset: 0x0
    ::UnityEngine::UIElements::BackgroundSizeType m_SizeType;
    // Field size check
    static_assert(sizeof(::UnityEngine::UIElements::BackgroundSizeType) == 0x4);
    // private UnityEngine.UIElements.Length m_X
    // Size: 0x8
    // Offset: 0x4
    ::UnityEngine::UIElements::Length m_X;
    // Field size check
    static_assert(sizeof(::UnityEngine::UIElements::Length) == 0x8);
    // private UnityEngine.UIElements.Length m_Y
    // Size: 0x8
    // Offset: 0xC
    ::UnityEngine::UIElements::Length m_Y;
    // Field size check
    static_assert(sizeof(::UnityEngine::UIElements::Length) == 0x8);
    public:
    // Creating value type constructor for type: BackgroundSize
    constexpr BackgroundSize(::UnityEngine::UIElements::BackgroundSizeType m_SizeType_ = {}, ::UnityEngine::UIElements::Length m_X_ = {}, ::UnityEngine::UIElements::Length m_Y_ = {}) noexcept : m_SizeType{m_SizeType_}, m_X{m_X_}, m_Y{m_Y_} {}
    // Creating interface conversion operator: operator ::System::ValueType
    operator ::System::ValueType() noexcept {
      return *reinterpret_cast<::System::ValueType*>(this);
    }
    // Creating interface conversion operator: operator ::System::IEquatable_1<::UnityEngine::UIElements::BackgroundSize>
    operator ::System::IEquatable_1<::UnityEngine::UIElements::BackgroundSize>() noexcept {
      return *reinterpret_cast<::System::IEquatable_1<::UnityEngine::UIElements::BackgroundSize>*>(this);
    }
    // Get instance field reference: private UnityEngine.UIElements.BackgroundSizeType m_SizeType
    [[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::BackgroundSizeType& dyn_m_SizeType();
    // Get instance field reference: private UnityEngine.UIElements.Length m_X
    [[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::Length& dyn_m_X();
    // Get instance field reference: private UnityEngine.UIElements.Length m_Y
    [[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::Length& dyn_m_Y();
    // public UnityEngine.UIElements.BackgroundSizeType get_sizeType()
    // Offset: 0x559346C
    ::UnityEngine::UIElements::BackgroundSizeType get_sizeType();
    // public System.Void set_sizeType(UnityEngine.UIElements.BackgroundSizeType value)
    // Offset: 0x5593474
    void set_sizeType(::UnityEngine::UIElements::BackgroundSizeType value);
    // public UnityEngine.UIElements.Length get_x()
    // Offset: 0x55934C8
    ::UnityEngine::UIElements::Length get_x();
    // public System.Void set_x(UnityEngine.UIElements.Length value)
    // Offset: 0x55934D0
    void set_x(::UnityEngine::UIElements::Length value);
    // public UnityEngine.UIElements.Length get_y()
    // Offset: 0x55934DC
    ::UnityEngine::UIElements::Length get_y();
    // public System.Void set_y(UnityEngine.UIElements.Length value)
    // Offset: 0x55934E4
    void set_y(::UnityEngine::UIElements::Length value);
    // public System.Void .ctor(UnityEngine.UIElements.Length sizeX, UnityEngine.UIElements.Length sizeY)
    // Offset: 0x5592EAC
    BackgroundSize(::UnityEngine::UIElements::Length sizeX, ::UnityEngine::UIElements::Length sizeY);
    // public System.Void .ctor(UnityEngine.UIElements.BackgroundSizeType sizeType)
    // Offset: 0x5592E58
    BackgroundSize(::UnityEngine::UIElements::BackgroundSizeType sizeType);
    // static UnityEngine.UIElements.BackgroundSize Initial()
    // Offset: 0x55934F0
    static ::UnityEngine::UIElements::BackgroundSize Initial();
    // public System.Boolean Equals(UnityEngine.UIElements.BackgroundSize other)
    // Offset: 0x55935D0
    bool Equals(::UnityEngine::UIElements::BackgroundSize other);
    // public override System.Boolean Equals(System.Object obj)
    // Offset: 0x5593540
    // Implemented from: System.ValueType
    // Base method: System.Boolean ValueType::Equals(System.Object obj)
    bool Equals(::Il2CppObject* obj);
    // public override System.Int32 GetHashCode()
    // Offset: 0x559362C
    // Implemented from: System.ValueType
    // Base method: System.Int32 ValueType::GetHashCode()
    int GetHashCode();
    // public override System.String ToString()
    // Offset: 0x55936D0
    // Implemented from: System.ValueType
    // Base method: System.String ValueType::ToString()
    ::StringW ToString();
  }; // UnityEngine.UIElements.BackgroundSize
  #pragma pack(pop)
  static check_size<sizeof(BackgroundSize), 12 + sizeof(::UnityEngine::UIElements::Length)> __UnityEngine_UIElements_BackgroundSizeSizeCheck;
  static_assert(sizeof(BackgroundSize) == 0x14);
  // static public System.Boolean op_Equality(UnityEngine.UIElements.BackgroundSize style1, UnityEngine.UIElements.BackgroundSize style2)
  // Offset: 0x559327C
  bool operator ==(const ::UnityEngine::UIElements::BackgroundSize& style1, const ::UnityEngine::UIElements::BackgroundSize& style2);
  // static public System.Boolean op_Inequality(UnityEngine.UIElements.BackgroundSize style1, UnityEngine.UIElements.BackgroundSize style2)
  // Offset: 0x5593688
  bool operator !=(const ::UnityEngine::UIElements::BackgroundSize& style1, const ::UnityEngine::UIElements::BackgroundSize& style2);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::UIElements::BackgroundSize::get_sizeType
// Il2CppName: get_sizeType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::BackgroundSizeType (UnityEngine::UIElements::BackgroundSize::*)()>(&UnityEngine::UIElements::BackgroundSize::get_sizeType)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BackgroundSize), "get_sizeType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BackgroundSize::set_sizeType
// Il2CppName: set_sizeType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::BackgroundSize::*)(::UnityEngine::UIElements::BackgroundSizeType)>(&UnityEngine::UIElements::BackgroundSize::set_sizeType)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "BackgroundSizeType")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BackgroundSize), "set_sizeType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BackgroundSize::get_x
// Il2CppName: get_x
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::Length (UnityEngine::UIElements::BackgroundSize::*)()>(&UnityEngine::UIElements::BackgroundSize::get_x)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BackgroundSize), "get_x", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BackgroundSize::set_x
// Il2CppName: set_x
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::BackgroundSize::*)(::UnityEngine::UIElements::Length)>(&UnityEngine::UIElements::BackgroundSize::set_x)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "Length")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BackgroundSize), "set_x", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BackgroundSize::get_y
// Il2CppName: get_y
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::Length (UnityEngine::UIElements::BackgroundSize::*)()>(&UnityEngine::UIElements::BackgroundSize::get_y)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BackgroundSize), "get_y", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BackgroundSize::set_y
// Il2CppName: set_y
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::BackgroundSize::*)(::UnityEngine::UIElements::Length)>(&UnityEngine::UIElements::BackgroundSize::set_y)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "Length")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BackgroundSize), "set_y", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BackgroundSize::BackgroundSize
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::UIElements::BackgroundSize::BackgroundSize
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::UIElements::BackgroundSize::Initial
// Il2CppName: Initial
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::BackgroundSize (*)()>(&UnityEngine::UIElements::BackgroundSize::Initial)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BackgroundSize), "Initial", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BackgroundSize::Equals
// Il2CppName: Equals
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::BackgroundSize::*)(::UnityEngine::UIElements::BackgroundSize)>(&UnityEngine::UIElements::BackgroundSize::Equals)> {
  static const MethodInfo* get() {
    static auto* other = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "BackgroundSize")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BackgroundSize), "Equals", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{other});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BackgroundSize::Equals
// Il2CppName: Equals
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::BackgroundSize::*)(::Il2CppObject*)>(&UnityEngine::UIElements::BackgroundSize::Equals)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BackgroundSize), "Equals", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BackgroundSize::GetHashCode
// Il2CppName: GetHashCode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::UIElements::BackgroundSize::*)()>(&UnityEngine::UIElements::BackgroundSize::GetHashCode)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BackgroundSize), "GetHashCode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BackgroundSize::ToString
// Il2CppName: ToString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (UnityEngine::UIElements::BackgroundSize::*)()>(&UnityEngine::UIElements::BackgroundSize::ToString)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BackgroundSize), "ToString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BackgroundSize::operator ==
// Il2CppName: op_Equality
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::UIElements::BackgroundSize::operator !=
// Il2CppName: op_Inequality
// Cannot perform method pointer template specialization from operators!
