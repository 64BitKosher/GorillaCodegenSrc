// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.UIElements.IPanel
#include "UnityEngine/UIElements/IPanel.hpp"
// Including type: UnityEngine.UIElements.IGroupBox
#include "UnityEngine/UIElements/IGroupBox.hpp"
// Including type: UnityEngine.UIElements.PanelClearSettings
#include "UnityEngine/UIElements/PanelClearSettings.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Action`1<T>
  template<typename T>
  class Action_1;
  // Forward declaring type: Action
  class Action;
}
// Forward declaring namespace: UnityEngine::UIElements
namespace UnityEngine::UIElements {
  // Forward declaring type: UIElementsBridge
  class UIElementsBridge;
  // Forward declaring type: RepaintData
  class RepaintData;
  // Forward declaring type: ICursorManager
  class ICursorManager;
  // Forward declaring type: ContextualMenuManager
  class ContextualMenuManager;
  // Forward declaring type: ElementUnderPointer
  class ElementUnderPointer;
  // Forward declaring type: HierarchyEvent
  class HierarchyEvent;
  // Forward declaring type: SavePersistentViewData
  class SavePersistentViewData;
  // Forward declaring type: GetViewDataDictionary
  class GetViewDataDictionary;
  // Forward declaring type: FocusController
  class FocusController;
  // Forward declaring type: IMGUIContainer
  class IMGUIContainer;
  // Forward declaring type: VisualElement
  class VisualElement;
  // Forward declaring type: VersionChangeType
  struct VersionChangeType;
  // Forward declaring type: EventDispatcher
  class EventDispatcher;
  // Forward declaring type: EventBase
  class EventBase;
  // Forward declaring type: DispatchMode
  struct DispatchMode;
  // Forward declaring type: IScheduler
  class IScheduler;
  // Forward declaring type: IStylePropertyAnimationSystem
  class IStylePropertyAnimationSystem;
  // Forward declaring type: ContextType
  struct ContextType;
  // Forward declaring type: IVisualTreeUpdater
  class IVisualTreeUpdater;
  // Forward declaring type: VisualTreeUpdatePhase
  struct VisualTreeUpdatePhase;
  // Forward declaring type: AtlasBase
  class AtlasBase;
  // Forward declaring type: HierarchyChangeType
  struct HierarchyChangeType;
  // Forward declaring type: IGroupBoxOption
  class IGroupBoxOption;
}
// Forward declaring namespace: UnityEngine::Yoga
namespace UnityEngine::Yoga {
  // Forward declaring type: YogaConfig
  class YogaConfig;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Material
  class Material;
  // Forward declaring type: EventInterests
  struct EventInterests;
  // Forward declaring type: ScriptableObject
  class ScriptableObject;
  // Forward declaring type: Event
  class Event;
  // Forward declaring type: Vector2
  struct Vector2;
  // Forward declaring type: Shader
  class Shader;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Completed forward declares
// Type namespace: UnityEngine.UIElements
namespace UnityEngine::UIElements {
  // Forward declaring type: BaseVisualElementPanel
  class BaseVisualElementPanel;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::UIElements::BaseVisualElementPanel);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::UIElements::BaseVisualElementPanel*, "UnityEngine.UIElements", "BaseVisualElementPanel");
// Type namespace: UnityEngine.UIElements
namespace UnityEngine::UIElements {
  // Size: 0xA8
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.UIElements.BaseVisualElementPanel
  // [TokenAttribute] Offset: FFFFFFFF
  class BaseVisualElementPanel : public ::Il2CppObject/*, public ::UnityEngine::UIElements::IPanel, public ::UnityEngine::UIElements::IGroupBox*/ {
    public:
    public:
    // private System.Action`1<UnityEngine.UIElements.BaseVisualElementPanel> panelDisposed
    // Size: 0x8
    // Offset: 0x10
    ::System::Action_1<::UnityEngine::UIElements::BaseVisualElementPanel*>* panelDisposed;
    // Field size check
    static_assert(sizeof(::System::Action_1<::UnityEngine::UIElements::BaseVisualElementPanel*>*) == 0x8);
    // private UnityEngine.UIElements.UIElementsBridge m_UIElementsBridge
    // Size: 0x8
    // Offset: 0x18
    ::UnityEngine::UIElements::UIElementsBridge* m_UIElementsBridge;
    // Field size check
    static_assert(sizeof(::UnityEngine::UIElements::UIElementsBridge*) == 0x8);
    // private System.Single m_Scale
    // Size: 0x4
    // Offset: 0x20
    float m_Scale;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // Padding between fields: m_Scale and: yogaConfig
    char __padding2[0x4] = {};
    // UnityEngine.Yoga.YogaConfig yogaConfig
    // Size: 0x8
    // Offset: 0x28
    ::UnityEngine::Yoga::YogaConfig* yogaConfig;
    // Field size check
    static_assert(sizeof(::UnityEngine::Yoga::YogaConfig*) == 0x8);
    // private System.Single m_PixelsPerPoint
    // Size: 0x4
    // Offset: 0x30
    float m_PixelsPerPoint;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Single <referenceSpritePixelsPerUnit>k__BackingField
    // Size: 0x4
    // Offset: 0x34
    float referenceSpritePixelsPerUnit;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private UnityEngine.UIElements.PanelClearSettings <clearSettings>k__BackingField
    // Size: 0x14
    // Offset: 0x38
    ::UnityEngine::UIElements::PanelClearSettings clearSettings;
    // Field size check
    static_assert(sizeof(::UnityEngine::UIElements::PanelClearSettings) == 0x14);
    // private System.Boolean <duringLayoutPhase>k__BackingField
    // Size: 0x1
    // Offset: 0x4C
    bool duringLayoutPhase;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: duringLayoutPhase and: repaintData
    char __padding7[0x3] = {};
    // private UnityEngine.UIElements.RepaintData <repaintData>k__BackingField
    // Size: 0x8
    // Offset: 0x50
    ::UnityEngine::UIElements::RepaintData* repaintData;
    // Field size check
    static_assert(sizeof(::UnityEngine::UIElements::RepaintData*) == 0x8);
    // private UnityEngine.UIElements.ICursorManager <cursorManager>k__BackingField
    // Size: 0x8
    // Offset: 0x58
    ::UnityEngine::UIElements::ICursorManager* cursorManager;
    // Field size check
    static_assert(sizeof(::UnityEngine::UIElements::ICursorManager*) == 0x8);
    // private UnityEngine.UIElements.ContextualMenuManager <contextualMenuManager>k__BackingField
    // Size: 0x8
    // Offset: 0x60
    ::UnityEngine::UIElements::ContextualMenuManager* contextualMenuManager;
    // Field size check
    static_assert(sizeof(::UnityEngine::UIElements::ContextualMenuManager*) == 0x8);
    // private System.Boolean <disposed>k__BackingField
    // Size: 0x1
    // Offset: 0x68
    bool disposed;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: disposed and: m_TopElementUnderPointers
    char __padding11[0x7] = {};
    // UnityEngine.UIElements.ElementUnderPointer m_TopElementUnderPointers
    // Size: 0x8
    // Offset: 0x70
    ::UnityEngine::UIElements::ElementUnderPointer* m_TopElementUnderPointers;
    // Field size check
    static_assert(sizeof(::UnityEngine::UIElements::ElementUnderPointer*) == 0x8);
    // private System.Action standardShaderChanged
    // Size: 0x8
    // Offset: 0x78
    ::System::Action* standardShaderChanged;
    // Field size check
    static_assert(sizeof(::System::Action*) == 0x8);
    // private System.Action standardWorldSpaceShaderChanged
    // Size: 0x8
    // Offset: 0x80
    ::System::Action* standardWorldSpaceShaderChanged;
    // Field size check
    static_assert(sizeof(::System::Action*) == 0x8);
    // private System.Action atlasChanged
    // Size: 0x8
    // Offset: 0x88
    ::System::Action* atlasChanged;
    // Field size check
    static_assert(sizeof(::System::Action*) == 0x8);
    // private System.Action`1<UnityEngine.Material> updateMaterial
    // Size: 0x8
    // Offset: 0x90
    ::System::Action_1<::UnityEngine::Material*>* updateMaterial;
    // Field size check
    static_assert(sizeof(::System::Action_1<::UnityEngine::Material*>*) == 0x8);
    // private UnityEngine.UIElements.HierarchyEvent hierarchyChanged
    // Size: 0x8
    // Offset: 0x98
    ::UnityEngine::UIElements::HierarchyEvent* hierarchyChanged;
    // Field size check
    static_assert(sizeof(::UnityEngine::UIElements::HierarchyEvent*) == 0x8);
    // private System.Action`1<UnityEngine.UIElements.IPanel> beforeUpdate
    // Size: 0x8
    // Offset: 0xA0
    ::System::Action_1<::UnityEngine::UIElements::IPanel*>* beforeUpdate;
    // Field size check
    static_assert(sizeof(::System::Action_1<::UnityEngine::UIElements::IPanel*>*) == 0x8);
    public:
    // Creating interface conversion operator: operator ::UnityEngine::UIElements::IPanel
    operator ::UnityEngine::UIElements::IPanel() noexcept {
      return *reinterpret_cast<::UnityEngine::UIElements::IPanel*>(this);
    }
    // Creating interface conversion operator: operator ::UnityEngine::UIElements::IGroupBox
    operator ::UnityEngine::UIElements::IGroupBox() noexcept {
      return *reinterpret_cast<::UnityEngine::UIElements::IGroupBox*>(this);
    }
    // Get instance field reference: private System.Action`1<UnityEngine.UIElements.BaseVisualElementPanel> panelDisposed
    [[deprecated("Use field access instead!")]] ::System::Action_1<::UnityEngine::UIElements::BaseVisualElementPanel*>*& dyn_panelDisposed();
    // Get instance field reference: private UnityEngine.UIElements.UIElementsBridge m_UIElementsBridge
    [[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::UIElementsBridge*& dyn_m_UIElementsBridge();
    // Get instance field reference: private System.Single m_Scale
    [[deprecated("Use field access instead!")]] float& dyn_m_Scale();
    // Get instance field reference: UnityEngine.Yoga.YogaConfig yogaConfig
    [[deprecated("Use field access instead!")]] ::UnityEngine::Yoga::YogaConfig*& dyn_yogaConfig();
    // Get instance field reference: private System.Single m_PixelsPerPoint
    [[deprecated("Use field access instead!")]] float& dyn_m_PixelsPerPoint();
    // Get instance field reference: private System.Single <referenceSpritePixelsPerUnit>k__BackingField
    [[deprecated("Use field access instead!")]] float& dyn_$referenceSpritePixelsPerUnit$k__BackingField();
    // Get instance field reference: private UnityEngine.UIElements.PanelClearSettings <clearSettings>k__BackingField
    [[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::PanelClearSettings& dyn_$clearSettings$k__BackingField();
    // Get instance field reference: private System.Boolean <duringLayoutPhase>k__BackingField
    [[deprecated("Use field access instead!")]] bool& dyn_$duringLayoutPhase$k__BackingField();
    // Get instance field reference: private UnityEngine.UIElements.RepaintData <repaintData>k__BackingField
    [[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::RepaintData*& dyn_$repaintData$k__BackingField();
    // Get instance field reference: private UnityEngine.UIElements.ICursorManager <cursorManager>k__BackingField
    [[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::ICursorManager*& dyn_$cursorManager$k__BackingField();
    // Get instance field reference: private UnityEngine.UIElements.ContextualMenuManager <contextualMenuManager>k__BackingField
    [[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::ContextualMenuManager*& dyn_$contextualMenuManager$k__BackingField();
    // Get instance field reference: private System.Boolean <disposed>k__BackingField
    [[deprecated("Use field access instead!")]] bool& dyn_$disposed$k__BackingField();
    // Get instance field reference: UnityEngine.UIElements.ElementUnderPointer m_TopElementUnderPointers
    [[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::ElementUnderPointer*& dyn_m_TopElementUnderPointers();
    // Get instance field reference: private System.Action standardShaderChanged
    [[deprecated("Use field access instead!")]] ::System::Action*& dyn_standardShaderChanged();
    // Get instance field reference: private System.Action standardWorldSpaceShaderChanged
    [[deprecated("Use field access instead!")]] ::System::Action*& dyn_standardWorldSpaceShaderChanged();
    // Get instance field reference: private System.Action atlasChanged
    [[deprecated("Use field access instead!")]] ::System::Action*& dyn_atlasChanged();
    // Get instance field reference: private System.Action`1<UnityEngine.Material> updateMaterial
    [[deprecated("Use field access instead!")]] ::System::Action_1<::UnityEngine::Material*>*& dyn_updateMaterial();
    // Get instance field reference: private UnityEngine.UIElements.HierarchyEvent hierarchyChanged
    [[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::HierarchyEvent*& dyn_hierarchyChanged();
    // Get instance field reference: private System.Action`1<UnityEngine.UIElements.IPanel> beforeUpdate
    [[deprecated("Use field access instead!")]] ::System::Action_1<::UnityEngine::UIElements::IPanel*>*& dyn_beforeUpdate();
    // public UnityEngine.EventInterests get_IMGUIEventInterests()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::UnityEngine::EventInterests get_IMGUIEventInterests();
    // public System.Void set_IMGUIEventInterests(UnityEngine.EventInterests value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void set_IMGUIEventInterests(::UnityEngine::EventInterests value);
    // public UnityEngine.ScriptableObject get_ownerObject()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::UnityEngine::ScriptableObject* get_ownerObject();
    // protected System.Void set_ownerObject(UnityEngine.ScriptableObject value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void set_ownerObject(::UnityEngine::ScriptableObject* value);
    // public UnityEngine.UIElements.SavePersistentViewData get_saveViewData()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::UnityEngine::UIElements::SavePersistentViewData* get_saveViewData();
    // public UnityEngine.UIElements.GetViewDataDictionary get_getViewDataDictionary()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::UnityEngine::UIElements::GetViewDataDictionary* get_getViewDataDictionary();
    // public System.Int32 get_IMGUIContainersCount()
    // Offset: 0xFFFFFFFFFFFFFFFF
    int get_IMGUIContainersCount();
    // public System.Void set_IMGUIContainersCount(System.Int32 value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void set_IMGUIContainersCount(int value);
    // public UnityEngine.UIElements.FocusController get_focusController()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::UnityEngine::UIElements::FocusController* get_focusController();
    // public System.Void set_focusController(UnityEngine.UIElements.FocusController value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void set_focusController(::UnityEngine::UIElements::FocusController* value);
    // public UnityEngine.UIElements.IMGUIContainer get_rootIMGUIContainer()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::UnityEngine::UIElements::IMGUIContainer* get_rootIMGUIContainer();
    // System.Void add_panelDisposed(System.Action`1<UnityEngine.UIElements.BaseVisualElementPanel> value)
    // Offset: 0x565FBAC
    void add_panelDisposed(::System::Action_1<::UnityEngine::UIElements::BaseVisualElementPanel*>* value);
    // System.Void remove_panelDisposed(System.Action`1<UnityEngine.UIElements.BaseVisualElementPanel> value)
    // Offset: 0x565FDE4
    void remove_panelDisposed(::System::Action_1<::UnityEngine::UIElements::BaseVisualElementPanel*>* value);
    // UnityEngine.UIElements.UIElementsBridge get_uiElementsBridge()
    // Offset: 0x56657DC
    ::UnityEngine::UIElements::UIElementsBridge* get_uiElementsBridge();
    // protected System.Void .ctor()
    // Offset: 0x5665838
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static BaseVisualElementPanel* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::BaseVisualElementPanel::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<BaseVisualElementPanel*, creationType>()));
    }
    // public System.Void Dispose()
    // Offset: 0x5665988
    void Dispose();
    // protected System.Void Dispose(System.Boolean disposing)
    // Offset: 0x56659F8
    void Dispose(bool disposing);
    // public System.Void Repaint(UnityEngine.Event e)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void Repaint(::UnityEngine::Event* e);
    // public System.Void ValidateFocus()
    // Offset: 0xFFFFFFFFFFFFFFFF
    void ValidateFocus();
    // public System.Void ValidateLayout()
    // Offset: 0xFFFFFFFFFFFFFFFF
    void ValidateLayout();
    // public System.Void UpdateAnimations()
    // Offset: 0xFFFFFFFFFFFFFFFF
    void UpdateAnimations();
    // public System.Void UpdateBindings()
    // Offset: 0xFFFFFFFFFFFFFFFF
    void UpdateBindings();
    // public System.Void ApplyStyles()
    // Offset: 0xFFFFFFFFFFFFFFFF
    void ApplyStyles();
    // System.Single get_scale()
    // Offset: 0x5665B48
    float get_scale();
    // System.Void set_scale(System.Single value)
    // Offset: 0x5665B50
    void set_scale(float value);
    // System.Void set_pixelsPerPoint(System.Single value)
    // Offset: 0x5665C6C
    void set_pixelsPerPoint(float value);
    // public System.Single get_scaledPixelsPerPoint()
    // Offset: 0x5665C5C
    float get_scaledPixelsPerPoint();
    // public System.Single get_referenceSpritePixelsPerUnit()
    // Offset: 0x5665D78
    float get_referenceSpritePixelsPerUnit();
    // public System.Void set_referenceSpritePixelsPerUnit(System.Single value)
    // Offset: 0x5665D80
    void set_referenceSpritePixelsPerUnit(float value);
    // UnityEngine.UIElements.PanelClearSettings get_clearSettings()
    // Offset: 0x5665D88
    ::UnityEngine::UIElements::PanelClearSettings get_clearSettings();
    // System.Void set_clearSettings(UnityEngine.UIElements.PanelClearSettings value)
    // Offset: 0x5665D9C
    void set_clearSettings(::UnityEngine::UIElements::PanelClearSettings value);
    // System.Boolean get_duringLayoutPhase()
    // Offset: 0x5665DB0
    bool get_duringLayoutPhase();
    // System.Void set_duringLayoutPhase(System.Boolean value)
    // Offset: 0x5665DB8
    void set_duringLayoutPhase(bool value);
    // System.UInt32 get_version()
    // Offset: 0xFFFFFFFFFFFFFFFF
    uint get_version();
    // System.UInt32 get_hierarchyVersion()
    // Offset: 0xFFFFFFFFFFFFFFFF
    uint get_hierarchyVersion();
    // System.Void OnVersionChanged(UnityEngine.UIElements.VisualElement ele, UnityEngine.UIElements.VersionChangeType changeTypeFlag)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void OnVersionChanged(::UnityEngine::UIElements::VisualElement* ele, ::UnityEngine::UIElements::VersionChangeType changeTypeFlag);
    // UnityEngine.UIElements.RepaintData get_repaintData()
    // Offset: 0x5665DC4
    ::UnityEngine::UIElements::RepaintData* get_repaintData();
    // System.Void set_repaintData(UnityEngine.UIElements.RepaintData value)
    // Offset: 0x5665DCC
    void set_repaintData(::UnityEngine::UIElements::RepaintData* value);
    // UnityEngine.UIElements.ICursorManager get_cursorManager()
    // Offset: 0x5665DD4
    ::UnityEngine::UIElements::ICursorManager* get_cursorManager();
    // System.Void set_cursorManager(UnityEngine.UIElements.ICursorManager value)
    // Offset: 0x5665DDC
    void set_cursorManager(::UnityEngine::UIElements::ICursorManager* value);
    // public UnityEngine.UIElements.ContextualMenuManager get_contextualMenuManager()
    // Offset: 0x5665DE4
    ::UnityEngine::UIElements::ContextualMenuManager* get_contextualMenuManager();
    // System.Void set_contextualMenuManager(UnityEngine.UIElements.ContextualMenuManager value)
    // Offset: 0x5665DEC
    void set_contextualMenuManager(::UnityEngine::UIElements::ContextualMenuManager* value);
    // public UnityEngine.UIElements.VisualElement get_visualTree()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::UnityEngine::UIElements::VisualElement* get_visualTree();
    // public UnityEngine.UIElements.EventDispatcher get_dispatcher()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::UnityEngine::UIElements::EventDispatcher* get_dispatcher();
    // public System.Void set_dispatcher(UnityEngine.UIElements.EventDispatcher value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void set_dispatcher(::UnityEngine::UIElements::EventDispatcher* value);
    // System.Void SendEvent(UnityEngine.UIElements.EventBase e, UnityEngine.UIElements.DispatchMode dispatchMode)
    // Offset: 0x5665DF4
    void SendEvent(::UnityEngine::UIElements::EventBase* e, ::UnityEngine::UIElements::DispatchMode dispatchMode);
    // UnityEngine.UIElements.IScheduler get_scheduler()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::UnityEngine::UIElements::IScheduler* get_scheduler();
    // UnityEngine.UIElements.IStylePropertyAnimationSystem get_styleAnimationSystem()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::UnityEngine::UIElements::IStylePropertyAnimationSystem* get_styleAnimationSystem();
    // System.Void set_styleAnimationSystem(UnityEngine.UIElements.IStylePropertyAnimationSystem value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void set_styleAnimationSystem(::UnityEngine::UIElements::IStylePropertyAnimationSystem* value);
    // public UnityEngine.UIElements.ContextType get_contextType()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::UnityEngine::UIElements::ContextType get_contextType();
    // protected System.Void set_contextType(UnityEngine.UIElements.ContextType value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void set_contextType(::UnityEngine::UIElements::ContextType value);
    // public UnityEngine.UIElements.VisualElement Pick(UnityEngine.Vector2 point)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::UnityEngine::UIElements::VisualElement* Pick(::UnityEngine::Vector2 point);
    // public UnityEngine.UIElements.VisualElement PickAll(UnityEngine.Vector2 point, System.Collections.Generic.List`1<UnityEngine.UIElements.VisualElement> picked)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::UnityEngine::UIElements::VisualElement* PickAll(::UnityEngine::Vector2 point, ::System::Collections::Generic::List_1<::UnityEngine::UIElements::VisualElement*>* picked);
    // System.Boolean get_disposed()
    // Offset: 0x5665EB8
    bool get_disposed();
    // private System.Void set_disposed(System.Boolean value)
    // Offset: 0x5665EC0
    void set_disposed(bool value);
    // UnityEngine.UIElements.IVisualTreeUpdater GetUpdater(UnityEngine.UIElements.VisualTreeUpdatePhase phase)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::UnityEngine::UIElements::IVisualTreeUpdater* GetUpdater(::UnityEngine::UIElements::VisualTreeUpdatePhase phase);
    // UnityEngine.UIElements.VisualElement GetTopElementUnderPointer(System.Int32 pointerId)
    // Offset: 0x5665ECC
    ::UnityEngine::UIElements::VisualElement* GetTopElementUnderPointer(int pointerId);
    // UnityEngine.UIElements.VisualElement RecomputeTopElementUnderPointer(System.Int32 pointerId, UnityEngine.Vector2 pointerPos, UnityEngine.UIElements.EventBase triggerEvent)
    // Offset: 0x5665EE8
    ::UnityEngine::UIElements::VisualElement* RecomputeTopElementUnderPointer(int pointerId, ::UnityEngine::Vector2 pointerPos, ::UnityEngine::UIElements::EventBase* triggerEvent);
    // System.Void ClearCachedElementUnderPointer(System.Int32 pointerId, UnityEngine.UIElements.EventBase triggerEvent)
    // Offset: 0x566601C
    void ClearCachedElementUnderPointer(int pointerId, ::UnityEngine::UIElements::EventBase* triggerEvent);
    // System.Void CommitElementUnderPointers()
    // Offset: 0x5666044
    void CommitElementUnderPointers();
    // UnityEngine.Shader get_standardShader()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::UnityEngine::Shader* get_standardShader();
    // UnityEngine.Shader get_standardWorldSpaceShader()
    // Offset: 0x56660A0
    ::UnityEngine::Shader* get_standardWorldSpaceShader();
    // System.Void add_standardShaderChanged(System.Action value)
    // Offset: 0x56660A8
    void add_standardShaderChanged(::System::Action* value);
    // System.Void remove_standardShaderChanged(System.Action value)
    // Offset: 0x5666144
    void remove_standardShaderChanged(::System::Action* value);
    // System.Void add_standardWorldSpaceShaderChanged(System.Action value)
    // Offset: 0x56661E0
    void add_standardWorldSpaceShaderChanged(::System::Action* value);
    // System.Void remove_standardWorldSpaceShaderChanged(System.Action value)
    // Offset: 0x566627C
    void remove_standardWorldSpaceShaderChanged(::System::Action* value);
    // System.Void add_atlasChanged(System.Action value)
    // Offset: 0x5666318
    void add_atlasChanged(::System::Action* value);
    // System.Void remove_atlasChanged(System.Action value)
    // Offset: 0x56663B4
    void remove_atlasChanged(::System::Action* value);
    // protected System.Void InvokeAtlasChanged()
    // Offset: 0x5666450
    void InvokeAtlasChanged();
    // public UnityEngine.UIElements.AtlasBase get_atlas()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::UnityEngine::UIElements::AtlasBase* get_atlas();
    // public System.Void set_atlas(UnityEngine.UIElements.AtlasBase value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void set_atlas(::UnityEngine::UIElements::AtlasBase* value);
    // System.Void InvokeUpdateMaterial(UnityEngine.Material mat)
    // Offset: 0x566646C
    void InvokeUpdateMaterial(::UnityEngine::Material* mat);
    // System.Void add_hierarchyChanged(UnityEngine.UIElements.HierarchyEvent value)
    // Offset: 0x5666488
    void add_hierarchyChanged(::UnityEngine::UIElements::HierarchyEvent* value);
    // System.Void remove_hierarchyChanged(UnityEngine.UIElements.HierarchyEvent value)
    // Offset: 0x5666524
    void remove_hierarchyChanged(::UnityEngine::UIElements::HierarchyEvent* value);
    // System.Void InvokeHierarchyChanged(UnityEngine.UIElements.VisualElement ve, UnityEngine.UIElements.HierarchyChangeType changeType)
    // Offset: 0x56665C0
    void InvokeHierarchyChanged(::UnityEngine::UIElements::VisualElement* ve, ::UnityEngine::UIElements::HierarchyChangeType changeType);
    // System.Void InvokeBeforeUpdate()
    // Offset: 0x56665DC
    void InvokeBeforeUpdate();
    // System.Void UpdateElementUnderPointers()
    // Offset: 0x56665FC
    void UpdateElementUnderPointers();
    // private System.Void UnityEngine.UIElements.IGroupBox.OnOptionAdded(UnityEngine.UIElements.IGroupBoxOption option)
    // Offset: 0x56667FC
    void UnityEngine_UIElements_IGroupBox_OnOptionAdded(::UnityEngine::UIElements::IGroupBoxOption* option);
    // private System.Void UnityEngine.UIElements.IGroupBox.OnOptionRemoved(UnityEngine.UIElements.IGroupBoxOption option)
    // Offset: 0x5666800
    void UnityEngine_UIElements_IGroupBox_OnOptionRemoved(::UnityEngine::UIElements::IGroupBoxOption* option);
    // public System.Void Update()
    // Offset: 0x565DFD0
    void Update();
  }; // UnityEngine.UIElements.BaseVisualElementPanel
  #pragma pack(pop)
  static check_size<sizeof(BaseVisualElementPanel), 160 + sizeof(::System::Action_1<::UnityEngine::UIElements::IPanel*>*)> __UnityEngine_UIElements_BaseVisualElementPanelSizeCheck;
  static_assert(sizeof(BaseVisualElementPanel) == 0xA8);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseVisualElementPanel::get_IMGUIEventInterests
// Il2CppName: get_IMGUIEventInterests
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::EventInterests (UnityEngine::UIElements::BaseVisualElementPanel::*)()>(&UnityEngine::UIElements::BaseVisualElementPanel::get_IMGUIEventInterests)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseVisualElementPanel*), "get_IMGUIEventInterests", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseVisualElementPanel::set_IMGUIEventInterests
// Il2CppName: set_IMGUIEventInterests
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::BaseVisualElementPanel::*)(::UnityEngine::EventInterests)>(&UnityEngine::UIElements::BaseVisualElementPanel::set_IMGUIEventInterests)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "EventInterests")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseVisualElementPanel*), "set_IMGUIEventInterests", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseVisualElementPanel::get_ownerObject
// Il2CppName: get_ownerObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::ScriptableObject* (UnityEngine::UIElements::BaseVisualElementPanel::*)()>(&UnityEngine::UIElements::BaseVisualElementPanel::get_ownerObject)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseVisualElementPanel*), "get_ownerObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseVisualElementPanel::set_ownerObject
// Il2CppName: set_ownerObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::BaseVisualElementPanel::*)(::UnityEngine::ScriptableObject*)>(&UnityEngine::UIElements::BaseVisualElementPanel::set_ownerObject)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "ScriptableObject")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseVisualElementPanel*), "set_ownerObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseVisualElementPanel::get_saveViewData
// Il2CppName: get_saveViewData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::SavePersistentViewData* (UnityEngine::UIElements::BaseVisualElementPanel::*)()>(&UnityEngine::UIElements::BaseVisualElementPanel::get_saveViewData)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseVisualElementPanel*), "get_saveViewData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseVisualElementPanel::get_getViewDataDictionary
// Il2CppName: get_getViewDataDictionary
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::GetViewDataDictionary* (UnityEngine::UIElements::BaseVisualElementPanel::*)()>(&UnityEngine::UIElements::BaseVisualElementPanel::get_getViewDataDictionary)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseVisualElementPanel*), "get_getViewDataDictionary", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseVisualElementPanel::get_IMGUIContainersCount
// Il2CppName: get_IMGUIContainersCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::UIElements::BaseVisualElementPanel::*)()>(&UnityEngine::UIElements::BaseVisualElementPanel::get_IMGUIContainersCount)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseVisualElementPanel*), "get_IMGUIContainersCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseVisualElementPanel::set_IMGUIContainersCount
// Il2CppName: set_IMGUIContainersCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::BaseVisualElementPanel::*)(int)>(&UnityEngine::UIElements::BaseVisualElementPanel::set_IMGUIContainersCount)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseVisualElementPanel*), "set_IMGUIContainersCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseVisualElementPanel::get_focusController
// Il2CppName: get_focusController
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::FocusController* (UnityEngine::UIElements::BaseVisualElementPanel::*)()>(&UnityEngine::UIElements::BaseVisualElementPanel::get_focusController)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseVisualElementPanel*), "get_focusController", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseVisualElementPanel::set_focusController
// Il2CppName: set_focusController
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::BaseVisualElementPanel::*)(::UnityEngine::UIElements::FocusController*)>(&UnityEngine::UIElements::BaseVisualElementPanel::set_focusController)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "FocusController")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseVisualElementPanel*), "set_focusController", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseVisualElementPanel::get_rootIMGUIContainer
// Il2CppName: get_rootIMGUIContainer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::IMGUIContainer* (UnityEngine::UIElements::BaseVisualElementPanel::*)()>(&UnityEngine::UIElements::BaseVisualElementPanel::get_rootIMGUIContainer)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseVisualElementPanel*), "get_rootIMGUIContainer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseVisualElementPanel::add_panelDisposed
// Il2CppName: add_panelDisposed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::BaseVisualElementPanel::*)(::System::Action_1<::UnityEngine::UIElements::BaseVisualElementPanel*>*)>(&UnityEngine::UIElements::BaseVisualElementPanel::add_panelDisposed)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "BaseVisualElementPanel")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseVisualElementPanel*), "add_panelDisposed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseVisualElementPanel::remove_panelDisposed
// Il2CppName: remove_panelDisposed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::BaseVisualElementPanel::*)(::System::Action_1<::UnityEngine::UIElements::BaseVisualElementPanel*>*)>(&UnityEngine::UIElements::BaseVisualElementPanel::remove_panelDisposed)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "BaseVisualElementPanel")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseVisualElementPanel*), "remove_panelDisposed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseVisualElementPanel::get_uiElementsBridge
// Il2CppName: get_uiElementsBridge
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::UIElementsBridge* (UnityEngine::UIElements::BaseVisualElementPanel::*)()>(&UnityEngine::UIElements::BaseVisualElementPanel::get_uiElementsBridge)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseVisualElementPanel*), "get_uiElementsBridge", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseVisualElementPanel::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseVisualElementPanel::Dispose
// Il2CppName: Dispose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::BaseVisualElementPanel::*)()>(&UnityEngine::UIElements::BaseVisualElementPanel::Dispose)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseVisualElementPanel*), "Dispose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseVisualElementPanel::Dispose
// Il2CppName: Dispose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::BaseVisualElementPanel::*)(bool)>(&UnityEngine::UIElements::BaseVisualElementPanel::Dispose)> {
  static const MethodInfo* get() {
    static auto* disposing = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseVisualElementPanel*), "Dispose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{disposing});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseVisualElementPanel::Repaint
// Il2CppName: Repaint
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::BaseVisualElementPanel::*)(::UnityEngine::Event*)>(&UnityEngine::UIElements::BaseVisualElementPanel::Repaint)> {
  static const MethodInfo* get() {
    static auto* e = &::il2cpp_utils::GetClassFromName("UnityEngine", "Event")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseVisualElementPanel*), "Repaint", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{e});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseVisualElementPanel::ValidateFocus
// Il2CppName: ValidateFocus
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::BaseVisualElementPanel::*)()>(&UnityEngine::UIElements::BaseVisualElementPanel::ValidateFocus)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseVisualElementPanel*), "ValidateFocus", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseVisualElementPanel::ValidateLayout
// Il2CppName: ValidateLayout
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::BaseVisualElementPanel::*)()>(&UnityEngine::UIElements::BaseVisualElementPanel::ValidateLayout)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseVisualElementPanel*), "ValidateLayout", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseVisualElementPanel::UpdateAnimations
// Il2CppName: UpdateAnimations
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::BaseVisualElementPanel::*)()>(&UnityEngine::UIElements::BaseVisualElementPanel::UpdateAnimations)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseVisualElementPanel*), "UpdateAnimations", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseVisualElementPanel::UpdateBindings
// Il2CppName: UpdateBindings
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::BaseVisualElementPanel::*)()>(&UnityEngine::UIElements::BaseVisualElementPanel::UpdateBindings)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseVisualElementPanel*), "UpdateBindings", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseVisualElementPanel::ApplyStyles
// Il2CppName: ApplyStyles
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::BaseVisualElementPanel::*)()>(&UnityEngine::UIElements::BaseVisualElementPanel::ApplyStyles)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseVisualElementPanel*), "ApplyStyles", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseVisualElementPanel::get_scale
// Il2CppName: get_scale
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::UIElements::BaseVisualElementPanel::*)()>(&UnityEngine::UIElements::BaseVisualElementPanel::get_scale)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseVisualElementPanel*), "get_scale", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseVisualElementPanel::set_scale
// Il2CppName: set_scale
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::BaseVisualElementPanel::*)(float)>(&UnityEngine::UIElements::BaseVisualElementPanel::set_scale)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseVisualElementPanel*), "set_scale", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseVisualElementPanel::set_pixelsPerPoint
// Il2CppName: set_pixelsPerPoint
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::BaseVisualElementPanel::*)(float)>(&UnityEngine::UIElements::BaseVisualElementPanel::set_pixelsPerPoint)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseVisualElementPanel*), "set_pixelsPerPoint", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseVisualElementPanel::get_scaledPixelsPerPoint
// Il2CppName: get_scaledPixelsPerPoint
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::UIElements::BaseVisualElementPanel::*)()>(&UnityEngine::UIElements::BaseVisualElementPanel::get_scaledPixelsPerPoint)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseVisualElementPanel*), "get_scaledPixelsPerPoint", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseVisualElementPanel::get_referenceSpritePixelsPerUnit
// Il2CppName: get_referenceSpritePixelsPerUnit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::UIElements::BaseVisualElementPanel::*)()>(&UnityEngine::UIElements::BaseVisualElementPanel::get_referenceSpritePixelsPerUnit)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseVisualElementPanel*), "get_referenceSpritePixelsPerUnit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseVisualElementPanel::set_referenceSpritePixelsPerUnit
// Il2CppName: set_referenceSpritePixelsPerUnit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::BaseVisualElementPanel::*)(float)>(&UnityEngine::UIElements::BaseVisualElementPanel::set_referenceSpritePixelsPerUnit)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseVisualElementPanel*), "set_referenceSpritePixelsPerUnit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseVisualElementPanel::get_clearSettings
// Il2CppName: get_clearSettings
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::PanelClearSettings (UnityEngine::UIElements::BaseVisualElementPanel::*)()>(&UnityEngine::UIElements::BaseVisualElementPanel::get_clearSettings)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseVisualElementPanel*), "get_clearSettings", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseVisualElementPanel::set_clearSettings
// Il2CppName: set_clearSettings
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::BaseVisualElementPanel::*)(::UnityEngine::UIElements::PanelClearSettings)>(&UnityEngine::UIElements::BaseVisualElementPanel::set_clearSettings)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "PanelClearSettings")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseVisualElementPanel*), "set_clearSettings", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseVisualElementPanel::get_duringLayoutPhase
// Il2CppName: get_duringLayoutPhase
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::BaseVisualElementPanel::*)()>(&UnityEngine::UIElements::BaseVisualElementPanel::get_duringLayoutPhase)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseVisualElementPanel*), "get_duringLayoutPhase", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseVisualElementPanel::set_duringLayoutPhase
// Il2CppName: set_duringLayoutPhase
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::BaseVisualElementPanel::*)(bool)>(&UnityEngine::UIElements::BaseVisualElementPanel::set_duringLayoutPhase)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseVisualElementPanel*), "set_duringLayoutPhase", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseVisualElementPanel::get_version
// Il2CppName: get_version
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (UnityEngine::UIElements::BaseVisualElementPanel::*)()>(&UnityEngine::UIElements::BaseVisualElementPanel::get_version)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseVisualElementPanel*), "get_version", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseVisualElementPanel::get_hierarchyVersion
// Il2CppName: get_hierarchyVersion
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (UnityEngine::UIElements::BaseVisualElementPanel::*)()>(&UnityEngine::UIElements::BaseVisualElementPanel::get_hierarchyVersion)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseVisualElementPanel*), "get_hierarchyVersion", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseVisualElementPanel::OnVersionChanged
// Il2CppName: OnVersionChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::BaseVisualElementPanel::*)(::UnityEngine::UIElements::VisualElement*, ::UnityEngine::UIElements::VersionChangeType)>(&UnityEngine::UIElements::BaseVisualElementPanel::OnVersionChanged)> {
  static const MethodInfo* get() {
    static auto* ele = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "VisualElement")->byval_arg;
    static auto* changeTypeFlag = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "VersionChangeType")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseVisualElementPanel*), "OnVersionChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ele, changeTypeFlag});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseVisualElementPanel::get_repaintData
// Il2CppName: get_repaintData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::RepaintData* (UnityEngine::UIElements::BaseVisualElementPanel::*)()>(&UnityEngine::UIElements::BaseVisualElementPanel::get_repaintData)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseVisualElementPanel*), "get_repaintData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseVisualElementPanel::set_repaintData
// Il2CppName: set_repaintData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::BaseVisualElementPanel::*)(::UnityEngine::UIElements::RepaintData*)>(&UnityEngine::UIElements::BaseVisualElementPanel::set_repaintData)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "RepaintData")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseVisualElementPanel*), "set_repaintData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseVisualElementPanel::get_cursorManager
// Il2CppName: get_cursorManager
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::ICursorManager* (UnityEngine::UIElements::BaseVisualElementPanel::*)()>(&UnityEngine::UIElements::BaseVisualElementPanel::get_cursorManager)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseVisualElementPanel*), "get_cursorManager", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseVisualElementPanel::set_cursorManager
// Il2CppName: set_cursorManager
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::BaseVisualElementPanel::*)(::UnityEngine::UIElements::ICursorManager*)>(&UnityEngine::UIElements::BaseVisualElementPanel::set_cursorManager)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "ICursorManager")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseVisualElementPanel*), "set_cursorManager", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseVisualElementPanel::get_contextualMenuManager
// Il2CppName: get_contextualMenuManager
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::ContextualMenuManager* (UnityEngine::UIElements::BaseVisualElementPanel::*)()>(&UnityEngine::UIElements::BaseVisualElementPanel::get_contextualMenuManager)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseVisualElementPanel*), "get_contextualMenuManager", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseVisualElementPanel::set_contextualMenuManager
// Il2CppName: set_contextualMenuManager
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::BaseVisualElementPanel::*)(::UnityEngine::UIElements::ContextualMenuManager*)>(&UnityEngine::UIElements::BaseVisualElementPanel::set_contextualMenuManager)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "ContextualMenuManager")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseVisualElementPanel*), "set_contextualMenuManager", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseVisualElementPanel::get_visualTree
// Il2CppName: get_visualTree
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::VisualElement* (UnityEngine::UIElements::BaseVisualElementPanel::*)()>(&UnityEngine::UIElements::BaseVisualElementPanel::get_visualTree)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseVisualElementPanel*), "get_visualTree", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseVisualElementPanel::get_dispatcher
// Il2CppName: get_dispatcher
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::EventDispatcher* (UnityEngine::UIElements::BaseVisualElementPanel::*)()>(&UnityEngine::UIElements::BaseVisualElementPanel::get_dispatcher)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseVisualElementPanel*), "get_dispatcher", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseVisualElementPanel::set_dispatcher
// Il2CppName: set_dispatcher
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::BaseVisualElementPanel::*)(::UnityEngine::UIElements::EventDispatcher*)>(&UnityEngine::UIElements::BaseVisualElementPanel::set_dispatcher)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "EventDispatcher")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseVisualElementPanel*), "set_dispatcher", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseVisualElementPanel::SendEvent
// Il2CppName: SendEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::BaseVisualElementPanel::*)(::UnityEngine::UIElements::EventBase*, ::UnityEngine::UIElements::DispatchMode)>(&UnityEngine::UIElements::BaseVisualElementPanel::SendEvent)> {
  static const MethodInfo* get() {
    static auto* e = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "EventBase")->byval_arg;
    static auto* dispatchMode = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "DispatchMode")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseVisualElementPanel*), "SendEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{e, dispatchMode});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseVisualElementPanel::get_scheduler
// Il2CppName: get_scheduler
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::IScheduler* (UnityEngine::UIElements::BaseVisualElementPanel::*)()>(&UnityEngine::UIElements::BaseVisualElementPanel::get_scheduler)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseVisualElementPanel*), "get_scheduler", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseVisualElementPanel::get_styleAnimationSystem
// Il2CppName: get_styleAnimationSystem
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::IStylePropertyAnimationSystem* (UnityEngine::UIElements::BaseVisualElementPanel::*)()>(&UnityEngine::UIElements::BaseVisualElementPanel::get_styleAnimationSystem)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseVisualElementPanel*), "get_styleAnimationSystem", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseVisualElementPanel::set_styleAnimationSystem
// Il2CppName: set_styleAnimationSystem
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::BaseVisualElementPanel::*)(::UnityEngine::UIElements::IStylePropertyAnimationSystem*)>(&UnityEngine::UIElements::BaseVisualElementPanel::set_styleAnimationSystem)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "IStylePropertyAnimationSystem")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseVisualElementPanel*), "set_styleAnimationSystem", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseVisualElementPanel::get_contextType
// Il2CppName: get_contextType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::ContextType (UnityEngine::UIElements::BaseVisualElementPanel::*)()>(&UnityEngine::UIElements::BaseVisualElementPanel::get_contextType)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseVisualElementPanel*), "get_contextType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseVisualElementPanel::set_contextType
// Il2CppName: set_contextType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::BaseVisualElementPanel::*)(::UnityEngine::UIElements::ContextType)>(&UnityEngine::UIElements::BaseVisualElementPanel::set_contextType)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "ContextType")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseVisualElementPanel*), "set_contextType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseVisualElementPanel::Pick
// Il2CppName: Pick
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::VisualElement* (UnityEngine::UIElements::BaseVisualElementPanel::*)(::UnityEngine::Vector2)>(&UnityEngine::UIElements::BaseVisualElementPanel::Pick)> {
  static const MethodInfo* get() {
    static auto* point = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector2")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseVisualElementPanel*), "Pick", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{point});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseVisualElementPanel::PickAll
// Il2CppName: PickAll
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::VisualElement* (UnityEngine::UIElements::BaseVisualElementPanel::*)(::UnityEngine::Vector2, ::System::Collections::Generic::List_1<::UnityEngine::UIElements::VisualElement*>*)>(&UnityEngine::UIElements::BaseVisualElementPanel::PickAll)> {
  static const MethodInfo* get() {
    static auto* point = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector2")->byval_arg;
    static auto* picked = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "VisualElement")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseVisualElementPanel*), "PickAll", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{point, picked});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseVisualElementPanel::get_disposed
// Il2CppName: get_disposed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::BaseVisualElementPanel::*)()>(&UnityEngine::UIElements::BaseVisualElementPanel::get_disposed)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseVisualElementPanel*), "get_disposed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseVisualElementPanel::set_disposed
// Il2CppName: set_disposed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::BaseVisualElementPanel::*)(bool)>(&UnityEngine::UIElements::BaseVisualElementPanel::set_disposed)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseVisualElementPanel*), "set_disposed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseVisualElementPanel::GetUpdater
// Il2CppName: GetUpdater
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::IVisualTreeUpdater* (UnityEngine::UIElements::BaseVisualElementPanel::*)(::UnityEngine::UIElements::VisualTreeUpdatePhase)>(&UnityEngine::UIElements::BaseVisualElementPanel::GetUpdater)> {
  static const MethodInfo* get() {
    static auto* phase = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "VisualTreeUpdatePhase")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseVisualElementPanel*), "GetUpdater", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{phase});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseVisualElementPanel::GetTopElementUnderPointer
// Il2CppName: GetTopElementUnderPointer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::VisualElement* (UnityEngine::UIElements::BaseVisualElementPanel::*)(int)>(&UnityEngine::UIElements::BaseVisualElementPanel::GetTopElementUnderPointer)> {
  static const MethodInfo* get() {
    static auto* pointerId = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseVisualElementPanel*), "GetTopElementUnderPointer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{pointerId});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseVisualElementPanel::RecomputeTopElementUnderPointer
// Il2CppName: RecomputeTopElementUnderPointer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::VisualElement* (UnityEngine::UIElements::BaseVisualElementPanel::*)(int, ::UnityEngine::Vector2, ::UnityEngine::UIElements::EventBase*)>(&UnityEngine::UIElements::BaseVisualElementPanel::RecomputeTopElementUnderPointer)> {
  static const MethodInfo* get() {
    static auto* pointerId = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* pointerPos = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector2")->byval_arg;
    static auto* triggerEvent = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "EventBase")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseVisualElementPanel*), "RecomputeTopElementUnderPointer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{pointerId, pointerPos, triggerEvent});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseVisualElementPanel::ClearCachedElementUnderPointer
// Il2CppName: ClearCachedElementUnderPointer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::BaseVisualElementPanel::*)(int, ::UnityEngine::UIElements::EventBase*)>(&UnityEngine::UIElements::BaseVisualElementPanel::ClearCachedElementUnderPointer)> {
  static const MethodInfo* get() {
    static auto* pointerId = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* triggerEvent = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "EventBase")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseVisualElementPanel*), "ClearCachedElementUnderPointer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{pointerId, triggerEvent});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseVisualElementPanel::CommitElementUnderPointers
// Il2CppName: CommitElementUnderPointers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::BaseVisualElementPanel::*)()>(&UnityEngine::UIElements::BaseVisualElementPanel::CommitElementUnderPointers)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseVisualElementPanel*), "CommitElementUnderPointers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseVisualElementPanel::get_standardShader
// Il2CppName: get_standardShader
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Shader* (UnityEngine::UIElements::BaseVisualElementPanel::*)()>(&UnityEngine::UIElements::BaseVisualElementPanel::get_standardShader)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseVisualElementPanel*), "get_standardShader", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseVisualElementPanel::get_standardWorldSpaceShader
// Il2CppName: get_standardWorldSpaceShader
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Shader* (UnityEngine::UIElements::BaseVisualElementPanel::*)()>(&UnityEngine::UIElements::BaseVisualElementPanel::get_standardWorldSpaceShader)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseVisualElementPanel*), "get_standardWorldSpaceShader", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseVisualElementPanel::add_standardShaderChanged
// Il2CppName: add_standardShaderChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::BaseVisualElementPanel::*)(::System::Action*)>(&UnityEngine::UIElements::BaseVisualElementPanel::add_standardShaderChanged)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Action")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseVisualElementPanel*), "add_standardShaderChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseVisualElementPanel::remove_standardShaderChanged
// Il2CppName: remove_standardShaderChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::BaseVisualElementPanel::*)(::System::Action*)>(&UnityEngine::UIElements::BaseVisualElementPanel::remove_standardShaderChanged)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Action")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseVisualElementPanel*), "remove_standardShaderChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseVisualElementPanel::add_standardWorldSpaceShaderChanged
// Il2CppName: add_standardWorldSpaceShaderChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::BaseVisualElementPanel::*)(::System::Action*)>(&UnityEngine::UIElements::BaseVisualElementPanel::add_standardWorldSpaceShaderChanged)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Action")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseVisualElementPanel*), "add_standardWorldSpaceShaderChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseVisualElementPanel::remove_standardWorldSpaceShaderChanged
// Il2CppName: remove_standardWorldSpaceShaderChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::BaseVisualElementPanel::*)(::System::Action*)>(&UnityEngine::UIElements::BaseVisualElementPanel::remove_standardWorldSpaceShaderChanged)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Action")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseVisualElementPanel*), "remove_standardWorldSpaceShaderChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseVisualElementPanel::add_atlasChanged
// Il2CppName: add_atlasChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::BaseVisualElementPanel::*)(::System::Action*)>(&UnityEngine::UIElements::BaseVisualElementPanel::add_atlasChanged)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Action")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseVisualElementPanel*), "add_atlasChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseVisualElementPanel::remove_atlasChanged
// Il2CppName: remove_atlasChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::BaseVisualElementPanel::*)(::System::Action*)>(&UnityEngine::UIElements::BaseVisualElementPanel::remove_atlasChanged)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Action")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseVisualElementPanel*), "remove_atlasChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseVisualElementPanel::InvokeAtlasChanged
// Il2CppName: InvokeAtlasChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::BaseVisualElementPanel::*)()>(&UnityEngine::UIElements::BaseVisualElementPanel::InvokeAtlasChanged)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseVisualElementPanel*), "InvokeAtlasChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseVisualElementPanel::get_atlas
// Il2CppName: get_atlas
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::AtlasBase* (UnityEngine::UIElements::BaseVisualElementPanel::*)()>(&UnityEngine::UIElements::BaseVisualElementPanel::get_atlas)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseVisualElementPanel*), "get_atlas", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseVisualElementPanel::set_atlas
// Il2CppName: set_atlas
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::BaseVisualElementPanel::*)(::UnityEngine::UIElements::AtlasBase*)>(&UnityEngine::UIElements::BaseVisualElementPanel::set_atlas)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "AtlasBase")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseVisualElementPanel*), "set_atlas", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseVisualElementPanel::InvokeUpdateMaterial
// Il2CppName: InvokeUpdateMaterial
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::BaseVisualElementPanel::*)(::UnityEngine::Material*)>(&UnityEngine::UIElements::BaseVisualElementPanel::InvokeUpdateMaterial)> {
  static const MethodInfo* get() {
    static auto* mat = &::il2cpp_utils::GetClassFromName("UnityEngine", "Material")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseVisualElementPanel*), "InvokeUpdateMaterial", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{mat});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseVisualElementPanel::add_hierarchyChanged
// Il2CppName: add_hierarchyChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::BaseVisualElementPanel::*)(::UnityEngine::UIElements::HierarchyEvent*)>(&UnityEngine::UIElements::BaseVisualElementPanel::add_hierarchyChanged)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "HierarchyEvent")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseVisualElementPanel*), "add_hierarchyChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseVisualElementPanel::remove_hierarchyChanged
// Il2CppName: remove_hierarchyChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::BaseVisualElementPanel::*)(::UnityEngine::UIElements::HierarchyEvent*)>(&UnityEngine::UIElements::BaseVisualElementPanel::remove_hierarchyChanged)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "HierarchyEvent")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseVisualElementPanel*), "remove_hierarchyChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseVisualElementPanel::InvokeHierarchyChanged
// Il2CppName: InvokeHierarchyChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::BaseVisualElementPanel::*)(::UnityEngine::UIElements::VisualElement*, ::UnityEngine::UIElements::HierarchyChangeType)>(&UnityEngine::UIElements::BaseVisualElementPanel::InvokeHierarchyChanged)> {
  static const MethodInfo* get() {
    static auto* ve = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "VisualElement")->byval_arg;
    static auto* changeType = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "HierarchyChangeType")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseVisualElementPanel*), "InvokeHierarchyChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ve, changeType});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseVisualElementPanel::InvokeBeforeUpdate
// Il2CppName: InvokeBeforeUpdate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::BaseVisualElementPanel::*)()>(&UnityEngine::UIElements::BaseVisualElementPanel::InvokeBeforeUpdate)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseVisualElementPanel*), "InvokeBeforeUpdate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseVisualElementPanel::UpdateElementUnderPointers
// Il2CppName: UpdateElementUnderPointers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::BaseVisualElementPanel::*)()>(&UnityEngine::UIElements::BaseVisualElementPanel::UpdateElementUnderPointers)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseVisualElementPanel*), "UpdateElementUnderPointers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseVisualElementPanel::UnityEngine_UIElements_IGroupBox_OnOptionAdded
// Il2CppName: UnityEngine.UIElements.IGroupBox.OnOptionAdded
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::BaseVisualElementPanel::*)(::UnityEngine::UIElements::IGroupBoxOption*)>(&UnityEngine::UIElements::BaseVisualElementPanel::UnityEngine_UIElements_IGroupBox_OnOptionAdded)> {
  static const MethodInfo* get() {
    static auto* option = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "IGroupBoxOption")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseVisualElementPanel*), "UnityEngine.UIElements.IGroupBox.OnOptionAdded", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{option});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseVisualElementPanel::UnityEngine_UIElements_IGroupBox_OnOptionRemoved
// Il2CppName: UnityEngine.UIElements.IGroupBox.OnOptionRemoved
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::BaseVisualElementPanel::*)(::UnityEngine::UIElements::IGroupBoxOption*)>(&UnityEngine::UIElements::BaseVisualElementPanel::UnityEngine_UIElements_IGroupBox_OnOptionRemoved)> {
  static const MethodInfo* get() {
    static auto* option = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "IGroupBoxOption")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseVisualElementPanel*), "UnityEngine.UIElements.IGroupBox.OnOptionRemoved", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{option});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseVisualElementPanel::Update
// Il2CppName: Update
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::BaseVisualElementPanel::*)()>(&UnityEngine::UIElements::BaseVisualElementPanel::Update)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseVisualElementPanel*), "Update", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
