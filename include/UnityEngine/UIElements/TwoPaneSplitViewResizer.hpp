// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.UIElements.PointerManipulator
#include "UnityEngine/UIElements/PointerManipulator.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::UIElements
namespace UnityEngine::UIElements {
  // Forward declaring type: TwoPaneSplitView
  class TwoPaneSplitView;
  // Forward declaring type: TwoPaneSplitViewOrientation
  struct TwoPaneSplitViewOrientation;
  // Forward declaring type: VisualElement
  class VisualElement;
  // Forward declaring type: PointerDownEvent
  class PointerDownEvent;
  // Forward declaring type: PointerMoveEvent
  class PointerMoveEvent;
  // Forward declaring type: PointerUpEvent
  class PointerUpEvent;
}
// Completed forward declares
// Type namespace: UnityEngine.UIElements
namespace UnityEngine::UIElements {
  // Forward declaring type: TwoPaneSplitViewResizer
  class TwoPaneSplitViewResizer;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::UIElements::TwoPaneSplitViewResizer);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::UIElements::TwoPaneSplitViewResizer*, "UnityEngine.UIElements", "TwoPaneSplitViewResizer");
// Type namespace: UnityEngine.UIElements
namespace UnityEngine::UIElements {
  // Size: 0x4C
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.UIElements.TwoPaneSplitViewResizer
  // [TokenAttribute] Offset: FFFFFFFF
  class TwoPaneSplitViewResizer : public ::UnityEngine::UIElements::PointerManipulator {
    public:
    public:
    // private UnityEngine.Vector3 m_Start
    // Size: 0xC
    // Offset: 0x30
    ::UnityEngine::Vector3 m_Start;
    // Field size check
    static_assert(sizeof(::UnityEngine::Vector3) == 0xC);
    // protected System.Boolean m_Active
    // Size: 0x1
    // Offset: 0x3C
    bool m_Active;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: m_Active and: m_SplitView
    char __padding1[0x3] = {};
    // private UnityEngine.UIElements.TwoPaneSplitView m_SplitView
    // Size: 0x8
    // Offset: 0x40
    ::UnityEngine::UIElements::TwoPaneSplitView* m_SplitView;
    // Field size check
    static_assert(sizeof(::UnityEngine::UIElements::TwoPaneSplitView*) == 0x8);
    // private System.Int32 m_Direction
    // Size: 0x4
    // Offset: 0x48
    int m_Direction;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Get instance field reference: private UnityEngine.Vector3 m_Start
    [[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& dyn_m_Start();
    // Get instance field reference: protected System.Boolean m_Active
    [[deprecated("Use field access instead!")]] bool& dyn_m_Active();
    // Get instance field reference: private UnityEngine.UIElements.TwoPaneSplitView m_SplitView
    [[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::TwoPaneSplitView*& dyn_m_SplitView();
    // Get instance field reference: private System.Int32 m_Direction
    [[deprecated("Use field access instead!")]] int& dyn_m_Direction();
    // private UnityEngine.UIElements.TwoPaneSplitViewOrientation get_orientation()
    // Offset: 0x56339BC
    ::UnityEngine::UIElements::TwoPaneSplitViewOrientation get_orientation();
    // private UnityEngine.UIElements.VisualElement get_fixedPane()
    // Offset: 0x56339D8
    ::UnityEngine::UIElements::VisualElement* get_fixedPane();
    // private UnityEngine.UIElements.VisualElement get_flexedPane()
    // Offset: 0x56339F4
    ::UnityEngine::UIElements::VisualElement* get_flexedPane();
    // private System.Single get_fixedPaneMinDimension()
    // Offset: 0x5633A10
    float get_fixedPaneMinDimension();
    // private System.Single get_fixedPaneMargins()
    // Offset: 0x5633B24
    float get_fixedPaneMargins();
    // private System.Single get_flexedPaneMinDimension()
    // Offset: 0x5633D38
    float get_flexedPaneMinDimension();
    // private System.Single get_flexedPaneMargin()
    // Offset: 0x5633E4C
    float get_flexedPaneMargin();
    // public System.Void .ctor(UnityEngine.UIElements.TwoPaneSplitView splitView, System.Int32 dir)
    // Offset: 0x56326C8
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static TwoPaneSplitViewResizer* New_ctor(::UnityEngine::UIElements::TwoPaneSplitView* splitView, int dir) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::TwoPaneSplitViewResizer::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<TwoPaneSplitViewResizer*, creationType>(splitView, dir)));
    }
    // public System.Void ApplyDelta(System.Single delta)
    // Offset: 0x56343E0
    void ApplyDelta(float delta);
    // protected System.Void OnPointerDown(UnityEngine.UIElements.PointerDownEvent e)
    // Offset: 0x5634A64
    void OnPointerDown(::UnityEngine::UIElements::PointerDownEvent* e);
    // protected System.Void OnPointerMove(UnityEngine.UIElements.PointerMoveEvent e)
    // Offset: 0x5634B2C
    void OnPointerMove(::UnityEngine::UIElements::PointerMoveEvent* e);
    // protected System.Void OnPointerUp(UnityEngine.UIElements.PointerUpEvent e)
    // Offset: 0x5634BEC
    void OnPointerUp(::UnityEngine::UIElements::PointerUpEvent* e);
    // protected override System.Void RegisterCallbacksOnTarget()
    // Offset: 0x5634060
    // Implemented from: UnityEngine.UIElements.Manipulator
    // Base method: System.Void Manipulator::RegisterCallbacksOnTarget()
    void RegisterCallbacksOnTarget();
    // protected override System.Void UnregisterCallbacksFromTarget()
    // Offset: 0x5634220
    // Implemented from: UnityEngine.UIElements.Manipulator
    // Base method: System.Void Manipulator::UnregisterCallbacksFromTarget()
    void UnregisterCallbacksFromTarget();
  }; // UnityEngine.UIElements.TwoPaneSplitViewResizer
  #pragma pack(pop)
  static check_size<sizeof(TwoPaneSplitViewResizer), 72 + sizeof(int)> __UnityEngine_UIElements_TwoPaneSplitViewResizerSizeCheck;
  static_assert(sizeof(TwoPaneSplitViewResizer) == 0x4C);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::UIElements::TwoPaneSplitViewResizer::get_orientation
// Il2CppName: get_orientation
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::TwoPaneSplitViewOrientation (UnityEngine::UIElements::TwoPaneSplitViewResizer::*)()>(&UnityEngine::UIElements::TwoPaneSplitViewResizer::get_orientation)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::TwoPaneSplitViewResizer*), "get_orientation", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::TwoPaneSplitViewResizer::get_fixedPane
// Il2CppName: get_fixedPane
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::VisualElement* (UnityEngine::UIElements::TwoPaneSplitViewResizer::*)()>(&UnityEngine::UIElements::TwoPaneSplitViewResizer::get_fixedPane)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::TwoPaneSplitViewResizer*), "get_fixedPane", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::TwoPaneSplitViewResizer::get_flexedPane
// Il2CppName: get_flexedPane
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::VisualElement* (UnityEngine::UIElements::TwoPaneSplitViewResizer::*)()>(&UnityEngine::UIElements::TwoPaneSplitViewResizer::get_flexedPane)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::TwoPaneSplitViewResizer*), "get_flexedPane", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::TwoPaneSplitViewResizer::get_fixedPaneMinDimension
// Il2CppName: get_fixedPaneMinDimension
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::UIElements::TwoPaneSplitViewResizer::*)()>(&UnityEngine::UIElements::TwoPaneSplitViewResizer::get_fixedPaneMinDimension)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::TwoPaneSplitViewResizer*), "get_fixedPaneMinDimension", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::TwoPaneSplitViewResizer::get_fixedPaneMargins
// Il2CppName: get_fixedPaneMargins
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::UIElements::TwoPaneSplitViewResizer::*)()>(&UnityEngine::UIElements::TwoPaneSplitViewResizer::get_fixedPaneMargins)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::TwoPaneSplitViewResizer*), "get_fixedPaneMargins", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::TwoPaneSplitViewResizer::get_flexedPaneMinDimension
// Il2CppName: get_flexedPaneMinDimension
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::UIElements::TwoPaneSplitViewResizer::*)()>(&UnityEngine::UIElements::TwoPaneSplitViewResizer::get_flexedPaneMinDimension)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::TwoPaneSplitViewResizer*), "get_flexedPaneMinDimension", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::TwoPaneSplitViewResizer::get_flexedPaneMargin
// Il2CppName: get_flexedPaneMargin
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::UIElements::TwoPaneSplitViewResizer::*)()>(&UnityEngine::UIElements::TwoPaneSplitViewResizer::get_flexedPaneMargin)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::TwoPaneSplitViewResizer*), "get_flexedPaneMargin", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::TwoPaneSplitViewResizer::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::UIElements::TwoPaneSplitViewResizer::ApplyDelta
// Il2CppName: ApplyDelta
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::TwoPaneSplitViewResizer::*)(float)>(&UnityEngine::UIElements::TwoPaneSplitViewResizer::ApplyDelta)> {
  static const MethodInfo* get() {
    static auto* delta = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::TwoPaneSplitViewResizer*), "ApplyDelta", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{delta});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::TwoPaneSplitViewResizer::OnPointerDown
// Il2CppName: OnPointerDown
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::TwoPaneSplitViewResizer::*)(::UnityEngine::UIElements::PointerDownEvent*)>(&UnityEngine::UIElements::TwoPaneSplitViewResizer::OnPointerDown)> {
  static const MethodInfo* get() {
    static auto* e = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "PointerDownEvent")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::TwoPaneSplitViewResizer*), "OnPointerDown", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{e});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::TwoPaneSplitViewResizer::OnPointerMove
// Il2CppName: OnPointerMove
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::TwoPaneSplitViewResizer::*)(::UnityEngine::UIElements::PointerMoveEvent*)>(&UnityEngine::UIElements::TwoPaneSplitViewResizer::OnPointerMove)> {
  static const MethodInfo* get() {
    static auto* e = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "PointerMoveEvent")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::TwoPaneSplitViewResizer*), "OnPointerMove", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{e});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::TwoPaneSplitViewResizer::OnPointerUp
// Il2CppName: OnPointerUp
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::TwoPaneSplitViewResizer::*)(::UnityEngine::UIElements::PointerUpEvent*)>(&UnityEngine::UIElements::TwoPaneSplitViewResizer::OnPointerUp)> {
  static const MethodInfo* get() {
    static auto* e = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "PointerUpEvent")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::TwoPaneSplitViewResizer*), "OnPointerUp", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{e});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::TwoPaneSplitViewResizer::RegisterCallbacksOnTarget
// Il2CppName: RegisterCallbacksOnTarget
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::TwoPaneSplitViewResizer::*)()>(&UnityEngine::UIElements::TwoPaneSplitViewResizer::RegisterCallbacksOnTarget)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::TwoPaneSplitViewResizer*), "RegisterCallbacksOnTarget", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::TwoPaneSplitViewResizer::UnregisterCallbacksFromTarget
// Il2CppName: UnregisterCallbacksFromTarget
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::TwoPaneSplitViewResizer::*)()>(&UnityEngine::UIElements::TwoPaneSplitViewResizer::UnregisterCallbacksFromTarget)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::TwoPaneSplitViewResizer*), "UnregisterCallbacksFromTarget", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
