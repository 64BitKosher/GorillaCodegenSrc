// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Completed includes
// Type namespace: UnityEngine.UIElements
namespace UnityEngine::UIElements {
  // Forward declaring type: AlignmentUtils
  class AlignmentUtils;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::UIElements::AlignmentUtils);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::UIElements::AlignmentUtils*, "UnityEngine.UIElements", "AlignmentUtils");
// Type namespace: UnityEngine.UIElements
namespace UnityEngine::UIElements {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.UIElements.AlignmentUtils
  // [TokenAttribute] Offset: FFFFFFFF
  class AlignmentUtils : public ::Il2CppObject {
    public:
    // static System.Single RoundToPixelGrid(System.Single v, System.Single pixelsPerPoint, System.Single offset)
    // Offset: 0x55918B4
    static float RoundToPixelGrid(float v, float pixelsPerPoint, float offset);
    // static System.Single CeilToPixelGrid(System.Single v, System.Single pixelsPerPoint, System.Single offset)
    // Offset: 0x55918D0
    static float CeilToPixelGrid(float v, float pixelsPerPoint, float offset);
  }; // UnityEngine.UIElements.AlignmentUtils
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::UIElements::AlignmentUtils::RoundToPixelGrid
// Il2CppName: RoundToPixelGrid
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (*)(float, float, float)>(&UnityEngine::UIElements::AlignmentUtils::RoundToPixelGrid)> {
  static const MethodInfo* get() {
    static auto* v = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* pixelsPerPoint = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* offset = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::AlignmentUtils*), "RoundToPixelGrid", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{v, pixelsPerPoint, offset});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::AlignmentUtils::CeilToPixelGrid
// Il2CppName: CeilToPixelGrid
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (*)(float, float, float)>(&UnityEngine::UIElements::AlignmentUtils::CeilToPixelGrid)> {
  static const MethodInfo* get() {
    static auto* v = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* pixelsPerPoint = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* offset = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::AlignmentUtils*), "CeilToPixelGrid", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{v, pixelsPerPoint, offset});
  }
};
