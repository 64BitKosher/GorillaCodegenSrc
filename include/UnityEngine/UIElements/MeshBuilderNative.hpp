// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.UIElements.Vertex
#include "UnityEngine/UIElements/Vertex.hpp"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::UIElements
namespace UnityEngine::UIElements {
  // Forward declaring type: MeshWriteDataInterface
  struct MeshWriteDataInterface;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Rect
  struct Rect;
  // Forward declaring type: ScaleMode
  struct ScaleMode;
  // Forward declaring type: Color
  struct Color;
  // Skipping declaration: Vector4 because it is already included!
}
// Completed forward declares
// Type namespace: UnityEngine.UIElements
namespace UnityEngine::UIElements {
  // Forward declaring type: MeshBuilderNative
  class MeshBuilderNative;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::UIElements::MeshBuilderNative);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::UIElements::MeshBuilderNative*, "UnityEngine.UIElements", "MeshBuilderNative");
// Type namespace: UnityEngine.UIElements
namespace UnityEngine::UIElements {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.UIElements.MeshBuilderNative
  // [TokenAttribute] Offset: FFFFFFFF
  // [NativeHeaderAttribute] Offset: FFFFFFFF
  class MeshBuilderNative : public ::Il2CppObject {
    public:
    // Nested type: ::UnityEngine::UIElements::MeshBuilderNative::NativeColorPage
    struct NativeColorPage;
    // Nested type: ::UnityEngine::UIElements::MeshBuilderNative::NativeBorderParams
    struct NativeBorderParams;
    // Nested type: ::UnityEngine::UIElements::MeshBuilderNative::NativeRectParams
    struct NativeRectParams;
    // static public UnityEngine.UIElements.MeshWriteDataInterface MakeBorder(UnityEngine.UIElements.MeshBuilderNative/NativeBorderParams borderParams, System.Single posZ)
    // Offset: 0x5664F88
    static ::UnityEngine::UIElements::MeshWriteDataInterface MakeBorder(::UnityEngine::UIElements::MeshBuilderNative::NativeBorderParams borderParams, float posZ);
    // static public UnityEngine.UIElements.MeshWriteDataInterface MakeSolidRect(UnityEngine.UIElements.MeshBuilderNative/NativeRectParams rectParams, System.Single posZ)
    // Offset: 0x5665054
    static ::UnityEngine::UIElements::MeshWriteDataInterface MakeSolidRect(::UnityEngine::UIElements::MeshBuilderNative::NativeRectParams rectParams, float posZ);
    // static public UnityEngine.UIElements.MeshWriteDataInterface MakeTexturedRect(UnityEngine.UIElements.MeshBuilderNative/NativeRectParams rectParams, System.Single posZ)
    // Offset: 0x5665120
    static ::UnityEngine::UIElements::MeshWriteDataInterface MakeTexturedRect(::UnityEngine::UIElements::MeshBuilderNative::NativeRectParams rectParams, float posZ);
    // static public UnityEngine.UIElements.MeshWriteDataInterface MakeVectorGraphicsStretchBackground(UnityEngine.UIElements.Vertex[] svgVertices, System.UInt16[] svgIndices, System.Single svgWidth, System.Single svgHeight, UnityEngine.Rect targetRect, UnityEngine.Rect sourceUV, UnityEngine.ScaleMode scaleMode, UnityEngine.Color tint, UnityEngine.UIElements.MeshBuilderNative/NativeColorPage colorPage, System.Int32 settingIndexOffset, ref System.Int32 finalVertexCount, ref System.Int32 finalIndexCount)
    // Offset: 0x56651EC
    static ::UnityEngine::UIElements::MeshWriteDataInterface MakeVectorGraphicsStretchBackground(::ArrayW<::UnityEngine::UIElements::Vertex> svgVertices, ::ArrayW<uint16_t> svgIndices, float svgWidth, float svgHeight, ::UnityEngine::Rect targetRect, ::UnityEngine::Rect sourceUV, ::UnityEngine::ScaleMode scaleMode, ::UnityEngine::Color tint, ::UnityEngine::UIElements::MeshBuilderNative::NativeColorPage colorPage, int settingIndexOffset, ByRef<int> finalVertexCount, ByRef<int> finalIndexCount);
    // static public UnityEngine.UIElements.MeshWriteDataInterface MakeVectorGraphics9SliceBackground(UnityEngine.UIElements.Vertex[] svgVertices, System.UInt16[] svgIndices, System.Single svgWidth, System.Single svgHeight, UnityEngine.Rect targetRect, UnityEngine.Vector4 sliceLTRB, UnityEngine.Color tint, UnityEngine.UIElements.MeshBuilderNative/NativeColorPage colorPage, System.Int32 settingIndexOffset)
    // Offset: 0x5665390
    static ::UnityEngine::UIElements::MeshWriteDataInterface MakeVectorGraphics9SliceBackground(::ArrayW<::UnityEngine::UIElements::Vertex> svgVertices, ::ArrayW<uint16_t> svgIndices, float svgWidth, float svgHeight, ::UnityEngine::Rect targetRect, ::UnityEngine::Vector4 sliceLTRB, ::UnityEngine::Color tint, ::UnityEngine::UIElements::MeshBuilderNative::NativeColorPage colorPage, int settingIndexOffset);
    // static private System.Void MakeBorder_Injected(ref UnityEngine.UIElements.MeshBuilderNative/NativeBorderParams borderParams, System.Single posZ, out UnityEngine.UIElements.MeshWriteDataInterface ret)
    // Offset: 0x5665000
    static void MakeBorder_Injected(ByRef<::UnityEngine::UIElements::MeshBuilderNative::NativeBorderParams> borderParams, float posZ, ByRef<::UnityEngine::UIElements::MeshWriteDataInterface> ret);
    // static private System.Void MakeSolidRect_Injected(ref UnityEngine.UIElements.MeshBuilderNative/NativeRectParams rectParams, System.Single posZ, out UnityEngine.UIElements.MeshWriteDataInterface ret)
    // Offset: 0x56650CC
    static void MakeSolidRect_Injected(ByRef<::UnityEngine::UIElements::MeshBuilderNative::NativeRectParams> rectParams, float posZ, ByRef<::UnityEngine::UIElements::MeshWriteDataInterface> ret);
    // static private System.Void MakeTexturedRect_Injected(ref UnityEngine.UIElements.MeshBuilderNative/NativeRectParams rectParams, System.Single posZ, out UnityEngine.UIElements.MeshWriteDataInterface ret)
    // Offset: 0x5665198
    static void MakeTexturedRect_Injected(ByRef<::UnityEngine::UIElements::MeshBuilderNative::NativeRectParams> rectParams, float posZ, ByRef<::UnityEngine::UIElements::MeshWriteDataInterface> ret);
    // static private System.Void MakeVectorGraphicsStretchBackground_Injected(UnityEngine.UIElements.Vertex[] svgVertices, System.UInt16[] svgIndices, System.Single svgWidth, System.Single svgHeight, ref UnityEngine.Rect targetRect, ref UnityEngine.Rect sourceUV, UnityEngine.ScaleMode scaleMode, ref UnityEngine.Color tint, ref UnityEngine.UIElements.MeshBuilderNative/NativeColorPage colorPage, System.Int32 settingIndexOffset, ref System.Int32 finalVertexCount, ref System.Int32 finalIndexCount, out UnityEngine.UIElements.MeshWriteDataInterface ret)
    // Offset: 0x56652CC
    static void MakeVectorGraphicsStretchBackground_Injected(::ArrayW<::UnityEngine::UIElements::Vertex> svgVertices, ::ArrayW<uint16_t> svgIndices, float svgWidth, float svgHeight, ByRef<::UnityEngine::Rect> targetRect, ByRef<::UnityEngine::Rect> sourceUV, ::UnityEngine::ScaleMode scaleMode, ByRef<::UnityEngine::Color> tint, ByRef<::UnityEngine::UIElements::MeshBuilderNative::NativeColorPage> colorPage, int settingIndexOffset, ByRef<int> finalVertexCount, ByRef<int> finalIndexCount, ByRef<::UnityEngine::UIElements::MeshWriteDataInterface> ret);
    // static private System.Void MakeVectorGraphics9SliceBackground_Injected(UnityEngine.UIElements.Vertex[] svgVertices, System.UInt16[] svgIndices, System.Single svgWidth, System.Single svgHeight, ref UnityEngine.Rect targetRect, ref UnityEngine.Vector4 sliceLTRB, ref UnityEngine.Color tint, ref UnityEngine.UIElements.MeshBuilderNative/NativeColorPage colorPage, System.Int32 settingIndexOffset, out UnityEngine.UIElements.MeshWriteDataInterface ret)
    // Offset: 0x5665448
    static void MakeVectorGraphics9SliceBackground_Injected(::ArrayW<::UnityEngine::UIElements::Vertex> svgVertices, ::ArrayW<uint16_t> svgIndices, float svgWidth, float svgHeight, ByRef<::UnityEngine::Rect> targetRect, ByRef<::UnityEngine::Vector4> sliceLTRB, ByRef<::UnityEngine::Color> tint, ByRef<::UnityEngine::UIElements::MeshBuilderNative::NativeColorPage> colorPage, int settingIndexOffset, ByRef<::UnityEngine::UIElements::MeshWriteDataInterface> ret);
  }; // UnityEngine.UIElements.MeshBuilderNative
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::UIElements::MeshBuilderNative::MakeBorder
// Il2CppName: MakeBorder
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::MeshWriteDataInterface (*)(::UnityEngine::UIElements::MeshBuilderNative::NativeBorderParams, float)>(&UnityEngine::UIElements::MeshBuilderNative::MakeBorder)> {
  static const MethodInfo* get() {
    static auto* borderParams = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "MeshBuilderNative/NativeBorderParams")->byval_arg;
    static auto* posZ = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::MeshBuilderNative*), "MakeBorder", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{borderParams, posZ});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::MeshBuilderNative::MakeSolidRect
// Il2CppName: MakeSolidRect
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::MeshWriteDataInterface (*)(::UnityEngine::UIElements::MeshBuilderNative::NativeRectParams, float)>(&UnityEngine::UIElements::MeshBuilderNative::MakeSolidRect)> {
  static const MethodInfo* get() {
    static auto* rectParams = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "MeshBuilderNative/NativeRectParams")->byval_arg;
    static auto* posZ = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::MeshBuilderNative*), "MakeSolidRect", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{rectParams, posZ});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::MeshBuilderNative::MakeTexturedRect
// Il2CppName: MakeTexturedRect
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::MeshWriteDataInterface (*)(::UnityEngine::UIElements::MeshBuilderNative::NativeRectParams, float)>(&UnityEngine::UIElements::MeshBuilderNative::MakeTexturedRect)> {
  static const MethodInfo* get() {
    static auto* rectParams = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "MeshBuilderNative/NativeRectParams")->byval_arg;
    static auto* posZ = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::MeshBuilderNative*), "MakeTexturedRect", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{rectParams, posZ});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::MeshBuilderNative::MakeVectorGraphicsStretchBackground
// Il2CppName: MakeVectorGraphicsStretchBackground
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::MeshWriteDataInterface (*)(::ArrayW<::UnityEngine::UIElements::Vertex>, ::ArrayW<uint16_t>, float, float, ::UnityEngine::Rect, ::UnityEngine::Rect, ::UnityEngine::ScaleMode, ::UnityEngine::Color, ::UnityEngine::UIElements::MeshBuilderNative::NativeColorPage, int, ByRef<int>, ByRef<int>)>(&UnityEngine::UIElements::MeshBuilderNative::MakeVectorGraphicsStretchBackground)> {
  static const MethodInfo* get() {
    static auto* svgVertices = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "Vertex"), 1)->byval_arg;
    static auto* svgIndices = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "UInt16"), 1)->byval_arg;
    static auto* svgWidth = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* svgHeight = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* targetRect = &::il2cpp_utils::GetClassFromName("UnityEngine", "Rect")->byval_arg;
    static auto* sourceUV = &::il2cpp_utils::GetClassFromName("UnityEngine", "Rect")->byval_arg;
    static auto* scaleMode = &::il2cpp_utils::GetClassFromName("UnityEngine", "ScaleMode")->byval_arg;
    static auto* tint = &::il2cpp_utils::GetClassFromName("UnityEngine", "Color")->byval_arg;
    static auto* colorPage = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "MeshBuilderNative/NativeColorPage")->byval_arg;
    static auto* settingIndexOffset = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* finalVertexCount = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    static auto* finalIndexCount = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::MeshBuilderNative*), "MakeVectorGraphicsStretchBackground", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{svgVertices, svgIndices, svgWidth, svgHeight, targetRect, sourceUV, scaleMode, tint, colorPage, settingIndexOffset, finalVertexCount, finalIndexCount});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::MeshBuilderNative::MakeVectorGraphics9SliceBackground
// Il2CppName: MakeVectorGraphics9SliceBackground
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::MeshWriteDataInterface (*)(::ArrayW<::UnityEngine::UIElements::Vertex>, ::ArrayW<uint16_t>, float, float, ::UnityEngine::Rect, ::UnityEngine::Vector4, ::UnityEngine::Color, ::UnityEngine::UIElements::MeshBuilderNative::NativeColorPage, int)>(&UnityEngine::UIElements::MeshBuilderNative::MakeVectorGraphics9SliceBackground)> {
  static const MethodInfo* get() {
    static auto* svgVertices = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "Vertex"), 1)->byval_arg;
    static auto* svgIndices = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "UInt16"), 1)->byval_arg;
    static auto* svgWidth = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* svgHeight = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* targetRect = &::il2cpp_utils::GetClassFromName("UnityEngine", "Rect")->byval_arg;
    static auto* sliceLTRB = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector4")->byval_arg;
    static auto* tint = &::il2cpp_utils::GetClassFromName("UnityEngine", "Color")->byval_arg;
    static auto* colorPage = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "MeshBuilderNative/NativeColorPage")->byval_arg;
    static auto* settingIndexOffset = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::MeshBuilderNative*), "MakeVectorGraphics9SliceBackground", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{svgVertices, svgIndices, svgWidth, svgHeight, targetRect, sliceLTRB, tint, colorPage, settingIndexOffset});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::MeshBuilderNative::MakeBorder_Injected
// Il2CppName: MakeBorder_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(ByRef<::UnityEngine::UIElements::MeshBuilderNative::NativeBorderParams>, float, ByRef<::UnityEngine::UIElements::MeshWriteDataInterface>)>(&UnityEngine::UIElements::MeshBuilderNative::MakeBorder_Injected)> {
  static const MethodInfo* get() {
    static auto* borderParams = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "MeshBuilderNative/NativeBorderParams")->this_arg;
    static auto* posZ = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* ret = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "MeshWriteDataInterface")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::MeshBuilderNative*), "MakeBorder_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{borderParams, posZ, ret});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::MeshBuilderNative::MakeSolidRect_Injected
// Il2CppName: MakeSolidRect_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(ByRef<::UnityEngine::UIElements::MeshBuilderNative::NativeRectParams>, float, ByRef<::UnityEngine::UIElements::MeshWriteDataInterface>)>(&UnityEngine::UIElements::MeshBuilderNative::MakeSolidRect_Injected)> {
  static const MethodInfo* get() {
    static auto* rectParams = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "MeshBuilderNative/NativeRectParams")->this_arg;
    static auto* posZ = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* ret = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "MeshWriteDataInterface")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::MeshBuilderNative*), "MakeSolidRect_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{rectParams, posZ, ret});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::MeshBuilderNative::MakeTexturedRect_Injected
// Il2CppName: MakeTexturedRect_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(ByRef<::UnityEngine::UIElements::MeshBuilderNative::NativeRectParams>, float, ByRef<::UnityEngine::UIElements::MeshWriteDataInterface>)>(&UnityEngine::UIElements::MeshBuilderNative::MakeTexturedRect_Injected)> {
  static const MethodInfo* get() {
    static auto* rectParams = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "MeshBuilderNative/NativeRectParams")->this_arg;
    static auto* posZ = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* ret = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "MeshWriteDataInterface")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::MeshBuilderNative*), "MakeTexturedRect_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{rectParams, posZ, ret});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::MeshBuilderNative::MakeVectorGraphicsStretchBackground_Injected
// Il2CppName: MakeVectorGraphicsStretchBackground_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::ArrayW<::UnityEngine::UIElements::Vertex>, ::ArrayW<uint16_t>, float, float, ByRef<::UnityEngine::Rect>, ByRef<::UnityEngine::Rect>, ::UnityEngine::ScaleMode, ByRef<::UnityEngine::Color>, ByRef<::UnityEngine::UIElements::MeshBuilderNative::NativeColorPage>, int, ByRef<int>, ByRef<int>, ByRef<::UnityEngine::UIElements::MeshWriteDataInterface>)>(&UnityEngine::UIElements::MeshBuilderNative::MakeVectorGraphicsStretchBackground_Injected)> {
  static const MethodInfo* get() {
    static auto* svgVertices = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "Vertex"), 1)->byval_arg;
    static auto* svgIndices = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "UInt16"), 1)->byval_arg;
    static auto* svgWidth = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* svgHeight = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* targetRect = &::il2cpp_utils::GetClassFromName("UnityEngine", "Rect")->this_arg;
    static auto* sourceUV = &::il2cpp_utils::GetClassFromName("UnityEngine", "Rect")->this_arg;
    static auto* scaleMode = &::il2cpp_utils::GetClassFromName("UnityEngine", "ScaleMode")->byval_arg;
    static auto* tint = &::il2cpp_utils::GetClassFromName("UnityEngine", "Color")->this_arg;
    static auto* colorPage = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "MeshBuilderNative/NativeColorPage")->this_arg;
    static auto* settingIndexOffset = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* finalVertexCount = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    static auto* finalIndexCount = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    static auto* ret = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "MeshWriteDataInterface")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::MeshBuilderNative*), "MakeVectorGraphicsStretchBackground_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{svgVertices, svgIndices, svgWidth, svgHeight, targetRect, sourceUV, scaleMode, tint, colorPage, settingIndexOffset, finalVertexCount, finalIndexCount, ret});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::MeshBuilderNative::MakeVectorGraphics9SliceBackground_Injected
// Il2CppName: MakeVectorGraphics9SliceBackground_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::ArrayW<::UnityEngine::UIElements::Vertex>, ::ArrayW<uint16_t>, float, float, ByRef<::UnityEngine::Rect>, ByRef<::UnityEngine::Vector4>, ByRef<::UnityEngine::Color>, ByRef<::UnityEngine::UIElements::MeshBuilderNative::NativeColorPage>, int, ByRef<::UnityEngine::UIElements::MeshWriteDataInterface>)>(&UnityEngine::UIElements::MeshBuilderNative::MakeVectorGraphics9SliceBackground_Injected)> {
  static const MethodInfo* get() {
    static auto* svgVertices = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "Vertex"), 1)->byval_arg;
    static auto* svgIndices = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "UInt16"), 1)->byval_arg;
    static auto* svgWidth = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* svgHeight = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* targetRect = &::il2cpp_utils::GetClassFromName("UnityEngine", "Rect")->this_arg;
    static auto* sliceLTRB = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector4")->this_arg;
    static auto* tint = &::il2cpp_utils::GetClassFromName("UnityEngine", "Color")->this_arg;
    static auto* colorPage = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "MeshBuilderNative/NativeColorPage")->this_arg;
    static auto* settingIndexOffset = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* ret = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "MeshWriteDataInterface")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::MeshBuilderNative*), "MakeVectorGraphics9SliceBackground_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{svgVertices, svgIndices, svgWidth, svgHeight, targetRect, sliceLTRB, tint, colorPage, settingIndexOffset, ret});
  }
};
