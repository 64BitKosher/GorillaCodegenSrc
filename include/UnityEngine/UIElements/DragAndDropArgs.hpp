// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Including type: UnityEngine.UIElements.IListDragAndDropArgs
#include "UnityEngine/UIElements/IListDragAndDropArgs.hpp"
// Including type: UnityEngine.UIElements.DragAndDropPosition
#include "UnityEngine/UIElements/DragAndDropPosition.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::UIElements
namespace UnityEngine::UIElements {
  // Forward declaring type: DragAndDropData
  class DragAndDropData;
}
// Completed forward declares
// Type namespace: UnityEngine.UIElements
namespace UnityEngine::UIElements {
  // Forward declaring type: DragAndDropArgs
  struct DragAndDropArgs;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::UIElements::DragAndDropArgs, "UnityEngine.UIElements", "DragAndDropArgs");
// Type namespace: UnityEngine.UIElements
namespace UnityEngine::UIElements {
  // Size: 0x20
  #pragma pack(push, 1)
  // WARNING Layout: Sequential may not be correctly taken into account!
  // Autogenerated type: UnityEngine.UIElements.DragAndDropArgs
  // [TokenAttribute] Offset: FFFFFFFF
  struct DragAndDropArgs/*, public ::System::ValueType, public ::UnityEngine::UIElements::IListDragAndDropArgs*/ {
    public:
    public:
    // private System.Object <target>k__BackingField
    // Size: 0x8
    // Offset: 0x0
    ::Il2CppObject* target;
    // Field size check
    static_assert(sizeof(::Il2CppObject*) == 0x8);
    // private System.Int32 <insertAtIndex>k__BackingField
    // Size: 0x4
    // Offset: 0x8
    int insertAtIndex;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private System.Int32 <parentId>k__BackingField
    // Size: 0x4
    // Offset: 0xC
    int parentId;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private System.Int32 <childIndex>k__BackingField
    // Size: 0x4
    // Offset: 0x10
    int childIndex;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private UnityEngine.UIElements.DragAndDropPosition <dragAndDropPosition>k__BackingField
    // Size: 0x4
    // Offset: 0x14
    ::UnityEngine::UIElements::DragAndDropPosition dragAndDropPosition;
    // Field size check
    static_assert(sizeof(::UnityEngine::UIElements::DragAndDropPosition) == 0x4);
    // private UnityEngine.UIElements.DragAndDropData <dragAndDropData>k__BackingField
    // Size: 0x8
    // Offset: 0x18
    ::UnityEngine::UIElements::DragAndDropData* dragAndDropData;
    // Field size check
    static_assert(sizeof(::UnityEngine::UIElements::DragAndDropData*) == 0x8);
    public:
    // Creating value type constructor for type: DragAndDropArgs
    constexpr DragAndDropArgs(::Il2CppObject* target_ = {}, int insertAtIndex_ = {}, int parentId_ = {}, int childIndex_ = {}, ::UnityEngine::UIElements::DragAndDropPosition dragAndDropPosition_ = {}, ::UnityEngine::UIElements::DragAndDropData* dragAndDropData_ = {}) noexcept : target{target_}, insertAtIndex{insertAtIndex_}, parentId{parentId_}, childIndex{childIndex_}, dragAndDropPosition{dragAndDropPosition_}, dragAndDropData{dragAndDropData_} {}
    // Creating interface conversion operator: operator ::System::ValueType
    operator ::System::ValueType() noexcept {
      return *reinterpret_cast<::System::ValueType*>(this);
    }
    // Creating interface conversion operator: operator ::UnityEngine::UIElements::IListDragAndDropArgs
    operator ::UnityEngine::UIElements::IListDragAndDropArgs() noexcept {
      return *reinterpret_cast<::UnityEngine::UIElements::IListDragAndDropArgs*>(this);
    }
    // Get instance field reference: private System.Object <target>k__BackingField
    [[deprecated("Use field access instead!")]] ::Il2CppObject*& dyn_$target$k__BackingField();
    // Get instance field reference: private System.Int32 <insertAtIndex>k__BackingField
    [[deprecated("Use field access instead!")]] int& dyn_$insertAtIndex$k__BackingField();
    // Get instance field reference: private System.Int32 <parentId>k__BackingField
    [[deprecated("Use field access instead!")]] int& dyn_$parentId$k__BackingField();
    // Get instance field reference: private System.Int32 <childIndex>k__BackingField
    [[deprecated("Use field access instead!")]] int& dyn_$childIndex$k__BackingField();
    // Get instance field reference: private UnityEngine.UIElements.DragAndDropPosition <dragAndDropPosition>k__BackingField
    [[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::DragAndDropPosition& dyn_$dragAndDropPosition$k__BackingField();
    // Get instance field reference: private UnityEngine.UIElements.DragAndDropData <dragAndDropData>k__BackingField
    [[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::DragAndDropData*& dyn_$dragAndDropData$k__BackingField();
    // public System.Void set_target(System.Object value)
    // Offset: 0x563C978
    void set_target(::Il2CppObject* value);
    // public System.Int32 get_insertAtIndex()
    // Offset: 0x563C980
    int get_insertAtIndex();
    // public System.Void set_insertAtIndex(System.Int32 value)
    // Offset: 0x563C988
    void set_insertAtIndex(int value);
    // public System.Int32 get_parentId()
    // Offset: 0x563C990
    int get_parentId();
    // public System.Void set_parentId(System.Int32 value)
    // Offset: 0x563C998
    void set_parentId(int value);
    // public System.Int32 get_childIndex()
    // Offset: 0x563C9A0
    int get_childIndex();
    // public System.Void set_childIndex(System.Int32 value)
    // Offset: 0x563C9A8
    void set_childIndex(int value);
    // public UnityEngine.UIElements.DragAndDropPosition get_dragAndDropPosition()
    // Offset: 0x563C9B0
    ::UnityEngine::UIElements::DragAndDropPosition get_dragAndDropPosition();
    // public System.Void set_dragAndDropPosition(UnityEngine.UIElements.DragAndDropPosition value)
    // Offset: 0x563C9B8
    void set_dragAndDropPosition(::UnityEngine::UIElements::DragAndDropPosition value);
    // public UnityEngine.UIElements.DragAndDropData get_dragAndDropData()
    // Offset: 0x563C9C0
    ::UnityEngine::UIElements::DragAndDropData* get_dragAndDropData();
    // public System.Void set_dragAndDropData(UnityEngine.UIElements.DragAndDropData value)
    // Offset: 0x563C9C8
    void set_dragAndDropData(::UnityEngine::UIElements::DragAndDropData* value);
  }; // UnityEngine.UIElements.DragAndDropArgs
  #pragma pack(pop)
  static check_size<sizeof(DragAndDropArgs), 24 + sizeof(::UnityEngine::UIElements::DragAndDropData*)> __UnityEngine_UIElements_DragAndDropArgsSizeCheck;
  static_assert(sizeof(DragAndDropArgs) == 0x20);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::UIElements::DragAndDropArgs::set_target
// Il2CppName: set_target
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::DragAndDropArgs::*)(::Il2CppObject*)>(&UnityEngine::UIElements::DragAndDropArgs::set_target)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::DragAndDropArgs), "set_target", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::DragAndDropArgs::get_insertAtIndex
// Il2CppName: get_insertAtIndex
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::UIElements::DragAndDropArgs::*)()>(&UnityEngine::UIElements::DragAndDropArgs::get_insertAtIndex)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::DragAndDropArgs), "get_insertAtIndex", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::DragAndDropArgs::set_insertAtIndex
// Il2CppName: set_insertAtIndex
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::DragAndDropArgs::*)(int)>(&UnityEngine::UIElements::DragAndDropArgs::set_insertAtIndex)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::DragAndDropArgs), "set_insertAtIndex", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::DragAndDropArgs::get_parentId
// Il2CppName: get_parentId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::UIElements::DragAndDropArgs::*)()>(&UnityEngine::UIElements::DragAndDropArgs::get_parentId)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::DragAndDropArgs), "get_parentId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::DragAndDropArgs::set_parentId
// Il2CppName: set_parentId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::DragAndDropArgs::*)(int)>(&UnityEngine::UIElements::DragAndDropArgs::set_parentId)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::DragAndDropArgs), "set_parentId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::DragAndDropArgs::get_childIndex
// Il2CppName: get_childIndex
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::UIElements::DragAndDropArgs::*)()>(&UnityEngine::UIElements::DragAndDropArgs::get_childIndex)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::DragAndDropArgs), "get_childIndex", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::DragAndDropArgs::set_childIndex
// Il2CppName: set_childIndex
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::DragAndDropArgs::*)(int)>(&UnityEngine::UIElements::DragAndDropArgs::set_childIndex)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::DragAndDropArgs), "set_childIndex", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::DragAndDropArgs::get_dragAndDropPosition
// Il2CppName: get_dragAndDropPosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::DragAndDropPosition (UnityEngine::UIElements::DragAndDropArgs::*)()>(&UnityEngine::UIElements::DragAndDropArgs::get_dragAndDropPosition)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::DragAndDropArgs), "get_dragAndDropPosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::DragAndDropArgs::set_dragAndDropPosition
// Il2CppName: set_dragAndDropPosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::DragAndDropArgs::*)(::UnityEngine::UIElements::DragAndDropPosition)>(&UnityEngine::UIElements::DragAndDropArgs::set_dragAndDropPosition)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "DragAndDropPosition")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::DragAndDropArgs), "set_dragAndDropPosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::DragAndDropArgs::get_dragAndDropData
// Il2CppName: get_dragAndDropData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::DragAndDropData* (UnityEngine::UIElements::DragAndDropArgs::*)()>(&UnityEngine::UIElements::DragAndDropArgs::get_dragAndDropData)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::DragAndDropArgs), "get_dragAndDropData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::DragAndDropArgs::set_dragAndDropData
// Il2CppName: set_dragAndDropData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::DragAndDropArgs::*)(::UnityEngine::UIElements::DragAndDropData*)>(&UnityEngine::UIElements::DragAndDropArgs::set_dragAndDropData)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "DragAndDropData")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::DragAndDropArgs), "set_dragAndDropData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
