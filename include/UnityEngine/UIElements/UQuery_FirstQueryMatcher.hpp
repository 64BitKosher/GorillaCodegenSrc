// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.UIElements.UQuery
#include "UnityEngine/UIElements/UQuery.hpp"
// Including type: UnityEngine.UIElements.UQuery/SingleQueryMatcher
#include "UnityEngine/UIElements/UQuery_SingleQueryMatcher.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::UIElements
namespace UnityEngine::UIElements {
  // Skipping declaration: RuleMatcher because it is already included!
  // Forward declaring type: VisualElement
  class VisualElement;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::UIElements::UQuery::FirstQueryMatcher);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::UIElements::UQuery::FirstQueryMatcher*, "UnityEngine.UIElements", "UQuery/FirstQueryMatcher");
// Type namespace: UnityEngine.UIElements
namespace UnityEngine::UIElements {
  // Size: 0x20
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.UIElements.UQuery/FirstQueryMatcher
  // [TokenAttribute] Offset: FFFFFFFF
  class UQuery::FirstQueryMatcher : public ::UnityEngine::UIElements::UQuery::SingleQueryMatcher {
    public:
    // Get static field: static public readonly UnityEngine.UIElements.UQuery/FirstQueryMatcher Instance
    static ::UnityEngine::UIElements::UQuery::FirstQueryMatcher* _get_Instance();
    // Set static field: static public readonly UnityEngine.UIElements.UQuery/FirstQueryMatcher Instance
    static void _set_Instance(::UnityEngine::UIElements::UQuery::FirstQueryMatcher* value);
    // static private System.Void .cctor()
    // Offset: 0x56C3BB4
    static void _cctor();
    // protected override System.Boolean OnRuleMatchedElement(UnityEngine.UIElements.RuleMatcher matcher, UnityEngine.UIElements.VisualElement element)
    // Offset: 0x56C3B34
    // Implemented from: UnityEngine.UIElements.UQuery/UQueryMatcher
    // Base method: System.Boolean UQueryMatcher::OnRuleMatchedElement(UnityEngine.UIElements.RuleMatcher matcher, UnityEngine.UIElements.VisualElement element)
    bool OnRuleMatchedElement(::UnityEngine::UIElements::RuleMatcher matcher, ::UnityEngine::UIElements::VisualElement* element);
    // public override UnityEngine.UIElements.UQuery/SingleQueryMatcher CreateNew()
    // Offset: 0x56C3B58
    // Implemented from: UnityEngine.UIElements.UQuery/SingleQueryMatcher
    // Base method: UnityEngine.UIElements.UQuery/SingleQueryMatcher SingleQueryMatcher::CreateNew()
    ::UnityEngine::UIElements::UQuery::SingleQueryMatcher* CreateNew();
    // public System.Void .ctor()
    // Offset: 0x56C3BAC
    // Implemented from: UnityEngine.UIElements.UQuery/SingleQueryMatcher
    // Base method: System.Void SingleQueryMatcher::.ctor()
    // Base method: System.Void UQueryMatcher::.ctor()
    // Base method: System.Void HierarchyTraversal::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static UQuery::FirstQueryMatcher* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::UQuery::FirstQueryMatcher::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<UQuery::FirstQueryMatcher*, creationType>()));
    }
  }; // UnityEngine.UIElements.UQuery/FirstQueryMatcher
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::UIElements::UQuery::FirstQueryMatcher::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&UnityEngine::UIElements::UQuery::FirstQueryMatcher::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::UQuery::FirstQueryMatcher*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::UQuery::FirstQueryMatcher::OnRuleMatchedElement
// Il2CppName: OnRuleMatchedElement
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::UQuery::FirstQueryMatcher::*)(::UnityEngine::UIElements::RuleMatcher, ::UnityEngine::UIElements::VisualElement*)>(&UnityEngine::UIElements::UQuery::FirstQueryMatcher::OnRuleMatchedElement)> {
  static const MethodInfo* get() {
    static auto* matcher = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "RuleMatcher")->byval_arg;
    static auto* element = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "VisualElement")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::UQuery::FirstQueryMatcher*), "OnRuleMatchedElement", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{matcher, element});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::UQuery::FirstQueryMatcher::CreateNew
// Il2CppName: CreateNew
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::UQuery::SingleQueryMatcher* (UnityEngine::UIElements::UQuery::FirstQueryMatcher::*)()>(&UnityEngine::UIElements::UQuery::FirstQueryMatcher::CreateNew)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::UQuery::FirstQueryMatcher*), "CreateNew", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::UQuery::FirstQueryMatcher::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
