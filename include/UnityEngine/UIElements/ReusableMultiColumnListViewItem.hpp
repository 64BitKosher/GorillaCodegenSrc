// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.UIElements.ReusableListViewItem
#include "UnityEngine/UIElements/ReusableListViewItem.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::UIElements
namespace UnityEngine::UIElements {
  // Forward declaring type: VisualElement
  class VisualElement;
  // Forward declaring type: Columns
  class Columns;
}
// Completed forward declares
// Type namespace: UnityEngine.UIElements
namespace UnityEngine::UIElements {
  // Forward declaring type: ReusableMultiColumnListViewItem
  class ReusableMultiColumnListViewItem;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::UIElements::ReusableMultiColumnListViewItem);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::UIElements::ReusableMultiColumnListViewItem*, "UnityEngine.UIElements", "ReusableMultiColumnListViewItem");
// Type namespace: UnityEngine.UIElements
namespace UnityEngine::UIElements {
  // Size: 0x58
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.UIElements.ReusableMultiColumnListViewItem
  // [TokenAttribute] Offset: FFFFFFFF
  class ReusableMultiColumnListViewItem : public ::UnityEngine::UIElements::ReusableListViewItem {
    public:
    // public System.Void Init(UnityEngine.UIElements.VisualElement container, UnityEngine.UIElements.Columns columns, System.Boolean usesAnimatedDrag)
    // Offset: 0x559F358
    void Init(::UnityEngine::UIElements::VisualElement* container, ::UnityEngine::UIElements::Columns* columns, bool usesAnimatedDrag);
    // public override UnityEngine.UIElements.VisualElement get_rootElement()
    // Offset: 0x55A11F8
    // Implemented from: UnityEngine.UIElements.ReusableListViewItem
    // Base method: UnityEngine.UIElements.VisualElement ReusableListViewItem::get_rootElement()
    ::UnityEngine::UIElements::VisualElement* get_rootElement();
    // public override System.Void Init(UnityEngine.UIElements.VisualElement item)
    // Offset: 0x55A1200
    // Implemented from: UnityEngine.UIElements.ReusableCollectionItem
    // Base method: System.Void ReusableCollectionItem::Init(UnityEngine.UIElements.VisualElement item)
    void Init(::UnityEngine::UIElements::VisualElement* item);
    // public System.Void .ctor()
    // Offset: 0x55A1204
    // Implemented from: UnityEngine.UIElements.ReusableListViewItem
    // Base method: System.Void ReusableListViewItem::.ctor()
    // Base method: System.Void ReusableCollectionItem::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static ReusableMultiColumnListViewItem* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::ReusableMultiColumnListViewItem::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<ReusableMultiColumnListViewItem*, creationType>()));
    }
  }; // UnityEngine.UIElements.ReusableMultiColumnListViewItem
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::UIElements::ReusableMultiColumnListViewItem::Init
// Il2CppName: Init
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::ReusableMultiColumnListViewItem::*)(::UnityEngine::UIElements::VisualElement*, ::UnityEngine::UIElements::Columns*, bool)>(&UnityEngine::UIElements::ReusableMultiColumnListViewItem::Init)> {
  static const MethodInfo* get() {
    static auto* container = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "VisualElement")->byval_arg;
    static auto* columns = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "Columns")->byval_arg;
    static auto* usesAnimatedDrag = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::ReusableMultiColumnListViewItem*), "Init", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{container, columns, usesAnimatedDrag});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::ReusableMultiColumnListViewItem::get_rootElement
// Il2CppName: get_rootElement
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::VisualElement* (UnityEngine::UIElements::ReusableMultiColumnListViewItem::*)()>(&UnityEngine::UIElements::ReusableMultiColumnListViewItem::get_rootElement)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::ReusableMultiColumnListViewItem*), "get_rootElement", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::ReusableMultiColumnListViewItem::Init
// Il2CppName: Init
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::ReusableMultiColumnListViewItem::*)(::UnityEngine::UIElements::VisualElement*)>(&UnityEngine::UIElements::ReusableMultiColumnListViewItem::Init)> {
  static const MethodInfo* get() {
    static auto* item = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "VisualElement")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::ReusableMultiColumnListViewItem*), "Init", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{item});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::ReusableMultiColumnListViewItem::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
