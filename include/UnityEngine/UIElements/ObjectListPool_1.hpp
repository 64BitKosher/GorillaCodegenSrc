// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::UIElements
namespace UnityEngine::UIElements {
  // Skipping declaration: <>c because it is already included!
  // Forward declaring type: ObjectPool`1<T>
  template<typename T>
  class ObjectPool_1;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Completed forward declares
// Type namespace: UnityEngine.UIElements
namespace UnityEngine::UIElements {
  // Forward declaring type: ObjectListPool`1<T>
  template<typename T>
  class ObjectListPool_1;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE_GENERIC_CLASS(::UnityEngine::UIElements::ObjectListPool_1, "UnityEngine.UIElements", "ObjectListPool`1");
// Type namespace: UnityEngine.UIElements
namespace UnityEngine::UIElements {
  // WARNING Size may be invalid!
  // Autogenerated type: UnityEngine.UIElements.ObjectListPool`1
  // [TokenAttribute] Offset: FFFFFFFF
  template<typename T>
  class ObjectListPool_1 : public ::Il2CppObject {
    public:
    // Nested type: ::UnityEngine::UIElements::ObjectListPool_1::$$c<T>
    class $$c;
    // WARNING Size may be invalid!
    // Autogenerated type: UnityEngine.UIElements.ObjectListPool`1/<>c
    // [TokenAttribute] Offset: FFFFFFFF
    // [CompilerGeneratedAttribute] Offset: FFFFFFFF
    class $$c : public ::il2cpp_utils::il2cpp_type_check::NestedType, public ::Il2CppObject {
      public:
      using declaring_type = ObjectListPool_1<T>*;
      static constexpr std::string_view NESTED_NAME = "<>c";
      static constexpr bool IS_VALUE_TYPE = false;
      // Autogenerated static field getter
      // Get static field: static public readonly UnityEngine.UIElements.ObjectListPool`1/<>c<T> <>9
      static typename ::UnityEngine::UIElements::ObjectListPool_1<T>::$$c* _get_$$9() {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::ObjectListPool_1::$$c::_get_$$9");
        return THROW_UNLESS((il2cpp_utils::GetFieldValue<typename ::UnityEngine::UIElements::ObjectListPool_1<T>::$$c*>(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<typename ObjectListPool_1<T>::$$c*>::get(), "<>9")));
      }
      // Autogenerated static field setter
      // Set static field: static public readonly UnityEngine.UIElements.ObjectListPool`1/<>c<T> <>9
      static void _set_$$9(typename ::UnityEngine::UIElements::ObjectListPool_1<T>::$$c* value) {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::ObjectListPool_1::$$c::_set_$$9");
        THROW_UNLESS((il2cpp_utils::SetFieldValue(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<typename ObjectListPool_1<T>::$$c*>::get(), "<>9", value)));
      }
      // static private System.Void .cctor()
      // Offset: 0xFFFFFFFFFFFFFFFF
      static void _cctor() {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::ObjectListPool_1::$$c::.cctor");
        static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<typename ObjectListPool_1<T>::$$c*>::get(), ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
        ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
      }
      // public System.Void .ctor()
      // Offset: 0xFFFFFFFFFFFFFFFF
      template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
      static typename ObjectListPool_1<T>::$$c* New_ctor() {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::ObjectListPool_1::$$c::.ctor");
        return THROW_UNLESS((::il2cpp_utils::New<typename ObjectListPool_1<T>::$$c*, creationType>()));
      }
      // System.Collections.Generic.List`1<T> <.cctor>b__4_0()
      // Offset: 0xFFFFFFFFFFFFFFFF
      ::System::Collections::Generic::List_1<T>* $_cctor$b__4_0() {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::ObjectListPool_1::$$c::<.cctor>b__4_0");
        static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.cctor>b__4_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
        return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<T>*, false>(this, ___internal__method);
      }
    }; // UnityEngine.UIElements.ObjectListPool`1/<>c
    // Could not write size check! Type: UnityEngine.UIElements.ObjectListPool`1/<>c is generic, or has no fields that are valid for size checks!
    // Autogenerated static field getter
    // Get static field: static private UnityEngine.UIElements.ObjectPool`1<System.Collections.Generic.List`1<T>> pool
    static ::UnityEngine::UIElements::ObjectPool_1<::System::Collections::Generic::List_1<T>*>* _get_pool() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::ObjectListPool_1::_get_pool");
      return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::UIElements::ObjectPool_1<::System::Collections::Generic::List_1<T>*>*>(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<ObjectListPool_1<T>*>::get(), "pool"));
    }
    // Autogenerated static field setter
    // Set static field: static private UnityEngine.UIElements.ObjectPool`1<System.Collections.Generic.List`1<T>> pool
    static void _set_pool(::UnityEngine::UIElements::ObjectPool_1<::System::Collections::Generic::List_1<T>*>* value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::ObjectListPool_1::_set_pool");
      THROW_UNLESS(il2cpp_utils::SetFieldValue(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<ObjectListPool_1<T>*>::get(), "pool", value));
    }
    // static public System.Collections.Generic.List`1<T> Get()
    // Offset: 0xFFFFFFFFFFFFFFFF
    static ::System::Collections::Generic::List_1<T>* Get() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::ObjectListPool_1::Get");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<ObjectListPool_1<T>*>::get(), "Get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<T>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
    }
    // static public System.Void Release(System.Collections.Generic.List`1<T> elements)
    // Offset: 0xFFFFFFFFFFFFFFFF
    static void Release(::System::Collections::Generic::List_1<T>* elements) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::ObjectListPool_1::Release");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<ObjectListPool_1<T>*>::get(), "Release", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(elements)})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, elements);
    }
    // static private System.Void .cctor()
    // Offset: 0xFFFFFFFFFFFFFFFF
    static void _cctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::ObjectListPool_1::.cctor");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<ObjectListPool_1<T>*>::get(), ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
    }
  }; // UnityEngine.UIElements.ObjectListPool`1
  // Could not write size check! Type: UnityEngine.UIElements.ObjectListPool`1 is generic, or has no fields that are valid for size checks!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
