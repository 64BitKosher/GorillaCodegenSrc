// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.UIElements.VisualElement
#include "UnityEngine/UIElements/VisualElement.hpp"
// Including type: UnityEngine.UIElements.SliderDirection
#include "UnityEngine/UIElements/SliderDirection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::UIElements
namespace UnityEngine::UIElements {
  // Forward declaring type: Slider
  class Slider;
  // Forward declaring type: RepeatButton
  class RepeatButton;
  // Forward declaring type: ChangeEvent`1<T>
  template<typename T>
  class ChangeEvent_1;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Action`1<T>
  template<typename T>
  class Action_1;
}
// Completed forward declares
// Type namespace: UnityEngine.UIElements
namespace UnityEngine::UIElements {
  // Forward declaring type: Scroller
  class Scroller;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::UIElements::Scroller);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::UIElements::Scroller*, "UnityEngine.UIElements", "Scroller");
// Type namespace: UnityEngine.UIElements
namespace UnityEngine::UIElements {
  // WARNING Size may be invalid!
  // Autogenerated type: UnityEngine.UIElements.Scroller
  // [TokenAttribute] Offset: FFFFFFFF
  class Scroller : public ::UnityEngine::UIElements::VisualElement {
    public:
    // Nested type: ::UnityEngine::UIElements::Scroller::ScrollerSlider
    class ScrollerSlider;
    // Nested type: ::UnityEngine::UIElements::Scroller::UxmlFactory
    class UxmlFactory;
    // Nested type: ::UnityEngine::UIElements::Scroller::UxmlTraits
    class UxmlTraits;
    public:
    // private System.Action`1<System.Single> valueChanged
    // Size: 0x8
    // Offset: 0x3C0
    ::System::Action_1<float>* valueChanged;
    // Field size check
    static_assert(sizeof(::System::Action_1<float>*) == 0x8);
    // private UnityEngine.UIElements.Slider <slider>k__BackingField
    // Size: 0x8
    // Offset: 0x3C8
    ::UnityEngine::UIElements::Slider* slider;
    // Field size check
    static_assert(sizeof(::UnityEngine::UIElements::Slider*) == 0x8);
    // private UnityEngine.UIElements.RepeatButton <lowButton>k__BackingField
    // Size: 0x8
    // Offset: 0x3D0
    ::UnityEngine::UIElements::RepeatButton* lowButton;
    // Field size check
    static_assert(sizeof(::UnityEngine::UIElements::RepeatButton*) == 0x8);
    // private UnityEngine.UIElements.RepeatButton <highButton>k__BackingField
    // Size: 0x8
    // Offset: 0x3D8
    ::UnityEngine::UIElements::RepeatButton* highButton;
    // Field size check
    static_assert(sizeof(::UnityEngine::UIElements::RepeatButton*) == 0x8);
    public:
    // Get static field: static public readonly System.String ussClassName
    static ::StringW _get_ussClassName();
    // Set static field: static public readonly System.String ussClassName
    static void _set_ussClassName(::StringW value);
    // Get static field: static public readonly System.String horizontalVariantUssClassName
    static ::StringW _get_horizontalVariantUssClassName();
    // Set static field: static public readonly System.String horizontalVariantUssClassName
    static void _set_horizontalVariantUssClassName(::StringW value);
    // Get static field: static public readonly System.String verticalVariantUssClassName
    static ::StringW _get_verticalVariantUssClassName();
    // Set static field: static public readonly System.String verticalVariantUssClassName
    static void _set_verticalVariantUssClassName(::StringW value);
    // Get static field: static public readonly System.String sliderUssClassName
    static ::StringW _get_sliderUssClassName();
    // Set static field: static public readonly System.String sliderUssClassName
    static void _set_sliderUssClassName(::StringW value);
    // Get static field: static public readonly System.String lowButtonUssClassName
    static ::StringW _get_lowButtonUssClassName();
    // Set static field: static public readonly System.String lowButtonUssClassName
    static void _set_lowButtonUssClassName(::StringW value);
    // Get static field: static public readonly System.String highButtonUssClassName
    static ::StringW _get_highButtonUssClassName();
    // Set static field: static public readonly System.String highButtonUssClassName
    static void _set_highButtonUssClassName(::StringW value);
    // Get instance field reference: private System.Action`1<System.Single> valueChanged
    [[deprecated("Use field access instead!")]] ::System::Action_1<float>*& dyn_valueChanged();
    // Get instance field reference: private UnityEngine.UIElements.Slider <slider>k__BackingField
    [[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::Slider*& dyn_$slider$k__BackingField();
    // Get instance field reference: private UnityEngine.UIElements.RepeatButton <lowButton>k__BackingField
    [[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::RepeatButton*& dyn_$lowButton$k__BackingField();
    // Get instance field reference: private UnityEngine.UIElements.RepeatButton <highButton>k__BackingField
    [[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::RepeatButton*& dyn_$highButton$k__BackingField();
    // public System.Void add_valueChanged(System.Action`1<System.Single> value)
    // Offset: 0x562CE88
    void add_valueChanged(::System::Action_1<float>* value);
    // public System.Void remove_valueChanged(System.Action`1<System.Single> value)
    // Offset: 0x562CF3C
    void remove_valueChanged(::System::Action_1<float>* value);
    // public UnityEngine.UIElements.Slider get_slider()
    // Offset: 0x562CFF0
    ::UnityEngine::UIElements::Slider* get_slider();
    // private System.Void set_slider(UnityEngine.UIElements.Slider value)
    // Offset: 0x562CFF8
    void set_slider(::UnityEngine::UIElements::Slider* value);
    // public UnityEngine.UIElements.RepeatButton get_lowButton()
    // Offset: 0x562D008
    ::UnityEngine::UIElements::RepeatButton* get_lowButton();
    // private System.Void set_lowButton(UnityEngine.UIElements.RepeatButton value)
    // Offset: 0x562D010
    void set_lowButton(::UnityEngine::UIElements::RepeatButton* value);
    // public UnityEngine.UIElements.RepeatButton get_highButton()
    // Offset: 0x562D020
    ::UnityEngine::UIElements::RepeatButton* get_highButton();
    // private System.Void set_highButton(UnityEngine.UIElements.RepeatButton value)
    // Offset: 0x562D028
    void set_highButton(::UnityEngine::UIElements::RepeatButton* value);
    // public System.Single get_value()
    // Offset: 0x562D038
    float get_value();
    // public System.Void set_value(System.Single value)
    // Offset: 0x562D05C
    void set_value(float value);
    // public System.Single get_lowValue()
    // Offset: 0x562D080
    float get_lowValue();
    // public System.Void set_lowValue(System.Single value)
    // Offset: 0x562D0D0
    void set_lowValue(float value);
    // public System.Single get_highValue()
    // Offset: 0x562D130
    float get_highValue();
    // public System.Void set_highValue(System.Single value)
    // Offset: 0x562D180
    void set_highValue(float value);
    // public System.Void set_direction(UnityEngine.UIElements.SliderDirection value)
    // Offset: 0x562D1E0
    void set_direction(::UnityEngine::UIElements::SliderDirection value);
    // public System.Void .ctor(System.Single lowValue, System.Single highValue, System.Action`1<System.Single> valueChanged, UnityEngine.UIElements.SliderDirection direction)
    // Offset: 0x562D41C
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static Scroller* New_ctor(float lowValue, float highValue, ::System::Action_1<float>* valueChanged, ::UnityEngine::UIElements::SliderDirection direction) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::Scroller::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<Scroller*, creationType>(lowValue, highValue, valueChanged, direction)));
    }
    // public System.Void Adjust(System.Single factor)
    // Offset: 0x562D850
    void Adjust(float factor);
    // private System.Void OnSliderValueChange(UnityEngine.UIElements.ChangeEvent`1<System.Single> evt)
    // Offset: 0x562D8C8
    void OnSliderValueChange(::UnityEngine::UIElements::ChangeEvent_1<float>* evt);
    // public System.Void ScrollPageUp()
    // Offset: 0x562D964
    void ScrollPageUp();
    // public System.Void ScrollPageDown()
    // Offset: 0x562DA5C
    void ScrollPageDown();
    // public System.Void ScrollPageUp(System.Single factor)
    // Offset: 0x562D96C
    void ScrollPageUp(float factor);
    // public System.Void ScrollPageDown(System.Single factor)
    // Offset: 0x562DA64
    void ScrollPageDown(float factor);
    // public System.Void .ctor()
    // Offset: 0x562D408
    // Implemented from: UnityEngine.UIElements.VisualElement
    // Base method: System.Void VisualElement::.ctor()
    // Base method: System.Void Focusable::.ctor()
    // Base method: System.Void CallbackEventHandler::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static Scroller* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::Scroller::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<Scroller*, creationType>()));
    }
    // static private System.Void .cctor()
    // Offset: 0x562DB54
    // Implemented from: UnityEngine.UIElements.VisualElement
    // Base method: System.Void VisualElement::.cctor()
    static void _cctor();
  }; // UnityEngine.UIElements.Scroller
  // WARNING Not writing size check since size may be invalid!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::UIElements::Scroller::add_valueChanged
// Il2CppName: add_valueChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::Scroller::*)(::System::Action_1<float>*)>(&UnityEngine::UIElements::Scroller::add_valueChanged)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Single")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::Scroller*), "add_valueChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::Scroller::remove_valueChanged
// Il2CppName: remove_valueChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::Scroller::*)(::System::Action_1<float>*)>(&UnityEngine::UIElements::Scroller::remove_valueChanged)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Single")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::Scroller*), "remove_valueChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::Scroller::get_slider
// Il2CppName: get_slider
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::Slider* (UnityEngine::UIElements::Scroller::*)()>(&UnityEngine::UIElements::Scroller::get_slider)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::Scroller*), "get_slider", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::Scroller::set_slider
// Il2CppName: set_slider
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::Scroller::*)(::UnityEngine::UIElements::Slider*)>(&UnityEngine::UIElements::Scroller::set_slider)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "Slider")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::Scroller*), "set_slider", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::Scroller::get_lowButton
// Il2CppName: get_lowButton
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::RepeatButton* (UnityEngine::UIElements::Scroller::*)()>(&UnityEngine::UIElements::Scroller::get_lowButton)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::Scroller*), "get_lowButton", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::Scroller::set_lowButton
// Il2CppName: set_lowButton
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::Scroller::*)(::UnityEngine::UIElements::RepeatButton*)>(&UnityEngine::UIElements::Scroller::set_lowButton)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "RepeatButton")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::Scroller*), "set_lowButton", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::Scroller::get_highButton
// Il2CppName: get_highButton
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::RepeatButton* (UnityEngine::UIElements::Scroller::*)()>(&UnityEngine::UIElements::Scroller::get_highButton)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::Scroller*), "get_highButton", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::Scroller::set_highButton
// Il2CppName: set_highButton
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::Scroller::*)(::UnityEngine::UIElements::RepeatButton*)>(&UnityEngine::UIElements::Scroller::set_highButton)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "RepeatButton")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::Scroller*), "set_highButton", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::Scroller::get_value
// Il2CppName: get_value
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::UIElements::Scroller::*)()>(&UnityEngine::UIElements::Scroller::get_value)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::Scroller*), "get_value", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::Scroller::set_value
// Il2CppName: set_value
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::Scroller::*)(float)>(&UnityEngine::UIElements::Scroller::set_value)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::Scroller*), "set_value", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::Scroller::get_lowValue
// Il2CppName: get_lowValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::UIElements::Scroller::*)()>(&UnityEngine::UIElements::Scroller::get_lowValue)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::Scroller*), "get_lowValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::Scroller::set_lowValue
// Il2CppName: set_lowValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::Scroller::*)(float)>(&UnityEngine::UIElements::Scroller::set_lowValue)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::Scroller*), "set_lowValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::Scroller::get_highValue
// Il2CppName: get_highValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::UIElements::Scroller::*)()>(&UnityEngine::UIElements::Scroller::get_highValue)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::Scroller*), "get_highValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::Scroller::set_highValue
// Il2CppName: set_highValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::Scroller::*)(float)>(&UnityEngine::UIElements::Scroller::set_highValue)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::Scroller*), "set_highValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::Scroller::set_direction
// Il2CppName: set_direction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::Scroller::*)(::UnityEngine::UIElements::SliderDirection)>(&UnityEngine::UIElements::Scroller::set_direction)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "SliderDirection")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::Scroller*), "set_direction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::Scroller::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::UIElements::Scroller::Adjust
// Il2CppName: Adjust
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::Scroller::*)(float)>(&UnityEngine::UIElements::Scroller::Adjust)> {
  static const MethodInfo* get() {
    static auto* factor = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::Scroller*), "Adjust", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{factor});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::Scroller::OnSliderValueChange
// Il2CppName: OnSliderValueChange
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::Scroller::*)(::UnityEngine::UIElements::ChangeEvent_1<float>*)>(&UnityEngine::UIElements::Scroller::OnSliderValueChange)> {
  static const MethodInfo* get() {
    static auto* evt = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "ChangeEvent`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Single")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::Scroller*), "OnSliderValueChange", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{evt});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::Scroller::ScrollPageUp
// Il2CppName: ScrollPageUp
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::Scroller::*)()>(&UnityEngine::UIElements::Scroller::ScrollPageUp)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::Scroller*), "ScrollPageUp", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::Scroller::ScrollPageDown
// Il2CppName: ScrollPageDown
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::Scroller::*)()>(&UnityEngine::UIElements::Scroller::ScrollPageDown)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::Scroller*), "ScrollPageDown", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::Scroller::ScrollPageUp
// Il2CppName: ScrollPageUp
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::Scroller::*)(float)>(&UnityEngine::UIElements::Scroller::ScrollPageUp)> {
  static const MethodInfo* get() {
    static auto* factor = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::Scroller*), "ScrollPageUp", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{factor});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::Scroller::ScrollPageDown
// Il2CppName: ScrollPageDown
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::Scroller::*)(float)>(&UnityEngine::UIElements::Scroller::ScrollPageDown)> {
  static const MethodInfo* get() {
    static auto* factor = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::Scroller*), "ScrollPageDown", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{factor});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::Scroller::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::UIElements::Scroller::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&UnityEngine::UIElements::Scroller::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::Scroller*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
