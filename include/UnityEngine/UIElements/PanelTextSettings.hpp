// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.TextCore.Text.TextSettings
#include "UnityEngine/TextCore/Text/TextSettings.hpp"
// Including type: UnityEngine.SystemLanguage
#include "UnityEngine/SystemLanguage.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Func`2<T, TResult>
  template<typename T, typename TResult>
  class Func_2;
  // Forward declaring type: Func`1<TResult>
  template<typename TResult>
  class Func_1;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Skipping declaration: Object because it is already included!
  // Forward declaring type: Font
  class Font;
}
// Forward declaring namespace: UnityEngine::TextCore::Text
namespace UnityEngine::TextCore::Text {
  // Forward declaring type: FontAsset
  class FontAsset;
}
// Completed forward declares
// Type namespace: UnityEngine.UIElements
namespace UnityEngine::UIElements {
  // Forward declaring type: PanelTextSettings
  class PanelTextSettings;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::UIElements::PanelTextSettings);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::UIElements::PanelTextSettings*, "UnityEngine.UIElements", "PanelTextSettings");
// Type namespace: UnityEngine.UIElements
namespace UnityEngine::UIElements {
  // Size: 0xA0
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.UIElements.PanelTextSettings
  // [TokenAttribute] Offset: FFFFFFFF
  class PanelTextSettings : public ::UnityEngine::TextCore::Text::TextSettings {
    public:
    // Get static field: static private UnityEngine.UIElements.PanelTextSettings s_DefaultPanelTextSettings
    static ::UnityEngine::UIElements::PanelTextSettings* _get_s_DefaultPanelTextSettings();
    // Set static field: static private UnityEngine.UIElements.PanelTextSettings s_DefaultPanelTextSettings
    static void _set_s_DefaultPanelTextSettings(::UnityEngine::UIElements::PanelTextSettings* value);
    // Get static field: static System.Func`2<System.String,UnityEngine.Object> EditorGUIUtilityLoad
    static ::System::Func_2<::StringW, ::UnityEngine::Object*>* _get_EditorGUIUtilityLoad();
    // Set static field: static System.Func`2<System.String,UnityEngine.Object> EditorGUIUtilityLoad
    static void _set_EditorGUIUtilityLoad(::System::Func_2<::StringW, ::UnityEngine::Object*>* value);
    // Get static field: static System.Func`1<UnityEngine.SystemLanguage> GetCurrentLanguage
    static ::System::Func_1<::UnityEngine::SystemLanguage>* _get_GetCurrentLanguage();
    // Set static field: static System.Func`1<UnityEngine.SystemLanguage> GetCurrentLanguage
    static void _set_GetCurrentLanguage(::System::Func_1<::UnityEngine::SystemLanguage>* value);
    // Get static field: static readonly System.String s_DefaultEditorPanelTextSettingPath
    static ::StringW _get_s_DefaultEditorPanelTextSettingPath();
    // Set static field: static readonly System.String s_DefaultEditorPanelTextSettingPath
    static void _set_s_DefaultEditorPanelTextSettingPath(::StringW value);
    // static UnityEngine.UIElements.PanelTextSettings get_defaultPanelTextSettings()
    // Offset: 0x56B4398
    static ::UnityEngine::UIElements::PanelTextSettings* get_defaultPanelTextSettings();
    // static System.Void UpdateLocalizationFontAsset()
    // Offset: 0x56B44DC
    static void UpdateLocalizationFontAsset();
    // UnityEngine.TextCore.Text.FontAsset GetCachedFontAsset(UnityEngine.Font font)
    // Offset: 0x56B4A98
    ::UnityEngine::TextCore::Text::FontAsset* GetCachedFontAsset(::UnityEngine::Font* font);
    // public System.Void .ctor()
    // Offset: 0x56B4AA0
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static PanelTextSettings* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PanelTextSettings::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<PanelTextSettings*, creationType>()));
    }
    // static private System.Void .cctor()
    // Offset: 0x56B4AA8
    static void _cctor();
  }; // UnityEngine.UIElements.PanelTextSettings
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::UIElements::PanelTextSettings::get_defaultPanelTextSettings
// Il2CppName: get_defaultPanelTextSettings
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::PanelTextSettings* (*)()>(&UnityEngine::UIElements::PanelTextSettings::get_defaultPanelTextSettings)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::PanelTextSettings*), "get_defaultPanelTextSettings", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::PanelTextSettings::UpdateLocalizationFontAsset
// Il2CppName: UpdateLocalizationFontAsset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&UnityEngine::UIElements::PanelTextSettings::UpdateLocalizationFontAsset)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::PanelTextSettings*), "UpdateLocalizationFontAsset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::PanelTextSettings::GetCachedFontAsset
// Il2CppName: GetCachedFontAsset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::TextCore::Text::FontAsset* (UnityEngine::UIElements::PanelTextSettings::*)(::UnityEngine::Font*)>(&UnityEngine::UIElements::PanelTextSettings::GetCachedFontAsset)> {
  static const MethodInfo* get() {
    static auto* font = &::il2cpp_utils::GetClassFromName("UnityEngine", "Font")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::PanelTextSettings*), "GetCachedFontAsset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{font});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::PanelTextSettings::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::UIElements::PanelTextSettings::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&UnityEngine::UIElements::PanelTextSettings::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::PanelTextSettings*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
