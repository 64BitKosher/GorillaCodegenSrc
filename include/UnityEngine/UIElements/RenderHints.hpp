// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Enum
#include "System/Enum.hpp"
// Completed includes
// Type namespace: UnityEngine.UIElements
namespace UnityEngine::UIElements {
  // Forward declaring type: RenderHints
  struct RenderHints;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::UIElements::RenderHints, "UnityEngine.UIElements", "RenderHints");
// Type namespace: UnityEngine.UIElements
namespace UnityEngine::UIElements {
  // Size: 0x4
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.UIElements.RenderHints
  // [TokenAttribute] Offset: FFFFFFFF
  // [FlagsAttribute] Offset: FFFFFFFF
  struct RenderHints/*, public ::System::Enum*/ {
    public:
    public:
    // public System.Int32 value__
    // Size: 0x4
    // Offset: 0x0
    int value;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Creating value type constructor for type: RenderHints
    constexpr RenderHints(int value_ = {}) noexcept : value{value_} {}
    // Creating interface conversion operator: operator ::System::Enum
    operator ::System::Enum() noexcept {
      return *reinterpret_cast<::System::Enum*>(this);
    }
    // Creating conversion operator: operator int
    constexpr operator int() const noexcept {
      return value;
    }
    // static field const value: static public UnityEngine.UIElements.RenderHints None
    static constexpr const int None = 0;
    // Get static field: static public UnityEngine.UIElements.RenderHints None
    static ::UnityEngine::UIElements::RenderHints _get_None();
    // Set static field: static public UnityEngine.UIElements.RenderHints None
    static void _set_None(::UnityEngine::UIElements::RenderHints value);
    // static field const value: static public UnityEngine.UIElements.RenderHints GroupTransform
    static constexpr const int GroupTransform = 1;
    // Get static field: static public UnityEngine.UIElements.RenderHints GroupTransform
    static ::UnityEngine::UIElements::RenderHints _get_GroupTransform();
    // Set static field: static public UnityEngine.UIElements.RenderHints GroupTransform
    static void _set_GroupTransform(::UnityEngine::UIElements::RenderHints value);
    // static field const value: static public UnityEngine.UIElements.RenderHints BoneTransform
    static constexpr const int BoneTransform = 2;
    // Get static field: static public UnityEngine.UIElements.RenderHints BoneTransform
    static ::UnityEngine::UIElements::RenderHints _get_BoneTransform();
    // Set static field: static public UnityEngine.UIElements.RenderHints BoneTransform
    static void _set_BoneTransform(::UnityEngine::UIElements::RenderHints value);
    // static field const value: static public UnityEngine.UIElements.RenderHints ClipWithScissors
    static constexpr const int ClipWithScissors = 4;
    // Get static field: static public UnityEngine.UIElements.RenderHints ClipWithScissors
    static ::UnityEngine::UIElements::RenderHints _get_ClipWithScissors();
    // Set static field: static public UnityEngine.UIElements.RenderHints ClipWithScissors
    static void _set_ClipWithScissors(::UnityEngine::UIElements::RenderHints value);
    // static field const value: static public UnityEngine.UIElements.RenderHints MaskContainer
    static constexpr const int MaskContainer = 8;
    // Get static field: static public UnityEngine.UIElements.RenderHints MaskContainer
    static ::UnityEngine::UIElements::RenderHints _get_MaskContainer();
    // Set static field: static public UnityEngine.UIElements.RenderHints MaskContainer
    static void _set_MaskContainer(::UnityEngine::UIElements::RenderHints value);
    // static field const value: static public UnityEngine.UIElements.RenderHints DynamicColor
    static constexpr const int DynamicColor = 16;
    // Get static field: static public UnityEngine.UIElements.RenderHints DynamicColor
    static ::UnityEngine::UIElements::RenderHints _get_DynamicColor();
    // Set static field: static public UnityEngine.UIElements.RenderHints DynamicColor
    static void _set_DynamicColor(::UnityEngine::UIElements::RenderHints value);
    // static field const value: static public UnityEngine.UIElements.RenderHints DirtyOffset
    static constexpr const int DirtyOffset = 5;
    // Get static field: static public UnityEngine.UIElements.RenderHints DirtyOffset
    static ::UnityEngine::UIElements::RenderHints _get_DirtyOffset();
    // Set static field: static public UnityEngine.UIElements.RenderHints DirtyOffset
    static void _set_DirtyOffset(::UnityEngine::UIElements::RenderHints value);
    // static field const value: static public UnityEngine.UIElements.RenderHints DirtyGroupTransform
    static constexpr const int DirtyGroupTransform = 32;
    // Get static field: static public UnityEngine.UIElements.RenderHints DirtyGroupTransform
    static ::UnityEngine::UIElements::RenderHints _get_DirtyGroupTransform();
    // Set static field: static public UnityEngine.UIElements.RenderHints DirtyGroupTransform
    static void _set_DirtyGroupTransform(::UnityEngine::UIElements::RenderHints value);
    // static field const value: static public UnityEngine.UIElements.RenderHints DirtyBoneTransform
    static constexpr const int DirtyBoneTransform = 64;
    // Get static field: static public UnityEngine.UIElements.RenderHints DirtyBoneTransform
    static ::UnityEngine::UIElements::RenderHints _get_DirtyBoneTransform();
    // Set static field: static public UnityEngine.UIElements.RenderHints DirtyBoneTransform
    static void _set_DirtyBoneTransform(::UnityEngine::UIElements::RenderHints value);
    // static field const value: static public UnityEngine.UIElements.RenderHints DirtyClipWithScissors
    static constexpr const int DirtyClipWithScissors = 128;
    // Get static field: static public UnityEngine.UIElements.RenderHints DirtyClipWithScissors
    static ::UnityEngine::UIElements::RenderHints _get_DirtyClipWithScissors();
    // Set static field: static public UnityEngine.UIElements.RenderHints DirtyClipWithScissors
    static void _set_DirtyClipWithScissors(::UnityEngine::UIElements::RenderHints value);
    // static field const value: static public UnityEngine.UIElements.RenderHints DirtyMaskContainer
    static constexpr const int DirtyMaskContainer = 256;
    // Get static field: static public UnityEngine.UIElements.RenderHints DirtyMaskContainer
    static ::UnityEngine::UIElements::RenderHints _get_DirtyMaskContainer();
    // Set static field: static public UnityEngine.UIElements.RenderHints DirtyMaskContainer
    static void _set_DirtyMaskContainer(::UnityEngine::UIElements::RenderHints value);
    // static field const value: static public UnityEngine.UIElements.RenderHints DirtyAll
    static constexpr const int DirtyAll = 480;
    // Get static field: static public UnityEngine.UIElements.RenderHints DirtyAll
    static ::UnityEngine::UIElements::RenderHints _get_DirtyAll();
    // Set static field: static public UnityEngine.UIElements.RenderHints DirtyAll
    static void _set_DirtyAll(::UnityEngine::UIElements::RenderHints value);
    // Get instance field reference: public System.Int32 value__
    [[deprecated("Use field access instead!")]] int& dyn_value__();
  }; // UnityEngine.UIElements.RenderHints
  #pragma pack(pop)
  static check_size<sizeof(RenderHints), 0 + sizeof(int)> __UnityEngine_UIElements_RenderHintsSizeCheck;
  static_assert(sizeof(RenderHints) == 0x4);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
