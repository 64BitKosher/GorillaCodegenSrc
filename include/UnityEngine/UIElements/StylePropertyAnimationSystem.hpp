// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.UIElements.IStylePropertyAnimationSystem
#include "UnityEngine/UIElements/IStylePropertyAnimationSystem.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::UIElements
namespace UnityEngine::UIElements {
  // Forward declaring type: VisualElement
  class VisualElement;
  // Forward declaring type: Length
  struct Length;
  // Forward declaring type: Background
  struct Background;
  // Forward declaring type: FontDefinition
  struct FontDefinition;
  // Forward declaring type: TextShadow
  struct TextShadow;
  // Forward declaring type: Scale
  struct Scale;
  // Forward declaring type: Rotate
  struct Rotate;
  // Forward declaring type: Translate
  struct Translate;
  // Forward declaring type: TransformOrigin
  struct TransformOrigin;
  // Forward declaring type: BackgroundPosition
  struct BackgroundPosition;
  // Forward declaring type: BackgroundRepeat
  struct BackgroundRepeat;
  // Forward declaring type: BackgroundSize
  struct BackgroundSize;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
  // Forward declaring type: Dictionary`2<TKey, TValue>
  template<typename TKey, typename TValue>
  class Dictionary_2;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Func`2<T, TResult>
  template<typename T, typename TResult>
  class Func_2;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Color
  struct Color;
  // Forward declaring type: Font
  class Font;
}
// Completed forward declares
// Type namespace: UnityEngine.UIElements
namespace UnityEngine::UIElements {
  // Forward declaring type: StylePropertyAnimationSystem
  class StylePropertyAnimationSystem;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::UIElements::StylePropertyAnimationSystem);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::UIElements::StylePropertyAnimationSystem*, "UnityEngine.UIElements", "StylePropertyAnimationSystem");
// Type namespace: UnityEngine.UIElements
namespace UnityEngine::UIElements {
  // Size: 0xA0
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.UIElements.StylePropertyAnimationSystem
  // [TokenAttribute] Offset: FFFFFFFF
  class StylePropertyAnimationSystem : public ::Il2CppObject/*, public ::UnityEngine::UIElements::IStylePropertyAnimationSystem*/ {
    public:
    // Nested type: ::UnityEngine::UIElements::StylePropertyAnimationSystem::TransitionState
    struct TransitionState;
    // Nested type: ::UnityEngine::UIElements::StylePropertyAnimationSystem::AnimationDataSet_2<TTimingData, TStyleData>
    template<typename TTimingData, typename TStyleData>
    struct AnimationDataSet_2;
    // Nested type: ::UnityEngine::UIElements::StylePropertyAnimationSystem::ElementPropertyPair
    struct ElementPropertyPair;
    // Nested type: ::UnityEngine::UIElements::StylePropertyAnimationSystem::Values
    class Values;
    // Nested type: ::UnityEngine::UIElements::StylePropertyAnimationSystem::Values_1<T>
    template<typename T>
    class Values_1;
    // Nested type: ::UnityEngine::UIElements::StylePropertyAnimationSystem::ValuesFloat
    class ValuesFloat;
    // Nested type: ::UnityEngine::UIElements::StylePropertyAnimationSystem::ValuesInt
    class ValuesInt;
    // Nested type: ::UnityEngine::UIElements::StylePropertyAnimationSystem::ValuesLength
    class ValuesLength;
    // Nested type: ::UnityEngine::UIElements::StylePropertyAnimationSystem::ValuesColor
    class ValuesColor;
    // Nested type: ::UnityEngine::UIElements::StylePropertyAnimationSystem::ValuesDiscrete_1<T>
    template<typename T>
    class ValuesDiscrete_1;
    // Nested type: ::UnityEngine::UIElements::StylePropertyAnimationSystem::ValuesBackground
    class ValuesBackground;
    // Nested type: ::UnityEngine::UIElements::StylePropertyAnimationSystem::ValuesFontDefinition
    class ValuesFontDefinition;
    // Nested type: ::UnityEngine::UIElements::StylePropertyAnimationSystem::ValuesFont
    class ValuesFont;
    // Nested type: ::UnityEngine::UIElements::StylePropertyAnimationSystem::ValuesTextShadow
    class ValuesTextShadow;
    // Nested type: ::UnityEngine::UIElements::StylePropertyAnimationSystem::ValuesScale
    class ValuesScale;
    // Nested type: ::UnityEngine::UIElements::StylePropertyAnimationSystem::ValuesRotate
    class ValuesRotate;
    // Nested type: ::UnityEngine::UIElements::StylePropertyAnimationSystem::ValuesTranslate
    class ValuesTranslate;
    // Nested type: ::UnityEngine::UIElements::StylePropertyAnimationSystem::ValuesTransformOrigin
    class ValuesTransformOrigin;
    // Nested type: ::UnityEngine::UIElements::StylePropertyAnimationSystem::ValuesBackgroundPosition
    class ValuesBackgroundPosition;
    // Nested type: ::UnityEngine::UIElements::StylePropertyAnimationSystem::ValuesBackgroundRepeat
    class ValuesBackgroundRepeat;
    // Nested type: ::UnityEngine::UIElements::StylePropertyAnimationSystem::ValuesBackgroundSize
    class ValuesBackgroundSize;
    public:
    // private System.Int64 m_CurrentTimeMs
    // Size: 0x8
    // Offset: 0x10
    int64_t m_CurrentTimeMs;
    // Field size check
    static_assert(sizeof(int64_t) == 0x8);
    // private UnityEngine.UIElements.StylePropertyAnimationSystem/ValuesFloat m_Floats
    // Size: 0x8
    // Offset: 0x18
    ::UnityEngine::UIElements::StylePropertyAnimationSystem::ValuesFloat* m_Floats;
    // Field size check
    static_assert(sizeof(::UnityEngine::UIElements::StylePropertyAnimationSystem::ValuesFloat*) == 0x8);
    // private UnityEngine.UIElements.StylePropertyAnimationSystem/ValuesInt m_Ints
    // Size: 0x8
    // Offset: 0x20
    ::UnityEngine::UIElements::StylePropertyAnimationSystem::ValuesInt* m_Ints;
    // Field size check
    static_assert(sizeof(::UnityEngine::UIElements::StylePropertyAnimationSystem::ValuesInt*) == 0x8);
    // private UnityEngine.UIElements.StylePropertyAnimationSystem/ValuesLength m_Lengths
    // Size: 0x8
    // Offset: 0x28
    ::UnityEngine::UIElements::StylePropertyAnimationSystem::ValuesLength* m_Lengths;
    // Field size check
    static_assert(sizeof(::UnityEngine::UIElements::StylePropertyAnimationSystem::ValuesLength*) == 0x8);
    // private UnityEngine.UIElements.StylePropertyAnimationSystem/ValuesColor m_Colors
    // Size: 0x8
    // Offset: 0x30
    ::UnityEngine::UIElements::StylePropertyAnimationSystem::ValuesColor* m_Colors;
    // Field size check
    static_assert(sizeof(::UnityEngine::UIElements::StylePropertyAnimationSystem::ValuesColor*) == 0x8);
    // private UnityEngine.UIElements.StylePropertyAnimationSystem/ValuesBackground m_Backgrounds
    // Size: 0x8
    // Offset: 0x38
    ::UnityEngine::UIElements::StylePropertyAnimationSystem::ValuesBackground* m_Backgrounds;
    // Field size check
    static_assert(sizeof(::UnityEngine::UIElements::StylePropertyAnimationSystem::ValuesBackground*) == 0x8);
    // private UnityEngine.UIElements.StylePropertyAnimationSystem/ValuesFontDefinition m_FontDefinitions
    // Size: 0x8
    // Offset: 0x40
    ::UnityEngine::UIElements::StylePropertyAnimationSystem::ValuesFontDefinition* m_FontDefinitions;
    // Field size check
    static_assert(sizeof(::UnityEngine::UIElements::StylePropertyAnimationSystem::ValuesFontDefinition*) == 0x8);
    // private UnityEngine.UIElements.StylePropertyAnimationSystem/ValuesFont m_Fonts
    // Size: 0x8
    // Offset: 0x48
    ::UnityEngine::UIElements::StylePropertyAnimationSystem::ValuesFont* m_Fonts;
    // Field size check
    static_assert(sizeof(::UnityEngine::UIElements::StylePropertyAnimationSystem::ValuesFont*) == 0x8);
    // private UnityEngine.UIElements.StylePropertyAnimationSystem/ValuesTextShadow m_TextShadows
    // Size: 0x8
    // Offset: 0x50
    ::UnityEngine::UIElements::StylePropertyAnimationSystem::ValuesTextShadow* m_TextShadows;
    // Field size check
    static_assert(sizeof(::UnityEngine::UIElements::StylePropertyAnimationSystem::ValuesTextShadow*) == 0x8);
    // private UnityEngine.UIElements.StylePropertyAnimationSystem/ValuesScale m_Scale
    // Size: 0x8
    // Offset: 0x58
    ::UnityEngine::UIElements::StylePropertyAnimationSystem::ValuesScale* m_Scale;
    // Field size check
    static_assert(sizeof(::UnityEngine::UIElements::StylePropertyAnimationSystem::ValuesScale*) == 0x8);
    // private UnityEngine.UIElements.StylePropertyAnimationSystem/ValuesRotate m_Rotate
    // Size: 0x8
    // Offset: 0x60
    ::UnityEngine::UIElements::StylePropertyAnimationSystem::ValuesRotate* m_Rotate;
    // Field size check
    static_assert(sizeof(::UnityEngine::UIElements::StylePropertyAnimationSystem::ValuesRotate*) == 0x8);
    // private UnityEngine.UIElements.StylePropertyAnimationSystem/ValuesTranslate m_Translate
    // Size: 0x8
    // Offset: 0x68
    ::UnityEngine::UIElements::StylePropertyAnimationSystem::ValuesTranslate* m_Translate;
    // Field size check
    static_assert(sizeof(::UnityEngine::UIElements::StylePropertyAnimationSystem::ValuesTranslate*) == 0x8);
    // private UnityEngine.UIElements.StylePropertyAnimationSystem/ValuesTransformOrigin m_TransformOrigin
    // Size: 0x8
    // Offset: 0x70
    ::UnityEngine::UIElements::StylePropertyAnimationSystem::ValuesTransformOrigin* m_TransformOrigin;
    // Field size check
    static_assert(sizeof(::UnityEngine::UIElements::StylePropertyAnimationSystem::ValuesTransformOrigin*) == 0x8);
    // private UnityEngine.UIElements.StylePropertyAnimationSystem/ValuesBackgroundPosition m_BackgroundPosition
    // Size: 0x8
    // Offset: 0x78
    ::UnityEngine::UIElements::StylePropertyAnimationSystem::ValuesBackgroundPosition* m_BackgroundPosition;
    // Field size check
    static_assert(sizeof(::UnityEngine::UIElements::StylePropertyAnimationSystem::ValuesBackgroundPosition*) == 0x8);
    // private UnityEngine.UIElements.StylePropertyAnimationSystem/ValuesBackgroundRepeat m_BackgroundRepeat
    // Size: 0x8
    // Offset: 0x80
    ::UnityEngine::UIElements::StylePropertyAnimationSystem::ValuesBackgroundRepeat* m_BackgroundRepeat;
    // Field size check
    static_assert(sizeof(::UnityEngine::UIElements::StylePropertyAnimationSystem::ValuesBackgroundRepeat*) == 0x8);
    // private UnityEngine.UIElements.StylePropertyAnimationSystem/ValuesBackgroundSize m_BackgroundSize
    // Size: 0x8
    // Offset: 0x88
    ::UnityEngine::UIElements::StylePropertyAnimationSystem::ValuesBackgroundSize* m_BackgroundSize;
    // Field size check
    static_assert(sizeof(::UnityEngine::UIElements::StylePropertyAnimationSystem::ValuesBackgroundSize*) == 0x8);
    // private readonly System.Collections.Generic.List`1<UnityEngine.UIElements.StylePropertyAnimationSystem/Values> m_AllValues
    // Size: 0x8
    // Offset: 0x90
    ::System::Collections::Generic::List_1<::UnityEngine::UIElements::StylePropertyAnimationSystem::Values*>* m_AllValues;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::UnityEngine::UIElements::StylePropertyAnimationSystem::Values*>*) == 0x8);
    // private readonly System.Collections.Generic.Dictionary`2<UnityEngine.UIElements.StyleSheets.StylePropertyId,UnityEngine.UIElements.StylePropertyAnimationSystem/Values> m_PropertyToValues
    // Size: 0x8
    // Offset: 0x98
    ::System::Collections::Generic::Dictionary_2<::UnityEngine::UIElements::StyleSheets::StylePropertyId, ::UnityEngine::UIElements::StylePropertyAnimationSystem::Values*>* m_PropertyToValues;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::Dictionary_2<::UnityEngine::UIElements::StyleSheets::StylePropertyId, ::UnityEngine::UIElements::StylePropertyAnimationSystem::Values*>*) == 0x8);
    public:
    // Creating interface conversion operator: operator ::UnityEngine::UIElements::IStylePropertyAnimationSystem
    operator ::UnityEngine::UIElements::IStylePropertyAnimationSystem() noexcept {
      return *reinterpret_cast<::UnityEngine::UIElements::IStylePropertyAnimationSystem*>(this);
    }
    // Get instance field reference: private System.Int64 m_CurrentTimeMs
    [[deprecated("Use field access instead!")]] int64_t& dyn_m_CurrentTimeMs();
    // Get instance field reference: private UnityEngine.UIElements.StylePropertyAnimationSystem/ValuesFloat m_Floats
    [[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::StylePropertyAnimationSystem::ValuesFloat*& dyn_m_Floats();
    // Get instance field reference: private UnityEngine.UIElements.StylePropertyAnimationSystem/ValuesInt m_Ints
    [[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::StylePropertyAnimationSystem::ValuesInt*& dyn_m_Ints();
    // Get instance field reference: private UnityEngine.UIElements.StylePropertyAnimationSystem/ValuesLength m_Lengths
    [[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::StylePropertyAnimationSystem::ValuesLength*& dyn_m_Lengths();
    // Get instance field reference: private UnityEngine.UIElements.StylePropertyAnimationSystem/ValuesColor m_Colors
    [[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::StylePropertyAnimationSystem::ValuesColor*& dyn_m_Colors();
    // Get instance field reference: private UnityEngine.UIElements.StylePropertyAnimationSystem/ValuesBackground m_Backgrounds
    [[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::StylePropertyAnimationSystem::ValuesBackground*& dyn_m_Backgrounds();
    // Get instance field reference: private UnityEngine.UIElements.StylePropertyAnimationSystem/ValuesFontDefinition m_FontDefinitions
    [[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::StylePropertyAnimationSystem::ValuesFontDefinition*& dyn_m_FontDefinitions();
    // Get instance field reference: private UnityEngine.UIElements.StylePropertyAnimationSystem/ValuesFont m_Fonts
    [[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::StylePropertyAnimationSystem::ValuesFont*& dyn_m_Fonts();
    // Get instance field reference: private UnityEngine.UIElements.StylePropertyAnimationSystem/ValuesTextShadow m_TextShadows
    [[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::StylePropertyAnimationSystem::ValuesTextShadow*& dyn_m_TextShadows();
    // Get instance field reference: private UnityEngine.UIElements.StylePropertyAnimationSystem/ValuesScale m_Scale
    [[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::StylePropertyAnimationSystem::ValuesScale*& dyn_m_Scale();
    // Get instance field reference: private UnityEngine.UIElements.StylePropertyAnimationSystem/ValuesRotate m_Rotate
    [[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::StylePropertyAnimationSystem::ValuesRotate*& dyn_m_Rotate();
    // Get instance field reference: private UnityEngine.UIElements.StylePropertyAnimationSystem/ValuesTranslate m_Translate
    [[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::StylePropertyAnimationSystem::ValuesTranslate*& dyn_m_Translate();
    // Get instance field reference: private UnityEngine.UIElements.StylePropertyAnimationSystem/ValuesTransformOrigin m_TransformOrigin
    [[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::StylePropertyAnimationSystem::ValuesTransformOrigin*& dyn_m_TransformOrigin();
    // Get instance field reference: private UnityEngine.UIElements.StylePropertyAnimationSystem/ValuesBackgroundPosition m_BackgroundPosition
    [[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::StylePropertyAnimationSystem::ValuesBackgroundPosition*& dyn_m_BackgroundPosition();
    // Get instance field reference: private UnityEngine.UIElements.StylePropertyAnimationSystem/ValuesBackgroundRepeat m_BackgroundRepeat
    [[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::StylePropertyAnimationSystem::ValuesBackgroundRepeat*& dyn_m_BackgroundRepeat();
    // Get instance field reference: private UnityEngine.UIElements.StylePropertyAnimationSystem/ValuesBackgroundSize m_BackgroundSize
    [[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::StylePropertyAnimationSystem::ValuesBackgroundSize*& dyn_m_BackgroundSize();
    // Get instance field reference: private readonly System.Collections.Generic.List`1<UnityEngine.UIElements.StylePropertyAnimationSystem/Values> m_AllValues
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::UIElements::StylePropertyAnimationSystem::Values*>*& dyn_m_AllValues();
    // Get instance field reference: private readonly System.Collections.Generic.Dictionary`2<UnityEngine.UIElements.StyleSheets.StylePropertyId,UnityEngine.UIElements.StylePropertyAnimationSystem/Values> m_PropertyToValues
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::UnityEngine::UIElements::StyleSheets::StylePropertyId, ::UnityEngine::UIElements::StylePropertyAnimationSystem::Values*>*& dyn_m_PropertyToValues();
    // public System.Void .ctor()
    // Offset: 0x56AB354
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static StylePropertyAnimationSystem* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::StylePropertyAnimationSystem::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<StylePropertyAnimationSystem*, creationType>()));
    }
    // private T GetOrCreate(ref T values)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class T>
    T GetOrCreate(ByRef<T> values) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::StylePropertyAnimationSystem::GetOrCreate");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetOrCreate", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(values)})));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}));
      return ::il2cpp_utils::RunMethodRethrow<T, false>(this, ___generic__method, byref(values));
    }
    // private System.Boolean StartTransition(UnityEngine.UIElements.VisualElement owner, UnityEngine.UIElements.StyleSheets.StylePropertyId prop, T startValue, T endValue, System.Int32 durationMs, System.Int32 delayMs, System.Func`2<System.Single,System.Single> easingCurve, UnityEngine.UIElements.StylePropertyAnimationSystem/Values`1<T> values)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class T>
    bool StartTransition(::UnityEngine::UIElements::VisualElement* owner, ::UnityEngine::UIElements::StyleSheets::StylePropertyId prop, T startValue, T endValue, int durationMs, int delayMs, ::System::Func_2<float, float>* easingCurve, ::UnityEngine::UIElements::StylePropertyAnimationSystem::Values_1<T>* values) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::StylePropertyAnimationSystem::StartTransition");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartTransition", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(owner), ::il2cpp_utils::ExtractType(prop), ::il2cpp_utils::ExtractType(startValue), ::il2cpp_utils::ExtractType(endValue), ::il2cpp_utils::ExtractType(durationMs), ::il2cpp_utils::ExtractType(delayMs), ::il2cpp_utils::ExtractType(easingCurve), ::il2cpp_utils::ExtractType(values)})));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}));
      return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___generic__method, owner, prop, startValue, endValue, durationMs, delayMs, easingCurve, values);
    }
    // public System.Boolean StartTransition(UnityEngine.UIElements.VisualElement owner, UnityEngine.UIElements.StyleSheets.StylePropertyId prop, System.Single startValue, System.Single endValue, System.Int32 durationMs, System.Int32 delayMs, System.Func`2<System.Single,System.Single> easingCurve)
    // Offset: 0x56AB468
    bool StartTransition(::UnityEngine::UIElements::VisualElement* owner, ::UnityEngine::UIElements::StyleSheets::StylePropertyId prop, float startValue, float endValue, int durationMs, int delayMs, ::System::Func_2<float, float>* easingCurve);
    // public System.Boolean StartTransition(UnityEngine.UIElements.VisualElement owner, UnityEngine.UIElements.StyleSheets.StylePropertyId prop, System.Int32 startValue, System.Int32 endValue, System.Int32 durationMs, System.Int32 delayMs, System.Func`2<System.Single,System.Single> easingCurve)
    // Offset: 0x56AB530
    bool StartTransition(::UnityEngine::UIElements::VisualElement* owner, ::UnityEngine::UIElements::StyleSheets::StylePropertyId prop, int startValue, int endValue, int durationMs, int delayMs, ::System::Func_2<float, float>* easingCurve);
    // public System.Boolean StartTransition(UnityEngine.UIElements.VisualElement owner, UnityEngine.UIElements.StyleSheets.StylePropertyId prop, UnityEngine.UIElements.Length startValue, UnityEngine.UIElements.Length endValue, System.Int32 durationMs, System.Int32 delayMs, System.Func`2<System.Single,System.Single> easingCurve)
    // Offset: 0x56AB608
    bool StartTransition(::UnityEngine::UIElements::VisualElement* owner, ::UnityEngine::UIElements::StyleSheets::StylePropertyId prop, ::UnityEngine::UIElements::Length startValue, ::UnityEngine::UIElements::Length endValue, int durationMs, int delayMs, ::System::Func_2<float, float>* easingCurve);
    // public System.Boolean StartTransition(UnityEngine.UIElements.VisualElement owner, UnityEngine.UIElements.StyleSheets.StylePropertyId prop, UnityEngine.Color startValue, UnityEngine.Color endValue, System.Int32 durationMs, System.Int32 delayMs, System.Func`2<System.Single,System.Single> easingCurve)
    // Offset: 0x56AB6E0
    bool StartTransition(::UnityEngine::UIElements::VisualElement* owner, ::UnityEngine::UIElements::StyleSheets::StylePropertyId prop, ::UnityEngine::Color startValue, ::UnityEngine::Color endValue, int durationMs, int delayMs, ::System::Func_2<float, float>* easingCurve);
    // public System.Boolean StartTransition(UnityEngine.UIElements.VisualElement owner, UnityEngine.UIElements.StyleSheets.StylePropertyId prop, UnityEngine.UIElements.Background startValue, UnityEngine.UIElements.Background endValue, System.Int32 durationMs, System.Int32 delayMs, System.Func`2<System.Single,System.Single> easingCurve)
    // Offset: 0x56AB7F0
    bool StartTransition(::UnityEngine::UIElements::VisualElement* owner, ::UnityEngine::UIElements::StyleSheets::StylePropertyId prop, ::UnityEngine::UIElements::Background startValue, ::UnityEngine::UIElements::Background endValue, int durationMs, int delayMs, ::System::Func_2<float, float>* easingCurve);
    // public System.Boolean StartTransition(UnityEngine.UIElements.VisualElement owner, UnityEngine.UIElements.StyleSheets.StylePropertyId prop, UnityEngine.UIElements.FontDefinition startValue, UnityEngine.UIElements.FontDefinition endValue, System.Int32 durationMs, System.Int32 delayMs, System.Func`2<System.Single,System.Single> easingCurve)
    // Offset: 0x56AB8E8
    bool StartTransition(::UnityEngine::UIElements::VisualElement* owner, ::UnityEngine::UIElements::StyleSheets::StylePropertyId prop, ::UnityEngine::UIElements::FontDefinition startValue, ::UnityEngine::UIElements::FontDefinition endValue, int durationMs, int delayMs, ::System::Func_2<float, float>* easingCurve);
    // public System.Boolean StartTransition(UnityEngine.UIElements.VisualElement owner, UnityEngine.UIElements.StyleSheets.StylePropertyId prop, UnityEngine.Font startValue, UnityEngine.Font endValue, System.Int32 durationMs, System.Int32 delayMs, System.Func`2<System.Single,System.Single> easingCurve)
    // Offset: 0x56AB9D8
    bool StartTransition(::UnityEngine::UIElements::VisualElement* owner, ::UnityEngine::UIElements::StyleSheets::StylePropertyId prop, ::UnityEngine::Font* startValue, ::UnityEngine::Font* endValue, int durationMs, int delayMs, ::System::Func_2<float, float>* easingCurve);
    // public System.Boolean StartTransition(UnityEngine.UIElements.VisualElement owner, UnityEngine.UIElements.StyleSheets.StylePropertyId prop, UnityEngine.UIElements.TextShadow startValue, UnityEngine.UIElements.TextShadow endValue, System.Int32 durationMs, System.Int32 delayMs, System.Func`2<System.Single,System.Single> easingCurve)
    // Offset: 0x56ABAB0
    bool StartTransition(::UnityEngine::UIElements::VisualElement* owner, ::UnityEngine::UIElements::StyleSheets::StylePropertyId prop, ::UnityEngine::UIElements::TextShadow startValue, ::UnityEngine::UIElements::TextShadow endValue, int durationMs, int delayMs, ::System::Func_2<float, float>* easingCurve);
    // public System.Boolean StartTransition(UnityEngine.UIElements.VisualElement owner, UnityEngine.UIElements.StyleSheets.StylePropertyId prop, UnityEngine.UIElements.Scale startValue, UnityEngine.UIElements.Scale endValue, System.Int32 durationMs, System.Int32 delayMs, System.Func`2<System.Single,System.Single> easingCurve)
    // Offset: 0x56ABBC8
    bool StartTransition(::UnityEngine::UIElements::VisualElement* owner, ::UnityEngine::UIElements::StyleSheets::StylePropertyId prop, ::UnityEngine::UIElements::Scale startValue, ::UnityEngine::UIElements::Scale endValue, int durationMs, int delayMs, ::System::Func_2<float, float>* easingCurve);
    // public System.Boolean StartTransition(UnityEngine.UIElements.VisualElement owner, UnityEngine.UIElements.StyleSheets.StylePropertyId prop, UnityEngine.UIElements.Rotate startValue, UnityEngine.UIElements.Rotate endValue, System.Int32 durationMs, System.Int32 delayMs, System.Func`2<System.Single,System.Single> easingCurve)
    // Offset: 0x56ABCB8
    bool StartTransition(::UnityEngine::UIElements::VisualElement* owner, ::UnityEngine::UIElements::StyleSheets::StylePropertyId prop, ::UnityEngine::UIElements::Rotate startValue, ::UnityEngine::UIElements::Rotate endValue, int durationMs, int delayMs, ::System::Func_2<float, float>* easingCurve);
    // public System.Boolean StartTransition(UnityEngine.UIElements.VisualElement owner, UnityEngine.UIElements.StyleSheets.StylePropertyId prop, UnityEngine.UIElements.Translate startValue, UnityEngine.UIElements.Translate endValue, System.Int32 durationMs, System.Int32 delayMs, System.Func`2<System.Single,System.Single> easingCurve)
    // Offset: 0x56ABDD0
    bool StartTransition(::UnityEngine::UIElements::VisualElement* owner, ::UnityEngine::UIElements::StyleSheets::StylePropertyId prop, ::UnityEngine::UIElements::Translate startValue, ::UnityEngine::UIElements::Translate endValue, int durationMs, int delayMs, ::System::Func_2<float, float>* easingCurve);
    // public System.Boolean StartTransition(UnityEngine.UIElements.VisualElement owner, UnityEngine.UIElements.StyleSheets.StylePropertyId prop, UnityEngine.UIElements.TransformOrigin startValue, UnityEngine.UIElements.TransformOrigin endValue, System.Int32 durationMs, System.Int32 delayMs, System.Func`2<System.Single,System.Single> easingCurve)
    // Offset: 0x56ABEE8
    bool StartTransition(::UnityEngine::UIElements::VisualElement* owner, ::UnityEngine::UIElements::StyleSheets::StylePropertyId prop, ::UnityEngine::UIElements::TransformOrigin startValue, ::UnityEngine::UIElements::TransformOrigin endValue, int durationMs, int delayMs, ::System::Func_2<float, float>* easingCurve);
    // public System.Boolean StartTransition(UnityEngine.UIElements.VisualElement owner, UnityEngine.UIElements.StyleSheets.StylePropertyId prop, UnityEngine.UIElements.BackgroundPosition startValue, UnityEngine.UIElements.BackgroundPosition endValue, System.Int32 durationMs, System.Int32 delayMs, System.Func`2<System.Single,System.Single> easingCurve)
    // Offset: 0x56AC000
    bool StartTransition(::UnityEngine::UIElements::VisualElement* owner, ::UnityEngine::UIElements::StyleSheets::StylePropertyId prop, ::UnityEngine::UIElements::BackgroundPosition startValue, ::UnityEngine::UIElements::BackgroundPosition endValue, int durationMs, int delayMs, ::System::Func_2<float, float>* easingCurve);
    // public System.Boolean StartTransition(UnityEngine.UIElements.VisualElement owner, UnityEngine.UIElements.StyleSheets.StylePropertyId prop, UnityEngine.UIElements.BackgroundRepeat startValue, UnityEngine.UIElements.BackgroundRepeat endValue, System.Int32 durationMs, System.Int32 delayMs, System.Func`2<System.Single,System.Single> easingCurve)
    // Offset: 0x56AC0F0
    bool StartTransition(::UnityEngine::UIElements::VisualElement* owner, ::UnityEngine::UIElements::StyleSheets::StylePropertyId prop, ::UnityEngine::UIElements::BackgroundRepeat startValue, ::UnityEngine::UIElements::BackgroundRepeat endValue, int durationMs, int delayMs, ::System::Func_2<float, float>* easingCurve);
    // public System.Boolean StartTransition(UnityEngine.UIElements.VisualElement owner, UnityEngine.UIElements.StyleSheets.StylePropertyId prop, UnityEngine.UIElements.BackgroundSize startValue, UnityEngine.UIElements.BackgroundSize endValue, System.Int32 durationMs, System.Int32 delayMs, System.Func`2<System.Single,System.Single> easingCurve)
    // Offset: 0x56AC1C8
    bool StartTransition(::UnityEngine::UIElements::VisualElement* owner, ::UnityEngine::UIElements::StyleSheets::StylePropertyId prop, ::UnityEngine::UIElements::BackgroundSize startValue, ::UnityEngine::UIElements::BackgroundSize endValue, int durationMs, int delayMs, ::System::Func_2<float, float>* easingCurve);
    // public System.Void CancelAllAnimations()
    // Offset: 0x56AC2E0
    void CancelAllAnimations();
    // public System.Void CancelAllAnimations(UnityEngine.UIElements.VisualElement owner)
    // Offset: 0x56AC430
    void CancelAllAnimations(::UnityEngine::UIElements::VisualElement* owner);
    // public System.Void CancelAnimation(UnityEngine.UIElements.VisualElement owner, UnityEngine.UIElements.StyleSheets.StylePropertyId id)
    // Offset: 0x56AC6E4
    void CancelAnimation(::UnityEngine::UIElements::VisualElement* owner, ::UnityEngine::UIElements::StyleSheets::StylePropertyId id);
    // public System.Void UpdateAnimation(UnityEngine.UIElements.VisualElement owner, UnityEngine.UIElements.StyleSheets.StylePropertyId id)
    // Offset: 0x56AC774
    void UpdateAnimation(::UnityEngine::UIElements::VisualElement* owner, ::UnityEngine::UIElements::StyleSheets::StylePropertyId id);
    // public System.Void GetAllAnimations(UnityEngine.UIElements.VisualElement owner, System.Collections.Generic.List`1<UnityEngine.UIElements.StyleSheets.StylePropertyId> propertyIds)
    // Offset: 0x56AC804
    void GetAllAnimations(::UnityEngine::UIElements::VisualElement* owner, ::System::Collections::Generic::List_1<::UnityEngine::UIElements::StyleSheets::StylePropertyId>* propertyIds);
    // private System.Void UpdateTracking(UnityEngine.UIElements.StylePropertyAnimationSystem/Values`1<T> values)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class T>
    void UpdateTracking(::UnityEngine::UIElements::StylePropertyAnimationSystem::Values_1<T>* values) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::StylePropertyAnimationSystem::UpdateTracking");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateTracking", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(values)})));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___generic__method, values);
    }
    // private System.Int64 CurrentTimeMs()
    // Offset: 0x56AC95C
    int64_t CurrentTimeMs();
    // public System.Void Update()
    // Offset: 0x56AC964
    void Update();
  }; // UnityEngine.UIElements.StylePropertyAnimationSystem
  #pragma pack(pop)
  static check_size<sizeof(StylePropertyAnimationSystem), 152 + sizeof(::System::Collections::Generic::Dictionary_2<::UnityEngine::UIElements::StyleSheets::StylePropertyId, ::UnityEngine::UIElements::StylePropertyAnimationSystem::Values*>*)> __UnityEngine_UIElements_StylePropertyAnimationSystemSizeCheck;
  static_assert(sizeof(StylePropertyAnimationSystem) == 0xA0);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::UIElements::StylePropertyAnimationSystem::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::UIElements::StylePropertyAnimationSystem::GetOrCreate
// Il2CppName: GetOrCreate
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: UnityEngine::UIElements::StylePropertyAnimationSystem::StartTransition
// Il2CppName: StartTransition
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: UnityEngine::UIElements::StylePropertyAnimationSystem::StartTransition
// Il2CppName: StartTransition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::StylePropertyAnimationSystem::*)(::UnityEngine::UIElements::VisualElement*, ::UnityEngine::UIElements::StyleSheets::StylePropertyId, float, float, int, int, ::System::Func_2<float, float>*)>(&UnityEngine::UIElements::StylePropertyAnimationSystem::StartTransition)> {
  static const MethodInfo* get() {
    static auto* owner = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "VisualElement")->byval_arg;
    static auto* prop = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements.StyleSheets", "StylePropertyId")->byval_arg;
    static auto* startValue = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* endValue = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* durationMs = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* delayMs = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* easingCurve = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Func`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Single"), ::il2cpp_utils::GetClassFromName("System", "Single")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::StylePropertyAnimationSystem*), "StartTransition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{owner, prop, startValue, endValue, durationMs, delayMs, easingCurve});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::StylePropertyAnimationSystem::StartTransition
// Il2CppName: StartTransition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::StylePropertyAnimationSystem::*)(::UnityEngine::UIElements::VisualElement*, ::UnityEngine::UIElements::StyleSheets::StylePropertyId, int, int, int, int, ::System::Func_2<float, float>*)>(&UnityEngine::UIElements::StylePropertyAnimationSystem::StartTransition)> {
  static const MethodInfo* get() {
    static auto* owner = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "VisualElement")->byval_arg;
    static auto* prop = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements.StyleSheets", "StylePropertyId")->byval_arg;
    static auto* startValue = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* endValue = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* durationMs = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* delayMs = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* easingCurve = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Func`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Single"), ::il2cpp_utils::GetClassFromName("System", "Single")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::StylePropertyAnimationSystem*), "StartTransition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{owner, prop, startValue, endValue, durationMs, delayMs, easingCurve});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::StylePropertyAnimationSystem::StartTransition
// Il2CppName: StartTransition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::StylePropertyAnimationSystem::*)(::UnityEngine::UIElements::VisualElement*, ::UnityEngine::UIElements::StyleSheets::StylePropertyId, ::UnityEngine::UIElements::Length, ::UnityEngine::UIElements::Length, int, int, ::System::Func_2<float, float>*)>(&UnityEngine::UIElements::StylePropertyAnimationSystem::StartTransition)> {
  static const MethodInfo* get() {
    static auto* owner = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "VisualElement")->byval_arg;
    static auto* prop = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements.StyleSheets", "StylePropertyId")->byval_arg;
    static auto* startValue = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "Length")->byval_arg;
    static auto* endValue = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "Length")->byval_arg;
    static auto* durationMs = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* delayMs = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* easingCurve = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Func`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Single"), ::il2cpp_utils::GetClassFromName("System", "Single")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::StylePropertyAnimationSystem*), "StartTransition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{owner, prop, startValue, endValue, durationMs, delayMs, easingCurve});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::StylePropertyAnimationSystem::StartTransition
// Il2CppName: StartTransition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::StylePropertyAnimationSystem::*)(::UnityEngine::UIElements::VisualElement*, ::UnityEngine::UIElements::StyleSheets::StylePropertyId, ::UnityEngine::Color, ::UnityEngine::Color, int, int, ::System::Func_2<float, float>*)>(&UnityEngine::UIElements::StylePropertyAnimationSystem::StartTransition)> {
  static const MethodInfo* get() {
    static auto* owner = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "VisualElement")->byval_arg;
    static auto* prop = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements.StyleSheets", "StylePropertyId")->byval_arg;
    static auto* startValue = &::il2cpp_utils::GetClassFromName("UnityEngine", "Color")->byval_arg;
    static auto* endValue = &::il2cpp_utils::GetClassFromName("UnityEngine", "Color")->byval_arg;
    static auto* durationMs = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* delayMs = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* easingCurve = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Func`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Single"), ::il2cpp_utils::GetClassFromName("System", "Single")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::StylePropertyAnimationSystem*), "StartTransition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{owner, prop, startValue, endValue, durationMs, delayMs, easingCurve});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::StylePropertyAnimationSystem::StartTransition
// Il2CppName: StartTransition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::StylePropertyAnimationSystem::*)(::UnityEngine::UIElements::VisualElement*, ::UnityEngine::UIElements::StyleSheets::StylePropertyId, ::UnityEngine::UIElements::Background, ::UnityEngine::UIElements::Background, int, int, ::System::Func_2<float, float>*)>(&UnityEngine::UIElements::StylePropertyAnimationSystem::StartTransition)> {
  static const MethodInfo* get() {
    static auto* owner = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "VisualElement")->byval_arg;
    static auto* prop = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements.StyleSheets", "StylePropertyId")->byval_arg;
    static auto* startValue = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "Background")->byval_arg;
    static auto* endValue = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "Background")->byval_arg;
    static auto* durationMs = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* delayMs = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* easingCurve = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Func`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Single"), ::il2cpp_utils::GetClassFromName("System", "Single")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::StylePropertyAnimationSystem*), "StartTransition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{owner, prop, startValue, endValue, durationMs, delayMs, easingCurve});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::StylePropertyAnimationSystem::StartTransition
// Il2CppName: StartTransition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::StylePropertyAnimationSystem::*)(::UnityEngine::UIElements::VisualElement*, ::UnityEngine::UIElements::StyleSheets::StylePropertyId, ::UnityEngine::UIElements::FontDefinition, ::UnityEngine::UIElements::FontDefinition, int, int, ::System::Func_2<float, float>*)>(&UnityEngine::UIElements::StylePropertyAnimationSystem::StartTransition)> {
  static const MethodInfo* get() {
    static auto* owner = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "VisualElement")->byval_arg;
    static auto* prop = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements.StyleSheets", "StylePropertyId")->byval_arg;
    static auto* startValue = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "FontDefinition")->byval_arg;
    static auto* endValue = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "FontDefinition")->byval_arg;
    static auto* durationMs = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* delayMs = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* easingCurve = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Func`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Single"), ::il2cpp_utils::GetClassFromName("System", "Single")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::StylePropertyAnimationSystem*), "StartTransition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{owner, prop, startValue, endValue, durationMs, delayMs, easingCurve});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::StylePropertyAnimationSystem::StartTransition
// Il2CppName: StartTransition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::StylePropertyAnimationSystem::*)(::UnityEngine::UIElements::VisualElement*, ::UnityEngine::UIElements::StyleSheets::StylePropertyId, ::UnityEngine::Font*, ::UnityEngine::Font*, int, int, ::System::Func_2<float, float>*)>(&UnityEngine::UIElements::StylePropertyAnimationSystem::StartTransition)> {
  static const MethodInfo* get() {
    static auto* owner = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "VisualElement")->byval_arg;
    static auto* prop = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements.StyleSheets", "StylePropertyId")->byval_arg;
    static auto* startValue = &::il2cpp_utils::GetClassFromName("UnityEngine", "Font")->byval_arg;
    static auto* endValue = &::il2cpp_utils::GetClassFromName("UnityEngine", "Font")->byval_arg;
    static auto* durationMs = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* delayMs = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* easingCurve = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Func`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Single"), ::il2cpp_utils::GetClassFromName("System", "Single")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::StylePropertyAnimationSystem*), "StartTransition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{owner, prop, startValue, endValue, durationMs, delayMs, easingCurve});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::StylePropertyAnimationSystem::StartTransition
// Il2CppName: StartTransition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::StylePropertyAnimationSystem::*)(::UnityEngine::UIElements::VisualElement*, ::UnityEngine::UIElements::StyleSheets::StylePropertyId, ::UnityEngine::UIElements::TextShadow, ::UnityEngine::UIElements::TextShadow, int, int, ::System::Func_2<float, float>*)>(&UnityEngine::UIElements::StylePropertyAnimationSystem::StartTransition)> {
  static const MethodInfo* get() {
    static auto* owner = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "VisualElement")->byval_arg;
    static auto* prop = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements.StyleSheets", "StylePropertyId")->byval_arg;
    static auto* startValue = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "TextShadow")->byval_arg;
    static auto* endValue = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "TextShadow")->byval_arg;
    static auto* durationMs = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* delayMs = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* easingCurve = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Func`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Single"), ::il2cpp_utils::GetClassFromName("System", "Single")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::StylePropertyAnimationSystem*), "StartTransition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{owner, prop, startValue, endValue, durationMs, delayMs, easingCurve});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::StylePropertyAnimationSystem::StartTransition
// Il2CppName: StartTransition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::StylePropertyAnimationSystem::*)(::UnityEngine::UIElements::VisualElement*, ::UnityEngine::UIElements::StyleSheets::StylePropertyId, ::UnityEngine::UIElements::Scale, ::UnityEngine::UIElements::Scale, int, int, ::System::Func_2<float, float>*)>(&UnityEngine::UIElements::StylePropertyAnimationSystem::StartTransition)> {
  static const MethodInfo* get() {
    static auto* owner = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "VisualElement")->byval_arg;
    static auto* prop = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements.StyleSheets", "StylePropertyId")->byval_arg;
    static auto* startValue = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "Scale")->byval_arg;
    static auto* endValue = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "Scale")->byval_arg;
    static auto* durationMs = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* delayMs = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* easingCurve = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Func`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Single"), ::il2cpp_utils::GetClassFromName("System", "Single")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::StylePropertyAnimationSystem*), "StartTransition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{owner, prop, startValue, endValue, durationMs, delayMs, easingCurve});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::StylePropertyAnimationSystem::StartTransition
// Il2CppName: StartTransition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::StylePropertyAnimationSystem::*)(::UnityEngine::UIElements::VisualElement*, ::UnityEngine::UIElements::StyleSheets::StylePropertyId, ::UnityEngine::UIElements::Rotate, ::UnityEngine::UIElements::Rotate, int, int, ::System::Func_2<float, float>*)>(&UnityEngine::UIElements::StylePropertyAnimationSystem::StartTransition)> {
  static const MethodInfo* get() {
    static auto* owner = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "VisualElement")->byval_arg;
    static auto* prop = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements.StyleSheets", "StylePropertyId")->byval_arg;
    static auto* startValue = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "Rotate")->byval_arg;
    static auto* endValue = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "Rotate")->byval_arg;
    static auto* durationMs = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* delayMs = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* easingCurve = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Func`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Single"), ::il2cpp_utils::GetClassFromName("System", "Single")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::StylePropertyAnimationSystem*), "StartTransition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{owner, prop, startValue, endValue, durationMs, delayMs, easingCurve});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::StylePropertyAnimationSystem::StartTransition
// Il2CppName: StartTransition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::StylePropertyAnimationSystem::*)(::UnityEngine::UIElements::VisualElement*, ::UnityEngine::UIElements::StyleSheets::StylePropertyId, ::UnityEngine::UIElements::Translate, ::UnityEngine::UIElements::Translate, int, int, ::System::Func_2<float, float>*)>(&UnityEngine::UIElements::StylePropertyAnimationSystem::StartTransition)> {
  static const MethodInfo* get() {
    static auto* owner = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "VisualElement")->byval_arg;
    static auto* prop = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements.StyleSheets", "StylePropertyId")->byval_arg;
    static auto* startValue = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "Translate")->byval_arg;
    static auto* endValue = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "Translate")->byval_arg;
    static auto* durationMs = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* delayMs = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* easingCurve = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Func`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Single"), ::il2cpp_utils::GetClassFromName("System", "Single")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::StylePropertyAnimationSystem*), "StartTransition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{owner, prop, startValue, endValue, durationMs, delayMs, easingCurve});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::StylePropertyAnimationSystem::StartTransition
// Il2CppName: StartTransition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::StylePropertyAnimationSystem::*)(::UnityEngine::UIElements::VisualElement*, ::UnityEngine::UIElements::StyleSheets::StylePropertyId, ::UnityEngine::UIElements::TransformOrigin, ::UnityEngine::UIElements::TransformOrigin, int, int, ::System::Func_2<float, float>*)>(&UnityEngine::UIElements::StylePropertyAnimationSystem::StartTransition)> {
  static const MethodInfo* get() {
    static auto* owner = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "VisualElement")->byval_arg;
    static auto* prop = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements.StyleSheets", "StylePropertyId")->byval_arg;
    static auto* startValue = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "TransformOrigin")->byval_arg;
    static auto* endValue = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "TransformOrigin")->byval_arg;
    static auto* durationMs = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* delayMs = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* easingCurve = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Func`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Single"), ::il2cpp_utils::GetClassFromName("System", "Single")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::StylePropertyAnimationSystem*), "StartTransition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{owner, prop, startValue, endValue, durationMs, delayMs, easingCurve});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::StylePropertyAnimationSystem::StartTransition
// Il2CppName: StartTransition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::StylePropertyAnimationSystem::*)(::UnityEngine::UIElements::VisualElement*, ::UnityEngine::UIElements::StyleSheets::StylePropertyId, ::UnityEngine::UIElements::BackgroundPosition, ::UnityEngine::UIElements::BackgroundPosition, int, int, ::System::Func_2<float, float>*)>(&UnityEngine::UIElements::StylePropertyAnimationSystem::StartTransition)> {
  static const MethodInfo* get() {
    static auto* owner = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "VisualElement")->byval_arg;
    static auto* prop = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements.StyleSheets", "StylePropertyId")->byval_arg;
    static auto* startValue = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "BackgroundPosition")->byval_arg;
    static auto* endValue = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "BackgroundPosition")->byval_arg;
    static auto* durationMs = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* delayMs = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* easingCurve = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Func`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Single"), ::il2cpp_utils::GetClassFromName("System", "Single")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::StylePropertyAnimationSystem*), "StartTransition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{owner, prop, startValue, endValue, durationMs, delayMs, easingCurve});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::StylePropertyAnimationSystem::StartTransition
// Il2CppName: StartTransition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::StylePropertyAnimationSystem::*)(::UnityEngine::UIElements::VisualElement*, ::UnityEngine::UIElements::StyleSheets::StylePropertyId, ::UnityEngine::UIElements::BackgroundRepeat, ::UnityEngine::UIElements::BackgroundRepeat, int, int, ::System::Func_2<float, float>*)>(&UnityEngine::UIElements::StylePropertyAnimationSystem::StartTransition)> {
  static const MethodInfo* get() {
    static auto* owner = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "VisualElement")->byval_arg;
    static auto* prop = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements.StyleSheets", "StylePropertyId")->byval_arg;
    static auto* startValue = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "BackgroundRepeat")->byval_arg;
    static auto* endValue = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "BackgroundRepeat")->byval_arg;
    static auto* durationMs = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* delayMs = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* easingCurve = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Func`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Single"), ::il2cpp_utils::GetClassFromName("System", "Single")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::StylePropertyAnimationSystem*), "StartTransition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{owner, prop, startValue, endValue, durationMs, delayMs, easingCurve});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::StylePropertyAnimationSystem::StartTransition
// Il2CppName: StartTransition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::StylePropertyAnimationSystem::*)(::UnityEngine::UIElements::VisualElement*, ::UnityEngine::UIElements::StyleSheets::StylePropertyId, ::UnityEngine::UIElements::BackgroundSize, ::UnityEngine::UIElements::BackgroundSize, int, int, ::System::Func_2<float, float>*)>(&UnityEngine::UIElements::StylePropertyAnimationSystem::StartTransition)> {
  static const MethodInfo* get() {
    static auto* owner = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "VisualElement")->byval_arg;
    static auto* prop = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements.StyleSheets", "StylePropertyId")->byval_arg;
    static auto* startValue = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "BackgroundSize")->byval_arg;
    static auto* endValue = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "BackgroundSize")->byval_arg;
    static auto* durationMs = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* delayMs = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* easingCurve = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Func`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Single"), ::il2cpp_utils::GetClassFromName("System", "Single")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::StylePropertyAnimationSystem*), "StartTransition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{owner, prop, startValue, endValue, durationMs, delayMs, easingCurve});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::StylePropertyAnimationSystem::CancelAllAnimations
// Il2CppName: CancelAllAnimations
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::StylePropertyAnimationSystem::*)()>(&UnityEngine::UIElements::StylePropertyAnimationSystem::CancelAllAnimations)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::StylePropertyAnimationSystem*), "CancelAllAnimations", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::StylePropertyAnimationSystem::CancelAllAnimations
// Il2CppName: CancelAllAnimations
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::StylePropertyAnimationSystem::*)(::UnityEngine::UIElements::VisualElement*)>(&UnityEngine::UIElements::StylePropertyAnimationSystem::CancelAllAnimations)> {
  static const MethodInfo* get() {
    static auto* owner = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "VisualElement")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::StylePropertyAnimationSystem*), "CancelAllAnimations", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{owner});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::StylePropertyAnimationSystem::CancelAnimation
// Il2CppName: CancelAnimation
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::StylePropertyAnimationSystem::*)(::UnityEngine::UIElements::VisualElement*, ::UnityEngine::UIElements::StyleSheets::StylePropertyId)>(&UnityEngine::UIElements::StylePropertyAnimationSystem::CancelAnimation)> {
  static const MethodInfo* get() {
    static auto* owner = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "VisualElement")->byval_arg;
    static auto* id = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements.StyleSheets", "StylePropertyId")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::StylePropertyAnimationSystem*), "CancelAnimation", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{owner, id});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::StylePropertyAnimationSystem::UpdateAnimation
// Il2CppName: UpdateAnimation
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::StylePropertyAnimationSystem::*)(::UnityEngine::UIElements::VisualElement*, ::UnityEngine::UIElements::StyleSheets::StylePropertyId)>(&UnityEngine::UIElements::StylePropertyAnimationSystem::UpdateAnimation)> {
  static const MethodInfo* get() {
    static auto* owner = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "VisualElement")->byval_arg;
    static auto* id = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements.StyleSheets", "StylePropertyId")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::StylePropertyAnimationSystem*), "UpdateAnimation", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{owner, id});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::StylePropertyAnimationSystem::GetAllAnimations
// Il2CppName: GetAllAnimations
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::StylePropertyAnimationSystem::*)(::UnityEngine::UIElements::VisualElement*, ::System::Collections::Generic::List_1<::UnityEngine::UIElements::StyleSheets::StylePropertyId>*)>(&UnityEngine::UIElements::StylePropertyAnimationSystem::GetAllAnimations)> {
  static const MethodInfo* get() {
    static auto* owner = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "VisualElement")->byval_arg;
    static auto* propertyIds = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.UIElements.StyleSheets", "StylePropertyId")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::StylePropertyAnimationSystem*), "GetAllAnimations", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{owner, propertyIds});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::StylePropertyAnimationSystem::UpdateTracking
// Il2CppName: UpdateTracking
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: UnityEngine::UIElements::StylePropertyAnimationSystem::CurrentTimeMs
// Il2CppName: CurrentTimeMs
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int64_t (UnityEngine::UIElements::StylePropertyAnimationSystem::*)()>(&UnityEngine::UIElements::StylePropertyAnimationSystem::CurrentTimeMs)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::StylePropertyAnimationSystem*), "CurrentTimeMs", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::StylePropertyAnimationSystem::Update
// Il2CppName: Update
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::StylePropertyAnimationSystem::*)()>(&UnityEngine::UIElements::StylePropertyAnimationSystem::Update)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::StylePropertyAnimationSystem*), "Update", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
