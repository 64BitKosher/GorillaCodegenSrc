// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.UIElements.EventCategory
#include "UnityEngine/UIElements/EventCategory.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: Dictionary`2<TKey, TValue>
  template<typename TKey, typename TValue>
  class Dictionary_2;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Type
  class Type;
}
// Completed forward declares
// Type namespace: UnityEngine.UIElements
namespace UnityEngine::UIElements {
  // Forward declaring type: EventInterestReflectionUtils
  class EventInterestReflectionUtils;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::UIElements::EventInterestReflectionUtils);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::UIElements::EventInterestReflectionUtils*, "UnityEngine.UIElements", "EventInterestReflectionUtils");
// Type namespace: UnityEngine.UIElements
namespace UnityEngine::UIElements {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.UIElements.EventInterestReflectionUtils
  // [TokenAttribute] Offset: FFFFFFFF
  class EventInterestReflectionUtils : public ::Il2CppObject {
    public:
    // Nested type: ::UnityEngine::UIElements::EventInterestReflectionUtils::DefaultEventInterests
    struct DefaultEventInterests;
    // Size: 0x8
    #pragma pack(push, 1)
    // WARNING Layout: Sequential may not be correctly taken into account!
    // Autogenerated type: UnityEngine.UIElements.EventInterestReflectionUtils/DefaultEventInterests
    // [TokenAttribute] Offset: FFFFFFFF
    struct DefaultEventInterests/*, public ::System::ValueType*/ {
      public:
      public:
      // public System.Int32 DefaultActionCategories
      // Size: 0x4
      // Offset: 0x0
      int DefaultActionCategories;
      // Field size check
      static_assert(sizeof(int) == 0x4);
      // public System.Int32 DefaultActionAtTargetCategories
      // Size: 0x4
      // Offset: 0x4
      int DefaultActionAtTargetCategories;
      // Field size check
      static_assert(sizeof(int) == 0x4);
      public:
      // Creating value type constructor for type: DefaultEventInterests
      constexpr DefaultEventInterests(int DefaultActionCategories_ = {}, int DefaultActionAtTargetCategories_ = {}) noexcept : DefaultActionCategories{DefaultActionCategories_}, DefaultActionAtTargetCategories{DefaultActionAtTargetCategories_} {}
      // Creating interface conversion operator: operator ::System::ValueType
      operator ::System::ValueType() noexcept {
        return *reinterpret_cast<::System::ValueType*>(this);
      }
      // Get instance field reference: public System.Int32 DefaultActionCategories
      [[deprecated("Use field access instead!")]] int& dyn_DefaultActionCategories();
      // Get instance field reference: public System.Int32 DefaultActionAtTargetCategories
      [[deprecated("Use field access instead!")]] int& dyn_DefaultActionAtTargetCategories();
    }; // UnityEngine.UIElements.EventInterestReflectionUtils/DefaultEventInterests
    #pragma pack(pop)
    static check_size<sizeof(EventInterestReflectionUtils::DefaultEventInterests), 4 + sizeof(int)> __UnityEngine_UIElements_EventInterestReflectionUtils_DefaultEventInterestsSizeCheck;
    static_assert(sizeof(EventInterestReflectionUtils::DefaultEventInterests) == 0x8);
    // Get static field: static private readonly System.Collections.Generic.Dictionary`2<System.Type,UnityEngine.UIElements.EventInterestReflectionUtils/DefaultEventInterests> s_DefaultEventInterests
    static ::System::Collections::Generic::Dictionary_2<::System::Type*, ::UnityEngine::UIElements::EventInterestReflectionUtils::DefaultEventInterests>* _get_s_DefaultEventInterests();
    // Set static field: static private readonly System.Collections.Generic.Dictionary`2<System.Type,UnityEngine.UIElements.EventInterestReflectionUtils/DefaultEventInterests> s_DefaultEventInterests
    static void _set_s_DefaultEventInterests(::System::Collections::Generic::Dictionary_2<::System::Type*, ::UnityEngine::UIElements::EventInterestReflectionUtils::DefaultEventInterests>* value);
    // Get static field: static private readonly System.Collections.Generic.Dictionary`2<System.Type,UnityEngine.UIElements.EventCategory> s_EventCategories
    static ::System::Collections::Generic::Dictionary_2<::System::Type*, ::UnityEngine::UIElements::EventCategory>* _get_s_EventCategories();
    // Set static field: static private readonly System.Collections.Generic.Dictionary`2<System.Type,UnityEngine.UIElements.EventCategory> s_EventCategories
    static void _set_s_EventCategories(::System::Collections::Generic::Dictionary_2<::System::Type*, ::UnityEngine::UIElements::EventCategory>* value);
    // static System.Void GetDefaultEventInterests(System.Type elementType, out System.Int32 defaultActionCategories, out System.Int32 defaultActionAtTargetCategories)
    // Offset: 0x55C18DC
    static void GetDefaultEventInterests(::System::Type* elementType, ByRef<int> defaultActionCategories, ByRef<int> defaultActionAtTargetCategories);
    // static private System.Int32 ComputeDefaultEventInterests(System.Type elementType, System.String methodName)
    // Offset: 0x55C1B08
    static int ComputeDefaultEventInterests(::System::Type* elementType, ::StringW methodName);
    // static UnityEngine.UIElements.EventCategory GetEventCategory(System.Type eventType)
    // Offset: 0x55C1D0C
    static ::UnityEngine::UIElements::EventCategory GetEventCategory(::System::Type* eventType);
    // static private System.Void .cctor()
    // Offset: 0x55C1F14
    static void _cctor();
  }; // UnityEngine.UIElements.EventInterestReflectionUtils
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::UIElements::EventInterestReflectionUtils::DefaultEventInterests, "UnityEngine.UIElements", "EventInterestReflectionUtils/DefaultEventInterests");
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::UIElements::EventInterestReflectionUtils::GetDefaultEventInterests
// Il2CppName: GetDefaultEventInterests
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::Type*, ByRef<int>, ByRef<int>)>(&UnityEngine::UIElements::EventInterestReflectionUtils::GetDefaultEventInterests)> {
  static const MethodInfo* get() {
    static auto* elementType = &::il2cpp_utils::GetClassFromName("System", "Type")->byval_arg;
    static auto* defaultActionCategories = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    static auto* defaultActionAtTargetCategories = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::EventInterestReflectionUtils*), "GetDefaultEventInterests", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{elementType, defaultActionCategories, defaultActionAtTargetCategories});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::EventInterestReflectionUtils::ComputeDefaultEventInterests
// Il2CppName: ComputeDefaultEventInterests
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::System::Type*, ::StringW)>(&UnityEngine::UIElements::EventInterestReflectionUtils::ComputeDefaultEventInterests)> {
  static const MethodInfo* get() {
    static auto* elementType = &::il2cpp_utils::GetClassFromName("System", "Type")->byval_arg;
    static auto* methodName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::EventInterestReflectionUtils*), "ComputeDefaultEventInterests", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{elementType, methodName});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::EventInterestReflectionUtils::GetEventCategory
// Il2CppName: GetEventCategory
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::EventCategory (*)(::System::Type*)>(&UnityEngine::UIElements::EventInterestReflectionUtils::GetEventCategory)> {
  static const MethodInfo* get() {
    static auto* eventType = &::il2cpp_utils::GetClassFromName("System", "Type")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::EventInterestReflectionUtils*), "GetEventCategory", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{eventType});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::EventInterestReflectionUtils::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&UnityEngine::UIElements::EventInterestReflectionUtils::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::EventInterestReflectionUtils*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
