// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.UIElements.DoubleField
#include "UnityEngine/UIElements/DoubleField.hpp"
// Including type: UnityEngine.UIElements.TextValueField`1/TextValueInput
#include "UnityEngine/UIElements/TextValueField_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Skipping declaration: Vector3 because it is already included!
}
// Forward declaring namespace: UnityEngine::UIElements
namespace UnityEngine::UIElements {
  // Skipping declaration: DeltaSpeed because it is already included!
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::UIElements::DoubleField::DoubleInput);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::UIElements::DoubleField::DoubleInput*, "UnityEngine.UIElements", "DoubleField/DoubleInput");
// Type namespace: UnityEngine.UIElements
namespace UnityEngine::UIElements {
  // WARNING Size may be invalid!
  // Autogenerated type: UnityEngine.UIElements.DoubleField/DoubleInput
  // [TokenAttribute] Offset: FFFFFFFF
  class DoubleField::DoubleInput : public ::UnityEngine::UIElements::TextValueField_1<double>::TextValueInput {
    public:
    // private UnityEngine.UIElements.DoubleField get_parentDoubleField()
    // Offset: 0x55B4AAC
    ::UnityEngine::UIElements::DoubleField* get_parentDoubleField();
    // public System.Void ApplyInputDeviceDelta(UnityEngine.Vector3 delta, UnityEngine.UIElements.DeltaSpeed speed, System.Double startValue)
    // Offset: 0x55B4B84
    void ApplyInputDeviceDelta(::UnityEngine::Vector3 delta, ::UnityEngine::UIElements::DeltaSpeed speed, double startValue);
    // protected System.String ValueToString(System.Double v)
    // Offset: 0x55B4D18
    ::StringW ValueToString(double v);
    // protected System.Double StringToValue(System.String str)
    // Offset: 0x55B4D64
    double StringToValue(::StringW str);
    // System.Void .ctor()
    // Offset: 0x55B4808
    // Implemented from: UnityEngine.UIElements.TextValueField`1/TextValueInput
    // Base method: System.Void TextValueInput::.ctor()
    // Base method: System.Void TextInputBase::.ctor()
    // Base method: System.Void VisualElement::.ctor()
    // Base method: System.Void Focusable::.ctor()
    // Base method: System.Void CallbackEventHandler::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static DoubleField::DoubleInput* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::DoubleField::DoubleInput::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<DoubleField::DoubleInput*, creationType>()));
    }
    // protected override System.String get_allowedCharacters()
    // Offset: 0x55B4B2C
    // Implemented from: UnityEngine.UIElements.TextValueField`1/TextValueInput
    // Base method: System.String TextValueInput::get_allowedCharacters()
    ::StringW get_allowedCharacters();
  }; // UnityEngine.UIElements.DoubleField/DoubleInput
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::UIElements::DoubleField::DoubleInput::get_parentDoubleField
// Il2CppName: get_parentDoubleField
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::DoubleField* (UnityEngine::UIElements::DoubleField::DoubleInput::*)()>(&UnityEngine::UIElements::DoubleField::DoubleInput::get_parentDoubleField)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::DoubleField::DoubleInput*), "get_parentDoubleField", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::DoubleField::DoubleInput::ApplyInputDeviceDelta
// Il2CppName: ApplyInputDeviceDelta
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::DoubleField::DoubleInput::*)(::UnityEngine::Vector3, ::UnityEngine::UIElements::DeltaSpeed, double)>(&UnityEngine::UIElements::DoubleField::DoubleInput::ApplyInputDeviceDelta)> {
  static const MethodInfo* get() {
    static auto* delta = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* speed = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "DeltaSpeed")->byval_arg;
    static auto* startValue = &::il2cpp_utils::GetClassFromName("System", "Double")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::DoubleField::DoubleInput*), "ApplyInputDeviceDelta", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{delta, speed, startValue});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::DoubleField::DoubleInput::ValueToString
// Il2CppName: ValueToString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (UnityEngine::UIElements::DoubleField::DoubleInput::*)(double)>(&UnityEngine::UIElements::DoubleField::DoubleInput::ValueToString)> {
  static const MethodInfo* get() {
    static auto* v = &::il2cpp_utils::GetClassFromName("System", "Double")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::DoubleField::DoubleInput*), "ValueToString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{v});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::DoubleField::DoubleInput::StringToValue
// Il2CppName: StringToValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<double (UnityEngine::UIElements::DoubleField::DoubleInput::*)(::StringW)>(&UnityEngine::UIElements::DoubleField::DoubleInput::StringToValue)> {
  static const MethodInfo* get() {
    static auto* str = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::DoubleField::DoubleInput*), "StringToValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{str});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::DoubleField::DoubleInput::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::UIElements::DoubleField::DoubleInput::get_allowedCharacters
// Il2CppName: get_allowedCharacters
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (UnityEngine::UIElements::DoubleField::DoubleInput::*)()>(&UnityEngine::UIElements::DoubleField::DoubleInput::get_allowedCharacters)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::DoubleField::DoubleInput*), "get_allowedCharacters", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
