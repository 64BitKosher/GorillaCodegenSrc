// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.UIElements.Focusable
#include "UnityEngine/UIElements/Focusable.hpp"
// Including type: UnityEngine.UIElements.IResolvedStyle
#include "UnityEngine/UIElements/IResolvedStyle.hpp"
// Including type: UnityEngine.UIElements.IStylePropertyAnimations
#include "UnityEngine/UIElements/IStylePropertyAnimations.hpp"
// Including type: UnityEngine.UIElements.ITransform
#include "UnityEngine/UIElements/ITransform.hpp"
// Including type: UnityEngine.UIElements.Experimental.ITransitionAnimations
#include "UnityEngine/UIElements/Experimental/ITransitionAnimations.hpp"
// Including type: UnityEngine.UIElements.IExperimentalFeatures
#include "UnityEngine/UIElements/IExperimentalFeatures.hpp"
// Including type: UnityEngine.UIElements.IVisualElementScheduler
#include "UnityEngine/UIElements/IVisualElementScheduler.hpp"
// Including type: System.Collections.Generic.KeyValuePair`2
#include "System/Collections/Generic/KeyValuePair_2.hpp"
// Including type: UnityEngine.PropertyName
#include "UnityEngine/PropertyName.hpp"
// Including type: UnityEngine.UIElements.VisualElementFlags
#include "UnityEngine/UIElements/VisualElementFlags.hpp"
// Including type: UnityEngine.UIElements.RenderHints
#include "UnityEngine/UIElements/RenderHints.hpp"
// Including type: UnityEngine.Rect
#include "UnityEngine/Rect.hpp"
// Including type: UnityEngine.UIElements.UIR.RenderChainVEData
#include "UnityEngine/UIElements/UIR/RenderChainVEData.hpp"
// Including type: UnityEngine.UIElements.PseudoStates
#include "UnityEngine/UIElements/PseudoStates.hpp"
// Including type: UnityEngine.UIElements.PickingMode
#include "UnityEngine/UIElements/PickingMode.hpp"
// Including type: UnityEngine.UIElements.ComputedStyle
#include "UnityEngine/UIElements/ComputedStyle.hpp"
// Including type: Unity.Profiling.ProfilerMarker
#include "Unity/Profiling/ProfilerMarker.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::UIElements
namespace UnityEngine::UIElements {
  // Forward declaring type: BaseVisualElementPanel
  class BaseVisualElementPanel;
  // Forward declaring type: StyleVariableContext
  class StyleVariableContext;
  // Forward declaring type: MeshGenerationContext
  class MeshGenerationContext;
  // Forward declaring type: VisualTreeAsset
  class VisualTreeAsset;
  // Forward declaring type: InlineStyleAccess
  class InlineStyleAccess;
  // Forward declaring type: StyleSheet
  class StyleSheet;
  // Skipping declaration: DisplayStyle because it is already included!
  // Skipping declaration: FlexDirection because it is already included!
  // Forward declaring type: StyleFloat
  struct StyleFloat;
  // Skipping declaration: Scale because it is already included!
  // Skipping declaration: Visibility because it is already included!
  // Forward declaring type: IStylePropertyAnimationSystem
  class IStylePropertyAnimationSystem;
  // Skipping declaration: Length because it is already included!
  // Skipping declaration: Background because it is already included!
  // Skipping declaration: FontDefinition because it is already included!
  // Skipping declaration: TextShadow because it is already included!
  // Skipping declaration: Translate because it is already included!
  // Skipping declaration: Rotate because it is already included!
  // Skipping declaration: TransformOrigin because it is already included!
  // Skipping declaration: BackgroundPosition because it is already included!
  // Skipping declaration: BackgroundRepeat because it is already included!
  // Skipping declaration: BackgroundSize because it is already included!
  // Forward declaring type: UsageHints
  struct UsageHints;
  // Skipping declaration: IEventHandler because it is already included!
  // Forward declaring type: TooltipEvent
  class TooltipEvent;
  // Forward declaring type: VersionChangeType
  struct VersionChangeType;
  // Forward declaring type: HierarchyChangeType
  struct HierarchyChangeType;
  // Forward declaring type: StyleRule
  class StyleRule;
  // Skipping declaration: RenderTargetMode because it is already included!
  // Forward declaring type: VisualElementAnimationSystem
  class VisualElementAnimationSystem;
  // Forward declaring type: EventCategory
  struct EventCategory;
  // Skipping declaration: Hierarchy because it is already included!
  // Forward declaring type: IPanel
  class IPanel;
  // Forward declaring type: IVisualElementScheduledItem
  class IVisualElementScheduledItem;
  // Forward declaring type: IStyle
  class IStyle;
  // Forward declaring type: ICustomStyle
  class ICustomStyle;
  // Forward declaring type: VisualElementStyleSheetSet
  struct VisualElementStyleSheetSet;
  // Forward declaring type: FocusController
  class FocusController;
  // Forward declaring type: EventBase
  class EventBase;
  // Forward declaring type: DispatchMode
  struct DispatchMode;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Material
  class Material;
  // Skipping declaration: Color because it is already included!
  // Skipping declaration: Vector3 because it is already included!
  // Forward declaring type: Font
  class Font;
  // Skipping declaration: Vector2 because it is already included!
  // Forward declaring type: Quaternion
  struct Quaternion;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
  // Forward declaring type: Dictionary`2<TKey, TValue>
  template<typename TKey, typename TValue>
  class Dictionary_2;
  // Forward declaring type: IEnumerable`1<T>
  template<typename T>
  class IEnumerable_1;
}
// Forward declaring namespace: UnityEngine::Yoga
namespace UnityEngine::Yoga {
  // Forward declaring type: YogaNode
  class YogaNode;
  // Forward declaring type: YogaSize
  struct YogaSize;
  // Forward declaring type: YogaMeasureMode
  struct YogaMeasureMode;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Action`1<T>
  template<typename T>
  class Action_1;
  // Forward declaring type: String
  class String;
  // Forward declaring type: Type
  class Type;
  // Forward declaring type: Nullable`1<T>
  template<typename T>
  struct Nullable_1;
  // Forward declaring type: Func`2<T, TResult>
  template<typename T, typename TResult>
  class Func_2;
  // Forward declaring type: Action`2<T1, T2>
  template<typename T1, typename T2>
  class Action_2;
  // Forward declaring type: Predicate`1<T>
  template<typename T>
  class Predicate_1;
  // Forward declaring type: Action
  class Action;
}
// Forward declaring namespace: UnityEngine::UIElements::Experimental
namespace UnityEngine::UIElements::Experimental {
  // Forward declaring type: IValueAnimationUpdate
  class IValueAnimationUpdate;
  // Forward declaring type: ValueAnimation`1<T>
  template<typename T>
  class ValueAnimation_1;
}
// Forward declaring namespace: System::Text::RegularExpressions
namespace System::Text::RegularExpressions {
  // Forward declaring type: Regex
  class Regex;
}
// Forward declaring namespace: System::Text
namespace System::Text {
  // Forward declaring type: StringBuilder
  class StringBuilder;
}
// Completed forward declares
// Type namespace: UnityEngine.UIElements
namespace UnityEngine::UIElements {
  // Forward declaring type: VisualElement
  class VisualElement;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::UIElements::VisualElement);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::UIElements::VisualElement*, "UnityEngine.UIElements", "VisualElement");
// Type namespace: UnityEngine.UIElements
namespace UnityEngine::UIElements {
  // WARNING Size may be invalid!
  // Autogenerated type: UnityEngine.UIElements.VisualElement
  // [TokenAttribute] Offset: FFFFFFFF
  // [DefaultMemberAttribute] Offset: FFFFFFFF
  class VisualElement : public ::UnityEngine::UIElements::Focusable/*, public ::UnityEngine::UIElements::IResolvedStyle, public ::UnityEngine::UIElements::IStylePropertyAnimations, public ::UnityEngine::UIElements::ITransform, public ::UnityEngine::UIElements::Experimental::ITransitionAnimations, public ::UnityEngine::UIElements::IExperimentalFeatures, public ::UnityEngine::UIElements::IVisualElementScheduler*/ {
    public:
    // Writing base type padding for base size: 0x2A to desired offset: 0x2C
    char ___base_padding[0x2] = {};
    // Nested type: ::UnityEngine::UIElements::VisualElement::UxmlFactory
    class UxmlFactory;
    // Nested type: ::UnityEngine::UIElements::VisualElement::UxmlTraits
    class UxmlTraits;
    // Nested type: ::UnityEngine::UIElements::VisualElement::MeasureMode
    struct MeasureMode;
    // Nested type: ::UnityEngine::UIElements::VisualElement::RenderTargetMode
    struct RenderTargetMode;
    // Nested type: ::UnityEngine::UIElements::VisualElement::Hierarchy
    struct Hierarchy;
    // Nested type: ::UnityEngine::UIElements::VisualElement::BaseVisualElementScheduledItem
    class BaseVisualElementScheduledItem;
    // Nested type: ::UnityEngine::UIElements::VisualElement::VisualElementScheduledItem_1<ActionType>
    template<typename ActionType>
    class VisualElementScheduledItem_1;
    // Nested type: ::UnityEngine::UIElements::VisualElement::TimerStateScheduledItem
    class TimerStateScheduledItem;
    // Nested type: ::UnityEngine::UIElements::VisualElement::SimpleScheduledItem
    class SimpleScheduledItem;
    // Nested type: ::UnityEngine::UIElements::VisualElement::CustomStyleAccess
    class CustomStyleAccess;
    // Nested type: ::UnityEngine::UIElements::VisualElement::TypeData
    class TypeData;
    // Nested type: ::UnityEngine::UIElements::VisualElement::$$c__DisplayClass484_0
    class $$c__DisplayClass484_0;
    // Size: 0x4
    #pragma pack(push, 1)
    // Autogenerated type: UnityEngine.UIElements.VisualElement/RenderTargetMode
    // [TokenAttribute] Offset: FFFFFFFF
    struct RenderTargetMode/*, public ::System::Enum*/ {
      public:
      public:
      // public System.Int32 value__
      // Size: 0x4
      // Offset: 0x0
      int value;
      // Field size check
      static_assert(sizeof(int) == 0x4);
      public:
      // Creating value type constructor for type: RenderTargetMode
      constexpr RenderTargetMode(int value_ = {}) noexcept : value{value_} {}
      // Creating interface conversion operator: operator ::System::Enum
      operator ::System::Enum() noexcept {
        return *reinterpret_cast<::System::Enum*>(this);
      }
      // Creating conversion operator: operator int
      constexpr operator int() const noexcept {
        return value;
      }
      // static field const value: static public UnityEngine.UIElements.VisualElement/RenderTargetMode None
      static constexpr const int None = 0;
      // Get static field: static public UnityEngine.UIElements.VisualElement/RenderTargetMode None
      static ::UnityEngine::UIElements::VisualElement::RenderTargetMode _get_None();
      // Set static field: static public UnityEngine.UIElements.VisualElement/RenderTargetMode None
      static void _set_None(::UnityEngine::UIElements::VisualElement::RenderTargetMode value);
      // static field const value: static public UnityEngine.UIElements.VisualElement/RenderTargetMode NoColorConversion
      static constexpr const int NoColorConversion = 1;
      // Get static field: static public UnityEngine.UIElements.VisualElement/RenderTargetMode NoColorConversion
      static ::UnityEngine::UIElements::VisualElement::RenderTargetMode _get_NoColorConversion();
      // Set static field: static public UnityEngine.UIElements.VisualElement/RenderTargetMode NoColorConversion
      static void _set_NoColorConversion(::UnityEngine::UIElements::VisualElement::RenderTargetMode value);
      // static field const value: static public UnityEngine.UIElements.VisualElement/RenderTargetMode LinearToGamma
      static constexpr const int LinearToGamma = 2;
      // Get static field: static public UnityEngine.UIElements.VisualElement/RenderTargetMode LinearToGamma
      static ::UnityEngine::UIElements::VisualElement::RenderTargetMode _get_LinearToGamma();
      // Set static field: static public UnityEngine.UIElements.VisualElement/RenderTargetMode LinearToGamma
      static void _set_LinearToGamma(::UnityEngine::UIElements::VisualElement::RenderTargetMode value);
      // static field const value: static public UnityEngine.UIElements.VisualElement/RenderTargetMode GammaToLinear
      static constexpr const int GammaToLinear = 3;
      // Get static field: static public UnityEngine.UIElements.VisualElement/RenderTargetMode GammaToLinear
      static ::UnityEngine::UIElements::VisualElement::RenderTargetMode _get_GammaToLinear();
      // Set static field: static public UnityEngine.UIElements.VisualElement/RenderTargetMode GammaToLinear
      static void _set_GammaToLinear(::UnityEngine::UIElements::VisualElement::RenderTargetMode value);
      // Get instance field reference: public System.Int32 value__
      [[deprecated("Use field access instead!")]] int& dyn_value__();
    }; // UnityEngine.UIElements.VisualElement/RenderTargetMode
    #pragma pack(pop)
    static check_size<sizeof(VisualElement::RenderTargetMode), 0 + sizeof(int)> __UnityEngine_UIElements_VisualElement_RenderTargetModeSizeCheck;
    static_assert(sizeof(VisualElement::RenderTargetMode) == 0x4);
    // Size: 0x8
    #pragma pack(push, 1)
    // WARNING Layout: Sequential may not be correctly taken into account!
    // Autogenerated type: UnityEngine.UIElements.VisualElement/Hierarchy
    // [TokenAttribute] Offset: FFFFFFFF
    // [DefaultMemberAttribute] Offset: FFFFFFFF
    struct Hierarchy/*, public ::System::ValueType*/ {
      public:
      public:
      // private readonly UnityEngine.UIElements.VisualElement m_Owner
      // Size: 0x8
      // Offset: 0x0
      ::UnityEngine::UIElements::VisualElement* m_Owner;
      // Field size check
      static_assert(sizeof(::UnityEngine::UIElements::VisualElement*) == 0x8);
      public:
      // Creating value type constructor for type: Hierarchy
      constexpr Hierarchy(::UnityEngine::UIElements::VisualElement* m_Owner_ = {}) noexcept : m_Owner{m_Owner_} {}
      // Creating interface conversion operator: operator ::System::ValueType
      operator ::System::ValueType() noexcept {
        return *reinterpret_cast<::System::ValueType*>(this);
      }
      // Creating conversion operator: operator ::UnityEngine::UIElements::VisualElement*
      constexpr operator ::UnityEngine::UIElements::VisualElement*() const noexcept {
        return m_Owner;
      }
      // static field const value: static private System.String k_InvalidHierarchyChangeMsg
      static constexpr const char* k_InvalidHierarchyChangeMsg = "Cannot modify VisualElement hierarchy during layout calculation";
      // Get static field: static private System.String k_InvalidHierarchyChangeMsg
      static ::StringW _get_k_InvalidHierarchyChangeMsg();
      // Set static field: static private System.String k_InvalidHierarchyChangeMsg
      static void _set_k_InvalidHierarchyChangeMsg(::StringW value);
      // Get instance field reference: private readonly UnityEngine.UIElements.VisualElement m_Owner
      [[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::VisualElement*& dyn_m_Owner();
      // public UnityEngine.UIElements.VisualElement get_parent()
      // Offset: 0x56A2D68
      ::UnityEngine::UIElements::VisualElement* get_parent();
      // System.Collections.Generic.List`1<UnityEngine.UIElements.VisualElement> get_children()
      // Offset: 0x56A2D84
      ::System::Collections::Generic::List_1<::UnityEngine::UIElements::VisualElement*>* get_children();
      // System.Void .ctor(UnityEngine.UIElements.VisualElement element)
      // Offset: 0x56A2DA0
      // ABORTED: conflicts with another method.  Hierarchy(::UnityEngine::UIElements::VisualElement* element);
      // public System.Void Add(UnityEngine.UIElements.VisualElement child)
      // Offset: 0x56A2DA8
      void Add(::UnityEngine::UIElements::VisualElement* child);
      // public System.Void Insert(System.Int32 index, UnityEngine.UIElements.VisualElement child)
      // Offset: 0x56A2E70
      void Insert(int index, ::UnityEngine::UIElements::VisualElement* child);
      // public System.Void Remove(UnityEngine.UIElements.VisualElement child)
      // Offset: 0x56A3310
      void Remove(::UnityEngine::UIElements::VisualElement* child);
      // public System.Void RemoveAt(System.Int32 index)
      // Offset: 0x56A33FC
      void RemoveAt(int index);
      // public System.Void Clear()
      // Offset: 0x56A377C
      void Clear();
      // System.Void BringToFront(UnityEngine.UIElements.VisualElement child)
      // Offset: 0x56A3AA8
      void BringToFront(::UnityEngine::UIElements::VisualElement* child);
      // System.Void SendToBack(UnityEngine.UIElements.VisualElement child)
      // Offset: 0x56A3C3C
      void SendToBack(::UnityEngine::UIElements::VisualElement* child);
      // System.Void PlaceBehind(UnityEngine.UIElements.VisualElement child, UnityEngine.UIElements.VisualElement over)
      // Offset: 0x56A3CD4
      void PlaceBehind(::UnityEngine::UIElements::VisualElement* child, ::UnityEngine::UIElements::VisualElement* over);
      // private System.Void MoveChildElement(UnityEngine.UIElements.VisualElement child, System.Int32 currentIndex, System.Int32 nextIndex)
      // Offset: 0x56A3B5C
      void MoveChildElement(::UnityEngine::UIElements::VisualElement* child, int currentIndex, int nextIndex);
      // public System.Int32 get_childCount()
      // Offset: 0x56A2E20
      int get_childCount();
      // public UnityEngine.UIElements.VisualElement get_Item(System.Int32 key)
      // Offset: 0x56A3DAC
      ::UnityEngine::UIElements::VisualElement* get_Item(int key);
      // public System.Int32 IndexOf(UnityEngine.UIElements.VisualElement element)
      // Offset: 0x56A3E0C
      int IndexOf(::UnityEngine::UIElements::VisualElement* element);
      // public UnityEngine.UIElements.VisualElement ElementAt(System.Int32 index)
      // Offset: 0x56A3E6C
      ::UnityEngine::UIElements::VisualElement* ElementAt(int index);
      // public System.Collections.Generic.IEnumerable`1<UnityEngine.UIElements.VisualElement> Children()
      // Offset: 0x56A3E70
      ::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::VisualElement*>* Children();
      // private System.Void SetParent(UnityEngine.UIElements.VisualElement value)
      // Offset: 0x56A3298
      void SetParent(::UnityEngine::UIElements::VisualElement* value);
      // private System.Void PutChildAtIndex(UnityEngine.UIElements.VisualElement child, System.Int32 index)
      // Offset: 0x56A3150
      void PutChildAtIndex(::UnityEngine::UIElements::VisualElement* child, int index);
      // private System.Void RemoveChildAtIndex(System.Int32 index)
      // Offset: 0x56A3614
      void RemoveChildAtIndex(int index);
      // private System.Void ReleaseChildList()
      // Offset: 0x56A3690
      void ReleaseChildList();
      // public System.Boolean Equals(UnityEngine.UIElements.VisualElement/Hierarchy other)
      // Offset: 0x56A3E8C
      bool Equals(::UnityEngine::UIElements::VisualElement::Hierarchy other);
      // public override System.Boolean Equals(System.Object obj)
      // Offset: 0x56A3EA8
      // Implemented from: System.ValueType
      // Base method: System.Boolean ValueType::Equals(System.Object obj)
      bool Equals(::Il2CppObject* obj);
      // public override System.Int32 GetHashCode()
      // Offset: 0x56A3F20
      // Implemented from: System.ValueType
      // Base method: System.Int32 ValueType::GetHashCode()
      int GetHashCode();
    }; // UnityEngine.UIElements.VisualElement/Hierarchy
    #pragma pack(pop)
    static check_size<sizeof(VisualElement::Hierarchy), 0 + sizeof(::UnityEngine::UIElements::VisualElement*)> __UnityEngine_UIElements_VisualElement_HierarchySizeCheck;
    static_assert(sizeof(VisualElement::Hierarchy) == 0x8);
    public:
    // private System.Int32 <UnityEngine.UIElements.IStylePropertyAnimations.runningAnimationCount>k__BackingField
    // Size: 0x4
    // Offset: 0x2C
    int runningAnimationCount;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private System.Int32 <UnityEngine.UIElements.IStylePropertyAnimations.completedAnimationCount>k__BackingField
    // Size: 0x4
    // Offset: 0x30
    int completedAnimationCount;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private System.String m_Name
    // Size: 0x8
    // Offset: 0x38
    ::StringW m_Name;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private System.Collections.Generic.List`1<System.String> m_ClassList
    // Size: 0x8
    // Offset: 0x40
    ::System::Collections::Generic::List_1<::StringW>* m_ClassList;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::StringW>*) == 0x8);
    // private System.Collections.Generic.List`1<System.Collections.Generic.KeyValuePair`2<UnityEngine.PropertyName,System.Object>> m_PropertyBag
    // Size: 0x8
    // Offset: 0x48
    ::System::Collections::Generic::List_1<::System::Collections::Generic::KeyValuePair_2<::UnityEngine::PropertyName, ::Il2CppObject*>>* m_PropertyBag;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::System::Collections::Generic::KeyValuePair_2<::UnityEngine::PropertyName, ::Il2CppObject*>>*) == 0x8);
    // UnityEngine.UIElements.VisualElementFlags m_Flags
    // Size: 0x4
    // Offset: 0x50
    ::UnityEngine::UIElements::VisualElementFlags m_Flags;
    // Field size check
    static_assert(sizeof(::UnityEngine::UIElements::VisualElementFlags) == 0x4);
    // private System.String m_ViewDataKey
    // Size: 0x8
    // Offset: 0x58
    ::StringW m_ViewDataKey;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private UnityEngine.UIElements.RenderHints m_RenderHints
    // Size: 0x4
    // Offset: 0x60
    ::UnityEngine::UIElements::RenderHints m_RenderHints;
    // Field size check
    static_assert(sizeof(::UnityEngine::UIElements::RenderHints) == 0x4);
    // UnityEngine.Rect lastLayout
    // Size: 0x10
    // Offset: 0x64
    ::UnityEngine::Rect lastLayout;
    // Field size check
    static_assert(sizeof(::UnityEngine::Rect) == 0x10);
    // UnityEngine.Rect lastPseudoPadding
    // Size: 0x10
    // Offset: 0x74
    ::UnityEngine::Rect lastPseudoPadding;
    // Field size check
    static_assert(sizeof(::UnityEngine::Rect) == 0x10);
    // UnityEngine.UIElements.UIR.RenderChainVEData renderChainData
    // Size: 0x148
    // Offset: 0x88
    ::UnityEngine::UIElements::UIR::RenderChainVEData renderChainData;
    // Field size check
    static_assert(sizeof(::UnityEngine::UIElements::UIR::RenderChainVEData) == 0x148);
    // private UnityEngine.Rect m_Layout
    // Size: 0x10
    // Offset: 0x1D0
    ::UnityEngine::Rect m_Layout;
    // Field size check
    static_assert(sizeof(::UnityEngine::Rect) == 0x10);
    // private UnityEngine.Rect m_BoundingBox
    // Size: 0x10
    // Offset: 0x1E0
    ::UnityEngine::Rect m_BoundingBox;
    // Field size check
    static_assert(sizeof(::UnityEngine::Rect) == 0x10);
    // private UnityEngine.Rect m_WorldBoundingBox
    // Size: 0x10
    // Offset: 0x1F0
    ::UnityEngine::Rect m_WorldBoundingBox;
    // Field size check
    static_assert(sizeof(::UnityEngine::Rect) == 0x10);
    // private UnityEngine.Matrix4x4 m_WorldTransformCache
    // Size: 0x40
    // Offset: 0x200
    ::UnityEngine::Matrix4x4 m_WorldTransformCache;
    // Field size check
    static_assert(sizeof(::UnityEngine::Matrix4x4) == 0x40);
    // private UnityEngine.Matrix4x4 m_WorldTransformInverseCache
    // Size: 0x40
    // Offset: 0x240
    ::UnityEngine::Matrix4x4 m_WorldTransformInverseCache;
    // Field size check
    static_assert(sizeof(::UnityEngine::Matrix4x4) == 0x40);
    // private UnityEngine.Rect m_WorldClip
    // Size: 0x10
    // Offset: 0x280
    ::UnityEngine::Rect m_WorldClip;
    // Field size check
    static_assert(sizeof(::UnityEngine::Rect) == 0x10);
    // private UnityEngine.Rect m_WorldClipMinusGroup
    // Size: 0x10
    // Offset: 0x290
    ::UnityEngine::Rect m_WorldClipMinusGroup;
    // Field size check
    static_assert(sizeof(::UnityEngine::Rect) == 0x10);
    // private System.Boolean m_WorldClipIsInfinite
    // Size: 0x1
    // Offset: 0x2A0
    bool m_WorldClipIsInfinite;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // UnityEngine.UIElements.PseudoStates triggerPseudoMask
    // Size: 0x4
    // Offset: 0x2A4
    ::UnityEngine::UIElements::PseudoStates triggerPseudoMask;
    // Field size check
    static_assert(sizeof(::UnityEngine::UIElements::PseudoStates) == 0x4);
    // UnityEngine.UIElements.PseudoStates dependencyPseudoMask
    // Size: 0x4
    // Offset: 0x2A8
    ::UnityEngine::UIElements::PseudoStates dependencyPseudoMask;
    // Field size check
    static_assert(sizeof(::UnityEngine::UIElements::PseudoStates) == 0x4);
    // private UnityEngine.UIElements.PseudoStates m_PseudoStates
    // Size: 0x4
    // Offset: 0x2AC
    ::UnityEngine::UIElements::PseudoStates m_PseudoStates;
    // Field size check
    static_assert(sizeof(::UnityEngine::UIElements::PseudoStates) == 0x4);
    // private System.Int32 <containedPointerIds>k__BackingField
    // Size: 0x4
    // Offset: 0x2B0
    int containedPointerIds;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private UnityEngine.UIElements.PickingMode <pickingMode>k__BackingField
    // Size: 0x4
    // Offset: 0x2B4
    ::UnityEngine::UIElements::PickingMode pickingMode;
    // Field size check
    static_assert(sizeof(::UnityEngine::UIElements::PickingMode) == 0x4);
    // private UnityEngine.Yoga.YogaNode <yogaNode>k__BackingField
    // Size: 0x8
    // Offset: 0x2B8
    ::UnityEngine::Yoga::YogaNode* yogaNode;
    // Field size check
    static_assert(sizeof(::UnityEngine::Yoga::YogaNode*) == 0x8);
    // UnityEngine.UIElements.ComputedStyle m_Style
    // Size: 0xFFFFFFFF
    // Offset: 0x2C0
    ::UnityEngine::UIElements::ComputedStyle m_Style;
    // UnityEngine.UIElements.StyleVariableContext variableContext
    // Size: 0x8
    // Offset: 0x318
    ::UnityEngine::UIElements::StyleVariableContext* variableContext;
    // Field size check
    static_assert(sizeof(::UnityEngine::UIElements::StyleVariableContext*) == 0x8);
    // System.Int32 inheritedStylesHash
    // Size: 0x4
    // Offset: 0x320
    int inheritedStylesHash;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // readonly System.UInt32 controlid
    // Size: 0x4
    // Offset: 0x324
    uint controlid;
    // Field size check
    static_assert(sizeof(uint) == 0x4);
    // System.Int32 imguiContainerDescendantCount
    // Size: 0x4
    // Offset: 0x328
    int imguiContainerDescendantCount;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private System.Boolean <enabledSelf>k__BackingField
    // Size: 0x1
    // Offset: 0x32C
    bool enabledSelf;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Action`1<UnityEngine.UIElements.MeshGenerationContext> <generateVisualContent>k__BackingField
    // Size: 0x8
    // Offset: 0x330
    ::System::Action_1<::UnityEngine::UIElements::MeshGenerationContext*>* generateVisualContent;
    // Field size check
    static_assert(sizeof(::System::Action_1<::UnityEngine::UIElements::MeshGenerationContext*>*) == 0x8);
    // private UnityEngine.UIElements.VisualElement/RenderTargetMode m_SubRenderTargetMode
    // Size: 0x4
    // Offset: 0x338
    ::UnityEngine::UIElements::VisualElement::RenderTargetMode m_SubRenderTargetMode;
    // Field size check
    static_assert(sizeof(::UnityEngine::UIElements::VisualElement::RenderTargetMode) == 0x4);
    // private UnityEngine.Material m_defaultMaterial
    // Size: 0x8
    // Offset: 0x340
    ::UnityEngine::Material* m_defaultMaterial;
    // Field size check
    static_assert(sizeof(::UnityEngine::Material*) == 0x8);
    // private System.Collections.Generic.List`1<UnityEngine.UIElements.Experimental.IValueAnimationUpdate> m_RunningAnimations
    // Size: 0x8
    // Offset: 0x348
    ::System::Collections::Generic::List_1<::UnityEngine::UIElements::Experimental::IValueAnimationUpdate*>* m_RunningAnimations;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::UnityEngine::UIElements::Experimental::IValueAnimationUpdate*>*) == 0x8);
    // private System.UInt32 m_NextParentCachedVersion
    // Size: 0x4
    // Offset: 0x350
    uint m_NextParentCachedVersion;
    // Field size check
    static_assert(sizeof(uint) == 0x4);
    // private System.UInt32 m_NextParentRequiredVersion
    // Size: 0x4
    // Offset: 0x354
    uint m_NextParentRequiredVersion;
    // Field size check
    static_assert(sizeof(uint) == 0x4);
    // private UnityEngine.UIElements.VisualElement m_CachedNextParentWithEventCallback
    // Size: 0x8
    // Offset: 0x358
    ::UnityEngine::UIElements::VisualElement* m_CachedNextParentWithEventCallback;
    // Field size check
    static_assert(sizeof(::UnityEngine::UIElements::VisualElement*) == 0x8);
    // private System.Int32 m_EventCallbackCategories
    // Size: 0x4
    // Offset: 0x360
    int m_EventCallbackCategories;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private System.Int32 m_CachedEventCallbackParentCategories
    // Size: 0x4
    // Offset: 0x364
    int m_CachedEventCallbackParentCategories;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private readonly System.Int32 m_DefaultActionEventCategories
    // Size: 0x4
    // Offset: 0x368
    int m_DefaultActionEventCategories;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private readonly System.Int32 m_DefaultActionAtTargetEventCategories
    // Size: 0x4
    // Offset: 0x36C
    int m_DefaultActionAtTargetEventCategories;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private UnityEngine.UIElements.VisualElement/Hierarchy <hierarchy>k__BackingField
    // Size: 0x8
    // Offset: 0x370
    ::UnityEngine::UIElements::VisualElement::Hierarchy hierarchy;
    // Field size check
    static_assert(sizeof(::UnityEngine::UIElements::VisualElement::Hierarchy) == 0x8);
    // private System.Boolean <isRootVisualContainer>k__BackingField
    // Size: 0x1
    // Offset: 0x378
    bool isRootVisualContainer;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean <cacheAsBitmap>k__BackingField
    // Size: 0x1
    // Offset: 0x379
    bool cacheAsBitmap;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private UnityEngine.UIElements.VisualElement m_PhysicalParent
    // Size: 0x8
    // Offset: 0x380
    ::UnityEngine::UIElements::VisualElement* m_PhysicalParent;
    // Field size check
    static_assert(sizeof(::UnityEngine::UIElements::VisualElement*) == 0x8);
    // private UnityEngine.UIElements.VisualElement m_LogicalParent
    // Size: 0x8
    // Offset: 0x388
    ::UnityEngine::UIElements::VisualElement* m_LogicalParent;
    // Field size check
    static_assert(sizeof(::UnityEngine::UIElements::VisualElement*) == 0x8);
    // private System.Collections.Generic.List`1<UnityEngine.UIElements.VisualElement> m_Children
    // Size: 0x8
    // Offset: 0x390
    ::System::Collections::Generic::List_1<::UnityEngine::UIElements::VisualElement*>* m_Children;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::UnityEngine::UIElements::VisualElement*>*) == 0x8);
    // private UnityEngine.UIElements.BaseVisualElementPanel <elementPanel>k__BackingField
    // Size: 0x8
    // Offset: 0x398
    ::UnityEngine::UIElements::BaseVisualElementPanel* elementPanel;
    // Field size check
    static_assert(sizeof(::UnityEngine::UIElements::BaseVisualElementPanel*) == 0x8);
    // private UnityEngine.UIElements.VisualTreeAsset m_VisualTreeAssetSource
    // Size: 0x8
    // Offset: 0x3A0
    ::UnityEngine::UIElements::VisualTreeAsset* m_VisualTreeAssetSource;
    // Field size check
    static_assert(sizeof(::UnityEngine::UIElements::VisualTreeAsset*) == 0x8);
    // UnityEngine.UIElements.InlineStyleAccess inlineStyleAccess
    // Size: 0x8
    // Offset: 0x3A8
    ::UnityEngine::UIElements::InlineStyleAccess* inlineStyleAccess;
    // Field size check
    static_assert(sizeof(::UnityEngine::UIElements::InlineStyleAccess*) == 0x8);
    // System.Collections.Generic.List`1<UnityEngine.UIElements.StyleSheet> styleSheetList
    // Size: 0x8
    // Offset: 0x3B0
    ::System::Collections::Generic::List_1<::UnityEngine::UIElements::StyleSheet*>* styleSheetList;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::UnityEngine::UIElements::StyleSheet*>*) == 0x8);
    // private UnityEngine.UIElements.VisualElement/TypeData m_TypeData
    // Size: 0x8
    // Offset: 0x3B8
    ::UnityEngine::UIElements::VisualElement::TypeData* m_TypeData;
    // Field size check
    static_assert(sizeof(::UnityEngine::UIElements::VisualElement::TypeData*) == 0x8);
    public:
    // Creating interface conversion operator: operator ::UnityEngine::UIElements::IResolvedStyle
    operator ::UnityEngine::UIElements::IResolvedStyle() noexcept {
      return *reinterpret_cast<::UnityEngine::UIElements::IResolvedStyle*>(this);
    }
    // Creating interface conversion operator: operator ::UnityEngine::UIElements::IStylePropertyAnimations
    operator ::UnityEngine::UIElements::IStylePropertyAnimations() noexcept {
      return *reinterpret_cast<::UnityEngine::UIElements::IStylePropertyAnimations*>(this);
    }
    // Creating interface conversion operator: operator ::UnityEngine::UIElements::ITransform
    operator ::UnityEngine::UIElements::ITransform() noexcept {
      return *reinterpret_cast<::UnityEngine::UIElements::ITransform*>(this);
    }
    // Creating interface conversion operator: operator ::UnityEngine::UIElements::Experimental::ITransitionAnimations
    operator ::UnityEngine::UIElements::Experimental::ITransitionAnimations() noexcept {
      return *reinterpret_cast<::UnityEngine::UIElements::Experimental::ITransitionAnimations*>(this);
    }
    // Creating interface conversion operator: operator ::UnityEngine::UIElements::IExperimentalFeatures
    operator ::UnityEngine::UIElements::IExperimentalFeatures() noexcept {
      return *reinterpret_cast<::UnityEngine::UIElements::IExperimentalFeatures*>(this);
    }
    // Creating interface conversion operator: operator ::UnityEngine::UIElements::IVisualElementScheduler
    operator ::UnityEngine::UIElements::IVisualElementScheduler() noexcept {
      return *reinterpret_cast<::UnityEngine::UIElements::IVisualElementScheduler*>(this);
    }
    // Get static field: static private System.UInt32 s_NextId
    static uint _get_s_NextId();
    // Set static field: static private System.UInt32 s_NextId
    static void _set_s_NextId(uint value);
    // Get static field: static private System.Collections.Generic.List`1<System.String> s_EmptyClassList
    static ::System::Collections::Generic::List_1<::StringW>* _get_s_EmptyClassList();
    // Set static field: static private System.Collections.Generic.List`1<System.String> s_EmptyClassList
    static void _set_s_EmptyClassList(::System::Collections::Generic::List_1<::StringW>* value);
    // Get static field: static readonly UnityEngine.PropertyName userDataPropertyKey
    static ::UnityEngine::PropertyName _get_userDataPropertyKey();
    // Set static field: static readonly UnityEngine.PropertyName userDataPropertyKey
    static void _set_userDataPropertyKey(::UnityEngine::PropertyName value);
    // Get static field: static public readonly System.String disabledUssClassName
    static ::StringW _get_disabledUssClassName();
    // Set static field: static public readonly System.String disabledUssClassName
    static void _set_disabledUssClassName(::StringW value);
    // static field const value: static private UnityEngine.UIElements.VisualElementFlags worldBoundingBoxDirtyDependencies
    static constexpr const int worldBoundingBoxDirtyDependencies = 25;
    // Get static field: static private UnityEngine.UIElements.VisualElementFlags worldBoundingBoxDirtyDependencies
    static ::UnityEngine::UIElements::VisualElementFlags _get_worldBoundingBoxDirtyDependencies();
    // Set static field: static private UnityEngine.UIElements.VisualElementFlags worldBoundingBoxDirtyDependencies
    static void _set_worldBoundingBoxDirtyDependencies(::UnityEngine::UIElements::VisualElementFlags value);
    // static field const value: static private UnityEngine.UIElements.VisualElementFlags worldTransformInverseDirtyDependencies
    static constexpr const int worldTransformInverseDirtyDependencies = 3;
    // Get static field: static private UnityEngine.UIElements.VisualElementFlags worldTransformInverseDirtyDependencies
    static ::UnityEngine::UIElements::VisualElementFlags _get_worldTransformInverseDirtyDependencies();
    // Set static field: static private UnityEngine.UIElements.VisualElementFlags worldTransformInverseDirtyDependencies
    static void _set_worldTransformInverseDirtyDependencies(::UnityEngine::UIElements::VisualElementFlags value);
    // Get static field: static readonly UnityEngine.Rect s_InfiniteRect
    static ::UnityEngine::Rect _get_s_InfiniteRect();
    // Set static field: static readonly UnityEngine.Rect s_InfiniteRect
    static void _set_s_InfiniteRect(::UnityEngine::Rect value);
    // Get static field: static private readonly Unity.Profiling.ProfilerMarker k_GenerateVisualContentMarker
    static ::Unity::Profiling::ProfilerMarker _get_k_GenerateVisualContentMarker();
    // Set static field: static private readonly Unity.Profiling.ProfilerMarker k_GenerateVisualContentMarker
    static void _set_k_GenerateVisualContentMarker(::Unity::Profiling::ProfilerMarker value);
    // Get static field: static private UnityEngine.Material s_runtimeMaterial
    static ::UnityEngine::Material* _get_s_runtimeMaterial();
    // Set static field: static private UnityEngine.Material s_runtimeMaterial
    static void _set_s_runtimeMaterial(::UnityEngine::Material* value);
    // Get static field: static private System.UInt32 s_NextParentVersion
    static uint _get_s_NextParentVersion();
    // Set static field: static private System.UInt32 s_NextParentVersion
    static void _set_s_NextParentVersion(uint value);
    // static field const value: static System.String k_RootVisualContainerName
    static constexpr const char* k_RootVisualContainerName = "rootVisualContainer";
    // Get static field: static System.String k_RootVisualContainerName
    static ::StringW _get_k_RootVisualContainerName();
    // Set static field: static System.String k_RootVisualContainerName
    static void _set_k_RootVisualContainerName(::StringW value);
    // Get static field: static private readonly System.Collections.Generic.List`1<UnityEngine.UIElements.VisualElement> s_EmptyList
    static ::System::Collections::Generic::List_1<::UnityEngine::UIElements::VisualElement*>* _get_s_EmptyList();
    // Set static field: static private readonly System.Collections.Generic.List`1<UnityEngine.UIElements.VisualElement> s_EmptyList
    static void _set_s_EmptyList(::System::Collections::Generic::List_1<::UnityEngine::UIElements::VisualElement*>* value);
    // Get static field: static UnityEngine.UIElements.VisualElement/CustomStyleAccess s_CustomStyleAccess
    static ::UnityEngine::UIElements::VisualElement::CustomStyleAccess* _get_s_CustomStyleAccess();
    // Set static field: static UnityEngine.UIElements.VisualElement/CustomStyleAccess s_CustomStyleAccess
    static void _set_s_CustomStyleAccess(::UnityEngine::UIElements::VisualElement::CustomStyleAccess* value);
    // Get static field: static private readonly System.Text.RegularExpressions.Regex s_InternalStyleSheetPath
    static ::System::Text::RegularExpressions::Regex* _get_s_InternalStyleSheetPath();
    // Set static field: static private readonly System.Text.RegularExpressions.Regex s_InternalStyleSheetPath
    static void _set_s_InternalStyleSheetPath(::System::Text::RegularExpressions::Regex* value);
    // Get static field: static readonly UnityEngine.PropertyName tooltipPropertyKey
    static ::UnityEngine::PropertyName _get_tooltipPropertyKey();
    // Set static field: static readonly UnityEngine.PropertyName tooltipPropertyKey
    static void _set_tooltipPropertyKey(::UnityEngine::PropertyName value);
    // Get static field: static private readonly System.Collections.Generic.Dictionary`2<System.Type,UnityEngine.UIElements.VisualElement/TypeData> s_TypeData
    static ::System::Collections::Generic::Dictionary_2<::System::Type*, ::UnityEngine::UIElements::VisualElement::TypeData*>* _get_s_TypeData();
    // Set static field: static private readonly System.Collections.Generic.Dictionary`2<System.Type,UnityEngine.UIElements.VisualElement/TypeData> s_TypeData
    static void _set_s_TypeData(::System::Collections::Generic::Dictionary_2<::System::Type*, ::UnityEngine::UIElements::VisualElement::TypeData*>* value);
    // Get instance field reference: private System.Int32 <UnityEngine.UIElements.IStylePropertyAnimations.runningAnimationCount>k__BackingField
    [[deprecated("Use field access instead!")]] int& dyn_$UnityEngine_UIElements_IStylePropertyAnimations_runningAnimationCount$k__BackingField();
    // Get instance field reference: private System.Int32 <UnityEngine.UIElements.IStylePropertyAnimations.completedAnimationCount>k__BackingField
    [[deprecated("Use field access instead!")]] int& dyn_$UnityEngine_UIElements_IStylePropertyAnimations_completedAnimationCount$k__BackingField();
    // Get instance field reference: private System.String m_Name
    [[deprecated("Use field access instead!")]] ::StringW& dyn_m_Name();
    // Get instance field reference: private System.Collections.Generic.List`1<System.String> m_ClassList
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::StringW>*& dyn_m_ClassList();
    // Get instance field reference: private System.Collections.Generic.List`1<System.Collections.Generic.KeyValuePair`2<UnityEngine.PropertyName,System.Object>> m_PropertyBag
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::System::Collections::Generic::KeyValuePair_2<::UnityEngine::PropertyName, ::Il2CppObject*>>*& dyn_m_PropertyBag();
    // Get instance field reference: UnityEngine.UIElements.VisualElementFlags m_Flags
    [[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::VisualElementFlags& dyn_m_Flags();
    // Get instance field reference: private System.String m_ViewDataKey
    [[deprecated("Use field access instead!")]] ::StringW& dyn_m_ViewDataKey();
    // Get instance field reference: private UnityEngine.UIElements.RenderHints m_RenderHints
    [[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::RenderHints& dyn_m_RenderHints();
    // Get instance field reference: UnityEngine.Rect lastLayout
    [[deprecated("Use field access instead!")]] ::UnityEngine::Rect& dyn_lastLayout();
    // Get instance field reference: UnityEngine.Rect lastPseudoPadding
    [[deprecated("Use field access instead!")]] ::UnityEngine::Rect& dyn_lastPseudoPadding();
    // Get instance field reference: UnityEngine.UIElements.UIR.RenderChainVEData renderChainData
    [[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::UIR::RenderChainVEData& dyn_renderChainData();
    // Get instance field reference: private UnityEngine.Rect m_Layout
    [[deprecated("Use field access instead!")]] ::UnityEngine::Rect& dyn_m_Layout();
    // Get instance field reference: private UnityEngine.Rect m_BoundingBox
    [[deprecated("Use field access instead!")]] ::UnityEngine::Rect& dyn_m_BoundingBox();
    // Get instance field reference: private UnityEngine.Rect m_WorldBoundingBox
    [[deprecated("Use field access instead!")]] ::UnityEngine::Rect& dyn_m_WorldBoundingBox();
    // Get instance field reference: private UnityEngine.Matrix4x4 m_WorldTransformCache
    [[deprecated("Use field access instead!")]] ::UnityEngine::Matrix4x4& dyn_m_WorldTransformCache();
    // Get instance field reference: private UnityEngine.Matrix4x4 m_WorldTransformInverseCache
    [[deprecated("Use field access instead!")]] ::UnityEngine::Matrix4x4& dyn_m_WorldTransformInverseCache();
    // Get instance field reference: private UnityEngine.Rect m_WorldClip
    [[deprecated("Use field access instead!")]] ::UnityEngine::Rect& dyn_m_WorldClip();
    // Get instance field reference: private UnityEngine.Rect m_WorldClipMinusGroup
    [[deprecated("Use field access instead!")]] ::UnityEngine::Rect& dyn_m_WorldClipMinusGroup();
    // Get instance field reference: private System.Boolean m_WorldClipIsInfinite
    [[deprecated("Use field access instead!")]] bool& dyn_m_WorldClipIsInfinite();
    // Get instance field reference: UnityEngine.UIElements.PseudoStates triggerPseudoMask
    [[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::PseudoStates& dyn_triggerPseudoMask();
    // Get instance field reference: UnityEngine.UIElements.PseudoStates dependencyPseudoMask
    [[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::PseudoStates& dyn_dependencyPseudoMask();
    // Get instance field reference: private UnityEngine.UIElements.PseudoStates m_PseudoStates
    [[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::PseudoStates& dyn_m_PseudoStates();
    // Get instance field reference: private System.Int32 <containedPointerIds>k__BackingField
    [[deprecated("Use field access instead!")]] int& dyn_$containedPointerIds$k__BackingField();
    // Get instance field reference: private UnityEngine.UIElements.PickingMode <pickingMode>k__BackingField
    [[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::PickingMode& dyn_$pickingMode$k__BackingField();
    // Get instance field reference: private UnityEngine.Yoga.YogaNode <yogaNode>k__BackingField
    [[deprecated("Use field access instead!")]] ::UnityEngine::Yoga::YogaNode*& dyn_$yogaNode$k__BackingField();
    // Get instance field reference: UnityEngine.UIElements.ComputedStyle m_Style
    [[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::ComputedStyle& dyn_m_Style();
    // Get instance field reference: UnityEngine.UIElements.StyleVariableContext variableContext
    [[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::StyleVariableContext*& dyn_variableContext();
    // Get instance field reference: System.Int32 inheritedStylesHash
    [[deprecated("Use field access instead!")]] int& dyn_inheritedStylesHash();
    // Get instance field reference: readonly System.UInt32 controlid
    [[deprecated("Use field access instead!")]] uint& dyn_controlid();
    // Get instance field reference: System.Int32 imguiContainerDescendantCount
    [[deprecated("Use field access instead!")]] int& dyn_imguiContainerDescendantCount();
    // Get instance field reference: private System.Boolean <enabledSelf>k__BackingField
    [[deprecated("Use field access instead!")]] bool& dyn_$enabledSelf$k__BackingField();
    // Get instance field reference: private System.Action`1<UnityEngine.UIElements.MeshGenerationContext> <generateVisualContent>k__BackingField
    [[deprecated("Use field access instead!")]] ::System::Action_1<::UnityEngine::UIElements::MeshGenerationContext*>*& dyn_$generateVisualContent$k__BackingField();
    // Get instance field reference: private UnityEngine.UIElements.VisualElement/RenderTargetMode m_SubRenderTargetMode
    [[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::VisualElement::RenderTargetMode& dyn_m_SubRenderTargetMode();
    // Get instance field reference: private UnityEngine.Material m_defaultMaterial
    [[deprecated("Use field access instead!")]] ::UnityEngine::Material*& dyn_m_defaultMaterial();
    // Get instance field reference: private System.Collections.Generic.List`1<UnityEngine.UIElements.Experimental.IValueAnimationUpdate> m_RunningAnimations
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::UIElements::Experimental::IValueAnimationUpdate*>*& dyn_m_RunningAnimations();
    // Get instance field reference: private System.UInt32 m_NextParentCachedVersion
    [[deprecated("Use field access instead!")]] uint& dyn_m_NextParentCachedVersion();
    // Get instance field reference: private System.UInt32 m_NextParentRequiredVersion
    [[deprecated("Use field access instead!")]] uint& dyn_m_NextParentRequiredVersion();
    // Get instance field reference: private UnityEngine.UIElements.VisualElement m_CachedNextParentWithEventCallback
    [[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::VisualElement*& dyn_m_CachedNextParentWithEventCallback();
    // Get instance field reference: private System.Int32 m_EventCallbackCategories
    [[deprecated("Use field access instead!")]] int& dyn_m_EventCallbackCategories();
    // Get instance field reference: private System.Int32 m_CachedEventCallbackParentCategories
    [[deprecated("Use field access instead!")]] int& dyn_m_CachedEventCallbackParentCategories();
    // Get instance field reference: private readonly System.Int32 m_DefaultActionEventCategories
    [[deprecated("Use field access instead!")]] int& dyn_m_DefaultActionEventCategories();
    // Get instance field reference: private readonly System.Int32 m_DefaultActionAtTargetEventCategories
    [[deprecated("Use field access instead!")]] int& dyn_m_DefaultActionAtTargetEventCategories();
    // Get instance field reference: private UnityEngine.UIElements.VisualElement/Hierarchy <hierarchy>k__BackingField
    [[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::VisualElement::Hierarchy& dyn_$hierarchy$k__BackingField();
    // Get instance field reference: private System.Boolean <isRootVisualContainer>k__BackingField
    [[deprecated("Use field access instead!")]] bool& dyn_$isRootVisualContainer$k__BackingField();
    // Get instance field reference: private System.Boolean <cacheAsBitmap>k__BackingField
    [[deprecated("Use field access instead!")]] bool& dyn_$cacheAsBitmap$k__BackingField();
    // Get instance field reference: private UnityEngine.UIElements.VisualElement m_PhysicalParent
    [[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::VisualElement*& dyn_m_PhysicalParent();
    // Get instance field reference: private UnityEngine.UIElements.VisualElement m_LogicalParent
    [[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::VisualElement*& dyn_m_LogicalParent();
    // Get instance field reference: private System.Collections.Generic.List`1<UnityEngine.UIElements.VisualElement> m_Children
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::UIElements::VisualElement*>*& dyn_m_Children();
    // Get instance field reference: private UnityEngine.UIElements.BaseVisualElementPanel <elementPanel>k__BackingField
    [[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::BaseVisualElementPanel*& dyn_$elementPanel$k__BackingField();
    // Get instance field reference: private UnityEngine.UIElements.VisualTreeAsset m_VisualTreeAssetSource
    [[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::VisualTreeAsset*& dyn_m_VisualTreeAssetSource();
    // Get instance field reference: UnityEngine.UIElements.InlineStyleAccess inlineStyleAccess
    [[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::InlineStyleAccess*& dyn_inlineStyleAccess();
    // Get instance field reference: System.Collections.Generic.List`1<UnityEngine.UIElements.StyleSheet> styleSheetList
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::UIElements::StyleSheet*>*& dyn_styleSheetList();
    // Get instance field reference: private UnityEngine.UIElements.VisualElement/TypeData m_TypeData
    [[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::VisualElement::TypeData*& dyn_m_TypeData();
    // public UnityEngine.UIElements.IResolvedStyle get_resolvedStyle()
    // Offset: 0x568AE14
    ::UnityEngine::UIElements::IResolvedStyle* get_resolvedStyle();
    // private UnityEngine.Color UnityEngine.UIElements.IResolvedStyle.get_backgroundColor()
    // Offset: 0x5692E88
    ::UnityEngine::Color UnityEngine_UIElements_IResolvedStyle_get_backgroundColor();
    // private UnityEngine.Color UnityEngine.UIElements.IResolvedStyle.get_borderBottomColor()
    // Offset: 0x5692E94
    ::UnityEngine::Color UnityEngine_UIElements_IResolvedStyle_get_borderBottomColor();
    // private System.Single UnityEngine.UIElements.IResolvedStyle.get_borderBottomLeftRadius()
    // Offset: 0x5692EA0
    float UnityEngine_UIElements_IResolvedStyle_get_borderBottomLeftRadius();
    // private System.Single UnityEngine.UIElements.IResolvedStyle.get_borderBottomRightRadius()
    // Offset: 0x5692EBC
    float UnityEngine_UIElements_IResolvedStyle_get_borderBottomRightRadius();
    // private System.Single UnityEngine.UIElements.IResolvedStyle.get_borderBottomWidth()
    // Offset: 0x5692ED8
    float UnityEngine_UIElements_IResolvedStyle_get_borderBottomWidth();
    // private UnityEngine.Color UnityEngine.UIElements.IResolvedStyle.get_borderLeftColor()
    // Offset: 0x5692EF4
    ::UnityEngine::Color UnityEngine_UIElements_IResolvedStyle_get_borderLeftColor();
    // private System.Single UnityEngine.UIElements.IResolvedStyle.get_borderLeftWidth()
    // Offset: 0x5692F00
    float UnityEngine_UIElements_IResolvedStyle_get_borderLeftWidth();
    // private UnityEngine.Color UnityEngine.UIElements.IResolvedStyle.get_borderRightColor()
    // Offset: 0x5692F1C
    ::UnityEngine::Color UnityEngine_UIElements_IResolvedStyle_get_borderRightColor();
    // private System.Single UnityEngine.UIElements.IResolvedStyle.get_borderRightWidth()
    // Offset: 0x5692F28
    float UnityEngine_UIElements_IResolvedStyle_get_borderRightWidth();
    // private UnityEngine.Color UnityEngine.UIElements.IResolvedStyle.get_borderTopColor()
    // Offset: 0x5692F44
    ::UnityEngine::Color UnityEngine_UIElements_IResolvedStyle_get_borderTopColor();
    // private System.Single UnityEngine.UIElements.IResolvedStyle.get_borderTopLeftRadius()
    // Offset: 0x5692F50
    float UnityEngine_UIElements_IResolvedStyle_get_borderTopLeftRadius();
    // private System.Single UnityEngine.UIElements.IResolvedStyle.get_borderTopRightRadius()
    // Offset: 0x5692F6C
    float UnityEngine_UIElements_IResolvedStyle_get_borderTopRightRadius();
    // private System.Single UnityEngine.UIElements.IResolvedStyle.get_borderTopWidth()
    // Offset: 0x5692F88
    float UnityEngine_UIElements_IResolvedStyle_get_borderTopWidth();
    // private System.Single UnityEngine.UIElements.IResolvedStyle.get_bottom()
    // Offset: 0x5692FA4
    float UnityEngine_UIElements_IResolvedStyle_get_bottom();
    // private UnityEngine.Color UnityEngine.UIElements.IResolvedStyle.get_color()
    // Offset: 0x5692FC0
    ::UnityEngine::Color UnityEngine_UIElements_IResolvedStyle_get_color();
    // private UnityEngine.UIElements.DisplayStyle UnityEngine.UIElements.IResolvedStyle.get_display()
    // Offset: 0x5692FCC
    ::UnityEngine::UIElements::DisplayStyle UnityEngine_UIElements_IResolvedStyle_get_display();
    // private UnityEngine.UIElements.FlexDirection UnityEngine.UIElements.IResolvedStyle.get_flexDirection()
    // Offset: 0x5692FD8
    ::UnityEngine::UIElements::FlexDirection UnityEngine_UIElements_IResolvedStyle_get_flexDirection();
    // private System.Single UnityEngine.UIElements.IResolvedStyle.get_flexGrow()
    // Offset: 0x5692FE4
    float UnityEngine_UIElements_IResolvedStyle_get_flexGrow();
    // private System.Single UnityEngine.UIElements.IResolvedStyle.get_flexShrink()
    // Offset: 0x5692FF0
    float UnityEngine_UIElements_IResolvedStyle_get_flexShrink();
    // private System.Single UnityEngine.UIElements.IResolvedStyle.get_height()
    // Offset: 0x5692FFC
    float UnityEngine_UIElements_IResolvedStyle_get_height();
    // private System.Single UnityEngine.UIElements.IResolvedStyle.get_left()
    // Offset: 0x5693018
    float UnityEngine_UIElements_IResolvedStyle_get_left();
    // private System.Single UnityEngine.UIElements.IResolvedStyle.get_marginBottom()
    // Offset: 0x5693034
    float UnityEngine_UIElements_IResolvedStyle_get_marginBottom();
    // private System.Single UnityEngine.UIElements.IResolvedStyle.get_marginLeft()
    // Offset: 0x5693050
    float UnityEngine_UIElements_IResolvedStyle_get_marginLeft();
    // private System.Single UnityEngine.UIElements.IResolvedStyle.get_marginRight()
    // Offset: 0x569306C
    float UnityEngine_UIElements_IResolvedStyle_get_marginRight();
    // private System.Single UnityEngine.UIElements.IResolvedStyle.get_marginTop()
    // Offset: 0x5693088
    float UnityEngine_UIElements_IResolvedStyle_get_marginTop();
    // private UnityEngine.UIElements.StyleFloat UnityEngine.UIElements.IResolvedStyle.get_minHeight()
    // Offset: 0x56930A4
    ::UnityEngine::UIElements::StyleFloat UnityEngine_UIElements_IResolvedStyle_get_minHeight();
    // private UnityEngine.UIElements.StyleFloat UnityEngine.UIElements.IResolvedStyle.get_minWidth()
    // Offset: 0x5693268
    ::UnityEngine::UIElements::StyleFloat UnityEngine_UIElements_IResolvedStyle_get_minWidth();
    // private System.Single UnityEngine.UIElements.IResolvedStyle.get_opacity()
    // Offset: 0x5693290
    float UnityEngine_UIElements_IResolvedStyle_get_opacity();
    // private System.Single UnityEngine.UIElements.IResolvedStyle.get_paddingBottom()
    // Offset: 0x569329C
    float UnityEngine_UIElements_IResolvedStyle_get_paddingBottom();
    // private System.Single UnityEngine.UIElements.IResolvedStyle.get_paddingLeft()
    // Offset: 0x56932B8
    float UnityEngine_UIElements_IResolvedStyle_get_paddingLeft();
    // private System.Single UnityEngine.UIElements.IResolvedStyle.get_paddingRight()
    // Offset: 0x56932D4
    float UnityEngine_UIElements_IResolvedStyle_get_paddingRight();
    // private System.Single UnityEngine.UIElements.IResolvedStyle.get_paddingTop()
    // Offset: 0x56932F0
    float UnityEngine_UIElements_IResolvedStyle_get_paddingTop();
    // private System.Single UnityEngine.UIElements.IResolvedStyle.get_right()
    // Offset: 0x569330C
    float UnityEngine_UIElements_IResolvedStyle_get_right();
    // private UnityEngine.UIElements.Scale UnityEngine.UIElements.IResolvedStyle.get_scale()
    // Offset: 0x5693328
    ::UnityEngine::UIElements::Scale UnityEngine_UIElements_IResolvedStyle_get_scale();
    // private System.Single UnityEngine.UIElements.IResolvedStyle.get_top()
    // Offset: 0x5693334
    float UnityEngine_UIElements_IResolvedStyle_get_top();
    // private UnityEngine.Vector3 UnityEngine.UIElements.IResolvedStyle.get_transformOrigin()
    // Offset: 0x5693350
    ::UnityEngine::Vector3 UnityEngine_UIElements_IResolvedStyle_get_transformOrigin();
    // private UnityEngine.Vector3 UnityEngine.UIElements.IResolvedStyle.get_translate()
    // Offset: 0x5693658
    ::UnityEngine::Vector3 UnityEngine_UIElements_IResolvedStyle_get_translate();
    // private UnityEngine.Color UnityEngine.UIElements.IResolvedStyle.get_unityBackgroundImageTintColor()
    // Offset: 0x569381C
    ::UnityEngine::Color UnityEngine_UIElements_IResolvedStyle_get_unityBackgroundImageTintColor();
    // private System.Int32 UnityEngine.UIElements.IResolvedStyle.get_unitySliceLeft()
    // Offset: 0x5693828
    int UnityEngine_UIElements_IResolvedStyle_get_unitySliceLeft();
    // private System.Int32 UnityEngine.UIElements.IResolvedStyle.get_unitySliceRight()
    // Offset: 0x5693834
    int UnityEngine_UIElements_IResolvedStyle_get_unitySliceRight();
    // private System.Single UnityEngine.UIElements.IResolvedStyle.get_unitySliceScale()
    // Offset: 0x5693840
    float UnityEngine_UIElements_IResolvedStyle_get_unitySliceScale();
    // private UnityEngine.Color UnityEngine.UIElements.IResolvedStyle.get_unityTextOutlineColor()
    // Offset: 0x569384C
    ::UnityEngine::Color UnityEngine_UIElements_IResolvedStyle_get_unityTextOutlineColor();
    // private System.Single UnityEngine.UIElements.IResolvedStyle.get_unityTextOutlineWidth()
    // Offset: 0x5693858
    float UnityEngine_UIElements_IResolvedStyle_get_unityTextOutlineWidth();
    // private UnityEngine.UIElements.Visibility UnityEngine.UIElements.IResolvedStyle.get_visibility()
    // Offset: 0x5693864
    ::UnityEngine::UIElements::Visibility UnityEngine_UIElements_IResolvedStyle_get_visibility();
    // private System.Single UnityEngine.UIElements.IResolvedStyle.get_width()
    // Offset: 0x5693870
    float UnityEngine_UIElements_IResolvedStyle_get_width();
    // System.Boolean get_hasRunningAnimations()
    // Offset: 0x569388C
    bool get_hasRunningAnimations();
    // System.Boolean get_hasCompletedAnimations()
    // Offset: 0x5693938
    bool get_hasCompletedAnimations();
    // private System.Int32 UnityEngine.UIElements.IStylePropertyAnimations.get_runningAnimationCount()
    // Offset: 0x56939E4
    int UnityEngine_UIElements_IStylePropertyAnimations_get_runningAnimationCount();
    // private System.Void UnityEngine.UIElements.IStylePropertyAnimations.set_runningAnimationCount(System.Int32 value)
    // Offset: 0x56939EC
    void UnityEngine_UIElements_IStylePropertyAnimations_set_runningAnimationCount(int value);
    // private System.Int32 UnityEngine.UIElements.IStylePropertyAnimations.get_completedAnimationCount()
    // Offset: 0x56939F4
    int UnityEngine_UIElements_IStylePropertyAnimations_get_completedAnimationCount();
    // private System.Void UnityEngine.UIElements.IStylePropertyAnimations.set_completedAnimationCount(System.Int32 value)
    // Offset: 0x56939FC
    void UnityEngine_UIElements_IStylePropertyAnimations_set_completedAnimationCount(int value);
    // private UnityEngine.UIElements.IStylePropertyAnimationSystem GetStylePropertyAnimationSystem()
    // Offset: 0x5693A04
    ::UnityEngine::UIElements::IStylePropertyAnimationSystem* GetStylePropertyAnimationSystem();
    // UnityEngine.UIElements.IStylePropertyAnimations get_styleAnimation()
    // Offset: 0x5692C38
    ::UnityEngine::UIElements::IStylePropertyAnimations* get_styleAnimation();
    // private System.Boolean UnityEngine.UIElements.IStylePropertyAnimations.Start(UnityEngine.UIElements.StyleSheets.StylePropertyId id, System.Single from, System.Single to, System.Int32 durationMs, System.Int32 delayMs, System.Func`2<System.Single,System.Single> easingCurve)
    // Offset: 0x5693A20
    bool UnityEngine_UIElements_IStylePropertyAnimations_Start(::UnityEngine::UIElements::StyleSheets::StylePropertyId id, float from, float to, int durationMs, int delayMs, ::System::Func_2<float, float>* easingCurve);
    // private System.Boolean UnityEngine.UIElements.IStylePropertyAnimations.Start(UnityEngine.UIElements.StyleSheets.StylePropertyId id, System.Int32 from, System.Int32 to, System.Int32 durationMs, System.Int32 delayMs, System.Func`2<System.Single,System.Single> easingCurve)
    // Offset: 0x5693B24
    bool UnityEngine_UIElements_IStylePropertyAnimations_Start(::UnityEngine::UIElements::StyleSheets::StylePropertyId id, int from, int to, int durationMs, int delayMs, ::System::Func_2<float, float>* easingCurve);
    // private System.Boolean UnityEngine.UIElements.IStylePropertyAnimations.Start(UnityEngine.UIElements.StyleSheets.StylePropertyId id, UnityEngine.UIElements.Length from, UnityEngine.UIElements.Length to, System.Int32 durationMs, System.Int32 delayMs, System.Func`2<System.Single,System.Single> easingCurve)
    // Offset: 0x5693C40
    bool UnityEngine_UIElements_IStylePropertyAnimations_Start(::UnityEngine::UIElements::StyleSheets::StylePropertyId id, ::UnityEngine::UIElements::Length from, ::UnityEngine::UIElements::Length to, int durationMs, int delayMs, ::System::Func_2<float, float>* easingCurve);
    // private System.Boolean UnityEngine.UIElements.IStylePropertyAnimations.Start(UnityEngine.UIElements.StyleSheets.StylePropertyId id, UnityEngine.Color from, UnityEngine.Color to, System.Int32 durationMs, System.Int32 delayMs, System.Func`2<System.Single,System.Single> easingCurve)
    // Offset: 0x5693D5C
    bool UnityEngine_UIElements_IStylePropertyAnimations_Start(::UnityEngine::UIElements::StyleSheets::StylePropertyId id, ::UnityEngine::Color from, ::UnityEngine::Color to, int durationMs, int delayMs, ::System::Func_2<float, float>* easingCurve);
    // private System.Boolean UnityEngine.UIElements.IStylePropertyAnimations.StartEnum(UnityEngine.UIElements.StyleSheets.StylePropertyId id, System.Int32 from, System.Int32 to, System.Int32 durationMs, System.Int32 delayMs, System.Func`2<System.Single,System.Single> easingCurve)
    // Offset: 0x5693EAC
    bool UnityEngine_UIElements_IStylePropertyAnimations_StartEnum(::UnityEngine::UIElements::StyleSheets::StylePropertyId id, int from, int to, int durationMs, int delayMs, ::System::Func_2<float, float>* easingCurve);
    // private System.Boolean UnityEngine.UIElements.IStylePropertyAnimations.Start(UnityEngine.UIElements.StyleSheets.StylePropertyId id, UnityEngine.UIElements.Background from, UnityEngine.UIElements.Background to, System.Int32 durationMs, System.Int32 delayMs, System.Func`2<System.Single,System.Single> easingCurve)
    // Offset: 0x5693FC8
    bool UnityEngine_UIElements_IStylePropertyAnimations_Start(::UnityEngine::UIElements::StyleSheets::StylePropertyId id, ::UnityEngine::UIElements::Background from, ::UnityEngine::UIElements::Background to, int durationMs, int delayMs, ::System::Func_2<float, float>* easingCurve);
    // private System.Boolean UnityEngine.UIElements.IStylePropertyAnimations.Start(UnityEngine.UIElements.StyleSheets.StylePropertyId id, UnityEngine.UIElements.FontDefinition from, UnityEngine.UIElements.FontDefinition to, System.Int32 durationMs, System.Int32 delayMs, System.Func`2<System.Single,System.Single> easingCurve)
    // Offset: 0x5694120
    bool UnityEngine_UIElements_IStylePropertyAnimations_Start(::UnityEngine::UIElements::StyleSheets::StylePropertyId id, ::UnityEngine::UIElements::FontDefinition from, ::UnityEngine::UIElements::FontDefinition to, int durationMs, int delayMs, ::System::Func_2<float, float>* easingCurve);
    // private System.Boolean UnityEngine.UIElements.IStylePropertyAnimations.Start(UnityEngine.UIElements.StyleSheets.StylePropertyId id, UnityEngine.Font from, UnityEngine.Font to, System.Int32 durationMs, System.Int32 delayMs, System.Func`2<System.Single,System.Single> easingCurve)
    // Offset: 0x5694250
    bool UnityEngine_UIElements_IStylePropertyAnimations_Start(::UnityEngine::UIElements::StyleSheets::StylePropertyId id, ::UnityEngine::Font* from, ::UnityEngine::Font* to, int durationMs, int delayMs, ::System::Func_2<float, float>* easingCurve);
    // private System.Boolean UnityEngine.UIElements.IStylePropertyAnimations.Start(UnityEngine.UIElements.StyleSheets.StylePropertyId id, UnityEngine.UIElements.TextShadow from, UnityEngine.UIElements.TextShadow to, System.Int32 durationMs, System.Int32 delayMs, System.Func`2<System.Single,System.Single> easingCurve)
    // Offset: 0x569436C
    bool UnityEngine_UIElements_IStylePropertyAnimations_Start(::UnityEngine::UIElements::StyleSheets::StylePropertyId id, ::UnityEngine::UIElements::TextShadow from, ::UnityEngine::UIElements::TextShadow to, int durationMs, int delayMs, ::System::Func_2<float, float>* easingCurve);
    // private System.Boolean UnityEngine.UIElements.IStylePropertyAnimations.Start(UnityEngine.UIElements.StyleSheets.StylePropertyId id, UnityEngine.UIElements.Scale from, UnityEngine.UIElements.Scale to, System.Int32 durationMs, System.Int32 delayMs, System.Func`2<System.Single,System.Single> easingCurve)
    // Offset: 0x56944F8
    bool UnityEngine_UIElements_IStylePropertyAnimations_Start(::UnityEngine::UIElements::StyleSheets::StylePropertyId id, ::UnityEngine::UIElements::Scale from, ::UnityEngine::UIElements::Scale to, int durationMs, int delayMs, ::System::Func_2<float, float>* easingCurve);
    // private System.Boolean UnityEngine.UIElements.IStylePropertyAnimations.Start(UnityEngine.UIElements.StyleSheets.StylePropertyId id, UnityEngine.UIElements.Translate from, UnityEngine.UIElements.Translate to, System.Int32 durationMs, System.Int32 delayMs, System.Func`2<System.Single,System.Single> easingCurve)
    // Offset: 0x5694628
    bool UnityEngine_UIElements_IStylePropertyAnimations_Start(::UnityEngine::UIElements::StyleSheets::StylePropertyId id, ::UnityEngine::UIElements::Translate from, ::UnityEngine::UIElements::Translate to, int durationMs, int delayMs, ::System::Func_2<float, float>* easingCurve);
    // private System.Boolean UnityEngine.UIElements.IStylePropertyAnimations.Start(UnityEngine.UIElements.StyleSheets.StylePropertyId id, UnityEngine.UIElements.Rotate from, UnityEngine.UIElements.Rotate to, System.Int32 durationMs, System.Int32 delayMs, System.Func`2<System.Single,System.Single> easingCurve)
    // Offset: 0x56947B0
    bool UnityEngine_UIElements_IStylePropertyAnimations_Start(::UnityEngine::UIElements::StyleSheets::StylePropertyId id, ::UnityEngine::UIElements::Rotate from, ::UnityEngine::UIElements::Rotate to, int durationMs, int delayMs, ::System::Func_2<float, float>* easingCurve);
    // private System.Boolean UnityEngine.UIElements.IStylePropertyAnimations.Start(UnityEngine.UIElements.StyleSheets.StylePropertyId id, UnityEngine.UIElements.TransformOrigin from, UnityEngine.UIElements.TransformOrigin to, System.Int32 durationMs, System.Int32 delayMs, System.Func`2<System.Single,System.Single> easingCurve)
    // Offset: 0x5694938
    bool UnityEngine_UIElements_IStylePropertyAnimations_Start(::UnityEngine::UIElements::StyleSheets::StylePropertyId id, ::UnityEngine::UIElements::TransformOrigin from, ::UnityEngine::UIElements::TransformOrigin to, int durationMs, int delayMs, ::System::Func_2<float, float>* easingCurve);
    // private System.Boolean UnityEngine.UIElements.IStylePropertyAnimations.Start(UnityEngine.UIElements.StyleSheets.StylePropertyId id, UnityEngine.UIElements.BackgroundPosition from, UnityEngine.UIElements.BackgroundPosition to, System.Int32 durationMs, System.Int32 delayMs, System.Func`2<System.Single,System.Single> easingCurve)
    // Offset: 0x5694AC0
    bool UnityEngine_UIElements_IStylePropertyAnimations_Start(::UnityEngine::UIElements::StyleSheets::StylePropertyId id, ::UnityEngine::UIElements::BackgroundPosition from, ::UnityEngine::UIElements::BackgroundPosition to, int durationMs, int delayMs, ::System::Func_2<float, float>* easingCurve);
    // private System.Boolean UnityEngine.UIElements.IStylePropertyAnimations.Start(UnityEngine.UIElements.StyleSheets.StylePropertyId id, UnityEngine.UIElements.BackgroundRepeat from, UnityEngine.UIElements.BackgroundRepeat to, System.Int32 durationMs, System.Int32 delayMs, System.Func`2<System.Single,System.Single> easingCurve)
    // Offset: 0x5694BF0
    bool UnityEngine_UIElements_IStylePropertyAnimations_Start(::UnityEngine::UIElements::StyleSheets::StylePropertyId id, ::UnityEngine::UIElements::BackgroundRepeat from, ::UnityEngine::UIElements::BackgroundRepeat to, int durationMs, int delayMs, ::System::Func_2<float, float>* easingCurve);
    // private System.Boolean UnityEngine.UIElements.IStylePropertyAnimations.Start(UnityEngine.UIElements.StyleSheets.StylePropertyId id, UnityEngine.UIElements.BackgroundSize from, UnityEngine.UIElements.BackgroundSize to, System.Int32 durationMs, System.Int32 delayMs, System.Func`2<System.Single,System.Single> easingCurve)
    // Offset: 0x5694D0C
    bool UnityEngine_UIElements_IStylePropertyAnimations_Start(::UnityEngine::UIElements::StyleSheets::StylePropertyId id, ::UnityEngine::UIElements::BackgroundSize from, ::UnityEngine::UIElements::BackgroundSize to, int durationMs, int delayMs, ::System::Func_2<float, float>* easingCurve);
    // private System.Void UnityEngine.UIElements.IStylePropertyAnimations.CancelAnimation(UnityEngine.UIElements.StyleSheets.StylePropertyId id)
    // Offset: 0x5694E94
    void UnityEngine_UIElements_IStylePropertyAnimations_CancelAnimation(::UnityEngine::UIElements::StyleSheets::StylePropertyId id);
    // private System.Void UnityEngine.UIElements.IStylePropertyAnimations.CancelAllAnimations()
    // Offset: 0x5694F64
    void UnityEngine_UIElements_IStylePropertyAnimations_CancelAllAnimations();
    // private System.Void UnityEngine.UIElements.IStylePropertyAnimations.UpdateAnimation(UnityEngine.UIElements.StyleSheets.StylePropertyId id)
    // Offset: 0x5695044
    void UnityEngine_UIElements_IStylePropertyAnimations_UpdateAnimation(::UnityEngine::UIElements::StyleSheets::StylePropertyId id);
    // private System.Void UnityEngine.UIElements.IStylePropertyAnimations.GetAllAnimations(System.Collections.Generic.List`1<UnityEngine.UIElements.StyleSheets.StylePropertyId> outPropertyIds)
    // Offset: 0x569510C
    void UnityEngine_UIElements_IStylePropertyAnimations_GetAllAnimations(::System::Collections::Generic::List_1<::UnityEngine::UIElements::StyleSheets::StylePropertyId>* outPropertyIds);
    // System.Boolean TryConvertLengthUnits(UnityEngine.UIElements.StyleSheets.StylePropertyId id, ref UnityEngine.UIElements.Length from, ref UnityEngine.UIElements.Length to, System.Int32 subPropertyIndex)
    // Offset: 0x56951F8
    bool TryConvertLengthUnits(::UnityEngine::UIElements::StyleSheets::StylePropertyId id, ByRef<::UnityEngine::UIElements::Length> from, ByRef<::UnityEngine::UIElements::Length> to, int subPropertyIndex);
    // System.Boolean TryConvertTransformOriginUnits(ref UnityEngine.UIElements.TransformOrigin from, ref UnityEngine.UIElements.TransformOrigin to)
    // Offset: 0x5695878
    bool TryConvertTransformOriginUnits(ByRef<::UnityEngine::UIElements::TransformOrigin> from, ByRef<::UnityEngine::UIElements::TransformOrigin> to);
    // System.Boolean TryConvertTranslateUnits(ref UnityEngine.UIElements.Translate from, ref UnityEngine.UIElements.Translate to)
    // Offset: 0x5695910
    bool TryConvertTranslateUnits(ByRef<::UnityEngine::UIElements::Translate> from, ByRef<::UnityEngine::UIElements::Translate> to);
    // System.Boolean TryConvertBackgroundSizeUnits(ref UnityEngine.UIElements.BackgroundSize from, ref UnityEngine.UIElements.BackgroundSize to)
    // Offset: 0x56959A8
    bool TryConvertBackgroundSizeUnits(ByRef<::UnityEngine::UIElements::BackgroundSize> from, ByRef<::UnityEngine::UIElements::BackgroundSize> to);
    // private System.Nullable`1<System.Single> GetParentSizeForLengthConversion(UnityEngine.UIElements.StyleSheets.StylePropertyId id, System.Int32 subPropertyIndex)
    // Offset: 0x56954B0
    ::System::Nullable_1<float> GetParentSizeForLengthConversion(::UnityEngine::UIElements::StyleSheets::StylePropertyId id, int subPropertyIndex);
    // System.Boolean get_isCompositeRoot()
    // Offset: 0x5695A84
    bool get_isCompositeRoot();
    // System.Void set_isCompositeRoot(System.Boolean value)
    // Offset: 0x5695A90
    void set_isCompositeRoot(bool value);
    // System.Boolean get_isHierarchyDisplayed()
    // Offset: 0x5695B7C
    bool get_isHierarchyDisplayed();
    // System.Void set_isHierarchyDisplayed(System.Boolean value)
    // Offset: 0x5695B88
    void set_isHierarchyDisplayed(bool value);
    // public System.String get_viewDataKey()
    // Offset: 0x5695BB8
    ::StringW get_viewDataKey();
    // public System.Void set_viewDataKey(System.String value)
    // Offset: 0x5695BC0
    void set_viewDataKey(::StringW value);
    // System.Boolean get_enableViewDataPersistence()
    // Offset: 0x5695C38
    bool get_enableViewDataPersistence();
    // private System.Void set_enableViewDataPersistence(System.Boolean value)
    // Offset: 0x5695C44
    void set_enableViewDataPersistence(bool value);
    // public System.Object get_userData()
    // Offset: 0x5695C74
    ::Il2CppObject* get_userData();
    // public System.Void set_userData(System.Object value)
    // Offset: 0x5695DE8
    void set_userData(::Il2CppObject* value);
    // public UnityEngine.UIElements.UsageHints get_usageHints()
    // Offset: 0x5696398
    ::UnityEngine::UIElements::UsageHints get_usageHints();
    // public System.Void set_usageHints(UnityEngine.UIElements.UsageHints value)
    // Offset: 0x56963C0
    void set_usageHints(::UnityEngine::UIElements::UsageHints value);
    // UnityEngine.UIElements.RenderHints get_renderHints()
    // Offset: 0x56963B8
    ::UnityEngine::UIElements::RenderHints get_renderHints();
    // System.Void set_renderHints(UnityEngine.UIElements.RenderHints value)
    // Offset: 0x5696424
    void set_renderHints(::UnityEngine::UIElements::RenderHints value);
    // System.Void MarkRenderHintsClean()
    // Offset: 0x5696470
    void MarkRenderHintsClean();
    // public UnityEngine.UIElements.ITransform get_transform()
    // Offset: 0x5696480
    ::UnityEngine::UIElements::ITransform* get_transform();
    // private UnityEngine.Vector3 UnityEngine.UIElements.ITransform.get_position()
    // Offset: 0x5696484
    ::UnityEngine::Vector3 UnityEngine_UIElements_ITransform_get_position();
    // private System.Void UnityEngine.UIElements.ITransform.set_position(UnityEngine.Vector3 value)
    // Offset: 0x5696524
    void UnityEngine_UIElements_ITransform_set_position(::UnityEngine::Vector3 value);
    // private UnityEngine.Vector3 UnityEngine.UIElements.ITransform.get_scale()
    // Offset: 0x5696690
    ::UnityEngine::Vector3 UnityEngine_UIElements_ITransform_get_scale();
    // System.Boolean get_isLayoutManual()
    // Offset: 0x5696744
    bool get_isLayoutManual();
    // private System.Void set_isLayoutManual(System.Boolean value)
    // Offset: 0x5696750
    void set_isLayoutManual(bool value);
    // System.Single get_scaledPixelsPerPoint()
    // Offset: 0x5696780
    float get_scaledPixelsPerPoint();
    // public UnityEngine.Rect get_layout()
    // Offset: 0x5696794
    ::UnityEngine::Rect get_layout();
    // System.Void set_layout(UnityEngine.Rect value)
    // Offset: 0x569682C
    void set_layout(::UnityEngine::Rect value);
    // System.Void ClearManualLayout()
    // Offset: 0x569701C
    void ClearManualLayout();
    // public UnityEngine.Rect get_contentRect()
    // Offset: 0x56975E0
    ::UnityEngine::Rect get_contentRect();
    // protected UnityEngine.Rect get_paddingRect()
    // Offset: 0x56977E4
    ::UnityEngine::Rect get_paddingRect();
    // System.Boolean get_isBoundingBoxDirty()
    // Offset: 0x5697A00
    bool get_isBoundingBoxDirty();
    // System.Void set_isBoundingBoxDirty(System.Boolean value)
    // Offset: 0x5697A0C
    void set_isBoundingBoxDirty(bool value);
    // System.Void set_isWorldBoundingBoxDirty(System.Boolean value)
    // Offset: 0x5697A3C
    void set_isWorldBoundingBoxDirty(bool value);
    // System.Boolean get_isWorldBoundingBoxOrDependenciesDirty()
    // Offset: 0x5697A6C
    bool get_isWorldBoundingBoxOrDependenciesDirty();
    // UnityEngine.Rect get_boundingBox()
    // Offset: 0x5697A80
    ::UnityEngine::Rect get_boundingBox();
    // UnityEngine.Rect get_worldBoundingBox()
    // Offset: 0x5697CCC
    ::UnityEngine::Rect get_worldBoundingBox();
    // private UnityEngine.Rect get_boundingBoxInParentSpace()
    // Offset: 0x5697E00
    ::UnityEngine::Rect get_boundingBoxInParentSpace();
    // System.Void UpdateBoundingBox()
    // Offset: 0x5697ABC
    void UpdateBoundingBox();
    // System.Void UpdateWorldBoundingBox()
    // Offset: 0x5697D10
    void UpdateWorldBoundingBox();
    // public UnityEngine.Rect get_worldBound()
    // Offset: 0x5697E8C
    ::UnityEngine::Rect get_worldBound();
    // public UnityEngine.Rect get_localBound()
    // Offset: 0x5697F48
    ::UnityEngine::Rect get_localBound();
    // UnityEngine.Rect get_rect()
    // Offset: 0x56979E8
    ::UnityEngine::Rect get_rect();
    // System.Boolean get_isWorldTransformDirty()
    // Offset: 0x5697F84
    bool get_isWorldTransformDirty();
    // System.Void set_isWorldTransformDirty(System.Boolean value)
    // Offset: 0x5697F90
    void set_isWorldTransformDirty(bool value);
    // System.Void set_isWorldTransformInverseDirty(System.Boolean value)
    // Offset: 0x5697FB0
    void set_isWorldTransformInverseDirty(bool value);
    // System.Boolean get_isWorldTransformInverseOrDependenciesDirty()
    // Offset: 0x5697FE0
    bool get_isWorldTransformInverseOrDependenciesDirty();
    // public UnityEngine.Matrix4x4 get_worldTransform()
    // Offset: 0x5697FF0
    ::UnityEngine::Matrix4x4 get_worldTransform();
    // UnityEngine.Matrix4x4 get_worldTransformRef()
    // Offset: 0x5697E68
    ::UnityEngine::Matrix4x4 get_worldTransformRef();
    // UnityEngine.Matrix4x4 get_worldTransformInverse()
    // Offset: 0x56982F4
    ::UnityEngine::Matrix4x4 get_worldTransformInverse();
    // System.Void UpdateWorldTransform()
    // Offset: 0x569802C
    void UpdateWorldTransform();
    // System.Void UpdateWorldTransformInverse()
    // Offset: 0x569831C
    void UpdateWorldTransformInverse();
    // System.Boolean get_isWorldClipDirty()
    // Offset: 0x5698750
    bool get_isWorldClipDirty();
    // System.Void set_isWorldClipDirty(System.Boolean value)
    // Offset: 0x569875C
    void set_isWorldClipDirty(bool value);
    // UnityEngine.Rect get_worldClip()
    // Offset: 0x569878C
    ::UnityEngine::Rect get_worldClip();
    // UnityEngine.Rect get_worldClipMinusGroup()
    // Offset: 0x5698A98
    ::UnityEngine::Rect get_worldClipMinusGroup();
    // System.Boolean get_worldClipIsInfinite()
    // Offset: 0x5698AD4
    bool get_worldClipIsInfinite();
    // System.Void EnsureWorldTransformAndClipUpToDate()
    // Offset: 0x5698B04
    void EnsureWorldTransformAndClipUpToDate();
    // private System.Void UpdateWorldClip()
    // Offset: 0x56987C8
    void UpdateWorldClip();
    // private UnityEngine.Rect CombineClipRects(UnityEngine.Rect rect, UnityEngine.Rect parentRect)
    // Offset: 0x56990E0
    ::UnityEngine::Rect CombineClipRects(::UnityEngine::Rect rect, ::UnityEngine::Rect parentRect);
    // private UnityEngine.Rect SubstractBorderPadding(UnityEngine.Rect worldRect)
    // Offset: 0x5698B40
    ::UnityEngine::Rect SubstractBorderPadding(::UnityEngine::Rect worldRect);
    // static UnityEngine.Rect ComputeAAAlignedBound(UnityEngine.Rect position, UnityEngine.Matrix4x4 mat)
    // Offset: 0x5699128
    static ::UnityEngine::Rect ComputeAAAlignedBound(::UnityEngine::Rect position, ::UnityEngine::Matrix4x4 mat);
    // UnityEngine.UIElements.PseudoStates get_pseudoStates()
    // Offset: 0x569923C
    ::UnityEngine::UIElements::PseudoStates get_pseudoStates();
    // System.Void set_pseudoStates(UnityEngine.UIElements.PseudoStates value)
    // Offset: 0x5699244
    void set_pseudoStates(::UnityEngine::UIElements::PseudoStates value);
    // System.Int32 get_containedPointerIds()
    // Offset: 0x56992C8
    int get_containedPointerIds();
    // private System.Void set_containedPointerIds(System.Int32 value)
    // Offset: 0x56992D0
    void set_containedPointerIds(int value);
    // private System.Void UpdateHoverPseudoState()
    // Offset: 0x56992D8
    void UpdateHoverPseudoState();
    // static private System.Boolean IsPartOfCapturedChain(UnityEngine.UIElements.VisualElement self, in UnityEngine.UIElements.IEventHandler capturingElement)
    // Offset: 0x56993D0
    static bool IsPartOfCapturedChain(::UnityEngine::UIElements::VisualElement* self, ByRef<::UnityEngine::UIElements::IEventHandler*> capturingElement);
    // public UnityEngine.UIElements.PickingMode get_pickingMode()
    // Offset: 0x56994E4
    ::UnityEngine::UIElements::PickingMode get_pickingMode();
    // public System.Void set_pickingMode(UnityEngine.UIElements.PickingMode value)
    // Offset: 0x56994EC
    void set_pickingMode(::UnityEngine::UIElements::PickingMode value);
    // public System.String get_name()
    // Offset: 0x56994F4
    ::StringW get_name();
    // public System.Void set_name(System.String value)
    // Offset: 0x56994FC
    void set_name(::StringW value);
    // System.Collections.Generic.List`1<System.String> get_classList()
    // Offset: 0x5699564
    ::System::Collections::Generic::List_1<::StringW>* get_classList();
    // System.String get_fullTypeName()
    // Offset: 0x5699620
    ::StringW get_fullTypeName();
    // System.String get_typeName()
    // Offset: 0x5699774
    ::StringW get_typeName();
    // UnityEngine.Yoga.YogaNode get_yogaNode()
    // Offset: 0x5699790
    ::UnityEngine::Yoga::YogaNode* get_yogaNode();
    // private System.Void set_yogaNode(UnityEngine.Yoga.YogaNode value)
    // Offset: 0x5699798
    void set_yogaNode(::UnityEngine::Yoga::YogaNode* value);
    // UnityEngine.UIElements.ComputedStyle get_computedStyle()
    // Offset: 0x568AEA0
    ::UnityEngine::UIElements::ComputedStyle get_computedStyle();
    // System.Boolean get_hasInlineStyle()
    // Offset: 0x56997A8
    bool get_hasInlineStyle();
    // System.Boolean get_styleInitialized()
    // Offset: 0x5692C2C
    bool get_styleInitialized();
    // System.Void set_styleInitialized(System.Boolean value)
    // Offset: 0x56997B8
    void set_styleInitialized(bool value);
    // private System.Void ChangeIMGUIContainerCount(System.Int32 delta)
    // Offset: 0x56997E8
    void ChangeIMGUIContainerCount(int delta);
    // UnityEngine.Rect GetTooltipRect()
    // Offset: 0x569A7B4
    ::UnityEngine::Rect GetTooltipRect();
    // private System.Void SetTooltip(UnityEngine.UIElements.TooltipEvent e)
    // Offset: 0x569A6CC
    void SetTooltip(::UnityEngine::UIElements::TooltipEvent* e);
    // System.Void SetPanel(UnityEngine.UIElements.BaseVisualElementPanel p)
    // Offset: 0x569A8D0
    void SetPanel(::UnityEngine::UIElements::BaseVisualElementPanel* p);
    // private System.Void WillChangePanel(UnityEngine.UIElements.BaseVisualElementPanel destinationPanel)
    // Offset: 0x569B338
    void WillChangePanel(::UnityEngine::UIElements::BaseVisualElementPanel* destinationPanel);
    // private System.Void HasChangedPanel(UnityEngine.UIElements.BaseVisualElementPanel prevPanel)
    // Offset: 0x569B604
    void HasChangedPanel(::UnityEngine::UIElements::BaseVisualElementPanel* prevPanel);
    // System.Void IncrementVersion(UnityEngine.UIElements.VersionChangeType changeType)
    // Offset: 0x568F238
    void IncrementVersion(::UnityEngine::UIElements::VersionChangeType changeType);
    // System.Void InvokeHierarchyChanged(UnityEngine.UIElements.HierarchyChangeType changeType)
    // Offset: 0x569BAA0
    void InvokeHierarchyChanged(::UnityEngine::UIElements::HierarchyChangeType changeType);
    // private System.Boolean SetEnabledFromHierarchyPrivate(System.Boolean state)
    // Offset: 0x569BAC0
    bool SetEnabledFromHierarchyPrivate(bool state);
    // private System.Boolean get_isParentEnabledInHierarchy()
    // Offset: 0x569BE40
    bool get_isParentEnabledInHierarchy();
    // public System.Boolean get_enabledInHierarchy()
    // Offset: 0x56962D0
    bool get_enabledInHierarchy();
    // public System.Boolean get_enabledSelf()
    // Offset: 0x569C1F8
    bool get_enabledSelf();
    // private System.Void set_enabledSelf(System.Boolean value)
    // Offset: 0x569C200
    void set_enabledSelf(bool value);
    // public System.Void SetEnabled(System.Boolean value)
    // Offset: 0x5699B44
    void SetEnabled(bool value);
    // private System.Void PropagateEnabledToChildren(System.Boolean value)
    // Offset: 0x569C20C
    void PropagateEnabledToChildren(bool value);
    // public System.Boolean get_visible()
    // Offset: 0x5696224
    bool get_visible();
    // public System.Void set_visible(System.Boolean value)
    // Offset: 0x569C2BC
    void set_visible(bool value);
    // public System.Void MarkDirtyRepaint()
    // Offset: 0x569C3A0
    void MarkDirtyRepaint();
    // public System.Action`1<UnityEngine.UIElements.MeshGenerationContext> get_generateVisualContent()
    // Offset: 0x569C3C4
    ::System::Action_1<::UnityEngine::UIElements::MeshGenerationContext*>* get_generateVisualContent();
    // public System.Void set_generateVisualContent(System.Action`1<UnityEngine.UIElements.MeshGenerationContext> value)
    // Offset: 0x569C3CC
    void set_generateVisualContent(::System::Action_1<::UnityEngine::UIElements::MeshGenerationContext*>* value);
    // System.Void InvokeGenerateVisualContent(UnityEngine.UIElements.MeshGenerationContext mgc)
    // Offset: 0x569C3DC
    void InvokeGenerateVisualContent(::UnityEngine::UIElements::MeshGenerationContext* mgc);
    // System.Void GetFullHierarchicalViewDataKey(System.Text.StringBuilder key)
    // Offset: 0x569C5C8
    void GetFullHierarchicalViewDataKey(::System::Text::StringBuilder* key);
    // System.String GetFullHierarchicalViewDataKey()
    // Offset: 0x569C65C
    ::StringW GetFullHierarchicalViewDataKey();
    // T GetOrCreateViewData(System.Object existing, System.String key)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class T>
    T GetOrCreateViewData(::Il2CppObject* existing, ::StringW key) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::VisualElement::GetOrCreateViewData");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetOrCreateViewData", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(existing), ::il2cpp_utils::ExtractType(key)})));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}));
      return ::il2cpp_utils::RunMethodRethrow<T, false>(this, ___generic__method, existing, key);
    }
    // System.Void OverwriteFromViewData(System.Object obj, System.String key)
    // Offset: 0x569C6D0
    void OverwriteFromViewData(::Il2CppObject* obj, ::StringW key);
    // System.Void SaveViewData()
    // Offset: 0x569C9E0
    void SaveViewData();
    // System.Boolean IsViewDataPersitenceSupportedOnChildren(System.Boolean existingState)
    // Offset: 0x569CA5C
    bool IsViewDataPersitenceSupportedOnChildren(bool existingState);
    // System.Void OnViewDataReady(System.Boolean enablePersistence)
    // Offset: 0x569CAD8
    void OnViewDataReady(bool enablePersistence);
    // System.Void OnViewDataReady()
    // Offset: 0x569CB14
    void OnViewDataReady();
    // public System.Boolean ContainsPoint(UnityEngine.Vector2 localPoint)
    // Offset: 0x569CB18
    bool ContainsPoint(::UnityEngine::Vector2 localPoint);
    // System.Boolean get_requireMeasureFunction()
    // Offset: 0x569CB6C
    bool get_requireMeasureFunction();
    // System.Void set_requireMeasureFunction(System.Boolean value)
    // Offset: 0x569CB78
    void set_requireMeasureFunction(bool value);
    // private System.Void AssignMeasureFunction()
    // Offset: 0x569CBEC
    void AssignMeasureFunction();
    // private System.Void RemoveMeasureFunction()
    // Offset: 0x569CC7C
    void RemoveMeasureFunction();
    // protected internal UnityEngine.Vector2 DoMeasure(System.Single desiredWidth, UnityEngine.UIElements.VisualElement/MeasureMode widthMode, System.Single desiredHeight, UnityEngine.UIElements.VisualElement/MeasureMode heightMode)
    // Offset: 0x569CC9C
    ::UnityEngine::Vector2 DoMeasure(float desiredWidth, ::UnityEngine::UIElements::VisualElement::MeasureMode widthMode, float desiredHeight, ::UnityEngine::UIElements::VisualElement::MeasureMode heightMode);
    // UnityEngine.Yoga.YogaSize Measure(UnityEngine.Yoga.YogaNode node, System.Single width, UnityEngine.Yoga.YogaMeasureMode widthMode, System.Single height, UnityEngine.Yoga.YogaMeasureMode heightMode)
    // Offset: 0x569CCAC
    ::UnityEngine::Yoga::YogaSize Measure(::UnityEngine::Yoga::YogaNode* node, float width, ::UnityEngine::Yoga::YogaMeasureMode widthMode, float height, ::UnityEngine::Yoga::YogaMeasureMode heightMode);
    // private System.Void FinalizeLayout()
    // Offset: 0x569CDD4
    void FinalizeLayout();
    // System.Void SetInlineRule(UnityEngine.UIElements.StyleSheet sheet, UnityEngine.UIElements.StyleRule rule)
    // Offset: 0x569CE20
    void SetInlineRule(::UnityEngine::UIElements::StyleSheet* sheet, ::UnityEngine::UIElements::StyleRule* rule);
    // System.Void SetComputedStyle(ref UnityEngine.UIElements.ComputedStyle newStyle)
    // Offset: 0x569CEC4
    void SetComputedStyle(ByRef<::UnityEngine::UIElements::ComputedStyle> newStyle);
    // System.Collections.Generic.List`1<System.String> GetClassesForIteration()
    // Offset: 0x569D270
    ::System::Collections::Generic::List_1<::StringW>* GetClassesForIteration();
    // public System.Void AddToClassList(System.String className)
    // Offset: 0x569BFC8
    void AddToClassList(::StringW className);
    // public System.Void RemoveFromClassList(System.String className)
    // Offset: 0x569BEA0
    void RemoveFromClassList(::StringW className);
    // public System.Void EnableInClassList(System.String className, System.Boolean enable)
    // Offset: 0x569C1EC
    void EnableInClassList(::StringW className, bool enable);
    // public System.Boolean ClassListContains(System.String cls)
    // Offset: 0x569D278
    bool ClassListContains(::StringW cls);
    // System.Object GetProperty(UnityEngine.PropertyName key)
    // Offset: 0x569D324
    ::Il2CppObject* GetProperty(::UnityEngine::PropertyName key);
    // System.Void SetProperty(UnityEngine.PropertyName key, System.Object value)
    // Offset: 0x569D500
    void SetProperty(::UnityEngine::PropertyName key, ::Il2CppObject* value);
    // System.Boolean HasProperty(UnityEngine.PropertyName key)
    // Offset: 0x569D578
    bool HasProperty(::UnityEngine::PropertyName key);
    // private System.Boolean TryGetPropertyInternal(UnityEngine.PropertyName key, out System.Object value)
    // Offset: 0x5695CEC
    bool TryGetPropertyInternal(::UnityEngine::PropertyName key, ByRef<::Il2CppObject*> value);
    // static private System.Void CheckUserKeyArgument(UnityEngine.PropertyName key)
    // Offset: 0x569D3A4
    static void CheckUserKeyArgument(::UnityEngine::PropertyName key);
    // private System.Void SetPropertyInternal(UnityEngine.PropertyName key, System.Object value)
    // Offset: 0x5695E58
    void SetPropertyInternal(::UnityEngine::PropertyName key, ::Il2CppObject* value);
    // private System.Void UpdateCursorStyle(System.Int64 eventType)
    // Offset: 0x569A288
    void UpdateCursorStyle(int64_t eventType);
    // UnityEngine.UIElements.VisualElement/RenderTargetMode get_subRenderTargetMode()
    // Offset: 0x569D5F8
    ::UnityEngine::UIElements::VisualElement::RenderTargetMode get_subRenderTargetMode();
    // UnityEngine.Material get_defaultMaterial()
    // Offset: 0x569D600
    ::UnityEngine::Material* get_defaultMaterial();
    // private UnityEngine.UIElements.VisualElementAnimationSystem GetAnimationSystem()
    // Offset: 0x569D608
    ::UnityEngine::UIElements::VisualElementAnimationSystem* GetAnimationSystem();
    // System.Void RegisterAnimation(UnityEngine.UIElements.Experimental.IValueAnimationUpdate anim)
    // Offset: 0x569D69C
    void RegisterAnimation(::UnityEngine::UIElements::Experimental::IValueAnimationUpdate* anim);
    // System.Void UnregisterAnimation(UnityEngine.UIElements.Experimental.IValueAnimationUpdate anim)
    // Offset: 0x569D7CC
    void UnregisterAnimation(::UnityEngine::UIElements::Experimental::IValueAnimationUpdate* anim);
    // private System.Void UnregisterRunningAnimations()
    // Offset: 0x569B938
    void UnregisterRunningAnimations();
    // private System.Void RegisterRunningAnimations()
    // Offset: 0x569BA08
    void RegisterRunningAnimations();
    // static private UnityEngine.UIElements.Experimental.ValueAnimation`1<T> StartAnimation(UnityEngine.UIElements.Experimental.ValueAnimation`1<T> anim, System.Func`2<UnityEngine.UIElements.VisualElement,T> fromValueGetter, T to, System.Int32 durationMs, System.Action`2<UnityEngine.UIElements.VisualElement,T> onValueChanged)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class T>
    static ::UnityEngine::UIElements::Experimental::ValueAnimation_1<T>* StartAnimation(::UnityEngine::UIElements::Experimental::ValueAnimation_1<T>* anim, ::System::Func_2<::UnityEngine::UIElements::VisualElement*, T>* fromValueGetter, T to, int durationMs, ::System::Action_2<::UnityEngine::UIElements::VisualElement*, T>* onValueChanged) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::VisualElement::StartAnimation");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UIElements", "VisualElement", "StartAnimation", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(anim), ::il2cpp_utils::ExtractType(fromValueGetter), ::il2cpp_utils::ExtractType(to), ::il2cpp_utils::ExtractType(durationMs), ::il2cpp_utils::ExtractType(onValueChanged)})));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}));
      return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::UIElements::Experimental::ValueAnimation_1<T>*, false>(static_cast<Il2CppObject*>(nullptr), ___generic__method, anim, fromValueGetter, to, durationMs, onValueChanged);
    }
    // static private System.Void AssignStyleValues(UnityEngine.UIElements.VisualElement ve, UnityEngine.UIElements.Experimental.StyleValues src)
    // Offset: 0x569D844
    static void AssignStyleValues(::UnityEngine::UIElements::VisualElement* ve, ::UnityEngine::UIElements::Experimental::StyleValues src);
    // private UnityEngine.UIElements.Experimental.StyleValues ReadCurrentValues(UnityEngine.UIElements.VisualElement ve, UnityEngine.UIElements.Experimental.StyleValues targetValuesToRead)
    // Offset: 0x569EE38
    ::UnityEngine::UIElements::Experimental::StyleValues ReadCurrentValues(::UnityEngine::UIElements::VisualElement* ve, ::UnityEngine::UIElements::Experimental::StyleValues targetValuesToRead);
    // private UnityEngine.UIElements.Experimental.ValueAnimation`1<UnityEngine.UIElements.Experimental.StyleValues> UnityEngine.UIElements.Experimental.ITransitionAnimations.Start(UnityEngine.UIElements.Experimental.StyleValues to, System.Int32 durationMs)
    // Offset: 0x569FD24
    ::UnityEngine::UIElements::Experimental::ValueAnimation_1<::UnityEngine::UIElements::Experimental::StyleValues>* UnityEngine_UIElements_Experimental_ITransitionAnimations_Start(::UnityEngine::UIElements::Experimental::StyleValues to, int durationMs);
    // private UnityEngine.UIElements.Experimental.ValueAnimation`1<UnityEngine.UIElements.Experimental.StyleValues> Start(System.Func`2<UnityEngine.UIElements.VisualElement,UnityEngine.UIElements.Experimental.StyleValues> fromValueGetter, UnityEngine.UIElements.Experimental.StyleValues to, System.Int32 durationMs)
    // Offset: 0x569FE24
    ::UnityEngine::UIElements::Experimental::ValueAnimation_1<::UnityEngine::UIElements::Experimental::StyleValues>* Start(::System::Func_2<::UnityEngine::UIElements::VisualElement*, ::UnityEngine::UIElements::Experimental::StyleValues>* fromValueGetter, ::UnityEngine::UIElements::Experimental::StyleValues to, int durationMs);
    // private System.Void DirtyNextParentWithEventCallback()
    // Offset: 0x569FFA4
    void DirtyNextParentWithEventCallback();
    // private System.Void SetAsNextParentWithEventCallback()
    // Offset: 0x5695ACC
    void SetAsNextParentWithEventCallback();
    // System.Boolean GetCachedNextParentWithEventCallback(out UnityEngine.UIElements.VisualElement nextParent)
    // Offset: 0x56A0024
    bool GetCachedNextParentWithEventCallback(ByRef<::UnityEngine::UIElements::VisualElement*> nextParent);
    // UnityEngine.UIElements.VisualElement get_nextParentWithEventCallback()
    // Offset: 0x56A0074
    ::UnityEngine::UIElements::VisualElement* get_nextParentWithEventCallback();
    // private System.Void PropagateCachedNextParentWithEventCallback(UnityEngine.UIElements.VisualElement nextParent, UnityEngine.UIElements.VisualElement stopParent)
    // Offset: 0x56A0168
    void PropagateCachedNextParentWithEventCallback(::UnityEngine::UIElements::VisualElement* nextParent, ::UnityEngine::UIElements::VisualElement* stopParent);
    // System.Int32 get_eventCallbackCategories()
    // Offset: 0x56A01E0
    int get_eventCallbackCategories();
    // System.Void set_eventCallbackCategories(System.Int32 value)
    // Offset: 0x56A01E8
    void set_eventCallbackCategories(int value);
    // System.Int32 get_eventCallbackParentCategories()
    // Offset: 0x56A025C
    int get_eventCallbackParentCategories();
    // System.Boolean get_isEventCallbackParentCategoriesDirty()
    // Offset: 0x56A029C
    bool get_isEventCallbackParentCategoriesDirty();
    // System.Void set_isEventCallbackParentCategoriesDirty(System.Boolean value)
    // Offset: 0x56A0360
    void set_isEventCallbackParentCategoriesDirty(bool value);
    // private System.Void UpdateCallbackParentCategories()
    // Offset: 0x56A02A8
    void UpdateCallbackParentCategories();
    // System.Boolean HasEventCallbacks(UnityEngine.UIElements.EventCategory eventCategory)
    // Offset: 0x56A0390
    bool HasEventCallbacks(::UnityEngine::UIElements::EventCategory eventCategory);
    // System.Boolean HasParentEventCallbacksOrDefaultActions(UnityEngine.UIElements.EventCategory eventCategory)
    // Offset: 0x56A03A0
    bool HasParentEventCallbacksOrDefaultActions(::UnityEngine::UIElements::EventCategory eventCategory);
    // System.Boolean HasEventCallbacksOrDefaultActions(UnityEngine.UIElements.EventCategory eventCategory)
    // Offset: 0x569B918
    bool HasEventCallbacksOrDefaultActions(::UnityEngine::UIElements::EventCategory eventCategory);
    // System.Boolean HasParentEventCallbacksOrDefaultActionAtTarget(UnityEngine.UIElements.EventCategory eventCategory)
    // Offset: 0x56A03D4
    bool HasParentEventCallbacksOrDefaultActionAtTarget(::UnityEngine::UIElements::EventCategory eventCategory);
    // System.Boolean HasEventCallbacksOrDefaultActionAtTarget(UnityEngine.UIElements.EventCategory eventCategory)
    // Offset: 0x56A0400
    bool HasEventCallbacksOrDefaultActionAtTarget(::UnityEngine::UIElements::EventCategory eventCategory);
    // System.Boolean HasDefaultAction(UnityEngine.UIElements.EventCategory eventCategory)
    // Offset: 0x56A0418
    bool HasDefaultAction(::UnityEngine::UIElements::EventCategory eventCategory);
    // public UnityEngine.UIElements.IExperimentalFeatures get_experimental()
    // Offset: 0x56A0428
    ::UnityEngine::UIElements::IExperimentalFeatures* get_experimental();
    // private UnityEngine.UIElements.Experimental.ITransitionAnimations UnityEngine.UIElements.IExperimentalFeatures.get_animation()
    // Offset: 0x56A042C
    ::UnityEngine::UIElements::Experimental::ITransitionAnimations* UnityEngine_UIElements_IExperimentalFeatures_get_animation();
    // public UnityEngine.UIElements.VisualElement/Hierarchy get_hierarchy()
    // Offset: 0x56A0430
    ::UnityEngine::UIElements::VisualElement::Hierarchy get_hierarchy();
    // private System.Void set_hierarchy(UnityEngine.UIElements.VisualElement/Hierarchy value)
    // Offset: 0x56A0438
    void set_hierarchy(::UnityEngine::UIElements::VisualElement::Hierarchy value);
    // System.Boolean get_isRootVisualContainer()
    // Offset: 0x56A044C
    bool get_isRootVisualContainer();
    // System.Void set_isRootVisualContainer(System.Boolean value)
    // Offset: 0x56A0454
    void set_isRootVisualContainer(bool value);
    // System.Boolean get_disableClipping()
    // Offset: 0x56A0460
    bool get_disableClipping();
    // System.Void set_disableClipping(System.Boolean value)
    // Offset: 0x56A046C
    void set_disableClipping(bool value);
    // System.Boolean ShouldClip()
    // Offset: 0x5697E3C
    bool ShouldClip();
    // public UnityEngine.UIElements.VisualElement get_parent()
    // Offset: 0x569621C
    ::UnityEngine::UIElements::VisualElement* get_parent();
    // UnityEngine.UIElements.BaseVisualElementPanel get_elementPanel()
    // Offset: 0x56A049C
    ::UnityEngine::UIElements::BaseVisualElementPanel* get_elementPanel();
    // private System.Void set_elementPanel(UnityEngine.UIElements.BaseVisualElementPanel value)
    // Offset: 0x56A04A4
    void set_elementPanel(::UnityEngine::UIElements::BaseVisualElementPanel* value);
    // public UnityEngine.UIElements.IPanel get_panel()
    // Offset: 0x5696390
    ::UnityEngine::UIElements::IPanel* get_panel();
    // public UnityEngine.UIElements.VisualElement get_contentContainer()
    // Offset: 0x56A04B4
    ::UnityEngine::UIElements::VisualElement* get_contentContainer();
    // System.Void set_visualTreeAssetSource(UnityEngine.UIElements.VisualTreeAsset value)
    // Offset: 0x56A04B8
    void set_visualTreeAssetSource(::UnityEngine::UIElements::VisualTreeAsset* value);
    // public System.Void Add(UnityEngine.UIElements.VisualElement child)
    // Offset: 0x56A04C8
    void Add(::UnityEngine::UIElements::VisualElement* child);
    // public System.Void Insert(System.Int32 index, UnityEngine.UIElements.VisualElement element)
    // Offset: 0x56A0584
    void Insert(int index, ::UnityEngine::UIElements::VisualElement* element);
    // public System.Void Clear()
    // Offset: 0x56A0620
    void Clear();
    // public UnityEngine.UIElements.VisualElement ElementAt(System.Int32 index)
    // Offset: 0x56A0688
    ::UnityEngine::UIElements::VisualElement* ElementAt(int index);
    // public UnityEngine.UIElements.VisualElement get_Item(System.Int32 key)
    // Offset: 0x56A068C
    ::UnityEngine::UIElements::VisualElement* get_Item(int key);
    // public System.Int32 get_childCount()
    // Offset: 0x56A0704
    int get_childCount();
    // public System.Int32 IndexOf(UnityEngine.UIElements.VisualElement element)
    // Offset: 0x56A076C
    int IndexOf(::UnityEngine::UIElements::VisualElement* element);
    // UnityEngine.UIElements.VisualElement ElementAtTreePath(System.Collections.Generic.List`1<System.Int32> childIndexes)
    // Offset: 0x56A07EC
    ::UnityEngine::UIElements::VisualElement* ElementAtTreePath(::System::Collections::Generic::List_1<int>* childIndexes);
    // System.Boolean FindElementInTree(UnityEngine.UIElements.VisualElement element, System.Collections.Generic.List`1<System.Int32> outChildIndexes)
    // Offset: 0x56A099C
    bool FindElementInTree(::UnityEngine::UIElements::VisualElement* element, ::System::Collections::Generic::List_1<int>* outChildIndexes);
    // public System.Collections.Generic.IEnumerable`1<UnityEngine.UIElements.VisualElement> Children()
    // Offset: 0x56A0A9C
    ::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::VisualElement*>* Children();
    // public System.Void BringToFront()
    // Offset: 0x56A0B50
    void BringToFront();
    // public System.Void SendToBack()
    // Offset: 0x56A0BB4
    void SendToBack();
    // public System.Void PlaceBehind(UnityEngine.UIElements.VisualElement sibling)
    // Offset: 0x56A0C18
    void PlaceBehind(::UnityEngine::UIElements::VisualElement* sibling);
    // public System.Void RemoveFromHierarchy()
    // Offset: 0x56A0D40
    void RemoveFromHierarchy();
    // public T GetFirstOfType()
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class T>
    T GetFirstOfType() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::VisualElement::GetFirstOfType");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetFirstOfType", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}, ::std::vector<const Il2CppType*>{})));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}));
      return ::il2cpp_utils::RunMethodRethrow<T, false>(this, ___generic__method);
    }
    // public T GetFirstAncestorOfType()
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class T>
    T GetFirstAncestorOfType() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::VisualElement::GetFirstAncestorOfType");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetFirstAncestorOfType", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}, ::std::vector<const Il2CppType*>{})));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}));
      return ::il2cpp_utils::RunMethodRethrow<T, false>(this, ___generic__method);
    }
    // UnityEngine.UIElements.VisualElement GetFirstAncestorWhere(System.Predicate`1<UnityEngine.UIElements.VisualElement> predicate)
    // Offset: 0x56A0DA4
    ::UnityEngine::UIElements::VisualElement* GetFirstAncestorWhere(::System::Predicate_1<::UnityEngine::UIElements::VisualElement*>* predicate);
    // public System.Boolean Contains(UnityEngine.UIElements.VisualElement child)
    // Offset: 0x5699474
    bool Contains(::UnityEngine::UIElements::VisualElement* child);
    // private System.Void GatherAllChildren(System.Collections.Generic.List`1<UnityEngine.UIElements.VisualElement> elements)
    // Offset: 0x569B260
    void GatherAllChildren(::System::Collections::Generic::List_1<::UnityEngine::UIElements::VisualElement*>* elements);
    // public UnityEngine.UIElements.VisualElement FindCommonAncestor(UnityEngine.UIElements.VisualElement other)
    // Offset: 0x56A0E18
    ::UnityEngine::UIElements::VisualElement* FindCommonAncestor(::UnityEngine::UIElements::VisualElement* other);
    // UnityEngine.UIElements.VisualElement GetRoot()
    // Offset: 0x56A0F9C
    ::UnityEngine::UIElements::VisualElement* GetRoot();
    // UnityEngine.UIElements.VisualElement GetRootVisualContainer()
    // Offset: 0x56A105C
    ::UnityEngine::UIElements::VisualElement* GetRootVisualContainer();
    // UnityEngine.UIElements.VisualElement GetNextElementDepthFirst()
    // Offset: 0x56A10A0
    ::UnityEngine::UIElements::VisualElement* GetNextElementDepthFirst();
    // UnityEngine.UIElements.VisualElement GetPreviousElementDepthFirst()
    // Offset: 0x56A1190
    ::UnityEngine::UIElements::VisualElement* GetPreviousElementDepthFirst();
    // UnityEngine.UIElements.VisualElement RetargetElement(UnityEngine.UIElements.VisualElement retargetAgainst)
    // Offset: 0x56A1274
    ::UnityEngine::UIElements::VisualElement* RetargetElement(::UnityEngine::UIElements::VisualElement* retargetAgainst);
    // private UnityEngine.Vector3 get_positionWithLayout()
    // Offset: 0x5698370
    ::UnityEngine::Vector3 get_positionWithLayout();
    // System.Void GetPivotedMatrixWithLayout(out UnityEngine.Matrix4x4 result)
    // Offset: 0x56983B8
    void GetPivotedMatrixWithLayout(ByRef<::UnityEngine::Matrix4x4> result);
    // System.Boolean get_hasDefaultRotationAndScale()
    // Offset: 0x56A1348
    bool get_hasDefaultRotationAndScale();
    // static System.Single Min(System.Single a, System.Single b, System.Single c, System.Single d)
    // Offset: 0x56A1414
    static float Min(float a, float b, float c, float d);
    // static System.Single Max(System.Single a, System.Single b, System.Single c, System.Single d)
    // Offset: 0x56A1430
    static float Max(float a, float b, float c, float d);
    // private System.Void TransformAlignedRectToParentSpace(ref UnityEngine.Rect rect)
    // Offset: 0x56A144C
    void TransformAlignedRectToParentSpace(ByRef<::UnityEngine::Rect> rect);
    // static UnityEngine.Rect CalculateConservativeRect(ref UnityEngine.Matrix4x4 matrix, UnityEngine.Rect rect)
    // Offset: 0x56A15BC
    static ::UnityEngine::Rect CalculateConservativeRect(ByRef<::UnityEngine::Matrix4x4> matrix, ::UnityEngine::Rect rect);
    // static System.Void TransformAlignedRect(ref UnityEngine.Matrix4x4 matrix, ref UnityEngine.Rect rect)
    // Offset: 0x56A182C
    static void TransformAlignedRect(ByRef<::UnityEngine::Matrix4x4> matrix, ByRef<::UnityEngine::Rect> rect);
    // static System.Void OrderMinMaxRect(ref UnityEngine.Rect rect)
    // Offset: 0x56A17E8
    static void OrderMinMaxRect(ByRef<::UnityEngine::Rect> rect);
    // static UnityEngine.Vector2 MultiplyMatrix44Point2(ref UnityEngine.Matrix4x4 lhs, UnityEngine.Vector2 point)
    // Offset: 0x56A18C0
    static ::UnityEngine::Vector2 MultiplyMatrix44Point2(ByRef<::UnityEngine::Matrix4x4> lhs, ::UnityEngine::Vector2 point);
    // static UnityEngine.Vector2 MultiplyVector2(ref UnityEngine.Matrix4x4 lhs, UnityEngine.Vector2 vector)
    // Offset: 0x56A18E4
    static ::UnityEngine::Vector2 MultiplyVector2(ByRef<::UnityEngine::Matrix4x4> lhs, ::UnityEngine::Vector2 vector);
    // static System.Void MultiplyMatrix34(ref UnityEngine.Matrix4x4 lhs, ref UnityEngine.Matrix4x4 rhs, out UnityEngine.Matrix4x4 res)
    // Offset: 0x5698578
    static void MultiplyMatrix34(ByRef<::UnityEngine::Matrix4x4> lhs, ByRef<::UnityEngine::Matrix4x4> rhs, ByRef<::UnityEngine::Matrix4x4> res);
    // static private System.Void TranslateMatrix34(ref UnityEngine.Matrix4x4 lhs, UnityEngine.Vector3 rhs, out UnityEngine.Matrix4x4 res)
    // Offset: 0x56A1900
    static void TranslateMatrix34(ByRef<::UnityEngine::Matrix4x4> lhs, ::UnityEngine::Vector3 rhs, ByRef<::UnityEngine::Matrix4x4> res);
    // static private System.Void TranslateMatrix34InPlace(ref UnityEngine.Matrix4x4 lhs, UnityEngine.Vector3 rhs)
    // Offset: 0x56A19EC
    static void TranslateMatrix34InPlace(ByRef<::UnityEngine::Matrix4x4> lhs, ::UnityEngine::Vector3 rhs);
    // public UnityEngine.UIElements.IVisualElementScheduler get_schedule()
    // Offset: 0x56A1A48
    ::UnityEngine::UIElements::IVisualElementScheduler* get_schedule();
    // private UnityEngine.UIElements.IVisualElementScheduledItem UnityEngine.UIElements.IVisualElementScheduler.Execute(System.Action`1<UnityEngine.UIElements.TimerState> timerUpdateEvent)
    // Offset: 0x56A1A4C
    ::UnityEngine::UIElements::IVisualElementScheduledItem* UnityEngine_UIElements_IVisualElementScheduler_Execute(::System::Action_1<::UnityEngine::UIElements::TimerState>* timerUpdateEvent);
    // private UnityEngine.UIElements.IVisualElementScheduledItem UnityEngine.UIElements.IVisualElementScheduler.Execute(System.Action updateEvent)
    // Offset: 0x56A1B08
    ::UnityEngine::UIElements::IVisualElementScheduledItem* UnityEngine_UIElements_IVisualElementScheduler_Execute(::System::Action* updateEvent);
    // public UnityEngine.UIElements.IStyle get_style()
    // Offset: 0x5692108
    ::UnityEngine::UIElements::IStyle* get_style();
    // public UnityEngine.UIElements.ICustomStyle get_customStyle()
    // Offset: 0x56A1BC4
    ::UnityEngine::UIElements::ICustomStyle* get_customStyle();
    // public UnityEngine.UIElements.VisualElementStyleSheetSet get_styleSheets()
    // Offset: 0x56A1C44
    ::UnityEngine::UIElements::VisualElementStyleSheetSet get_styleSheets();
    // System.Void AddStyleSheetPath(System.String sheetPath)
    // Offset: 0x56A1C68
    void AddStyleSheetPath(::StringW sheetPath);
    // private UnityEngine.UIElements.StyleFloat ResolveLengthValue(UnityEngine.UIElements.Length length, System.Boolean isRow)
    // Offset: 0x56930CC
    ::UnityEngine::UIElements::StyleFloat ResolveLengthValue(::UnityEngine::UIElements::Length length, bool isRow);
    // private UnityEngine.Vector3 ResolveTranslate()
    // Offset: 0x569365C
    ::UnityEngine::Vector3 ResolveTranslate();
    // private UnityEngine.Vector3 ResolveTransformOrigin()
    // Offset: 0x5693354
    ::UnityEngine::Vector3 ResolveTransformOrigin();
    // private UnityEngine.Quaternion ResolveRotation()
    // Offset: 0x56A12D8
    ::UnityEngine::Quaternion ResolveRotation();
    // private UnityEngine.Vector3 ResolveScale()
    // Offset: 0x56A1320
    ::UnityEngine::Vector3 ResolveScale();
    // public System.String get_tooltip()
    // Offset: 0x569A7B8
    ::StringW get_tooltip();
    // public System.Void set_tooltip(System.String value)
    // Offset: 0x56A1E9C
    void set_tooltip(::StringW value);
    // static UnityEngine.UIElements.VisualElement/TypeData GetOrCreateTypeData(System.Type t)
    // Offset: 0x56A1FC0
    static ::UnityEngine::UIElements::VisualElement::TypeData* GetOrCreateTypeData(::System::Type* t);
    // private UnityEngine.UIElements.VisualElement/TypeData get_typeData()
    // Offset: 0x569963C
    ::UnityEngine::UIElements::VisualElement::TypeData* get_typeData();
    // static private System.Void .cctor()
    // Offset: 0x56A20D0
    static void _cctor();
    // private UnityEngine.Yoga.YogaSize <AssignMeasureFunction>b__424_0(UnityEngine.Yoga.YogaNode node, System.Single f, UnityEngine.Yoga.YogaMeasureMode mode, System.Single f1, UnityEngine.Yoga.YogaMeasureMode heightMode)
    // Offset: 0x56A2398
    ::UnityEngine::Yoga::YogaSize $AssignMeasureFunction$b__424_0(::UnityEngine::Yoga::YogaNode* node, float f, ::UnityEngine::Yoga::YogaMeasureMode mode, float f1, ::UnityEngine::Yoga::YogaMeasureMode heightMode);
    // public override System.Boolean get_canGrabFocus()
    // Offset: 0x5696104
    // Implemented from: UnityEngine.UIElements.Focusable
    // Base method: System.Boolean Focusable::get_canGrabFocus()
    bool get_canGrabFocus();
    // public override UnityEngine.UIElements.FocusController get_focusController()
    // Offset: 0x56962E0
    // Implemented from: UnityEngine.UIElements.Focusable
    // Base method: UnityEngine.UIElements.FocusController Focusable::get_focusController()
    ::UnityEngine::UIElements::FocusController* get_focusController();
    // public System.Void .ctor()
    // Offset: 0x5699828
    // Implemented from: UnityEngine.UIElements.Focusable
    // Base method: System.Void Focusable::.ctor()
    // Base method: System.Void CallbackEventHandler::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static VisualElement* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::VisualElement::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<VisualElement*, creationType>()));
    }
    // protected override System.Void ExecuteDefaultAction(UnityEngine.UIElements.EventBase evt)
    // Offset: 0x5699B68
    // Implemented from: UnityEngine.UIElements.Focusable
    // Base method: System.Void Focusable::ExecuteDefaultAction(UnityEngine.UIElements.EventBase evt)
    void ExecuteDefaultAction(::UnityEngine::UIElements::EventBase* evt);
    // public override System.Void Focus()
    // Offset: 0x569A84C
    // Implemented from: UnityEngine.UIElements.Focusable
    // Base method: System.Void Focusable::Focus()
    void Focus();
    // public override System.Void SendEvent(UnityEngine.UIElements.EventBase e)
    // Offset: 0x569BA74
    // Implemented from: UnityEngine.UIElements.CallbackEventHandler
    // Base method: System.Void CallbackEventHandler::SendEvent(UnityEngine.UIElements.EventBase e)
    void SendEvent(::UnityEngine::UIElements::EventBase* e);
    // override System.Void SendEvent(UnityEngine.UIElements.EventBase e, UnityEngine.UIElements.DispatchMode dispatchMode)
    // Offset: 0x569BA8C
    // Implemented from: UnityEngine.UIElements.CallbackEventHandler
    // Base method: System.Void CallbackEventHandler::SendEvent(UnityEngine.UIElements.EventBase e, UnityEngine.UIElements.DispatchMode dispatchMode)
    void SendEvent(::UnityEngine::UIElements::EventBase* e, ::UnityEngine::UIElements::DispatchMode dispatchMode);
    // public override System.String ToString()
    // Offset: 0x569D090
    // Implemented from: System.Object
    // Base method: System.String Object::ToString()
    ::StringW ToString();
  }; // UnityEngine.UIElements.VisualElement
  // WARNING Not writing size check since size may be invalid!
  // static public System.Boolean op_Equality(UnityEngine.UIElements.VisualElement/Hierarchy x, UnityEngine.UIElements.VisualElement/Hierarchy y)
  // Offset: 0x56A3E9C
  bool operator ==(const ::UnityEngine::UIElements::VisualElement::Hierarchy& x, const ::UnityEngine::UIElements::VisualElement::Hierarchy& y);
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::UIElements::VisualElement::Hierarchy, "UnityEngine.UIElements", "VisualElement/Hierarchy");
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::UIElements::VisualElement::RenderTargetMode, "UnityEngine.UIElements", "VisualElement/RenderTargetMode");
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::get_resolvedStyle
// Il2CppName: get_resolvedStyle
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::IResolvedStyle* (UnityEngine::UIElements::VisualElement::*)()>(&UnityEngine::UIElements::VisualElement::get_resolvedStyle)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "get_resolvedStyle", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::UnityEngine_UIElements_IResolvedStyle_get_backgroundColor
// Il2CppName: UnityEngine.UIElements.IResolvedStyle.get_backgroundColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Color (UnityEngine::UIElements::VisualElement::*)()>(&UnityEngine::UIElements::VisualElement::UnityEngine_UIElements_IResolvedStyle_get_backgroundColor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "UnityEngine.UIElements.IResolvedStyle.get_backgroundColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::UnityEngine_UIElements_IResolvedStyle_get_borderBottomColor
// Il2CppName: UnityEngine.UIElements.IResolvedStyle.get_borderBottomColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Color (UnityEngine::UIElements::VisualElement::*)()>(&UnityEngine::UIElements::VisualElement::UnityEngine_UIElements_IResolvedStyle_get_borderBottomColor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "UnityEngine.UIElements.IResolvedStyle.get_borderBottomColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::UnityEngine_UIElements_IResolvedStyle_get_borderBottomLeftRadius
// Il2CppName: UnityEngine.UIElements.IResolvedStyle.get_borderBottomLeftRadius
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::UIElements::VisualElement::*)()>(&UnityEngine::UIElements::VisualElement::UnityEngine_UIElements_IResolvedStyle_get_borderBottomLeftRadius)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "UnityEngine.UIElements.IResolvedStyle.get_borderBottomLeftRadius", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::UnityEngine_UIElements_IResolvedStyle_get_borderBottomRightRadius
// Il2CppName: UnityEngine.UIElements.IResolvedStyle.get_borderBottomRightRadius
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::UIElements::VisualElement::*)()>(&UnityEngine::UIElements::VisualElement::UnityEngine_UIElements_IResolvedStyle_get_borderBottomRightRadius)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "UnityEngine.UIElements.IResolvedStyle.get_borderBottomRightRadius", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::UnityEngine_UIElements_IResolvedStyle_get_borderBottomWidth
// Il2CppName: UnityEngine.UIElements.IResolvedStyle.get_borderBottomWidth
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::UIElements::VisualElement::*)()>(&UnityEngine::UIElements::VisualElement::UnityEngine_UIElements_IResolvedStyle_get_borderBottomWidth)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "UnityEngine.UIElements.IResolvedStyle.get_borderBottomWidth", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::UnityEngine_UIElements_IResolvedStyle_get_borderLeftColor
// Il2CppName: UnityEngine.UIElements.IResolvedStyle.get_borderLeftColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Color (UnityEngine::UIElements::VisualElement::*)()>(&UnityEngine::UIElements::VisualElement::UnityEngine_UIElements_IResolvedStyle_get_borderLeftColor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "UnityEngine.UIElements.IResolvedStyle.get_borderLeftColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::UnityEngine_UIElements_IResolvedStyle_get_borderLeftWidth
// Il2CppName: UnityEngine.UIElements.IResolvedStyle.get_borderLeftWidth
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::UIElements::VisualElement::*)()>(&UnityEngine::UIElements::VisualElement::UnityEngine_UIElements_IResolvedStyle_get_borderLeftWidth)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "UnityEngine.UIElements.IResolvedStyle.get_borderLeftWidth", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::UnityEngine_UIElements_IResolvedStyle_get_borderRightColor
// Il2CppName: UnityEngine.UIElements.IResolvedStyle.get_borderRightColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Color (UnityEngine::UIElements::VisualElement::*)()>(&UnityEngine::UIElements::VisualElement::UnityEngine_UIElements_IResolvedStyle_get_borderRightColor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "UnityEngine.UIElements.IResolvedStyle.get_borderRightColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::UnityEngine_UIElements_IResolvedStyle_get_borderRightWidth
// Il2CppName: UnityEngine.UIElements.IResolvedStyle.get_borderRightWidth
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::UIElements::VisualElement::*)()>(&UnityEngine::UIElements::VisualElement::UnityEngine_UIElements_IResolvedStyle_get_borderRightWidth)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "UnityEngine.UIElements.IResolvedStyle.get_borderRightWidth", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::UnityEngine_UIElements_IResolvedStyle_get_borderTopColor
// Il2CppName: UnityEngine.UIElements.IResolvedStyle.get_borderTopColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Color (UnityEngine::UIElements::VisualElement::*)()>(&UnityEngine::UIElements::VisualElement::UnityEngine_UIElements_IResolvedStyle_get_borderTopColor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "UnityEngine.UIElements.IResolvedStyle.get_borderTopColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::UnityEngine_UIElements_IResolvedStyle_get_borderTopLeftRadius
// Il2CppName: UnityEngine.UIElements.IResolvedStyle.get_borderTopLeftRadius
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::UIElements::VisualElement::*)()>(&UnityEngine::UIElements::VisualElement::UnityEngine_UIElements_IResolvedStyle_get_borderTopLeftRadius)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "UnityEngine.UIElements.IResolvedStyle.get_borderTopLeftRadius", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::UnityEngine_UIElements_IResolvedStyle_get_borderTopRightRadius
// Il2CppName: UnityEngine.UIElements.IResolvedStyle.get_borderTopRightRadius
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::UIElements::VisualElement::*)()>(&UnityEngine::UIElements::VisualElement::UnityEngine_UIElements_IResolvedStyle_get_borderTopRightRadius)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "UnityEngine.UIElements.IResolvedStyle.get_borderTopRightRadius", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::UnityEngine_UIElements_IResolvedStyle_get_borderTopWidth
// Il2CppName: UnityEngine.UIElements.IResolvedStyle.get_borderTopWidth
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::UIElements::VisualElement::*)()>(&UnityEngine::UIElements::VisualElement::UnityEngine_UIElements_IResolvedStyle_get_borderTopWidth)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "UnityEngine.UIElements.IResolvedStyle.get_borderTopWidth", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::UnityEngine_UIElements_IResolvedStyle_get_bottom
// Il2CppName: UnityEngine.UIElements.IResolvedStyle.get_bottom
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::UIElements::VisualElement::*)()>(&UnityEngine::UIElements::VisualElement::UnityEngine_UIElements_IResolvedStyle_get_bottom)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "UnityEngine.UIElements.IResolvedStyle.get_bottom", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::UnityEngine_UIElements_IResolvedStyle_get_color
// Il2CppName: UnityEngine.UIElements.IResolvedStyle.get_color
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Color (UnityEngine::UIElements::VisualElement::*)()>(&UnityEngine::UIElements::VisualElement::UnityEngine_UIElements_IResolvedStyle_get_color)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "UnityEngine.UIElements.IResolvedStyle.get_color", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::UnityEngine_UIElements_IResolvedStyle_get_display
// Il2CppName: UnityEngine.UIElements.IResolvedStyle.get_display
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::DisplayStyle (UnityEngine::UIElements::VisualElement::*)()>(&UnityEngine::UIElements::VisualElement::UnityEngine_UIElements_IResolvedStyle_get_display)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "UnityEngine.UIElements.IResolvedStyle.get_display", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::UnityEngine_UIElements_IResolvedStyle_get_flexDirection
// Il2CppName: UnityEngine.UIElements.IResolvedStyle.get_flexDirection
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::FlexDirection (UnityEngine::UIElements::VisualElement::*)()>(&UnityEngine::UIElements::VisualElement::UnityEngine_UIElements_IResolvedStyle_get_flexDirection)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "UnityEngine.UIElements.IResolvedStyle.get_flexDirection", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::UnityEngine_UIElements_IResolvedStyle_get_flexGrow
// Il2CppName: UnityEngine.UIElements.IResolvedStyle.get_flexGrow
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::UIElements::VisualElement::*)()>(&UnityEngine::UIElements::VisualElement::UnityEngine_UIElements_IResolvedStyle_get_flexGrow)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "UnityEngine.UIElements.IResolvedStyle.get_flexGrow", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::UnityEngine_UIElements_IResolvedStyle_get_flexShrink
// Il2CppName: UnityEngine.UIElements.IResolvedStyle.get_flexShrink
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::UIElements::VisualElement::*)()>(&UnityEngine::UIElements::VisualElement::UnityEngine_UIElements_IResolvedStyle_get_flexShrink)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "UnityEngine.UIElements.IResolvedStyle.get_flexShrink", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::UnityEngine_UIElements_IResolvedStyle_get_height
// Il2CppName: UnityEngine.UIElements.IResolvedStyle.get_height
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::UIElements::VisualElement::*)()>(&UnityEngine::UIElements::VisualElement::UnityEngine_UIElements_IResolvedStyle_get_height)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "UnityEngine.UIElements.IResolvedStyle.get_height", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::UnityEngine_UIElements_IResolvedStyle_get_left
// Il2CppName: UnityEngine.UIElements.IResolvedStyle.get_left
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::UIElements::VisualElement::*)()>(&UnityEngine::UIElements::VisualElement::UnityEngine_UIElements_IResolvedStyle_get_left)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "UnityEngine.UIElements.IResolvedStyle.get_left", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::UnityEngine_UIElements_IResolvedStyle_get_marginBottom
// Il2CppName: UnityEngine.UIElements.IResolvedStyle.get_marginBottom
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::UIElements::VisualElement::*)()>(&UnityEngine::UIElements::VisualElement::UnityEngine_UIElements_IResolvedStyle_get_marginBottom)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "UnityEngine.UIElements.IResolvedStyle.get_marginBottom", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::UnityEngine_UIElements_IResolvedStyle_get_marginLeft
// Il2CppName: UnityEngine.UIElements.IResolvedStyle.get_marginLeft
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::UIElements::VisualElement::*)()>(&UnityEngine::UIElements::VisualElement::UnityEngine_UIElements_IResolvedStyle_get_marginLeft)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "UnityEngine.UIElements.IResolvedStyle.get_marginLeft", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::UnityEngine_UIElements_IResolvedStyle_get_marginRight
// Il2CppName: UnityEngine.UIElements.IResolvedStyle.get_marginRight
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::UIElements::VisualElement::*)()>(&UnityEngine::UIElements::VisualElement::UnityEngine_UIElements_IResolvedStyle_get_marginRight)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "UnityEngine.UIElements.IResolvedStyle.get_marginRight", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::UnityEngine_UIElements_IResolvedStyle_get_marginTop
// Il2CppName: UnityEngine.UIElements.IResolvedStyle.get_marginTop
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::UIElements::VisualElement::*)()>(&UnityEngine::UIElements::VisualElement::UnityEngine_UIElements_IResolvedStyle_get_marginTop)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "UnityEngine.UIElements.IResolvedStyle.get_marginTop", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::UnityEngine_UIElements_IResolvedStyle_get_minHeight
// Il2CppName: UnityEngine.UIElements.IResolvedStyle.get_minHeight
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::StyleFloat (UnityEngine::UIElements::VisualElement::*)()>(&UnityEngine::UIElements::VisualElement::UnityEngine_UIElements_IResolvedStyle_get_minHeight)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "UnityEngine.UIElements.IResolvedStyle.get_minHeight", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::UnityEngine_UIElements_IResolvedStyle_get_minWidth
// Il2CppName: UnityEngine.UIElements.IResolvedStyle.get_minWidth
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::StyleFloat (UnityEngine::UIElements::VisualElement::*)()>(&UnityEngine::UIElements::VisualElement::UnityEngine_UIElements_IResolvedStyle_get_minWidth)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "UnityEngine.UIElements.IResolvedStyle.get_minWidth", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::UnityEngine_UIElements_IResolvedStyle_get_opacity
// Il2CppName: UnityEngine.UIElements.IResolvedStyle.get_opacity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::UIElements::VisualElement::*)()>(&UnityEngine::UIElements::VisualElement::UnityEngine_UIElements_IResolvedStyle_get_opacity)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "UnityEngine.UIElements.IResolvedStyle.get_opacity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::UnityEngine_UIElements_IResolvedStyle_get_paddingBottom
// Il2CppName: UnityEngine.UIElements.IResolvedStyle.get_paddingBottom
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::UIElements::VisualElement::*)()>(&UnityEngine::UIElements::VisualElement::UnityEngine_UIElements_IResolvedStyle_get_paddingBottom)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "UnityEngine.UIElements.IResolvedStyle.get_paddingBottom", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::UnityEngine_UIElements_IResolvedStyle_get_paddingLeft
// Il2CppName: UnityEngine.UIElements.IResolvedStyle.get_paddingLeft
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::UIElements::VisualElement::*)()>(&UnityEngine::UIElements::VisualElement::UnityEngine_UIElements_IResolvedStyle_get_paddingLeft)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "UnityEngine.UIElements.IResolvedStyle.get_paddingLeft", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::UnityEngine_UIElements_IResolvedStyle_get_paddingRight
// Il2CppName: UnityEngine.UIElements.IResolvedStyle.get_paddingRight
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::UIElements::VisualElement::*)()>(&UnityEngine::UIElements::VisualElement::UnityEngine_UIElements_IResolvedStyle_get_paddingRight)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "UnityEngine.UIElements.IResolvedStyle.get_paddingRight", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::UnityEngine_UIElements_IResolvedStyle_get_paddingTop
// Il2CppName: UnityEngine.UIElements.IResolvedStyle.get_paddingTop
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::UIElements::VisualElement::*)()>(&UnityEngine::UIElements::VisualElement::UnityEngine_UIElements_IResolvedStyle_get_paddingTop)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "UnityEngine.UIElements.IResolvedStyle.get_paddingTop", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::UnityEngine_UIElements_IResolvedStyle_get_right
// Il2CppName: UnityEngine.UIElements.IResolvedStyle.get_right
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::UIElements::VisualElement::*)()>(&UnityEngine::UIElements::VisualElement::UnityEngine_UIElements_IResolvedStyle_get_right)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "UnityEngine.UIElements.IResolvedStyle.get_right", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::UnityEngine_UIElements_IResolvedStyle_get_scale
// Il2CppName: UnityEngine.UIElements.IResolvedStyle.get_scale
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::Scale (UnityEngine::UIElements::VisualElement::*)()>(&UnityEngine::UIElements::VisualElement::UnityEngine_UIElements_IResolvedStyle_get_scale)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "UnityEngine.UIElements.IResolvedStyle.get_scale", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::UnityEngine_UIElements_IResolvedStyle_get_top
// Il2CppName: UnityEngine.UIElements.IResolvedStyle.get_top
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::UIElements::VisualElement::*)()>(&UnityEngine::UIElements::VisualElement::UnityEngine_UIElements_IResolvedStyle_get_top)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "UnityEngine.UIElements.IResolvedStyle.get_top", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::UnityEngine_UIElements_IResolvedStyle_get_transformOrigin
// Il2CppName: UnityEngine.UIElements.IResolvedStyle.get_transformOrigin
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector3 (UnityEngine::UIElements::VisualElement::*)()>(&UnityEngine::UIElements::VisualElement::UnityEngine_UIElements_IResolvedStyle_get_transformOrigin)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "UnityEngine.UIElements.IResolvedStyle.get_transformOrigin", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::UnityEngine_UIElements_IResolvedStyle_get_translate
// Il2CppName: UnityEngine.UIElements.IResolvedStyle.get_translate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector3 (UnityEngine::UIElements::VisualElement::*)()>(&UnityEngine::UIElements::VisualElement::UnityEngine_UIElements_IResolvedStyle_get_translate)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "UnityEngine.UIElements.IResolvedStyle.get_translate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::UnityEngine_UIElements_IResolvedStyle_get_unityBackgroundImageTintColor
// Il2CppName: UnityEngine.UIElements.IResolvedStyle.get_unityBackgroundImageTintColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Color (UnityEngine::UIElements::VisualElement::*)()>(&UnityEngine::UIElements::VisualElement::UnityEngine_UIElements_IResolvedStyle_get_unityBackgroundImageTintColor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "UnityEngine.UIElements.IResolvedStyle.get_unityBackgroundImageTintColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::UnityEngine_UIElements_IResolvedStyle_get_unitySliceLeft
// Il2CppName: UnityEngine.UIElements.IResolvedStyle.get_unitySliceLeft
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::UIElements::VisualElement::*)()>(&UnityEngine::UIElements::VisualElement::UnityEngine_UIElements_IResolvedStyle_get_unitySliceLeft)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "UnityEngine.UIElements.IResolvedStyle.get_unitySliceLeft", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::UnityEngine_UIElements_IResolvedStyle_get_unitySliceRight
// Il2CppName: UnityEngine.UIElements.IResolvedStyle.get_unitySliceRight
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::UIElements::VisualElement::*)()>(&UnityEngine::UIElements::VisualElement::UnityEngine_UIElements_IResolvedStyle_get_unitySliceRight)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "UnityEngine.UIElements.IResolvedStyle.get_unitySliceRight", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::UnityEngine_UIElements_IResolvedStyle_get_unitySliceScale
// Il2CppName: UnityEngine.UIElements.IResolvedStyle.get_unitySliceScale
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::UIElements::VisualElement::*)()>(&UnityEngine::UIElements::VisualElement::UnityEngine_UIElements_IResolvedStyle_get_unitySliceScale)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "UnityEngine.UIElements.IResolvedStyle.get_unitySliceScale", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::UnityEngine_UIElements_IResolvedStyle_get_unityTextOutlineColor
// Il2CppName: UnityEngine.UIElements.IResolvedStyle.get_unityTextOutlineColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Color (UnityEngine::UIElements::VisualElement::*)()>(&UnityEngine::UIElements::VisualElement::UnityEngine_UIElements_IResolvedStyle_get_unityTextOutlineColor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "UnityEngine.UIElements.IResolvedStyle.get_unityTextOutlineColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::UnityEngine_UIElements_IResolvedStyle_get_unityTextOutlineWidth
// Il2CppName: UnityEngine.UIElements.IResolvedStyle.get_unityTextOutlineWidth
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::UIElements::VisualElement::*)()>(&UnityEngine::UIElements::VisualElement::UnityEngine_UIElements_IResolvedStyle_get_unityTextOutlineWidth)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "UnityEngine.UIElements.IResolvedStyle.get_unityTextOutlineWidth", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::UnityEngine_UIElements_IResolvedStyle_get_visibility
// Il2CppName: UnityEngine.UIElements.IResolvedStyle.get_visibility
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::Visibility (UnityEngine::UIElements::VisualElement::*)()>(&UnityEngine::UIElements::VisualElement::UnityEngine_UIElements_IResolvedStyle_get_visibility)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "UnityEngine.UIElements.IResolvedStyle.get_visibility", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::UnityEngine_UIElements_IResolvedStyle_get_width
// Il2CppName: UnityEngine.UIElements.IResolvedStyle.get_width
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::UIElements::VisualElement::*)()>(&UnityEngine::UIElements::VisualElement::UnityEngine_UIElements_IResolvedStyle_get_width)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "UnityEngine.UIElements.IResolvedStyle.get_width", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::get_hasRunningAnimations
// Il2CppName: get_hasRunningAnimations
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::VisualElement::*)()>(&UnityEngine::UIElements::VisualElement::get_hasRunningAnimations)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "get_hasRunningAnimations", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::get_hasCompletedAnimations
// Il2CppName: get_hasCompletedAnimations
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::VisualElement::*)()>(&UnityEngine::UIElements::VisualElement::get_hasCompletedAnimations)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "get_hasCompletedAnimations", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::UnityEngine_UIElements_IStylePropertyAnimations_get_runningAnimationCount
// Il2CppName: UnityEngine.UIElements.IStylePropertyAnimations.get_runningAnimationCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::UIElements::VisualElement::*)()>(&UnityEngine::UIElements::VisualElement::UnityEngine_UIElements_IStylePropertyAnimations_get_runningAnimationCount)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "UnityEngine.UIElements.IStylePropertyAnimations.get_runningAnimationCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::UnityEngine_UIElements_IStylePropertyAnimations_set_runningAnimationCount
// Il2CppName: UnityEngine.UIElements.IStylePropertyAnimations.set_runningAnimationCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::VisualElement::*)(int)>(&UnityEngine::UIElements::VisualElement::UnityEngine_UIElements_IStylePropertyAnimations_set_runningAnimationCount)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "UnityEngine.UIElements.IStylePropertyAnimations.set_runningAnimationCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::UnityEngine_UIElements_IStylePropertyAnimations_get_completedAnimationCount
// Il2CppName: UnityEngine.UIElements.IStylePropertyAnimations.get_completedAnimationCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::UIElements::VisualElement::*)()>(&UnityEngine::UIElements::VisualElement::UnityEngine_UIElements_IStylePropertyAnimations_get_completedAnimationCount)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "UnityEngine.UIElements.IStylePropertyAnimations.get_completedAnimationCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::UnityEngine_UIElements_IStylePropertyAnimations_set_completedAnimationCount
// Il2CppName: UnityEngine.UIElements.IStylePropertyAnimations.set_completedAnimationCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::VisualElement::*)(int)>(&UnityEngine::UIElements::VisualElement::UnityEngine_UIElements_IStylePropertyAnimations_set_completedAnimationCount)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "UnityEngine.UIElements.IStylePropertyAnimations.set_completedAnimationCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::GetStylePropertyAnimationSystem
// Il2CppName: GetStylePropertyAnimationSystem
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::IStylePropertyAnimationSystem* (UnityEngine::UIElements::VisualElement::*)()>(&UnityEngine::UIElements::VisualElement::GetStylePropertyAnimationSystem)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "GetStylePropertyAnimationSystem", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::get_styleAnimation
// Il2CppName: get_styleAnimation
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::IStylePropertyAnimations* (UnityEngine::UIElements::VisualElement::*)()>(&UnityEngine::UIElements::VisualElement::get_styleAnimation)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "get_styleAnimation", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::UnityEngine_UIElements_IStylePropertyAnimations_Start
// Il2CppName: UnityEngine.UIElements.IStylePropertyAnimations.Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::VisualElement::*)(::UnityEngine::UIElements::StyleSheets::StylePropertyId, float, float, int, int, ::System::Func_2<float, float>*)>(&UnityEngine::UIElements::VisualElement::UnityEngine_UIElements_IStylePropertyAnimations_Start)> {
  static const MethodInfo* get() {
    static auto* id = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements.StyleSheets", "StylePropertyId")->byval_arg;
    static auto* from = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* to = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* durationMs = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* delayMs = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* easingCurve = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Func`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Single"), ::il2cpp_utils::GetClassFromName("System", "Single")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "UnityEngine.UIElements.IStylePropertyAnimations.Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{id, from, to, durationMs, delayMs, easingCurve});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::UnityEngine_UIElements_IStylePropertyAnimations_Start
// Il2CppName: UnityEngine.UIElements.IStylePropertyAnimations.Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::VisualElement::*)(::UnityEngine::UIElements::StyleSheets::StylePropertyId, int, int, int, int, ::System::Func_2<float, float>*)>(&UnityEngine::UIElements::VisualElement::UnityEngine_UIElements_IStylePropertyAnimations_Start)> {
  static const MethodInfo* get() {
    static auto* id = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements.StyleSheets", "StylePropertyId")->byval_arg;
    static auto* from = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* to = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* durationMs = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* delayMs = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* easingCurve = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Func`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Single"), ::il2cpp_utils::GetClassFromName("System", "Single")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "UnityEngine.UIElements.IStylePropertyAnimations.Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{id, from, to, durationMs, delayMs, easingCurve});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::UnityEngine_UIElements_IStylePropertyAnimations_Start
// Il2CppName: UnityEngine.UIElements.IStylePropertyAnimations.Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::VisualElement::*)(::UnityEngine::UIElements::StyleSheets::StylePropertyId, ::UnityEngine::UIElements::Length, ::UnityEngine::UIElements::Length, int, int, ::System::Func_2<float, float>*)>(&UnityEngine::UIElements::VisualElement::UnityEngine_UIElements_IStylePropertyAnimations_Start)> {
  static const MethodInfo* get() {
    static auto* id = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements.StyleSheets", "StylePropertyId")->byval_arg;
    static auto* from = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "Length")->byval_arg;
    static auto* to = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "Length")->byval_arg;
    static auto* durationMs = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* delayMs = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* easingCurve = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Func`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Single"), ::il2cpp_utils::GetClassFromName("System", "Single")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "UnityEngine.UIElements.IStylePropertyAnimations.Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{id, from, to, durationMs, delayMs, easingCurve});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::UnityEngine_UIElements_IStylePropertyAnimations_Start
// Il2CppName: UnityEngine.UIElements.IStylePropertyAnimations.Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::VisualElement::*)(::UnityEngine::UIElements::StyleSheets::StylePropertyId, ::UnityEngine::Color, ::UnityEngine::Color, int, int, ::System::Func_2<float, float>*)>(&UnityEngine::UIElements::VisualElement::UnityEngine_UIElements_IStylePropertyAnimations_Start)> {
  static const MethodInfo* get() {
    static auto* id = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements.StyleSheets", "StylePropertyId")->byval_arg;
    static auto* from = &::il2cpp_utils::GetClassFromName("UnityEngine", "Color")->byval_arg;
    static auto* to = &::il2cpp_utils::GetClassFromName("UnityEngine", "Color")->byval_arg;
    static auto* durationMs = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* delayMs = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* easingCurve = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Func`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Single"), ::il2cpp_utils::GetClassFromName("System", "Single")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "UnityEngine.UIElements.IStylePropertyAnimations.Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{id, from, to, durationMs, delayMs, easingCurve});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::UnityEngine_UIElements_IStylePropertyAnimations_StartEnum
// Il2CppName: UnityEngine.UIElements.IStylePropertyAnimations.StartEnum
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::VisualElement::*)(::UnityEngine::UIElements::StyleSheets::StylePropertyId, int, int, int, int, ::System::Func_2<float, float>*)>(&UnityEngine::UIElements::VisualElement::UnityEngine_UIElements_IStylePropertyAnimations_StartEnum)> {
  static const MethodInfo* get() {
    static auto* id = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements.StyleSheets", "StylePropertyId")->byval_arg;
    static auto* from = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* to = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* durationMs = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* delayMs = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* easingCurve = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Func`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Single"), ::il2cpp_utils::GetClassFromName("System", "Single")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "UnityEngine.UIElements.IStylePropertyAnimations.StartEnum", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{id, from, to, durationMs, delayMs, easingCurve});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::UnityEngine_UIElements_IStylePropertyAnimations_Start
// Il2CppName: UnityEngine.UIElements.IStylePropertyAnimations.Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::VisualElement::*)(::UnityEngine::UIElements::StyleSheets::StylePropertyId, ::UnityEngine::UIElements::Background, ::UnityEngine::UIElements::Background, int, int, ::System::Func_2<float, float>*)>(&UnityEngine::UIElements::VisualElement::UnityEngine_UIElements_IStylePropertyAnimations_Start)> {
  static const MethodInfo* get() {
    static auto* id = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements.StyleSheets", "StylePropertyId")->byval_arg;
    static auto* from = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "Background")->byval_arg;
    static auto* to = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "Background")->byval_arg;
    static auto* durationMs = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* delayMs = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* easingCurve = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Func`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Single"), ::il2cpp_utils::GetClassFromName("System", "Single")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "UnityEngine.UIElements.IStylePropertyAnimations.Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{id, from, to, durationMs, delayMs, easingCurve});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::UnityEngine_UIElements_IStylePropertyAnimations_Start
// Il2CppName: UnityEngine.UIElements.IStylePropertyAnimations.Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::VisualElement::*)(::UnityEngine::UIElements::StyleSheets::StylePropertyId, ::UnityEngine::UIElements::FontDefinition, ::UnityEngine::UIElements::FontDefinition, int, int, ::System::Func_2<float, float>*)>(&UnityEngine::UIElements::VisualElement::UnityEngine_UIElements_IStylePropertyAnimations_Start)> {
  static const MethodInfo* get() {
    static auto* id = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements.StyleSheets", "StylePropertyId")->byval_arg;
    static auto* from = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "FontDefinition")->byval_arg;
    static auto* to = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "FontDefinition")->byval_arg;
    static auto* durationMs = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* delayMs = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* easingCurve = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Func`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Single"), ::il2cpp_utils::GetClassFromName("System", "Single")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "UnityEngine.UIElements.IStylePropertyAnimations.Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{id, from, to, durationMs, delayMs, easingCurve});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::UnityEngine_UIElements_IStylePropertyAnimations_Start
// Il2CppName: UnityEngine.UIElements.IStylePropertyAnimations.Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::VisualElement::*)(::UnityEngine::UIElements::StyleSheets::StylePropertyId, ::UnityEngine::Font*, ::UnityEngine::Font*, int, int, ::System::Func_2<float, float>*)>(&UnityEngine::UIElements::VisualElement::UnityEngine_UIElements_IStylePropertyAnimations_Start)> {
  static const MethodInfo* get() {
    static auto* id = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements.StyleSheets", "StylePropertyId")->byval_arg;
    static auto* from = &::il2cpp_utils::GetClassFromName("UnityEngine", "Font")->byval_arg;
    static auto* to = &::il2cpp_utils::GetClassFromName("UnityEngine", "Font")->byval_arg;
    static auto* durationMs = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* delayMs = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* easingCurve = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Func`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Single"), ::il2cpp_utils::GetClassFromName("System", "Single")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "UnityEngine.UIElements.IStylePropertyAnimations.Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{id, from, to, durationMs, delayMs, easingCurve});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::UnityEngine_UIElements_IStylePropertyAnimations_Start
// Il2CppName: UnityEngine.UIElements.IStylePropertyAnimations.Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::VisualElement::*)(::UnityEngine::UIElements::StyleSheets::StylePropertyId, ::UnityEngine::UIElements::TextShadow, ::UnityEngine::UIElements::TextShadow, int, int, ::System::Func_2<float, float>*)>(&UnityEngine::UIElements::VisualElement::UnityEngine_UIElements_IStylePropertyAnimations_Start)> {
  static const MethodInfo* get() {
    static auto* id = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements.StyleSheets", "StylePropertyId")->byval_arg;
    static auto* from = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "TextShadow")->byval_arg;
    static auto* to = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "TextShadow")->byval_arg;
    static auto* durationMs = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* delayMs = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* easingCurve = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Func`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Single"), ::il2cpp_utils::GetClassFromName("System", "Single")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "UnityEngine.UIElements.IStylePropertyAnimations.Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{id, from, to, durationMs, delayMs, easingCurve});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::UnityEngine_UIElements_IStylePropertyAnimations_Start
// Il2CppName: UnityEngine.UIElements.IStylePropertyAnimations.Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::VisualElement::*)(::UnityEngine::UIElements::StyleSheets::StylePropertyId, ::UnityEngine::UIElements::Scale, ::UnityEngine::UIElements::Scale, int, int, ::System::Func_2<float, float>*)>(&UnityEngine::UIElements::VisualElement::UnityEngine_UIElements_IStylePropertyAnimations_Start)> {
  static const MethodInfo* get() {
    static auto* id = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements.StyleSheets", "StylePropertyId")->byval_arg;
    static auto* from = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "Scale")->byval_arg;
    static auto* to = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "Scale")->byval_arg;
    static auto* durationMs = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* delayMs = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* easingCurve = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Func`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Single"), ::il2cpp_utils::GetClassFromName("System", "Single")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "UnityEngine.UIElements.IStylePropertyAnimations.Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{id, from, to, durationMs, delayMs, easingCurve});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::UnityEngine_UIElements_IStylePropertyAnimations_Start
// Il2CppName: UnityEngine.UIElements.IStylePropertyAnimations.Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::VisualElement::*)(::UnityEngine::UIElements::StyleSheets::StylePropertyId, ::UnityEngine::UIElements::Translate, ::UnityEngine::UIElements::Translate, int, int, ::System::Func_2<float, float>*)>(&UnityEngine::UIElements::VisualElement::UnityEngine_UIElements_IStylePropertyAnimations_Start)> {
  static const MethodInfo* get() {
    static auto* id = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements.StyleSheets", "StylePropertyId")->byval_arg;
    static auto* from = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "Translate")->byval_arg;
    static auto* to = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "Translate")->byval_arg;
    static auto* durationMs = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* delayMs = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* easingCurve = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Func`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Single"), ::il2cpp_utils::GetClassFromName("System", "Single")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "UnityEngine.UIElements.IStylePropertyAnimations.Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{id, from, to, durationMs, delayMs, easingCurve});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::UnityEngine_UIElements_IStylePropertyAnimations_Start
// Il2CppName: UnityEngine.UIElements.IStylePropertyAnimations.Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::VisualElement::*)(::UnityEngine::UIElements::StyleSheets::StylePropertyId, ::UnityEngine::UIElements::Rotate, ::UnityEngine::UIElements::Rotate, int, int, ::System::Func_2<float, float>*)>(&UnityEngine::UIElements::VisualElement::UnityEngine_UIElements_IStylePropertyAnimations_Start)> {
  static const MethodInfo* get() {
    static auto* id = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements.StyleSheets", "StylePropertyId")->byval_arg;
    static auto* from = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "Rotate")->byval_arg;
    static auto* to = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "Rotate")->byval_arg;
    static auto* durationMs = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* delayMs = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* easingCurve = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Func`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Single"), ::il2cpp_utils::GetClassFromName("System", "Single")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "UnityEngine.UIElements.IStylePropertyAnimations.Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{id, from, to, durationMs, delayMs, easingCurve});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::UnityEngine_UIElements_IStylePropertyAnimations_Start
// Il2CppName: UnityEngine.UIElements.IStylePropertyAnimations.Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::VisualElement::*)(::UnityEngine::UIElements::StyleSheets::StylePropertyId, ::UnityEngine::UIElements::TransformOrigin, ::UnityEngine::UIElements::TransformOrigin, int, int, ::System::Func_2<float, float>*)>(&UnityEngine::UIElements::VisualElement::UnityEngine_UIElements_IStylePropertyAnimations_Start)> {
  static const MethodInfo* get() {
    static auto* id = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements.StyleSheets", "StylePropertyId")->byval_arg;
    static auto* from = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "TransformOrigin")->byval_arg;
    static auto* to = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "TransformOrigin")->byval_arg;
    static auto* durationMs = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* delayMs = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* easingCurve = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Func`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Single"), ::il2cpp_utils::GetClassFromName("System", "Single")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "UnityEngine.UIElements.IStylePropertyAnimations.Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{id, from, to, durationMs, delayMs, easingCurve});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::UnityEngine_UIElements_IStylePropertyAnimations_Start
// Il2CppName: UnityEngine.UIElements.IStylePropertyAnimations.Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::VisualElement::*)(::UnityEngine::UIElements::StyleSheets::StylePropertyId, ::UnityEngine::UIElements::BackgroundPosition, ::UnityEngine::UIElements::BackgroundPosition, int, int, ::System::Func_2<float, float>*)>(&UnityEngine::UIElements::VisualElement::UnityEngine_UIElements_IStylePropertyAnimations_Start)> {
  static const MethodInfo* get() {
    static auto* id = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements.StyleSheets", "StylePropertyId")->byval_arg;
    static auto* from = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "BackgroundPosition")->byval_arg;
    static auto* to = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "BackgroundPosition")->byval_arg;
    static auto* durationMs = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* delayMs = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* easingCurve = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Func`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Single"), ::il2cpp_utils::GetClassFromName("System", "Single")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "UnityEngine.UIElements.IStylePropertyAnimations.Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{id, from, to, durationMs, delayMs, easingCurve});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::UnityEngine_UIElements_IStylePropertyAnimations_Start
// Il2CppName: UnityEngine.UIElements.IStylePropertyAnimations.Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::VisualElement::*)(::UnityEngine::UIElements::StyleSheets::StylePropertyId, ::UnityEngine::UIElements::BackgroundRepeat, ::UnityEngine::UIElements::BackgroundRepeat, int, int, ::System::Func_2<float, float>*)>(&UnityEngine::UIElements::VisualElement::UnityEngine_UIElements_IStylePropertyAnimations_Start)> {
  static const MethodInfo* get() {
    static auto* id = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements.StyleSheets", "StylePropertyId")->byval_arg;
    static auto* from = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "BackgroundRepeat")->byval_arg;
    static auto* to = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "BackgroundRepeat")->byval_arg;
    static auto* durationMs = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* delayMs = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* easingCurve = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Func`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Single"), ::il2cpp_utils::GetClassFromName("System", "Single")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "UnityEngine.UIElements.IStylePropertyAnimations.Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{id, from, to, durationMs, delayMs, easingCurve});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::UnityEngine_UIElements_IStylePropertyAnimations_Start
// Il2CppName: UnityEngine.UIElements.IStylePropertyAnimations.Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::VisualElement::*)(::UnityEngine::UIElements::StyleSheets::StylePropertyId, ::UnityEngine::UIElements::BackgroundSize, ::UnityEngine::UIElements::BackgroundSize, int, int, ::System::Func_2<float, float>*)>(&UnityEngine::UIElements::VisualElement::UnityEngine_UIElements_IStylePropertyAnimations_Start)> {
  static const MethodInfo* get() {
    static auto* id = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements.StyleSheets", "StylePropertyId")->byval_arg;
    static auto* from = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "BackgroundSize")->byval_arg;
    static auto* to = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "BackgroundSize")->byval_arg;
    static auto* durationMs = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* delayMs = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* easingCurve = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Func`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Single"), ::il2cpp_utils::GetClassFromName("System", "Single")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "UnityEngine.UIElements.IStylePropertyAnimations.Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{id, from, to, durationMs, delayMs, easingCurve});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::UnityEngine_UIElements_IStylePropertyAnimations_CancelAnimation
// Il2CppName: UnityEngine.UIElements.IStylePropertyAnimations.CancelAnimation
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::VisualElement::*)(::UnityEngine::UIElements::StyleSheets::StylePropertyId)>(&UnityEngine::UIElements::VisualElement::UnityEngine_UIElements_IStylePropertyAnimations_CancelAnimation)> {
  static const MethodInfo* get() {
    static auto* id = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements.StyleSheets", "StylePropertyId")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "UnityEngine.UIElements.IStylePropertyAnimations.CancelAnimation", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{id});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::UnityEngine_UIElements_IStylePropertyAnimations_CancelAllAnimations
// Il2CppName: UnityEngine.UIElements.IStylePropertyAnimations.CancelAllAnimations
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::VisualElement::*)()>(&UnityEngine::UIElements::VisualElement::UnityEngine_UIElements_IStylePropertyAnimations_CancelAllAnimations)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "UnityEngine.UIElements.IStylePropertyAnimations.CancelAllAnimations", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::UnityEngine_UIElements_IStylePropertyAnimations_UpdateAnimation
// Il2CppName: UnityEngine.UIElements.IStylePropertyAnimations.UpdateAnimation
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::VisualElement::*)(::UnityEngine::UIElements::StyleSheets::StylePropertyId)>(&UnityEngine::UIElements::VisualElement::UnityEngine_UIElements_IStylePropertyAnimations_UpdateAnimation)> {
  static const MethodInfo* get() {
    static auto* id = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements.StyleSheets", "StylePropertyId")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "UnityEngine.UIElements.IStylePropertyAnimations.UpdateAnimation", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{id});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::UnityEngine_UIElements_IStylePropertyAnimations_GetAllAnimations
// Il2CppName: UnityEngine.UIElements.IStylePropertyAnimations.GetAllAnimations
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::VisualElement::*)(::System::Collections::Generic::List_1<::UnityEngine::UIElements::StyleSheets::StylePropertyId>*)>(&UnityEngine::UIElements::VisualElement::UnityEngine_UIElements_IStylePropertyAnimations_GetAllAnimations)> {
  static const MethodInfo* get() {
    static auto* outPropertyIds = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.UIElements.StyleSheets", "StylePropertyId")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "UnityEngine.UIElements.IStylePropertyAnimations.GetAllAnimations", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{outPropertyIds});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::TryConvertLengthUnits
// Il2CppName: TryConvertLengthUnits
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::VisualElement::*)(::UnityEngine::UIElements::StyleSheets::StylePropertyId, ByRef<::UnityEngine::UIElements::Length>, ByRef<::UnityEngine::UIElements::Length>, int)>(&UnityEngine::UIElements::VisualElement::TryConvertLengthUnits)> {
  static const MethodInfo* get() {
    static auto* id = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements.StyleSheets", "StylePropertyId")->byval_arg;
    static auto* from = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "Length")->this_arg;
    static auto* to = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "Length")->this_arg;
    static auto* subPropertyIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "TryConvertLengthUnits", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{id, from, to, subPropertyIndex});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::TryConvertTransformOriginUnits
// Il2CppName: TryConvertTransformOriginUnits
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::VisualElement::*)(ByRef<::UnityEngine::UIElements::TransformOrigin>, ByRef<::UnityEngine::UIElements::TransformOrigin>)>(&UnityEngine::UIElements::VisualElement::TryConvertTransformOriginUnits)> {
  static const MethodInfo* get() {
    static auto* from = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "TransformOrigin")->this_arg;
    static auto* to = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "TransformOrigin")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "TryConvertTransformOriginUnits", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{from, to});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::TryConvertTranslateUnits
// Il2CppName: TryConvertTranslateUnits
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::VisualElement::*)(ByRef<::UnityEngine::UIElements::Translate>, ByRef<::UnityEngine::UIElements::Translate>)>(&UnityEngine::UIElements::VisualElement::TryConvertTranslateUnits)> {
  static const MethodInfo* get() {
    static auto* from = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "Translate")->this_arg;
    static auto* to = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "Translate")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "TryConvertTranslateUnits", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{from, to});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::TryConvertBackgroundSizeUnits
// Il2CppName: TryConvertBackgroundSizeUnits
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::VisualElement::*)(ByRef<::UnityEngine::UIElements::BackgroundSize>, ByRef<::UnityEngine::UIElements::BackgroundSize>)>(&UnityEngine::UIElements::VisualElement::TryConvertBackgroundSizeUnits)> {
  static const MethodInfo* get() {
    static auto* from = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "BackgroundSize")->this_arg;
    static auto* to = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "BackgroundSize")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "TryConvertBackgroundSizeUnits", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{from, to});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::GetParentSizeForLengthConversion
// Il2CppName: GetParentSizeForLengthConversion
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Nullable_1<float> (UnityEngine::UIElements::VisualElement::*)(::UnityEngine::UIElements::StyleSheets::StylePropertyId, int)>(&UnityEngine::UIElements::VisualElement::GetParentSizeForLengthConversion)> {
  static const MethodInfo* get() {
    static auto* id = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements.StyleSheets", "StylePropertyId")->byval_arg;
    static auto* subPropertyIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "GetParentSizeForLengthConversion", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{id, subPropertyIndex});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::get_isCompositeRoot
// Il2CppName: get_isCompositeRoot
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::VisualElement::*)()>(&UnityEngine::UIElements::VisualElement::get_isCompositeRoot)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "get_isCompositeRoot", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::set_isCompositeRoot
// Il2CppName: set_isCompositeRoot
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::VisualElement::*)(bool)>(&UnityEngine::UIElements::VisualElement::set_isCompositeRoot)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "set_isCompositeRoot", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::get_isHierarchyDisplayed
// Il2CppName: get_isHierarchyDisplayed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::VisualElement::*)()>(&UnityEngine::UIElements::VisualElement::get_isHierarchyDisplayed)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "get_isHierarchyDisplayed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::set_isHierarchyDisplayed
// Il2CppName: set_isHierarchyDisplayed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::VisualElement::*)(bool)>(&UnityEngine::UIElements::VisualElement::set_isHierarchyDisplayed)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "set_isHierarchyDisplayed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::get_viewDataKey
// Il2CppName: get_viewDataKey
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (UnityEngine::UIElements::VisualElement::*)()>(&UnityEngine::UIElements::VisualElement::get_viewDataKey)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "get_viewDataKey", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::set_viewDataKey
// Il2CppName: set_viewDataKey
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::VisualElement::*)(::StringW)>(&UnityEngine::UIElements::VisualElement::set_viewDataKey)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "set_viewDataKey", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::get_enableViewDataPersistence
// Il2CppName: get_enableViewDataPersistence
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::VisualElement::*)()>(&UnityEngine::UIElements::VisualElement::get_enableViewDataPersistence)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "get_enableViewDataPersistence", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::set_enableViewDataPersistence
// Il2CppName: set_enableViewDataPersistence
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::VisualElement::*)(bool)>(&UnityEngine::UIElements::VisualElement::set_enableViewDataPersistence)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "set_enableViewDataPersistence", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::get_userData
// Il2CppName: get_userData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (UnityEngine::UIElements::VisualElement::*)()>(&UnityEngine::UIElements::VisualElement::get_userData)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "get_userData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::set_userData
// Il2CppName: set_userData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::VisualElement::*)(::Il2CppObject*)>(&UnityEngine::UIElements::VisualElement::set_userData)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "set_userData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::get_usageHints
// Il2CppName: get_usageHints
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::UsageHints (UnityEngine::UIElements::VisualElement::*)()>(&UnityEngine::UIElements::VisualElement::get_usageHints)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "get_usageHints", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::set_usageHints
// Il2CppName: set_usageHints
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::VisualElement::*)(::UnityEngine::UIElements::UsageHints)>(&UnityEngine::UIElements::VisualElement::set_usageHints)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "UsageHints")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "set_usageHints", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::get_renderHints
// Il2CppName: get_renderHints
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::RenderHints (UnityEngine::UIElements::VisualElement::*)()>(&UnityEngine::UIElements::VisualElement::get_renderHints)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "get_renderHints", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::set_renderHints
// Il2CppName: set_renderHints
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::VisualElement::*)(::UnityEngine::UIElements::RenderHints)>(&UnityEngine::UIElements::VisualElement::set_renderHints)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "RenderHints")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "set_renderHints", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::MarkRenderHintsClean
// Il2CppName: MarkRenderHintsClean
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::VisualElement::*)()>(&UnityEngine::UIElements::VisualElement::MarkRenderHintsClean)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "MarkRenderHintsClean", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::get_transform
// Il2CppName: get_transform
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::ITransform* (UnityEngine::UIElements::VisualElement::*)()>(&UnityEngine::UIElements::VisualElement::get_transform)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "get_transform", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::UnityEngine_UIElements_ITransform_get_position
// Il2CppName: UnityEngine.UIElements.ITransform.get_position
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector3 (UnityEngine::UIElements::VisualElement::*)()>(&UnityEngine::UIElements::VisualElement::UnityEngine_UIElements_ITransform_get_position)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "UnityEngine.UIElements.ITransform.get_position", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::UnityEngine_UIElements_ITransform_set_position
// Il2CppName: UnityEngine.UIElements.ITransform.set_position
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::VisualElement::*)(::UnityEngine::Vector3)>(&UnityEngine::UIElements::VisualElement::UnityEngine_UIElements_ITransform_set_position)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "UnityEngine.UIElements.ITransform.set_position", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::UnityEngine_UIElements_ITransform_get_scale
// Il2CppName: UnityEngine.UIElements.ITransform.get_scale
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector3 (UnityEngine::UIElements::VisualElement::*)()>(&UnityEngine::UIElements::VisualElement::UnityEngine_UIElements_ITransform_get_scale)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "UnityEngine.UIElements.ITransform.get_scale", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::get_isLayoutManual
// Il2CppName: get_isLayoutManual
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::VisualElement::*)()>(&UnityEngine::UIElements::VisualElement::get_isLayoutManual)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "get_isLayoutManual", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::set_isLayoutManual
// Il2CppName: set_isLayoutManual
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::VisualElement::*)(bool)>(&UnityEngine::UIElements::VisualElement::set_isLayoutManual)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "set_isLayoutManual", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::get_scaledPixelsPerPoint
// Il2CppName: get_scaledPixelsPerPoint
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::UIElements::VisualElement::*)()>(&UnityEngine::UIElements::VisualElement::get_scaledPixelsPerPoint)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "get_scaledPixelsPerPoint", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::get_layout
// Il2CppName: get_layout
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Rect (UnityEngine::UIElements::VisualElement::*)()>(&UnityEngine::UIElements::VisualElement::get_layout)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "get_layout", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::set_layout
// Il2CppName: set_layout
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::VisualElement::*)(::UnityEngine::Rect)>(&UnityEngine::UIElements::VisualElement::set_layout)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Rect")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "set_layout", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::ClearManualLayout
// Il2CppName: ClearManualLayout
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::VisualElement::*)()>(&UnityEngine::UIElements::VisualElement::ClearManualLayout)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "ClearManualLayout", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::get_contentRect
// Il2CppName: get_contentRect
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Rect (UnityEngine::UIElements::VisualElement::*)()>(&UnityEngine::UIElements::VisualElement::get_contentRect)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "get_contentRect", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::get_paddingRect
// Il2CppName: get_paddingRect
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Rect (UnityEngine::UIElements::VisualElement::*)()>(&UnityEngine::UIElements::VisualElement::get_paddingRect)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "get_paddingRect", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::get_isBoundingBoxDirty
// Il2CppName: get_isBoundingBoxDirty
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::VisualElement::*)()>(&UnityEngine::UIElements::VisualElement::get_isBoundingBoxDirty)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "get_isBoundingBoxDirty", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::set_isBoundingBoxDirty
// Il2CppName: set_isBoundingBoxDirty
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::VisualElement::*)(bool)>(&UnityEngine::UIElements::VisualElement::set_isBoundingBoxDirty)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "set_isBoundingBoxDirty", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::set_isWorldBoundingBoxDirty
// Il2CppName: set_isWorldBoundingBoxDirty
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::VisualElement::*)(bool)>(&UnityEngine::UIElements::VisualElement::set_isWorldBoundingBoxDirty)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "set_isWorldBoundingBoxDirty", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::get_isWorldBoundingBoxOrDependenciesDirty
// Il2CppName: get_isWorldBoundingBoxOrDependenciesDirty
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::VisualElement::*)()>(&UnityEngine::UIElements::VisualElement::get_isWorldBoundingBoxOrDependenciesDirty)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "get_isWorldBoundingBoxOrDependenciesDirty", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::get_boundingBox
// Il2CppName: get_boundingBox
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Rect (UnityEngine::UIElements::VisualElement::*)()>(&UnityEngine::UIElements::VisualElement::get_boundingBox)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "get_boundingBox", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::get_worldBoundingBox
// Il2CppName: get_worldBoundingBox
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Rect (UnityEngine::UIElements::VisualElement::*)()>(&UnityEngine::UIElements::VisualElement::get_worldBoundingBox)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "get_worldBoundingBox", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::get_boundingBoxInParentSpace
// Il2CppName: get_boundingBoxInParentSpace
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Rect (UnityEngine::UIElements::VisualElement::*)()>(&UnityEngine::UIElements::VisualElement::get_boundingBoxInParentSpace)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "get_boundingBoxInParentSpace", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::UpdateBoundingBox
// Il2CppName: UpdateBoundingBox
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::VisualElement::*)()>(&UnityEngine::UIElements::VisualElement::UpdateBoundingBox)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "UpdateBoundingBox", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::UpdateWorldBoundingBox
// Il2CppName: UpdateWorldBoundingBox
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::VisualElement::*)()>(&UnityEngine::UIElements::VisualElement::UpdateWorldBoundingBox)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "UpdateWorldBoundingBox", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::get_worldBound
// Il2CppName: get_worldBound
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Rect (UnityEngine::UIElements::VisualElement::*)()>(&UnityEngine::UIElements::VisualElement::get_worldBound)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "get_worldBound", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::get_localBound
// Il2CppName: get_localBound
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Rect (UnityEngine::UIElements::VisualElement::*)()>(&UnityEngine::UIElements::VisualElement::get_localBound)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "get_localBound", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::get_rect
// Il2CppName: get_rect
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Rect (UnityEngine::UIElements::VisualElement::*)()>(&UnityEngine::UIElements::VisualElement::get_rect)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "get_rect", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::get_isWorldTransformDirty
// Il2CppName: get_isWorldTransformDirty
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::VisualElement::*)()>(&UnityEngine::UIElements::VisualElement::get_isWorldTransformDirty)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "get_isWorldTransformDirty", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::set_isWorldTransformDirty
// Il2CppName: set_isWorldTransformDirty
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::VisualElement::*)(bool)>(&UnityEngine::UIElements::VisualElement::set_isWorldTransformDirty)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "set_isWorldTransformDirty", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::set_isWorldTransformInverseDirty
// Il2CppName: set_isWorldTransformInverseDirty
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::VisualElement::*)(bool)>(&UnityEngine::UIElements::VisualElement::set_isWorldTransformInverseDirty)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "set_isWorldTransformInverseDirty", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::get_isWorldTransformInverseOrDependenciesDirty
// Il2CppName: get_isWorldTransformInverseOrDependenciesDirty
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::VisualElement::*)()>(&UnityEngine::UIElements::VisualElement::get_isWorldTransformInverseOrDependenciesDirty)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "get_isWorldTransformInverseOrDependenciesDirty", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::get_worldTransform
// Il2CppName: get_worldTransform
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Matrix4x4 (UnityEngine::UIElements::VisualElement::*)()>(&UnityEngine::UIElements::VisualElement::get_worldTransform)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "get_worldTransform", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::get_worldTransformRef
// Il2CppName: get_worldTransformRef
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Matrix4x4 (UnityEngine::UIElements::VisualElement::*)()>(&UnityEngine::UIElements::VisualElement::get_worldTransformRef)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "get_worldTransformRef", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::get_worldTransformInverse
// Il2CppName: get_worldTransformInverse
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Matrix4x4 (UnityEngine::UIElements::VisualElement::*)()>(&UnityEngine::UIElements::VisualElement::get_worldTransformInverse)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "get_worldTransformInverse", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::UpdateWorldTransform
// Il2CppName: UpdateWorldTransform
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::VisualElement::*)()>(&UnityEngine::UIElements::VisualElement::UpdateWorldTransform)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "UpdateWorldTransform", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::UpdateWorldTransformInverse
// Il2CppName: UpdateWorldTransformInverse
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::VisualElement::*)()>(&UnityEngine::UIElements::VisualElement::UpdateWorldTransformInverse)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "UpdateWorldTransformInverse", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::get_isWorldClipDirty
// Il2CppName: get_isWorldClipDirty
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::VisualElement::*)()>(&UnityEngine::UIElements::VisualElement::get_isWorldClipDirty)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "get_isWorldClipDirty", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::set_isWorldClipDirty
// Il2CppName: set_isWorldClipDirty
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::VisualElement::*)(bool)>(&UnityEngine::UIElements::VisualElement::set_isWorldClipDirty)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "set_isWorldClipDirty", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::get_worldClip
// Il2CppName: get_worldClip
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Rect (UnityEngine::UIElements::VisualElement::*)()>(&UnityEngine::UIElements::VisualElement::get_worldClip)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "get_worldClip", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::get_worldClipMinusGroup
// Il2CppName: get_worldClipMinusGroup
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Rect (UnityEngine::UIElements::VisualElement::*)()>(&UnityEngine::UIElements::VisualElement::get_worldClipMinusGroup)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "get_worldClipMinusGroup", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::get_worldClipIsInfinite
// Il2CppName: get_worldClipIsInfinite
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::VisualElement::*)()>(&UnityEngine::UIElements::VisualElement::get_worldClipIsInfinite)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "get_worldClipIsInfinite", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::EnsureWorldTransformAndClipUpToDate
// Il2CppName: EnsureWorldTransformAndClipUpToDate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::VisualElement::*)()>(&UnityEngine::UIElements::VisualElement::EnsureWorldTransformAndClipUpToDate)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "EnsureWorldTransformAndClipUpToDate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::UpdateWorldClip
// Il2CppName: UpdateWorldClip
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::VisualElement::*)()>(&UnityEngine::UIElements::VisualElement::UpdateWorldClip)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "UpdateWorldClip", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::CombineClipRects
// Il2CppName: CombineClipRects
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Rect (UnityEngine::UIElements::VisualElement::*)(::UnityEngine::Rect, ::UnityEngine::Rect)>(&UnityEngine::UIElements::VisualElement::CombineClipRects)> {
  static const MethodInfo* get() {
    static auto* rect = &::il2cpp_utils::GetClassFromName("UnityEngine", "Rect")->byval_arg;
    static auto* parentRect = &::il2cpp_utils::GetClassFromName("UnityEngine", "Rect")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "CombineClipRects", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{rect, parentRect});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::SubstractBorderPadding
// Il2CppName: SubstractBorderPadding
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Rect (UnityEngine::UIElements::VisualElement::*)(::UnityEngine::Rect)>(&UnityEngine::UIElements::VisualElement::SubstractBorderPadding)> {
  static const MethodInfo* get() {
    static auto* worldRect = &::il2cpp_utils::GetClassFromName("UnityEngine", "Rect")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "SubstractBorderPadding", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{worldRect});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::ComputeAAAlignedBound
// Il2CppName: ComputeAAAlignedBound
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Rect (*)(::UnityEngine::Rect, ::UnityEngine::Matrix4x4)>(&UnityEngine::UIElements::VisualElement::ComputeAAAlignedBound)> {
  static const MethodInfo* get() {
    static auto* position = &::il2cpp_utils::GetClassFromName("UnityEngine", "Rect")->byval_arg;
    static auto* mat = &::il2cpp_utils::GetClassFromName("UnityEngine", "Matrix4x4")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "ComputeAAAlignedBound", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{position, mat});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::get_pseudoStates
// Il2CppName: get_pseudoStates
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::PseudoStates (UnityEngine::UIElements::VisualElement::*)()>(&UnityEngine::UIElements::VisualElement::get_pseudoStates)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "get_pseudoStates", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::set_pseudoStates
// Il2CppName: set_pseudoStates
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::VisualElement::*)(::UnityEngine::UIElements::PseudoStates)>(&UnityEngine::UIElements::VisualElement::set_pseudoStates)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "PseudoStates")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "set_pseudoStates", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::get_containedPointerIds
// Il2CppName: get_containedPointerIds
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::UIElements::VisualElement::*)()>(&UnityEngine::UIElements::VisualElement::get_containedPointerIds)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "get_containedPointerIds", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::set_containedPointerIds
// Il2CppName: set_containedPointerIds
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::VisualElement::*)(int)>(&UnityEngine::UIElements::VisualElement::set_containedPointerIds)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "set_containedPointerIds", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::UpdateHoverPseudoState
// Il2CppName: UpdateHoverPseudoState
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::VisualElement::*)()>(&UnityEngine::UIElements::VisualElement::UpdateHoverPseudoState)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "UpdateHoverPseudoState", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::IsPartOfCapturedChain
// Il2CppName: IsPartOfCapturedChain
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::UnityEngine::UIElements::VisualElement*, ByRef<::UnityEngine::UIElements::IEventHandler*>)>(&UnityEngine::UIElements::VisualElement::IsPartOfCapturedChain)> {
  static const MethodInfo* get() {
    static auto* self = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "VisualElement")->byval_arg;
    static auto* capturingElement = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "IEventHandler")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "IsPartOfCapturedChain", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{self, capturingElement});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::get_pickingMode
// Il2CppName: get_pickingMode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::PickingMode (UnityEngine::UIElements::VisualElement::*)()>(&UnityEngine::UIElements::VisualElement::get_pickingMode)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "get_pickingMode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::set_pickingMode
// Il2CppName: set_pickingMode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::VisualElement::*)(::UnityEngine::UIElements::PickingMode)>(&UnityEngine::UIElements::VisualElement::set_pickingMode)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "PickingMode")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "set_pickingMode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::get_name
// Il2CppName: get_name
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (UnityEngine::UIElements::VisualElement::*)()>(&UnityEngine::UIElements::VisualElement::get_name)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "get_name", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::set_name
// Il2CppName: set_name
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::VisualElement::*)(::StringW)>(&UnityEngine::UIElements::VisualElement::set_name)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "set_name", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::get_classList
// Il2CppName: get_classList
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::List_1<::StringW>* (UnityEngine::UIElements::VisualElement::*)()>(&UnityEngine::UIElements::VisualElement::get_classList)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "get_classList", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::get_fullTypeName
// Il2CppName: get_fullTypeName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (UnityEngine::UIElements::VisualElement::*)()>(&UnityEngine::UIElements::VisualElement::get_fullTypeName)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "get_fullTypeName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::get_typeName
// Il2CppName: get_typeName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (UnityEngine::UIElements::VisualElement::*)()>(&UnityEngine::UIElements::VisualElement::get_typeName)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "get_typeName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::get_yogaNode
// Il2CppName: get_yogaNode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Yoga::YogaNode* (UnityEngine::UIElements::VisualElement::*)()>(&UnityEngine::UIElements::VisualElement::get_yogaNode)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "get_yogaNode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::set_yogaNode
// Il2CppName: set_yogaNode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::VisualElement::*)(::UnityEngine::Yoga::YogaNode*)>(&UnityEngine::UIElements::VisualElement::set_yogaNode)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.Yoga", "YogaNode")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "set_yogaNode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::get_computedStyle
// Il2CppName: get_computedStyle
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::ComputedStyle (UnityEngine::UIElements::VisualElement::*)()>(&UnityEngine::UIElements::VisualElement::get_computedStyle)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "get_computedStyle", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::get_hasInlineStyle
// Il2CppName: get_hasInlineStyle
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::VisualElement::*)()>(&UnityEngine::UIElements::VisualElement::get_hasInlineStyle)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "get_hasInlineStyle", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::get_styleInitialized
// Il2CppName: get_styleInitialized
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::VisualElement::*)()>(&UnityEngine::UIElements::VisualElement::get_styleInitialized)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "get_styleInitialized", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::set_styleInitialized
// Il2CppName: set_styleInitialized
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::VisualElement::*)(bool)>(&UnityEngine::UIElements::VisualElement::set_styleInitialized)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "set_styleInitialized", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::ChangeIMGUIContainerCount
// Il2CppName: ChangeIMGUIContainerCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::VisualElement::*)(int)>(&UnityEngine::UIElements::VisualElement::ChangeIMGUIContainerCount)> {
  static const MethodInfo* get() {
    static auto* delta = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "ChangeIMGUIContainerCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{delta});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::GetTooltipRect
// Il2CppName: GetTooltipRect
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Rect (UnityEngine::UIElements::VisualElement::*)()>(&UnityEngine::UIElements::VisualElement::GetTooltipRect)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "GetTooltipRect", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::SetTooltip
// Il2CppName: SetTooltip
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::VisualElement::*)(::UnityEngine::UIElements::TooltipEvent*)>(&UnityEngine::UIElements::VisualElement::SetTooltip)> {
  static const MethodInfo* get() {
    static auto* e = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "TooltipEvent")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "SetTooltip", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{e});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::SetPanel
// Il2CppName: SetPanel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::VisualElement::*)(::UnityEngine::UIElements::BaseVisualElementPanel*)>(&UnityEngine::UIElements::VisualElement::SetPanel)> {
  static const MethodInfo* get() {
    static auto* p = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "BaseVisualElementPanel")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "SetPanel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{p});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::WillChangePanel
// Il2CppName: WillChangePanel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::VisualElement::*)(::UnityEngine::UIElements::BaseVisualElementPanel*)>(&UnityEngine::UIElements::VisualElement::WillChangePanel)> {
  static const MethodInfo* get() {
    static auto* destinationPanel = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "BaseVisualElementPanel")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "WillChangePanel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{destinationPanel});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::HasChangedPanel
// Il2CppName: HasChangedPanel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::VisualElement::*)(::UnityEngine::UIElements::BaseVisualElementPanel*)>(&UnityEngine::UIElements::VisualElement::HasChangedPanel)> {
  static const MethodInfo* get() {
    static auto* prevPanel = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "BaseVisualElementPanel")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "HasChangedPanel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{prevPanel});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::IncrementVersion
// Il2CppName: IncrementVersion
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::VisualElement::*)(::UnityEngine::UIElements::VersionChangeType)>(&UnityEngine::UIElements::VisualElement::IncrementVersion)> {
  static const MethodInfo* get() {
    static auto* changeType = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "VersionChangeType")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "IncrementVersion", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{changeType});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::InvokeHierarchyChanged
// Il2CppName: InvokeHierarchyChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::VisualElement::*)(::UnityEngine::UIElements::HierarchyChangeType)>(&UnityEngine::UIElements::VisualElement::InvokeHierarchyChanged)> {
  static const MethodInfo* get() {
    static auto* changeType = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "HierarchyChangeType")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "InvokeHierarchyChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{changeType});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::SetEnabledFromHierarchyPrivate
// Il2CppName: SetEnabledFromHierarchyPrivate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::VisualElement::*)(bool)>(&UnityEngine::UIElements::VisualElement::SetEnabledFromHierarchyPrivate)> {
  static const MethodInfo* get() {
    static auto* state = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "SetEnabledFromHierarchyPrivate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{state});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::get_isParentEnabledInHierarchy
// Il2CppName: get_isParentEnabledInHierarchy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::VisualElement::*)()>(&UnityEngine::UIElements::VisualElement::get_isParentEnabledInHierarchy)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "get_isParentEnabledInHierarchy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::get_enabledInHierarchy
// Il2CppName: get_enabledInHierarchy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::VisualElement::*)()>(&UnityEngine::UIElements::VisualElement::get_enabledInHierarchy)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "get_enabledInHierarchy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::get_enabledSelf
// Il2CppName: get_enabledSelf
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::VisualElement::*)()>(&UnityEngine::UIElements::VisualElement::get_enabledSelf)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "get_enabledSelf", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::set_enabledSelf
// Il2CppName: set_enabledSelf
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::VisualElement::*)(bool)>(&UnityEngine::UIElements::VisualElement::set_enabledSelf)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "set_enabledSelf", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::SetEnabled
// Il2CppName: SetEnabled
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::VisualElement::*)(bool)>(&UnityEngine::UIElements::VisualElement::SetEnabled)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "SetEnabled", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::PropagateEnabledToChildren
// Il2CppName: PropagateEnabledToChildren
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::VisualElement::*)(bool)>(&UnityEngine::UIElements::VisualElement::PropagateEnabledToChildren)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "PropagateEnabledToChildren", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::get_visible
// Il2CppName: get_visible
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::VisualElement::*)()>(&UnityEngine::UIElements::VisualElement::get_visible)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "get_visible", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::set_visible
// Il2CppName: set_visible
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::VisualElement::*)(bool)>(&UnityEngine::UIElements::VisualElement::set_visible)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "set_visible", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::MarkDirtyRepaint
// Il2CppName: MarkDirtyRepaint
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::VisualElement::*)()>(&UnityEngine::UIElements::VisualElement::MarkDirtyRepaint)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "MarkDirtyRepaint", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::get_generateVisualContent
// Il2CppName: get_generateVisualContent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Action_1<::UnityEngine::UIElements::MeshGenerationContext*>* (UnityEngine::UIElements::VisualElement::*)()>(&UnityEngine::UIElements::VisualElement::get_generateVisualContent)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "get_generateVisualContent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::set_generateVisualContent
// Il2CppName: set_generateVisualContent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::VisualElement::*)(::System::Action_1<::UnityEngine::UIElements::MeshGenerationContext*>*)>(&UnityEngine::UIElements::VisualElement::set_generateVisualContent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "MeshGenerationContext")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "set_generateVisualContent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::InvokeGenerateVisualContent
// Il2CppName: InvokeGenerateVisualContent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::VisualElement::*)(::UnityEngine::UIElements::MeshGenerationContext*)>(&UnityEngine::UIElements::VisualElement::InvokeGenerateVisualContent)> {
  static const MethodInfo* get() {
    static auto* mgc = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "MeshGenerationContext")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "InvokeGenerateVisualContent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{mgc});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::GetFullHierarchicalViewDataKey
// Il2CppName: GetFullHierarchicalViewDataKey
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::VisualElement::*)(::System::Text::StringBuilder*)>(&UnityEngine::UIElements::VisualElement::GetFullHierarchicalViewDataKey)> {
  static const MethodInfo* get() {
    static auto* key = &::il2cpp_utils::GetClassFromName("System.Text", "StringBuilder")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "GetFullHierarchicalViewDataKey", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{key});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::GetFullHierarchicalViewDataKey
// Il2CppName: GetFullHierarchicalViewDataKey
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (UnityEngine::UIElements::VisualElement::*)()>(&UnityEngine::UIElements::VisualElement::GetFullHierarchicalViewDataKey)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "GetFullHierarchicalViewDataKey", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::GetOrCreateViewData
// Il2CppName: GetOrCreateViewData
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::OverwriteFromViewData
// Il2CppName: OverwriteFromViewData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::VisualElement::*)(::Il2CppObject*, ::StringW)>(&UnityEngine::UIElements::VisualElement::OverwriteFromViewData)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* key = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "OverwriteFromViewData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj, key});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::SaveViewData
// Il2CppName: SaveViewData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::VisualElement::*)()>(&UnityEngine::UIElements::VisualElement::SaveViewData)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "SaveViewData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::IsViewDataPersitenceSupportedOnChildren
// Il2CppName: IsViewDataPersitenceSupportedOnChildren
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::VisualElement::*)(bool)>(&UnityEngine::UIElements::VisualElement::IsViewDataPersitenceSupportedOnChildren)> {
  static const MethodInfo* get() {
    static auto* existingState = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "IsViewDataPersitenceSupportedOnChildren", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{existingState});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::OnViewDataReady
// Il2CppName: OnViewDataReady
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::VisualElement::*)(bool)>(&UnityEngine::UIElements::VisualElement::OnViewDataReady)> {
  static const MethodInfo* get() {
    static auto* enablePersistence = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "OnViewDataReady", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{enablePersistence});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::OnViewDataReady
// Il2CppName: OnViewDataReady
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::VisualElement::*)()>(&UnityEngine::UIElements::VisualElement::OnViewDataReady)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "OnViewDataReady", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::ContainsPoint
// Il2CppName: ContainsPoint
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::VisualElement::*)(::UnityEngine::Vector2)>(&UnityEngine::UIElements::VisualElement::ContainsPoint)> {
  static const MethodInfo* get() {
    static auto* localPoint = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector2")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "ContainsPoint", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{localPoint});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::get_requireMeasureFunction
// Il2CppName: get_requireMeasureFunction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::VisualElement::*)()>(&UnityEngine::UIElements::VisualElement::get_requireMeasureFunction)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "get_requireMeasureFunction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::set_requireMeasureFunction
// Il2CppName: set_requireMeasureFunction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::VisualElement::*)(bool)>(&UnityEngine::UIElements::VisualElement::set_requireMeasureFunction)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "set_requireMeasureFunction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::AssignMeasureFunction
// Il2CppName: AssignMeasureFunction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::VisualElement::*)()>(&UnityEngine::UIElements::VisualElement::AssignMeasureFunction)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "AssignMeasureFunction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::RemoveMeasureFunction
// Il2CppName: RemoveMeasureFunction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::VisualElement::*)()>(&UnityEngine::UIElements::VisualElement::RemoveMeasureFunction)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "RemoveMeasureFunction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::DoMeasure
// Il2CppName: DoMeasure
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector2 (UnityEngine::UIElements::VisualElement::*)(float, ::UnityEngine::UIElements::VisualElement::MeasureMode, float, ::UnityEngine::UIElements::VisualElement::MeasureMode)>(&UnityEngine::UIElements::VisualElement::DoMeasure)> {
  static const MethodInfo* get() {
    static auto* desiredWidth = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* widthMode = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "VisualElement/MeasureMode")->byval_arg;
    static auto* desiredHeight = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* heightMode = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "VisualElement/MeasureMode")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "DoMeasure", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{desiredWidth, widthMode, desiredHeight, heightMode});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::Measure
// Il2CppName: Measure
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Yoga::YogaSize (UnityEngine::UIElements::VisualElement::*)(::UnityEngine::Yoga::YogaNode*, float, ::UnityEngine::Yoga::YogaMeasureMode, float, ::UnityEngine::Yoga::YogaMeasureMode)>(&UnityEngine::UIElements::VisualElement::Measure)> {
  static const MethodInfo* get() {
    static auto* node = &::il2cpp_utils::GetClassFromName("UnityEngine.Yoga", "YogaNode")->byval_arg;
    static auto* width = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* widthMode = &::il2cpp_utils::GetClassFromName("UnityEngine.Yoga", "YogaMeasureMode")->byval_arg;
    static auto* height = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* heightMode = &::il2cpp_utils::GetClassFromName("UnityEngine.Yoga", "YogaMeasureMode")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "Measure", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{node, width, widthMode, height, heightMode});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::FinalizeLayout
// Il2CppName: FinalizeLayout
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::VisualElement::*)()>(&UnityEngine::UIElements::VisualElement::FinalizeLayout)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "FinalizeLayout", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::SetInlineRule
// Il2CppName: SetInlineRule
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::VisualElement::*)(::UnityEngine::UIElements::StyleSheet*, ::UnityEngine::UIElements::StyleRule*)>(&UnityEngine::UIElements::VisualElement::SetInlineRule)> {
  static const MethodInfo* get() {
    static auto* sheet = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "StyleSheet")->byval_arg;
    static auto* rule = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "StyleRule")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "SetInlineRule", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sheet, rule});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::SetComputedStyle
// Il2CppName: SetComputedStyle
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::VisualElement::*)(ByRef<::UnityEngine::UIElements::ComputedStyle>)>(&UnityEngine::UIElements::VisualElement::SetComputedStyle)> {
  static const MethodInfo* get() {
    static auto* newStyle = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "ComputedStyle")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "SetComputedStyle", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{newStyle});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::GetClassesForIteration
// Il2CppName: GetClassesForIteration
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::List_1<::StringW>* (UnityEngine::UIElements::VisualElement::*)()>(&UnityEngine::UIElements::VisualElement::GetClassesForIteration)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "GetClassesForIteration", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::AddToClassList
// Il2CppName: AddToClassList
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::VisualElement::*)(::StringW)>(&UnityEngine::UIElements::VisualElement::AddToClassList)> {
  static const MethodInfo* get() {
    static auto* className = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "AddToClassList", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{className});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::RemoveFromClassList
// Il2CppName: RemoveFromClassList
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::VisualElement::*)(::StringW)>(&UnityEngine::UIElements::VisualElement::RemoveFromClassList)> {
  static const MethodInfo* get() {
    static auto* className = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "RemoveFromClassList", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{className});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::EnableInClassList
// Il2CppName: EnableInClassList
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::VisualElement::*)(::StringW, bool)>(&UnityEngine::UIElements::VisualElement::EnableInClassList)> {
  static const MethodInfo* get() {
    static auto* className = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* enable = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "EnableInClassList", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{className, enable});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::ClassListContains
// Il2CppName: ClassListContains
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::VisualElement::*)(::StringW)>(&UnityEngine::UIElements::VisualElement::ClassListContains)> {
  static const MethodInfo* get() {
    static auto* cls = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "ClassListContains", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{cls});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::GetProperty
// Il2CppName: GetProperty
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (UnityEngine::UIElements::VisualElement::*)(::UnityEngine::PropertyName)>(&UnityEngine::UIElements::VisualElement::GetProperty)> {
  static const MethodInfo* get() {
    static auto* key = &::il2cpp_utils::GetClassFromName("UnityEngine", "PropertyName")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "GetProperty", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{key});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::SetProperty
// Il2CppName: SetProperty
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::VisualElement::*)(::UnityEngine::PropertyName, ::Il2CppObject*)>(&UnityEngine::UIElements::VisualElement::SetProperty)> {
  static const MethodInfo* get() {
    static auto* key = &::il2cpp_utils::GetClassFromName("UnityEngine", "PropertyName")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "SetProperty", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{key, value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::HasProperty
// Il2CppName: HasProperty
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::VisualElement::*)(::UnityEngine::PropertyName)>(&UnityEngine::UIElements::VisualElement::HasProperty)> {
  static const MethodInfo* get() {
    static auto* key = &::il2cpp_utils::GetClassFromName("UnityEngine", "PropertyName")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "HasProperty", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{key});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::TryGetPropertyInternal
// Il2CppName: TryGetPropertyInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::VisualElement::*)(::UnityEngine::PropertyName, ByRef<::Il2CppObject*>)>(&UnityEngine::UIElements::VisualElement::TryGetPropertyInternal)> {
  static const MethodInfo* get() {
    static auto* key = &::il2cpp_utils::GetClassFromName("UnityEngine", "PropertyName")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Object")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "TryGetPropertyInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{key, value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::CheckUserKeyArgument
// Il2CppName: CheckUserKeyArgument
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::PropertyName)>(&UnityEngine::UIElements::VisualElement::CheckUserKeyArgument)> {
  static const MethodInfo* get() {
    static auto* key = &::il2cpp_utils::GetClassFromName("UnityEngine", "PropertyName")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "CheckUserKeyArgument", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{key});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::SetPropertyInternal
// Il2CppName: SetPropertyInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::VisualElement::*)(::UnityEngine::PropertyName, ::Il2CppObject*)>(&UnityEngine::UIElements::VisualElement::SetPropertyInternal)> {
  static const MethodInfo* get() {
    static auto* key = &::il2cpp_utils::GetClassFromName("UnityEngine", "PropertyName")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "SetPropertyInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{key, value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::UpdateCursorStyle
// Il2CppName: UpdateCursorStyle
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::VisualElement::*)(int64_t)>(&UnityEngine::UIElements::VisualElement::UpdateCursorStyle)> {
  static const MethodInfo* get() {
    static auto* eventType = &::il2cpp_utils::GetClassFromName("System", "Int64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "UpdateCursorStyle", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{eventType});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::get_subRenderTargetMode
// Il2CppName: get_subRenderTargetMode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::VisualElement::RenderTargetMode (UnityEngine::UIElements::VisualElement::*)()>(&UnityEngine::UIElements::VisualElement::get_subRenderTargetMode)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "get_subRenderTargetMode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::get_defaultMaterial
// Il2CppName: get_defaultMaterial
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Material* (UnityEngine::UIElements::VisualElement::*)()>(&UnityEngine::UIElements::VisualElement::get_defaultMaterial)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "get_defaultMaterial", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::GetAnimationSystem
// Il2CppName: GetAnimationSystem
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::VisualElementAnimationSystem* (UnityEngine::UIElements::VisualElement::*)()>(&UnityEngine::UIElements::VisualElement::GetAnimationSystem)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "GetAnimationSystem", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::RegisterAnimation
// Il2CppName: RegisterAnimation
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::VisualElement::*)(::UnityEngine::UIElements::Experimental::IValueAnimationUpdate*)>(&UnityEngine::UIElements::VisualElement::RegisterAnimation)> {
  static const MethodInfo* get() {
    static auto* anim = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements.Experimental", "IValueAnimationUpdate")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "RegisterAnimation", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{anim});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::UnregisterAnimation
// Il2CppName: UnregisterAnimation
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::VisualElement::*)(::UnityEngine::UIElements::Experimental::IValueAnimationUpdate*)>(&UnityEngine::UIElements::VisualElement::UnregisterAnimation)> {
  static const MethodInfo* get() {
    static auto* anim = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements.Experimental", "IValueAnimationUpdate")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "UnregisterAnimation", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{anim});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::UnregisterRunningAnimations
// Il2CppName: UnregisterRunningAnimations
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::VisualElement::*)()>(&UnityEngine::UIElements::VisualElement::UnregisterRunningAnimations)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "UnregisterRunningAnimations", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::RegisterRunningAnimations
// Il2CppName: RegisterRunningAnimations
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::VisualElement::*)()>(&UnityEngine::UIElements::VisualElement::RegisterRunningAnimations)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "RegisterRunningAnimations", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::StartAnimation
// Il2CppName: StartAnimation
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::AssignStyleValues
// Il2CppName: AssignStyleValues
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::UIElements::VisualElement*, ::UnityEngine::UIElements::Experimental::StyleValues)>(&UnityEngine::UIElements::VisualElement::AssignStyleValues)> {
  static const MethodInfo* get() {
    static auto* ve = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "VisualElement")->byval_arg;
    static auto* src = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements.Experimental", "StyleValues")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "AssignStyleValues", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ve, src});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::ReadCurrentValues
// Il2CppName: ReadCurrentValues
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::Experimental::StyleValues (UnityEngine::UIElements::VisualElement::*)(::UnityEngine::UIElements::VisualElement*, ::UnityEngine::UIElements::Experimental::StyleValues)>(&UnityEngine::UIElements::VisualElement::ReadCurrentValues)> {
  static const MethodInfo* get() {
    static auto* ve = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "VisualElement")->byval_arg;
    static auto* targetValuesToRead = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements.Experimental", "StyleValues")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "ReadCurrentValues", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ve, targetValuesToRead});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::UnityEngine_UIElements_Experimental_ITransitionAnimations_Start
// Il2CppName: UnityEngine.UIElements.Experimental.ITransitionAnimations.Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::Experimental::ValueAnimation_1<::UnityEngine::UIElements::Experimental::StyleValues>* (UnityEngine::UIElements::VisualElement::*)(::UnityEngine::UIElements::Experimental::StyleValues, int)>(&UnityEngine::UIElements::VisualElement::UnityEngine_UIElements_Experimental_ITransitionAnimations_Start)> {
  static const MethodInfo* get() {
    static auto* to = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements.Experimental", "StyleValues")->byval_arg;
    static auto* durationMs = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "UnityEngine.UIElements.Experimental.ITransitionAnimations.Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{to, durationMs});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::Experimental::ValueAnimation_1<::UnityEngine::UIElements::Experimental::StyleValues>* (UnityEngine::UIElements::VisualElement::*)(::System::Func_2<::UnityEngine::UIElements::VisualElement*, ::UnityEngine::UIElements::Experimental::StyleValues>*, ::UnityEngine::UIElements::Experimental::StyleValues, int)>(&UnityEngine::UIElements::VisualElement::Start)> {
  static const MethodInfo* get() {
    static auto* fromValueGetter = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Func`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "VisualElement"), ::il2cpp_utils::GetClassFromName("UnityEngine.UIElements.Experimental", "StyleValues")})->byval_arg;
    static auto* to = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements.Experimental", "StyleValues")->byval_arg;
    static auto* durationMs = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{fromValueGetter, to, durationMs});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::DirtyNextParentWithEventCallback
// Il2CppName: DirtyNextParentWithEventCallback
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::VisualElement::*)()>(&UnityEngine::UIElements::VisualElement::DirtyNextParentWithEventCallback)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "DirtyNextParentWithEventCallback", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::SetAsNextParentWithEventCallback
// Il2CppName: SetAsNextParentWithEventCallback
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::VisualElement::*)()>(&UnityEngine::UIElements::VisualElement::SetAsNextParentWithEventCallback)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "SetAsNextParentWithEventCallback", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::GetCachedNextParentWithEventCallback
// Il2CppName: GetCachedNextParentWithEventCallback
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::VisualElement::*)(ByRef<::UnityEngine::UIElements::VisualElement*>)>(&UnityEngine::UIElements::VisualElement::GetCachedNextParentWithEventCallback)> {
  static const MethodInfo* get() {
    static auto* nextParent = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "VisualElement")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "GetCachedNextParentWithEventCallback", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{nextParent});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::get_nextParentWithEventCallback
// Il2CppName: get_nextParentWithEventCallback
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::VisualElement* (UnityEngine::UIElements::VisualElement::*)()>(&UnityEngine::UIElements::VisualElement::get_nextParentWithEventCallback)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "get_nextParentWithEventCallback", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::PropagateCachedNextParentWithEventCallback
// Il2CppName: PropagateCachedNextParentWithEventCallback
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::VisualElement::*)(::UnityEngine::UIElements::VisualElement*, ::UnityEngine::UIElements::VisualElement*)>(&UnityEngine::UIElements::VisualElement::PropagateCachedNextParentWithEventCallback)> {
  static const MethodInfo* get() {
    static auto* nextParent = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "VisualElement")->byval_arg;
    static auto* stopParent = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "VisualElement")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "PropagateCachedNextParentWithEventCallback", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{nextParent, stopParent});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::get_eventCallbackCategories
// Il2CppName: get_eventCallbackCategories
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::UIElements::VisualElement::*)()>(&UnityEngine::UIElements::VisualElement::get_eventCallbackCategories)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "get_eventCallbackCategories", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::set_eventCallbackCategories
// Il2CppName: set_eventCallbackCategories
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::VisualElement::*)(int)>(&UnityEngine::UIElements::VisualElement::set_eventCallbackCategories)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "set_eventCallbackCategories", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::get_eventCallbackParentCategories
// Il2CppName: get_eventCallbackParentCategories
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::UIElements::VisualElement::*)()>(&UnityEngine::UIElements::VisualElement::get_eventCallbackParentCategories)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "get_eventCallbackParentCategories", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::get_isEventCallbackParentCategoriesDirty
// Il2CppName: get_isEventCallbackParentCategoriesDirty
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::VisualElement::*)()>(&UnityEngine::UIElements::VisualElement::get_isEventCallbackParentCategoriesDirty)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "get_isEventCallbackParentCategoriesDirty", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::set_isEventCallbackParentCategoriesDirty
// Il2CppName: set_isEventCallbackParentCategoriesDirty
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::VisualElement::*)(bool)>(&UnityEngine::UIElements::VisualElement::set_isEventCallbackParentCategoriesDirty)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "set_isEventCallbackParentCategoriesDirty", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::UpdateCallbackParentCategories
// Il2CppName: UpdateCallbackParentCategories
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::VisualElement::*)()>(&UnityEngine::UIElements::VisualElement::UpdateCallbackParentCategories)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "UpdateCallbackParentCategories", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::HasEventCallbacks
// Il2CppName: HasEventCallbacks
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::VisualElement::*)(::UnityEngine::UIElements::EventCategory)>(&UnityEngine::UIElements::VisualElement::HasEventCallbacks)> {
  static const MethodInfo* get() {
    static auto* eventCategory = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "EventCategory")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "HasEventCallbacks", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{eventCategory});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::HasParentEventCallbacksOrDefaultActions
// Il2CppName: HasParentEventCallbacksOrDefaultActions
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::VisualElement::*)(::UnityEngine::UIElements::EventCategory)>(&UnityEngine::UIElements::VisualElement::HasParentEventCallbacksOrDefaultActions)> {
  static const MethodInfo* get() {
    static auto* eventCategory = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "EventCategory")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "HasParentEventCallbacksOrDefaultActions", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{eventCategory});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::HasEventCallbacksOrDefaultActions
// Il2CppName: HasEventCallbacksOrDefaultActions
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::VisualElement::*)(::UnityEngine::UIElements::EventCategory)>(&UnityEngine::UIElements::VisualElement::HasEventCallbacksOrDefaultActions)> {
  static const MethodInfo* get() {
    static auto* eventCategory = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "EventCategory")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "HasEventCallbacksOrDefaultActions", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{eventCategory});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::HasParentEventCallbacksOrDefaultActionAtTarget
// Il2CppName: HasParentEventCallbacksOrDefaultActionAtTarget
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::VisualElement::*)(::UnityEngine::UIElements::EventCategory)>(&UnityEngine::UIElements::VisualElement::HasParentEventCallbacksOrDefaultActionAtTarget)> {
  static const MethodInfo* get() {
    static auto* eventCategory = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "EventCategory")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "HasParentEventCallbacksOrDefaultActionAtTarget", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{eventCategory});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::HasEventCallbacksOrDefaultActionAtTarget
// Il2CppName: HasEventCallbacksOrDefaultActionAtTarget
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::VisualElement::*)(::UnityEngine::UIElements::EventCategory)>(&UnityEngine::UIElements::VisualElement::HasEventCallbacksOrDefaultActionAtTarget)> {
  static const MethodInfo* get() {
    static auto* eventCategory = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "EventCategory")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "HasEventCallbacksOrDefaultActionAtTarget", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{eventCategory});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::HasDefaultAction
// Il2CppName: HasDefaultAction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::VisualElement::*)(::UnityEngine::UIElements::EventCategory)>(&UnityEngine::UIElements::VisualElement::HasDefaultAction)> {
  static const MethodInfo* get() {
    static auto* eventCategory = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "EventCategory")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "HasDefaultAction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{eventCategory});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::get_experimental
// Il2CppName: get_experimental
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::IExperimentalFeatures* (UnityEngine::UIElements::VisualElement::*)()>(&UnityEngine::UIElements::VisualElement::get_experimental)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "get_experimental", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::UnityEngine_UIElements_IExperimentalFeatures_get_animation
// Il2CppName: UnityEngine.UIElements.IExperimentalFeatures.get_animation
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::Experimental::ITransitionAnimations* (UnityEngine::UIElements::VisualElement::*)()>(&UnityEngine::UIElements::VisualElement::UnityEngine_UIElements_IExperimentalFeatures_get_animation)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "UnityEngine.UIElements.IExperimentalFeatures.get_animation", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::get_hierarchy
// Il2CppName: get_hierarchy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::VisualElement::Hierarchy (UnityEngine::UIElements::VisualElement::*)()>(&UnityEngine::UIElements::VisualElement::get_hierarchy)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "get_hierarchy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::set_hierarchy
// Il2CppName: set_hierarchy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::VisualElement::*)(::UnityEngine::UIElements::VisualElement::Hierarchy)>(&UnityEngine::UIElements::VisualElement::set_hierarchy)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "VisualElement/Hierarchy")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "set_hierarchy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::get_isRootVisualContainer
// Il2CppName: get_isRootVisualContainer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::VisualElement::*)()>(&UnityEngine::UIElements::VisualElement::get_isRootVisualContainer)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "get_isRootVisualContainer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::set_isRootVisualContainer
// Il2CppName: set_isRootVisualContainer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::VisualElement::*)(bool)>(&UnityEngine::UIElements::VisualElement::set_isRootVisualContainer)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "set_isRootVisualContainer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::get_disableClipping
// Il2CppName: get_disableClipping
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::VisualElement::*)()>(&UnityEngine::UIElements::VisualElement::get_disableClipping)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "get_disableClipping", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::set_disableClipping
// Il2CppName: set_disableClipping
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::VisualElement::*)(bool)>(&UnityEngine::UIElements::VisualElement::set_disableClipping)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "set_disableClipping", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::ShouldClip
// Il2CppName: ShouldClip
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::VisualElement::*)()>(&UnityEngine::UIElements::VisualElement::ShouldClip)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "ShouldClip", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::get_parent
// Il2CppName: get_parent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::VisualElement* (UnityEngine::UIElements::VisualElement::*)()>(&UnityEngine::UIElements::VisualElement::get_parent)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "get_parent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::get_elementPanel
// Il2CppName: get_elementPanel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::BaseVisualElementPanel* (UnityEngine::UIElements::VisualElement::*)()>(&UnityEngine::UIElements::VisualElement::get_elementPanel)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "get_elementPanel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::set_elementPanel
// Il2CppName: set_elementPanel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::VisualElement::*)(::UnityEngine::UIElements::BaseVisualElementPanel*)>(&UnityEngine::UIElements::VisualElement::set_elementPanel)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "BaseVisualElementPanel")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "set_elementPanel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::get_panel
// Il2CppName: get_panel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::IPanel* (UnityEngine::UIElements::VisualElement::*)()>(&UnityEngine::UIElements::VisualElement::get_panel)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "get_panel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::get_contentContainer
// Il2CppName: get_contentContainer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::VisualElement* (UnityEngine::UIElements::VisualElement::*)()>(&UnityEngine::UIElements::VisualElement::get_contentContainer)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "get_contentContainer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::set_visualTreeAssetSource
// Il2CppName: set_visualTreeAssetSource
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::VisualElement::*)(::UnityEngine::UIElements::VisualTreeAsset*)>(&UnityEngine::UIElements::VisualElement::set_visualTreeAssetSource)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "VisualTreeAsset")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "set_visualTreeAssetSource", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::Add
// Il2CppName: Add
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::VisualElement::*)(::UnityEngine::UIElements::VisualElement*)>(&UnityEngine::UIElements::VisualElement::Add)> {
  static const MethodInfo* get() {
    static auto* child = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "VisualElement")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "Add", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{child});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::Insert
// Il2CppName: Insert
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::VisualElement::*)(int, ::UnityEngine::UIElements::VisualElement*)>(&UnityEngine::UIElements::VisualElement::Insert)> {
  static const MethodInfo* get() {
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* element = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "VisualElement")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "Insert", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{index, element});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::Clear
// Il2CppName: Clear
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::VisualElement::*)()>(&UnityEngine::UIElements::VisualElement::Clear)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "Clear", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::ElementAt
// Il2CppName: ElementAt
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::VisualElement* (UnityEngine::UIElements::VisualElement::*)(int)>(&UnityEngine::UIElements::VisualElement::ElementAt)> {
  static const MethodInfo* get() {
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "ElementAt", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{index});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::get_Item
// Il2CppName: get_Item
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::VisualElement* (UnityEngine::UIElements::VisualElement::*)(int)>(&UnityEngine::UIElements::VisualElement::get_Item)> {
  static const MethodInfo* get() {
    static auto* key = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "get_Item", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{key});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::get_childCount
// Il2CppName: get_childCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::UIElements::VisualElement::*)()>(&UnityEngine::UIElements::VisualElement::get_childCount)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "get_childCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::IndexOf
// Il2CppName: IndexOf
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::UIElements::VisualElement::*)(::UnityEngine::UIElements::VisualElement*)>(&UnityEngine::UIElements::VisualElement::IndexOf)> {
  static const MethodInfo* get() {
    static auto* element = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "VisualElement")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "IndexOf", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{element});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::ElementAtTreePath
// Il2CppName: ElementAtTreePath
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::VisualElement* (UnityEngine::UIElements::VisualElement::*)(::System::Collections::Generic::List_1<int>*)>(&UnityEngine::UIElements::VisualElement::ElementAtTreePath)> {
  static const MethodInfo* get() {
    static auto* childIndexes = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Int32")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "ElementAtTreePath", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{childIndexes});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::FindElementInTree
// Il2CppName: FindElementInTree
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::VisualElement::*)(::UnityEngine::UIElements::VisualElement*, ::System::Collections::Generic::List_1<int>*)>(&UnityEngine::UIElements::VisualElement::FindElementInTree)> {
  static const MethodInfo* get() {
    static auto* element = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "VisualElement")->byval_arg;
    static auto* outChildIndexes = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Int32")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "FindElementInTree", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{element, outChildIndexes});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::Children
// Il2CppName: Children
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::VisualElement*>* (UnityEngine::UIElements::VisualElement::*)()>(&UnityEngine::UIElements::VisualElement::Children)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "Children", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::BringToFront
// Il2CppName: BringToFront
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::VisualElement::*)()>(&UnityEngine::UIElements::VisualElement::BringToFront)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "BringToFront", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::SendToBack
// Il2CppName: SendToBack
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::VisualElement::*)()>(&UnityEngine::UIElements::VisualElement::SendToBack)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "SendToBack", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::PlaceBehind
// Il2CppName: PlaceBehind
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::VisualElement::*)(::UnityEngine::UIElements::VisualElement*)>(&UnityEngine::UIElements::VisualElement::PlaceBehind)> {
  static const MethodInfo* get() {
    static auto* sibling = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "VisualElement")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "PlaceBehind", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sibling});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::RemoveFromHierarchy
// Il2CppName: RemoveFromHierarchy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::VisualElement::*)()>(&UnityEngine::UIElements::VisualElement::RemoveFromHierarchy)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "RemoveFromHierarchy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::GetFirstOfType
// Il2CppName: GetFirstOfType
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::GetFirstAncestorOfType
// Il2CppName: GetFirstAncestorOfType
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::GetFirstAncestorWhere
// Il2CppName: GetFirstAncestorWhere
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::VisualElement* (UnityEngine::UIElements::VisualElement::*)(::System::Predicate_1<::UnityEngine::UIElements::VisualElement*>*)>(&UnityEngine::UIElements::VisualElement::GetFirstAncestorWhere)> {
  static const MethodInfo* get() {
    static auto* predicate = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Predicate`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "VisualElement")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "GetFirstAncestorWhere", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{predicate});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::Contains
// Il2CppName: Contains
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::VisualElement::*)(::UnityEngine::UIElements::VisualElement*)>(&UnityEngine::UIElements::VisualElement::Contains)> {
  static const MethodInfo* get() {
    static auto* child = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "VisualElement")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "Contains", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{child});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::GatherAllChildren
// Il2CppName: GatherAllChildren
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::VisualElement::*)(::System::Collections::Generic::List_1<::UnityEngine::UIElements::VisualElement*>*)>(&UnityEngine::UIElements::VisualElement::GatherAllChildren)> {
  static const MethodInfo* get() {
    static auto* elements = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "VisualElement")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "GatherAllChildren", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{elements});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::FindCommonAncestor
// Il2CppName: FindCommonAncestor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::VisualElement* (UnityEngine::UIElements::VisualElement::*)(::UnityEngine::UIElements::VisualElement*)>(&UnityEngine::UIElements::VisualElement::FindCommonAncestor)> {
  static const MethodInfo* get() {
    static auto* other = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "VisualElement")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "FindCommonAncestor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{other});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::GetRoot
// Il2CppName: GetRoot
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::VisualElement* (UnityEngine::UIElements::VisualElement::*)()>(&UnityEngine::UIElements::VisualElement::GetRoot)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "GetRoot", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::GetRootVisualContainer
// Il2CppName: GetRootVisualContainer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::VisualElement* (UnityEngine::UIElements::VisualElement::*)()>(&UnityEngine::UIElements::VisualElement::GetRootVisualContainer)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "GetRootVisualContainer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::GetNextElementDepthFirst
// Il2CppName: GetNextElementDepthFirst
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::VisualElement* (UnityEngine::UIElements::VisualElement::*)()>(&UnityEngine::UIElements::VisualElement::GetNextElementDepthFirst)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "GetNextElementDepthFirst", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::GetPreviousElementDepthFirst
// Il2CppName: GetPreviousElementDepthFirst
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::VisualElement* (UnityEngine::UIElements::VisualElement::*)()>(&UnityEngine::UIElements::VisualElement::GetPreviousElementDepthFirst)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "GetPreviousElementDepthFirst", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::RetargetElement
// Il2CppName: RetargetElement
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::VisualElement* (UnityEngine::UIElements::VisualElement::*)(::UnityEngine::UIElements::VisualElement*)>(&UnityEngine::UIElements::VisualElement::RetargetElement)> {
  static const MethodInfo* get() {
    static auto* retargetAgainst = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "VisualElement")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "RetargetElement", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{retargetAgainst});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::get_positionWithLayout
// Il2CppName: get_positionWithLayout
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector3 (UnityEngine::UIElements::VisualElement::*)()>(&UnityEngine::UIElements::VisualElement::get_positionWithLayout)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "get_positionWithLayout", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::GetPivotedMatrixWithLayout
// Il2CppName: GetPivotedMatrixWithLayout
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::VisualElement::*)(ByRef<::UnityEngine::Matrix4x4>)>(&UnityEngine::UIElements::VisualElement::GetPivotedMatrixWithLayout)> {
  static const MethodInfo* get() {
    static auto* result = &::il2cpp_utils::GetClassFromName("UnityEngine", "Matrix4x4")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "GetPivotedMatrixWithLayout", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{result});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::get_hasDefaultRotationAndScale
// Il2CppName: get_hasDefaultRotationAndScale
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::VisualElement::*)()>(&UnityEngine::UIElements::VisualElement::get_hasDefaultRotationAndScale)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "get_hasDefaultRotationAndScale", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::Min
// Il2CppName: Min
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (*)(float, float, float, float)>(&UnityEngine::UIElements::VisualElement::Min)> {
  static const MethodInfo* get() {
    static auto* a = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* b = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* c = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* d = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "Min", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{a, b, c, d});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::Max
// Il2CppName: Max
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (*)(float, float, float, float)>(&UnityEngine::UIElements::VisualElement::Max)> {
  static const MethodInfo* get() {
    static auto* a = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* b = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* c = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* d = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "Max", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{a, b, c, d});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::TransformAlignedRectToParentSpace
// Il2CppName: TransformAlignedRectToParentSpace
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::VisualElement::*)(ByRef<::UnityEngine::Rect>)>(&UnityEngine::UIElements::VisualElement::TransformAlignedRectToParentSpace)> {
  static const MethodInfo* get() {
    static auto* rect = &::il2cpp_utils::GetClassFromName("UnityEngine", "Rect")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "TransformAlignedRectToParentSpace", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{rect});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::CalculateConservativeRect
// Il2CppName: CalculateConservativeRect
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Rect (*)(ByRef<::UnityEngine::Matrix4x4>, ::UnityEngine::Rect)>(&UnityEngine::UIElements::VisualElement::CalculateConservativeRect)> {
  static const MethodInfo* get() {
    static auto* matrix = &::il2cpp_utils::GetClassFromName("UnityEngine", "Matrix4x4")->this_arg;
    static auto* rect = &::il2cpp_utils::GetClassFromName("UnityEngine", "Rect")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "CalculateConservativeRect", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{matrix, rect});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::TransformAlignedRect
// Il2CppName: TransformAlignedRect
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(ByRef<::UnityEngine::Matrix4x4>, ByRef<::UnityEngine::Rect>)>(&UnityEngine::UIElements::VisualElement::TransformAlignedRect)> {
  static const MethodInfo* get() {
    static auto* matrix = &::il2cpp_utils::GetClassFromName("UnityEngine", "Matrix4x4")->this_arg;
    static auto* rect = &::il2cpp_utils::GetClassFromName("UnityEngine", "Rect")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "TransformAlignedRect", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{matrix, rect});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::OrderMinMaxRect
// Il2CppName: OrderMinMaxRect
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(ByRef<::UnityEngine::Rect>)>(&UnityEngine::UIElements::VisualElement::OrderMinMaxRect)> {
  static const MethodInfo* get() {
    static auto* rect = &::il2cpp_utils::GetClassFromName("UnityEngine", "Rect")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "OrderMinMaxRect", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{rect});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::MultiplyMatrix44Point2
// Il2CppName: MultiplyMatrix44Point2
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector2 (*)(ByRef<::UnityEngine::Matrix4x4>, ::UnityEngine::Vector2)>(&UnityEngine::UIElements::VisualElement::MultiplyMatrix44Point2)> {
  static const MethodInfo* get() {
    static auto* lhs = &::il2cpp_utils::GetClassFromName("UnityEngine", "Matrix4x4")->this_arg;
    static auto* point = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector2")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "MultiplyMatrix44Point2", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{lhs, point});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::MultiplyVector2
// Il2CppName: MultiplyVector2
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector2 (*)(ByRef<::UnityEngine::Matrix4x4>, ::UnityEngine::Vector2)>(&UnityEngine::UIElements::VisualElement::MultiplyVector2)> {
  static const MethodInfo* get() {
    static auto* lhs = &::il2cpp_utils::GetClassFromName("UnityEngine", "Matrix4x4")->this_arg;
    static auto* vector = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector2")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "MultiplyVector2", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{lhs, vector});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::MultiplyMatrix34
// Il2CppName: MultiplyMatrix34
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(ByRef<::UnityEngine::Matrix4x4>, ByRef<::UnityEngine::Matrix4x4>, ByRef<::UnityEngine::Matrix4x4>)>(&UnityEngine::UIElements::VisualElement::MultiplyMatrix34)> {
  static const MethodInfo* get() {
    static auto* lhs = &::il2cpp_utils::GetClassFromName("UnityEngine", "Matrix4x4")->this_arg;
    static auto* rhs = &::il2cpp_utils::GetClassFromName("UnityEngine", "Matrix4x4")->this_arg;
    static auto* res = &::il2cpp_utils::GetClassFromName("UnityEngine", "Matrix4x4")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "MultiplyMatrix34", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{lhs, rhs, res});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::TranslateMatrix34
// Il2CppName: TranslateMatrix34
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(ByRef<::UnityEngine::Matrix4x4>, ::UnityEngine::Vector3, ByRef<::UnityEngine::Matrix4x4>)>(&UnityEngine::UIElements::VisualElement::TranslateMatrix34)> {
  static const MethodInfo* get() {
    static auto* lhs = &::il2cpp_utils::GetClassFromName("UnityEngine", "Matrix4x4")->this_arg;
    static auto* rhs = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* res = &::il2cpp_utils::GetClassFromName("UnityEngine", "Matrix4x4")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "TranslateMatrix34", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{lhs, rhs, res});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::TranslateMatrix34InPlace
// Il2CppName: TranslateMatrix34InPlace
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(ByRef<::UnityEngine::Matrix4x4>, ::UnityEngine::Vector3)>(&UnityEngine::UIElements::VisualElement::TranslateMatrix34InPlace)> {
  static const MethodInfo* get() {
    static auto* lhs = &::il2cpp_utils::GetClassFromName("UnityEngine", "Matrix4x4")->this_arg;
    static auto* rhs = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "TranslateMatrix34InPlace", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{lhs, rhs});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::get_schedule
// Il2CppName: get_schedule
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::IVisualElementScheduler* (UnityEngine::UIElements::VisualElement::*)()>(&UnityEngine::UIElements::VisualElement::get_schedule)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "get_schedule", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::UnityEngine_UIElements_IVisualElementScheduler_Execute
// Il2CppName: UnityEngine.UIElements.IVisualElementScheduler.Execute
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::IVisualElementScheduledItem* (UnityEngine::UIElements::VisualElement::*)(::System::Action_1<::UnityEngine::UIElements::TimerState>*)>(&UnityEngine::UIElements::VisualElement::UnityEngine_UIElements_IVisualElementScheduler_Execute)> {
  static const MethodInfo* get() {
    static auto* timerUpdateEvent = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "TimerState")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "UnityEngine.UIElements.IVisualElementScheduler.Execute", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{timerUpdateEvent});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::UnityEngine_UIElements_IVisualElementScheduler_Execute
// Il2CppName: UnityEngine.UIElements.IVisualElementScheduler.Execute
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::IVisualElementScheduledItem* (UnityEngine::UIElements::VisualElement::*)(::System::Action*)>(&UnityEngine::UIElements::VisualElement::UnityEngine_UIElements_IVisualElementScheduler_Execute)> {
  static const MethodInfo* get() {
    static auto* updateEvent = &::il2cpp_utils::GetClassFromName("System", "Action")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "UnityEngine.UIElements.IVisualElementScheduler.Execute", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{updateEvent});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::get_style
// Il2CppName: get_style
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::IStyle* (UnityEngine::UIElements::VisualElement::*)()>(&UnityEngine::UIElements::VisualElement::get_style)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "get_style", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::get_customStyle
// Il2CppName: get_customStyle
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::ICustomStyle* (UnityEngine::UIElements::VisualElement::*)()>(&UnityEngine::UIElements::VisualElement::get_customStyle)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "get_customStyle", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::get_styleSheets
// Il2CppName: get_styleSheets
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::VisualElementStyleSheetSet (UnityEngine::UIElements::VisualElement::*)()>(&UnityEngine::UIElements::VisualElement::get_styleSheets)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "get_styleSheets", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::AddStyleSheetPath
// Il2CppName: AddStyleSheetPath
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::VisualElement::*)(::StringW)>(&UnityEngine::UIElements::VisualElement::AddStyleSheetPath)> {
  static const MethodInfo* get() {
    static auto* sheetPath = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "AddStyleSheetPath", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sheetPath});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::ResolveLengthValue
// Il2CppName: ResolveLengthValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::StyleFloat (UnityEngine::UIElements::VisualElement::*)(::UnityEngine::UIElements::Length, bool)>(&UnityEngine::UIElements::VisualElement::ResolveLengthValue)> {
  static const MethodInfo* get() {
    static auto* length = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "Length")->byval_arg;
    static auto* isRow = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "ResolveLengthValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{length, isRow});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::ResolveTranslate
// Il2CppName: ResolveTranslate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector3 (UnityEngine::UIElements::VisualElement::*)()>(&UnityEngine::UIElements::VisualElement::ResolveTranslate)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "ResolveTranslate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::ResolveTransformOrigin
// Il2CppName: ResolveTransformOrigin
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector3 (UnityEngine::UIElements::VisualElement::*)()>(&UnityEngine::UIElements::VisualElement::ResolveTransformOrigin)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "ResolveTransformOrigin", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::ResolveRotation
// Il2CppName: ResolveRotation
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Quaternion (UnityEngine::UIElements::VisualElement::*)()>(&UnityEngine::UIElements::VisualElement::ResolveRotation)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "ResolveRotation", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::ResolveScale
// Il2CppName: ResolveScale
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector3 (UnityEngine::UIElements::VisualElement::*)()>(&UnityEngine::UIElements::VisualElement::ResolveScale)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "ResolveScale", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::get_tooltip
// Il2CppName: get_tooltip
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (UnityEngine::UIElements::VisualElement::*)()>(&UnityEngine::UIElements::VisualElement::get_tooltip)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "get_tooltip", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::set_tooltip
// Il2CppName: set_tooltip
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::VisualElement::*)(::StringW)>(&UnityEngine::UIElements::VisualElement::set_tooltip)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "set_tooltip", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::GetOrCreateTypeData
// Il2CppName: GetOrCreateTypeData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::VisualElement::TypeData* (*)(::System::Type*)>(&UnityEngine::UIElements::VisualElement::GetOrCreateTypeData)> {
  static const MethodInfo* get() {
    static auto* t = &::il2cpp_utils::GetClassFromName("System", "Type")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "GetOrCreateTypeData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{t});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::get_typeData
// Il2CppName: get_typeData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::VisualElement::TypeData* (UnityEngine::UIElements::VisualElement::*)()>(&UnityEngine::UIElements::VisualElement::get_typeData)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "get_typeData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&UnityEngine::UIElements::VisualElement::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::$AssignMeasureFunction$b__424_0
// Il2CppName: <AssignMeasureFunction>b__424_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Yoga::YogaSize (UnityEngine::UIElements::VisualElement::*)(::UnityEngine::Yoga::YogaNode*, float, ::UnityEngine::Yoga::YogaMeasureMode, float, ::UnityEngine::Yoga::YogaMeasureMode)>(&UnityEngine::UIElements::VisualElement::$AssignMeasureFunction$b__424_0)> {
  static const MethodInfo* get() {
    static auto* node = &::il2cpp_utils::GetClassFromName("UnityEngine.Yoga", "YogaNode")->byval_arg;
    static auto* f = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* mode = &::il2cpp_utils::GetClassFromName("UnityEngine.Yoga", "YogaMeasureMode")->byval_arg;
    static auto* f1 = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* heightMode = &::il2cpp_utils::GetClassFromName("UnityEngine.Yoga", "YogaMeasureMode")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "<AssignMeasureFunction>b__424_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{node, f, mode, f1, heightMode});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::get_canGrabFocus
// Il2CppName: get_canGrabFocus
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::VisualElement::*)()>(&UnityEngine::UIElements::VisualElement::get_canGrabFocus)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "get_canGrabFocus", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::get_focusController
// Il2CppName: get_focusController
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::FocusController* (UnityEngine::UIElements::VisualElement::*)()>(&UnityEngine::UIElements::VisualElement::get_focusController)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "get_focusController", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::ExecuteDefaultAction
// Il2CppName: ExecuteDefaultAction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::VisualElement::*)(::UnityEngine::UIElements::EventBase*)>(&UnityEngine::UIElements::VisualElement::ExecuteDefaultAction)> {
  static const MethodInfo* get() {
    static auto* evt = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "EventBase")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "ExecuteDefaultAction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{evt});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::Focus
// Il2CppName: Focus
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::VisualElement::*)()>(&UnityEngine::UIElements::VisualElement::Focus)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "Focus", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::SendEvent
// Il2CppName: SendEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::VisualElement::*)(::UnityEngine::UIElements::EventBase*)>(&UnityEngine::UIElements::VisualElement::SendEvent)> {
  static const MethodInfo* get() {
    static auto* e = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "EventBase")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "SendEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{e});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::SendEvent
// Il2CppName: SendEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::VisualElement::*)(::UnityEngine::UIElements::EventBase*, ::UnityEngine::UIElements::DispatchMode)>(&UnityEngine::UIElements::VisualElement::SendEvent)> {
  static const MethodInfo* get() {
    static auto* e = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "EventBase")->byval_arg;
    static auto* dispatchMode = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "DispatchMode")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "SendEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{e, dispatchMode});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::ToString
// Il2CppName: ToString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (UnityEngine::UIElements::VisualElement::*)()>(&UnityEngine::UIElements::VisualElement::ToString)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "ToString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
