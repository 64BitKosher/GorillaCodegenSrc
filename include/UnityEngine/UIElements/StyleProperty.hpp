// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.UIElements.StyleValueHandle
#include "UnityEngine/UIElements/StyleValueHandle.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Type namespace: UnityEngine.UIElements
namespace UnityEngine::UIElements {
  // Forward declaring type: StyleProperty
  class StyleProperty;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::UIElements::StyleProperty);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::UIElements::StyleProperty*, "UnityEngine.UIElements", "StyleProperty");
// Type namespace: UnityEngine.UIElements
namespace UnityEngine::UIElements {
  // Size: 0x2A
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.UIElements.StyleProperty
  // [TokenAttribute] Offset: FFFFFFFF
  class StyleProperty : public ::Il2CppObject {
    public:
    public:
    // private System.String m_Name
    // Size: 0x8
    // Offset: 0x10
    ::StringW m_Name;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private System.Int32 m_Line
    // Size: 0x4
    // Offset: 0x18
    int m_Line;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // Padding between fields: m_Line and: m_Values
    char __padding1[0x4] = {};
    // private UnityEngine.UIElements.StyleValueHandle[] m_Values
    // Size: 0x8
    // Offset: 0x20
    ::ArrayW<::UnityEngine::UIElements::StyleValueHandle> m_Values;
    // Field size check
    static_assert(sizeof(::ArrayW<::UnityEngine::UIElements::StyleValueHandle>) == 0x8);
    // System.Boolean isCustomProperty
    // Size: 0x1
    // Offset: 0x28
    bool isCustomProperty;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // System.Boolean requireVariableResolve
    // Size: 0x1
    // Offset: 0x29
    bool requireVariableResolve;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    public:
    // Get instance field reference: private System.String m_Name
    [[deprecated("Use field access instead!")]] ::StringW& dyn_m_Name();
    // Get instance field reference: private System.Int32 m_Line
    [[deprecated("Use field access instead!")]] int& dyn_m_Line();
    // Get instance field reference: private UnityEngine.UIElements.StyleValueHandle[] m_Values
    [[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::UIElements::StyleValueHandle>& dyn_m_Values();
    // Get instance field reference: System.Boolean isCustomProperty
    [[deprecated("Use field access instead!")]] bool& dyn_isCustomProperty();
    // Get instance field reference: System.Boolean requireVariableResolve
    [[deprecated("Use field access instead!")]] bool& dyn_requireVariableResolve();
    // public System.String get_name()
    // Offset: 0x56B0BE8
    ::StringW get_name();
    // public UnityEngine.UIElements.StyleValueHandle[] get_values()
    // Offset: 0x56B0BF0
    ::ArrayW<::UnityEngine::UIElements::StyleValueHandle> get_values();
    // public System.Void .ctor()
    // Offset: 0x56B0BF8
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static StyleProperty* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::StyleProperty::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<StyleProperty*, creationType>()));
    }
  }; // UnityEngine.UIElements.StyleProperty
  #pragma pack(pop)
  static check_size<sizeof(StyleProperty), 41 + sizeof(bool)> __UnityEngine_UIElements_StylePropertySizeCheck;
  static_assert(sizeof(StyleProperty) == 0x2A);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::UIElements::StyleProperty::get_name
// Il2CppName: get_name
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (UnityEngine::UIElements::StyleProperty::*)()>(&UnityEngine::UIElements::StyleProperty::get_name)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::StyleProperty*), "get_name", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::StyleProperty::get_values
// Il2CppName: get_values
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::UnityEngine::UIElements::StyleValueHandle> (UnityEngine::UIElements::StyleProperty::*)()>(&UnityEngine::UIElements::StyleProperty::get_values)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::StyleProperty*), "get_values", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::StyleProperty::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
