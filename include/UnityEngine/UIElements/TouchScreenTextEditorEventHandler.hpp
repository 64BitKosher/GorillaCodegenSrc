// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.UIElements.TextEditorEventHandler
#include "UnityEngine/UIElements/TextEditorEventHandler.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::UIElements
namespace UnityEngine::UIElements {
  // Forward declaring type: IVisualElementScheduledItem
  class IVisualElementScheduledItem;
  // Forward declaring type: PointerUpEvent
  class PointerUpEvent;
  // Forward declaring type: FocusOutEvent
  class FocusOutEvent;
  // Forward declaring type: TextElement
  class TextElement;
  // Forward declaring type: EventBase
  class EventBase;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: TextEditingUtilities
  class TextEditingUtilities;
}
// Completed forward declares
// Type namespace: UnityEngine.UIElements
namespace UnityEngine::UIElements {
  // Forward declaring type: TouchScreenTextEditorEventHandler
  class TouchScreenTextEditorEventHandler;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::UIElements::TouchScreenTextEditorEventHandler);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::UIElements::TouchScreenTextEditorEventHandler*, "UnityEngine.UIElements", "TouchScreenTextEditorEventHandler");
// Type namespace: UnityEngine.UIElements
namespace UnityEngine::UIElements {
  // Size: 0x2A
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.UIElements.TouchScreenTextEditorEventHandler
  // [TokenAttribute] Offset: FFFFFFFF
  class TouchScreenTextEditorEventHandler : public ::UnityEngine::UIElements::TextEditorEventHandler {
    public:
    public:
    // private UnityEngine.UIElements.IVisualElementScheduledItem m_TouchKeyboardPoller
    // Size: 0x8
    // Offset: 0x20
    ::UnityEngine::UIElements::IVisualElementScheduledItem* m_TouchKeyboardPoller;
    // Field size check
    static_assert(sizeof(::UnityEngine::UIElements::IVisualElementScheduledItem*) == 0x8);
    // private System.Boolean m_TouchKeyboardAllowsInPlaceEditing
    // Size: 0x1
    // Offset: 0x28
    bool m_TouchKeyboardAllowsInPlaceEditing;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean m_IsClicking
    // Size: 0x1
    // Offset: 0x29
    bool m_IsClicking;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    public:
    // Get instance field reference: private UnityEngine.UIElements.IVisualElementScheduledItem m_TouchKeyboardPoller
    [[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::IVisualElementScheduledItem*& dyn_m_TouchKeyboardPoller();
    // Get instance field reference: private System.Boolean m_TouchKeyboardAllowsInPlaceEditing
    [[deprecated("Use field access instead!")]] bool& dyn_m_TouchKeyboardAllowsInPlaceEditing();
    // Get instance field reference: private System.Boolean m_IsClicking
    [[deprecated("Use field access instead!")]] bool& dyn_m_IsClicking();
    // private System.Void PollTouchScreenKeyboard()
    // Offset: 0x5613298
    void PollTouchScreenKeyboard();
    // private System.Void DoPollTouchScreenKeyboard()
    // Offset: 0x56134E4
    void DoPollTouchScreenKeyboard();
    // private System.Void UpdateStringPositionFromKeyboard()
    // Offset: 0x5613CB0
    void UpdateStringPositionFromKeyboard();
    // private System.Void CloseTouchScreenKeyboard()
    // Offset: 0x5613BCC
    void CloseTouchScreenKeyboard();
    // private System.Void OpenTouchScreenKeyboard()
    // Offset: 0x5613F20
    void OpenTouchScreenKeyboard();
    // private System.Void OnPointerDownEvent()
    // Offset: 0x5614610
    void OnPointerDownEvent();
    // private System.Void OnPointerUpEvent(UnityEngine.UIElements.PointerUpEvent evt)
    // Offset: 0x56147D0
    void OnPointerUpEvent(::UnityEngine::UIElements::PointerUpEvent* evt);
    // private System.Void OnFocusInEvent()
    // Offset: 0x56147F0
    void OnFocusInEvent();
    // private System.Void OnFocusOutEvent(UnityEngine.UIElements.FocusOutEvent evt)
    // Offset: 0x5614970
    void OnFocusOutEvent(::UnityEngine::UIElements::FocusOutEvent* evt);
    // public System.Void .ctor(UnityEngine.UIElements.TextElement textElement, UnityEngine.TextEditingUtilities editingUtilities)
    // Offset: 0x561325C
    // Implemented from: UnityEngine.UIElements.TextEditorEventHandler
    // Base method: System.Void TextEditorEventHandler::.ctor(UnityEngine.UIElements.TextElement textElement, UnityEngine.TextEditingUtilities editingUtilities)
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static TouchScreenTextEditorEventHandler* New_ctor(::UnityEngine::UIElements::TextElement* textElement, ::UnityEngine::TextEditingUtilities* editingUtilities) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::TouchScreenTextEditorEventHandler::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<TouchScreenTextEditorEventHandler*, creationType>(textElement, editingUtilities)));
    }
    // public override System.Void ExecuteDefaultActionAtTarget(UnityEngine.UIElements.EventBase evt)
    // Offset: 0x5614434
    // Implemented from: UnityEngine.UIElements.TextEditorEventHandler
    // Base method: System.Void TextEditorEventHandler::ExecuteDefaultActionAtTarget(UnityEngine.UIElements.EventBase evt)
    void ExecuteDefaultActionAtTarget(::UnityEngine::UIElements::EventBase* evt);
  }; // UnityEngine.UIElements.TouchScreenTextEditorEventHandler
  #pragma pack(pop)
  static check_size<sizeof(TouchScreenTextEditorEventHandler), 41 + sizeof(bool)> __UnityEngine_UIElements_TouchScreenTextEditorEventHandlerSizeCheck;
  static_assert(sizeof(TouchScreenTextEditorEventHandler) == 0x2A);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::UIElements::TouchScreenTextEditorEventHandler::PollTouchScreenKeyboard
// Il2CppName: PollTouchScreenKeyboard
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::TouchScreenTextEditorEventHandler::*)()>(&UnityEngine::UIElements::TouchScreenTextEditorEventHandler::PollTouchScreenKeyboard)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::TouchScreenTextEditorEventHandler*), "PollTouchScreenKeyboard", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::TouchScreenTextEditorEventHandler::DoPollTouchScreenKeyboard
// Il2CppName: DoPollTouchScreenKeyboard
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::TouchScreenTextEditorEventHandler::*)()>(&UnityEngine::UIElements::TouchScreenTextEditorEventHandler::DoPollTouchScreenKeyboard)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::TouchScreenTextEditorEventHandler*), "DoPollTouchScreenKeyboard", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::TouchScreenTextEditorEventHandler::UpdateStringPositionFromKeyboard
// Il2CppName: UpdateStringPositionFromKeyboard
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::TouchScreenTextEditorEventHandler::*)()>(&UnityEngine::UIElements::TouchScreenTextEditorEventHandler::UpdateStringPositionFromKeyboard)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::TouchScreenTextEditorEventHandler*), "UpdateStringPositionFromKeyboard", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::TouchScreenTextEditorEventHandler::CloseTouchScreenKeyboard
// Il2CppName: CloseTouchScreenKeyboard
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::TouchScreenTextEditorEventHandler::*)()>(&UnityEngine::UIElements::TouchScreenTextEditorEventHandler::CloseTouchScreenKeyboard)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::TouchScreenTextEditorEventHandler*), "CloseTouchScreenKeyboard", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::TouchScreenTextEditorEventHandler::OpenTouchScreenKeyboard
// Il2CppName: OpenTouchScreenKeyboard
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::TouchScreenTextEditorEventHandler::*)()>(&UnityEngine::UIElements::TouchScreenTextEditorEventHandler::OpenTouchScreenKeyboard)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::TouchScreenTextEditorEventHandler*), "OpenTouchScreenKeyboard", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::TouchScreenTextEditorEventHandler::OnPointerDownEvent
// Il2CppName: OnPointerDownEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::TouchScreenTextEditorEventHandler::*)()>(&UnityEngine::UIElements::TouchScreenTextEditorEventHandler::OnPointerDownEvent)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::TouchScreenTextEditorEventHandler*), "OnPointerDownEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::TouchScreenTextEditorEventHandler::OnPointerUpEvent
// Il2CppName: OnPointerUpEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::TouchScreenTextEditorEventHandler::*)(::UnityEngine::UIElements::PointerUpEvent*)>(&UnityEngine::UIElements::TouchScreenTextEditorEventHandler::OnPointerUpEvent)> {
  static const MethodInfo* get() {
    static auto* evt = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "PointerUpEvent")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::TouchScreenTextEditorEventHandler*), "OnPointerUpEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{evt});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::TouchScreenTextEditorEventHandler::OnFocusInEvent
// Il2CppName: OnFocusInEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::TouchScreenTextEditorEventHandler::*)()>(&UnityEngine::UIElements::TouchScreenTextEditorEventHandler::OnFocusInEvent)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::TouchScreenTextEditorEventHandler*), "OnFocusInEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::TouchScreenTextEditorEventHandler::OnFocusOutEvent
// Il2CppName: OnFocusOutEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::TouchScreenTextEditorEventHandler::*)(::UnityEngine::UIElements::FocusOutEvent*)>(&UnityEngine::UIElements::TouchScreenTextEditorEventHandler::OnFocusOutEvent)> {
  static const MethodInfo* get() {
    static auto* evt = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "FocusOutEvent")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::TouchScreenTextEditorEventHandler*), "OnFocusOutEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{evt});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::TouchScreenTextEditorEventHandler::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::UIElements::TouchScreenTextEditorEventHandler::ExecuteDefaultActionAtTarget
// Il2CppName: ExecuteDefaultActionAtTarget
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::TouchScreenTextEditorEventHandler::*)(::UnityEngine::UIElements::EventBase*)>(&UnityEngine::UIElements::TouchScreenTextEditorEventHandler::ExecuteDefaultActionAtTarget)> {
  static const MethodInfo* get() {
    static auto* evt = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "EventBase")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::TouchScreenTextEditorEventHandler*), "ExecuteDefaultActionAtTarget", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{evt});
  }
};
