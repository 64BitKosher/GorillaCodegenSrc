// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/byref.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Color
  struct Color;
  // Forward declaring type: Vector2
  struct Vector2;
}
// Completed forward declares
// Type namespace: UnityEngine.UIElements
namespace UnityEngine::UIElements {
  // Forward declaring type: ITextSelection
  class ITextSelection;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::UIElements::ITextSelection);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::UIElements::ITextSelection*, "UnityEngine.UIElements", "ITextSelection");
// Type namespace: UnityEngine.UIElements
namespace UnityEngine::UIElements {
  // Size: 0x0
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.UIElements.ITextSelection
  // [TokenAttribute] Offset: FFFFFFFF
  class ITextSelection {
    public:
    // public System.Boolean get_isSelectable()
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool get_isSelectable();
    // public System.Void set_isSelectable(System.Boolean value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void set_isSelectable(bool value);
    // public UnityEngine.Color get_cursorColor()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::UnityEngine::Color get_cursorColor();
    // public System.Void set_cursorColor(UnityEngine.Color value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void set_cursorColor(::UnityEngine::Color value);
    // public System.Int32 get_cursorIndex()
    // Offset: 0xFFFFFFFFFFFFFFFF
    int get_cursorIndex();
    // public System.Void set_cursorIndex(System.Int32 value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void set_cursorIndex(int value);
    // public System.Boolean get_doubleClickSelectsWord()
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool get_doubleClickSelectsWord();
    // public System.Int32 get_selectIndex()
    // Offset: 0xFFFFFFFFFFFFFFFF
    int get_selectIndex();
    // public System.Void set_selectIndex(System.Int32 value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void set_selectIndex(int value);
    // public UnityEngine.Color get_selectionColor()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::UnityEngine::Color get_selectionColor();
    // public System.Void set_selectionColor(UnityEngine.Color value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void set_selectionColor(::UnityEngine::Color value);
    // public System.Boolean get_tripleClickSelectsLine()
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool get_tripleClickSelectsLine();
    // public System.Boolean HasSelection()
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool HasSelection();
    // public System.Void SelectAll()
    // Offset: 0xFFFFFFFFFFFFFFFF
    void SelectAll();
    // public System.Void SelectNone()
    // Offset: 0xFFFFFFFFFFFFFFFF
    void SelectNone();
    // System.Boolean get_selectAllOnFocus()
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool get_selectAllOnFocus();
    // System.Void set_selectAllOnFocus(System.Boolean value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void set_selectAllOnFocus(bool value);
    // System.Boolean get_selectAllOnMouseUp()
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool get_selectAllOnMouseUp();
    // System.Void set_selectAllOnMouseUp(System.Boolean value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void set_selectAllOnMouseUp(bool value);
    // public UnityEngine.Vector2 get_cursorPosition()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::UnityEngine::Vector2 get_cursorPosition();
    // System.Single get_lineHeightAtCursorPosition()
    // Offset: 0xFFFFFFFFFFFFFFFF
    float get_lineHeightAtCursorPosition();
    // System.Single get_cursorWidth()
    // Offset: 0xFFFFFFFFFFFFFFFF
    float get_cursorWidth();
  }; // UnityEngine.UIElements.ITextSelection
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::UIElements::ITextSelection::get_isSelectable
// Il2CppName: get_isSelectable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::ITextSelection::*)()>(&UnityEngine::UIElements::ITextSelection::get_isSelectable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::ITextSelection*), "get_isSelectable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::ITextSelection::set_isSelectable
// Il2CppName: set_isSelectable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::ITextSelection::*)(bool)>(&UnityEngine::UIElements::ITextSelection::set_isSelectable)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::ITextSelection*), "set_isSelectable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::ITextSelection::get_cursorColor
// Il2CppName: get_cursorColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Color (UnityEngine::UIElements::ITextSelection::*)()>(&UnityEngine::UIElements::ITextSelection::get_cursorColor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::ITextSelection*), "get_cursorColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::ITextSelection::set_cursorColor
// Il2CppName: set_cursorColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::ITextSelection::*)(::UnityEngine::Color)>(&UnityEngine::UIElements::ITextSelection::set_cursorColor)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Color")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::ITextSelection*), "set_cursorColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::ITextSelection::get_cursorIndex
// Il2CppName: get_cursorIndex
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::UIElements::ITextSelection::*)()>(&UnityEngine::UIElements::ITextSelection::get_cursorIndex)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::ITextSelection*), "get_cursorIndex", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::ITextSelection::set_cursorIndex
// Il2CppName: set_cursorIndex
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::ITextSelection::*)(int)>(&UnityEngine::UIElements::ITextSelection::set_cursorIndex)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::ITextSelection*), "set_cursorIndex", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::ITextSelection::get_doubleClickSelectsWord
// Il2CppName: get_doubleClickSelectsWord
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::ITextSelection::*)()>(&UnityEngine::UIElements::ITextSelection::get_doubleClickSelectsWord)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::ITextSelection*), "get_doubleClickSelectsWord", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::ITextSelection::get_selectIndex
// Il2CppName: get_selectIndex
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::UIElements::ITextSelection::*)()>(&UnityEngine::UIElements::ITextSelection::get_selectIndex)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::ITextSelection*), "get_selectIndex", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::ITextSelection::set_selectIndex
// Il2CppName: set_selectIndex
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::ITextSelection::*)(int)>(&UnityEngine::UIElements::ITextSelection::set_selectIndex)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::ITextSelection*), "set_selectIndex", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::ITextSelection::get_selectionColor
// Il2CppName: get_selectionColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Color (UnityEngine::UIElements::ITextSelection::*)()>(&UnityEngine::UIElements::ITextSelection::get_selectionColor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::ITextSelection*), "get_selectionColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::ITextSelection::set_selectionColor
// Il2CppName: set_selectionColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::ITextSelection::*)(::UnityEngine::Color)>(&UnityEngine::UIElements::ITextSelection::set_selectionColor)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Color")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::ITextSelection*), "set_selectionColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::ITextSelection::get_tripleClickSelectsLine
// Il2CppName: get_tripleClickSelectsLine
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::ITextSelection::*)()>(&UnityEngine::UIElements::ITextSelection::get_tripleClickSelectsLine)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::ITextSelection*), "get_tripleClickSelectsLine", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::ITextSelection::HasSelection
// Il2CppName: HasSelection
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::ITextSelection::*)()>(&UnityEngine::UIElements::ITextSelection::HasSelection)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::ITextSelection*), "HasSelection", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::ITextSelection::SelectAll
// Il2CppName: SelectAll
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::ITextSelection::*)()>(&UnityEngine::UIElements::ITextSelection::SelectAll)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::ITextSelection*), "SelectAll", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::ITextSelection::SelectNone
// Il2CppName: SelectNone
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::ITextSelection::*)()>(&UnityEngine::UIElements::ITextSelection::SelectNone)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::ITextSelection*), "SelectNone", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::ITextSelection::get_selectAllOnFocus
// Il2CppName: get_selectAllOnFocus
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::ITextSelection::*)()>(&UnityEngine::UIElements::ITextSelection::get_selectAllOnFocus)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::ITextSelection*), "get_selectAllOnFocus", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::ITextSelection::set_selectAllOnFocus
// Il2CppName: set_selectAllOnFocus
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::ITextSelection::*)(bool)>(&UnityEngine::UIElements::ITextSelection::set_selectAllOnFocus)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::ITextSelection*), "set_selectAllOnFocus", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::ITextSelection::get_selectAllOnMouseUp
// Il2CppName: get_selectAllOnMouseUp
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::ITextSelection::*)()>(&UnityEngine::UIElements::ITextSelection::get_selectAllOnMouseUp)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::ITextSelection*), "get_selectAllOnMouseUp", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::ITextSelection::set_selectAllOnMouseUp
// Il2CppName: set_selectAllOnMouseUp
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::ITextSelection::*)(bool)>(&UnityEngine::UIElements::ITextSelection::set_selectAllOnMouseUp)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::ITextSelection*), "set_selectAllOnMouseUp", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::ITextSelection::get_cursorPosition
// Il2CppName: get_cursorPosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector2 (UnityEngine::UIElements::ITextSelection::*)()>(&UnityEngine::UIElements::ITextSelection::get_cursorPosition)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::ITextSelection*), "get_cursorPosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::ITextSelection::get_lineHeightAtCursorPosition
// Il2CppName: get_lineHeightAtCursorPosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::UIElements::ITextSelection::*)()>(&UnityEngine::UIElements::ITextSelection::get_lineHeightAtCursorPosition)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::ITextSelection*), "get_lineHeightAtCursorPosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::ITextSelection::get_cursorWidth
// Il2CppName: get_cursorWidth
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::UIElements::ITextSelection::*)()>(&UnityEngine::UIElements::ITextSelection::get_cursorWidth)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::ITextSelection*), "get_cursorWidth", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
