// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.UIElements.IUIElementsUtility
#include "UnityEngine/UIElements/IUIElementsUtility.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
// Including type: Unity.Profiling.ProfilerMarker
#include "Unity/Profiling/ProfilerMarker.hpp"
// Including type: UnityEngine.GUILayoutUtility
#include "UnityEngine/GUILayoutUtility.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: Stack`1<T>
  template<typename T>
  class Stack_1;
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Forward declaring namespace: UnityEngine::UIElements
namespace UnityEngine::UIElements {
  // Forward declaring type: IMGUIContainer
  class IMGUIContainer;
  // Forward declaring type: VisualElement
  class VisualElement;
  // Forward declaring type: Panel
  class Panel;
  // Forward declaring type: EventBase
  class EventBase;
  // Forward declaring type: BaseVisualElementPanel
  class BaseVisualElementPanel;
  // Forward declaring type: ContextType
  struct ContextType;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Event
  class Event;
  // Skipping declaration: Rect because it is already included!
  // Forward declaring type: EventType
  struct EventType;
  // Forward declaring type: Sprite
  class Sprite;
}
// Forward declaring namespace: System
namespace System {
  // Skipping declaration: IntPtr because it is already included!
  // Forward declaring type: Exception
  class Exception;
}
// Completed forward declares
// Type namespace: UnityEngine.UIElements
namespace UnityEngine::UIElements {
  // Forward declaring type: UIElementsUtility
  class UIElementsUtility;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::UIElements::UIElementsUtility);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::UIElements::UIElementsUtility*, "UnityEngine.UIElements", "UIElementsUtility");
// Type namespace: UnityEngine.UIElements
namespace UnityEngine::UIElements {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.UIElements.UIElementsUtility
  // [TokenAttribute] Offset: FFFFFFFF
  class UIElementsUtility : public ::Il2CppObject/*, public ::UnityEngine::UIElements::IUIElementsUtility*/ {
    public:
    // Creating interface conversion operator: operator ::UnityEngine::UIElements::IUIElementsUtility
    operator ::UnityEngine::UIElements::IUIElementsUtility() noexcept {
      return *reinterpret_cast<::UnityEngine::UIElements::IUIElementsUtility*>(this);
    }
    // Get static field: static private System.Collections.Generic.Stack`1<UnityEngine.UIElements.IMGUIContainer> s_ContainerStack
    static ::System::Collections::Generic::Stack_1<::UnityEngine::UIElements::IMGUIContainer*>* _get_s_ContainerStack();
    // Set static field: static private System.Collections.Generic.Stack`1<UnityEngine.UIElements.IMGUIContainer> s_ContainerStack
    static void _set_s_ContainerStack(::System::Collections::Generic::Stack_1<::UnityEngine::UIElements::IMGUIContainer*>* value);
    // Get static field: static private System.Collections.Generic.Dictionary`2<System.Int32,UnityEngine.UIElements.Panel> s_UIElementsCache
    static ::System::Collections::Generic::Dictionary_2<int, ::UnityEngine::UIElements::Panel*>* _get_s_UIElementsCache();
    // Set static field: static private System.Collections.Generic.Dictionary`2<System.Int32,UnityEngine.UIElements.Panel> s_UIElementsCache
    static void _set_s_UIElementsCache(::System::Collections::Generic::Dictionary_2<int, ::UnityEngine::UIElements::Panel*>* value);
    // Get static field: static private UnityEngine.Event s_EventInstance
    static ::UnityEngine::Event* _get_s_EventInstance();
    // Set static field: static private UnityEngine.Event s_EventInstance
    static void _set_s_EventInstance(::UnityEngine::Event* value);
    // Get static field: static UnityEngine.Color editorPlayModeTintColor
    static ::UnityEngine::Color _get_editorPlayModeTintColor();
    // Set static field: static UnityEngine.Color editorPlayModeTintColor
    static void _set_editorPlayModeTintColor(::UnityEngine::Color value);
    // Get static field: static System.Single singleLineHeight
    static float _get_singleLineHeight();
    // Set static field: static System.Single singleLineHeight
    static void _set_singleLineHeight(float value);
    // Get static field: static private UnityEngine.UIElements.UIElementsUtility s_Instance
    static ::UnityEngine::UIElements::UIElementsUtility* _get_s_Instance();
    // Set static field: static private UnityEngine.UIElements.UIElementsUtility s_Instance
    static void _set_s_Instance(::UnityEngine::UIElements::UIElementsUtility* value);
    // Get static field: static System.Collections.Generic.List`1<UnityEngine.UIElements.Panel> s_PanelsIterationList
    static ::System::Collections::Generic::List_1<::UnityEngine::UIElements::Panel*>* _get_s_PanelsIterationList();
    // Set static field: static System.Collections.Generic.List`1<UnityEngine.UIElements.Panel> s_PanelsIterationList
    static void _set_s_PanelsIterationList(::System::Collections::Generic::List_1<::UnityEngine::UIElements::Panel*>* value);
    // Get static field: static readonly System.String s_RepaintProfilerMarkerName
    static ::StringW _get_s_RepaintProfilerMarkerName();
    // Set static field: static readonly System.String s_RepaintProfilerMarkerName
    static void _set_s_RepaintProfilerMarkerName(::StringW value);
    // Get static field: static readonly System.String s_EventProfilerMarkerName
    static ::StringW _get_s_EventProfilerMarkerName();
    // Set static field: static readonly System.String s_EventProfilerMarkerName
    static void _set_s_EventProfilerMarkerName(::StringW value);
    // Get static field: static private readonly Unity.Profiling.ProfilerMarker s_RepaintProfilerMarker
    static ::Unity::Profiling::ProfilerMarker _get_s_RepaintProfilerMarker();
    // Set static field: static private readonly Unity.Profiling.ProfilerMarker s_RepaintProfilerMarker
    static void _set_s_RepaintProfilerMarker(::Unity::Profiling::ProfilerMarker value);
    // Get static field: static private readonly Unity.Profiling.ProfilerMarker s_EventProfilerMarker
    static ::Unity::Profiling::ProfilerMarker _get_s_EventProfilerMarker();
    // Set static field: static private readonly Unity.Profiling.ProfilerMarker s_EventProfilerMarker
    static void _set_s_EventProfilerMarker(::Unity::Profiling::ProfilerMarker value);
    // private System.Void .ctor()
    // Offset: 0x56C2500
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static UIElementsUtility* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::UIElementsUtility::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<UIElementsUtility*, creationType>()));
    }
    // private System.Boolean UnityEngine.UIElements.IUIElementsUtility.MakeCurrentIMGUIContainerDirty()
    // Offset: 0x56C2560
    bool UnityEngine_UIElements_IUIElementsUtility_MakeCurrentIMGUIContainerDirty();
    // private System.Boolean UnityEngine.UIElements.IUIElementsUtility.TakeCapture()
    // Offset: 0x56C2628
    bool UnityEngine_UIElements_IUIElementsUtility_TakeCapture();
    // private System.Boolean UnityEngine.UIElements.IUIElementsUtility.ReleaseCapture()
    // Offset: 0x56C26EC
    bool UnityEngine_UIElements_IUIElementsUtility_ReleaseCapture();
    // private System.Boolean UnityEngine.UIElements.IUIElementsUtility.ProcessEvent(System.Int32 instanceID, System.IntPtr nativeEventPtr, ref System.Boolean eventHandled)
    // Offset: 0x56C26F4
    bool UnityEngine_UIElements_IUIElementsUtility_ProcessEvent(int instanceID, ::System::IntPtr nativeEventPtr, ByRef<bool> eventHandled);
    // private System.Boolean UnityEngine.UIElements.IUIElementsUtility.CleanupRoots()
    // Offset: 0x56C2E44
    bool UnityEngine_UIElements_IUIElementsUtility_CleanupRoots();
    // private System.Boolean UnityEngine.UIElements.IUIElementsUtility.EndContainerGUIFromException(System.Exception exception)
    // Offset: 0x56C2ED8
    bool UnityEngine_UIElements_IUIElementsUtility_EndContainerGUIFromException(::System::Exception* exception);
    // static public System.Void RegisterCachedPanel(System.Int32 instanceID, UnityEngine.UIElements.Panel panel)
    // Offset: 0x56BF5FC
    static void RegisterCachedPanel(int instanceID, ::UnityEngine::UIElements::Panel* panel);
    // static public System.Void RemoveCachedPanel(System.Int32 instanceID)
    // Offset: 0x56BF72C
    static void RemoveCachedPanel(int instanceID);
    // static public System.Boolean TryGetPanel(System.Int32 instanceID, out UnityEngine.UIElements.Panel panel)
    // Offset: 0x56BF248
    static bool TryGetPanel(int instanceID, ByRef<::UnityEngine::UIElements::Panel*> panel);
    // static System.Void BeginContainerGUI(UnityEngine.GUILayoutUtility/LayoutCache cache, UnityEngine.Event evt, UnityEngine.UIElements.IMGUIContainer container)
    // Offset: 0x56C2F98
    static void BeginContainerGUI(::UnityEngine::GUILayoutUtility::LayoutCache* cache, ::UnityEngine::Event* evt, ::UnityEngine::UIElements::IMGUIContainer* container);
    // static System.Void EndContainerGUI(UnityEngine.Event evt, UnityEngine.Rect layoutSize)
    // Offset: 0x56C3170
    static void EndContainerGUI(::UnityEngine::Event* evt, ::UnityEngine::Rect layoutSize);
    // static UnityEngine.UIElements.EventBase CreateEvent(UnityEngine.Event systemEvent)
    // Offset: 0x56C337C
    static ::UnityEngine::UIElements::EventBase* CreateEvent(::UnityEngine::Event* systemEvent);
    // static UnityEngine.UIElements.EventBase CreateEvent(UnityEngine.Event systemEvent, UnityEngine.EventType eventType)
    // Offset: 0x56BEDB4
    static ::UnityEngine::UIElements::EventBase* CreateEvent(::UnityEngine::Event* systemEvent, ::UnityEngine::EventType eventType);
    // static private System.Boolean DoDispatch(UnityEngine.UIElements.BaseVisualElementPanel panel)
    // Offset: 0x56C2810
    static bool DoDispatch(::UnityEngine::UIElements::BaseVisualElementPanel* panel);
    // static System.Void GetAllPanels(System.Collections.Generic.List`1<UnityEngine.UIElements.Panel> panels, UnityEngine.UIElements.ContextType contextType)
    // Offset: 0x56BF7AC
    static void GetAllPanels(::System::Collections::Generic::List_1<::UnityEngine::UIElements::Panel*>* panels, ::UnityEngine::UIElements::ContextType contextType);
    // static System.Collections.Generic.Dictionary`2/Enumerator<System.Int32,UnityEngine.UIElements.Panel> GetPanelsIterator()
    // Offset: 0x56C33F0
    static typename ::System::Collections::Generic::Dictionary_2<int, ::UnityEngine::UIElements::Panel*>::Enumerator GetPanelsIterator();
    // static System.Single PixelsPerUnitScaleForElement(UnityEngine.UIElements.VisualElement ve, UnityEngine.Sprite sprite)
    // Offset: 0x56C3498
    static float PixelsPerUnitScaleForElement(::UnityEngine::UIElements::VisualElement* ve, ::UnityEngine::Sprite* sprite);
    // static private System.Void .cctor()
    // Offset: 0x56C354C
    static void _cctor();
  }; // UnityEngine.UIElements.UIElementsUtility
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::UIElements::UIElementsUtility::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::UIElements::UIElementsUtility::UnityEngine_UIElements_IUIElementsUtility_MakeCurrentIMGUIContainerDirty
// Il2CppName: UnityEngine.UIElements.IUIElementsUtility.MakeCurrentIMGUIContainerDirty
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::UIElementsUtility::*)()>(&UnityEngine::UIElements::UIElementsUtility::UnityEngine_UIElements_IUIElementsUtility_MakeCurrentIMGUIContainerDirty)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::UIElementsUtility*), "UnityEngine.UIElements.IUIElementsUtility.MakeCurrentIMGUIContainerDirty", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::UIElementsUtility::UnityEngine_UIElements_IUIElementsUtility_TakeCapture
// Il2CppName: UnityEngine.UIElements.IUIElementsUtility.TakeCapture
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::UIElementsUtility::*)()>(&UnityEngine::UIElements::UIElementsUtility::UnityEngine_UIElements_IUIElementsUtility_TakeCapture)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::UIElementsUtility*), "UnityEngine.UIElements.IUIElementsUtility.TakeCapture", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::UIElementsUtility::UnityEngine_UIElements_IUIElementsUtility_ReleaseCapture
// Il2CppName: UnityEngine.UIElements.IUIElementsUtility.ReleaseCapture
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::UIElementsUtility::*)()>(&UnityEngine::UIElements::UIElementsUtility::UnityEngine_UIElements_IUIElementsUtility_ReleaseCapture)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::UIElementsUtility*), "UnityEngine.UIElements.IUIElementsUtility.ReleaseCapture", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::UIElementsUtility::UnityEngine_UIElements_IUIElementsUtility_ProcessEvent
// Il2CppName: UnityEngine.UIElements.IUIElementsUtility.ProcessEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::UIElementsUtility::*)(int, ::System::IntPtr, ByRef<bool>)>(&UnityEngine::UIElements::UIElementsUtility::UnityEngine_UIElements_IUIElementsUtility_ProcessEvent)> {
  static const MethodInfo* get() {
    static auto* instanceID = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* nativeEventPtr = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* eventHandled = &::il2cpp_utils::GetClassFromName("System", "Boolean")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::UIElementsUtility*), "UnityEngine.UIElements.IUIElementsUtility.ProcessEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{instanceID, nativeEventPtr, eventHandled});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::UIElementsUtility::UnityEngine_UIElements_IUIElementsUtility_CleanupRoots
// Il2CppName: UnityEngine.UIElements.IUIElementsUtility.CleanupRoots
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::UIElementsUtility::*)()>(&UnityEngine::UIElements::UIElementsUtility::UnityEngine_UIElements_IUIElementsUtility_CleanupRoots)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::UIElementsUtility*), "UnityEngine.UIElements.IUIElementsUtility.CleanupRoots", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::UIElementsUtility::UnityEngine_UIElements_IUIElementsUtility_EndContainerGUIFromException
// Il2CppName: UnityEngine.UIElements.IUIElementsUtility.EndContainerGUIFromException
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::UIElementsUtility::*)(::System::Exception*)>(&UnityEngine::UIElements::UIElementsUtility::UnityEngine_UIElements_IUIElementsUtility_EndContainerGUIFromException)> {
  static const MethodInfo* get() {
    static auto* exception = &::il2cpp_utils::GetClassFromName("System", "Exception")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::UIElementsUtility*), "UnityEngine.UIElements.IUIElementsUtility.EndContainerGUIFromException", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{exception});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::UIElementsUtility::RegisterCachedPanel
// Il2CppName: RegisterCachedPanel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int, ::UnityEngine::UIElements::Panel*)>(&UnityEngine::UIElements::UIElementsUtility::RegisterCachedPanel)> {
  static const MethodInfo* get() {
    static auto* instanceID = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* panel = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "Panel")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::UIElementsUtility*), "RegisterCachedPanel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{instanceID, panel});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::UIElementsUtility::RemoveCachedPanel
// Il2CppName: RemoveCachedPanel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int)>(&UnityEngine::UIElements::UIElementsUtility::RemoveCachedPanel)> {
  static const MethodInfo* get() {
    static auto* instanceID = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::UIElementsUtility*), "RemoveCachedPanel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{instanceID});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::UIElementsUtility::TryGetPanel
// Il2CppName: TryGetPanel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(int, ByRef<::UnityEngine::UIElements::Panel*>)>(&UnityEngine::UIElements::UIElementsUtility::TryGetPanel)> {
  static const MethodInfo* get() {
    static auto* instanceID = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* panel = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "Panel")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::UIElementsUtility*), "TryGetPanel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{instanceID, panel});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::UIElementsUtility::BeginContainerGUI
// Il2CppName: BeginContainerGUI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::GUILayoutUtility::LayoutCache*, ::UnityEngine::Event*, ::UnityEngine::UIElements::IMGUIContainer*)>(&UnityEngine::UIElements::UIElementsUtility::BeginContainerGUI)> {
  static const MethodInfo* get() {
    static auto* cache = &::il2cpp_utils::GetClassFromName("UnityEngine", "GUILayoutUtility/LayoutCache")->byval_arg;
    static auto* evt = &::il2cpp_utils::GetClassFromName("UnityEngine", "Event")->byval_arg;
    static auto* container = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "IMGUIContainer")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::UIElementsUtility*), "BeginContainerGUI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{cache, evt, container});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::UIElementsUtility::EndContainerGUI
// Il2CppName: EndContainerGUI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::Event*, ::UnityEngine::Rect)>(&UnityEngine::UIElements::UIElementsUtility::EndContainerGUI)> {
  static const MethodInfo* get() {
    static auto* evt = &::il2cpp_utils::GetClassFromName("UnityEngine", "Event")->byval_arg;
    static auto* layoutSize = &::il2cpp_utils::GetClassFromName("UnityEngine", "Rect")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::UIElementsUtility*), "EndContainerGUI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{evt, layoutSize});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::UIElementsUtility::CreateEvent
// Il2CppName: CreateEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::EventBase* (*)(::UnityEngine::Event*)>(&UnityEngine::UIElements::UIElementsUtility::CreateEvent)> {
  static const MethodInfo* get() {
    static auto* systemEvent = &::il2cpp_utils::GetClassFromName("UnityEngine", "Event")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::UIElementsUtility*), "CreateEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{systemEvent});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::UIElementsUtility::CreateEvent
// Il2CppName: CreateEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::EventBase* (*)(::UnityEngine::Event*, ::UnityEngine::EventType)>(&UnityEngine::UIElements::UIElementsUtility::CreateEvent)> {
  static const MethodInfo* get() {
    static auto* systemEvent = &::il2cpp_utils::GetClassFromName("UnityEngine", "Event")->byval_arg;
    static auto* eventType = &::il2cpp_utils::GetClassFromName("UnityEngine", "EventType")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::UIElementsUtility*), "CreateEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{systemEvent, eventType});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::UIElementsUtility::DoDispatch
// Il2CppName: DoDispatch
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::UnityEngine::UIElements::BaseVisualElementPanel*)>(&UnityEngine::UIElements::UIElementsUtility::DoDispatch)> {
  static const MethodInfo* get() {
    static auto* panel = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "BaseVisualElementPanel")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::UIElementsUtility*), "DoDispatch", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{panel});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::UIElementsUtility::GetAllPanels
// Il2CppName: GetAllPanels
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::Collections::Generic::List_1<::UnityEngine::UIElements::Panel*>*, ::UnityEngine::UIElements::ContextType)>(&UnityEngine::UIElements::UIElementsUtility::GetAllPanels)> {
  static const MethodInfo* get() {
    static auto* panels = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "Panel")})->byval_arg;
    static auto* contextType = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "ContextType")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::UIElementsUtility*), "GetAllPanels", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{panels, contextType});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::UIElementsUtility::GetPanelsIterator
// Il2CppName: GetPanelsIterator
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<typename ::System::Collections::Generic::Dictionary_2<int, ::UnityEngine::UIElements::Panel*>::Enumerator (*)()>(&UnityEngine::UIElements::UIElementsUtility::GetPanelsIterator)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::UIElementsUtility*), "GetPanelsIterator", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::UIElementsUtility::PixelsPerUnitScaleForElement
// Il2CppName: PixelsPerUnitScaleForElement
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (*)(::UnityEngine::UIElements::VisualElement*, ::UnityEngine::Sprite*)>(&UnityEngine::UIElements::UIElementsUtility::PixelsPerUnitScaleForElement)> {
  static const MethodInfo* get() {
    static auto* ve = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "VisualElement")->byval_arg;
    static auto* sprite = &::il2cpp_utils::GetClassFromName("UnityEngine", "Sprite")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::UIElementsUtility*), "PixelsPerUnitScaleForElement", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ve, sprite});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::UIElementsUtility::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&UnityEngine::UIElements::UIElementsUtility::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::UIElementsUtility*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
