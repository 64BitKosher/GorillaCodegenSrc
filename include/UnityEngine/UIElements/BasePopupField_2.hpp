// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.UIElements.BaseField`1
#include "UnityEngine/UIElements/BaseField_1.hpp"
// Including type: UnityEngine.UIElements.TextElement
#include "UnityEngine/UIElements/TextElement.hpp"
// Including type: UnityEngine.UIElements.VisualElement/MeasureMode
#include "UnityEngine/UIElements/VisualElement_MeasureMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::UIElements
namespace UnityEngine::UIElements {
  // Skipping declaration: PopupTextElement because it is already included!
  // Skipping declaration: <>c because it is already included!
  // Forward declaring type: EventCallback`1<TEventType>
  template<typename TEventType>
  class EventCallback_1;
  // Skipping declaration: VisualElement because it is already included!
  // Forward declaring type: IGenericMenu
  class IGenericMenu;
  // Forward declaring type: PointerDownEvent
  class PointerDownEvent;
  // Forward declaring type: PointerMoveEvent
  class PointerMoveEvent;
  // Forward declaring type: PointerEventBase`1<T>
  template<typename T>
  class PointerEventBase_1;
  // Forward declaring type: NavigationSubmitEvent
  class NavigationSubmitEvent;
  // Forward declaring type: MouseDownEvent
  class MouseDownEvent;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Func`2<T, TResult>
  template<typename T, typename TResult>
  class Func_2;
  // Forward declaring type: Func`1<TResult>
  template<typename TResult>
  class Func_1;
}
// Completed forward declares
// Type namespace: UnityEngine.UIElements
namespace UnityEngine::UIElements {
  // Forward declaring type: BasePopupField`2<TValueType, TValueChoice>
  template<typename TValueType, typename TValueChoice>
  class BasePopupField_2;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE_GENERIC_CLASS(::UnityEngine::UIElements::BasePopupField_2, "UnityEngine.UIElements", "BasePopupField`2");
// Type namespace: UnityEngine.UIElements
namespace UnityEngine::UIElements {
  // WARNING Size may be invalid!
  // Autogenerated type: UnityEngine.UIElements.BasePopupField`2
  // [TokenAttribute] Offset: FFFFFFFF
  // [MovedFromAttribute] Offset: FFFFFFFF
  template<typename TValueType, typename TValueChoice>
  class BasePopupField_2 : public ::UnityEngine::UIElements::BaseField_1<TValueType> {
    public:
    // Nested type: ::UnityEngine::UIElements::BasePopupField_2::PopupTextElement<TValueType, TValueChoice>
    class PopupTextElement;
    // Nested type: ::UnityEngine::UIElements::BasePopupField_2::$$c<TValueType, TValueChoice>
    class $$c;
    // WARNING Size may be invalid!
    // Autogenerated type: UnityEngine.UIElements.BasePopupField`2/PopupTextElement
    // [TokenAttribute] Offset: FFFFFFFF
    class PopupTextElement : public ::il2cpp_utils::il2cpp_type_check::NestedType, public ::UnityEngine::UIElements::TextElement {
      public:
      using declaring_type = BasePopupField_2<TValueType, TValueChoice>*;
      static constexpr std::string_view NESTED_NAME = "PopupTextElement";
      static constexpr bool IS_VALUE_TYPE = false;
      // protected internal override UnityEngine.Vector2 DoMeasure(System.Single desiredWidth, UnityEngine.UIElements.VisualElement/MeasureMode widthMode, System.Single desiredHeight, UnityEngine.UIElements.VisualElement/MeasureMode heightMode)
      // Offset: 0xFFFFFFFFFFFFFFFF
      // Implemented from: UnityEngine.UIElements.TextElement
      // Base method: UnityEngine.Vector2 TextElement::DoMeasure(System.Single desiredWidth, UnityEngine.UIElements.VisualElement/MeasureMode widthMode, System.Single desiredHeight, UnityEngine.UIElements.VisualElement/MeasureMode heightMode)
      ::UnityEngine::Vector2 DoMeasure(float desiredWidth, ::UnityEngine::UIElements::VisualElement::MeasureMode widthMode, float desiredHeight, ::UnityEngine::UIElements::VisualElement::MeasureMode heightMode) {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::BasePopupField_2::PopupTextElement::DoMeasure");
        auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UIElements::TextElement*), -1));
        return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(this, ___internal__method, desiredWidth, widthMode, desiredHeight, heightMode);
      }
      // public System.Void .ctor()
      // Offset: 0xFFFFFFFFFFFFFFFF
      // Implemented from: UnityEngine.UIElements.TextElement
      // Base method: System.Void TextElement::.ctor()
      // Base method: System.Void BindableElement::.ctor()
      // Base method: System.Void VisualElement::.ctor()
      // Base method: System.Void Focusable::.ctor()
      // Base method: System.Void CallbackEventHandler::.ctor()
      template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
      static typename BasePopupField_2<TValueType, TValueChoice>::PopupTextElement* New_ctor() {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::BasePopupField_2::PopupTextElement::.ctor");
        return THROW_UNLESS((::il2cpp_utils::New<typename BasePopupField_2<TValueType, TValueChoice>::PopupTextElement*, creationType>()));
      }
    }; // UnityEngine.UIElements.BasePopupField`2/PopupTextElement
    // Could not write size check! Type: UnityEngine.UIElements.BasePopupField`2/PopupTextElement is generic, or has no fields that are valid for size checks!
    // WARNING Size may be invalid!
    // Autogenerated type: UnityEngine.UIElements.BasePopupField`2/<>c
    // [TokenAttribute] Offset: FFFFFFFF
    // [CompilerGeneratedAttribute] Offset: FFFFFFFF
    class $$c : public ::il2cpp_utils::il2cpp_type_check::NestedType, public ::Il2CppObject {
      public:
      using declaring_type = BasePopupField_2<TValueType, TValueChoice>*;
      static constexpr std::string_view NESTED_NAME = "<>c";
      static constexpr bool IS_VALUE_TYPE = false;
      // Autogenerated static field getter
      // Get static field: static public readonly UnityEngine.UIElements.BasePopupField`2/<>c<TValueType,TValueChoice> <>9
      static typename ::UnityEngine::UIElements::BasePopupField_2<TValueType, TValueChoice>::$$c* _get_$$9() {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::BasePopupField_2::$$c::_get_$$9");
        return THROW_UNLESS((il2cpp_utils::GetFieldValue<typename ::UnityEngine::UIElements::BasePopupField_2<TValueType, TValueChoice>::$$c*>(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<typename BasePopupField_2<TValueType, TValueChoice>::$$c*>::get(), "<>9")));
      }
      // Autogenerated static field setter
      // Set static field: static public readonly UnityEngine.UIElements.BasePopupField`2/<>c<TValueType,TValueChoice> <>9
      static void _set_$$9(typename ::UnityEngine::UIElements::BasePopupField_2<TValueType, TValueChoice>::$$c* value) {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::BasePopupField_2::$$c::_set_$$9");
        THROW_UNLESS((il2cpp_utils::SetFieldValue(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<typename BasePopupField_2<TValueType, TValueChoice>::$$c*>::get(), "<>9", value)));
      }
      // Autogenerated static field getter
      // Get static field: static public UnityEngine.UIElements.EventCallback`1<UnityEngine.UIElements.MouseDownEvent> <>9__23_0
      static ::UnityEngine::UIElements::EventCallback_1<::UnityEngine::UIElements::MouseDownEvent*>* _get_$$9__23_0() {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::BasePopupField_2::$$c::_get_$$9__23_0");
        return THROW_UNLESS((il2cpp_utils::GetFieldValue<::UnityEngine::UIElements::EventCallback_1<::UnityEngine::UIElements::MouseDownEvent*>*>(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<typename BasePopupField_2<TValueType, TValueChoice>::$$c*>::get(), "<>9__23_0")));
      }
      // Autogenerated static field setter
      // Set static field: static public UnityEngine.UIElements.EventCallback`1<UnityEngine.UIElements.MouseDownEvent> <>9__23_0
      static void _set_$$9__23_0(::UnityEngine::UIElements::EventCallback_1<::UnityEngine::UIElements::MouseDownEvent*>* value) {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::BasePopupField_2::$$c::_set_$$9__23_0");
        THROW_UNLESS((il2cpp_utils::SetFieldValue(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<typename BasePopupField_2<TValueType, TValueChoice>::$$c*>::get(), "<>9__23_0", value)));
      }
      // static private System.Void .cctor()
      // Offset: 0xFFFFFFFFFFFFFFFF
      static void _cctor() {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::BasePopupField_2::$$c::.cctor");
        static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<typename BasePopupField_2<TValueType, TValueChoice>::$$c*>::get(), ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
        ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
      }
      // public System.Void .ctor()
      // Offset: 0xFFFFFFFFFFFFFFFF
      template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
      static typename BasePopupField_2<TValueType, TValueChoice>::$$c* New_ctor() {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::BasePopupField_2::$$c::.ctor");
        return THROW_UNLESS((::il2cpp_utils::New<typename BasePopupField_2<TValueType, TValueChoice>::$$c*, creationType>()));
      }
      // System.Void <.ctor>b__23_0(UnityEngine.UIElements.MouseDownEvent e)
      // Offset: 0xFFFFFFFFFFFFFFFF
      void $_ctor$b__23_0(::UnityEngine::UIElements::MouseDownEvent* e) {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::BasePopupField_2::$$c::<.ctor>b__23_0");
        static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.ctor>b__23_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(e)})));
        ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, e);
      }
    }; // UnityEngine.UIElements.BasePopupField`2/<>c
    // Could not write size check! Type: UnityEngine.UIElements.BasePopupField`2/<>c is generic, or has no fields that are valid for size checks!
    public:
    // System.Collections.Generic.List`1<TValueChoice> m_Choices
    // Size: 0x8
    // Offset: 0x0
    ::System::Collections::Generic::List_1<TValueChoice>* m_Choices;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<TValueChoice>*) == 0x8);
    // private UnityEngine.UIElements.TextElement m_TextElement
    // Size: 0x8
    // Offset: 0x0
    ::UnityEngine::UIElements::TextElement* m_TextElement;
    // Field size check
    static_assert(sizeof(::UnityEngine::UIElements::TextElement*) == 0x8);
    // private UnityEngine.UIElements.VisualElement m_ArrowElement
    // Size: 0x8
    // Offset: 0x0
    ::UnityEngine::UIElements::VisualElement* m_ArrowElement;
    // Field size check
    static_assert(sizeof(::UnityEngine::UIElements::VisualElement*) == 0x8);
    // System.Func`2<TValueChoice,System.String> m_FormatSelectedValueCallback
    // Size: 0x8
    // Offset: 0x0
    ::System::Func_2<TValueChoice, ::StringW>* m_FormatSelectedValueCallback;
    // Field size check
    static_assert(sizeof(::System::Func_2<TValueChoice, ::StringW>*) == 0x8);
    // System.Func`2<TValueChoice,System.String> m_FormatListItemCallback
    // Size: 0x8
    // Offset: 0x0
    ::System::Func_2<TValueChoice, ::StringW>* m_FormatListItemCallback;
    // Field size check
    static_assert(sizeof(::System::Func_2<TValueChoice, ::StringW>*) == 0x8);
    // System.Func`1<UnityEngine.UIElements.IGenericMenu> createMenuCallback
    // Size: 0x8
    // Offset: 0x0
    ::System::Func_1<::UnityEngine::UIElements::IGenericMenu*>* createMenuCallback;
    // Field size check
    static_assert(sizeof(::System::Func_1<::UnityEngine::UIElements::IGenericMenu*>*) == 0x8);
    public:
    // Autogenerated static field getter
    // Get static field: static public readonly System.String ussClassName
    static ::StringW _get_ussClassName() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::BasePopupField_2::_get_ussClassName");
      return THROW_UNLESS((il2cpp_utils::GetFieldValue<::StringW>(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<BasePopupField_2<TValueType, TValueChoice>*>::get(), "ussClassName")));
    }
    // Autogenerated static field setter
    // Set static field: static public readonly System.String ussClassName
    static void _set_ussClassName(::StringW value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::BasePopupField_2::_set_ussClassName");
      THROW_UNLESS((il2cpp_utils::SetFieldValue(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<BasePopupField_2<TValueType, TValueChoice>*>::get(), "ussClassName", value)));
    }
    // Autogenerated static field getter
    // Get static field: static public readonly System.String textUssClassName
    static ::StringW _get_textUssClassName() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::BasePopupField_2::_get_textUssClassName");
      return THROW_UNLESS((il2cpp_utils::GetFieldValue<::StringW>(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<BasePopupField_2<TValueType, TValueChoice>*>::get(), "textUssClassName")));
    }
    // Autogenerated static field setter
    // Set static field: static public readonly System.String textUssClassName
    static void _set_textUssClassName(::StringW value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::BasePopupField_2::_set_textUssClassName");
      THROW_UNLESS((il2cpp_utils::SetFieldValue(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<BasePopupField_2<TValueType, TValueChoice>*>::get(), "textUssClassName", value)));
    }
    // Autogenerated static field getter
    // Get static field: static public readonly System.String arrowUssClassName
    static ::StringW _get_arrowUssClassName() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::BasePopupField_2::_get_arrowUssClassName");
      return THROW_UNLESS((il2cpp_utils::GetFieldValue<::StringW>(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<BasePopupField_2<TValueType, TValueChoice>*>::get(), "arrowUssClassName")));
    }
    // Autogenerated static field setter
    // Set static field: static public readonly System.String arrowUssClassName
    static void _set_arrowUssClassName(::StringW value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::BasePopupField_2::_set_arrowUssClassName");
      THROW_UNLESS((il2cpp_utils::SetFieldValue(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<BasePopupField_2<TValueType, TValueChoice>*>::get(), "arrowUssClassName", value)));
    }
    // Autogenerated static field getter
    // Get static field: static public readonly System.String labelUssClassName
    static ::StringW _get_labelUssClassName() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::BasePopupField_2::_get_labelUssClassName");
      return THROW_UNLESS((il2cpp_utils::GetFieldValue<::StringW>(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<BasePopupField_2<TValueType, TValueChoice>*>::get(), "labelUssClassName")));
    }
    // Autogenerated static field setter
    // Set static field: static public readonly System.String labelUssClassName
    static void _set_labelUssClassName(::StringW value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::BasePopupField_2::_set_labelUssClassName");
      THROW_UNLESS((il2cpp_utils::SetFieldValue(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<BasePopupField_2<TValueType, TValueChoice>*>::get(), "labelUssClassName", value)));
    }
    // Autogenerated static field getter
    // Get static field: static public readonly System.String inputUssClassName
    static ::StringW _get_inputUssClassName() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::BasePopupField_2::_get_inputUssClassName");
      return THROW_UNLESS((il2cpp_utils::GetFieldValue<::StringW>(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<BasePopupField_2<TValueType, TValueChoice>*>::get(), "inputUssClassName")));
    }
    // Autogenerated static field setter
    // Set static field: static public readonly System.String inputUssClassName
    static void _set_inputUssClassName(::StringW value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::BasePopupField_2::_set_inputUssClassName");
      THROW_UNLESS((il2cpp_utils::SetFieldValue(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<BasePopupField_2<TValueType, TValueChoice>*>::get(), "inputUssClassName", value)));
    }
    // Autogenerated instance field getter
    // Get instance field: System.Collections.Generic.List`1<TValueChoice> m_Choices
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<TValueChoice>*& dyn_m_Choices() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::BasePopupField_2::dyn_m_Choices");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Choices"))->offset;
      return *reinterpret_cast<::System::Collections::Generic::List_1<TValueChoice>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: private UnityEngine.UIElements.TextElement m_TextElement
    [[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::TextElement*& dyn_m_TextElement() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::BasePopupField_2::dyn_m_TextElement");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_TextElement"))->offset;
      return *reinterpret_cast<::UnityEngine::UIElements::TextElement**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: private UnityEngine.UIElements.VisualElement m_ArrowElement
    [[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::VisualElement*& dyn_m_ArrowElement() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::BasePopupField_2::dyn_m_ArrowElement");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ArrowElement"))->offset;
      return *reinterpret_cast<::UnityEngine::UIElements::VisualElement**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: System.Func`2<TValueChoice,System.String> m_FormatSelectedValueCallback
    [[deprecated("Use field access instead!")]] ::System::Func_2<TValueChoice, ::StringW>*& dyn_m_FormatSelectedValueCallback() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::BasePopupField_2::dyn_m_FormatSelectedValueCallback");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_FormatSelectedValueCallback"))->offset;
      return *reinterpret_cast<::System::Func_2<TValueChoice, ::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: System.Func`2<TValueChoice,System.String> m_FormatListItemCallback
    [[deprecated("Use field access instead!")]] ::System::Func_2<TValueChoice, ::StringW>*& dyn_m_FormatListItemCallback() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::BasePopupField_2::dyn_m_FormatListItemCallback");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_FormatListItemCallback"))->offset;
      return *reinterpret_cast<::System::Func_2<TValueChoice, ::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: System.Func`1<UnityEngine.UIElements.IGenericMenu> createMenuCallback
    [[deprecated("Use field access instead!")]] ::System::Func_1<::UnityEngine::UIElements::IGenericMenu*>*& dyn_createMenuCallback() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::BasePopupField_2::dyn_createMenuCallback");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "createMenuCallback"))->offset;
      return *reinterpret_cast<::System::Func_1<::UnityEngine::UIElements::IGenericMenu*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // protected UnityEngine.UIElements.TextElement get_textElement()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::UnityEngine::UIElements::TextElement* get_textElement() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::BasePopupField_2::get_textElement");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_textElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::UIElements::TextElement*, false>(this, ___internal__method);
    }
    // System.String GetValueToDisplay()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::StringW GetValueToDisplay() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::BasePopupField_2::GetValueToDisplay");
      auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UIElements::BasePopupField_2<TValueType, TValueChoice>*), -1)));
      return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
    }
    // System.String GetListItemToDisplay(TValueType item)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::StringW GetListItemToDisplay(TValueType item) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::BasePopupField_2::GetListItemToDisplay");
      auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UIElements::BasePopupField_2<TValueType, TValueChoice>*), -1)));
      return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, item);
    }
    // System.Void AddMenuItems(UnityEngine.UIElements.IGenericMenu menu)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void AddMenuItems(::UnityEngine::UIElements::IGenericMenu* menu) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::BasePopupField_2::AddMenuItems");
      auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UIElements::BasePopupField_2<TValueType, TValueChoice>*), -1)));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, menu);
    }
    // public System.Void set_choices(System.Collections.Generic.List`1<TValueChoice> value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void set_choices(::System::Collections::Generic::List_1<TValueChoice>* value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::BasePopupField_2::set_choices");
      auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UIElements::BasePopupField_2<TValueType, TValueChoice>*), -1)));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
    }
    // private System.Void OnPointerDownEvent(UnityEngine.UIElements.PointerDownEvent evt)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void OnPointerDownEvent(::UnityEngine::UIElements::PointerDownEvent* evt) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::BasePopupField_2::OnPointerDownEvent");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPointerDownEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(evt)})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, evt);
    }
    // private System.Void OnPointerMoveEvent(UnityEngine.UIElements.PointerMoveEvent evt)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void OnPointerMoveEvent(::UnityEngine::UIElements::PointerMoveEvent* evt) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::BasePopupField_2::OnPointerMoveEvent");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPointerMoveEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(evt)})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, evt);
    }
    // private System.Boolean ContainsPointer(System.Int32 pointerId)
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool ContainsPointer(int pointerId) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::BasePopupField_2::ContainsPointer");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ContainsPointer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pointerId)})));
      return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, pointerId);
    }
    // private System.Void ProcessPointerDown(UnityEngine.UIElements.PointerEventBase`1<T> evt)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class T>
    void ProcessPointerDown(::UnityEngine::UIElements::PointerEventBase_1<T>* evt) {
      static_assert(std::is_convertible_v<T, ::UnityEngine::UIElements::PointerEventBase_1<T>*>);
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::BasePopupField_2::ProcessPointerDown");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessPointerDown", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(evt)})));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___generic__method, evt);
    }
    // private System.Void OnNavigationSubmit(UnityEngine.UIElements.NavigationSubmitEvent evt)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void OnNavigationSubmit(::UnityEngine::UIElements::NavigationSubmitEvent* evt) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::BasePopupField_2::OnNavigationSubmit");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnNavigationSubmit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(evt)})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, evt);
    }
    // System.Void ShowMenu()
    // Offset: 0xFFFFFFFFFFFFFFFF
    void ShowMenu() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::BasePopupField_2::ShowMenu");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShowMenu", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
    }
    // public override System.Void SetValueWithoutNotify(TValueType newValue)
    // Offset: 0xFFFFFFFFFFFFFFFF
    // Implemented from: UnityEngine.UIElements.BaseField`1
    // Base method: System.Void BaseField_1::SetValueWithoutNotify(TValueType newValue)
    void SetValueWithoutNotify(TValueType newValue) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::BasePopupField_2::SetValueWithoutNotify");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UIElements::BaseField_1<TValueType>*), -1));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newValue);
    }
    // System.Void .ctor(System.String label)
    // Offset: 0xFFFFFFFFFFFFFFFF
    // Implemented from: UnityEngine.UIElements.BaseField`1
    // Base method: System.Void BaseField_1::.ctor(System.String label)
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static BasePopupField_2<TValueType, TValueChoice>* New_ctor(::StringW label) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::BasePopupField_2::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<BasePopupField_2<TValueType, TValueChoice>*, creationType>(label)));
    }
    // protected override System.Void UpdateMixedValueContent()
    // Offset: 0xFFFFFFFFFFFFFFFF
    // Implemented from: UnityEngine.UIElements.BaseField`1
    // Base method: System.Void BaseField_1::UpdateMixedValueContent()
    void UpdateMixedValueContent() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::BasePopupField_2::UpdateMixedValueContent");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UIElements::BaseField_1<TValueType>*), -1));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
    }
    // static private System.Void .cctor()
    // Offset: 0xFFFFFFFFFFFFFFFF
    // Implemented from: UnityEngine.UIElements.BaseField`1
    // Base method: System.Void BaseField_1::.cctor()
    // Base method: System.Void VisualElement::.cctor()
    static void _cctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::BasePopupField_2::.cctor");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<BasePopupField_2<TValueType, TValueChoice>*>::get(), ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
    }
  }; // UnityEngine.UIElements.BasePopupField`2
  // Could not write size check! Type: UnityEngine.UIElements.BasePopupField`2 is generic, or has no fields that are valid for size checks!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
