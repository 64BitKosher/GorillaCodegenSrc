// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include <initializer_list>
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Attribute
#include "System/Attribute.hpp"
// Including type: UnityEngine.UIElements.EventCategoryFlags
#include "UnityEngine/UIElements/EventCategoryFlags.hpp"
// Including type: UnityEngine.UIElements.EventInterestOptions
#include "UnityEngine/UIElements/EventInterestOptions.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Type
  class Type;
}
// Completed forward declares
// Type namespace: UnityEngine.UIElements
namespace UnityEngine::UIElements {
  // Forward declaring type: EventInterestAttribute
  class EventInterestAttribute;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::UIElements::EventInterestAttribute);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::UIElements::EventInterestAttribute*, "UnityEngine.UIElements", "EventInterestAttribute");
// Type namespace: UnityEngine.UIElements
namespace UnityEngine::UIElements {
  // Size: 0x1C
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.UIElements.EventInterestAttribute
  // [TokenAttribute] Offset: FFFFFFFF
  // [AttributeUsageAttribute] Offset: FFFFFFFF
  class EventInterestAttribute : public ::System::Attribute {
    public:
    public:
    // System.Type[] eventTypes
    // Size: 0x8
    // Offset: 0x10
    ::ArrayW<::System::Type*> eventTypes;
    // Field size check
    static_assert(sizeof(::ArrayW<::System::Type*>) == 0x8);
    // UnityEngine.UIElements.EventCategoryFlags categoryFlags
    // Size: 0x4
    // Offset: 0x18
    ::UnityEngine::UIElements::EventCategoryFlags categoryFlags;
    // Field size check
    static_assert(sizeof(::UnityEngine::UIElements::EventCategoryFlags) == 0x4);
    public:
    // Get instance field reference: System.Type[] eventTypes
    [[deprecated("Use field access instead!")]] ::ArrayW<::System::Type*>& dyn_eventTypes();
    // Get instance field reference: UnityEngine.UIElements.EventCategoryFlags categoryFlags
    [[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::EventCategoryFlags& dyn_categoryFlags();
    // public System.Void .ctor(params System.Type[] eventTypes)
    // Offset: 0x55C2004
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static EventInterestAttribute* New_ctor(::ArrayW<::System::Type*> eventTypes) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::EventInterestAttribute::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<EventInterestAttribute*, creationType>(eventTypes)));
    }
    // public System.Void .ctor(UnityEngine.UIElements.EventInterestOptions interests)
    // Offset: 0x55C2038
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static EventInterestAttribute* New_ctor(::UnityEngine::UIElements::EventInterestOptions interests) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::EventInterestAttribute::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<EventInterestAttribute*, creationType>(interests)));
    }
  }; // UnityEngine.UIElements.EventInterestAttribute
  #pragma pack(pop)
  static check_size<sizeof(EventInterestAttribute), 24 + sizeof(::UnityEngine::UIElements::EventCategoryFlags)> __UnityEngine_UIElements_EventInterestAttributeSizeCheck;
  static_assert(sizeof(EventInterestAttribute) == 0x1C);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::UIElements::EventInterestAttribute::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::UIElements::EventInterestAttribute::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
