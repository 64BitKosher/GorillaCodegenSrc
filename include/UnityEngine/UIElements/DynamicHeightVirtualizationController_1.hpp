// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.UIElements.VerticalVirtualizationController`1
#include "UnityEngine/UIElements/VerticalVirtualizationController_1.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
// Including type: System.Enum
#include "System/Enum.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::UIElements
namespace UnityEngine::UIElements {
  // Skipping declaration: ContentHeightCacheInfo because it is already included!
  // Skipping declaration: VirtualizationChange because it is already included!
  // Skipping declaration: ScrollDirection because it is already included!
  // Forward declaring type: ReusableCollectionItem
  class ReusableCollectionItem;
  // Forward declaring type: IVisualElementScheduledItem
  class IVisualElementScheduledItem;
  // Forward declaring type: BaseVerticalCollectionView
  class BaseVerticalCollectionView;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: Dictionary`2<TKey, TValue>
  template<typename TKey, typename TValue>
  class Dictionary_2;
  // Forward declaring type: HashSet`1<T>
  template<typename T>
  class HashSet_1;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Action
  class Action;
  // Forward declaring type: Action`1<T>
  template<typename T>
  class Action_1;
  // Forward declaring type: Predicate`1<T>
  template<typename T>
  class Predicate_1;
}
// Completed forward declares
// Type namespace: UnityEngine.UIElements
namespace UnityEngine::UIElements {
  // Forward declaring type: DynamicHeightVirtualizationController`1<T>
  template<typename T>
  class DynamicHeightVirtualizationController_1;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE_GENERIC_CLASS(::UnityEngine::UIElements::DynamicHeightVirtualizationController_1, "UnityEngine.UIElements", "DynamicHeightVirtualizationController`1");
// Type namespace: UnityEngine.UIElements
namespace UnityEngine::UIElements {
  // WARNING Size may be invalid!
  // Autogenerated type: UnityEngine.UIElements.DynamicHeightVirtualizationController`1
  // [TokenAttribute] Offset: FFFFFFFF
  template<typename T>
  class DynamicHeightVirtualizationController_1 : public ::UnityEngine::UIElements::VerticalVirtualizationController_1<T> {
    public:
    // Nested type: ::UnityEngine::UIElements::DynamicHeightVirtualizationController_1::ContentHeightCacheInfo<T>
    struct ContentHeightCacheInfo;
    // Nested type: ::UnityEngine::UIElements::DynamicHeightVirtualizationController_1::VirtualizationChange<T>
    struct VirtualizationChange;
    // Nested type: ::UnityEngine::UIElements::DynamicHeightVirtualizationController_1::ScrollDirection<T>
    struct ScrollDirection;
    // WARNING Size may be invalid!
    // WARNING Layout: Sequential may not be correctly taken into account!
    // Autogenerated type: UnityEngine.UIElements.DynamicHeightVirtualizationController`1/ContentHeightCacheInfo
    // [TokenAttribute] Offset: FFFFFFFF
    // [IsReadOnlyAttribute] Offset: FFFFFFFF
    struct ContentHeightCacheInfo : public ::il2cpp_utils::il2cpp_type_check::NestedType/*, public ::System::ValueType*/ {
      public:
      using declaring_type = DynamicHeightVirtualizationController_1<T>*;
      static constexpr std::string_view NESTED_NAME = "ContentHeightCacheInfo";
      static constexpr bool IS_VALUE_TYPE = true;
      public:
      // public readonly System.Single sum
      // Size: 0x4
      // Offset: 0x0
      float sum;
      // Field size check
      static_assert(sizeof(float) == 0x4);
      // public readonly System.Int32 count
      // Size: 0x4
      // Offset: 0x0
      int count;
      // Field size check
      static_assert(sizeof(int) == 0x4);
      public:
      // Creating value type constructor for type: ContentHeightCacheInfo
      constexpr ContentHeightCacheInfo(float sum_ = {}, int count_ = {}) noexcept : sum{sum_}, count{count_} {}
      // Creating interface conversion operator: operator ::System::ValueType
      operator ::System::ValueType() noexcept {
        return *reinterpret_cast<::System::ValueType*>(this);
      }
      // Autogenerated instance field getter
      // Get instance field: public readonly System.Single sum
      [[deprecated("Use field access instead!")]] float& dyn_sum() {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::DynamicHeightVirtualizationController_1::ContentHeightCacheInfo::dyn_sum");
        auto ___internal__instance = *this;
        static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sum"))->offset;
        return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
      }
      // Autogenerated instance field getter
      // Get instance field: public readonly System.Int32 count
      [[deprecated("Use field access instead!")]] int& dyn_count() {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::DynamicHeightVirtualizationController_1::ContentHeightCacheInfo::dyn_count");
        auto ___internal__instance = *this;
        static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "count"))->offset;
        return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
      }
      // public System.Void .ctor(System.Single sum, System.Int32 count)
      // Offset: 0xFFFFFFFFFFFFFFFF
      // ABORTED: conflicts with another method.  ContentHeightCacheInfo(float sum, int count)
    }; // UnityEngine.UIElements.DynamicHeightVirtualizationController`1/ContentHeightCacheInfo
    // Could not write size check! Type: UnityEngine.UIElements.DynamicHeightVirtualizationController`1/ContentHeightCacheInfo is generic, or has no fields that are valid for size checks!
    // WARNING Size may be invalid!
    // Autogenerated type: UnityEngine.UIElements.DynamicHeightVirtualizationController`1/VirtualizationChange
    // [TokenAttribute] Offset: FFFFFFFF
    struct VirtualizationChange : public ::il2cpp_utils::il2cpp_type_check::NestedType/*, public ::System::Enum*/ {
      public:
      using declaring_type = DynamicHeightVirtualizationController_1<T>*;
      static constexpr std::string_view NESTED_NAME = "VirtualizationChange";
      static constexpr bool IS_VALUE_TYPE = true;
      public:
      // public System.Int32 value__
      // Size: 0x4
      // Offset: 0x0
      int value;
      // Field size check
      static_assert(sizeof(int) == 0x4);
      public:
      // Creating value type constructor for type: VirtualizationChange
      constexpr VirtualizationChange(int value_ = {}) noexcept : value{value_} {}
      // Creating interface conversion operator: operator ::System::Enum
      operator ::System::Enum() noexcept {
        return *reinterpret_cast<::System::Enum*>(this);
      }
      // Creating conversion operator: operator int
      constexpr operator int() const noexcept {
        return value;
      }
      // Autogenerated static field getter
      // Get static field: static public UnityEngine.UIElements.DynamicHeightVirtualizationController`1/VirtualizationChange<T> None
      static typename ::UnityEngine::UIElements::DynamicHeightVirtualizationController_1<T>::VirtualizationChange _get_None() {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::DynamicHeightVirtualizationController_1::VirtualizationChange::_get_None");
        return THROW_UNLESS(il2cpp_utils::GetFieldValue<typename ::UnityEngine::UIElements::DynamicHeightVirtualizationController_1<T>::VirtualizationChange>(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<typename DynamicHeightVirtualizationController_1<T>::VirtualizationChange>::get(), "None"));
      }
      // Autogenerated static field setter
      // Set static field: static public UnityEngine.UIElements.DynamicHeightVirtualizationController`1/VirtualizationChange<T> None
      static void _set_None(typename ::UnityEngine::UIElements::DynamicHeightVirtualizationController_1<T>::VirtualizationChange value) {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::DynamicHeightVirtualizationController_1::VirtualizationChange::_set_None");
        THROW_UNLESS(il2cpp_utils::SetFieldValue(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<typename DynamicHeightVirtualizationController_1<T>::VirtualizationChange>::get(), "None", value));
      }
      // Autogenerated static field getter
      // Get static field: static public UnityEngine.UIElements.DynamicHeightVirtualizationController`1/VirtualizationChange<T> Resize
      static typename ::UnityEngine::UIElements::DynamicHeightVirtualizationController_1<T>::VirtualizationChange _get_Resize() {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::DynamicHeightVirtualizationController_1::VirtualizationChange::_get_Resize");
        return THROW_UNLESS(il2cpp_utils::GetFieldValue<typename ::UnityEngine::UIElements::DynamicHeightVirtualizationController_1<T>::VirtualizationChange>(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<typename DynamicHeightVirtualizationController_1<T>::VirtualizationChange>::get(), "Resize"));
      }
      // Autogenerated static field setter
      // Set static field: static public UnityEngine.UIElements.DynamicHeightVirtualizationController`1/VirtualizationChange<T> Resize
      static void _set_Resize(typename ::UnityEngine::UIElements::DynamicHeightVirtualizationController_1<T>::VirtualizationChange value) {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::DynamicHeightVirtualizationController_1::VirtualizationChange::_set_Resize");
        THROW_UNLESS(il2cpp_utils::SetFieldValue(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<typename DynamicHeightVirtualizationController_1<T>::VirtualizationChange>::get(), "Resize", value));
      }
      // Autogenerated static field getter
      // Get static field: static public UnityEngine.UIElements.DynamicHeightVirtualizationController`1/VirtualizationChange<T> Scroll
      static typename ::UnityEngine::UIElements::DynamicHeightVirtualizationController_1<T>::VirtualizationChange _get_Scroll() {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::DynamicHeightVirtualizationController_1::VirtualizationChange::_get_Scroll");
        return THROW_UNLESS(il2cpp_utils::GetFieldValue<typename ::UnityEngine::UIElements::DynamicHeightVirtualizationController_1<T>::VirtualizationChange>(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<typename DynamicHeightVirtualizationController_1<T>::VirtualizationChange>::get(), "Scroll"));
      }
      // Autogenerated static field setter
      // Set static field: static public UnityEngine.UIElements.DynamicHeightVirtualizationController`1/VirtualizationChange<T> Scroll
      static void _set_Scroll(typename ::UnityEngine::UIElements::DynamicHeightVirtualizationController_1<T>::VirtualizationChange value) {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::DynamicHeightVirtualizationController_1::VirtualizationChange::_set_Scroll");
        THROW_UNLESS(il2cpp_utils::SetFieldValue(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<typename DynamicHeightVirtualizationController_1<T>::VirtualizationChange>::get(), "Scroll", value));
      }
      // Autogenerated static field getter
      // Get static field: static public UnityEngine.UIElements.DynamicHeightVirtualizationController`1/VirtualizationChange<T> ForcedScroll
      static typename ::UnityEngine::UIElements::DynamicHeightVirtualizationController_1<T>::VirtualizationChange _get_ForcedScroll() {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::DynamicHeightVirtualizationController_1::VirtualizationChange::_get_ForcedScroll");
        return THROW_UNLESS(il2cpp_utils::GetFieldValue<typename ::UnityEngine::UIElements::DynamicHeightVirtualizationController_1<T>::VirtualizationChange>(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<typename DynamicHeightVirtualizationController_1<T>::VirtualizationChange>::get(), "ForcedScroll"));
      }
      // Autogenerated static field setter
      // Set static field: static public UnityEngine.UIElements.DynamicHeightVirtualizationController`1/VirtualizationChange<T> ForcedScroll
      static void _set_ForcedScroll(typename ::UnityEngine::UIElements::DynamicHeightVirtualizationController_1<T>::VirtualizationChange value) {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::DynamicHeightVirtualizationController_1::VirtualizationChange::_set_ForcedScroll");
        THROW_UNLESS(il2cpp_utils::SetFieldValue(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<typename DynamicHeightVirtualizationController_1<T>::VirtualizationChange>::get(), "ForcedScroll", value));
      }
      // Autogenerated instance field getter
      // Get instance field: public System.Int32 value__
      [[deprecated("Use field access instead!")]] int& dyn_value__() {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::DynamicHeightVirtualizationController_1::VirtualizationChange::dyn_value__");
        auto ___internal__instance = *this;
        static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
        return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
      }
    }; // UnityEngine.UIElements.DynamicHeightVirtualizationController`1/VirtualizationChange
    // Could not write size check! Type: UnityEngine.UIElements.DynamicHeightVirtualizationController`1/VirtualizationChange is generic, or has no fields that are valid for size checks!
    // WARNING Size may be invalid!
    // Autogenerated type: UnityEngine.UIElements.DynamicHeightVirtualizationController`1/ScrollDirection
    // [TokenAttribute] Offset: FFFFFFFF
    struct ScrollDirection : public ::il2cpp_utils::il2cpp_type_check::NestedType/*, public ::System::Enum*/ {
      public:
      using declaring_type = DynamicHeightVirtualizationController_1<T>*;
      static constexpr std::string_view NESTED_NAME = "ScrollDirection";
      static constexpr bool IS_VALUE_TYPE = true;
      public:
      // public System.Int32 value__
      // Size: 0x4
      // Offset: 0x0
      int value;
      // Field size check
      static_assert(sizeof(int) == 0x4);
      public:
      // Creating value type constructor for type: ScrollDirection
      constexpr ScrollDirection(int value_ = {}) noexcept : value{value_} {}
      // Creating interface conversion operator: operator ::System::Enum
      operator ::System::Enum() noexcept {
        return *reinterpret_cast<::System::Enum*>(this);
      }
      // Creating conversion operator: operator int
      constexpr operator int() const noexcept {
        return value;
      }
      // Autogenerated static field getter
      // Get static field: static public UnityEngine.UIElements.DynamicHeightVirtualizationController`1/ScrollDirection<T> Idle
      static typename ::UnityEngine::UIElements::DynamicHeightVirtualizationController_1<T>::ScrollDirection _get_Idle() {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::DynamicHeightVirtualizationController_1::ScrollDirection::_get_Idle");
        return THROW_UNLESS(il2cpp_utils::GetFieldValue<typename ::UnityEngine::UIElements::DynamicHeightVirtualizationController_1<T>::ScrollDirection>(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<typename DynamicHeightVirtualizationController_1<T>::ScrollDirection>::get(), "Idle"));
      }
      // Autogenerated static field setter
      // Set static field: static public UnityEngine.UIElements.DynamicHeightVirtualizationController`1/ScrollDirection<T> Idle
      static void _set_Idle(typename ::UnityEngine::UIElements::DynamicHeightVirtualizationController_1<T>::ScrollDirection value) {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::DynamicHeightVirtualizationController_1::ScrollDirection::_set_Idle");
        THROW_UNLESS(il2cpp_utils::SetFieldValue(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<typename DynamicHeightVirtualizationController_1<T>::ScrollDirection>::get(), "Idle", value));
      }
      // Autogenerated static field getter
      // Get static field: static public UnityEngine.UIElements.DynamicHeightVirtualizationController`1/ScrollDirection<T> Up
      static typename ::UnityEngine::UIElements::DynamicHeightVirtualizationController_1<T>::ScrollDirection _get_Up() {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::DynamicHeightVirtualizationController_1::ScrollDirection::_get_Up");
        return THROW_UNLESS(il2cpp_utils::GetFieldValue<typename ::UnityEngine::UIElements::DynamicHeightVirtualizationController_1<T>::ScrollDirection>(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<typename DynamicHeightVirtualizationController_1<T>::ScrollDirection>::get(), "Up"));
      }
      // Autogenerated static field setter
      // Set static field: static public UnityEngine.UIElements.DynamicHeightVirtualizationController`1/ScrollDirection<T> Up
      static void _set_Up(typename ::UnityEngine::UIElements::DynamicHeightVirtualizationController_1<T>::ScrollDirection value) {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::DynamicHeightVirtualizationController_1::ScrollDirection::_set_Up");
        THROW_UNLESS(il2cpp_utils::SetFieldValue(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<typename DynamicHeightVirtualizationController_1<T>::ScrollDirection>::get(), "Up", value));
      }
      // Autogenerated static field getter
      // Get static field: static public UnityEngine.UIElements.DynamicHeightVirtualizationController`1/ScrollDirection<T> Down
      static typename ::UnityEngine::UIElements::DynamicHeightVirtualizationController_1<T>::ScrollDirection _get_Down() {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::DynamicHeightVirtualizationController_1::ScrollDirection::_get_Down");
        return THROW_UNLESS(il2cpp_utils::GetFieldValue<typename ::UnityEngine::UIElements::DynamicHeightVirtualizationController_1<T>::ScrollDirection>(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<typename DynamicHeightVirtualizationController_1<T>::ScrollDirection>::get(), "Down"));
      }
      // Autogenerated static field setter
      // Set static field: static public UnityEngine.UIElements.DynamicHeightVirtualizationController`1/ScrollDirection<T> Down
      static void _set_Down(typename ::UnityEngine::UIElements::DynamicHeightVirtualizationController_1<T>::ScrollDirection value) {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::DynamicHeightVirtualizationController_1::ScrollDirection::_set_Down");
        THROW_UNLESS(il2cpp_utils::SetFieldValue(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<typename DynamicHeightVirtualizationController_1<T>::ScrollDirection>::get(), "Down", value));
      }
      // Autogenerated instance field getter
      // Get instance field: public System.Int32 value__
      [[deprecated("Use field access instead!")]] int& dyn_value__() {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::DynamicHeightVirtualizationController_1::ScrollDirection::dyn_value__");
        auto ___internal__instance = *this;
        static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
        return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
      }
    }; // UnityEngine.UIElements.DynamicHeightVirtualizationController`1/ScrollDirection
    // Could not write size check! Type: UnityEngine.UIElements.DynamicHeightVirtualizationController`1/ScrollDirection is generic, or has no fields that are valid for size checks!
    public:
    // private System.Int32 m_HighestCachedIndex
    // Size: 0x4
    // Offset: 0x0
    int m_HighestCachedIndex;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private readonly System.Collections.Generic.Dictionary`2<System.Int32,System.Single> m_ItemHeightCache
    // Size: 0x8
    // Offset: 0x0
    ::System::Collections::Generic::Dictionary_2<int, float>* m_ItemHeightCache;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::Dictionary_2<int, float>*) == 0x8);
    // private readonly System.Collections.Generic.Dictionary`2<System.Int32,UnityEngine.UIElements.DynamicHeightVirtualizationController`1/ContentHeightCacheInfo<T>> m_ContentHeightCache
    // Size: 0x8
    // Offset: 0x0
    ::System::Collections::Generic::Dictionary_2<int, typename ::UnityEngine::UIElements::DynamicHeightVirtualizationController_1<T>::ContentHeightCacheInfo>* m_ContentHeightCache;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::Dictionary_2<int, typename ::UnityEngine::UIElements::DynamicHeightVirtualizationController_1<T>::ContentHeightCacheInfo>*) == 0x8);
    // private readonly System.Collections.Generic.HashSet`1<System.Int32> m_WaitingCache
    // Size: 0x8
    // Offset: 0x0
    ::System::Collections::Generic::HashSet_1<int>* m_WaitingCache;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::HashSet_1<int>*) == 0x8);
    // private System.Int32 m_ForcedFirstVisibleItem
    // Size: 0x4
    // Offset: 0x0
    int m_ForcedFirstVisibleItem;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private System.Int32 m_ForcedLastVisibleItem
    // Size: 0x4
    // Offset: 0x0
    int m_ForcedLastVisibleItem;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private System.Boolean m_StickToBottom
    // Size: 0x1
    // Offset: 0x0
    bool m_StickToBottom;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private UnityEngine.UIElements.DynamicHeightVirtualizationController`1/VirtualizationChange<T> m_LastChange
    // Size: 0xFFFFFFFF
    // Offset: 0x0
    typename ::UnityEngine::UIElements::DynamicHeightVirtualizationController_1<T>::VirtualizationChange m_LastChange;
    // private UnityEngine.UIElements.DynamicHeightVirtualizationController`1/ScrollDirection<T> m_ScrollDirection
    // Size: 0xFFFFFFFF
    // Offset: 0x0
    typename ::UnityEngine::UIElements::DynamicHeightVirtualizationController_1<T>::ScrollDirection m_ScrollDirection;
    // private UnityEngine.Vector2 m_DelayedScrollOffset
    // Size: 0x8
    // Offset: 0x0
    ::UnityEngine::Vector2 m_DelayedScrollOffset;
    // Field size check
    static_assert(sizeof(::UnityEngine::Vector2) == 0x8);
    // private System.Single m_AccumulatedHeight
    // Size: 0x4
    // Offset: 0x0
    float m_AccumulatedHeight;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Single m_MinimumItemHeight
    // Size: 0x4
    // Offset: 0x0
    float m_MinimumItemHeight;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Action m_FillCallback
    // Size: 0x8
    // Offset: 0x0
    ::System::Action* m_FillCallback;
    // Field size check
    static_assert(sizeof(::System::Action*) == 0x8);
    // private System.Action m_ScrollCallback
    // Size: 0x8
    // Offset: 0x0
    ::System::Action* m_ScrollCallback;
    // Field size check
    static_assert(sizeof(::System::Action*) == 0x8);
    // private System.Action m_ScrollResetCallback
    // Size: 0x8
    // Offset: 0x0
    ::System::Action* m_ScrollResetCallback;
    // Field size check
    static_assert(sizeof(::System::Action*) == 0x8);
    // private System.Action`1<UnityEngine.UIElements.ReusableCollectionItem> m_GeometryChangedCallback
    // Size: 0x8
    // Offset: 0x0
    ::System::Action_1<::UnityEngine::UIElements::ReusableCollectionItem*>* m_GeometryChangedCallback;
    // Field size check
    static_assert(sizeof(::System::Action_1<::UnityEngine::UIElements::ReusableCollectionItem*>*) == 0x8);
    // private UnityEngine.UIElements.IVisualElementScheduledItem m_ScheduledItem
    // Size: 0x8
    // Offset: 0x0
    ::UnityEngine::UIElements::IVisualElementScheduledItem* m_ScheduledItem;
    // Field size check
    static_assert(sizeof(::UnityEngine::UIElements::IVisualElementScheduledItem*) == 0x8);
    // private UnityEngine.UIElements.IVisualElementScheduledItem m_ScrollScheduledItem
    // Size: 0x8
    // Offset: 0x0
    ::UnityEngine::UIElements::IVisualElementScheduledItem* m_ScrollScheduledItem;
    // Field size check
    static_assert(sizeof(::UnityEngine::UIElements::IVisualElementScheduledItem*) == 0x8);
    // private UnityEngine.UIElements.IVisualElementScheduledItem m_ScrollResetScheduledItem
    // Size: 0x8
    // Offset: 0x0
    ::UnityEngine::UIElements::IVisualElementScheduledItem* m_ScrollResetScheduledItem;
    // Field size check
    static_assert(sizeof(::UnityEngine::UIElements::IVisualElementScheduledItem*) == 0x8);
    // private System.Predicate`1<System.Int32> m_IndexOutOfBoundsPredicate
    // Size: 0x8
    // Offset: 0x0
    ::System::Predicate_1<int>* m_IndexOutOfBoundsPredicate;
    // Field size check
    static_assert(sizeof(::System::Predicate_1<int>*) == 0x8);
    public:
    // Autogenerated instance field getter
    // Get instance field: private System.Int32 m_HighestCachedIndex
    [[deprecated("Use field access instead!")]] int& dyn_m_HighestCachedIndex() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::DynamicHeightVirtualizationController_1::dyn_m_HighestCachedIndex");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_HighestCachedIndex"))->offset;
      return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: private readonly System.Collections.Generic.Dictionary`2<System.Int32,System.Single> m_ItemHeightCache
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<int, float>*& dyn_m_ItemHeightCache() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::DynamicHeightVirtualizationController_1::dyn_m_ItemHeightCache");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ItemHeightCache"))->offset;
      return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<int, float>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: private readonly System.Collections.Generic.Dictionary`2<System.Int32,UnityEngine.UIElements.DynamicHeightVirtualizationController`1/ContentHeightCacheInfo<T>> m_ContentHeightCache
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<int, typename ::UnityEngine::UIElements::DynamicHeightVirtualizationController_1<T>::ContentHeightCacheInfo>*& dyn_m_ContentHeightCache() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::DynamicHeightVirtualizationController_1::dyn_m_ContentHeightCache");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ContentHeightCache"))->offset;
      return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<int, typename ::UnityEngine::UIElements::DynamicHeightVirtualizationController_1<T>::ContentHeightCacheInfo>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: private readonly System.Collections.Generic.HashSet`1<System.Int32> m_WaitingCache
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::HashSet_1<int>*& dyn_m_WaitingCache() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::DynamicHeightVirtualizationController_1::dyn_m_WaitingCache");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_WaitingCache"))->offset;
      return *reinterpret_cast<::System::Collections::Generic::HashSet_1<int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: private System.Int32 m_ForcedFirstVisibleItem
    [[deprecated("Use field access instead!")]] int& dyn_m_ForcedFirstVisibleItem() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::DynamicHeightVirtualizationController_1::dyn_m_ForcedFirstVisibleItem");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ForcedFirstVisibleItem"))->offset;
      return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: private System.Int32 m_ForcedLastVisibleItem
    [[deprecated("Use field access instead!")]] int& dyn_m_ForcedLastVisibleItem() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::DynamicHeightVirtualizationController_1::dyn_m_ForcedLastVisibleItem");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ForcedLastVisibleItem"))->offset;
      return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: private System.Boolean m_StickToBottom
    [[deprecated("Use field access instead!")]] bool& dyn_m_StickToBottom() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::DynamicHeightVirtualizationController_1::dyn_m_StickToBottom");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_StickToBottom"))->offset;
      return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: private UnityEngine.UIElements.DynamicHeightVirtualizationController`1/VirtualizationChange<T> m_LastChange
    [[deprecated("Use field access instead!")]] typename ::UnityEngine::UIElements::DynamicHeightVirtualizationController_1<T>::VirtualizationChange& dyn_m_LastChange() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::DynamicHeightVirtualizationController_1::dyn_m_LastChange");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_LastChange"))->offset;
      return *reinterpret_cast<typename ::UnityEngine::UIElements::DynamicHeightVirtualizationController_1<T>::VirtualizationChange*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: private UnityEngine.UIElements.DynamicHeightVirtualizationController`1/ScrollDirection<T> m_ScrollDirection
    [[deprecated("Use field access instead!")]] typename ::UnityEngine::UIElements::DynamicHeightVirtualizationController_1<T>::ScrollDirection& dyn_m_ScrollDirection() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::DynamicHeightVirtualizationController_1::dyn_m_ScrollDirection");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ScrollDirection"))->offset;
      return *reinterpret_cast<typename ::UnityEngine::UIElements::DynamicHeightVirtualizationController_1<T>::ScrollDirection*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: private UnityEngine.Vector2 m_DelayedScrollOffset
    [[deprecated("Use field access instead!")]] ::UnityEngine::Vector2& dyn_m_DelayedScrollOffset() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::DynamicHeightVirtualizationController_1::dyn_m_DelayedScrollOffset");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_DelayedScrollOffset"))->offset;
      return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: private System.Single m_AccumulatedHeight
    [[deprecated("Use field access instead!")]] float& dyn_m_AccumulatedHeight() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::DynamicHeightVirtualizationController_1::dyn_m_AccumulatedHeight");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_AccumulatedHeight"))->offset;
      return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: private System.Single m_MinimumItemHeight
    [[deprecated("Use field access instead!")]] float& dyn_m_MinimumItemHeight() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::DynamicHeightVirtualizationController_1::dyn_m_MinimumItemHeight");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_MinimumItemHeight"))->offset;
      return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: private System.Action m_FillCallback
    [[deprecated("Use field access instead!")]] ::System::Action*& dyn_m_FillCallback() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::DynamicHeightVirtualizationController_1::dyn_m_FillCallback");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_FillCallback"))->offset;
      return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: private System.Action m_ScrollCallback
    [[deprecated("Use field access instead!")]] ::System::Action*& dyn_m_ScrollCallback() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::DynamicHeightVirtualizationController_1::dyn_m_ScrollCallback");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ScrollCallback"))->offset;
      return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: private System.Action m_ScrollResetCallback
    [[deprecated("Use field access instead!")]] ::System::Action*& dyn_m_ScrollResetCallback() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::DynamicHeightVirtualizationController_1::dyn_m_ScrollResetCallback");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ScrollResetCallback"))->offset;
      return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: private System.Action`1<UnityEngine.UIElements.ReusableCollectionItem> m_GeometryChangedCallback
    [[deprecated("Use field access instead!")]] ::System::Action_1<::UnityEngine::UIElements::ReusableCollectionItem*>*& dyn_m_GeometryChangedCallback() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::DynamicHeightVirtualizationController_1::dyn_m_GeometryChangedCallback");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_GeometryChangedCallback"))->offset;
      return *reinterpret_cast<::System::Action_1<::UnityEngine::UIElements::ReusableCollectionItem*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: private UnityEngine.UIElements.IVisualElementScheduledItem m_ScheduledItem
    [[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::IVisualElementScheduledItem*& dyn_m_ScheduledItem() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::DynamicHeightVirtualizationController_1::dyn_m_ScheduledItem");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ScheduledItem"))->offset;
      return *reinterpret_cast<::UnityEngine::UIElements::IVisualElementScheduledItem**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: private UnityEngine.UIElements.IVisualElementScheduledItem m_ScrollScheduledItem
    [[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::IVisualElementScheduledItem*& dyn_m_ScrollScheduledItem() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::DynamicHeightVirtualizationController_1::dyn_m_ScrollScheduledItem");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ScrollScheduledItem"))->offset;
      return *reinterpret_cast<::UnityEngine::UIElements::IVisualElementScheduledItem**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: private UnityEngine.UIElements.IVisualElementScheduledItem m_ScrollResetScheduledItem
    [[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::IVisualElementScheduledItem*& dyn_m_ScrollResetScheduledItem() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::DynamicHeightVirtualizationController_1::dyn_m_ScrollResetScheduledItem");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ScrollResetScheduledItem"))->offset;
      return *reinterpret_cast<::UnityEngine::UIElements::IVisualElementScheduledItem**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: private System.Predicate`1<System.Int32> m_IndexOutOfBoundsPredicate
    [[deprecated("Use field access instead!")]] ::System::Predicate_1<int>*& dyn_m_IndexOutOfBoundsPredicate() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::DynamicHeightVirtualizationController_1::dyn_m_IndexOutOfBoundsPredicate");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_IndexOutOfBoundsPredicate"))->offset;
      return *reinterpret_cast<::System::Predicate_1<int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // private System.Single get_defaultExpectedHeight()
    // Offset: 0xFFFFFFFFFFFFFFFF
    float get_defaultExpectedHeight() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::DynamicHeightVirtualizationController_1::get_defaultExpectedHeight");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_defaultExpectedHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
    }
    // private System.Single get_contentPadding()
    // Offset: 0xFFFFFFFFFFFFFFFF
    float get_contentPadding() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::DynamicHeightVirtualizationController_1::get_contentPadding");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_contentPadding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
    }
    // private System.Void set_contentPadding(System.Single value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void set_contentPadding(float value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::DynamicHeightVirtualizationController_1::set_contentPadding");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_contentPadding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
    }
    // private System.Single get_contentHeight()
    // Offset: 0xFFFFFFFFFFFFFFFF
    float get_contentHeight() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::DynamicHeightVirtualizationController_1::get_contentHeight");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_contentHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
    }
    // private System.Void set_contentHeight(System.Single value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void set_contentHeight(float value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::DynamicHeightVirtualizationController_1::set_contentHeight");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_contentHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
    }
    // private System.Int32 get_anchoredIndex()
    // Offset: 0xFFFFFFFFFFFFFFFF
    int get_anchoredIndex() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::DynamicHeightVirtualizationController_1::get_anchoredIndex");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_anchoredIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
    }
    // private System.Void set_anchoredIndex(System.Int32 value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void set_anchoredIndex(int value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::DynamicHeightVirtualizationController_1::set_anchoredIndex");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_anchoredIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
    }
    // private System.Single get_anchorOffset()
    // Offset: 0xFFFFFFFFFFFFFFFF
    float get_anchorOffset() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::DynamicHeightVirtualizationController_1::get_anchorOffset");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_anchorOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
    }
    // private System.Void set_anchorOffset(System.Single value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void set_anchorOffset(float value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::DynamicHeightVirtualizationController_1::set_anchorOffset");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_anchorOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
    }
    // private System.Single get_viewportMaxOffset()
    // Offset: 0xFFFFFFFFFFFFFFFF
    float get_viewportMaxOffset() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::DynamicHeightVirtualizationController_1::get_viewportMaxOffset");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_viewportMaxOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
    }
    // private System.Void OnScrollUpdate()
    // Offset: 0xFFFFFFFFFFFFFFFF
    void OnScrollUpdate() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::DynamicHeightVirtualizationController_1::OnScrollUpdate");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnScrollUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
    }
    // private System.Void CycleItems(System.Int32 firstIndex)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void CycleItems(int firstIndex) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::DynamicHeightVirtualizationController_1::CycleItems");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CycleItems", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firstIndex)})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, firstIndex);
    }
    // private System.Boolean NeedsFill()
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool NeedsFill() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::DynamicHeightVirtualizationController_1::NeedsFill");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NeedsFill", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
    }
    // private System.Void Fill()
    // Offset: 0xFFFFFFFFFFFFFFFF
    void Fill() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::DynamicHeightVirtualizationController_1::Fill");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Fill", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
    }
    // private System.Void UpdateScrollViewContainer(System.Single previousHeight, System.Single newHeight)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void UpdateScrollViewContainer(float previousHeight, float newHeight) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::DynamicHeightVirtualizationController_1::UpdateScrollViewContainer");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateScrollViewContainer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(previousHeight), ::il2cpp_utils::ExtractType(newHeight)})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, previousHeight, newHeight);
    }
    // private System.Void ApplyScrollViewUpdate(System.Boolean dimensionsOnly)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void ApplyScrollViewUpdate(bool dimensionsOnly) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::DynamicHeightVirtualizationController_1::ApplyScrollViewUpdate");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ApplyScrollViewUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dimensionsOnly)})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, dimensionsOnly);
    }
    // private System.Void UpdateAnchor()
    // Offset: 0xFFFFFFFFFFFFFFFF
    void UpdateAnchor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::DynamicHeightVirtualizationController_1::UpdateAnchor");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateAnchor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
    }
    // private System.Void ScheduleFill()
    // Offset: 0xFFFFFFFFFFFFFFFF
    void ScheduleFill() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::DynamicHeightVirtualizationController_1::ScheduleFill");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScheduleFill", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
    }
    // private System.Void ScheduleScroll()
    // Offset: 0xFFFFFFFFFFFFFFFF
    void ScheduleScroll() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::DynamicHeightVirtualizationController_1::ScheduleScroll");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScheduleScroll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
    }
    // private System.Void ScheduleScrollDirectionReset()
    // Offset: 0xFFFFFFFFFFFFFFFF
    void ScheduleScrollDirectionReset() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::DynamicHeightVirtualizationController_1::ScheduleScrollDirectionReset");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScheduleScrollDirectionReset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
    }
    // private System.Void ResetScroll()
    // Offset: 0xFFFFFFFFFFFFFFFF
    void ResetScroll() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::DynamicHeightVirtualizationController_1::ResetScroll");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResetScroll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
    }
    // private System.Int32 GetFirstVisibleItem(System.Single offset)
    // Offset: 0xFFFFFFFFFFFFFFFF
    int GetFirstVisibleItem(float offset) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::DynamicHeightVirtualizationController_1::GetFirstVisibleItem");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetFirstVisibleItem", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(offset)})));
      return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, offset);
    }
    // private System.Single GetContentHeightForIndex(System.Int32 lastIndex)
    // Offset: 0xFFFFFFFFFFFFFFFF
    float GetContentHeightForIndex(int lastIndex) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::DynamicHeightVirtualizationController_1::GetContentHeightForIndex");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetContentHeightForIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lastIndex)})));
      return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, lastIndex);
    }
    // private UnityEngine.UIElements.DynamicHeightVirtualizationController`1/ContentHeightCacheInfo<T> GetCachedContentHeight(System.Int32 index)
    // Offset: 0xFFFFFFFFFFFFFFFF
    typename ::UnityEngine::UIElements::DynamicHeightVirtualizationController_1<T>::ContentHeightCacheInfo GetCachedContentHeight(int index) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::DynamicHeightVirtualizationController_1::GetCachedContentHeight");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCachedContentHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
      return ::il2cpp_utils::RunMethodRethrow<typename ::UnityEngine::UIElements::DynamicHeightVirtualizationController_1<T>::ContentHeightCacheInfo, false>(this, ___internal__method, index);
    }
    // private System.Void RegisterItemHeight(System.Int32 index, System.Single height)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void RegisterItemHeight(int index, float height) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::DynamicHeightVirtualizationController_1::RegisterItemHeight");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RegisterItemHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(height)})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, height);
    }
    // private System.Void UnregisterItemHeight(System.Int32 index)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void UnregisterItemHeight(int index) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::DynamicHeightVirtualizationController_1::UnregisterItemHeight");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnregisterItemHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index);
    }
    // private System.Void CleanItemHeightCache()
    // Offset: 0xFFFFFFFFFFFFFFFF
    void CleanItemHeightCache() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::DynamicHeightVirtualizationController_1::CleanItemHeightCache");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CleanItemHeightCache", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
    }
    // private System.Void OnRecycledItemGeometryChanged(UnityEngine.UIElements.ReusableCollectionItem item)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void OnRecycledItemGeometryChanged(::UnityEngine::UIElements::ReusableCollectionItem* item) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::DynamicHeightVirtualizationController_1::OnRecycledItemGeometryChanged");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnRecycledItemGeometryChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(item)})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, item);
    }
    // private System.Boolean UpdateRegisteredHeight(UnityEngine.UIElements.ReusableCollectionItem item)
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool UpdateRegisteredHeight(::UnityEngine::UIElements::ReusableCollectionItem* item) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::DynamicHeightVirtualizationController_1::UpdateRegisteredHeight");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateRegisteredHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(item)})));
      return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, item);
    }
    // private System.Void HideItem(System.Int32 activeItemsIndex)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void HideItem(int activeItemsIndex) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::DynamicHeightVirtualizationController_1::HideItem");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HideItem", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(activeItemsIndex)})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, activeItemsIndex);
    }
    // private System.Void MarkWaitingForLayout(T item)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void MarkWaitingForLayout(T item) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::DynamicHeightVirtualizationController_1::MarkWaitingForLayout");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MarkWaitingForLayout", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(item)})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, item);
    }
    // private System.Boolean IsIndexOutOfBounds(System.Int32 i)
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool IsIndexOutOfBounds(int i) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::DynamicHeightVirtualizationController_1::IsIndexOutOfBounds");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsIndexOutOfBounds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(i)})));
      return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, i);
    }
    // protected override System.Boolean get_alwaysRebindOnRefresh()
    // Offset: 0xFFFFFFFFFFFFFFFF
    // Implemented from: UnityEngine.UIElements.VerticalVirtualizationController`1
    // Base method: System.Boolean VerticalVirtualizationController_1::get_alwaysRebindOnRefresh()
    bool get_alwaysRebindOnRefresh() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::DynamicHeightVirtualizationController_1::get_alwaysRebindOnRefresh");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UIElements::VerticalVirtualizationController_1<T>*), -1));
      return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
    }
    // public System.Void .ctor(UnityEngine.UIElements.BaseVerticalCollectionView collectionView)
    // Offset: 0xFFFFFFFFFFFFFFFF
    // Implemented from: UnityEngine.UIElements.VerticalVirtualizationController`1
    // Base method: System.Void VerticalVirtualizationController_1::.ctor(UnityEngine.UIElements.BaseVerticalCollectionView collectionView)
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static DynamicHeightVirtualizationController_1<T>* New_ctor(::UnityEngine::UIElements::BaseVerticalCollectionView* collectionView) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::DynamicHeightVirtualizationController_1::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<DynamicHeightVirtualizationController_1<T>*, creationType>(collectionView)));
    }
    // public override System.Void Refresh(System.Boolean rebuild)
    // Offset: 0xFFFFFFFFFFFFFFFF
    // Implemented from: UnityEngine.UIElements.VerticalVirtualizationController`1
    // Base method: System.Void VerticalVirtualizationController_1::Refresh(System.Boolean rebuild)
    void Refresh(bool rebuild) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::DynamicHeightVirtualizationController_1::Refresh");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UIElements::VerticalVirtualizationController_1<T>*), -1));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, rebuild);
    }
    // public override System.Void ScrollToItem(System.Int32 index)
    // Offset: 0xFFFFFFFFFFFFFFFF
    // Implemented from: UnityEngine.UIElements.CollectionVirtualizationController
    // Base method: System.Void CollectionVirtualizationController::ScrollToItem(System.Int32 index)
    void ScrollToItem(int index) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::DynamicHeightVirtualizationController_1::ScrollToItem");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UIElements::CollectionVirtualizationController*), -1));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index);
    }
    // public override System.Void Resize(UnityEngine.Vector2 size)
    // Offset: 0xFFFFFFFFFFFFFFFF
    // Implemented from: UnityEngine.UIElements.CollectionVirtualizationController
    // Base method: System.Void CollectionVirtualizationController::Resize(UnityEngine.Vector2 size)
    void Resize(::UnityEngine::Vector2 size) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::DynamicHeightVirtualizationController_1::Resize");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UIElements::CollectionVirtualizationController*), -1));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, size);
    }
    // public override System.Void OnScroll(UnityEngine.Vector2 scrollOffset)
    // Offset: 0xFFFFFFFFFFFFFFFF
    // Implemented from: UnityEngine.UIElements.CollectionVirtualizationController
    // Base method: System.Void CollectionVirtualizationController::OnScroll(UnityEngine.Vector2 scrollOffset)
    void OnScroll(::UnityEngine::Vector2 scrollOffset) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::DynamicHeightVirtualizationController_1::OnScroll");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UIElements::CollectionVirtualizationController*), -1));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, scrollOffset);
    }
    // public override System.Int32 GetIndexFromPosition(UnityEngine.Vector2 position)
    // Offset: 0xFFFFFFFFFFFFFFFF
    // Implemented from: UnityEngine.UIElements.CollectionVirtualizationController
    // Base method: System.Int32 CollectionVirtualizationController::GetIndexFromPosition(UnityEngine.Vector2 position)
    int GetIndexFromPosition(::UnityEngine::Vector2 position) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::DynamicHeightVirtualizationController_1::GetIndexFromPosition");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UIElements::CollectionVirtualizationController*), -1));
      return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, position);
    }
    // public override System.Single GetExpectedItemHeight(System.Int32 index)
    // Offset: 0xFFFFFFFFFFFFFFFF
    // Implemented from: UnityEngine.UIElements.CollectionVirtualizationController
    // Base method: System.Single CollectionVirtualizationController::GetExpectedItemHeight(System.Int32 index)
    float GetExpectedItemHeight(int index) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::DynamicHeightVirtualizationController_1::GetExpectedItemHeight");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UIElements::CollectionVirtualizationController*), -1));
      return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, index);
    }
    // public override System.Single GetExpectedContentHeight()
    // Offset: 0xFFFFFFFFFFFFFFFF
    // Implemented from: UnityEngine.UIElements.CollectionVirtualizationController
    // Base method: System.Single CollectionVirtualizationController::GetExpectedContentHeight()
    float GetExpectedContentHeight() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::DynamicHeightVirtualizationController_1::GetExpectedContentHeight");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UIElements::CollectionVirtualizationController*), -1));
      return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
    }
    // override T GetOrMakeItemAtIndex(System.Int32 activeItemIndex, System.Int32 scrollViewIndex)
    // Offset: 0xFFFFFFFFFFFFFFFF
    // Implemented from: UnityEngine.UIElements.VerticalVirtualizationController`1
    // Base method: T VerticalVirtualizationController_1::GetOrMakeItemAtIndex(System.Int32 activeItemIndex, System.Int32 scrollViewIndex)
    T GetOrMakeItemAtIndex(int activeItemIndex, int scrollViewIndex) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::DynamicHeightVirtualizationController_1::GetOrMakeItemAtIndex");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UIElements::VerticalVirtualizationController_1<T>*), -1));
      return ::il2cpp_utils::RunMethodRethrow<T, false>(this, ___internal__method, activeItemIndex, scrollViewIndex);
    }
    // override System.Void ReleaseItem(System.Int32 activeItemsIndex)
    // Offset: 0xFFFFFFFFFFFFFFFF
    // Implemented from: UnityEngine.UIElements.VerticalVirtualizationController`1
    // Base method: System.Void VerticalVirtualizationController_1::ReleaseItem(System.Int32 activeItemsIndex)
    void ReleaseItem(int activeItemsIndex) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::DynamicHeightVirtualizationController_1::ReleaseItem");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UIElements::VerticalVirtualizationController_1<T>*), -1));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, activeItemsIndex);
    }
    // override System.Void StartDragItem(UnityEngine.UIElements.ReusableCollectionItem item)
    // Offset: 0xFFFFFFFFFFFFFFFF
    // Implemented from: UnityEngine.UIElements.VerticalVirtualizationController`1
    // Base method: System.Void VerticalVirtualizationController_1::StartDragItem(UnityEngine.UIElements.ReusableCollectionItem item)
    void StartDragItem(::UnityEngine::UIElements::ReusableCollectionItem* item) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::DynamicHeightVirtualizationController_1::StartDragItem");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UIElements::VerticalVirtualizationController_1<T>*), -1));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, item);
    }
    // override System.Void EndDrag(System.Int32 dropIndex)
    // Offset: 0xFFFFFFFFFFFFFFFF
    // Implemented from: UnityEngine.UIElements.VerticalVirtualizationController`1
    // Base method: System.Void VerticalVirtualizationController_1::EndDrag(System.Int32 dropIndex)
    void EndDrag(int dropIndex) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::DynamicHeightVirtualizationController_1::EndDrag");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UIElements::VerticalVirtualizationController_1<T>*), -1));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, dropIndex);
    }
  }; // UnityEngine.UIElements.DynamicHeightVirtualizationController`1
  // Could not write size check! Type: UnityEngine.UIElements.DynamicHeightVirtualizationController`1 is generic, or has no fields that are valid for size checks!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
