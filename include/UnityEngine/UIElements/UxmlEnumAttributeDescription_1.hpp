// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.UIElements.TypedUxmlAttributeDescription`1
#include "UnityEngine/UIElements/TypedUxmlAttributeDescription_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::UIElements
namespace UnityEngine::UIElements {
  // Skipping declaration: <>c because it is already included!
  // Forward declaring type: IUxmlAttributes
  class IUxmlAttributes;
}
// Forward declaring namespace: System
namespace System {
  // Skipping declaration: IConvertible because it is already included!
  // Skipping declaration: ValueType because it is already included!
  // Forward declaring type: Type
  class Type;
  // Forward declaring type: Func`3<T1, T2, TResult>
  template<typename T1, typename T2, typename TResult>
  class Func_3;
}
// Completed forward declares
// Type namespace: UnityEngine.UIElements
namespace UnityEngine::UIElements {
  // Forward declaring type: UxmlEnumAttributeDescription`1<T>
  template<typename T>
  class UxmlEnumAttributeDescription_1;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE_GENERIC_CLASS(::UnityEngine::UIElements::UxmlEnumAttributeDescription_1, "UnityEngine.UIElements", "UxmlEnumAttributeDescription`1");
// Type namespace: UnityEngine.UIElements
namespace UnityEngine::UIElements {
  // WARNING Size may be invalid!
  // Autogenerated type: UnityEngine.UIElements.UxmlEnumAttributeDescription`1
  // [TokenAttribute] Offset: FFFFFFFF
  template<typename T>
  class UxmlEnumAttributeDescription_1 : public ::UnityEngine::UIElements::TypedUxmlAttributeDescription_1<T> {
    public:
    // Nested type: ::UnityEngine::UIElements::UxmlEnumAttributeDescription_1::$$c<T>
    class $$c;
    // WARNING Size may be invalid!
    // Autogenerated type: UnityEngine.UIElements.UxmlEnumAttributeDescription`1/<>c
    // [TokenAttribute] Offset: FFFFFFFF
    // [CompilerGeneratedAttribute] Offset: FFFFFFFF
    class $$c : public ::il2cpp_utils::il2cpp_type_check::NestedType, public ::Il2CppObject {
      public:
      using declaring_type = UxmlEnumAttributeDescription_1<T>*;
      static constexpr std::string_view NESTED_NAME = "<>c";
      static constexpr bool IS_VALUE_TYPE = false;
      // Autogenerated static field getter
      // Get static field: static public readonly UnityEngine.UIElements.UxmlEnumAttributeDescription`1/<>c<T> <>9
      static typename ::UnityEngine::UIElements::UxmlEnumAttributeDescription_1<T>::$$c* _get_$$9() {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::UxmlEnumAttributeDescription_1::$$c::_get_$$9");
        return THROW_UNLESS((il2cpp_utils::GetFieldValue<typename ::UnityEngine::UIElements::UxmlEnumAttributeDescription_1<T>::$$c*>(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<typename UxmlEnumAttributeDescription_1<T>::$$c*>::get(), "<>9")));
      }
      // Autogenerated static field setter
      // Set static field: static public readonly UnityEngine.UIElements.UxmlEnumAttributeDescription`1/<>c<T> <>9
      static void _set_$$9(typename ::UnityEngine::UIElements::UxmlEnumAttributeDescription_1<T>::$$c* value) {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::UxmlEnumAttributeDescription_1::$$c::_set_$$9");
        THROW_UNLESS((il2cpp_utils::SetFieldValue(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<typename UxmlEnumAttributeDescription_1<T>::$$c*>::get(), "<>9", value)));
      }
      // Autogenerated static field getter
      // Get static field: static public System.Func`3<System.String,T,T> <>9__3_0
      static ::System::Func_3<::StringW, T, T>* _get_$$9__3_0() {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::UxmlEnumAttributeDescription_1::$$c::_get_$$9__3_0");
        return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_3<::StringW, T, T>*>(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<typename UxmlEnumAttributeDescription_1<T>::$$c*>::get(), "<>9__3_0")));
      }
      // Autogenerated static field setter
      // Set static field: static public System.Func`3<System.String,T,T> <>9__3_0
      static void _set_$$9__3_0(::System::Func_3<::StringW, T, T>* value) {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::UxmlEnumAttributeDescription_1::$$c::_set_$$9__3_0");
        THROW_UNLESS((il2cpp_utils::SetFieldValue(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<typename UxmlEnumAttributeDescription_1<T>::$$c*>::get(), "<>9__3_0", value)));
      }
      // Autogenerated static field getter
      // Get static field: static public System.Func`3<System.String,T,T> <>9__4_0
      static ::System::Func_3<::StringW, T, T>* _get_$$9__4_0() {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::UxmlEnumAttributeDescription_1::$$c::_get_$$9__4_0");
        return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_3<::StringW, T, T>*>(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<typename UxmlEnumAttributeDescription_1<T>::$$c*>::get(), "<>9__4_0")));
      }
      // Autogenerated static field setter
      // Set static field: static public System.Func`3<System.String,T,T> <>9__4_0
      static void _set_$$9__4_0(::System::Func_3<::StringW, T, T>* value) {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::UxmlEnumAttributeDescription_1::$$c::_set_$$9__4_0");
        THROW_UNLESS((il2cpp_utils::SetFieldValue(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<typename UxmlEnumAttributeDescription_1<T>::$$c*>::get(), "<>9__4_0", value)));
      }
      // static private System.Void .cctor()
      // Offset: 0xFFFFFFFFFFFFFFFF
      static void _cctor() {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::UxmlEnumAttributeDescription_1::$$c::.cctor");
        static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<typename UxmlEnumAttributeDescription_1<T>::$$c*>::get(), ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
        ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
      }
      // public System.Void .ctor()
      // Offset: 0xFFFFFFFFFFFFFFFF
      template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
      static typename UxmlEnumAttributeDescription_1<T>::$$c* New_ctor() {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::UxmlEnumAttributeDescription_1::$$c::.ctor");
        return THROW_UNLESS((::il2cpp_utils::New<typename UxmlEnumAttributeDescription_1<T>::$$c*, creationType>()));
      }
      // T <GetValueFromBag>b__3_0(System.String s, T convertible)
      // Offset: 0xFFFFFFFFFFFFFFFF
      T $GetValueFromBag$b__3_0(::StringW s, T convertible) {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::UxmlEnumAttributeDescription_1::$$c::<GetValueFromBag>b__3_0");
        static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetValueFromBag>b__3_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(convertible)})));
        return ::il2cpp_utils::RunMethodRethrow<T, false>(this, ___internal__method, s, convertible);
      }
      // T <TryGetValueFromBag>b__4_0(System.String s, T convertible)
      // Offset: 0xFFFFFFFFFFFFFFFF
      T $TryGetValueFromBag$b__4_0(::StringW s, T convertible) {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::UxmlEnumAttributeDescription_1::$$c::<TryGetValueFromBag>b__4_0");
        static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<TryGetValueFromBag>b__4_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(convertible)})));
        return ::il2cpp_utils::RunMethodRethrow<T, false>(this, ___internal__method, s, convertible);
      }
    }; // UnityEngine.UIElements.UxmlEnumAttributeDescription`1/<>c
    // Could not write size check! Type: UnityEngine.UIElements.UxmlEnumAttributeDescription`1/<>c is generic, or has no fields that are valid for size checks!
    // public System.Boolean TryGetValueFromBag(UnityEngine.UIElements.IUxmlAttributes bag, UnityEngine.UIElements.CreationContext cc, ref T value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool TryGetValueFromBag(::UnityEngine::UIElements::IUxmlAttributes* bag, ::UnityEngine::UIElements::CreationContext cc, ByRef<T> value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::UxmlEnumAttributeDescription_1::TryGetValueFromBag");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryGetValueFromBag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bag), ::il2cpp_utils::ExtractType(cc), ::il2cpp_utils::ExtractType(value)})));
      return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, bag, cc, byref(value));
    }
    // static private U ConvertValueToEnum(System.String v, U defaultValue)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class U>
    static U ConvertValueToEnum(::StringW v, U defaultValue) {
      static_assert(std::is_convertible_v<U, ::System::ValueType*>);
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::UxmlEnumAttributeDescription_1::ConvertValueToEnum");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<UxmlEnumAttributeDescription_1<T>*>::get(), "ConvertValueToEnum", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<U>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(v), ::il2cpp_utils::ExtractType(defaultValue)})));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<U>::get()}));
      return ::il2cpp_utils::RunMethodRethrow<U, false>(static_cast<Il2CppObject*>(nullptr), ___generic__method, v, defaultValue);
    }
    // static private System.String GetEnumNameErrorMessage(System.String v, System.Type enumType)
    // Offset: 0xFFFFFFFFFFFFFFFF
    static ::StringW GetEnumNameErrorMessage(::StringW v, ::System::Type* enumType) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::UxmlEnumAttributeDescription_1::GetEnumNameErrorMessage");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<UxmlEnumAttributeDescription_1<T>*>::get(), "GetEnumNameErrorMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(v), ::il2cpp_utils::ExtractType(enumType)})));
      return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, v, enumType);
    }
    // static private System.String GetEnumRangeErrorMessage(System.String v, System.Type enumType)
    // Offset: 0xFFFFFFFFFFFFFFFF
    static ::StringW GetEnumRangeErrorMessage(::StringW v, ::System::Type* enumType) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::UxmlEnumAttributeDescription_1::GetEnumRangeErrorMessage");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<UxmlEnumAttributeDescription_1<T>*>::get(), "GetEnumRangeErrorMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(v), ::il2cpp_utils::ExtractType(enumType)})));
      return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, v, enumType);
    }
    // public System.Void .ctor()
    // Offset: 0xFFFFFFFFFFFFFFFF
    // Implemented from: UnityEngine.UIElements.TypedUxmlAttributeDescription`1
    // Base method: System.Void TypedUxmlAttributeDescription_1::.ctor()
    // Base method: System.Void UxmlAttributeDescription::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static UxmlEnumAttributeDescription_1<T>* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::UxmlEnumAttributeDescription_1::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<UxmlEnumAttributeDescription_1<T>*, creationType>()));
    }
    // public override T GetValueFromBag(UnityEngine.UIElements.IUxmlAttributes bag, UnityEngine.UIElements.CreationContext cc)
    // Offset: 0xFFFFFFFFFFFFFFFF
    // Implemented from: UnityEngine.UIElements.TypedUxmlAttributeDescription`1
    // Base method: T TypedUxmlAttributeDescription_1::GetValueFromBag(UnityEngine.UIElements.IUxmlAttributes bag, UnityEngine.UIElements.CreationContext cc)
    T GetValueFromBag(::UnityEngine::UIElements::IUxmlAttributes* bag, ::UnityEngine::UIElements::CreationContext cc) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::UxmlEnumAttributeDescription_1::GetValueFromBag");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UIElements::TypedUxmlAttributeDescription_1<T>*), -1));
      return ::il2cpp_utils::RunMethodRethrow<T, false>(this, ___internal__method, bag, cc);
    }
  }; // UnityEngine.UIElements.UxmlEnumAttributeDescription`1
  // Could not write size check! Type: UnityEngine.UIElements.UxmlEnumAttributeDescription`1 is generic, or has no fields that are valid for size checks!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
