// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.UIElements.BaseVerticalCollectionView
#include "UnityEngine/UIElements/BaseVerticalCollectionView.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::UIElements
namespace UnityEngine::UIElements {
  // Forward declaring type: BaseTreeViewController
  class BaseTreeViewController;
  // Forward declaring type: MouseUpEvent
  class MouseUpEvent;
  // Forward declaring type: CollectionViewController
  class CollectionViewController;
  // Forward declaring type: ICollectionDragAndDropController
  class ICollectionDragAndDropController;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
  // Forward declaring type: IEnumerable`1<T>
  template<typename T>
  class IEnumerable_1;
}
// Forward declaring namespace: System::Collections
namespace System::Collections {
  // Forward declaring type: IList
  class IList;
}
// Completed forward declares
// Type namespace: UnityEngine.UIElements
namespace UnityEngine::UIElements {
  // Forward declaring type: BaseTreeView
  class BaseTreeView;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::UIElements::BaseTreeView);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::UIElements::BaseTreeView*, "UnityEngine.UIElements", "BaseTreeView");
// Type namespace: UnityEngine.UIElements
namespace UnityEngine::UIElements {
  // WARNING Size may be invalid!
  // Autogenerated type: UnityEngine.UIElements.BaseTreeView
  // [TokenAttribute] Offset: FFFFFFFF
  class BaseTreeView : public ::UnityEngine::UIElements::BaseVerticalCollectionView {
    public:
    // Nested type: ::UnityEngine::UIElements::BaseTreeView::UxmlTraits
    class UxmlTraits;
    public:
    // private System.Boolean m_AutoExpand
    // Size: 0x1
    // Offset: 0x4A4
    bool m_AutoExpand;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Collections.Generic.List`1<System.Int32> m_ExpandedItemIds
    // Size: 0x8
    // Offset: 0x4A8
    ::System::Collections::Generic::List_1<int>* m_ExpandedItemIds;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<int>*) == 0x8);
    public:
    // Get static field: static public readonly System.String ussClassName
    static ::StringW _get_ussClassName();
    // Set static field: static public readonly System.String ussClassName
    static void _set_ussClassName(::StringW value);
    // Get static field: static public readonly System.String itemUssClassName
    static ::StringW _get_itemUssClassName();
    // Set static field: static public readonly System.String itemUssClassName
    static void _set_itemUssClassName(::StringW value);
    // Get static field: static public readonly System.String itemToggleUssClassName
    static ::StringW _get_itemToggleUssClassName();
    // Set static field: static public readonly System.String itemToggleUssClassName
    static void _set_itemToggleUssClassName(::StringW value);
    // Get static field: static public readonly System.String itemIndentsContainerUssClassName
    static ::StringW _get_itemIndentsContainerUssClassName();
    // Set static field: static public readonly System.String itemIndentsContainerUssClassName
    static void _set_itemIndentsContainerUssClassName(::StringW value);
    // Get static field: static public readonly System.String itemIndentUssClassName
    static ::StringW _get_itemIndentUssClassName();
    // Set static field: static public readonly System.String itemIndentUssClassName
    static void _set_itemIndentUssClassName(::StringW value);
    // Get static field: static public readonly System.String itemContentContainerUssClassName
    static ::StringW _get_itemContentContainerUssClassName();
    // Set static field: static public readonly System.String itemContentContainerUssClassName
    static void _set_itemContentContainerUssClassName(::StringW value);
    // Get instance field reference: private System.Boolean m_AutoExpand
    [[deprecated("Use field access instead!")]] bool& dyn_m_AutoExpand();
    // Get instance field reference: private System.Collections.Generic.List`1<System.Int32> m_ExpandedItemIds
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<int>*& dyn_m_ExpandedItemIds();
    // public UnityEngine.UIElements.BaseTreeViewController get_viewController()
    // Offset: 0x55A5870
    ::UnityEngine::UIElements::BaseTreeViewController* get_viewController();
    // public System.Boolean get_autoExpand()
    // Offset: 0x55A5AC0
    bool get_autoExpand();
    // public System.Void set_autoExpand(System.Boolean value)
    // Offset: 0x55A5AC8
    void set_autoExpand(bool value);
    // System.Collections.Generic.List`1<System.Int32> get_expandedItemIds()
    // Offset: 0x55A5AF4
    ::System::Collections::Generic::List_1<int>* get_expandedItemIds();
    // System.Void set_expandedItemIds(System.Collections.Generic.List`1<System.Int32> value)
    // Offset: 0x55A5AFC
    void set_expandedItemIds(::System::Collections::Generic::List_1<int>* value);
    // public System.Void .ctor(System.Int32 itemHeight)
    // Offset: 0x55A5B14
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static BaseTreeView* New_ctor(int itemHeight) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::BaseTreeView::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<BaseTreeView*, creationType>(itemHeight)));
    }
    // public System.Void SetSelectionById(System.Int32 id)
    // Offset: 0x55A5FF4
    void SetSelectionById(int id);
    // public System.Void SetSelectionById(System.Collections.Generic.IEnumerable`1<System.Int32> ids)
    // Offset: 0x55A6070
    void SetSelectionById(::System::Collections::Generic::IEnumerable_1<int>* ids);
    // System.Void SetSelectionInternalById(System.Collections.Generic.IEnumerable`1<System.Int32> ids, System.Boolean sendNotification)
    // Offset: 0x55A6078
    void SetSelectionInternalById(::System::Collections::Generic::IEnumerable_1<int>* ids, bool sendNotification);
    // private System.Int32 GetItemIndex(System.Int32 id, System.Boolean expand)
    // Offset: 0x55A6168
    int GetItemIndex(int id, bool expand);
    // public System.Boolean IsExpanded(System.Int32 id)
    // Offset: 0x55A6264
    bool IsExpanded(int id);
    // public System.Void CollapseItem(System.Int32 id, System.Boolean collapseAllChildren)
    // Offset: 0x55A6284
    void CollapseItem(int id, bool collapseAllChildren);
    // public System.Void ExpandItem(System.Int32 id, System.Boolean expandAllChildren)
    // Offset: 0x55A62C4
    void ExpandItem(int id, bool expandAllChildren);
    // private System.Void OnTreeViewMouseUp(UnityEngine.UIElements.MouseUpEvent evt)
    // Offset: 0x55A62F8
    void OnTreeViewMouseUp(::UnityEngine::UIElements::MouseUpEvent* evt);
    // private System.Boolean IsExpandedByIndex(System.Int32 index)
    // Offset: 0x55A5EF0
    bool IsExpandedByIndex(int index);
    // private System.Void CollapseItemByIndex(System.Int32 index, System.Boolean collapseAll)
    // Offset: 0x55A5F84
    void CollapseItemByIndex(int index, bool collapseAll);
    // private System.Void ExpandItemByIndex(System.Int32 index, System.Boolean expandAll)
    // Offset: 0x55A5F10
    void ExpandItemByIndex(int index, bool expandAll);
    // private System.Int32 <SetSelectionInternalById>b__47_0(System.Int32 id)
    // Offset: 0x55A6508
    int $SetSelectionInternalById$b__47_0(int id);
    // public System.Collections.IList get_itemsSource()
    // Offset: 0x55A5850
    // Implemented from: UnityEngine.UIElements.BaseVerticalCollectionView
    // Base method: System.Collections.IList BaseVerticalCollectionView::get_itemsSource()
    ::System::Collections::IList* get_itemsSource();
    // override System.Void CreateVirtualizationController()
    // Offset: 0x55A58EC
    // Implemented from: UnityEngine.UIElements.BaseVerticalCollectionView
    // Base method: System.Void BaseVerticalCollectionView::CreateVirtualizationController()
    void CreateVirtualizationController();
    // public override System.Void SetViewController(UnityEngine.UIElements.CollectionViewController controller)
    // Offset: 0x55A5934
    // Implemented from: UnityEngine.UIElements.BaseVerticalCollectionView
    // Base method: System.Void BaseVerticalCollectionView::SetViewController(UnityEngine.UIElements.CollectionViewController controller)
    void SetViewController(::UnityEngine::UIElements::CollectionViewController* controller);
    // private System.Void OnItemIndexChanged(System.Int32 srcIndex, System.Int32 dstIndex)
    // Offset: 0x55A5A5C
    // Implemented from: UnityEngine.UIElements.BaseVerticalCollectionView
    // Base method: System.Void BaseVerticalCollectionView::OnItemIndexChanged(System.Int32 srcIndex, System.Int32 dstIndex)
    void OnItemIndexChanged(int srcIndex, int dstIndex);
    // override UnityEngine.UIElements.ICollectionDragAndDropController CreateDragAndDropController()
    // Offset: 0x55A5A64
    // Implemented from: UnityEngine.UIElements.BaseVerticalCollectionView
    // Base method: UnityEngine.UIElements.ICollectionDragAndDropController BaseVerticalCollectionView::CreateDragAndDropController()
    ::UnityEngine::UIElements::ICollectionDragAndDropController* CreateDragAndDropController();
    // public System.Void .ctor()
    // Offset: 0x55A5B0C
    // Implemented from: UnityEngine.UIElements.BaseVerticalCollectionView
    // Base method: System.Void BaseVerticalCollectionView::.ctor()
    // Base method: System.Void BindableElement::.ctor()
    // Base method: System.Void VisualElement::.ctor()
    // Base method: System.Void Focusable::.ctor()
    // Base method: System.Void CallbackEventHandler::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static BaseTreeView* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::BaseTreeView::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<BaseTreeView*, creationType>()));
    }
    // override System.Void OnViewDataReady()
    // Offset: 0x55A5C9C
    // Implemented from: UnityEngine.UIElements.BaseVerticalCollectionView
    // Base method: System.Void BaseVerticalCollectionView::OnViewDataReady()
    void OnViewDataReady();
    // override System.Boolean HandleItemNavigation(System.Boolean moveIn, System.Boolean altPressed)
    // Offset: 0x55A5CE4
    // Implemented from: UnityEngine.UIElements.BaseVerticalCollectionView
    // Base method: System.Boolean BaseVerticalCollectionView::HandleItemNavigation(System.Boolean moveIn, System.Boolean altPressed)
    bool HandleItemNavigation(bool moveIn, bool altPressed);
    // static private System.Void .cctor()
    // Offset: 0x55A6330
    // Implemented from: UnityEngine.UIElements.BaseVerticalCollectionView
    // Base method: System.Void BaseVerticalCollectionView::.cctor()
    // Base method: System.Void VisualElement::.cctor()
    static void _cctor();
  }; // UnityEngine.UIElements.BaseTreeView
  // WARNING Not writing size check since size may be invalid!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseTreeView::get_viewController
// Il2CppName: get_viewController
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::BaseTreeViewController* (UnityEngine::UIElements::BaseTreeView::*)()>(&UnityEngine::UIElements::BaseTreeView::get_viewController)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseTreeView*), "get_viewController", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseTreeView::get_autoExpand
// Il2CppName: get_autoExpand
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::BaseTreeView::*)()>(&UnityEngine::UIElements::BaseTreeView::get_autoExpand)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseTreeView*), "get_autoExpand", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseTreeView::set_autoExpand
// Il2CppName: set_autoExpand
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::BaseTreeView::*)(bool)>(&UnityEngine::UIElements::BaseTreeView::set_autoExpand)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseTreeView*), "set_autoExpand", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseTreeView::get_expandedItemIds
// Il2CppName: get_expandedItemIds
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::List_1<int>* (UnityEngine::UIElements::BaseTreeView::*)()>(&UnityEngine::UIElements::BaseTreeView::get_expandedItemIds)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseTreeView*), "get_expandedItemIds", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseTreeView::set_expandedItemIds
// Il2CppName: set_expandedItemIds
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::BaseTreeView::*)(::System::Collections::Generic::List_1<int>*)>(&UnityEngine::UIElements::BaseTreeView::set_expandedItemIds)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Int32")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseTreeView*), "set_expandedItemIds", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseTreeView::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseTreeView::SetSelectionById
// Il2CppName: SetSelectionById
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::BaseTreeView::*)(int)>(&UnityEngine::UIElements::BaseTreeView::SetSelectionById)> {
  static const MethodInfo* get() {
    static auto* id = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseTreeView*), "SetSelectionById", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{id});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseTreeView::SetSelectionById
// Il2CppName: SetSelectionById
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::BaseTreeView::*)(::System::Collections::Generic::IEnumerable_1<int>*)>(&UnityEngine::UIElements::BaseTreeView::SetSelectionById)> {
  static const MethodInfo* get() {
    static auto* ids = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "IEnumerable`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Int32")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseTreeView*), "SetSelectionById", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ids});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseTreeView::SetSelectionInternalById
// Il2CppName: SetSelectionInternalById
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::BaseTreeView::*)(::System::Collections::Generic::IEnumerable_1<int>*, bool)>(&UnityEngine::UIElements::BaseTreeView::SetSelectionInternalById)> {
  static const MethodInfo* get() {
    static auto* ids = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "IEnumerable`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Int32")})->byval_arg;
    static auto* sendNotification = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseTreeView*), "SetSelectionInternalById", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ids, sendNotification});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseTreeView::GetItemIndex
// Il2CppName: GetItemIndex
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::UIElements::BaseTreeView::*)(int, bool)>(&UnityEngine::UIElements::BaseTreeView::GetItemIndex)> {
  static const MethodInfo* get() {
    static auto* id = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* expand = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseTreeView*), "GetItemIndex", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{id, expand});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseTreeView::IsExpanded
// Il2CppName: IsExpanded
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::BaseTreeView::*)(int)>(&UnityEngine::UIElements::BaseTreeView::IsExpanded)> {
  static const MethodInfo* get() {
    static auto* id = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseTreeView*), "IsExpanded", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{id});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseTreeView::CollapseItem
// Il2CppName: CollapseItem
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::BaseTreeView::*)(int, bool)>(&UnityEngine::UIElements::BaseTreeView::CollapseItem)> {
  static const MethodInfo* get() {
    static auto* id = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* collapseAllChildren = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseTreeView*), "CollapseItem", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{id, collapseAllChildren});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseTreeView::ExpandItem
// Il2CppName: ExpandItem
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::BaseTreeView::*)(int, bool)>(&UnityEngine::UIElements::BaseTreeView::ExpandItem)> {
  static const MethodInfo* get() {
    static auto* id = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* expandAllChildren = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseTreeView*), "ExpandItem", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{id, expandAllChildren});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseTreeView::OnTreeViewMouseUp
// Il2CppName: OnTreeViewMouseUp
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::BaseTreeView::*)(::UnityEngine::UIElements::MouseUpEvent*)>(&UnityEngine::UIElements::BaseTreeView::OnTreeViewMouseUp)> {
  static const MethodInfo* get() {
    static auto* evt = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "MouseUpEvent")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseTreeView*), "OnTreeViewMouseUp", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{evt});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseTreeView::IsExpandedByIndex
// Il2CppName: IsExpandedByIndex
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::BaseTreeView::*)(int)>(&UnityEngine::UIElements::BaseTreeView::IsExpandedByIndex)> {
  static const MethodInfo* get() {
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseTreeView*), "IsExpandedByIndex", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{index});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseTreeView::CollapseItemByIndex
// Il2CppName: CollapseItemByIndex
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::BaseTreeView::*)(int, bool)>(&UnityEngine::UIElements::BaseTreeView::CollapseItemByIndex)> {
  static const MethodInfo* get() {
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* collapseAll = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseTreeView*), "CollapseItemByIndex", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{index, collapseAll});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseTreeView::ExpandItemByIndex
// Il2CppName: ExpandItemByIndex
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::BaseTreeView::*)(int, bool)>(&UnityEngine::UIElements::BaseTreeView::ExpandItemByIndex)> {
  static const MethodInfo* get() {
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* expandAll = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseTreeView*), "ExpandItemByIndex", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{index, expandAll});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseTreeView::$SetSelectionInternalById$b__47_0
// Il2CppName: <SetSelectionInternalById>b__47_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::UIElements::BaseTreeView::*)(int)>(&UnityEngine::UIElements::BaseTreeView::$SetSelectionInternalById$b__47_0)> {
  static const MethodInfo* get() {
    static auto* id = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseTreeView*), "<SetSelectionInternalById>b__47_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{id});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseTreeView::get_itemsSource
// Il2CppName: get_itemsSource
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::IList* (UnityEngine::UIElements::BaseTreeView::*)()>(&UnityEngine::UIElements::BaseTreeView::get_itemsSource)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseTreeView*), "get_itemsSource", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseTreeView::CreateVirtualizationController
// Il2CppName: CreateVirtualizationController
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::BaseTreeView::*)()>(&UnityEngine::UIElements::BaseTreeView::CreateVirtualizationController)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseTreeView*), "CreateVirtualizationController", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseTreeView::SetViewController
// Il2CppName: SetViewController
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::BaseTreeView::*)(::UnityEngine::UIElements::CollectionViewController*)>(&UnityEngine::UIElements::BaseTreeView::SetViewController)> {
  static const MethodInfo* get() {
    static auto* controller = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "CollectionViewController")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseTreeView*), "SetViewController", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{controller});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseTreeView::OnItemIndexChanged
// Il2CppName: OnItemIndexChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::BaseTreeView::*)(int, int)>(&UnityEngine::UIElements::BaseTreeView::OnItemIndexChanged)> {
  static const MethodInfo* get() {
    static auto* srcIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* dstIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseTreeView*), "OnItemIndexChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{srcIndex, dstIndex});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseTreeView::CreateDragAndDropController
// Il2CppName: CreateDragAndDropController
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::ICollectionDragAndDropController* (UnityEngine::UIElements::BaseTreeView::*)()>(&UnityEngine::UIElements::BaseTreeView::CreateDragAndDropController)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseTreeView*), "CreateDragAndDropController", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseTreeView::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseTreeView::OnViewDataReady
// Il2CppName: OnViewDataReady
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::BaseTreeView::*)()>(&UnityEngine::UIElements::BaseTreeView::OnViewDataReady)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseTreeView*), "OnViewDataReady", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseTreeView::HandleItemNavigation
// Il2CppName: HandleItemNavigation
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::BaseTreeView::*)(bool, bool)>(&UnityEngine::UIElements::BaseTreeView::HandleItemNavigation)> {
  static const MethodInfo* get() {
    static auto* moveIn = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* altPressed = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseTreeView*), "HandleItemNavigation", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{moveIn, altPressed});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::BaseTreeView::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&UnityEngine::UIElements::BaseTreeView::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::BaseTreeView*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
