// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.UIElements.Background
#include "UnityEngine/UIElements/Background.hpp"
// Including type: UnityEngine.UIElements.Length
#include "UnityEngine/UIElements/Length.hpp"
// Including type: UnityEngine.UIElements.ColumnDataType
#include "UnityEngine/UIElements/ColumnDataType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::UIElements
namespace UnityEngine::UIElements {
  // Forward declaring type: VisualElement
  class VisualElement;
  // Forward declaring type: Columns
  class Columns;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Func`1<TResult>
  template<typename TResult>
  class Func_1;
  // Forward declaring type: Action`1<T>
  template<typename T>
  class Action_1;
  // Forward declaring type: Action`2<T1, T2>
  template<typename T1, typename T2>
  class Action_2;
}
// Completed forward declares
// Type namespace: UnityEngine.UIElements
namespace UnityEngine::UIElements {
  // Forward declaring type: Column
  class Column;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::UIElements::Column);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::UIElements::Column*, "UnityEngine.UIElements", "Column");
// Type namespace: UnityEngine.UIElements
namespace UnityEngine::UIElements {
  // Size: 0xC0
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.UIElements.Column
  // [TokenAttribute] Offset: FFFFFFFF
  class Column : public ::Il2CppObject {
    public:
    // Nested type: ::UnityEngine::UIElements::Column::UxmlObjectFactory_1<T>
    template<typename T>
    class UxmlObjectFactory_1;
    // Nested type: ::UnityEngine::UIElements::Column::UxmlObjectTraits_1<T>
    template<typename T>
    class UxmlObjectTraits_1;
    public:
    // private System.String m_Name
    // Size: 0x8
    // Offset: 0x10
    ::StringW m_Name;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private System.String m_Title
    // Size: 0x8
    // Offset: 0x18
    ::StringW m_Title;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private UnityEngine.UIElements.Background m_Icon
    // Size: 0x20
    // Offset: 0x20
    ::UnityEngine::UIElements::Background m_Icon;
    // Field size check
    static_assert(sizeof(::UnityEngine::UIElements::Background) == 0x20);
    // private System.Boolean m_Visible
    // Size: 0x1
    // Offset: 0x40
    bool m_Visible;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: m_Visible and: m_Width
    char __padding3[0x3] = {};
    // private UnityEngine.UIElements.Length m_Width
    // Size: 0x8
    // Offset: 0x44
    ::UnityEngine::UIElements::Length m_Width;
    // Field size check
    static_assert(sizeof(::UnityEngine::UIElements::Length) == 0x8);
    // private UnityEngine.UIElements.Length m_MinWidth
    // Size: 0x8
    // Offset: 0x4C
    ::UnityEngine::UIElements::Length m_MinWidth;
    // Field size check
    static_assert(sizeof(::UnityEngine::UIElements::Length) == 0x8);
    // private UnityEngine.UIElements.Length m_MaxWidth
    // Size: 0x8
    // Offset: 0x54
    ::UnityEngine::UIElements::Length m_MaxWidth;
    // Field size check
    static_assert(sizeof(::UnityEngine::UIElements::Length) == 0x8);
    // private System.Single m_DesiredWidth
    // Size: 0x4
    // Offset: 0x5C
    float m_DesiredWidth;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Boolean m_Stretchable
    // Size: 0x1
    // Offset: 0x60
    bool m_Stretchable;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean m_Sortable
    // Size: 0x1
    // Offset: 0x61
    bool m_Sortable;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean m_Optional
    // Size: 0x1
    // Offset: 0x62
    bool m_Optional;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean m_Resizable
    // Size: 0x1
    // Offset: 0x63
    bool m_Resizable;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: m_Resizable and: m_MakeHeader
    char __padding11[0x4] = {};
    // private System.Func`1<UnityEngine.UIElements.VisualElement> m_MakeHeader
    // Size: 0x8
    // Offset: 0x68
    ::System::Func_1<::UnityEngine::UIElements::VisualElement*>* m_MakeHeader;
    // Field size check
    static_assert(sizeof(::System::Func_1<::UnityEngine::UIElements::VisualElement*>*) == 0x8);
    // private System.Action`1<UnityEngine.UIElements.VisualElement> m_BindHeader
    // Size: 0x8
    // Offset: 0x70
    ::System::Action_1<::UnityEngine::UIElements::VisualElement*>* m_BindHeader;
    // Field size check
    static_assert(sizeof(::System::Action_1<::UnityEngine::UIElements::VisualElement*>*) == 0x8);
    // private System.Action`1<UnityEngine.UIElements.VisualElement> m_UnbindHeader
    // Size: 0x8
    // Offset: 0x78
    ::System::Action_1<::UnityEngine::UIElements::VisualElement*>* m_UnbindHeader;
    // Field size check
    static_assert(sizeof(::System::Action_1<::UnityEngine::UIElements::VisualElement*>*) == 0x8);
    // private System.Action`1<UnityEngine.UIElements.VisualElement> m_DestroyHeader
    // Size: 0x8
    // Offset: 0x80
    ::System::Action_1<::UnityEngine::UIElements::VisualElement*>* m_DestroyHeader;
    // Field size check
    static_assert(sizeof(::System::Action_1<::UnityEngine::UIElements::VisualElement*>*) == 0x8);
    // private System.Func`1<UnityEngine.UIElements.VisualElement> m_MakeCell
    // Size: 0x8
    // Offset: 0x88
    ::System::Func_1<::UnityEngine::UIElements::VisualElement*>* m_MakeCell;
    // Field size check
    static_assert(sizeof(::System::Func_1<::UnityEngine::UIElements::VisualElement*>*) == 0x8);
    // private System.Action`2<UnityEngine.UIElements.VisualElement,System.Int32> m_BindCell
    // Size: 0x8
    // Offset: 0x90
    ::System::Action_2<::UnityEngine::UIElements::VisualElement*, int>* m_BindCell;
    // Field size check
    static_assert(sizeof(::System::Action_2<::UnityEngine::UIElements::VisualElement*, int>*) == 0x8);
    // private System.Action`2<UnityEngine.UIElements.VisualElement,System.Int32> m_UnbindCellItem
    // Size: 0x8
    // Offset: 0x98
    ::System::Action_2<::UnityEngine::UIElements::VisualElement*, int>* m_UnbindCellItem;
    // Field size check
    static_assert(sizeof(::System::Action_2<::UnityEngine::UIElements::VisualElement*, int>*) == 0x8);
    // private System.Action`1<UnityEngine.UIElements.VisualElement> <destroyCell>k__BackingField
    // Size: 0x8
    // Offset: 0xA0
    ::System::Action_1<::UnityEngine::UIElements::VisualElement*>* destroyCell;
    // Field size check
    static_assert(sizeof(::System::Action_1<::UnityEngine::UIElements::VisualElement*>*) == 0x8);
    // private UnityEngine.UIElements.Columns <collection>k__BackingField
    // Size: 0x8
    // Offset: 0xA8
    ::UnityEngine::UIElements::Columns* collection;
    // Field size check
    static_assert(sizeof(::UnityEngine::UIElements::Columns*) == 0x8);
    // private System.Action`2<UnityEngine.UIElements.Column,UnityEngine.UIElements.ColumnDataType> changed
    // Size: 0x8
    // Offset: 0xB0
    ::System::Action_2<::UnityEngine::UIElements::Column*, ::UnityEngine::UIElements::ColumnDataType>* changed;
    // Field size check
    static_assert(sizeof(::System::Action_2<::UnityEngine::UIElements::Column*, ::UnityEngine::UIElements::ColumnDataType>*) == 0x8);
    // private System.Action`1<UnityEngine.UIElements.Column> resized
    // Size: 0x8
    // Offset: 0xB8
    ::System::Action_1<::UnityEngine::UIElements::Column*>* resized;
    // Field size check
    static_assert(sizeof(::System::Action_1<::UnityEngine::UIElements::Column*>*) == 0x8);
    public:
    // Get static field: static private readonly System.String k_InvalidTemplateError
    static ::StringW _get_k_InvalidTemplateError();
    // Set static field: static private readonly System.String k_InvalidTemplateError
    static void _set_k_InvalidTemplateError(::StringW value);
    // Get instance field reference: private System.String m_Name
    [[deprecated("Use field access instead!")]] ::StringW& dyn_m_Name();
    // Get instance field reference: private System.String m_Title
    [[deprecated("Use field access instead!")]] ::StringW& dyn_m_Title();
    // Get instance field reference: private UnityEngine.UIElements.Background m_Icon
    [[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::Background& dyn_m_Icon();
    // Get instance field reference: private System.Boolean m_Visible
    [[deprecated("Use field access instead!")]] bool& dyn_m_Visible();
    // Get instance field reference: private UnityEngine.UIElements.Length m_Width
    [[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::Length& dyn_m_Width();
    // Get instance field reference: private UnityEngine.UIElements.Length m_MinWidth
    [[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::Length& dyn_m_MinWidth();
    // Get instance field reference: private UnityEngine.UIElements.Length m_MaxWidth
    [[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::Length& dyn_m_MaxWidth();
    // Get instance field reference: private System.Single m_DesiredWidth
    [[deprecated("Use field access instead!")]] float& dyn_m_DesiredWidth();
    // Get instance field reference: private System.Boolean m_Stretchable
    [[deprecated("Use field access instead!")]] bool& dyn_m_Stretchable();
    // Get instance field reference: private System.Boolean m_Sortable
    [[deprecated("Use field access instead!")]] bool& dyn_m_Sortable();
    // Get instance field reference: private System.Boolean m_Optional
    [[deprecated("Use field access instead!")]] bool& dyn_m_Optional();
    // Get instance field reference: private System.Boolean m_Resizable
    [[deprecated("Use field access instead!")]] bool& dyn_m_Resizable();
    // Get instance field reference: private System.Func`1<UnityEngine.UIElements.VisualElement> m_MakeHeader
    [[deprecated("Use field access instead!")]] ::System::Func_1<::UnityEngine::UIElements::VisualElement*>*& dyn_m_MakeHeader();
    // Get instance field reference: private System.Action`1<UnityEngine.UIElements.VisualElement> m_BindHeader
    [[deprecated("Use field access instead!")]] ::System::Action_1<::UnityEngine::UIElements::VisualElement*>*& dyn_m_BindHeader();
    // Get instance field reference: private System.Action`1<UnityEngine.UIElements.VisualElement> m_UnbindHeader
    [[deprecated("Use field access instead!")]] ::System::Action_1<::UnityEngine::UIElements::VisualElement*>*& dyn_m_UnbindHeader();
    // Get instance field reference: private System.Action`1<UnityEngine.UIElements.VisualElement> m_DestroyHeader
    [[deprecated("Use field access instead!")]] ::System::Action_1<::UnityEngine::UIElements::VisualElement*>*& dyn_m_DestroyHeader();
    // Get instance field reference: private System.Func`1<UnityEngine.UIElements.VisualElement> m_MakeCell
    [[deprecated("Use field access instead!")]] ::System::Func_1<::UnityEngine::UIElements::VisualElement*>*& dyn_m_MakeCell();
    // Get instance field reference: private System.Action`2<UnityEngine.UIElements.VisualElement,System.Int32> m_BindCell
    [[deprecated("Use field access instead!")]] ::System::Action_2<::UnityEngine::UIElements::VisualElement*, int>*& dyn_m_BindCell();
    // Get instance field reference: private System.Action`2<UnityEngine.UIElements.VisualElement,System.Int32> m_UnbindCellItem
    [[deprecated("Use field access instead!")]] ::System::Action_2<::UnityEngine::UIElements::VisualElement*, int>*& dyn_m_UnbindCellItem();
    // Get instance field reference: private System.Action`1<UnityEngine.UIElements.VisualElement> <destroyCell>k__BackingField
    [[deprecated("Use field access instead!")]] ::System::Action_1<::UnityEngine::UIElements::VisualElement*>*& dyn_$destroyCell$k__BackingField();
    // Get instance field reference: private UnityEngine.UIElements.Columns <collection>k__BackingField
    [[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::Columns*& dyn_$collection$k__BackingField();
    // Get instance field reference: private System.Action`2<UnityEngine.UIElements.Column,UnityEngine.UIElements.ColumnDataType> changed
    [[deprecated("Use field access instead!")]] ::System::Action_2<::UnityEngine::UIElements::Column*, ::UnityEngine::UIElements::ColumnDataType>*& dyn_changed();
    // Get instance field reference: private System.Action`1<UnityEngine.UIElements.Column> resized
    [[deprecated("Use field access instead!")]] ::System::Action_1<::UnityEngine::UIElements::Column*>*& dyn_resized();
    // public System.String get_name()
    // Offset: 0x56197A4
    ::StringW get_name();
    // public System.Void set_name(System.String value)
    // Offset: 0x56197AC
    void set_name(::StringW value);
    // public System.String get_title()
    // Offset: 0x561983C
    ::StringW get_title();
    // public System.Void set_title(System.String value)
    // Offset: 0x5619844
    void set_title(::StringW value);
    // public UnityEngine.UIElements.Background get_icon()
    // Offset: 0x56198AC
    ::UnityEngine::UIElements::Background get_icon();
    // System.Int32 get_index()
    // Offset: 0x56198B8
    int get_index();
    // System.Int32 get_displayIndex()
    // Offset: 0x561997C
    int get_displayIndex();
    // System.Int32 get_visibleIndex()
    // Offset: 0x5619A44
    int get_visibleIndex();
    // public System.Boolean get_visible()
    // Offset: 0x5619B0C
    bool get_visible();
    // public System.Void set_visible(System.Boolean value)
    // Offset: 0x5619B14
    void set_visible(bool value);
    // public UnityEngine.UIElements.Length get_width()
    // Offset: 0x5619B50
    ::UnityEngine::UIElements::Length get_width();
    // public System.Void set_width(UnityEngine.UIElements.Length value)
    // Offset: 0x5619B58
    void set_width(::UnityEngine::UIElements::Length value);
    // public UnityEngine.UIElements.Length get_minWidth()
    // Offset: 0x5619C04
    ::UnityEngine::UIElements::Length get_minWidth();
    // public System.Void set_minWidth(UnityEngine.UIElements.Length value)
    // Offset: 0x5619C0C
    void set_minWidth(::UnityEngine::UIElements::Length value);
    // public UnityEngine.UIElements.Length get_maxWidth()
    // Offset: 0x5619C64
    ::UnityEngine::UIElements::Length get_maxWidth();
    // public System.Void set_maxWidth(UnityEngine.UIElements.Length value)
    // Offset: 0x5619C6C
    void set_maxWidth(::UnityEngine::UIElements::Length value);
    // System.Single get_desiredWidth()
    // Offset: 0x5619CC4
    float get_desiredWidth();
    // System.Void set_desiredWidth(System.Single value)
    // Offset: 0x5619BD4
    void set_desiredWidth(float value);
    // public System.Boolean get_sortable()
    // Offset: 0x5619CCC
    bool get_sortable();
    // public System.Void set_sortable(System.Boolean value)
    // Offset: 0x5619CD4
    void set_sortable(bool value);
    // public System.Boolean get_stretchable()
    // Offset: 0x5619D10
    bool get_stretchable();
    // public System.Void set_stretchable(System.Boolean value)
    // Offset: 0x5619D18
    void set_stretchable(bool value);
    // public System.Boolean get_optional()
    // Offset: 0x5619D54
    bool get_optional();
    // public System.Void set_optional(System.Boolean value)
    // Offset: 0x5619D5C
    void set_optional(bool value);
    // public System.Boolean get_resizable()
    // Offset: 0x5619D98
    bool get_resizable();
    // public System.Void set_resizable(System.Boolean value)
    // Offset: 0x5619DA0
    void set_resizable(bool value);
    // public System.Func`1<UnityEngine.UIElements.VisualElement> get_makeHeader()
    // Offset: 0x5619DDC
    ::System::Func_1<::UnityEngine::UIElements::VisualElement*>* get_makeHeader();
    // public System.Void set_makeHeader(System.Func`1<UnityEngine.UIElements.VisualElement> value)
    // Offset: 0x5619DE4
    void set_makeHeader(::System::Func_1<::UnityEngine::UIElements::VisualElement*>* value);
    // public System.Action`1<UnityEngine.UIElements.VisualElement> get_bindHeader()
    // Offset: 0x5619E4C
    ::System::Action_1<::UnityEngine::UIElements::VisualElement*>* get_bindHeader();
    // public System.Action`1<UnityEngine.UIElements.VisualElement> get_unbindHeader()
    // Offset: 0x5619E54
    ::System::Action_1<::UnityEngine::UIElements::VisualElement*>* get_unbindHeader();
    // public System.Action`1<UnityEngine.UIElements.VisualElement> get_destroyHeader()
    // Offset: 0x5619E5C
    ::System::Action_1<::UnityEngine::UIElements::VisualElement*>* get_destroyHeader();
    // public System.Func`1<UnityEngine.UIElements.VisualElement> get_makeCell()
    // Offset: 0x5619E64
    ::System::Func_1<::UnityEngine::UIElements::VisualElement*>* get_makeCell();
    // public System.Void set_makeCell(System.Func`1<UnityEngine.UIElements.VisualElement> value)
    // Offset: 0x5619E6C
    void set_makeCell(::System::Func_1<::UnityEngine::UIElements::VisualElement*>* value);
    // public System.Action`2<UnityEngine.UIElements.VisualElement,System.Int32> get_bindCell()
    // Offset: 0x5619ED4
    ::System::Action_2<::UnityEngine::UIElements::VisualElement*, int>* get_bindCell();
    // public System.Action`2<UnityEngine.UIElements.VisualElement,System.Int32> get_unbindCell()
    // Offset: 0x5619EDC
    ::System::Action_2<::UnityEngine::UIElements::VisualElement*, int>* get_unbindCell();
    // public System.Action`1<UnityEngine.UIElements.VisualElement> get_destroyCell()
    // Offset: 0x5619EE4
    ::System::Action_1<::UnityEngine::UIElements::VisualElement*>* get_destroyCell();
    // public UnityEngine.UIElements.Columns get_collection()
    // Offset: 0x5619EEC
    ::UnityEngine::UIElements::Columns* get_collection();
    // System.Void set_collection(UnityEngine.UIElements.Columns value)
    // Offset: 0x5619EF4
    void set_collection(::UnityEngine::UIElements::Columns* value);
    // System.Void add_changed(System.Action`2<UnityEngine.UIElements.Column,UnityEngine.UIElements.ColumnDataType> value)
    // Offset: 0x5619EFC
    void add_changed(::System::Action_2<::UnityEngine::UIElements::Column*, ::UnityEngine::UIElements::ColumnDataType>* value);
    // System.Void remove_changed(System.Action`2<UnityEngine.UIElements.Column,UnityEngine.UIElements.ColumnDataType> value)
    // Offset: 0x5619FAC
    void remove_changed(::System::Action_2<::UnityEngine::UIElements::Column*, ::UnityEngine::UIElements::ColumnDataType>* value);
    // System.Void add_resized(System.Action`1<UnityEngine.UIElements.Column> value)
    // Offset: 0x561A05C
    void add_resized(::System::Action_1<::UnityEngine::UIElements::Column*>* value);
    // System.Void remove_resized(System.Action`1<UnityEngine.UIElements.Column> value)
    // Offset: 0x561A10C
    void remove_resized(::System::Action_1<::UnityEngine::UIElements::Column*>* value);
    // private System.Void NotifyChange(UnityEngine.UIElements.ColumnDataType type)
    // Offset: 0x5619814
    void NotifyChange(::UnityEngine::UIElements::ColumnDataType type);
    // public System.Void .ctor()
    // Offset: 0x561A1BC
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static Column* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::Column::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<Column*, creationType>()));
    }
    // static private System.Void .cctor()
    // Offset: 0x561A230
    static void _cctor();
  }; // UnityEngine.UIElements.Column
  #pragma pack(pop)
  static check_size<sizeof(Column), 184 + sizeof(::System::Action_1<::UnityEngine::UIElements::Column*>*)> __UnityEngine_UIElements_ColumnSizeCheck;
  static_assert(sizeof(Column) == 0xC0);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::UIElements::Column::get_name
// Il2CppName: get_name
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (UnityEngine::UIElements::Column::*)()>(&UnityEngine::UIElements::Column::get_name)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::Column*), "get_name", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::Column::set_name
// Il2CppName: set_name
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::Column::*)(::StringW)>(&UnityEngine::UIElements::Column::set_name)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::Column*), "set_name", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::Column::get_title
// Il2CppName: get_title
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (UnityEngine::UIElements::Column::*)()>(&UnityEngine::UIElements::Column::get_title)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::Column*), "get_title", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::Column::set_title
// Il2CppName: set_title
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::Column::*)(::StringW)>(&UnityEngine::UIElements::Column::set_title)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::Column*), "set_title", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::Column::get_icon
// Il2CppName: get_icon
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::Background (UnityEngine::UIElements::Column::*)()>(&UnityEngine::UIElements::Column::get_icon)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::Column*), "get_icon", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::Column::get_index
// Il2CppName: get_index
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::UIElements::Column::*)()>(&UnityEngine::UIElements::Column::get_index)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::Column*), "get_index", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::Column::get_displayIndex
// Il2CppName: get_displayIndex
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::UIElements::Column::*)()>(&UnityEngine::UIElements::Column::get_displayIndex)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::Column*), "get_displayIndex", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::Column::get_visibleIndex
// Il2CppName: get_visibleIndex
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::UIElements::Column::*)()>(&UnityEngine::UIElements::Column::get_visibleIndex)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::Column*), "get_visibleIndex", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::Column::get_visible
// Il2CppName: get_visible
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::Column::*)()>(&UnityEngine::UIElements::Column::get_visible)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::Column*), "get_visible", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::Column::set_visible
// Il2CppName: set_visible
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::Column::*)(bool)>(&UnityEngine::UIElements::Column::set_visible)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::Column*), "set_visible", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::Column::get_width
// Il2CppName: get_width
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::Length (UnityEngine::UIElements::Column::*)()>(&UnityEngine::UIElements::Column::get_width)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::Column*), "get_width", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::Column::set_width
// Il2CppName: set_width
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::Column::*)(::UnityEngine::UIElements::Length)>(&UnityEngine::UIElements::Column::set_width)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "Length")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::Column*), "set_width", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::Column::get_minWidth
// Il2CppName: get_minWidth
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::Length (UnityEngine::UIElements::Column::*)()>(&UnityEngine::UIElements::Column::get_minWidth)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::Column*), "get_minWidth", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::Column::set_minWidth
// Il2CppName: set_minWidth
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::Column::*)(::UnityEngine::UIElements::Length)>(&UnityEngine::UIElements::Column::set_minWidth)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "Length")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::Column*), "set_minWidth", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::Column::get_maxWidth
// Il2CppName: get_maxWidth
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::Length (UnityEngine::UIElements::Column::*)()>(&UnityEngine::UIElements::Column::get_maxWidth)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::Column*), "get_maxWidth", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::Column::set_maxWidth
// Il2CppName: set_maxWidth
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::Column::*)(::UnityEngine::UIElements::Length)>(&UnityEngine::UIElements::Column::set_maxWidth)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "Length")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::Column*), "set_maxWidth", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::Column::get_desiredWidth
// Il2CppName: get_desiredWidth
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::UIElements::Column::*)()>(&UnityEngine::UIElements::Column::get_desiredWidth)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::Column*), "get_desiredWidth", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::Column::set_desiredWidth
// Il2CppName: set_desiredWidth
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::Column::*)(float)>(&UnityEngine::UIElements::Column::set_desiredWidth)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::Column*), "set_desiredWidth", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::Column::get_sortable
// Il2CppName: get_sortable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::Column::*)()>(&UnityEngine::UIElements::Column::get_sortable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::Column*), "get_sortable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::Column::set_sortable
// Il2CppName: set_sortable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::Column::*)(bool)>(&UnityEngine::UIElements::Column::set_sortable)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::Column*), "set_sortable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::Column::get_stretchable
// Il2CppName: get_stretchable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::Column::*)()>(&UnityEngine::UIElements::Column::get_stretchable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::Column*), "get_stretchable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::Column::set_stretchable
// Il2CppName: set_stretchable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::Column::*)(bool)>(&UnityEngine::UIElements::Column::set_stretchable)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::Column*), "set_stretchable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::Column::get_optional
// Il2CppName: get_optional
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::Column::*)()>(&UnityEngine::UIElements::Column::get_optional)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::Column*), "get_optional", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::Column::set_optional
// Il2CppName: set_optional
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::Column::*)(bool)>(&UnityEngine::UIElements::Column::set_optional)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::Column*), "set_optional", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::Column::get_resizable
// Il2CppName: get_resizable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::Column::*)()>(&UnityEngine::UIElements::Column::get_resizable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::Column*), "get_resizable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::Column::set_resizable
// Il2CppName: set_resizable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::Column::*)(bool)>(&UnityEngine::UIElements::Column::set_resizable)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::Column*), "set_resizable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::Column::get_makeHeader
// Il2CppName: get_makeHeader
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Func_1<::UnityEngine::UIElements::VisualElement*>* (UnityEngine::UIElements::Column::*)()>(&UnityEngine::UIElements::Column::get_makeHeader)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::Column*), "get_makeHeader", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::Column::set_makeHeader
// Il2CppName: set_makeHeader
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::Column::*)(::System::Func_1<::UnityEngine::UIElements::VisualElement*>*)>(&UnityEngine::UIElements::Column::set_makeHeader)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Func`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "VisualElement")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::Column*), "set_makeHeader", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::Column::get_bindHeader
// Il2CppName: get_bindHeader
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Action_1<::UnityEngine::UIElements::VisualElement*>* (UnityEngine::UIElements::Column::*)()>(&UnityEngine::UIElements::Column::get_bindHeader)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::Column*), "get_bindHeader", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::Column::get_unbindHeader
// Il2CppName: get_unbindHeader
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Action_1<::UnityEngine::UIElements::VisualElement*>* (UnityEngine::UIElements::Column::*)()>(&UnityEngine::UIElements::Column::get_unbindHeader)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::Column*), "get_unbindHeader", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::Column::get_destroyHeader
// Il2CppName: get_destroyHeader
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Action_1<::UnityEngine::UIElements::VisualElement*>* (UnityEngine::UIElements::Column::*)()>(&UnityEngine::UIElements::Column::get_destroyHeader)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::Column*), "get_destroyHeader", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::Column::get_makeCell
// Il2CppName: get_makeCell
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Func_1<::UnityEngine::UIElements::VisualElement*>* (UnityEngine::UIElements::Column::*)()>(&UnityEngine::UIElements::Column::get_makeCell)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::Column*), "get_makeCell", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::Column::set_makeCell
// Il2CppName: set_makeCell
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::Column::*)(::System::Func_1<::UnityEngine::UIElements::VisualElement*>*)>(&UnityEngine::UIElements::Column::set_makeCell)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Func`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "VisualElement")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::Column*), "set_makeCell", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::Column::get_bindCell
// Il2CppName: get_bindCell
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Action_2<::UnityEngine::UIElements::VisualElement*, int>* (UnityEngine::UIElements::Column::*)()>(&UnityEngine::UIElements::Column::get_bindCell)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::Column*), "get_bindCell", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::Column::get_unbindCell
// Il2CppName: get_unbindCell
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Action_2<::UnityEngine::UIElements::VisualElement*, int>* (UnityEngine::UIElements::Column::*)()>(&UnityEngine::UIElements::Column::get_unbindCell)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::Column*), "get_unbindCell", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::Column::get_destroyCell
// Il2CppName: get_destroyCell
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Action_1<::UnityEngine::UIElements::VisualElement*>* (UnityEngine::UIElements::Column::*)()>(&UnityEngine::UIElements::Column::get_destroyCell)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::Column*), "get_destroyCell", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::Column::get_collection
// Il2CppName: get_collection
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::Columns* (UnityEngine::UIElements::Column::*)()>(&UnityEngine::UIElements::Column::get_collection)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::Column*), "get_collection", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::Column::set_collection
// Il2CppName: set_collection
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::Column::*)(::UnityEngine::UIElements::Columns*)>(&UnityEngine::UIElements::Column::set_collection)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "Columns")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::Column*), "set_collection", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::Column::add_changed
// Il2CppName: add_changed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::Column::*)(::System::Action_2<::UnityEngine::UIElements::Column*, ::UnityEngine::UIElements::ColumnDataType>*)>(&UnityEngine::UIElements::Column::add_changed)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "Column"), ::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "ColumnDataType")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::Column*), "add_changed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::Column::remove_changed
// Il2CppName: remove_changed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::Column::*)(::System::Action_2<::UnityEngine::UIElements::Column*, ::UnityEngine::UIElements::ColumnDataType>*)>(&UnityEngine::UIElements::Column::remove_changed)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "Column"), ::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "ColumnDataType")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::Column*), "remove_changed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::Column::add_resized
// Il2CppName: add_resized
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::Column::*)(::System::Action_1<::UnityEngine::UIElements::Column*>*)>(&UnityEngine::UIElements::Column::add_resized)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "Column")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::Column*), "add_resized", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::Column::remove_resized
// Il2CppName: remove_resized
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::Column::*)(::System::Action_1<::UnityEngine::UIElements::Column*>*)>(&UnityEngine::UIElements::Column::remove_resized)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "Column")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::Column*), "remove_resized", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::Column::NotifyChange
// Il2CppName: NotifyChange
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::Column::*)(::UnityEngine::UIElements::ColumnDataType)>(&UnityEngine::UIElements::Column::NotifyChange)> {
  static const MethodInfo* get() {
    static auto* type = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "ColumnDataType")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::Column*), "NotifyChange", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{type});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::Column::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::UIElements::Column::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&UnityEngine::UIElements::Column::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::Column*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
