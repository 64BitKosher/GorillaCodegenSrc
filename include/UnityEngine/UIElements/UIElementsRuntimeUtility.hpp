// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Unity.Profiling.ProfilerMarker
#include "Unity/Profiling/ProfilerMarker.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::UIElements
namespace UnityEngine::UIElements {
  // Forward declaring type: BaseRuntimePanel
  class BaseRuntimePanel;
  // Forward declaring type: Panel
  class Panel;
  // Forward declaring type: DefaultEventSystem
  class DefaultEventSystem;
  // Forward declaring type: PanelSettings
  class PanelSettings;
  // Forward declaring type: EventBase
  class EventBase;
  // Forward declaring type: IPanel
  class IPanel;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Action`1<T>
  template<typename T>
  class Action_1;
  // Forward declaring type: Nullable`1<T>
  template<typename T>
  struct Nullable_1;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Object
  class Object;
  // Forward declaring type: Event
  class Event;
  // Forward declaring type: ScriptableObject
  class ScriptableObject;
  // Forward declaring type: Vector2
  struct Vector2;
}
// Completed forward declares
// Type namespace: UnityEngine.UIElements
namespace UnityEngine::UIElements {
  // Forward declaring type: UIElementsRuntimeUtility
  class UIElementsRuntimeUtility;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::UIElements::UIElementsRuntimeUtility);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::UIElements::UIElementsRuntimeUtility*, "UnityEngine.UIElements", "UIElementsRuntimeUtility");
// Type namespace: UnityEngine.UIElements
namespace UnityEngine::UIElements {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.UIElements.UIElementsRuntimeUtility
  // [TokenAttribute] Offset: FFFFFFFF
  class UIElementsRuntimeUtility : public ::Il2CppObject {
    public:
    // Nested type: ::UnityEngine::UIElements::UIElementsRuntimeUtility::CreateRuntimePanelDelegate
    class CreateRuntimePanelDelegate;
    // Nested type: ::UnityEngine::UIElements::UIElementsRuntimeUtility::$$c
    class $$c;
    // Get static field: static private System.Action`1<UnityEngine.UIElements.BaseRuntimePanel> onCreatePanel
    static ::System::Action_1<::UnityEngine::UIElements::BaseRuntimePanel*>* _get_onCreatePanel();
    // Set static field: static private System.Action`1<UnityEngine.UIElements.BaseRuntimePanel> onCreatePanel
    static void _set_onCreatePanel(::System::Action_1<::UnityEngine::UIElements::BaseRuntimePanel*>* value);
    // Get static field: static private System.Boolean s_RegisteredPlayerloopCallback
    static bool _get_s_RegisteredPlayerloopCallback();
    // Set static field: static private System.Boolean s_RegisteredPlayerloopCallback
    static void _set_s_RegisteredPlayerloopCallback(bool value);
    // Get static field: static private System.Collections.Generic.List`1<UnityEngine.UIElements.Panel> s_SortedRuntimePanels
    static ::System::Collections::Generic::List_1<::UnityEngine::UIElements::Panel*>* _get_s_SortedRuntimePanels();
    // Set static field: static private System.Collections.Generic.List`1<UnityEngine.UIElements.Panel> s_SortedRuntimePanels
    static void _set_s_SortedRuntimePanels(::System::Collections::Generic::List_1<::UnityEngine::UIElements::Panel*>* value);
    // Get static field: static private System.Boolean s_PanelOrderingDirty
    static bool _get_s_PanelOrderingDirty();
    // Set static field: static private System.Boolean s_PanelOrderingDirty
    static void _set_s_PanelOrderingDirty(bool value);
    // Get static field: static System.Int32 s_ResolvedSortingIndexMax
    static int _get_s_ResolvedSortingIndexMax();
    // Set static field: static System.Int32 s_ResolvedSortingIndexMax
    static void _set_s_ResolvedSortingIndexMax(int value);
    // Get static field: static readonly System.String s_RepaintProfilerMarkerName
    static ::StringW _get_s_RepaintProfilerMarkerName();
    // Set static field: static readonly System.String s_RepaintProfilerMarkerName
    static void _set_s_RepaintProfilerMarkerName(::StringW value);
    // Get static field: static private readonly Unity.Profiling.ProfilerMarker s_RepaintProfilerMarker
    static ::Unity::Profiling::ProfilerMarker _get_s_RepaintProfilerMarker();
    // Set static field: static private readonly Unity.Profiling.ProfilerMarker s_RepaintProfilerMarker
    static void _set_s_RepaintProfilerMarker(::Unity::Profiling::ProfilerMarker value);
    // Get static field: static private System.Int32 currentOverlayIndex
    static int _get_currentOverlayIndex();
    // Set static field: static private System.Int32 currentOverlayIndex
    static void _set_currentOverlayIndex(int value);
    // Get static field: static private UnityEngine.Object <activeEventSystem>k__BackingField
    static ::UnityEngine::Object* _get_$activeEventSystem$k__BackingField();
    // Set static field: static private UnityEngine.Object <activeEventSystem>k__BackingField
    static void _set_$activeEventSystem$k__BackingField(::UnityEngine::Object* value);
    // Get static field: static private UnityEngine.UIElements.DefaultEventSystem s_DefaultEventSystem
    static ::UnityEngine::UIElements::DefaultEventSystem* _get_s_DefaultEventSystem();
    // Set static field: static private UnityEngine.UIElements.DefaultEventSystem s_DefaultEventSystem
    static void _set_s_DefaultEventSystem(::UnityEngine::UIElements::DefaultEventSystem* value);
    // Get static field: static private System.Collections.Generic.List`1<UnityEngine.UIElements.PanelSettings> s_PotentiallyEmptyPanelSettings
    static ::System::Collections::Generic::List_1<::UnityEngine::UIElements::PanelSettings*>* _get_s_PotentiallyEmptyPanelSettings();
    // Set static field: static private System.Collections.Generic.List`1<UnityEngine.UIElements.PanelSettings> s_PotentiallyEmptyPanelSettings
    static void _set_s_PotentiallyEmptyPanelSettings(::System::Collections::Generic::List_1<::UnityEngine::UIElements::PanelSettings*>* value);
    // static public System.Void add_onCreatePanel(System.Action`1<UnityEngine.UIElements.BaseRuntimePanel> value)
    // Offset: 0x56BE7E8
    static void add_onCreatePanel(::System::Action_1<::UnityEngine::UIElements::BaseRuntimePanel*>* value);
    // static public System.Void remove_onCreatePanel(System.Action`1<UnityEngine.UIElements.BaseRuntimePanel> value)
    // Offset: 0x56BE8D8
    static void remove_onCreatePanel(::System::Action_1<::UnityEngine::UIElements::BaseRuntimePanel*>* value);
    // static private System.Void .cctor()
    // Offset: 0x56BE9C8
    static void _cctor();
    // static public UnityEngine.UIElements.EventBase CreateEvent(UnityEngine.Event systemEvent)
    // Offset: 0x56BED40
    static ::UnityEngine::UIElements::EventBase* CreateEvent(::UnityEngine::Event* systemEvent);
    // static public UnityEngine.UIElements.BaseRuntimePanel FindOrCreateRuntimePanel(UnityEngine.ScriptableObject ownerObject, UnityEngine.UIElements.UIElementsRuntimeUtility/CreateRuntimePanelDelegate createDelegate)
    // Offset: 0x56BF0A8
    static ::UnityEngine::UIElements::BaseRuntimePanel* FindOrCreateRuntimePanel(::UnityEngine::ScriptableObject* ownerObject, ::UnityEngine::UIElements::UIElementsRuntimeUtility::CreateRuntimePanelDelegate* createDelegate);
    // static public System.Void DisposeRuntimePanel(UnityEngine.ScriptableObject ownerObject)
    // Offset: 0x56BF52C
    static void DisposeRuntimePanel(::UnityEngine::ScriptableObject* ownerObject);
    // static private System.Void RegisterCachedPanelInternal(System.Int32 instanceID, UnityEngine.UIElements.IPanel panel)
    // Offset: 0x56BF408
    static void RegisterCachedPanelInternal(int instanceID, ::UnityEngine::UIElements::IPanel* panel);
    // static private System.Void RemoveCachedPanelInternal(System.Int32 instanceID)
    // Offset: 0x56BF2D8
    static void RemoveCachedPanelInternal(int instanceID);
    // static public System.Void RepaintOverlayPanel(UnityEngine.UIElements.BaseRuntimePanel panel)
    // Offset: 0x56BF958
    static void RepaintOverlayPanel(::UnityEngine::UIElements::BaseRuntimePanel* panel);
    // static System.Void BeginRenderOverlays(System.Int32 displayIndex)
    // Offset: 0x56BFAC8
    static void BeginRenderOverlays(int displayIndex);
    // static System.Void RenderOverlaysBeforePriority(System.Int32 displayIndex, System.Single maxPriority)
    // Offset: 0x56BFB20
    static void RenderOverlaysBeforePriority(int displayIndex, float maxPriority);
    // static System.Void EndRenderOverlays(System.Int32 displayIndex)
    // Offset: 0x56BFD58
    static void EndRenderOverlays(int displayIndex);
    // static UnityEngine.Object get_activeEventSystem()
    // Offset: 0x56BFDC8
    static ::UnityEngine::Object* get_activeEventSystem();
    // static private System.Void set_activeEventSystem(UnityEngine.Object value)
    // Offset: 0x56BFE20
    static void set_activeEventSystem(::UnityEngine::Object* value);
    // static System.Boolean get_useDefaultEventSystem()
    // Offset: 0x56BFE80
    static bool get_useDefaultEventSystem();
    // static public System.Void RegisterEventSystem(UnityEngine.Object eventSystem)
    // Offset: 0x56BFF3C
    static void RegisterEventSystem(::UnityEngine::Object* eventSystem);
    // static public System.Void UnregisterEventSystem(UnityEngine.Object eventSystem)
    // Offset: 0x56C0158
    static void UnregisterEventSystem(::UnityEngine::Object* eventSystem);
    // static UnityEngine.UIElements.DefaultEventSystem get_defaultEventSystem()
    // Offset: 0x56C027C
    static ::UnityEngine::UIElements::DefaultEventSystem* get_defaultEventSystem();
    // static public System.Void UpdateRuntimePanels()
    // Offset: 0x56C0328
    static void UpdateRuntimePanels();
    // static System.Void MarkPotentiallyEmpty(UnityEngine.UIElements.PanelSettings settings)
    // Offset: 0x56C075C
    static void MarkPotentiallyEmpty(::UnityEngine::UIElements::PanelSettings* settings);
    // static System.Void RemoveUnusedPanels()
    // Offset: 0x56C0558
    static void RemoveUnusedPanels();
    // static public System.Void RegisterPlayerloopCallback()
    // Offset: 0x56BF68C
    static void RegisterPlayerloopCallback();
    // static public System.Void UnregisterPlayerloopCallback()
    // Offset: 0x56BF904
    static void UnregisterPlayerloopCallback();
    // static System.Void SetPanelOrderingDirty()
    // Offset: 0x56C0880
    static void SetPanelOrderingDirty();
    // static System.Collections.Generic.List`1<UnityEngine.UIElements.Panel> GetSortedPlayerPanels()
    // Offset: 0x56BFCD0
    static ::System::Collections::Generic::List_1<::UnityEngine::UIElements::Panel*>* GetSortedPlayerPanels();
    // static private System.Void SortPanels()
    // Offset: 0x56C08DC
    static void SortPanels();
    // static UnityEngine.Vector2 MultiDisplayBottomLeftToPanelPosition(UnityEngine.Vector2 position, out System.Nullable`1<System.Int32> targetDisplay)
    // Offset: 0x56C0B68
    static ::UnityEngine::Vector2 MultiDisplayBottomLeftToPanelPosition(::UnityEngine::Vector2 position, ByRef<::System::Nullable_1<int>> targetDisplay);
    // static UnityEngine.Vector2 MultiDisplayToLocalScreenPosition(UnityEngine.Vector2 position, out System.Nullable`1<System.Int32> targetDisplay)
    // Offset: 0x56C0BE8
    static ::UnityEngine::Vector2 MultiDisplayToLocalScreenPosition(::UnityEngine::Vector2 position, ByRef<::System::Nullable_1<int>> targetDisplay);
    // static UnityEngine.Vector2 ScreenBottomLeftToPanelPosition(UnityEngine.Vector2 position, System.Int32 targetDisplay)
    // Offset: 0x56C0D3C
    static ::UnityEngine::Vector2 ScreenBottomLeftToPanelPosition(::UnityEngine::Vector2 position, int targetDisplay);
    // static UnityEngine.Vector2 ScreenBottomLeftToPanelDelta(UnityEngine.Vector2 delta)
    // Offset: 0x56C0E20
    static ::UnityEngine::Vector2 ScreenBottomLeftToPanelDelta(::UnityEngine::Vector2 delta);
  }; // UnityEngine.UIElements.UIElementsRuntimeUtility
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::UIElements::UIElementsRuntimeUtility::add_onCreatePanel
// Il2CppName: add_onCreatePanel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::Action_1<::UnityEngine::UIElements::BaseRuntimePanel*>*)>(&UnityEngine::UIElements::UIElementsRuntimeUtility::add_onCreatePanel)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "BaseRuntimePanel")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::UIElementsRuntimeUtility*), "add_onCreatePanel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::UIElementsRuntimeUtility::remove_onCreatePanel
// Il2CppName: remove_onCreatePanel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::Action_1<::UnityEngine::UIElements::BaseRuntimePanel*>*)>(&UnityEngine::UIElements::UIElementsRuntimeUtility::remove_onCreatePanel)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "BaseRuntimePanel")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::UIElementsRuntimeUtility*), "remove_onCreatePanel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::UIElementsRuntimeUtility::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&UnityEngine::UIElements::UIElementsRuntimeUtility::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::UIElementsRuntimeUtility*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::UIElementsRuntimeUtility::CreateEvent
// Il2CppName: CreateEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::EventBase* (*)(::UnityEngine::Event*)>(&UnityEngine::UIElements::UIElementsRuntimeUtility::CreateEvent)> {
  static const MethodInfo* get() {
    static auto* systemEvent = &::il2cpp_utils::GetClassFromName("UnityEngine", "Event")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::UIElementsRuntimeUtility*), "CreateEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{systemEvent});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::UIElementsRuntimeUtility::FindOrCreateRuntimePanel
// Il2CppName: FindOrCreateRuntimePanel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::BaseRuntimePanel* (*)(::UnityEngine::ScriptableObject*, ::UnityEngine::UIElements::UIElementsRuntimeUtility::CreateRuntimePanelDelegate*)>(&UnityEngine::UIElements::UIElementsRuntimeUtility::FindOrCreateRuntimePanel)> {
  static const MethodInfo* get() {
    static auto* ownerObject = &::il2cpp_utils::GetClassFromName("UnityEngine", "ScriptableObject")->byval_arg;
    static auto* createDelegate = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "UIElementsRuntimeUtility/CreateRuntimePanelDelegate")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::UIElementsRuntimeUtility*), "FindOrCreateRuntimePanel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ownerObject, createDelegate});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::UIElementsRuntimeUtility::DisposeRuntimePanel
// Il2CppName: DisposeRuntimePanel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::ScriptableObject*)>(&UnityEngine::UIElements::UIElementsRuntimeUtility::DisposeRuntimePanel)> {
  static const MethodInfo* get() {
    static auto* ownerObject = &::il2cpp_utils::GetClassFromName("UnityEngine", "ScriptableObject")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::UIElementsRuntimeUtility*), "DisposeRuntimePanel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ownerObject});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::UIElementsRuntimeUtility::RegisterCachedPanelInternal
// Il2CppName: RegisterCachedPanelInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int, ::UnityEngine::UIElements::IPanel*)>(&UnityEngine::UIElements::UIElementsRuntimeUtility::RegisterCachedPanelInternal)> {
  static const MethodInfo* get() {
    static auto* instanceID = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* panel = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "IPanel")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::UIElementsRuntimeUtility*), "RegisterCachedPanelInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{instanceID, panel});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::UIElementsRuntimeUtility::RemoveCachedPanelInternal
// Il2CppName: RemoveCachedPanelInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int)>(&UnityEngine::UIElements::UIElementsRuntimeUtility::RemoveCachedPanelInternal)> {
  static const MethodInfo* get() {
    static auto* instanceID = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::UIElementsRuntimeUtility*), "RemoveCachedPanelInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{instanceID});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::UIElementsRuntimeUtility::RepaintOverlayPanel
// Il2CppName: RepaintOverlayPanel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::UIElements::BaseRuntimePanel*)>(&UnityEngine::UIElements::UIElementsRuntimeUtility::RepaintOverlayPanel)> {
  static const MethodInfo* get() {
    static auto* panel = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "BaseRuntimePanel")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::UIElementsRuntimeUtility*), "RepaintOverlayPanel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{panel});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::UIElementsRuntimeUtility::BeginRenderOverlays
// Il2CppName: BeginRenderOverlays
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int)>(&UnityEngine::UIElements::UIElementsRuntimeUtility::BeginRenderOverlays)> {
  static const MethodInfo* get() {
    static auto* displayIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::UIElementsRuntimeUtility*), "BeginRenderOverlays", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{displayIndex});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::UIElementsRuntimeUtility::RenderOverlaysBeforePriority
// Il2CppName: RenderOverlaysBeforePriority
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int, float)>(&UnityEngine::UIElements::UIElementsRuntimeUtility::RenderOverlaysBeforePriority)> {
  static const MethodInfo* get() {
    static auto* displayIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* maxPriority = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::UIElementsRuntimeUtility*), "RenderOverlaysBeforePriority", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{displayIndex, maxPriority});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::UIElementsRuntimeUtility::EndRenderOverlays
// Il2CppName: EndRenderOverlays
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int)>(&UnityEngine::UIElements::UIElementsRuntimeUtility::EndRenderOverlays)> {
  static const MethodInfo* get() {
    static auto* displayIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::UIElementsRuntimeUtility*), "EndRenderOverlays", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{displayIndex});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::UIElementsRuntimeUtility::get_activeEventSystem
// Il2CppName: get_activeEventSystem
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Object* (*)()>(&UnityEngine::UIElements::UIElementsRuntimeUtility::get_activeEventSystem)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::UIElementsRuntimeUtility*), "get_activeEventSystem", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::UIElementsRuntimeUtility::set_activeEventSystem
// Il2CppName: set_activeEventSystem
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::Object*)>(&UnityEngine::UIElements::UIElementsRuntimeUtility::set_activeEventSystem)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::UIElementsRuntimeUtility*), "set_activeEventSystem", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::UIElementsRuntimeUtility::get_useDefaultEventSystem
// Il2CppName: get_useDefaultEventSystem
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&UnityEngine::UIElements::UIElementsRuntimeUtility::get_useDefaultEventSystem)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::UIElementsRuntimeUtility*), "get_useDefaultEventSystem", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::UIElementsRuntimeUtility::RegisterEventSystem
// Il2CppName: RegisterEventSystem
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::Object*)>(&UnityEngine::UIElements::UIElementsRuntimeUtility::RegisterEventSystem)> {
  static const MethodInfo* get() {
    static auto* eventSystem = &::il2cpp_utils::GetClassFromName("UnityEngine", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::UIElementsRuntimeUtility*), "RegisterEventSystem", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{eventSystem});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::UIElementsRuntimeUtility::UnregisterEventSystem
// Il2CppName: UnregisterEventSystem
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::Object*)>(&UnityEngine::UIElements::UIElementsRuntimeUtility::UnregisterEventSystem)> {
  static const MethodInfo* get() {
    static auto* eventSystem = &::il2cpp_utils::GetClassFromName("UnityEngine", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::UIElementsRuntimeUtility*), "UnregisterEventSystem", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{eventSystem});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::UIElementsRuntimeUtility::get_defaultEventSystem
// Il2CppName: get_defaultEventSystem
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::DefaultEventSystem* (*)()>(&UnityEngine::UIElements::UIElementsRuntimeUtility::get_defaultEventSystem)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::UIElementsRuntimeUtility*), "get_defaultEventSystem", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::UIElementsRuntimeUtility::UpdateRuntimePanels
// Il2CppName: UpdateRuntimePanels
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&UnityEngine::UIElements::UIElementsRuntimeUtility::UpdateRuntimePanels)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::UIElementsRuntimeUtility*), "UpdateRuntimePanels", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::UIElementsRuntimeUtility::MarkPotentiallyEmpty
// Il2CppName: MarkPotentiallyEmpty
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::UIElements::PanelSettings*)>(&UnityEngine::UIElements::UIElementsRuntimeUtility::MarkPotentiallyEmpty)> {
  static const MethodInfo* get() {
    static auto* settings = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "PanelSettings")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::UIElementsRuntimeUtility*), "MarkPotentiallyEmpty", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{settings});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::UIElementsRuntimeUtility::RemoveUnusedPanels
// Il2CppName: RemoveUnusedPanels
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&UnityEngine::UIElements::UIElementsRuntimeUtility::RemoveUnusedPanels)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::UIElementsRuntimeUtility*), "RemoveUnusedPanels", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::UIElementsRuntimeUtility::RegisterPlayerloopCallback
// Il2CppName: RegisterPlayerloopCallback
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&UnityEngine::UIElements::UIElementsRuntimeUtility::RegisterPlayerloopCallback)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::UIElementsRuntimeUtility*), "RegisterPlayerloopCallback", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::UIElementsRuntimeUtility::UnregisterPlayerloopCallback
// Il2CppName: UnregisterPlayerloopCallback
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&UnityEngine::UIElements::UIElementsRuntimeUtility::UnregisterPlayerloopCallback)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::UIElementsRuntimeUtility*), "UnregisterPlayerloopCallback", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::UIElementsRuntimeUtility::SetPanelOrderingDirty
// Il2CppName: SetPanelOrderingDirty
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&UnityEngine::UIElements::UIElementsRuntimeUtility::SetPanelOrderingDirty)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::UIElementsRuntimeUtility*), "SetPanelOrderingDirty", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::UIElementsRuntimeUtility::GetSortedPlayerPanels
// Il2CppName: GetSortedPlayerPanels
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::List_1<::UnityEngine::UIElements::Panel*>* (*)()>(&UnityEngine::UIElements::UIElementsRuntimeUtility::GetSortedPlayerPanels)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::UIElementsRuntimeUtility*), "GetSortedPlayerPanels", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::UIElementsRuntimeUtility::SortPanels
// Il2CppName: SortPanels
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&UnityEngine::UIElements::UIElementsRuntimeUtility::SortPanels)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::UIElementsRuntimeUtility*), "SortPanels", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::UIElementsRuntimeUtility::MultiDisplayBottomLeftToPanelPosition
// Il2CppName: MultiDisplayBottomLeftToPanelPosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector2 (*)(::UnityEngine::Vector2, ByRef<::System::Nullable_1<int>>)>(&UnityEngine::UIElements::UIElementsRuntimeUtility::MultiDisplayBottomLeftToPanelPosition)> {
  static const MethodInfo* get() {
    static auto* position = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector2")->byval_arg;
    static auto* targetDisplay = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Nullable`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Int32")})->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::UIElementsRuntimeUtility*), "MultiDisplayBottomLeftToPanelPosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{position, targetDisplay});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::UIElementsRuntimeUtility::MultiDisplayToLocalScreenPosition
// Il2CppName: MultiDisplayToLocalScreenPosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector2 (*)(::UnityEngine::Vector2, ByRef<::System::Nullable_1<int>>)>(&UnityEngine::UIElements::UIElementsRuntimeUtility::MultiDisplayToLocalScreenPosition)> {
  static const MethodInfo* get() {
    static auto* position = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector2")->byval_arg;
    static auto* targetDisplay = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Nullable`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Int32")})->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::UIElementsRuntimeUtility*), "MultiDisplayToLocalScreenPosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{position, targetDisplay});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::UIElementsRuntimeUtility::ScreenBottomLeftToPanelPosition
// Il2CppName: ScreenBottomLeftToPanelPosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector2 (*)(::UnityEngine::Vector2, int)>(&UnityEngine::UIElements::UIElementsRuntimeUtility::ScreenBottomLeftToPanelPosition)> {
  static const MethodInfo* get() {
    static auto* position = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector2")->byval_arg;
    static auto* targetDisplay = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::UIElementsRuntimeUtility*), "ScreenBottomLeftToPanelPosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{position, targetDisplay});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::UIElementsRuntimeUtility::ScreenBottomLeftToPanelDelta
// Il2CppName: ScreenBottomLeftToPanelDelta
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector2 (*)(::UnityEngine::Vector2)>(&UnityEngine::UIElements::UIElementsRuntimeUtility::ScreenBottomLeftToPanelDelta)> {
  static const MethodInfo* get() {
    static auto* delta = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector2")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::UIElementsRuntimeUtility*), "ScreenBottomLeftToPanelDelta", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{delta});
  }
};
