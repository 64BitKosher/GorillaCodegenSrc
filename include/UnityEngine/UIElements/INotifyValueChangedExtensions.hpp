// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::UIElements
namespace UnityEngine::UIElements {
  // Forward declaring type: INotifyValueChanged`1<T>
  template<typename T>
  class INotifyValueChanged_1;
  // Forward declaring type: EventCallback`1<TEventType>
  template<typename TEventType>
  class EventCallback_1;
  // Forward declaring type: ChangeEvent`1<T>
  template<typename T>
  class ChangeEvent_1;
}
// Completed forward declares
// Type namespace: UnityEngine.UIElements
namespace UnityEngine::UIElements {
  // Forward declaring type: INotifyValueChangedExtensions
  class INotifyValueChangedExtensions;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::UIElements::INotifyValueChangedExtensions);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::UIElements::INotifyValueChangedExtensions*, "UnityEngine.UIElements", "INotifyValueChangedExtensions");
// Type namespace: UnityEngine.UIElements
namespace UnityEngine::UIElements {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.UIElements.INotifyValueChangedExtensions
  // [TokenAttribute] Offset: FFFFFFFF
  // [ExtensionAttribute] Offset: FFFFFFFF
  class INotifyValueChangedExtensions : public ::Il2CppObject {
    public:
    // static public System.Boolean RegisterValueChangedCallback(UnityEngine.UIElements.INotifyValueChanged`1<T> control, UnityEngine.UIElements.EventCallback`1<UnityEngine.UIElements.ChangeEvent`1<T>> callback)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class T>
    static bool RegisterValueChangedCallback(::UnityEngine::UIElements::INotifyValueChanged_1<T>* control, ::UnityEngine::UIElements::EventCallback_1<::UnityEngine::UIElements::ChangeEvent_1<T>*>* callback) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::INotifyValueChangedExtensions::RegisterValueChangedCallback");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UIElements", "INotifyValueChangedExtensions", "RegisterValueChangedCallback", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(control), ::il2cpp_utils::ExtractType(callback)})));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}));
      return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___generic__method, control, callback);
    }
    // static public System.Boolean UnregisterValueChangedCallback(UnityEngine.UIElements.INotifyValueChanged`1<T> control, UnityEngine.UIElements.EventCallback`1<UnityEngine.UIElements.ChangeEvent`1<T>> callback)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class T>
    static bool UnregisterValueChangedCallback(::UnityEngine::UIElements::INotifyValueChanged_1<T>* control, ::UnityEngine::UIElements::EventCallback_1<::UnityEngine::UIElements::ChangeEvent_1<T>*>* callback) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::INotifyValueChangedExtensions::UnregisterValueChangedCallback");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UIElements", "INotifyValueChangedExtensions", "UnregisterValueChangedCallback", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(control), ::il2cpp_utils::ExtractType(callback)})));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}));
      return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___generic__method, control, callback);
    }
  }; // UnityEngine.UIElements.INotifyValueChangedExtensions
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::UIElements::INotifyValueChangedExtensions::RegisterValueChangedCallback
// Il2CppName: RegisterValueChangedCallback
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: UnityEngine::UIElements::INotifyValueChangedExtensions::UnregisterValueChangedCallback
// Il2CppName: UnregisterValueChangedCallback
// Cannot write MetadataGetter for generic methods!
