// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.UIElements.StyleVariable
#include "UnityEngine/UIElements/StyleVariable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Completed forward declares
// Type namespace: UnityEngine.UIElements
namespace UnityEngine::UIElements {
  // Forward declaring type: StyleVariableContext
  class StyleVariableContext;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::UIElements::StyleVariableContext);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::UIElements::StyleVariableContext*, "UnityEngine.UIElements", "StyleVariableContext");
// Type namespace: UnityEngine.UIElements
namespace UnityEngine::UIElements {
  // Size: 0x28
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.UIElements.StyleVariableContext
  // [TokenAttribute] Offset: FFFFFFFF
  class StyleVariableContext : public ::Il2CppObject {
    public:
    public:
    // private System.Int32 m_VariableHash
    // Size: 0x4
    // Offset: 0x10
    int m_VariableHash;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // Padding between fields: m_VariableHash and: m_Variables
    char __padding0[0x4] = {};
    // private System.Collections.Generic.List`1<UnityEngine.UIElements.StyleVariable> m_Variables
    // Size: 0x8
    // Offset: 0x18
    ::System::Collections::Generic::List_1<::UnityEngine::UIElements::StyleVariable>* m_Variables;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::UnityEngine::UIElements::StyleVariable>*) == 0x8);
    // private System.Collections.Generic.List`1<System.Int32> m_SortedHash
    // Size: 0x8
    // Offset: 0x20
    ::System::Collections::Generic::List_1<int>* m_SortedHash;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<int>*) == 0x8);
    public:
    // Get static field: static public readonly UnityEngine.UIElements.StyleVariableContext none
    static ::UnityEngine::UIElements::StyleVariableContext* _get_none();
    // Set static field: static public readonly UnityEngine.UIElements.StyleVariableContext none
    static void _set_none(::UnityEngine::UIElements::StyleVariableContext* value);
    // Get instance field reference: private System.Int32 m_VariableHash
    [[deprecated("Use field access instead!")]] int& dyn_m_VariableHash();
    // Get instance field reference: private System.Collections.Generic.List`1<UnityEngine.UIElements.StyleVariable> m_Variables
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::UIElements::StyleVariable>*& dyn_m_Variables();
    // Get instance field reference: private System.Collections.Generic.List`1<System.Int32> m_SortedHash
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<int>*& dyn_m_SortedHash();
    // public System.Void Add(UnityEngine.UIElements.StyleVariable sv)
    // Offset: 0x56B2888
    void Add(::UnityEngine::UIElements::StyleVariable sv);
    // public System.Void AddInitialRange(UnityEngine.UIElements.StyleVariableContext other)
    // Offset: 0x56B2A2C
    void AddInitialRange(::UnityEngine::UIElements::StyleVariableContext* other);
    // public System.Void Clear()
    // Offset: 0x56B2B24
    void Clear();
    // public System.Void .ctor()
    // Offset: 0x56B2BC0
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static StyleVariableContext* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::StyleVariableContext::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<StyleVariableContext*, creationType>()));
    }
    // public System.Void .ctor(UnityEngine.UIElements.StyleVariableContext other)
    // Offset: 0x56B2CA0
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static StyleVariableContext* New_ctor(::UnityEngine::UIElements::StyleVariableContext* other) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::StyleVariableContext::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<StyleVariableContext*, creationType>(other)));
    }
    // public System.Boolean TryFindVariable(System.String name, out UnityEngine.UIElements.StyleVariable v)
    // Offset: 0x56B2DA0
    bool TryFindVariable(::StringW name, ByRef<::UnityEngine::UIElements::StyleVariable> v);
    // public System.Int32 GetVariableHash()
    // Offset: 0x56B2E98
    int GetVariableHash();
    // static private System.Void .cctor()
    // Offset: 0x56B2EA0
    static void _cctor();
  }; // UnityEngine.UIElements.StyleVariableContext
  #pragma pack(pop)
  static check_size<sizeof(StyleVariableContext), 32 + sizeof(::System::Collections::Generic::List_1<int>*)> __UnityEngine_UIElements_StyleVariableContextSizeCheck;
  static_assert(sizeof(StyleVariableContext) == 0x28);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::UIElements::StyleVariableContext::Add
// Il2CppName: Add
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::StyleVariableContext::*)(::UnityEngine::UIElements::StyleVariable)>(&UnityEngine::UIElements::StyleVariableContext::Add)> {
  static const MethodInfo* get() {
    static auto* sv = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "StyleVariable")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::StyleVariableContext*), "Add", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sv});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::StyleVariableContext::AddInitialRange
// Il2CppName: AddInitialRange
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::StyleVariableContext::*)(::UnityEngine::UIElements::StyleVariableContext*)>(&UnityEngine::UIElements::StyleVariableContext::AddInitialRange)> {
  static const MethodInfo* get() {
    static auto* other = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "StyleVariableContext")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::StyleVariableContext*), "AddInitialRange", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{other});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::StyleVariableContext::Clear
// Il2CppName: Clear
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::StyleVariableContext::*)()>(&UnityEngine::UIElements::StyleVariableContext::Clear)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::StyleVariableContext*), "Clear", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::StyleVariableContext::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::UIElements::StyleVariableContext::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::UIElements::StyleVariableContext::TryFindVariable
// Il2CppName: TryFindVariable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::StyleVariableContext::*)(::StringW, ByRef<::UnityEngine::UIElements::StyleVariable>)>(&UnityEngine::UIElements::StyleVariableContext::TryFindVariable)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* v = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "StyleVariable")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::StyleVariableContext*), "TryFindVariable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name, v});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::StyleVariableContext::GetVariableHash
// Il2CppName: GetVariableHash
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::UIElements::StyleVariableContext::*)()>(&UnityEngine::UIElements::StyleVariableContext::GetVariableHash)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::StyleVariableContext*), "GetVariableHash", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::StyleVariableContext::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&UnityEngine::UIElements::StyleVariableContext::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::StyleVariableContext*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
