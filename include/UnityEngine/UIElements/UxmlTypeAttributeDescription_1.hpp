// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.UIElements.TypedUxmlAttributeDescription`1
#include "UnityEngine/UIElements/TypedUxmlAttributeDescription_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Type
  class Type;
}
// Forward declaring namespace: UnityEngine::UIElements
namespace UnityEngine::UIElements {
  // Forward declaring type: IUxmlAttributes
  class IUxmlAttributes;
}
// Completed forward declares
// Type namespace: UnityEngine.UIElements
namespace UnityEngine::UIElements {
  // Forward declaring type: UxmlTypeAttributeDescription`1<TBase>
  template<typename TBase>
  class UxmlTypeAttributeDescription_1;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE_GENERIC_CLASS(::UnityEngine::UIElements::UxmlTypeAttributeDescription_1, "UnityEngine.UIElements", "UxmlTypeAttributeDescription`1");
// Type namespace: UnityEngine.UIElements
namespace UnityEngine::UIElements {
  // WARNING Size may be invalid!
  // Autogenerated type: UnityEngine.UIElements.UxmlTypeAttributeDescription`1
  // [TokenAttribute] Offset: FFFFFFFF
  template<typename TBase>
  class UxmlTypeAttributeDescription_1 : public ::UnityEngine::UIElements::TypedUxmlAttributeDescription_1<::System::Type*> {
    public:
    // public System.Type GetValueFromBag(UnityEngine.UIElements.IUxmlAttributes bag, UnityEngine.UIElements.CreationContext cc)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::System::Type* GetValueFromBag(::UnityEngine::UIElements::IUxmlAttributes* bag, ::UnityEngine::UIElements::CreationContext cc) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::UxmlTypeAttributeDescription_1::GetValueFromBag");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UIElements::UxmlTypeAttributeDescription_1<TBase>*), -1));
      return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method, bag, cc);
    }
    // private System.Type ConvertValueToType(System.String v, System.Type defaultValue)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::System::Type* ConvertValueToType(::StringW v, ::System::Type* defaultValue) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::UxmlTypeAttributeDescription_1::ConvertValueToType");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConvertValueToType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(v), ::il2cpp_utils::ExtractType(defaultValue)})));
      return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method, v, defaultValue);
    }
    // private System.Type <GetValueFromBag>b__3_0(System.String s, System.Type type1)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::System::Type* $GetValueFromBag$b__3_0(::StringW s, ::System::Type* type1) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::UxmlTypeAttributeDescription_1::<GetValueFromBag>b__3_0");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetValueFromBag>b__3_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(type1)})));
      return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method, s, type1);
    }
    // public System.Void .ctor()
    // Offset: 0xFFFFFFFFFFFFFFFF
    // Implemented from: UnityEngine.UIElements.TypedUxmlAttributeDescription`1
    // Base method: System.Void TypedUxmlAttributeDescription_1::.ctor()
    // Base method: System.Void UxmlAttributeDescription::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static UxmlTypeAttributeDescription_1<TBase>* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::UxmlTypeAttributeDescription_1::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<UxmlTypeAttributeDescription_1<TBase>*, creationType>()));
    }
  }; // UnityEngine.UIElements.UxmlTypeAttributeDescription`1
  // Could not write size check! Type: UnityEngine.UIElements.UxmlTypeAttributeDescription`1 is generic, or has no fields that are valid for size checks!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
