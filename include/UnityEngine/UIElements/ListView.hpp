// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.UIElements.BaseListView
#include "UnityEngine/UIElements/BaseListView.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::UIElements
namespace UnityEngine::UIElements {
  // Skipping declaration: VisualElement because it is already included!
  // Forward declaring type: CollectionViewController
  class CollectionViewController;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Func`1<TResult>
  template<typename TResult>
  class Func_1;
  // Forward declaring type: Action`2<T1, T2>
  template<typename T1, typename T2>
  class Action_2;
  // Forward declaring type: Action`1<T>
  template<typename T>
  class Action_1;
}
// Completed forward declares
// Type namespace: UnityEngine.UIElements
namespace UnityEngine::UIElements {
  // Forward declaring type: ListView
  class ListView;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::UIElements::ListView);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::UIElements::ListView*, "UnityEngine.UIElements", "ListView");
// Type namespace: UnityEngine.UIElements
namespace UnityEngine::UIElements {
  // WARNING Size may be invalid!
  // Autogenerated type: UnityEngine.UIElements.ListView
  // [TokenAttribute] Offset: FFFFFFFF
  class ListView : public ::UnityEngine::UIElements::BaseListView {
    public:
    // Nested type: ::UnityEngine::UIElements::ListView::UxmlFactory
    class UxmlFactory;
    // Nested type: ::UnityEngine::UIElements::ListView::UxmlTraits
    class UxmlTraits;
    public:
    // private System.Func`1<UnityEngine.UIElements.VisualElement> m_MakeItem
    // Size: 0x8
    // Offset: 0x528
    ::System::Func_1<::UnityEngine::UIElements::VisualElement*>* m_MakeItem;
    // Field size check
    static_assert(sizeof(::System::Func_1<::UnityEngine::UIElements::VisualElement*>*) == 0x8);
    // private System.Action`2<UnityEngine.UIElements.VisualElement,System.Int32> m_BindItem
    // Size: 0x8
    // Offset: 0x530
    ::System::Action_2<::UnityEngine::UIElements::VisualElement*, int>* m_BindItem;
    // Field size check
    static_assert(sizeof(::System::Action_2<::UnityEngine::UIElements::VisualElement*, int>*) == 0x8);
    // private System.Action`2<UnityEngine.UIElements.VisualElement,System.Int32> <unbindItem>k__BackingField
    // Size: 0x8
    // Offset: 0x538
    ::System::Action_2<::UnityEngine::UIElements::VisualElement*, int>* unbindItem;
    // Field size check
    static_assert(sizeof(::System::Action_2<::UnityEngine::UIElements::VisualElement*, int>*) == 0x8);
    // private System.Action`1<UnityEngine.UIElements.VisualElement> <destroyItem>k__BackingField
    // Size: 0x8
    // Offset: 0x540
    ::System::Action_1<::UnityEngine::UIElements::VisualElement*>* destroyItem;
    // Field size check
    static_assert(sizeof(::System::Action_1<::UnityEngine::UIElements::VisualElement*>*) == 0x8);
    public:
    // Get instance field reference: private System.Func`1<UnityEngine.UIElements.VisualElement> m_MakeItem
    [[deprecated("Use field access instead!")]] ::System::Func_1<::UnityEngine::UIElements::VisualElement*>*& dyn_m_MakeItem();
    // Get instance field reference: private System.Action`2<UnityEngine.UIElements.VisualElement,System.Int32> m_BindItem
    [[deprecated("Use field access instead!")]] ::System::Action_2<::UnityEngine::UIElements::VisualElement*, int>*& dyn_m_BindItem();
    // Get instance field reference: private System.Action`2<UnityEngine.UIElements.VisualElement,System.Int32> <unbindItem>k__BackingField
    [[deprecated("Use field access instead!")]] ::System::Action_2<::UnityEngine::UIElements::VisualElement*, int>*& dyn_$unbindItem$k__BackingField();
    // Get instance field reference: private System.Action`1<UnityEngine.UIElements.VisualElement> <destroyItem>k__BackingField
    [[deprecated("Use field access instead!")]] ::System::Action_1<::UnityEngine::UIElements::VisualElement*>*& dyn_$destroyItem$k__BackingField();
    // public System.Func`1<UnityEngine.UIElements.VisualElement> get_makeItem()
    // Offset: 0x5615B84
    ::System::Func_1<::UnityEngine::UIElements::VisualElement*>* get_makeItem();
    // public System.Action`2<UnityEngine.UIElements.VisualElement,System.Int32> get_bindItem()
    // Offset: 0x5615B8C
    ::System::Action_2<::UnityEngine::UIElements::VisualElement*, int>* get_bindItem();
    // public System.Action`2<UnityEngine.UIElements.VisualElement,System.Int32> get_unbindItem()
    // Offset: 0x5615B94
    ::System::Action_2<::UnityEngine::UIElements::VisualElement*, int>* get_unbindItem();
    // public System.Action`1<UnityEngine.UIElements.VisualElement> get_destroyItem()
    // Offset: 0x5615B9C
    ::System::Action_1<::UnityEngine::UIElements::VisualElement*>* get_destroyItem();
    // override System.Boolean HasValidDataAndBindings()
    // Offset: 0x5615BA4
    // Implemented from: UnityEngine.UIElements.BaseVerticalCollectionView
    // Base method: System.Boolean BaseVerticalCollectionView::HasValidDataAndBindings()
    bool HasValidDataAndBindings();
    // protected override UnityEngine.UIElements.CollectionViewController CreateViewController()
    // Offset: 0x5615BE4
    // Implemented from: UnityEngine.UIElements.BaseVerticalCollectionView
    // Base method: UnityEngine.UIElements.CollectionViewController BaseVerticalCollectionView::CreateViewController()
    ::UnityEngine::UIElements::CollectionViewController* CreateViewController();
    // public System.Void .ctor()
    // Offset: 0x5615C38
    // Implemented from: UnityEngine.UIElements.BaseListView
    // Base method: System.Void BaseListView::.ctor()
    // Base method: System.Void BaseVerticalCollectionView::.ctor()
    // Base method: System.Void BindableElement::.ctor()
    // Base method: System.Void VisualElement::.ctor()
    // Base method: System.Void Focusable::.ctor()
    // Base method: System.Void CallbackEventHandler::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static ListView* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::ListView::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<ListView*, creationType>()));
    }
  }; // UnityEngine.UIElements.ListView
  // WARNING Not writing size check since size may be invalid!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::UIElements::ListView::get_makeItem
// Il2CppName: get_makeItem
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Func_1<::UnityEngine::UIElements::VisualElement*>* (UnityEngine::UIElements::ListView::*)()>(&UnityEngine::UIElements::ListView::get_makeItem)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::ListView*), "get_makeItem", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::ListView::get_bindItem
// Il2CppName: get_bindItem
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Action_2<::UnityEngine::UIElements::VisualElement*, int>* (UnityEngine::UIElements::ListView::*)()>(&UnityEngine::UIElements::ListView::get_bindItem)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::ListView*), "get_bindItem", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::ListView::get_unbindItem
// Il2CppName: get_unbindItem
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Action_2<::UnityEngine::UIElements::VisualElement*, int>* (UnityEngine::UIElements::ListView::*)()>(&UnityEngine::UIElements::ListView::get_unbindItem)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::ListView*), "get_unbindItem", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::ListView::get_destroyItem
// Il2CppName: get_destroyItem
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Action_1<::UnityEngine::UIElements::VisualElement*>* (UnityEngine::UIElements::ListView::*)()>(&UnityEngine::UIElements::ListView::get_destroyItem)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::ListView*), "get_destroyItem", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::ListView::HasValidDataAndBindings
// Il2CppName: HasValidDataAndBindings
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::ListView::*)()>(&UnityEngine::UIElements::ListView::HasValidDataAndBindings)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::ListView*), "HasValidDataAndBindings", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::ListView::CreateViewController
// Il2CppName: CreateViewController
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::CollectionViewController* (UnityEngine::UIElements::ListView::*)()>(&UnityEngine::UIElements::ListView::CreateViewController)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::ListView*), "CreateViewController", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::ListView::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
