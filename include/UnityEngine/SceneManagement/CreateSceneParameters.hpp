// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Including type: UnityEngine.SceneManagement.LocalPhysicsMode
#include "UnityEngine/SceneManagement/LocalPhysicsMode.hpp"
// Completed includes
// Type namespace: UnityEngine.SceneManagement
namespace UnityEngine::SceneManagement {
  // Forward declaring type: CreateSceneParameters
  struct CreateSceneParameters;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::SceneManagement::CreateSceneParameters, "UnityEngine.SceneManagement", "CreateSceneParameters");
// Type namespace: UnityEngine.SceneManagement
namespace UnityEngine::SceneManagement {
  // Size: 0x4
  #pragma pack(push, 1)
  // WARNING Layout: Sequential may not be correctly taken into account!
  // Autogenerated type: UnityEngine.SceneManagement.CreateSceneParameters
  // [TokenAttribute] Offset: FFFFFFFF
  struct CreateSceneParameters/*, public ::System::ValueType*/ {
    public:
    public:
    // private UnityEngine.SceneManagement.LocalPhysicsMode m_LocalPhysicsMode
    // Size: 0x4
    // Offset: 0x0
    ::UnityEngine::SceneManagement::LocalPhysicsMode m_LocalPhysicsMode;
    // Field size check
    static_assert(sizeof(::UnityEngine::SceneManagement::LocalPhysicsMode) == 0x4);
    public:
    // Creating value type constructor for type: CreateSceneParameters
    constexpr CreateSceneParameters(::UnityEngine::SceneManagement::LocalPhysicsMode m_LocalPhysicsMode_ = {}) noexcept : m_LocalPhysicsMode{m_LocalPhysicsMode_} {}
    // Creating interface conversion operator: operator ::System::ValueType
    operator ::System::ValueType() noexcept {
      return *reinterpret_cast<::System::ValueType*>(this);
    }
    // Creating conversion operator: operator ::UnityEngine::SceneManagement::LocalPhysicsMode
    constexpr operator ::UnityEngine::SceneManagement::LocalPhysicsMode() const noexcept {
      return m_LocalPhysicsMode;
    }
    // Get instance field reference: private UnityEngine.SceneManagement.LocalPhysicsMode m_LocalPhysicsMode
    [[deprecated("Use field access instead!")]] ::UnityEngine::SceneManagement::LocalPhysicsMode& dyn_m_LocalPhysicsMode();
    // public System.Void .ctor(UnityEngine.SceneManagement.LocalPhysicsMode physicsMode)
    // Offset: 0x54DC670
    // ABORTED: conflicts with another method.  CreateSceneParameters(::UnityEngine::SceneManagement::LocalPhysicsMode physicsMode);
  }; // UnityEngine.SceneManagement.CreateSceneParameters
  #pragma pack(pop)
  static check_size<sizeof(CreateSceneParameters), 0 + sizeof(::UnityEngine::SceneManagement::LocalPhysicsMode)> __UnityEngine_SceneManagement_CreateSceneParametersSizeCheck;
  static_assert(sizeof(CreateSceneParameters) == 0x4);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::SceneManagement::CreateSceneParameters::CreateSceneParameters
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
