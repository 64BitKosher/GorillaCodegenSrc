// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Vector2
  struct Vector2;
}
// Completed forward declares
// Type namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: NumericFieldDraggerUtility
  class NumericFieldDraggerUtility;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::NumericFieldDraggerUtility);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::NumericFieldDraggerUtility*, "UnityEngine", "NumericFieldDraggerUtility");
// Type namespace: UnityEngine
namespace UnityEngine {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.NumericFieldDraggerUtility
  // [TokenAttribute] Offset: FFFFFFFF
  // [MovedFromAttribute] Offset: FFFFFFFF
  class NumericFieldDraggerUtility : public ::Il2CppObject {
    public:
    // Get static field: static private System.Boolean s_UseYSign
    static bool _get_s_UseYSign();
    // Set static field: static private System.Boolean s_UseYSign
    static void _set_s_UseYSign(bool value);
    // static System.Single Acceleration(System.Boolean shiftPressed, System.Boolean altPressed)
    // Offset: 0x54BEFB0
    static float Acceleration(bool shiftPressed, bool altPressed);
    // static System.Single NiceDelta(UnityEngine.Vector2 deviceDelta, System.Single acceleration)
    // Offset: 0x54BEFD4
    static float NiceDelta(::UnityEngine::Vector2 deviceDelta, float acceleration);
    // static System.Double CalculateFloatDragSensitivity(System.Double value)
    // Offset: 0x54BF12C
    static double CalculateFloatDragSensitivity(double value);
    // static System.Double CalculateFloatDragSensitivity(System.Double value, System.Double minValue, System.Double maxValue)
    // Offset: 0x54BF1BC
    static double CalculateFloatDragSensitivity(double value, double minValue, double maxValue);
    // static System.Int64 CalculateIntDragSensitivity(System.Int64 value)
    // Offset: 0x54BF24C
    static int64_t CalculateIntDragSensitivity(int64_t value);
    // static System.UInt64 CalculateIntDragSensitivity(System.UInt64 value)
    // Offset: 0x54BF2F4
    static uint64_t CalculateIntDragSensitivity(uint64_t value);
    // static private System.Double CalculateIntDragSensitivity(System.Double value)
    // Offset: 0x54BF278
    static double CalculateIntDragSensitivity(double value);
    // static System.Int64 CalculateIntDragSensitivity(System.Int64 value, System.Int64 minValue, System.Int64 maxValue)
    // Offset: 0x54BF318
    static int64_t CalculateIntDragSensitivity(int64_t value, int64_t minValue, int64_t maxValue);
  }; // UnityEngine.NumericFieldDraggerUtility
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::NumericFieldDraggerUtility::Acceleration
// Il2CppName: Acceleration
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (*)(bool, bool)>(&UnityEngine::NumericFieldDraggerUtility::Acceleration)> {
  static const MethodInfo* get() {
    static auto* shiftPressed = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* altPressed = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::NumericFieldDraggerUtility*), "Acceleration", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{shiftPressed, altPressed});
  }
};
// Writing MetadataGetter for method: UnityEngine::NumericFieldDraggerUtility::NiceDelta
// Il2CppName: NiceDelta
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (*)(::UnityEngine::Vector2, float)>(&UnityEngine::NumericFieldDraggerUtility::NiceDelta)> {
  static const MethodInfo* get() {
    static auto* deviceDelta = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector2")->byval_arg;
    static auto* acceleration = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::NumericFieldDraggerUtility*), "NiceDelta", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{deviceDelta, acceleration});
  }
};
// Writing MetadataGetter for method: UnityEngine::NumericFieldDraggerUtility::CalculateFloatDragSensitivity
// Il2CppName: CalculateFloatDragSensitivity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<double (*)(double)>(&UnityEngine::NumericFieldDraggerUtility::CalculateFloatDragSensitivity)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Double")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::NumericFieldDraggerUtility*), "CalculateFloatDragSensitivity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::NumericFieldDraggerUtility::CalculateFloatDragSensitivity
// Il2CppName: CalculateFloatDragSensitivity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<double (*)(double, double, double)>(&UnityEngine::NumericFieldDraggerUtility::CalculateFloatDragSensitivity)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Double")->byval_arg;
    static auto* minValue = &::il2cpp_utils::GetClassFromName("System", "Double")->byval_arg;
    static auto* maxValue = &::il2cpp_utils::GetClassFromName("System", "Double")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::NumericFieldDraggerUtility*), "CalculateFloatDragSensitivity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value, minValue, maxValue});
  }
};
// Writing MetadataGetter for method: UnityEngine::NumericFieldDraggerUtility::CalculateIntDragSensitivity
// Il2CppName: CalculateIntDragSensitivity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int64_t (*)(int64_t)>(&UnityEngine::NumericFieldDraggerUtility::CalculateIntDragSensitivity)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::NumericFieldDraggerUtility*), "CalculateIntDragSensitivity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::NumericFieldDraggerUtility::CalculateIntDragSensitivity
// Il2CppName: CalculateIntDragSensitivity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t)>(&UnityEngine::NumericFieldDraggerUtility::CalculateIntDragSensitivity)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::NumericFieldDraggerUtility*), "CalculateIntDragSensitivity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::NumericFieldDraggerUtility::CalculateIntDragSensitivity
// Il2CppName: CalculateIntDragSensitivity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<double (*)(double)>(&UnityEngine::NumericFieldDraggerUtility::CalculateIntDragSensitivity)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Double")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::NumericFieldDraggerUtility*), "CalculateIntDragSensitivity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::NumericFieldDraggerUtility::CalculateIntDragSensitivity
// Il2CppName: CalculateIntDragSensitivity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int64_t (*)(int64_t, int64_t, int64_t)>(&UnityEngine::NumericFieldDraggerUtility::CalculateIntDragSensitivity)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int64")->byval_arg;
    static auto* minValue = &::il2cpp_utils::GetClassFromName("System", "Int64")->byval_arg;
    static auto* maxValue = &::il2cpp_utils::GetClassFromName("System", "Int64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::NumericFieldDraggerUtility*), "CalculateIntDragSensitivity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value, minValue, maxValue});
  }
};
