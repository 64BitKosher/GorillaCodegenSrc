// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Sprite
  class Sprite;
}
// Completed forward declares
// Type namespace: UnityEngine.U2D
namespace UnityEngine::U2D {
  // Forward declaring type: SpriteAtlas
  class SpriteAtlas;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::U2D::SpriteAtlas);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::U2D::SpriteAtlas*, "UnityEngine.U2D", "SpriteAtlas");
// Type namespace: UnityEngine.U2D
namespace UnityEngine::U2D {
  // Size: 0x18
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.U2D.SpriteAtlas
  // [TokenAttribute] Offset: FFFFFFFF
  // [NativeTypeAttribute] Offset: FFFFFFFF
  // [NativeHeaderAttribute] Offset: FFFFFFFF
  class SpriteAtlas : public ::UnityEngine::Object {
    public:
    // public System.Boolean get_isVariant()
    // Offset: 0x54D7108
    bool get_isVariant();
    // public System.String get_tag()
    // Offset: 0x54D7144
    ::StringW get_tag();
    // public System.Int32 get_spriteCount()
    // Offset: 0x54D7180
    int get_spriteCount();
    // public System.Boolean CanBindTo(UnityEngine.Sprite sprite)
    // Offset: 0x54D71BC
    bool CanBindTo(::UnityEngine::Sprite* sprite);
    // public UnityEngine.Sprite GetSprite(System.String name)
    // Offset: 0x54D7200
    ::UnityEngine::Sprite* GetSprite(::StringW name);
    // public System.Int32 GetSprites(UnityEngine.Sprite[] sprites)
    // Offset: 0x54D7244
    int GetSprites(::ArrayW<::UnityEngine::Sprite*> sprites);
    // public System.Int32 GetSprites(UnityEngine.Sprite[] sprites, System.String name)
    // Offset: 0x54D72CC
    int GetSprites(::ArrayW<::UnityEngine::Sprite*> sprites, ::StringW name);
    // private System.Int32 GetSpritesScripting(UnityEngine.Sprite[] sprites)
    // Offset: 0x54D7288
    int GetSpritesScripting(::ArrayW<::UnityEngine::Sprite*> sprites);
    // private System.Int32 GetSpritesWithNameScripting(UnityEngine.Sprite[] sprites, System.String name)
    // Offset: 0x54D7320
    int GetSpritesWithNameScripting(::ArrayW<::UnityEngine::Sprite*> sprites, ::StringW name);
    // public System.Void .ctor()
    // Offset: 0x54D7374
    // Implemented from: UnityEngine.Object
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static SpriteAtlas* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::U2D::SpriteAtlas::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<SpriteAtlas*, creationType>()));
    }
  }; // UnityEngine.U2D.SpriteAtlas
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::U2D::SpriteAtlas::get_isVariant
// Il2CppName: get_isVariant
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::U2D::SpriteAtlas::*)()>(&UnityEngine::U2D::SpriteAtlas::get_isVariant)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::U2D::SpriteAtlas*), "get_isVariant", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::U2D::SpriteAtlas::get_tag
// Il2CppName: get_tag
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (UnityEngine::U2D::SpriteAtlas::*)()>(&UnityEngine::U2D::SpriteAtlas::get_tag)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::U2D::SpriteAtlas*), "get_tag", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::U2D::SpriteAtlas::get_spriteCount
// Il2CppName: get_spriteCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::U2D::SpriteAtlas::*)()>(&UnityEngine::U2D::SpriteAtlas::get_spriteCount)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::U2D::SpriteAtlas*), "get_spriteCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::U2D::SpriteAtlas::CanBindTo
// Il2CppName: CanBindTo
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::U2D::SpriteAtlas::*)(::UnityEngine::Sprite*)>(&UnityEngine::U2D::SpriteAtlas::CanBindTo)> {
  static const MethodInfo* get() {
    static auto* sprite = &::il2cpp_utils::GetClassFromName("UnityEngine", "Sprite")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::U2D::SpriteAtlas*), "CanBindTo", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sprite});
  }
};
// Writing MetadataGetter for method: UnityEngine::U2D::SpriteAtlas::GetSprite
// Il2CppName: GetSprite
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Sprite* (UnityEngine::U2D::SpriteAtlas::*)(::StringW)>(&UnityEngine::U2D::SpriteAtlas::GetSprite)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::U2D::SpriteAtlas*), "GetSprite", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name});
  }
};
// Writing MetadataGetter for method: UnityEngine::U2D::SpriteAtlas::GetSprites
// Il2CppName: GetSprites
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::U2D::SpriteAtlas::*)(::ArrayW<::UnityEngine::Sprite*>)>(&UnityEngine::U2D::SpriteAtlas::GetSprites)> {
  static const MethodInfo* get() {
    static auto* sprites = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("UnityEngine", "Sprite"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::U2D::SpriteAtlas*), "GetSprites", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sprites});
  }
};
// Writing MetadataGetter for method: UnityEngine::U2D::SpriteAtlas::GetSprites
// Il2CppName: GetSprites
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::U2D::SpriteAtlas::*)(::ArrayW<::UnityEngine::Sprite*>, ::StringW)>(&UnityEngine::U2D::SpriteAtlas::GetSprites)> {
  static const MethodInfo* get() {
    static auto* sprites = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("UnityEngine", "Sprite"), 1)->byval_arg;
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::U2D::SpriteAtlas*), "GetSprites", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sprites, name});
  }
};
// Writing MetadataGetter for method: UnityEngine::U2D::SpriteAtlas::GetSpritesScripting
// Il2CppName: GetSpritesScripting
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::U2D::SpriteAtlas::*)(::ArrayW<::UnityEngine::Sprite*>)>(&UnityEngine::U2D::SpriteAtlas::GetSpritesScripting)> {
  static const MethodInfo* get() {
    static auto* sprites = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("UnityEngine", "Sprite"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::U2D::SpriteAtlas*), "GetSpritesScripting", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sprites});
  }
};
// Writing MetadataGetter for method: UnityEngine::U2D::SpriteAtlas::GetSpritesWithNameScripting
// Il2CppName: GetSpritesWithNameScripting
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::U2D::SpriteAtlas::*)(::ArrayW<::UnityEngine::Sprite*>, ::StringW)>(&UnityEngine::U2D::SpriteAtlas::GetSpritesWithNameScripting)> {
  static const MethodInfo* get() {
    static auto* sprites = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("UnityEngine", "Sprite"), 1)->byval_arg;
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::U2D::SpriteAtlas*), "GetSpritesWithNameScripting", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sprites, name});
  }
};
// Writing MetadataGetter for method: UnityEngine::U2D::SpriteAtlas::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
