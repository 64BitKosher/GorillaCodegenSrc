// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Texture2D
  class Texture2D;
  // Forward declaring type: Vector2
  struct Vector2;
  // Forward declaring type: CursorMode
  struct CursorMode;
  // Forward declaring type: CursorLockMode
  struct CursorLockMode;
}
// Completed forward declares
// Type namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Cursor
  class Cursor;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::Cursor);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::Cursor*, "UnityEngine", "Cursor");
// Type namespace: UnityEngine
namespace UnityEngine {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.Cursor
  // [TokenAttribute] Offset: FFFFFFFF
  // [NativeHeaderAttribute] Offset: FFFFFFFF
  class Cursor : public ::Il2CppObject {
    public:
    // static public System.Void SetCursor(UnityEngine.Texture2D texture, UnityEngine.Vector2 hotspot, UnityEngine.CursorMode cursorMode)
    // Offset: 0x54B37CC
    static void SetCursor(::UnityEngine::Texture2D* texture, ::UnityEngine::Vector2 hotspot, ::UnityEngine::CursorMode cursorMode);
    // static public System.Void set_visible(System.Boolean value)
    // Offset: 0x54B3878
    static void set_visible(bool value);
    // static public UnityEngine.CursorLockMode get_lockState()
    // Offset: 0x54B38B4
    static ::UnityEngine::CursorLockMode get_lockState();
    // static public System.Void set_lockState(UnityEngine.CursorLockMode value)
    // Offset: 0x54B38DC
    static void set_lockState(::UnityEngine::CursorLockMode value);
    // static private System.Void SetCursor_Injected(UnityEngine.Texture2D texture, ref UnityEngine.Vector2 hotspot, UnityEngine.CursorMode cursorMode)
    // Offset: 0x54B3824
    static void SetCursor_Injected(::UnityEngine::Texture2D* texture, ByRef<::UnityEngine::Vector2> hotspot, ::UnityEngine::CursorMode cursorMode);
  }; // UnityEngine.Cursor
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::Cursor::SetCursor
// Il2CppName: SetCursor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::Texture2D*, ::UnityEngine::Vector2, ::UnityEngine::CursorMode)>(&UnityEngine::Cursor::SetCursor)> {
  static const MethodInfo* get() {
    static auto* texture = &::il2cpp_utils::GetClassFromName("UnityEngine", "Texture2D")->byval_arg;
    static auto* hotspot = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector2")->byval_arg;
    static auto* cursorMode = &::il2cpp_utils::GetClassFromName("UnityEngine", "CursorMode")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Cursor*), "SetCursor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{texture, hotspot, cursorMode});
  }
};
// Writing MetadataGetter for method: UnityEngine::Cursor::set_visible
// Il2CppName: set_visible
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(bool)>(&UnityEngine::Cursor::set_visible)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Cursor*), "set_visible", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Cursor::get_lockState
// Il2CppName: get_lockState
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::CursorLockMode (*)()>(&UnityEngine::Cursor::get_lockState)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Cursor*), "get_lockState", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Cursor::set_lockState
// Il2CppName: set_lockState
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::CursorLockMode)>(&UnityEngine::Cursor::set_lockState)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "CursorLockMode")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Cursor*), "set_lockState", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Cursor::SetCursor_Injected
// Il2CppName: SetCursor_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::Texture2D*, ByRef<::UnityEngine::Vector2>, ::UnityEngine::CursorMode)>(&UnityEngine::Cursor::SetCursor_Injected)> {
  static const MethodInfo* get() {
    static auto* texture = &::il2cpp_utils::GetClassFromName("UnityEngine", "Texture2D")->byval_arg;
    static auto* hotspot = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector2")->this_arg;
    static auto* cursorMode = &::il2cpp_utils::GetClassFromName("UnityEngine", "CursorMode")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Cursor*), "SetCursor_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{texture, hotspot, cursorMode});
  }
};
