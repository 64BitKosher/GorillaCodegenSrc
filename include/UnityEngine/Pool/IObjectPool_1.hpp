// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Type namespace: UnityEngine.Pool
namespace UnityEngine::Pool {
  // Forward declaring type: IObjectPool`1<T>
  template<typename T>
  class IObjectPool_1;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE_GENERIC_CLASS(::UnityEngine::Pool::IObjectPool_1, "UnityEngine.Pool", "IObjectPool`1");
// Type namespace: UnityEngine.Pool
namespace UnityEngine::Pool {
  // WARNING Size may be invalid!
  // Autogenerated type: UnityEngine.Pool.IObjectPool`1
  // [TokenAttribute] Offset: FFFFFFFF
  template<typename T>
  class IObjectPool_1 {
    public:
    // public System.Void Release(T element)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void Release(T element) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Pool::IObjectPool_1::Release");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Pool::IObjectPool_1<T>*), -1));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, element);
    }
  }; // UnityEngine.Pool.IObjectPool`1
  // Could not write size check! Type: UnityEngine.Pool.IObjectPool`1 is generic, or has no fields that are valid for size checks!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
