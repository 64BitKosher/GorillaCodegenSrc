// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.Pool.PooledObject`1
#include "UnityEngine/Pool/PooledObject_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::Pool
namespace UnityEngine::Pool {
  // Skipping declaration: <>c because it is already included!
  // Forward declaring type: ObjectPool`1<T>
  template<typename T>
  class ObjectPool_1;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: ICollection`1<T>
  template<typename T>
  class ICollection_1;
}
// Completed forward declares
// Type namespace: UnityEngine.Pool
namespace UnityEngine::Pool {
  // Forward declaring type: CollectionPool`2<TCollection, TItem>
  template<typename TCollection, typename TItem>
  class CollectionPool_2;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE_GENERIC_CLASS(::UnityEngine::Pool::CollectionPool_2, "UnityEngine.Pool", "CollectionPool`2");
// Type namespace: UnityEngine.Pool
namespace UnityEngine::Pool {
  // WARNING Size may be invalid!
  // Autogenerated type: UnityEngine.Pool.CollectionPool`2
  // [TokenAttribute] Offset: FFFFFFFF
  template<typename TCollection, typename TItem>
  class CollectionPool_2 : public ::Il2CppObject {
    public:
    // Nested type: ::UnityEngine::Pool::CollectionPool_2::$$c<TCollection, TItem>
    class $$c;
    // WARNING Size may be invalid!
    // Autogenerated type: UnityEngine.Pool.CollectionPool`2/<>c
    // [TokenAttribute] Offset: FFFFFFFF
    // [CompilerGeneratedAttribute] Offset: FFFFFFFF
    class $$c : public ::il2cpp_utils::il2cpp_type_check::NestedType, public ::Il2CppObject {
      public:
      using declaring_type = CollectionPool_2<TCollection, TItem>*;
      static constexpr std::string_view NESTED_NAME = "<>c";
      static constexpr bool IS_VALUE_TYPE = false;
      // Autogenerated static field getter
      // Get static field: static public readonly UnityEngine.Pool.CollectionPool`2/<>c<TCollection,TItem> <>9
      static typename ::UnityEngine::Pool::CollectionPool_2<TCollection, TItem>::$$c* _get_$$9() {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Pool::CollectionPool_2::$$c::_get_$$9");
        return THROW_UNLESS((il2cpp_utils::GetFieldValue<typename ::UnityEngine::Pool::CollectionPool_2<TCollection, TItem>::$$c*>(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<typename CollectionPool_2<TCollection, TItem>::$$c*>::get(), "<>9")));
      }
      // Autogenerated static field setter
      // Set static field: static public readonly UnityEngine.Pool.CollectionPool`2/<>c<TCollection,TItem> <>9
      static void _set_$$9(typename ::UnityEngine::Pool::CollectionPool_2<TCollection, TItem>::$$c* value) {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Pool::CollectionPool_2::$$c::_set_$$9");
        THROW_UNLESS((il2cpp_utils::SetFieldValue(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<typename CollectionPool_2<TCollection, TItem>::$$c*>::get(), "<>9", value)));
      }
      // static private System.Void .cctor()
      // Offset: 0xFFFFFFFFFFFFFFFF
      static void _cctor() {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Pool::CollectionPool_2::$$c::.cctor");
        static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<typename CollectionPool_2<TCollection, TItem>::$$c*>::get(), ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
        ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
      }
      // public System.Void .ctor()
      // Offset: 0xFFFFFFFFFFFFFFFF
      template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
      static typename CollectionPool_2<TCollection, TItem>::$$c* New_ctor() {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Pool::CollectionPool_2::$$c::.ctor");
        return THROW_UNLESS((::il2cpp_utils::New<typename CollectionPool_2<TCollection, TItem>::$$c*, creationType>()));
      }
      // TCollection <.cctor>b__5_0()
      // Offset: 0xFFFFFFFFFFFFFFFF
      TCollection $_cctor$b__5_0() {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Pool::CollectionPool_2::$$c::<.cctor>b__5_0");
        static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.cctor>b__5_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
        return ::il2cpp_utils::RunMethodRethrow<TCollection, false>(this, ___internal__method);
      }
      // System.Void <.cctor>b__5_1(TCollection l)
      // Offset: 0xFFFFFFFFFFFFFFFF
      void $_cctor$b__5_1(TCollection l) {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Pool::CollectionPool_2::$$c::<.cctor>b__5_1");
        static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.cctor>b__5_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(l)})));
        ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, l);
      }
    }; // UnityEngine.Pool.CollectionPool`2/<>c
    // Could not write size check! Type: UnityEngine.Pool.CollectionPool`2/<>c is generic, or has no fields that are valid for size checks!
    // Autogenerated static field getter
    // Get static field: static readonly UnityEngine.Pool.ObjectPool`1<TCollection> s_Pool
    static ::UnityEngine::Pool::ObjectPool_1<TCollection>* _get_s_Pool() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Pool::CollectionPool_2::_get_s_Pool");
      return THROW_UNLESS((il2cpp_utils::GetFieldValue<::UnityEngine::Pool::ObjectPool_1<TCollection>*>(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<CollectionPool_2<TCollection, TItem>*>::get(), "s_Pool")));
    }
    // Autogenerated static field setter
    // Set static field: static readonly UnityEngine.Pool.ObjectPool`1<TCollection> s_Pool
    static void _set_s_Pool(::UnityEngine::Pool::ObjectPool_1<TCollection>* value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Pool::CollectionPool_2::_set_s_Pool");
      THROW_UNLESS((il2cpp_utils::SetFieldValue(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<CollectionPool_2<TCollection, TItem>*>::get(), "s_Pool", value)));
    }
    // static public TCollection Get()
    // Offset: 0xFFFFFFFFFFFFFFFF
    static TCollection Get() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Pool::CollectionPool_2::Get");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<CollectionPool_2<TCollection, TItem>*>::get(), "Get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      return ::il2cpp_utils::RunMethodRethrow<TCollection, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
    }
    // static public UnityEngine.Pool.PooledObject`1<TCollection> Get(out TCollection value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    static ::UnityEngine::Pool::PooledObject_1<TCollection> Get(ByRef<TCollection> value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Pool::CollectionPool_2::Get");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<CollectionPool_2<TCollection, TItem>*>::get(), "Get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<TCollection&>()})));
      return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Pool::PooledObject_1<TCollection>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(value));
    }
    // static public System.Void Release(TCollection toRelease)
    // Offset: 0xFFFFFFFFFFFFFFFF
    static void Release(TCollection toRelease) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Pool::CollectionPool_2::Release");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<CollectionPool_2<TCollection, TItem>*>::get(), "Release", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(toRelease)})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, toRelease);
    }
    // static private System.Void .cctor()
    // Offset: 0xFFFFFFFFFFFFFFFF
    static void _cctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Pool::CollectionPool_2::.cctor");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<CollectionPool_2<TCollection, TItem>*>::get(), ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
    }
  }; // UnityEngine.Pool.CollectionPool`2
  // Could not write size check! Type: UnityEngine.Pool.CollectionPool`2 is generic, or has no fields that are valid for size checks!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
