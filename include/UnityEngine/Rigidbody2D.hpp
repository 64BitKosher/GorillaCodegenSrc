// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.Component
#include "UnityEngine/Component.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Vector2
  struct Vector2;
  // Forward declaring type: RigidbodyType2D
  struct RigidbodyType2D;
  // Forward declaring type: RigidbodyConstraints2D
  struct RigidbodyConstraints2D;
  // Forward declaring type: RigidbodyInterpolation2D
  struct RigidbodyInterpolation2D;
  // Forward declaring type: CollisionDetectionMode2D
  struct CollisionDetectionMode2D;
  // Forward declaring type: ForceMode2D
  struct ForceMode2D;
}
// Completed forward declares
// Type namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Rigidbody2D
  class Rigidbody2D;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::Rigidbody2D);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::Rigidbody2D*, "UnityEngine", "Rigidbody2D");
// Type namespace: UnityEngine
namespace UnityEngine {
  // Size: 0x18
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.Rigidbody2D
  // [TokenAttribute] Offset: FFFFFFFF
  // [NativeHeaderAttribute] Offset: FFFFFFFF
  // [RequireComponent] Offset: FFFFFFFF
  class Rigidbody2D : public ::UnityEngine::Component {
    public:
    // public UnityEngine.Vector2 get_position()
    // Offset: 0x5526974
    ::UnityEngine::Vector2 get_position();
    // public System.Void set_position(UnityEngine.Vector2 value)
    // Offset: 0x5526A04
    void set_position(::UnityEngine::Vector2 value);
    // public System.Single get_rotation()
    // Offset: 0x5526A90
    float get_rotation();
    // public System.Void set_rotation(System.Single value)
    // Offset: 0x5526ACC
    void set_rotation(float value);
    // public System.Void MovePosition(UnityEngine.Vector2 position)
    // Offset: 0x5526B18
    void MovePosition(::UnityEngine::Vector2 position);
    // public System.Void MoveRotation(System.Single angle)
    // Offset: 0x5526BA4
    void MoveRotation(float angle);
    // private System.Void MoveRotation_Angle(System.Single angle)
    // Offset: 0x5526BF0
    void MoveRotation_Angle(float angle);
    // public UnityEngine.Vector2 get_velocity()
    // Offset: 0x5526C3C
    ::UnityEngine::Vector2 get_velocity();
    // public System.Void set_velocity(UnityEngine.Vector2 value)
    // Offset: 0x5526CCC
    void set_velocity(::UnityEngine::Vector2 value);
    // public System.Single get_angularVelocity()
    // Offset: 0x5526D58
    float get_angularVelocity();
    // public System.Void set_angularVelocity(System.Single value)
    // Offset: 0x5526D94
    void set_angularVelocity(float value);
    // public System.Single get_mass()
    // Offset: 0x5526DE0
    float get_mass();
    // public System.Void set_mass(System.Single value)
    // Offset: 0x5526E1C
    void set_mass(float value);
    // public System.Single get_drag()
    // Offset: 0x5526E68
    float get_drag();
    // public System.Void set_drag(System.Single value)
    // Offset: 0x5526EA4
    void set_drag(float value);
    // public System.Single get_angularDrag()
    // Offset: 0x5526EF0
    float get_angularDrag();
    // public System.Void set_angularDrag(System.Single value)
    // Offset: 0x5526F2C
    void set_angularDrag(float value);
    // public System.Single get_gravityScale()
    // Offset: 0x5526F78
    float get_gravityScale();
    // public System.Void set_gravityScale(System.Single value)
    // Offset: 0x5526FB4
    void set_gravityScale(float value);
    // public UnityEngine.RigidbodyType2D get_bodyType()
    // Offset: 0x5527000
    ::UnityEngine::RigidbodyType2D get_bodyType();
    // public System.Void set_bodyType(UnityEngine.RigidbodyType2D value)
    // Offset: 0x552703C
    void set_bodyType(::UnityEngine::RigidbodyType2D value);
    // public System.Boolean get_isKinematic()
    // Offset: 0x5527080
    bool get_isKinematic();
    // public System.Void set_isKinematic(System.Boolean value)
    // Offset: 0x55270C8
    void set_isKinematic(bool value);
    // public UnityEngine.RigidbodyConstraints2D get_constraints()
    // Offset: 0x5527114
    ::UnityEngine::RigidbodyConstraints2D get_constraints();
    // public System.Void set_constraints(UnityEngine.RigidbodyConstraints2D value)
    // Offset: 0x5527150
    void set_constraints(::UnityEngine::RigidbodyConstraints2D value);
    // public System.Boolean IsSleeping()
    // Offset: 0x5527194
    bool IsSleeping();
    // public System.Void Sleep()
    // Offset: 0x55271D0
    void Sleep();
    // public System.Void WakeUp()
    // Offset: 0x552720C
    void WakeUp();
    // public System.Boolean get_simulated()
    // Offset: 0x5527248
    bool get_simulated();
    // public System.Void set_simulated(System.Boolean value)
    // Offset: 0x5527284
    void set_simulated(bool value);
    // public System.Void set_interpolation(UnityEngine.RigidbodyInterpolation2D value)
    // Offset: 0x55272C8
    void set_interpolation(::UnityEngine::RigidbodyInterpolation2D value);
    // public System.Void set_collisionDetectionMode(UnityEngine.CollisionDetectionMode2D value)
    // Offset: 0x552730C
    void set_collisionDetectionMode(::UnityEngine::CollisionDetectionMode2D value);
    // public System.Void AddForce(UnityEngine.Vector2 force)
    // Offset: 0x5527350
    void AddForce(::UnityEngine::Vector2 force);
    // public System.Void AddForce(UnityEngine.Vector2 force, UnityEngine.ForceMode2D mode)
    // Offset: 0x5527358
    void AddForce(::UnityEngine::Vector2 force, ::UnityEngine::ForceMode2D mode);
    // public System.Void .ctor()
    // Offset: 0x5527404
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static Rigidbody2D* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody2D::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<Rigidbody2D*, creationType>()));
    }
    // private System.Void get_position_Injected(out UnityEngine.Vector2 ret)
    // Offset: 0x55269C0
    void get_position_Injected(ByRef<::UnityEngine::Vector2> ret);
    // private System.Void set_position_Injected(ref UnityEngine.Vector2 value)
    // Offset: 0x5526A4C
    void set_position_Injected(ByRef<::UnityEngine::Vector2> value);
    // private System.Void MovePosition_Injected(ref UnityEngine.Vector2 position)
    // Offset: 0x5526B60
    void MovePosition_Injected(ByRef<::UnityEngine::Vector2> position);
    // private System.Void get_velocity_Injected(out UnityEngine.Vector2 ret)
    // Offset: 0x5526C88
    void get_velocity_Injected(ByRef<::UnityEngine::Vector2> ret);
    // private System.Void set_velocity_Injected(ref UnityEngine.Vector2 value)
    // Offset: 0x5526D14
    void set_velocity_Injected(ByRef<::UnityEngine::Vector2> value);
    // private System.Void AddForce_Injected(ref UnityEngine.Vector2 force, UnityEngine.ForceMode2D mode)
    // Offset: 0x55273B0
    void AddForce_Injected(ByRef<::UnityEngine::Vector2> force, ::UnityEngine::ForceMode2D mode);
  }; // UnityEngine.Rigidbody2D
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::Rigidbody2D::get_position
// Il2CppName: get_position
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector2 (UnityEngine::Rigidbody2D::*)()>(&UnityEngine::Rigidbody2D::get_position)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rigidbody2D*), "get_position", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rigidbody2D::set_position
// Il2CppName: set_position
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Rigidbody2D::*)(::UnityEngine::Vector2)>(&UnityEngine::Rigidbody2D::set_position)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector2")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rigidbody2D*), "set_position", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rigidbody2D::get_rotation
// Il2CppName: get_rotation
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::Rigidbody2D::*)()>(&UnityEngine::Rigidbody2D::get_rotation)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rigidbody2D*), "get_rotation", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rigidbody2D::set_rotation
// Il2CppName: set_rotation
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Rigidbody2D::*)(float)>(&UnityEngine::Rigidbody2D::set_rotation)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rigidbody2D*), "set_rotation", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rigidbody2D::MovePosition
// Il2CppName: MovePosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Rigidbody2D::*)(::UnityEngine::Vector2)>(&UnityEngine::Rigidbody2D::MovePosition)> {
  static const MethodInfo* get() {
    static auto* position = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector2")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rigidbody2D*), "MovePosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{position});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rigidbody2D::MoveRotation
// Il2CppName: MoveRotation
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Rigidbody2D::*)(float)>(&UnityEngine::Rigidbody2D::MoveRotation)> {
  static const MethodInfo* get() {
    static auto* angle = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rigidbody2D*), "MoveRotation", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{angle});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rigidbody2D::MoveRotation_Angle
// Il2CppName: MoveRotation_Angle
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Rigidbody2D::*)(float)>(&UnityEngine::Rigidbody2D::MoveRotation_Angle)> {
  static const MethodInfo* get() {
    static auto* angle = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rigidbody2D*), "MoveRotation_Angle", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{angle});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rigidbody2D::get_velocity
// Il2CppName: get_velocity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector2 (UnityEngine::Rigidbody2D::*)()>(&UnityEngine::Rigidbody2D::get_velocity)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rigidbody2D*), "get_velocity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rigidbody2D::set_velocity
// Il2CppName: set_velocity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Rigidbody2D::*)(::UnityEngine::Vector2)>(&UnityEngine::Rigidbody2D::set_velocity)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector2")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rigidbody2D*), "set_velocity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rigidbody2D::get_angularVelocity
// Il2CppName: get_angularVelocity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::Rigidbody2D::*)()>(&UnityEngine::Rigidbody2D::get_angularVelocity)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rigidbody2D*), "get_angularVelocity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rigidbody2D::set_angularVelocity
// Il2CppName: set_angularVelocity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Rigidbody2D::*)(float)>(&UnityEngine::Rigidbody2D::set_angularVelocity)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rigidbody2D*), "set_angularVelocity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rigidbody2D::get_mass
// Il2CppName: get_mass
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::Rigidbody2D::*)()>(&UnityEngine::Rigidbody2D::get_mass)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rigidbody2D*), "get_mass", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rigidbody2D::set_mass
// Il2CppName: set_mass
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Rigidbody2D::*)(float)>(&UnityEngine::Rigidbody2D::set_mass)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rigidbody2D*), "set_mass", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rigidbody2D::get_drag
// Il2CppName: get_drag
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::Rigidbody2D::*)()>(&UnityEngine::Rigidbody2D::get_drag)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rigidbody2D*), "get_drag", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rigidbody2D::set_drag
// Il2CppName: set_drag
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Rigidbody2D::*)(float)>(&UnityEngine::Rigidbody2D::set_drag)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rigidbody2D*), "set_drag", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rigidbody2D::get_angularDrag
// Il2CppName: get_angularDrag
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::Rigidbody2D::*)()>(&UnityEngine::Rigidbody2D::get_angularDrag)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rigidbody2D*), "get_angularDrag", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rigidbody2D::set_angularDrag
// Il2CppName: set_angularDrag
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Rigidbody2D::*)(float)>(&UnityEngine::Rigidbody2D::set_angularDrag)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rigidbody2D*), "set_angularDrag", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rigidbody2D::get_gravityScale
// Il2CppName: get_gravityScale
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::Rigidbody2D::*)()>(&UnityEngine::Rigidbody2D::get_gravityScale)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rigidbody2D*), "get_gravityScale", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rigidbody2D::set_gravityScale
// Il2CppName: set_gravityScale
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Rigidbody2D::*)(float)>(&UnityEngine::Rigidbody2D::set_gravityScale)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rigidbody2D*), "set_gravityScale", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rigidbody2D::get_bodyType
// Il2CppName: get_bodyType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::RigidbodyType2D (UnityEngine::Rigidbody2D::*)()>(&UnityEngine::Rigidbody2D::get_bodyType)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rigidbody2D*), "get_bodyType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rigidbody2D::set_bodyType
// Il2CppName: set_bodyType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Rigidbody2D::*)(::UnityEngine::RigidbodyType2D)>(&UnityEngine::Rigidbody2D::set_bodyType)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "RigidbodyType2D")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rigidbody2D*), "set_bodyType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rigidbody2D::get_isKinematic
// Il2CppName: get_isKinematic
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::Rigidbody2D::*)()>(&UnityEngine::Rigidbody2D::get_isKinematic)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rigidbody2D*), "get_isKinematic", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rigidbody2D::set_isKinematic
// Il2CppName: set_isKinematic
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Rigidbody2D::*)(bool)>(&UnityEngine::Rigidbody2D::set_isKinematic)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rigidbody2D*), "set_isKinematic", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rigidbody2D::get_constraints
// Il2CppName: get_constraints
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::RigidbodyConstraints2D (UnityEngine::Rigidbody2D::*)()>(&UnityEngine::Rigidbody2D::get_constraints)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rigidbody2D*), "get_constraints", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rigidbody2D::set_constraints
// Il2CppName: set_constraints
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Rigidbody2D::*)(::UnityEngine::RigidbodyConstraints2D)>(&UnityEngine::Rigidbody2D::set_constraints)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "RigidbodyConstraints2D")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rigidbody2D*), "set_constraints", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rigidbody2D::IsSleeping
// Il2CppName: IsSleeping
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::Rigidbody2D::*)()>(&UnityEngine::Rigidbody2D::IsSleeping)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rigidbody2D*), "IsSleeping", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rigidbody2D::Sleep
// Il2CppName: Sleep
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Rigidbody2D::*)()>(&UnityEngine::Rigidbody2D::Sleep)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rigidbody2D*), "Sleep", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rigidbody2D::WakeUp
// Il2CppName: WakeUp
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Rigidbody2D::*)()>(&UnityEngine::Rigidbody2D::WakeUp)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rigidbody2D*), "WakeUp", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rigidbody2D::get_simulated
// Il2CppName: get_simulated
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::Rigidbody2D::*)()>(&UnityEngine::Rigidbody2D::get_simulated)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rigidbody2D*), "get_simulated", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rigidbody2D::set_simulated
// Il2CppName: set_simulated
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Rigidbody2D::*)(bool)>(&UnityEngine::Rigidbody2D::set_simulated)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rigidbody2D*), "set_simulated", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rigidbody2D::set_interpolation
// Il2CppName: set_interpolation
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Rigidbody2D::*)(::UnityEngine::RigidbodyInterpolation2D)>(&UnityEngine::Rigidbody2D::set_interpolation)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "RigidbodyInterpolation2D")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rigidbody2D*), "set_interpolation", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rigidbody2D::set_collisionDetectionMode
// Il2CppName: set_collisionDetectionMode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Rigidbody2D::*)(::UnityEngine::CollisionDetectionMode2D)>(&UnityEngine::Rigidbody2D::set_collisionDetectionMode)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "CollisionDetectionMode2D")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rigidbody2D*), "set_collisionDetectionMode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rigidbody2D::AddForce
// Il2CppName: AddForce
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Rigidbody2D::*)(::UnityEngine::Vector2)>(&UnityEngine::Rigidbody2D::AddForce)> {
  static const MethodInfo* get() {
    static auto* force = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector2")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rigidbody2D*), "AddForce", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{force});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rigidbody2D::AddForce
// Il2CppName: AddForce
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Rigidbody2D::*)(::UnityEngine::Vector2, ::UnityEngine::ForceMode2D)>(&UnityEngine::Rigidbody2D::AddForce)> {
  static const MethodInfo* get() {
    static auto* force = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector2")->byval_arg;
    static auto* mode = &::il2cpp_utils::GetClassFromName("UnityEngine", "ForceMode2D")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rigidbody2D*), "AddForce", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{force, mode});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rigidbody2D::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::Rigidbody2D::get_position_Injected
// Il2CppName: get_position_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Rigidbody2D::*)(ByRef<::UnityEngine::Vector2>)>(&UnityEngine::Rigidbody2D::get_position_Injected)> {
  static const MethodInfo* get() {
    static auto* ret = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector2")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rigidbody2D*), "get_position_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ret});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rigidbody2D::set_position_Injected
// Il2CppName: set_position_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Rigidbody2D::*)(ByRef<::UnityEngine::Vector2>)>(&UnityEngine::Rigidbody2D::set_position_Injected)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector2")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rigidbody2D*), "set_position_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rigidbody2D::MovePosition_Injected
// Il2CppName: MovePosition_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Rigidbody2D::*)(ByRef<::UnityEngine::Vector2>)>(&UnityEngine::Rigidbody2D::MovePosition_Injected)> {
  static const MethodInfo* get() {
    static auto* position = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector2")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rigidbody2D*), "MovePosition_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{position});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rigidbody2D::get_velocity_Injected
// Il2CppName: get_velocity_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Rigidbody2D::*)(ByRef<::UnityEngine::Vector2>)>(&UnityEngine::Rigidbody2D::get_velocity_Injected)> {
  static const MethodInfo* get() {
    static auto* ret = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector2")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rigidbody2D*), "get_velocity_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ret});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rigidbody2D::set_velocity_Injected
// Il2CppName: set_velocity_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Rigidbody2D::*)(ByRef<::UnityEngine::Vector2>)>(&UnityEngine::Rigidbody2D::set_velocity_Injected)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector2")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rigidbody2D*), "set_velocity_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rigidbody2D::AddForce_Injected
// Il2CppName: AddForce_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Rigidbody2D::*)(ByRef<::UnityEngine::Vector2>, ::UnityEngine::ForceMode2D)>(&UnityEngine::Rigidbody2D::AddForce_Injected)> {
  static const MethodInfo* get() {
    static auto* force = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector2")->this_arg;
    static auto* mode = &::il2cpp_utils::GetClassFromName("UnityEngine", "ForceMode2D")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rigidbody2D*), "AddForce_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{force, mode});
  }
};
