// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Including type: System.IEquatable`1
#include "System/IEquatable_1.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::Rendering
namespace UnityEngine::Rendering {
  // Forward declaring type: LocalKeyword
  struct LocalKeyword;
}
// Completed forward declares
// Begin il2cpp-utils forward declares
struct Il2CppObject;
// Completed il2cpp-utils forward declares
// Type namespace: UnityEngine.Rendering
namespace UnityEngine::Rendering {
  // Forward declaring type: LocalKeywordSpace
  struct LocalKeywordSpace;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::Rendering::LocalKeywordSpace, "UnityEngine.Rendering", "LocalKeywordSpace");
// Type namespace: UnityEngine.Rendering
namespace UnityEngine::Rendering {
  // Size: 0x8
  #pragma pack(push, 1)
  // WARNING Layout: Sequential may not be correctly taken into account!
  // Autogenerated type: UnityEngine.Rendering.LocalKeywordSpace
  // [TokenAttribute] Offset: FFFFFFFF
  // [NativeHeaderAttribute] Offset: FFFFFFFF
  // [IsReadOnlyAttribute] Offset: FFFFFFFF
  struct LocalKeywordSpace/*, public ::System::ValueType, public ::System::IEquatable_1<::UnityEngine::Rendering::LocalKeywordSpace>*/ {
    public:
    public:
    // private readonly System.IntPtr m_KeywordSpace
    // Size: 0x8
    // Offset: 0x0
    ::System::IntPtr m_KeywordSpace;
    // Field size check
    static_assert(sizeof(::System::IntPtr) == 0x8);
    public:
    // Creating value type constructor for type: LocalKeywordSpace
    constexpr LocalKeywordSpace(::System::IntPtr m_KeywordSpace_ = {}) noexcept : m_KeywordSpace{m_KeywordSpace_} {}
    // Creating interface conversion operator: operator ::System::ValueType
    operator ::System::ValueType() noexcept {
      return *reinterpret_cast<::System::ValueType*>(this);
    }
    // Creating interface conversion operator: operator ::System::IEquatable_1<::UnityEngine::Rendering::LocalKeywordSpace>
    operator ::System::IEquatable_1<::UnityEngine::Rendering::LocalKeywordSpace>() noexcept {
      return *reinterpret_cast<::System::IEquatable_1<::UnityEngine::Rendering::LocalKeywordSpace>*>(this);
    }
    // Creating conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept {
      return m_KeywordSpace;
    }
    // Get instance field reference: private readonly System.IntPtr m_KeywordSpace
    [[deprecated("Use field access instead!")]] ::System::IntPtr& dyn_m_KeywordSpace();
    // private UnityEngine.Rendering.LocalKeyword GetKeyword(System.String name)
    // Offset: 0x54F016C
    ::UnityEngine::Rendering::LocalKeyword GetKeyword(::StringW name);
    // public UnityEngine.Rendering.LocalKeyword FindKeyword(System.String name)
    // Offset: 0x54F0230
    ::UnityEngine::Rendering::LocalKeyword FindKeyword(::StringW name);
    // public System.Boolean Equals(UnityEngine.Rendering.LocalKeywordSpace rhs)
    // Offset: 0x54F0324
    bool Equals(::UnityEngine::Rendering::LocalKeywordSpace rhs);
    // static private System.Void GetKeyword_Injected(ref UnityEngine.Rendering.LocalKeywordSpace _unity_self, System.String name, out UnityEngine.Rendering.LocalKeyword ret)
    // Offset: 0x54F01DC
    static void GetKeyword_Injected(ByRef<::UnityEngine::Rendering::LocalKeywordSpace> _unity_self, ::StringW name, ByRef<::UnityEngine::Rendering::LocalKeyword> ret);
    // public override System.Boolean Equals(System.Object o)
    // Offset: 0x54F02A8
    // Implemented from: System.ValueType
    // Base method: System.Boolean ValueType::Equals(System.Object o)
    bool Equals(::Il2CppObject* o);
    // public override System.Int32 GetHashCode()
    // Offset: 0x54F0164
    // Implemented from: System.ValueType
    // Base method: System.Int32 ValueType::GetHashCode()
    int GetHashCode();
  }; // UnityEngine.Rendering.LocalKeywordSpace
  #pragma pack(pop)
  static check_size<sizeof(LocalKeywordSpace), 0 + sizeof(::System::IntPtr)> __UnityEngine_Rendering_LocalKeywordSpaceSizeCheck;
  static_assert(sizeof(LocalKeywordSpace) == 0x8);
  // static public System.Boolean op_Equality(UnityEngine.Rendering.LocalKeywordSpace lhs, UnityEngine.Rendering.LocalKeywordSpace rhs)
  // Offset: 0x54F0124
  bool operator ==(const ::UnityEngine::Rendering::LocalKeywordSpace& lhs, const ::UnityEngine::Rendering::LocalKeywordSpace& rhs);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::Rendering::LocalKeywordSpace::GetKeyword
// Il2CppName: GetKeyword
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Rendering::LocalKeyword (UnityEngine::Rendering::LocalKeywordSpace::*)(::StringW)>(&UnityEngine::Rendering::LocalKeywordSpace::GetKeyword)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::LocalKeywordSpace), "GetKeyword", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::LocalKeywordSpace::FindKeyword
// Il2CppName: FindKeyword
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Rendering::LocalKeyword (UnityEngine::Rendering::LocalKeywordSpace::*)(::StringW)>(&UnityEngine::Rendering::LocalKeywordSpace::FindKeyword)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::LocalKeywordSpace), "FindKeyword", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::LocalKeywordSpace::Equals
// Il2CppName: Equals
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::Rendering::LocalKeywordSpace::*)(::UnityEngine::Rendering::LocalKeywordSpace)>(&UnityEngine::Rendering::LocalKeywordSpace::Equals)> {
  static const MethodInfo* get() {
    static auto* rhs = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "LocalKeywordSpace")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::LocalKeywordSpace), "Equals", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{rhs});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::LocalKeywordSpace::GetKeyword_Injected
// Il2CppName: GetKeyword_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(ByRef<::UnityEngine::Rendering::LocalKeywordSpace>, ::StringW, ByRef<::UnityEngine::Rendering::LocalKeyword>)>(&UnityEngine::Rendering::LocalKeywordSpace::GetKeyword_Injected)> {
  static const MethodInfo* get() {
    static auto* _unity_self = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "LocalKeywordSpace")->this_arg;
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* ret = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "LocalKeyword")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::LocalKeywordSpace), "GetKeyword_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{_unity_self, name, ret});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::LocalKeywordSpace::Equals
// Il2CppName: Equals
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::Rendering::LocalKeywordSpace::*)(::Il2CppObject*)>(&UnityEngine::Rendering::LocalKeywordSpace::Equals)> {
  static const MethodInfo* get() {
    static auto* o = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::LocalKeywordSpace), "Equals", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{o});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::LocalKeywordSpace::GetHashCode
// Il2CppName: GetHashCode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::Rendering::LocalKeywordSpace::*)()>(&UnityEngine::Rendering::LocalKeywordSpace::GetHashCode)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::LocalKeywordSpace), "GetHashCode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::LocalKeywordSpace::operator ==
// Il2CppName: op_Equality
// Cannot perform method pointer template specialization from operators!
