// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::Rendering
namespace UnityEngine::Rendering {
  // Forward declaring type: CommandBuffer
  class CommandBuffer;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Vector2
  struct Vector2;
}
// Completed forward declares
// Type namespace: UnityEngine.Rendering
namespace UnityEngine::Rendering {
  // Forward declaring type: FSRUtils
  class FSRUtils;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::Rendering::FSRUtils);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::Rendering::FSRUtils*, "UnityEngine.Rendering", "FSRUtils");
// Type namespace: UnityEngine.Rendering
namespace UnityEngine::Rendering {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.Rendering.FSRUtils
  // [TokenAttribute] Offset: FFFFFFFF
  class FSRUtils : public ::Il2CppObject {
    public:
    // Nested type: ::UnityEngine::Rendering::FSRUtils::ShaderConstants
    class ShaderConstants;
    // static public System.Void SetEasuConstants(UnityEngine.Rendering.CommandBuffer cmd, UnityEngine.Vector2 inputViewportSizeInPixels, UnityEngine.Vector2 inputImageSizeInPixels, UnityEngine.Vector2 outputImageSizeInPixels)
    // Offset: 0x525E238
    static void SetEasuConstants(::UnityEngine::Rendering::CommandBuffer* cmd, ::UnityEngine::Vector2 inputViewportSizeInPixels, ::UnityEngine::Vector2 inputImageSizeInPixels, ::UnityEngine::Vector2 outputImageSizeInPixels);
    // static public System.Void SetRcasConstants(UnityEngine.Rendering.CommandBuffer cmd, System.Single sharpnessStops)
    // Offset: 0x525E3BC
    static void SetRcasConstants(::UnityEngine::Rendering::CommandBuffer* cmd, float sharpnessStops);
    // static public System.Void SetRcasConstantsLinear(UnityEngine.Rendering.CommandBuffer cmd, System.Single sharpnessLinear)
    // Offset: 0x525E468
    static void SetRcasConstantsLinear(::UnityEngine::Rendering::CommandBuffer* cmd, float sharpnessLinear);
    // static public System.Boolean IsSupported()
    // Offset: 0x525E47C
    static bool IsSupported();
  }; // UnityEngine.Rendering.FSRUtils
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::Rendering::FSRUtils::SetEasuConstants
// Il2CppName: SetEasuConstants
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::Rendering::CommandBuffer*, ::UnityEngine::Vector2, ::UnityEngine::Vector2, ::UnityEngine::Vector2)>(&UnityEngine::Rendering::FSRUtils::SetEasuConstants)> {
  static const MethodInfo* get() {
    static auto* cmd = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "CommandBuffer")->byval_arg;
    static auto* inputViewportSizeInPixels = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector2")->byval_arg;
    static auto* inputImageSizeInPixels = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector2")->byval_arg;
    static auto* outputImageSizeInPixels = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector2")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::FSRUtils*), "SetEasuConstants", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{cmd, inputViewportSizeInPixels, inputImageSizeInPixels, outputImageSizeInPixels});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::FSRUtils::SetRcasConstants
// Il2CppName: SetRcasConstants
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::Rendering::CommandBuffer*, float)>(&UnityEngine::Rendering::FSRUtils::SetRcasConstants)> {
  static const MethodInfo* get() {
    static auto* cmd = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "CommandBuffer")->byval_arg;
    static auto* sharpnessStops = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::FSRUtils*), "SetRcasConstants", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{cmd, sharpnessStops});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::FSRUtils::SetRcasConstantsLinear
// Il2CppName: SetRcasConstantsLinear
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::Rendering::CommandBuffer*, float)>(&UnityEngine::Rendering::FSRUtils::SetRcasConstantsLinear)> {
  static const MethodInfo* get() {
    static auto* cmd = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "CommandBuffer")->byval_arg;
    static auto* sharpnessLinear = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::FSRUtils*), "SetRcasConstantsLinear", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{cmd, sharpnessLinear});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::FSRUtils::IsSupported
// Il2CppName: IsSupported
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&UnityEngine::Rendering::FSRUtils::IsSupported)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::FSRUtils*), "IsSupported", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
