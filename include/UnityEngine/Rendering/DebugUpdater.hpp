// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
// Including type: UnityEngine.ScreenOrientation
#include "UnityEngine/ScreenOrientation.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::Rendering
namespace UnityEngine::Rendering {
}
// Forward declaring namespace: System::Collections
namespace System::Collections {
  // Forward declaring type: IEnumerator
  class IEnumerator;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Action
  class Action;
}
// Completed forward declares
// Type namespace: UnityEngine.Rendering
namespace UnityEngine::Rendering {
  // Forward declaring type: DebugUpdater
  class DebugUpdater;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::Rendering::DebugUpdater);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::Rendering::DebugUpdater*, "UnityEngine.Rendering", "DebugUpdater");
// Type namespace: UnityEngine.Rendering
namespace UnityEngine::Rendering {
  // Size: 0x25
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.Rendering.DebugUpdater
  // [TokenAttribute] Offset: FFFFFFFF
  class DebugUpdater : public ::UnityEngine::MonoBehaviour {
    public:
    // Nested type: ::UnityEngine::Rendering::DebugUpdater::$DoAfterInputModuleUpdated$d__9
    class $DoAfterInputModuleUpdated$d__9;
    // Nested type: ::UnityEngine::Rendering::DebugUpdater::$RefreshRuntimeUINextFrame$d__15
    class $RefreshRuntimeUINextFrame$d__15;
    public:
    // private UnityEngine.ScreenOrientation m_Orientation
    // Size: 0x4
    // Offset: 0x20
    ::UnityEngine::ScreenOrientation m_Orientation;
    // Field size check
    static_assert(sizeof(::UnityEngine::ScreenOrientation) == 0x4);
    // private System.Boolean m_RuntimeUiWasVisibleLastFrame
    // Size: 0x1
    // Offset: 0x24
    bool m_RuntimeUiWasVisibleLastFrame;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    public:
    // Get static field: static private UnityEngine.Rendering.DebugUpdater s_Instance
    static ::UnityEngine::Rendering::DebugUpdater* _get_s_Instance();
    // Set static field: static private UnityEngine.Rendering.DebugUpdater s_Instance
    static void _set_s_Instance(::UnityEngine::Rendering::DebugUpdater* value);
    // Get instance field reference: private UnityEngine.ScreenOrientation m_Orientation
    [[deprecated("Use field access instead!")]] ::UnityEngine::ScreenOrientation& dyn_m_Orientation();
    // Get instance field reference: private System.Boolean m_RuntimeUiWasVisibleLastFrame
    [[deprecated("Use field access instead!")]] bool& dyn_m_RuntimeUiWasVisibleLastFrame();
    // static private System.Void RuntimeInit()
    // Offset: 0x524AF04
    static void RuntimeInit();
    // static System.Void SetEnabled(System.Boolean enabled)
    // Offset: 0x524AF08
    static void SetEnabled(bool enabled);
    // static private System.Void EnableRuntime()
    // Offset: 0x524AF14
    static void EnableRuntime();
    // static private System.Void DisableRuntime()
    // Offset: 0x524B09C
    static void DisableRuntime();
    // static System.Void HandleInternalEventSystemComponents(System.Boolean uiEnabled)
    // Offset: 0x5247414
    static void HandleInternalEventSystemComponents(bool uiEnabled);
    // private System.Void EnsureExactlyOneEventSystem()
    // Offset: 0x524B1D8
    void EnsureExactlyOneEventSystem();
    // private System.Collections.IEnumerator DoAfterInputModuleUpdated(System.Action action)
    // Offset: 0x524B5F0
    ::System::Collections::IEnumerator* DoAfterInputModuleUpdated(::System::Action* action);
    // private System.Void CheckInputModuleExists()
    // Offset: 0x524B684
    void CheckInputModuleExists();
    // private System.Void AssignDefaultActions()
    // Offset: 0x524B7B0
    void AssignDefaultActions();
    // private System.Void CreateDebugEventSystem()
    // Offset: 0x524B510
    void CreateDebugEventSystem();
    // private System.Void DestroyDebugEventSystem()
    // Offset: 0x524B3B0
    void DestroyDebugEventSystem();
    // private System.Void Update()
    // Offset: 0x524B908
    void Update();
    // static private System.Collections.IEnumerator RefreshRuntimeUINextFrame()
    // Offset: 0x524BA60
    static ::System::Collections::IEnumerator* RefreshRuntimeUINextFrame();
    // public System.Void .ctor()
    // Offset: 0x524BAE0
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static DebugUpdater* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::DebugUpdater::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<DebugUpdater*, creationType>()));
    }
  }; // UnityEngine.Rendering.DebugUpdater
  #pragma pack(pop)
  static check_size<sizeof(DebugUpdater), 36 + sizeof(bool)> __UnityEngine_Rendering_DebugUpdaterSizeCheck;
  static_assert(sizeof(DebugUpdater) == 0x25);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::Rendering::DebugUpdater::RuntimeInit
// Il2CppName: RuntimeInit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&UnityEngine::Rendering::DebugUpdater::RuntimeInit)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::DebugUpdater*), "RuntimeInit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::DebugUpdater::SetEnabled
// Il2CppName: SetEnabled
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(bool)>(&UnityEngine::Rendering::DebugUpdater::SetEnabled)> {
  static const MethodInfo* get() {
    static auto* enabled = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::DebugUpdater*), "SetEnabled", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{enabled});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::DebugUpdater::EnableRuntime
// Il2CppName: EnableRuntime
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&UnityEngine::Rendering::DebugUpdater::EnableRuntime)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::DebugUpdater*), "EnableRuntime", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::DebugUpdater::DisableRuntime
// Il2CppName: DisableRuntime
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&UnityEngine::Rendering::DebugUpdater::DisableRuntime)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::DebugUpdater*), "DisableRuntime", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::DebugUpdater::HandleInternalEventSystemComponents
// Il2CppName: HandleInternalEventSystemComponents
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(bool)>(&UnityEngine::Rendering::DebugUpdater::HandleInternalEventSystemComponents)> {
  static const MethodInfo* get() {
    static auto* uiEnabled = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::DebugUpdater*), "HandleInternalEventSystemComponents", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{uiEnabled});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::DebugUpdater::EnsureExactlyOneEventSystem
// Il2CppName: EnsureExactlyOneEventSystem
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Rendering::DebugUpdater::*)()>(&UnityEngine::Rendering::DebugUpdater::EnsureExactlyOneEventSystem)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::DebugUpdater*), "EnsureExactlyOneEventSystem", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::DebugUpdater::DoAfterInputModuleUpdated
// Il2CppName: DoAfterInputModuleUpdated
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::IEnumerator* (UnityEngine::Rendering::DebugUpdater::*)(::System::Action*)>(&UnityEngine::Rendering::DebugUpdater::DoAfterInputModuleUpdated)> {
  static const MethodInfo* get() {
    static auto* action = &::il2cpp_utils::GetClassFromName("System", "Action")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::DebugUpdater*), "DoAfterInputModuleUpdated", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{action});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::DebugUpdater::CheckInputModuleExists
// Il2CppName: CheckInputModuleExists
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Rendering::DebugUpdater::*)()>(&UnityEngine::Rendering::DebugUpdater::CheckInputModuleExists)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::DebugUpdater*), "CheckInputModuleExists", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::DebugUpdater::AssignDefaultActions
// Il2CppName: AssignDefaultActions
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Rendering::DebugUpdater::*)()>(&UnityEngine::Rendering::DebugUpdater::AssignDefaultActions)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::DebugUpdater*), "AssignDefaultActions", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::DebugUpdater::CreateDebugEventSystem
// Il2CppName: CreateDebugEventSystem
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Rendering::DebugUpdater::*)()>(&UnityEngine::Rendering::DebugUpdater::CreateDebugEventSystem)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::DebugUpdater*), "CreateDebugEventSystem", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::DebugUpdater::DestroyDebugEventSystem
// Il2CppName: DestroyDebugEventSystem
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Rendering::DebugUpdater::*)()>(&UnityEngine::Rendering::DebugUpdater::DestroyDebugEventSystem)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::DebugUpdater*), "DestroyDebugEventSystem", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::DebugUpdater::Update
// Il2CppName: Update
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Rendering::DebugUpdater::*)()>(&UnityEngine::Rendering::DebugUpdater::Update)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::DebugUpdater*), "Update", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::DebugUpdater::RefreshRuntimeUINextFrame
// Il2CppName: RefreshRuntimeUINextFrame
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::IEnumerator* (*)()>(&UnityEngine::Rendering::DebugUpdater::RefreshRuntimeUINextFrame)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::DebugUpdater*), "RefreshRuntimeUINextFrame", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::DebugUpdater::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
