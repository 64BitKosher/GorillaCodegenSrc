// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.Rendering.DebugUI
#include "UnityEngine/Rendering/DebugUI.hpp"
// Including type: UnityEngine.Rendering.DebugUI/Field`1
#include "UnityEngine/Rendering/DebugUI_Field_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::Rendering
namespace UnityEngine::Rendering {
  // Skipping declaration: <>c because it is already included!
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: GUIContent
  class GUIContent;
}
// Forward declaring namespace: System::Text::RegularExpressions
namespace System::Text::RegularExpressions {
  // Forward declaring type: Regex
  class Regex;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Type
  class Type;
  // Forward declaring type: Func`2<T, TResult>
  template<typename T, typename TResult>
  class Func_2;
}
// Forward declaring namespace: System::Reflection
namespace System::Reflection {
  // Forward declaring type: FieldInfo
  class FieldInfo;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE_GENERIC_CLASS(::UnityEngine::Rendering::DebugUI::EnumField_1, "UnityEngine.Rendering", "DebugUI/EnumField`1");
// Type namespace: UnityEngine.Rendering
namespace UnityEngine::Rendering {
  // WARNING Size may be invalid!
  // Autogenerated type: UnityEngine.Rendering.DebugUI/EnumField`1
  // [TokenAttribute] Offset: FFFFFFFF
  template<typename T>
  class DebugUI::EnumField_1 : public ::UnityEngine::Rendering::DebugUI::Field_1<T> {
    public:
    // Nested type: ::UnityEngine::Rendering::DebugUI::EnumField_1::$$c<T>
    class $$c;
    // WARNING Size may be invalid!
    // Autogenerated type: UnityEngine.Rendering.DebugUI/EnumField`1/<>c
    // [TokenAttribute] Offset: FFFFFFFF
    // [CompilerGeneratedAttribute] Offset: FFFFFFFF
    class $$c : public ::il2cpp_utils::il2cpp_type_check::NestedType, public ::Il2CppObject {
      public:
      using declaring_type = DebugUI::EnumField_1<T>*;
      static constexpr std::string_view NESTED_NAME = "<>c";
      static constexpr bool IS_VALUE_TYPE = false;
      // Autogenerated static field getter
      // Get static field: static public readonly UnityEngine.Rendering.DebugUI/EnumField`1/<>c<T> <>9
      static typename ::UnityEngine::Rendering::DebugUI::EnumField_1<T>::$$c* _get_$$9() {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::DebugUI::EnumField_1::$$c::_get_$$9");
        return THROW_UNLESS((il2cpp_utils::GetFieldValue<typename ::UnityEngine::Rendering::DebugUI::EnumField_1<T>::$$c*>(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<typename DebugUI::EnumField_1<T>::$$c*>::get(), "<>9")));
      }
      // Autogenerated static field setter
      // Set static field: static public readonly UnityEngine.Rendering.DebugUI/EnumField`1/<>c<T> <>9
      static void _set_$$9(typename ::UnityEngine::Rendering::DebugUI::EnumField_1<T>::$$c* value) {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::DebugUI::EnumField_1::$$c::_set_$$9");
        THROW_UNLESS((il2cpp_utils::SetFieldValue(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<typename DebugUI::EnumField_1<T>::$$c*>::get(), "<>9", value)));
      }
      // Autogenerated static field getter
      // Get static field: static public System.Func`2<System.Reflection.FieldInfo,System.Boolean> <>9__6_0
      static ::System::Func_2<::System::Reflection::FieldInfo*, bool>* _get_$$9__6_0() {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::DebugUI::EnumField_1::$$c::_get_$$9__6_0");
        return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::System::Reflection::FieldInfo*, bool>*>(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<typename DebugUI::EnumField_1<T>::$$c*>::get(), "<>9__6_0")));
      }
      // Autogenerated static field setter
      // Set static field: static public System.Func`2<System.Reflection.FieldInfo,System.Boolean> <>9__6_0
      static void _set_$$9__6_0(::System::Func_2<::System::Reflection::FieldInfo*, bool>* value) {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::DebugUI::EnumField_1::$$c::_set_$$9__6_0");
        THROW_UNLESS((il2cpp_utils::SetFieldValue(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<typename DebugUI::EnumField_1<T>::$$c*>::get(), "<>9__6_0", value)));
      }
      // static private System.Void .cctor()
      // Offset: 0xFFFFFFFFFFFFFFFF
      static void _cctor() {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::DebugUI::EnumField_1::$$c::.cctor");
        static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<typename DebugUI::EnumField_1<T>::$$c*>::get(), ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
        ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
      }
      // public System.Void .ctor()
      // Offset: 0xFFFFFFFFFFFFFFFF
      template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
      static typename DebugUI::EnumField_1<T>::$$c* New_ctor() {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::DebugUI::EnumField_1::$$c::.ctor");
        return THROW_UNLESS((::il2cpp_utils::New<typename DebugUI::EnumField_1<T>::$$c*, creationType>()));
      }
      // System.Boolean <AutoFillFromType>b__6_0(System.Reflection.FieldInfo fieldInfo)
      // Offset: 0xFFFFFFFFFFFFFFFF
      bool $AutoFillFromType$b__6_0(::System::Reflection::FieldInfo* fieldInfo) {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::DebugUI::EnumField_1::$$c::<AutoFillFromType>b__6_0");
        static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<AutoFillFromType>b__6_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fieldInfo)})));
        return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, fieldInfo);
      }
    }; // UnityEngine.Rendering.DebugUI/EnumField`1/<>c
    // Could not write size check! Type: UnityEngine.Rendering.DebugUI/EnumField`1/<>c is generic, or has no fields that are valid for size checks!
    public:
    // public UnityEngine.GUIContent[] enumNames
    // Size: 0x8
    // Offset: 0x0
    ::ArrayW<::UnityEngine::GUIContent*> enumNames;
    // Field size check
    static_assert(sizeof(::ArrayW<::UnityEngine::GUIContent*>) == 0x8);
    // private System.Int32[] m_EnumValues
    // Size: 0x8
    // Offset: 0x0
    ::ArrayW<int> m_EnumValues;
    // Field size check
    static_assert(sizeof(::ArrayW<int>) == 0x8);
    public:
    // Autogenerated static field getter
    // Get static field: static private System.Text.RegularExpressions.Regex s_NicifyRegEx
    static ::System::Text::RegularExpressions::Regex* _get_s_NicifyRegEx() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::DebugUI::EnumField_1::_get_s_NicifyRegEx");
      return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Text::RegularExpressions::Regex*>(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<DebugUI::EnumField_1<T>*>::get(), "s_NicifyRegEx"));
    }
    // Autogenerated static field setter
    // Set static field: static private System.Text.RegularExpressions.Regex s_NicifyRegEx
    static void _set_s_NicifyRegEx(::System::Text::RegularExpressions::Regex* value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::DebugUI::EnumField_1::_set_s_NicifyRegEx");
      THROW_UNLESS(il2cpp_utils::SetFieldValue(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<DebugUI::EnumField_1<T>*>::get(), "s_NicifyRegEx", value));
    }
    // Autogenerated instance field getter
    // Get instance field: public UnityEngine.GUIContent[] enumNames
    [[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::GUIContent*>& dyn_enumNames() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::DebugUI::EnumField_1::dyn_enumNames");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "enumNames"))->offset;
      return *reinterpret_cast<::ArrayW<::UnityEngine::GUIContent*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: private System.Int32[] m_EnumValues
    [[deprecated("Use field access instead!")]] ::ArrayW<int>& dyn_m_EnumValues() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::DebugUI::EnumField_1::dyn_m_EnumValues");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_EnumValues"))->offset;
      return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // public System.Int32[] get_enumValues()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::ArrayW<int> get_enumValues() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::DebugUI::EnumField_1::get_enumValues");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_enumValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      return ::il2cpp_utils::RunMethodRethrow<::ArrayW<int>, false>(this, ___internal__method);
    }
    // public System.Void set_enumValues(System.Int32[] value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void set_enumValues(::ArrayW<int> value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::DebugUI::EnumField_1::set_enumValues");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_enumValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
    }
    // protected System.Void AutoFillFromType(System.Type enumType)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void AutoFillFromType(::System::Type* enumType) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::DebugUI::EnumField_1::AutoFillFromType");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AutoFillFromType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(enumType)})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, enumType);
    }
    // static private System.Void .cctor()
    // Offset: 0xFFFFFFFFFFFFFFFF
    static void _cctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::DebugUI::EnumField_1::.cctor");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<DebugUI::EnumField_1<T>*>::get(), ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
    }
    // protected System.Void .ctor()
    // Offset: 0xFFFFFFFFFFFFFFFF
    // Implemented from: UnityEngine.Rendering.DebugUI/Field`1
    // Base method: System.Void Field_1::.ctor()
    // Base method: System.Void Widget::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static DebugUI::EnumField_1<T>* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::DebugUI::EnumField_1::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<DebugUI::EnumField_1<T>*, creationType>()));
    }
  }; // UnityEngine.Rendering.DebugUI/EnumField`1
  // Could not write size check! Type: UnityEngine.Rendering.DebugUI/EnumField`1 is generic, or has no fields that are valid for size checks!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
