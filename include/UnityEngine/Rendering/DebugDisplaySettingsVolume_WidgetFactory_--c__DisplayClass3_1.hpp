// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.Rendering.DebugDisplaySettingsVolume/WidgetFactory
#include "UnityEngine/Rendering/DebugDisplaySettingsVolume_WidgetFactory.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::Rendering
namespace UnityEngine::Rendering {
  // Forward declaring type: Volume
  class Volume;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Object
  class Object;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::Rendering::DebugDisplaySettingsVolume::WidgetFactory::$$c__DisplayClass3_1);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::Rendering::DebugDisplaySettingsVolume::WidgetFactory::$$c__DisplayClass3_1*, "UnityEngine.Rendering", "DebugDisplaySettingsVolume/WidgetFactory/<>c__DisplayClass3_1");
// Type namespace: UnityEngine.Rendering
namespace UnityEngine::Rendering {
  // Size: 0x20
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.Rendering.DebugDisplaySettingsVolume/WidgetFactory/<>c__DisplayClass3_1
  // [TokenAttribute] Offset: FFFFFFFF
  // [CompilerGeneratedAttribute] Offset: FFFFFFFF
  class DebugDisplaySettingsVolume::WidgetFactory::$$c__DisplayClass3_1 : public ::Il2CppObject {
    public:
    public:
    // public UnityEngine.Rendering.Volume volume
    // Size: 0x8
    // Offset: 0x10
    ::UnityEngine::Rendering::Volume* volume;
    // Field size check
    static_assert(sizeof(::UnityEngine::Rendering::Volume*) == 0x8);
    // public UnityEngine.Rendering.DebugDisplaySettingsVolume/WidgetFactory/<>c__DisplayClass3_0 CS$<>8__locals1
    // Size: 0x8
    // Offset: 0x18
    ::UnityEngine::Rendering::DebugDisplaySettingsVolume::WidgetFactory::$$c__DisplayClass3_0* CS$$$8__locals1;
    // Field size check
    static_assert(sizeof(::UnityEngine::Rendering::DebugDisplaySettingsVolume::WidgetFactory::$$c__DisplayClass3_0*) == 0x8);
    public:
    // Get instance field reference: public UnityEngine.Rendering.Volume volume
    [[deprecated("Use field access instead!")]] ::UnityEngine::Rendering::Volume*& dyn_volume();
    // Get instance field reference: public UnityEngine.Rendering.DebugDisplaySettingsVolume/WidgetFactory/<>c__DisplayClass3_0 CS$<>8__locals1
    [[deprecated("Use field access instead!")]] ::UnityEngine::Rendering::DebugDisplaySettingsVolume::WidgetFactory::$$c__DisplayClass3_0*& dyn_CS$$$8__locals1();
    // public System.Void .ctor()
    // Offset: 0x5241B14
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static DebugDisplaySettingsVolume::WidgetFactory::$$c__DisplayClass3_1* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::DebugDisplaySettingsVolume::WidgetFactory::$$c__DisplayClass3_1::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<DebugDisplaySettingsVolume::WidgetFactory::$$c__DisplayClass3_1*, creationType>()));
    }
    // System.Object <CreateVolumeTable>b__4()
    // Offset: 0x5243430
    ::Il2CppObject* $CreateVolumeTable$b__4();
    // UnityEngine.Object <CreateVolumeTable>b__5()
    // Offset: 0x52435A8
    ::UnityEngine::Object* $CreateVolumeTable$b__5();
  }; // UnityEngine.Rendering.DebugDisplaySettingsVolume/WidgetFactory/<>c__DisplayClass3_1
  #pragma pack(pop)
  static check_size<sizeof(DebugDisplaySettingsVolume::WidgetFactory::$$c__DisplayClass3_1), 24 + sizeof(::UnityEngine::Rendering::DebugDisplaySettingsVolume::WidgetFactory::$$c__DisplayClass3_0*)> __UnityEngine_Rendering_DebugDisplaySettingsVolume_WidgetFactory_$$c__DisplayClass3_1SizeCheck;
  static_assert(sizeof(DebugDisplaySettingsVolume::WidgetFactory::$$c__DisplayClass3_1) == 0x20);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::Rendering::DebugDisplaySettingsVolume::WidgetFactory::$$c__DisplayClass3_1::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::Rendering::DebugDisplaySettingsVolume::WidgetFactory::$$c__DisplayClass3_1::$CreateVolumeTable$b__4
// Il2CppName: <CreateVolumeTable>b__4
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (UnityEngine::Rendering::DebugDisplaySettingsVolume::WidgetFactory::$$c__DisplayClass3_1::*)()>(&UnityEngine::Rendering::DebugDisplaySettingsVolume::WidgetFactory::$$c__DisplayClass3_1::$CreateVolumeTable$b__4)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::DebugDisplaySettingsVolume::WidgetFactory::$$c__DisplayClass3_1*), "<CreateVolumeTable>b__4", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::DebugDisplaySettingsVolume::WidgetFactory::$$c__DisplayClass3_1::$CreateVolumeTable$b__5
// Il2CppName: <CreateVolumeTable>b__5
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Object* (UnityEngine::Rendering::DebugDisplaySettingsVolume::WidgetFactory::$$c__DisplayClass3_1::*)()>(&UnityEngine::Rendering::DebugDisplaySettingsVolume::WidgetFactory::$$c__DisplayClass3_1::$CreateVolumeTable$b__5)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::DebugDisplaySettingsVolume::WidgetFactory::$$c__DisplayClass3_1*), "<CreateVolumeTable>b__5", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
