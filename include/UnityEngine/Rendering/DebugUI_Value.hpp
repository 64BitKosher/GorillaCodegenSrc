// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.Rendering.DebugUI
#include "UnityEngine/Rendering/DebugUI.hpp"
// Including type: UnityEngine.Rendering.DebugUI/Widget
#include "UnityEngine/Rendering/DebugUI_Widget.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Func`1<TResult>
  template<typename TResult>
  class Func_1;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::Rendering::DebugUI::Value);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::Rendering::DebugUI::Value*, "UnityEngine.Rendering", "DebugUI/Value");
// Type namespace: UnityEngine.Rendering
namespace UnityEngine::Rendering {
  // Size: 0x60
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.Rendering.DebugUI/Value
  // [TokenAttribute] Offset: FFFFFFFF
  class DebugUI::Value : public ::UnityEngine::Rendering::DebugUI::Widget {
    public:
    public:
    // private System.Func`1<System.Object> <getter>k__BackingField
    // Size: 0x8
    // Offset: 0x48
    ::System::Func_1<::Il2CppObject*>* getter;
    // Field size check
    static_assert(sizeof(::System::Func_1<::Il2CppObject*>*) == 0x8);
    // public System.Single refreshRate
    // Size: 0x4
    // Offset: 0x50
    float refreshRate;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // Padding between fields: refreshRate and: formatString
    char __padding1[0x4] = {};
    // public System.String formatString
    // Size: 0x8
    // Offset: 0x58
    ::StringW formatString;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    public:
    // Get instance field reference: private System.Func`1<System.Object> <getter>k__BackingField
    [[deprecated("Use field access instead!")]] ::System::Func_1<::Il2CppObject*>*& dyn_$getter$k__BackingField();
    // Get instance field reference: public System.Single refreshRate
    [[deprecated("Use field access instead!")]] float& dyn_refreshRate();
    // Get instance field reference: public System.String formatString
    [[deprecated("Use field access instead!")]] ::StringW& dyn_formatString();
    // public System.Func`1<System.Object> get_getter()
    // Offset: 0x524A040
    ::System::Func_1<::Il2CppObject*>* get_getter();
    // public System.Void set_getter(System.Func`1<System.Object> value)
    // Offset: 0x524A048
    void set_getter(::System::Func_1<::Il2CppObject*>* value);
    // public System.Object GetValue()
    // Offset: 0x524A050
    ::Il2CppObject* GetValue();
    // public System.String FormatString(System.Object value)
    // Offset: 0x524A074
    ::StringW FormatString(::Il2CppObject* value);
    // public System.Void .ctor()
    // Offset: 0x5245C20
    // Implemented from: UnityEngine.Rendering.DebugUI/Widget
    // Base method: System.Void Widget::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static DebugUI::Value* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::DebugUI::Value::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<DebugUI::Value*, creationType>()));
    }
  }; // UnityEngine.Rendering.DebugUI/Value
  #pragma pack(pop)
  static check_size<sizeof(DebugUI::Value), 88 + sizeof(::StringW)> __UnityEngine_Rendering_DebugUI_ValueSizeCheck;
  static_assert(sizeof(DebugUI::Value) == 0x60);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::Rendering::DebugUI::Value::get_getter
// Il2CppName: get_getter
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Func_1<::Il2CppObject*>* (UnityEngine::Rendering::DebugUI::Value::*)()>(&UnityEngine::Rendering::DebugUI::Value::get_getter)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::DebugUI::Value*), "get_getter", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::DebugUI::Value::set_getter
// Il2CppName: set_getter
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Rendering::DebugUI::Value::*)(::System::Func_1<::Il2CppObject*>*)>(&UnityEngine::Rendering::DebugUI::Value::set_getter)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Func`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Object")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::DebugUI::Value*), "set_getter", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::DebugUI::Value::GetValue
// Il2CppName: GetValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (UnityEngine::Rendering::DebugUI::Value::*)()>(&UnityEngine::Rendering::DebugUI::Value::GetValue)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::DebugUI::Value*), "GetValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::DebugUI::Value::FormatString
// Il2CppName: FormatString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (UnityEngine::Rendering::DebugUI::Value::*)(::Il2CppObject*)>(&UnityEngine::Rendering::DebugUI::Value::FormatString)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::DebugUI::Value*), "FormatString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::DebugUI::Value::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
