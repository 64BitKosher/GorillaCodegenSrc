// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::Rendering::UI
namespace UnityEngine::Rendering::UI {
  // Forward declaring type: DebugUIHandlerWidget
  class DebugUIHandlerWidget;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: RectTransform
  class RectTransform;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Completed forward declares
// Type namespace: UnityEngine.Rendering.UI
namespace UnityEngine::Rendering::UI {
  // Forward declaring type: DebugUIHandlerContainer
  class DebugUIHandlerContainer;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::Rendering::UI::DebugUIHandlerContainer);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::Rendering::UI::DebugUIHandlerContainer*, "UnityEngine.Rendering.UI", "DebugUIHandlerContainer");
// Type namespace: UnityEngine.Rendering.UI
namespace UnityEngine::Rendering::UI {
  // Size: 0x28
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.Rendering.UI.DebugUIHandlerContainer
  // [TokenAttribute] Offset: FFFFFFFF
  class DebugUIHandlerContainer : public ::UnityEngine::MonoBehaviour {
    public:
    // Nested type: ::UnityEngine::Rendering::UI::DebugUIHandlerContainer::$$c__DisplayClass3_0
    class $$c__DisplayClass3_0;
    public:
    // public UnityEngine.RectTransform contentHolder
    // Size: 0x8
    // Offset: 0x20
    ::UnityEngine::RectTransform* contentHolder;
    // Field size check
    static_assert(sizeof(::UnityEngine::RectTransform*) == 0x8);
    public:
    // Get instance field reference: public UnityEngine.RectTransform contentHolder
    [[deprecated("Use field access instead!")]] ::UnityEngine::RectTransform*& dyn_contentHolder();
    // UnityEngine.Rendering.UI.DebugUIHandlerWidget GetFirstItem()
    // Offset: 0x52675BC
    ::UnityEngine::Rendering::UI::DebugUIHandlerWidget* GetFirstItem();
    // UnityEngine.Rendering.UI.DebugUIHandlerWidget GetLastItem()
    // Offset: 0x5267A78
    ::UnityEngine::Rendering::UI::DebugUIHandlerWidget* GetLastItem();
    // System.Boolean IsDirectChild(UnityEngine.Rendering.UI.DebugUIHandlerWidget widget)
    // Offset: 0x5267B08
    bool IsDirectChild(::UnityEngine::Rendering::UI::DebugUIHandlerWidget* widget);
    // private System.Collections.Generic.List`1<UnityEngine.Rendering.UI.DebugUIHandlerWidget> GetActiveChildren()
    // Offset: 0x526764C
    ::System::Collections::Generic::List_1<::UnityEngine::Rendering::UI::DebugUIHandlerWidget*>* GetActiveChildren();
    // public System.Void .ctor()
    // Offset: 0x5267C1C
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static DebugUIHandlerContainer* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::UI::DebugUIHandlerContainer::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<DebugUIHandlerContainer*, creationType>()));
    }
  }; // UnityEngine.Rendering.UI.DebugUIHandlerContainer
  #pragma pack(pop)
  static check_size<sizeof(DebugUIHandlerContainer), 32 + sizeof(::UnityEngine::RectTransform*)> __UnityEngine_Rendering_UI_DebugUIHandlerContainerSizeCheck;
  static_assert(sizeof(DebugUIHandlerContainer) == 0x28);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::Rendering::UI::DebugUIHandlerContainer::GetFirstItem
// Il2CppName: GetFirstItem
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Rendering::UI::DebugUIHandlerWidget* (UnityEngine::Rendering::UI::DebugUIHandlerContainer::*)()>(&UnityEngine::Rendering::UI::DebugUIHandlerContainer::GetFirstItem)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::UI::DebugUIHandlerContainer*), "GetFirstItem", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::UI::DebugUIHandlerContainer::GetLastItem
// Il2CppName: GetLastItem
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Rendering::UI::DebugUIHandlerWidget* (UnityEngine::Rendering::UI::DebugUIHandlerContainer::*)()>(&UnityEngine::Rendering::UI::DebugUIHandlerContainer::GetLastItem)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::UI::DebugUIHandlerContainer*), "GetLastItem", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::UI::DebugUIHandlerContainer::IsDirectChild
// Il2CppName: IsDirectChild
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::Rendering::UI::DebugUIHandlerContainer::*)(::UnityEngine::Rendering::UI::DebugUIHandlerWidget*)>(&UnityEngine::Rendering::UI::DebugUIHandlerContainer::IsDirectChild)> {
  static const MethodInfo* get() {
    static auto* widget = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering.UI", "DebugUIHandlerWidget")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::UI::DebugUIHandlerContainer*), "IsDirectChild", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{widget});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::UI::DebugUIHandlerContainer::GetActiveChildren
// Il2CppName: GetActiveChildren
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::List_1<::UnityEngine::Rendering::UI::DebugUIHandlerWidget*>* (UnityEngine::Rendering::UI::DebugUIHandlerContainer::*)()>(&UnityEngine::Rendering::UI::DebugUIHandlerContainer::GetActiveChildren)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::UI::DebugUIHandlerContainer*), "GetActiveChildren", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::UI::DebugUIHandlerContainer::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
