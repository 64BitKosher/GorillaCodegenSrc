// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
// Including type: UnityEngine.Rendering.DebugUI
#include "UnityEngine/Rendering/DebugUI.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::UI
namespace UnityEngine::UI {
  // Forward declaring type: Text
  class Text;
  // Forward declaring type: ScrollRect
  class ScrollRect;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: RectTransform
  class RectTransform;
}
// Forward declaring namespace: UnityEngine::Rendering::UI
namespace UnityEngine::Rendering::UI {
  // Forward declaring type: DebugUIHandlerCanvas
  class DebugUIHandlerCanvas;
  // Forward declaring type: DebugUIHandlerWidget
  class DebugUIHandlerWidget;
}
// Completed forward declares
// Type namespace: UnityEngine.Rendering.UI
namespace UnityEngine::Rendering::UI {
  // Forward declaring type: DebugUIHandlerPanel
  class DebugUIHandlerPanel;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::Rendering::UI::DebugUIHandlerPanel);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::Rendering::UI::DebugUIHandlerPanel*, "UnityEngine.Rendering.UI", "DebugUIHandlerPanel");
// Type namespace: UnityEngine.Rendering.UI
namespace UnityEngine::Rendering::UI {
  // Size: 0x68
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.Rendering.UI.DebugUIHandlerPanel
  // [TokenAttribute] Offset: FFFFFFFF
  class DebugUIHandlerPanel : public ::UnityEngine::MonoBehaviour {
    public:
    public:
    // public UnityEngine.UI.Text nameLabel
    // Size: 0x8
    // Offset: 0x20
    ::UnityEngine::UI::Text* nameLabel;
    // Field size check
    static_assert(sizeof(::UnityEngine::UI::Text*) == 0x8);
    // public UnityEngine.UI.ScrollRect scrollRect
    // Size: 0x8
    // Offset: 0x28
    ::UnityEngine::UI::ScrollRect* scrollRect;
    // Field size check
    static_assert(sizeof(::UnityEngine::UI::ScrollRect*) == 0x8);
    // public UnityEngine.RectTransform viewport
    // Size: 0x8
    // Offset: 0x30
    ::UnityEngine::RectTransform* viewport;
    // Field size check
    static_assert(sizeof(::UnityEngine::RectTransform*) == 0x8);
    // public UnityEngine.Rendering.UI.DebugUIHandlerCanvas Canvas
    // Size: 0x8
    // Offset: 0x38
    ::UnityEngine::Rendering::UI::DebugUIHandlerCanvas* Canvas;
    // Field size check
    static_assert(sizeof(::UnityEngine::Rendering::UI::DebugUIHandlerCanvas*) == 0x8);
    // private UnityEngine.RectTransform m_ScrollTransform
    // Size: 0x8
    // Offset: 0x40
    ::UnityEngine::RectTransform* m_ScrollTransform;
    // Field size check
    static_assert(sizeof(::UnityEngine::RectTransform*) == 0x8);
    // private UnityEngine.RectTransform m_ContentTransform
    // Size: 0x8
    // Offset: 0x48
    ::UnityEngine::RectTransform* m_ContentTransform;
    // Field size check
    static_assert(sizeof(::UnityEngine::RectTransform*) == 0x8);
    // private UnityEngine.RectTransform m_MaskTransform
    // Size: 0x8
    // Offset: 0x50
    ::UnityEngine::RectTransform* m_MaskTransform;
    // Field size check
    static_assert(sizeof(::UnityEngine::RectTransform*) == 0x8);
    // private UnityEngine.Rendering.UI.DebugUIHandlerWidget m_ScrollTarget
    // Size: 0x8
    // Offset: 0x58
    ::UnityEngine::Rendering::UI::DebugUIHandlerWidget* m_ScrollTarget;
    // Field size check
    static_assert(sizeof(::UnityEngine::Rendering::UI::DebugUIHandlerWidget*) == 0x8);
    // protected internal UnityEngine.Rendering.DebugUI/Panel m_Panel
    // Size: 0x8
    // Offset: 0x60
    ::UnityEngine::Rendering::DebugUI::Panel* m_Panel;
    // Field size check
    static_assert(sizeof(::UnityEngine::Rendering::DebugUI::Panel*) == 0x8);
    public:
    // Get instance field reference: public UnityEngine.UI.Text nameLabel
    [[deprecated("Use field access instead!")]] ::UnityEngine::UI::Text*& dyn_nameLabel();
    // Get instance field reference: public UnityEngine.UI.ScrollRect scrollRect
    [[deprecated("Use field access instead!")]] ::UnityEngine::UI::ScrollRect*& dyn_scrollRect();
    // Get instance field reference: public UnityEngine.RectTransform viewport
    [[deprecated("Use field access instead!")]] ::UnityEngine::RectTransform*& dyn_viewport();
    // Get instance field reference: public UnityEngine.Rendering.UI.DebugUIHandlerCanvas Canvas
    [[deprecated("Use field access instead!")]] ::UnityEngine::Rendering::UI::DebugUIHandlerCanvas*& dyn_Canvas();
    // Get instance field reference: private UnityEngine.RectTransform m_ScrollTransform
    [[deprecated("Use field access instead!")]] ::UnityEngine::RectTransform*& dyn_m_ScrollTransform();
    // Get instance field reference: private UnityEngine.RectTransform m_ContentTransform
    [[deprecated("Use field access instead!")]] ::UnityEngine::RectTransform*& dyn_m_ContentTransform();
    // Get instance field reference: private UnityEngine.RectTransform m_MaskTransform
    [[deprecated("Use field access instead!")]] ::UnityEngine::RectTransform*& dyn_m_MaskTransform();
    // Get instance field reference: private UnityEngine.Rendering.UI.DebugUIHandlerWidget m_ScrollTarget
    [[deprecated("Use field access instead!")]] ::UnityEngine::Rendering::UI::DebugUIHandlerWidget*& dyn_m_ScrollTarget();
    // Get instance field reference: protected internal UnityEngine.Rendering.DebugUI/Panel m_Panel
    [[deprecated("Use field access instead!")]] ::UnityEngine::Rendering::DebugUI::Panel*& dyn_m_Panel();
    // private System.Void OnEnable()
    // Offset: 0x5268258
    void OnEnable();
    // System.Void SetPanel(UnityEngine.Rendering.DebugUI/Panel panel)
    // Offset: 0x526656C
    void SetPanel(::UnityEngine::Rendering::DebugUI::Panel* panel);
    // UnityEngine.Rendering.DebugUI/Panel GetPanel()
    // Offset: 0x526832C
    ::UnityEngine::Rendering::DebugUI::Panel* GetPanel();
    // public System.Void SelectNextItem()
    // Offset: 0x5268334
    void SelectNextItem();
    // public System.Void SelectPreviousItem()
    // Offset: 0x526834C
    void SelectPreviousItem();
    // public System.Void OnScrollbarClicked()
    // Offset: 0x5268364
    void OnScrollbarClicked();
    // System.Void SetScrollTarget(UnityEngine.Rendering.UI.DebugUIHandlerWidget target)
    // Offset: 0x52683C8
    void SetScrollTarget(::UnityEngine::Rendering::UI::DebugUIHandlerWidget* target);
    // System.Void UpdateScroll()
    // Offset: 0x52659CC
    void UpdateScroll();
    // private System.Single GetYPosInScroll(UnityEngine.RectTransform target)
    // Offset: 0x52683D0
    float GetYPosInScroll(::UnityEngine::RectTransform* target);
    // UnityEngine.Rendering.UI.DebugUIHandlerWidget GetFirstItem()
    // Offset: 0x5266DCC
    ::UnityEngine::Rendering::UI::DebugUIHandlerWidget* GetFirstItem();
    // public System.Void ResetDebugManager()
    // Offset: 0x52684BC
    void ResetDebugManager();
    // public System.Void .ctor()
    // Offset: 0x526851C
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static DebugUIHandlerPanel* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::UI::DebugUIHandlerPanel::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<DebugUIHandlerPanel*, creationType>()));
    }
  }; // UnityEngine.Rendering.UI.DebugUIHandlerPanel
  #pragma pack(pop)
  static check_size<sizeof(DebugUIHandlerPanel), 96 + sizeof(::UnityEngine::Rendering::DebugUI::Panel*)> __UnityEngine_Rendering_UI_DebugUIHandlerPanelSizeCheck;
  static_assert(sizeof(DebugUIHandlerPanel) == 0x68);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::Rendering::UI::DebugUIHandlerPanel::OnEnable
// Il2CppName: OnEnable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Rendering::UI::DebugUIHandlerPanel::*)()>(&UnityEngine::Rendering::UI::DebugUIHandlerPanel::OnEnable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::UI::DebugUIHandlerPanel*), "OnEnable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::UI::DebugUIHandlerPanel::SetPanel
// Il2CppName: SetPanel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Rendering::UI::DebugUIHandlerPanel::*)(::UnityEngine::Rendering::DebugUI::Panel*)>(&UnityEngine::Rendering::UI::DebugUIHandlerPanel::SetPanel)> {
  static const MethodInfo* get() {
    static auto* panel = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "DebugUI/Panel")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::UI::DebugUIHandlerPanel*), "SetPanel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{panel});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::UI::DebugUIHandlerPanel::GetPanel
// Il2CppName: GetPanel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Rendering::DebugUI::Panel* (UnityEngine::Rendering::UI::DebugUIHandlerPanel::*)()>(&UnityEngine::Rendering::UI::DebugUIHandlerPanel::GetPanel)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::UI::DebugUIHandlerPanel*), "GetPanel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::UI::DebugUIHandlerPanel::SelectNextItem
// Il2CppName: SelectNextItem
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Rendering::UI::DebugUIHandlerPanel::*)()>(&UnityEngine::Rendering::UI::DebugUIHandlerPanel::SelectNextItem)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::UI::DebugUIHandlerPanel*), "SelectNextItem", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::UI::DebugUIHandlerPanel::SelectPreviousItem
// Il2CppName: SelectPreviousItem
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Rendering::UI::DebugUIHandlerPanel::*)()>(&UnityEngine::Rendering::UI::DebugUIHandlerPanel::SelectPreviousItem)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::UI::DebugUIHandlerPanel*), "SelectPreviousItem", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::UI::DebugUIHandlerPanel::OnScrollbarClicked
// Il2CppName: OnScrollbarClicked
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Rendering::UI::DebugUIHandlerPanel::*)()>(&UnityEngine::Rendering::UI::DebugUIHandlerPanel::OnScrollbarClicked)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::UI::DebugUIHandlerPanel*), "OnScrollbarClicked", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::UI::DebugUIHandlerPanel::SetScrollTarget
// Il2CppName: SetScrollTarget
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Rendering::UI::DebugUIHandlerPanel::*)(::UnityEngine::Rendering::UI::DebugUIHandlerWidget*)>(&UnityEngine::Rendering::UI::DebugUIHandlerPanel::SetScrollTarget)> {
  static const MethodInfo* get() {
    static auto* target = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering.UI", "DebugUIHandlerWidget")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::UI::DebugUIHandlerPanel*), "SetScrollTarget", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{target});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::UI::DebugUIHandlerPanel::UpdateScroll
// Il2CppName: UpdateScroll
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Rendering::UI::DebugUIHandlerPanel::*)()>(&UnityEngine::Rendering::UI::DebugUIHandlerPanel::UpdateScroll)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::UI::DebugUIHandlerPanel*), "UpdateScroll", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::UI::DebugUIHandlerPanel::GetYPosInScroll
// Il2CppName: GetYPosInScroll
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::Rendering::UI::DebugUIHandlerPanel::*)(::UnityEngine::RectTransform*)>(&UnityEngine::Rendering::UI::DebugUIHandlerPanel::GetYPosInScroll)> {
  static const MethodInfo* get() {
    static auto* target = &::il2cpp_utils::GetClassFromName("UnityEngine", "RectTransform")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::UI::DebugUIHandlerPanel*), "GetYPosInScroll", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{target});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::UI::DebugUIHandlerPanel::GetFirstItem
// Il2CppName: GetFirstItem
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Rendering::UI::DebugUIHandlerWidget* (UnityEngine::Rendering::UI::DebugUIHandlerPanel::*)()>(&UnityEngine::Rendering::UI::DebugUIHandlerPanel::GetFirstItem)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::UI::DebugUIHandlerPanel*), "GetFirstItem", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::UI::DebugUIHandlerPanel::ResetDebugManager
// Il2CppName: ResetDebugManager
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Rendering::UI::DebugUIHandlerPanel::*)()>(&UnityEngine::Rendering::UI::DebugUIHandlerPanel::ResetDebugManager)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::UI::DebugUIHandlerPanel*), "ResetDebugManager", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::UI::DebugUIHandlerPanel::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
