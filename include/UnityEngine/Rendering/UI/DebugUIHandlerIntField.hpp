// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.Rendering.UI.DebugUIHandlerWidget
#include "UnityEngine/Rendering/UI/DebugUIHandlerWidget.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::UI
namespace UnityEngine::UI {
  // Forward declaring type: Text
  class Text;
}
// Completed forward declares
// Type namespace: UnityEngine.Rendering.UI
namespace UnityEngine::Rendering::UI {
  // Forward declaring type: DebugUIHandlerIntField
  class DebugUIHandlerIntField;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::Rendering::UI::DebugUIHandlerIntField);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::Rendering::UI::DebugUIHandlerIntField*, "UnityEngine.Rendering.UI", "DebugUIHandlerIntField");
// Type namespace: UnityEngine.Rendering.UI
namespace UnityEngine::Rendering::UI {
  // Size: 0x78
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.Rendering.UI.DebugUIHandlerIntField
  // [TokenAttribute] Offset: FFFFFFFF
  class DebugUIHandlerIntField : public ::UnityEngine::Rendering::UI::DebugUIHandlerWidget {
    public:
    public:
    // public UnityEngine.UI.Text nameLabel
    // Size: 0x8
    // Offset: 0x60
    ::UnityEngine::UI::Text* nameLabel;
    // Field size check
    static_assert(sizeof(::UnityEngine::UI::Text*) == 0x8);
    // public UnityEngine.UI.Text valueLabel
    // Size: 0x8
    // Offset: 0x68
    ::UnityEngine::UI::Text* valueLabel;
    // Field size check
    static_assert(sizeof(::UnityEngine::UI::Text*) == 0x8);
    // private UnityEngine.Rendering.DebugUI/IntField m_Field
    // Size: 0x8
    // Offset: 0x70
    ::UnityEngine::Rendering::DebugUI::IntField* m_Field;
    // Field size check
    static_assert(sizeof(::UnityEngine::Rendering::DebugUI::IntField*) == 0x8);
    public:
    // Get instance field reference: public UnityEngine.UI.Text nameLabel
    [[deprecated("Use field access instead!")]] ::UnityEngine::UI::Text*& dyn_nameLabel();
    // Get instance field reference: public UnityEngine.UI.Text valueLabel
    [[deprecated("Use field access instead!")]] ::UnityEngine::UI::Text*& dyn_valueLabel();
    // Get instance field reference: private UnityEngine.Rendering.DebugUI/IntField m_Field
    [[deprecated("Use field access instead!")]] ::UnityEngine::Rendering::DebugUI::IntField*& dyn_m_Field();
    // private System.Void ChangeValue(System.Boolean fast, System.Int32 multiplier)
    // Offset: 0x5267ECC
    void ChangeValue(bool fast, int multiplier);
    // private System.Void UpdateValueLabel()
    // Offset: 0x5267D38
    void UpdateValueLabel();
    // override System.Void SetWidget(UnityEngine.Rendering.DebugUI/Widget widget)
    // Offset: 0x5267C90
    // Implemented from: UnityEngine.Rendering.UI.DebugUIHandlerWidget
    // Base method: System.Void DebugUIHandlerWidget::SetWidget(UnityEngine.Rendering.DebugUI/Widget widget)
    void SetWidget(::UnityEngine::Rendering::DebugUI::Widget* widget);
    // public override System.Boolean OnSelection(System.Boolean fromNext, UnityEngine.Rendering.UI.DebugUIHandlerWidget previous)
    // Offset: 0x5267E18
    // Implemented from: UnityEngine.Rendering.UI.DebugUIHandlerWidget
    // Base method: System.Boolean DebugUIHandlerWidget::OnSelection(System.Boolean fromNext, UnityEngine.Rendering.UI.DebugUIHandlerWidget previous)
    bool OnSelection(bool fromNext, ::UnityEngine::Rendering::UI::DebugUIHandlerWidget* previous);
    // public override System.Void OnDeselection()
    // Offset: 0x5267E70
    // Implemented from: UnityEngine.Rendering.UI.DebugUIHandlerWidget
    // Base method: System.Void DebugUIHandlerWidget::OnDeselection()
    void OnDeselection();
    // public override System.Void OnIncrement(System.Boolean fast)
    // Offset: 0x5267EC0
    // Implemented from: UnityEngine.Rendering.UI.DebugUIHandlerWidget
    // Base method: System.Void DebugUIHandlerWidget::OnIncrement(System.Boolean fast)
    void OnIncrement(bool fast);
    // public override System.Void OnDecrement(System.Boolean fast)
    // Offset: 0x5267F6C
    // Implemented from: UnityEngine.Rendering.UI.DebugUIHandlerWidget
    // Base method: System.Void DebugUIHandlerWidget::OnDecrement(System.Boolean fast)
    void OnDecrement(bool fast);
    // public System.Void .ctor()
    // Offset: 0x5267F78
    // Implemented from: UnityEngine.Rendering.UI.DebugUIHandlerWidget
    // Base method: System.Void DebugUIHandlerWidget::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static DebugUIHandlerIntField* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::UI::DebugUIHandlerIntField::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<DebugUIHandlerIntField*, creationType>()));
    }
  }; // UnityEngine.Rendering.UI.DebugUIHandlerIntField
  #pragma pack(pop)
  static check_size<sizeof(DebugUIHandlerIntField), 112 + sizeof(::UnityEngine::Rendering::DebugUI::IntField*)> __UnityEngine_Rendering_UI_DebugUIHandlerIntFieldSizeCheck;
  static_assert(sizeof(DebugUIHandlerIntField) == 0x78);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::Rendering::UI::DebugUIHandlerIntField::ChangeValue
// Il2CppName: ChangeValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Rendering::UI::DebugUIHandlerIntField::*)(bool, int)>(&UnityEngine::Rendering::UI::DebugUIHandlerIntField::ChangeValue)> {
  static const MethodInfo* get() {
    static auto* fast = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* multiplier = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::UI::DebugUIHandlerIntField*), "ChangeValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{fast, multiplier});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::UI::DebugUIHandlerIntField::UpdateValueLabel
// Il2CppName: UpdateValueLabel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Rendering::UI::DebugUIHandlerIntField::*)()>(&UnityEngine::Rendering::UI::DebugUIHandlerIntField::UpdateValueLabel)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::UI::DebugUIHandlerIntField*), "UpdateValueLabel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::UI::DebugUIHandlerIntField::SetWidget
// Il2CppName: SetWidget
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Rendering::UI::DebugUIHandlerIntField::*)(::UnityEngine::Rendering::DebugUI::Widget*)>(&UnityEngine::Rendering::UI::DebugUIHandlerIntField::SetWidget)> {
  static const MethodInfo* get() {
    static auto* widget = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "DebugUI/Widget")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::UI::DebugUIHandlerIntField*), "SetWidget", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{widget});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::UI::DebugUIHandlerIntField::OnSelection
// Il2CppName: OnSelection
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::Rendering::UI::DebugUIHandlerIntField::*)(bool, ::UnityEngine::Rendering::UI::DebugUIHandlerWidget*)>(&UnityEngine::Rendering::UI::DebugUIHandlerIntField::OnSelection)> {
  static const MethodInfo* get() {
    static auto* fromNext = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* previous = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering.UI", "DebugUIHandlerWidget")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::UI::DebugUIHandlerIntField*), "OnSelection", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{fromNext, previous});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::UI::DebugUIHandlerIntField::OnDeselection
// Il2CppName: OnDeselection
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Rendering::UI::DebugUIHandlerIntField::*)()>(&UnityEngine::Rendering::UI::DebugUIHandlerIntField::OnDeselection)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::UI::DebugUIHandlerIntField*), "OnDeselection", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::UI::DebugUIHandlerIntField::OnIncrement
// Il2CppName: OnIncrement
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Rendering::UI::DebugUIHandlerIntField::*)(bool)>(&UnityEngine::Rendering::UI::DebugUIHandlerIntField::OnIncrement)> {
  static const MethodInfo* get() {
    static auto* fast = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::UI::DebugUIHandlerIntField*), "OnIncrement", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{fast});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::UI::DebugUIHandlerIntField::OnDecrement
// Il2CppName: OnDecrement
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Rendering::UI::DebugUIHandlerIntField::*)(bool)>(&UnityEngine::Rendering::UI::DebugUIHandlerIntField::OnDecrement)> {
  static const MethodInfo* get() {
    static auto* fast = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::UI::DebugUIHandlerIntField*), "OnDecrement", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{fast});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::UI::DebugUIHandlerIntField::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
