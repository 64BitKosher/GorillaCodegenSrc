// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
// Including type: UnityEngine.Rendering.DebugUI
#include "UnityEngine/Rendering/DebugUI.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Type namespace: UnityEngine.Rendering.UI
namespace UnityEngine::Rendering::UI {
  // Forward declaring type: DebugUIHandlerWidget
  class DebugUIHandlerWidget;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::Rendering::UI::DebugUIHandlerWidget);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::Rendering::UI::DebugUIHandlerWidget*, "UnityEngine.Rendering.UI", "DebugUIHandlerWidget");
// Type namespace: UnityEngine.Rendering.UI
namespace UnityEngine::Rendering::UI {
  // Size: 0x60
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.Rendering.UI.DebugUIHandlerWidget
  // [TokenAttribute] Offset: FFFFFFFF
  class DebugUIHandlerWidget : public ::UnityEngine::MonoBehaviour {
    public:
    public:
    // public UnityEngine.Color colorDefault
    // Size: 0x10
    // Offset: 0x20
    ::UnityEngine::Color colorDefault;
    // Field size check
    static_assert(sizeof(::UnityEngine::Color) == 0x10);
    // public UnityEngine.Color colorSelected
    // Size: 0x10
    // Offset: 0x30
    ::UnityEngine::Color colorSelected;
    // Field size check
    static_assert(sizeof(::UnityEngine::Color) == 0x10);
    // private UnityEngine.Rendering.UI.DebugUIHandlerWidget <parentUIHandler>k__BackingField
    // Size: 0x8
    // Offset: 0x40
    ::UnityEngine::Rendering::UI::DebugUIHandlerWidget* parentUIHandler;
    // Field size check
    static_assert(sizeof(::UnityEngine::Rendering::UI::DebugUIHandlerWidget*) == 0x8);
    // private UnityEngine.Rendering.UI.DebugUIHandlerWidget <previousUIHandler>k__BackingField
    // Size: 0x8
    // Offset: 0x48
    ::UnityEngine::Rendering::UI::DebugUIHandlerWidget* previousUIHandler;
    // Field size check
    static_assert(sizeof(::UnityEngine::Rendering::UI::DebugUIHandlerWidget*) == 0x8);
    // private UnityEngine.Rendering.UI.DebugUIHandlerWidget <nextUIHandler>k__BackingField
    // Size: 0x8
    // Offset: 0x50
    ::UnityEngine::Rendering::UI::DebugUIHandlerWidget* nextUIHandler;
    // Field size check
    static_assert(sizeof(::UnityEngine::Rendering::UI::DebugUIHandlerWidget*) == 0x8);
    // protected UnityEngine.Rendering.DebugUI/Widget m_Widget
    // Size: 0x8
    // Offset: 0x58
    ::UnityEngine::Rendering::DebugUI::Widget* m_Widget;
    // Field size check
    static_assert(sizeof(::UnityEngine::Rendering::DebugUI::Widget*) == 0x8);
    public:
    // Get instance field reference: public UnityEngine.Color colorDefault
    [[deprecated("Use field access instead!")]] ::UnityEngine::Color& dyn_colorDefault();
    // Get instance field reference: public UnityEngine.Color colorSelected
    [[deprecated("Use field access instead!")]] ::UnityEngine::Color& dyn_colorSelected();
    // Get instance field reference: private UnityEngine.Rendering.UI.DebugUIHandlerWidget <parentUIHandler>k__BackingField
    [[deprecated("Use field access instead!")]] ::UnityEngine::Rendering::UI::DebugUIHandlerWidget*& dyn_$parentUIHandler$k__BackingField();
    // Get instance field reference: private UnityEngine.Rendering.UI.DebugUIHandlerWidget <previousUIHandler>k__BackingField
    [[deprecated("Use field access instead!")]] ::UnityEngine::Rendering::UI::DebugUIHandlerWidget*& dyn_$previousUIHandler$k__BackingField();
    // Get instance field reference: private UnityEngine.Rendering.UI.DebugUIHandlerWidget <nextUIHandler>k__BackingField
    [[deprecated("Use field access instead!")]] ::UnityEngine::Rendering::UI::DebugUIHandlerWidget*& dyn_$nextUIHandler$k__BackingField();
    // Get instance field reference: protected UnityEngine.Rendering.DebugUI/Widget m_Widget
    [[deprecated("Use field access instead!")]] ::UnityEngine::Rendering::DebugUI::Widget*& dyn_m_Widget();
    // public UnityEngine.Rendering.UI.DebugUIHandlerWidget get_parentUIHandler()
    // Offset: 0x5269520
    ::UnityEngine::Rendering::UI::DebugUIHandlerWidget* get_parentUIHandler();
    // public System.Void set_parentUIHandler(UnityEngine.Rendering.UI.DebugUIHandlerWidget value)
    // Offset: 0x5269528
    void set_parentUIHandler(::UnityEngine::Rendering::UI::DebugUIHandlerWidget* value);
    // public UnityEngine.Rendering.UI.DebugUIHandlerWidget get_previousUIHandler()
    // Offset: 0x5269530
    ::UnityEngine::Rendering::UI::DebugUIHandlerWidget* get_previousUIHandler();
    // public System.Void set_previousUIHandler(UnityEngine.Rendering.UI.DebugUIHandlerWidget value)
    // Offset: 0x5269538
    void set_previousUIHandler(::UnityEngine::Rendering::UI::DebugUIHandlerWidget* value);
    // public UnityEngine.Rendering.UI.DebugUIHandlerWidget get_nextUIHandler()
    // Offset: 0x5269540
    ::UnityEngine::Rendering::UI::DebugUIHandlerWidget* get_nextUIHandler();
    // public System.Void set_nextUIHandler(UnityEngine.Rendering.UI.DebugUIHandlerWidget value)
    // Offset: 0x5269548
    void set_nextUIHandler(::UnityEngine::Rendering::UI::DebugUIHandlerWidget* value);
    // protected System.Void OnEnable()
    // Offset: 0x5269550
    void OnEnable();
    // System.Void SetWidget(UnityEngine.Rendering.DebugUI/Widget widget)
    // Offset: 0x5269554
    void SetWidget(::UnityEngine::Rendering::DebugUI::Widget* widget);
    // UnityEngine.Rendering.DebugUI/Widget GetWidget()
    // Offset: 0x526955C
    ::UnityEngine::Rendering::DebugUI::Widget* GetWidget();
    // protected T CastWidget()
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class T>
    T CastWidget() {
      static_assert(std::is_convertible_v<T, ::UnityEngine::Rendering::DebugUI::Widget*>);
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::UI::DebugUIHandlerWidget::CastWidget");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CastWidget", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}, ::std::vector<const Il2CppType*>{})));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}));
      return ::il2cpp_utils::RunMethodRethrow<T, false>(this, ___generic__method);
    }
    // public System.Boolean OnSelection(System.Boolean fromNext, UnityEngine.Rendering.UI.DebugUIHandlerWidget previous)
    // Offset: 0x5269564
    bool OnSelection(bool fromNext, ::UnityEngine::Rendering::UI::DebugUIHandlerWidget* previous);
    // public System.Void OnDeselection()
    // Offset: 0x526956C
    void OnDeselection();
    // public System.Void OnAction()
    // Offset: 0x5269570
    void OnAction();
    // public System.Void OnIncrement(System.Boolean fast)
    // Offset: 0x5269574
    void OnIncrement(bool fast);
    // public System.Void OnDecrement(System.Boolean fast)
    // Offset: 0x5269578
    void OnDecrement(bool fast);
    // public UnityEngine.Rendering.UI.DebugUIHandlerWidget Previous()
    // Offset: 0x526957C
    ::UnityEngine::Rendering::UI::DebugUIHandlerWidget* Previous();
    // public UnityEngine.Rendering.UI.DebugUIHandlerWidget Next()
    // Offset: 0x5269628
    ::UnityEngine::Rendering::UI::DebugUIHandlerWidget* Next();
    // public System.Void .ctor()
    // Offset: 0x5267F94
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static DebugUIHandlerWidget* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::UI::DebugUIHandlerWidget::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<DebugUIHandlerWidget*, creationType>()));
    }
  }; // UnityEngine.Rendering.UI.DebugUIHandlerWidget
  #pragma pack(pop)
  static check_size<sizeof(DebugUIHandlerWidget), 88 + sizeof(::UnityEngine::Rendering::DebugUI::Widget*)> __UnityEngine_Rendering_UI_DebugUIHandlerWidgetSizeCheck;
  static_assert(sizeof(DebugUIHandlerWidget) == 0x60);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::Rendering::UI::DebugUIHandlerWidget::get_parentUIHandler
// Il2CppName: get_parentUIHandler
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Rendering::UI::DebugUIHandlerWidget* (UnityEngine::Rendering::UI::DebugUIHandlerWidget::*)()>(&UnityEngine::Rendering::UI::DebugUIHandlerWidget::get_parentUIHandler)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::UI::DebugUIHandlerWidget*), "get_parentUIHandler", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::UI::DebugUIHandlerWidget::set_parentUIHandler
// Il2CppName: set_parentUIHandler
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Rendering::UI::DebugUIHandlerWidget::*)(::UnityEngine::Rendering::UI::DebugUIHandlerWidget*)>(&UnityEngine::Rendering::UI::DebugUIHandlerWidget::set_parentUIHandler)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering.UI", "DebugUIHandlerWidget")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::UI::DebugUIHandlerWidget*), "set_parentUIHandler", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::UI::DebugUIHandlerWidget::get_previousUIHandler
// Il2CppName: get_previousUIHandler
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Rendering::UI::DebugUIHandlerWidget* (UnityEngine::Rendering::UI::DebugUIHandlerWidget::*)()>(&UnityEngine::Rendering::UI::DebugUIHandlerWidget::get_previousUIHandler)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::UI::DebugUIHandlerWidget*), "get_previousUIHandler", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::UI::DebugUIHandlerWidget::set_previousUIHandler
// Il2CppName: set_previousUIHandler
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Rendering::UI::DebugUIHandlerWidget::*)(::UnityEngine::Rendering::UI::DebugUIHandlerWidget*)>(&UnityEngine::Rendering::UI::DebugUIHandlerWidget::set_previousUIHandler)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering.UI", "DebugUIHandlerWidget")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::UI::DebugUIHandlerWidget*), "set_previousUIHandler", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::UI::DebugUIHandlerWidget::get_nextUIHandler
// Il2CppName: get_nextUIHandler
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Rendering::UI::DebugUIHandlerWidget* (UnityEngine::Rendering::UI::DebugUIHandlerWidget::*)()>(&UnityEngine::Rendering::UI::DebugUIHandlerWidget::get_nextUIHandler)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::UI::DebugUIHandlerWidget*), "get_nextUIHandler", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::UI::DebugUIHandlerWidget::set_nextUIHandler
// Il2CppName: set_nextUIHandler
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Rendering::UI::DebugUIHandlerWidget::*)(::UnityEngine::Rendering::UI::DebugUIHandlerWidget*)>(&UnityEngine::Rendering::UI::DebugUIHandlerWidget::set_nextUIHandler)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering.UI", "DebugUIHandlerWidget")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::UI::DebugUIHandlerWidget*), "set_nextUIHandler", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::UI::DebugUIHandlerWidget::OnEnable
// Il2CppName: OnEnable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Rendering::UI::DebugUIHandlerWidget::*)()>(&UnityEngine::Rendering::UI::DebugUIHandlerWidget::OnEnable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::UI::DebugUIHandlerWidget*), "OnEnable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::UI::DebugUIHandlerWidget::SetWidget
// Il2CppName: SetWidget
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Rendering::UI::DebugUIHandlerWidget::*)(::UnityEngine::Rendering::DebugUI::Widget*)>(&UnityEngine::Rendering::UI::DebugUIHandlerWidget::SetWidget)> {
  static const MethodInfo* get() {
    static auto* widget = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "DebugUI/Widget")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::UI::DebugUIHandlerWidget*), "SetWidget", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{widget});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::UI::DebugUIHandlerWidget::GetWidget
// Il2CppName: GetWidget
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Rendering::DebugUI::Widget* (UnityEngine::Rendering::UI::DebugUIHandlerWidget::*)()>(&UnityEngine::Rendering::UI::DebugUIHandlerWidget::GetWidget)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::UI::DebugUIHandlerWidget*), "GetWidget", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::UI::DebugUIHandlerWidget::CastWidget
// Il2CppName: CastWidget
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: UnityEngine::Rendering::UI::DebugUIHandlerWidget::OnSelection
// Il2CppName: OnSelection
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::Rendering::UI::DebugUIHandlerWidget::*)(bool, ::UnityEngine::Rendering::UI::DebugUIHandlerWidget*)>(&UnityEngine::Rendering::UI::DebugUIHandlerWidget::OnSelection)> {
  static const MethodInfo* get() {
    static auto* fromNext = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* previous = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering.UI", "DebugUIHandlerWidget")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::UI::DebugUIHandlerWidget*), "OnSelection", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{fromNext, previous});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::UI::DebugUIHandlerWidget::OnDeselection
// Il2CppName: OnDeselection
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Rendering::UI::DebugUIHandlerWidget::*)()>(&UnityEngine::Rendering::UI::DebugUIHandlerWidget::OnDeselection)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::UI::DebugUIHandlerWidget*), "OnDeselection", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::UI::DebugUIHandlerWidget::OnAction
// Il2CppName: OnAction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Rendering::UI::DebugUIHandlerWidget::*)()>(&UnityEngine::Rendering::UI::DebugUIHandlerWidget::OnAction)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::UI::DebugUIHandlerWidget*), "OnAction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::UI::DebugUIHandlerWidget::OnIncrement
// Il2CppName: OnIncrement
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Rendering::UI::DebugUIHandlerWidget::*)(bool)>(&UnityEngine::Rendering::UI::DebugUIHandlerWidget::OnIncrement)> {
  static const MethodInfo* get() {
    static auto* fast = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::UI::DebugUIHandlerWidget*), "OnIncrement", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{fast});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::UI::DebugUIHandlerWidget::OnDecrement
// Il2CppName: OnDecrement
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Rendering::UI::DebugUIHandlerWidget::*)(bool)>(&UnityEngine::Rendering::UI::DebugUIHandlerWidget::OnDecrement)> {
  static const MethodInfo* get() {
    static auto* fast = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::UI::DebugUIHandlerWidget*), "OnDecrement", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{fast});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::UI::DebugUIHandlerWidget::Previous
// Il2CppName: Previous
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Rendering::UI::DebugUIHandlerWidget* (UnityEngine::Rendering::UI::DebugUIHandlerWidget::*)()>(&UnityEngine::Rendering::UI::DebugUIHandlerWidget::Previous)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::UI::DebugUIHandlerWidget*), "Previous", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::UI::DebugUIHandlerWidget::Next
// Il2CppName: Next
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Rendering::UI::DebugUIHandlerWidget* (UnityEngine::Rendering::UI::DebugUIHandlerWidget::*)()>(&UnityEngine::Rendering::UI::DebugUIHandlerWidget::Next)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::UI::DebugUIHandlerWidget*), "Next", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::UI::DebugUIHandlerWidget::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
