// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.Rendering.DebugUI
#include "UnityEngine/Rendering/DebugUI.hpp"
// Including type: UnityEngine.Rendering.DebugUI/EnumField`1
#include "UnityEngine/Rendering/DebugUI_EnumField_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::Rendering
namespace UnityEngine::Rendering {
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Func`1<TResult>
  template<typename TResult>
  class Func_1;
  // Forward declaring type: Action`1<T>
  template<typename T>
  class Action_1;
  // Forward declaring type: Type
  class Type;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::Rendering::DebugUI::EnumField);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::Rendering::DebugUI::EnumField*, "UnityEngine.Rendering", "DebugUI/EnumField");
// Type namespace: UnityEngine.Rendering
namespace UnityEngine::Rendering {
  // WARNING Size may be invalid!
  // Autogenerated type: UnityEngine.Rendering.DebugUI/EnumField
  // [TokenAttribute] Offset: FFFFFFFF
  class DebugUI::EnumField : public ::UnityEngine::Rendering::DebugUI::EnumField_1<int> {
    public:
    // Nested type: ::UnityEngine::Rendering::DebugUI::EnumField::$$c
    class $$c;
    public:
    // System.Int32[] quickSeparators
    // Size: 0x8
    // Offset: 0x70
    ::ArrayW<int> quickSeparators;
    // Field size check
    static_assert(sizeof(::ArrayW<int>) == 0x8);
    // private System.Func`1<System.Int32> <getIndex>k__BackingField
    // Size: 0x8
    // Offset: 0x78
    ::System::Func_1<int>* getIndex;
    // Field size check
    static_assert(sizeof(::System::Func_1<int>*) == 0x8);
    // private System.Action`1<System.Int32> <setIndex>k__BackingField
    // Size: 0x8
    // Offset: 0x80
    ::System::Action_1<int>* setIndex;
    // Field size check
    static_assert(sizeof(::System::Action_1<int>*) == 0x8);
    public:
    // Get instance field reference: System.Int32[] quickSeparators
    [[deprecated("Use field access instead!")]] ::ArrayW<int>& dyn_quickSeparators();
    // Get instance field reference: private System.Func`1<System.Int32> <getIndex>k__BackingField
    [[deprecated("Use field access instead!")]] ::System::Func_1<int>*& dyn_$getIndex$k__BackingField();
    // Get instance field reference: private System.Action`1<System.Int32> <setIndex>k__BackingField
    [[deprecated("Use field access instead!")]] ::System::Action_1<int>*& dyn_$setIndex$k__BackingField();
    // public System.Func`1<System.Int32> get_getIndex()
    // Offset: 0x524A3A8
    ::System::Func_1<int>* get_getIndex();
    // public System.Void set_getIndex(System.Func`1<System.Int32> value)
    // Offset: 0x524A3B0
    void set_getIndex(::System::Func_1<int>* value);
    // public System.Action`1<System.Int32> get_setIndex()
    // Offset: 0x524A3B8
    ::System::Action_1<int>* get_setIndex();
    // public System.Void set_setIndex(System.Action`1<System.Int32> value)
    // Offset: 0x524A3C0
    void set_setIndex(::System::Action_1<int>* value);
    // public System.Int32 get_currentIndex()
    // Offset: 0x524A3C8
    int get_currentIndex();
    // public System.Void set_currentIndex(System.Int32 value)
    // Offset: 0x524A3EC
    void set_currentIndex(int value);
    // public System.Void set_autoEnum(System.Type value)
    // Offset: 0x524A410
    void set_autoEnum(::System::Type* value);
    // System.Void InitQuickSeparators()
    // Offset: 0x524A470
    void InitQuickSeparators();
    // public System.Void SetValue(System.Int32 value)
    // Offset: 0x524A694
    void SetValue(int value);
    // public System.Void .ctor()
    // Offset: 0x524A7DC
    // Implemented from: UnityEngine.Rendering.DebugUI/EnumField`1
    // Base method: System.Void EnumField_1::.ctor()
    // Base method: System.Void Field_1::.ctor()
    // Base method: System.Void Widget::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static DebugUI::EnumField* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::DebugUI::EnumField::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<DebugUI::EnumField*, creationType>()));
    }
  }; // UnityEngine.Rendering.DebugUI/EnumField
  // WARNING Not writing size check since size may be invalid!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::Rendering::DebugUI::EnumField::get_getIndex
// Il2CppName: get_getIndex
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Func_1<int>* (UnityEngine::Rendering::DebugUI::EnumField::*)()>(&UnityEngine::Rendering::DebugUI::EnumField::get_getIndex)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::DebugUI::EnumField*), "get_getIndex", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::DebugUI::EnumField::set_getIndex
// Il2CppName: set_getIndex
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Rendering::DebugUI::EnumField::*)(::System::Func_1<int>*)>(&UnityEngine::Rendering::DebugUI::EnumField::set_getIndex)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Func`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Int32")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::DebugUI::EnumField*), "set_getIndex", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::DebugUI::EnumField::get_setIndex
// Il2CppName: get_setIndex
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Action_1<int>* (UnityEngine::Rendering::DebugUI::EnumField::*)()>(&UnityEngine::Rendering::DebugUI::EnumField::get_setIndex)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::DebugUI::EnumField*), "get_setIndex", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::DebugUI::EnumField::set_setIndex
// Il2CppName: set_setIndex
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Rendering::DebugUI::EnumField::*)(::System::Action_1<int>*)>(&UnityEngine::Rendering::DebugUI::EnumField::set_setIndex)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Int32")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::DebugUI::EnumField*), "set_setIndex", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::DebugUI::EnumField::get_currentIndex
// Il2CppName: get_currentIndex
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::Rendering::DebugUI::EnumField::*)()>(&UnityEngine::Rendering::DebugUI::EnumField::get_currentIndex)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::DebugUI::EnumField*), "get_currentIndex", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::DebugUI::EnumField::set_currentIndex
// Il2CppName: set_currentIndex
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Rendering::DebugUI::EnumField::*)(int)>(&UnityEngine::Rendering::DebugUI::EnumField::set_currentIndex)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::DebugUI::EnumField*), "set_currentIndex", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::DebugUI::EnumField::set_autoEnum
// Il2CppName: set_autoEnum
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Rendering::DebugUI::EnumField::*)(::System::Type*)>(&UnityEngine::Rendering::DebugUI::EnumField::set_autoEnum)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Type")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::DebugUI::EnumField*), "set_autoEnum", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::DebugUI::EnumField::InitQuickSeparators
// Il2CppName: InitQuickSeparators
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Rendering::DebugUI::EnumField::*)()>(&UnityEngine::Rendering::DebugUI::EnumField::InitQuickSeparators)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::DebugUI::EnumField*), "InitQuickSeparators", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::DebugUI::EnumField::SetValue
// Il2CppName: SetValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Rendering::DebugUI::EnumField::*)(int)>(&UnityEngine::Rendering::DebugUI::EnumField::SetValue)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::DebugUI::EnumField*), "SetValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::DebugUI::EnumField::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
