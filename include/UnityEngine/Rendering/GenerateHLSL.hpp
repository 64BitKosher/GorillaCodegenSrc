// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Attribute
#include "System/Attribute.hpp"
// Including type: UnityEngine.Rendering.PackingRules
#include "UnityEngine/Rendering/PackingRules.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Type namespace: UnityEngine.Rendering
namespace UnityEngine::Rendering {
  // Forward declaring type: GenerateHLSL
  class GenerateHLSL;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::Rendering::GenerateHLSL);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::Rendering::GenerateHLSL*, "UnityEngine.Rendering", "GenerateHLSL");
// Type namespace: UnityEngine.Rendering
namespace UnityEngine::Rendering {
  // Size: 0x30
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.Rendering.GenerateHLSL
  // [TokenAttribute] Offset: FFFFFFFF
  // [AttributeUsageAttribute] Offset: FFFFFFFF
  class GenerateHLSL : public ::System::Attribute {
    public:
    public:
    // public UnityEngine.Rendering.PackingRules packingRules
    // Size: 0x4
    // Offset: 0x10
    ::UnityEngine::Rendering::PackingRules packingRules;
    // Field size check
    static_assert(sizeof(::UnityEngine::Rendering::PackingRules) == 0x4);
    // public System.Boolean containsPackedFields
    // Size: 0x1
    // Offset: 0x14
    bool containsPackedFields;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // public System.Boolean needAccessors
    // Size: 0x1
    // Offset: 0x15
    bool needAccessors;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // public System.Boolean needSetters
    // Size: 0x1
    // Offset: 0x16
    bool needSetters;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // public System.Boolean needParamDebug
    // Size: 0x1
    // Offset: 0x17
    bool needParamDebug;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // public System.Int32 paramDefinesStart
    // Size: 0x4
    // Offset: 0x18
    int paramDefinesStart;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // public System.Boolean omitStructDeclaration
    // Size: 0x1
    // Offset: 0x1C
    bool omitStructDeclaration;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // public System.Boolean generateCBuffer
    // Size: 0x1
    // Offset: 0x1D
    bool generateCBuffer;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: generateCBuffer and: constantRegister
    char __padding7[0x2] = {};
    // public System.Int32 constantRegister
    // Size: 0x4
    // Offset: 0x20
    int constantRegister;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // Padding between fields: constantRegister and: sourcePath
    char __padding8[0x4] = {};
    // public System.String sourcePath
    // Size: 0x8
    // Offset: 0x28
    ::StringW sourcePath;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    public:
    // Get instance field reference: public UnityEngine.Rendering.PackingRules packingRules
    [[deprecated("Use field access instead!")]] ::UnityEngine::Rendering::PackingRules& dyn_packingRules();
    // Get instance field reference: public System.Boolean containsPackedFields
    [[deprecated("Use field access instead!")]] bool& dyn_containsPackedFields();
    // Get instance field reference: public System.Boolean needAccessors
    [[deprecated("Use field access instead!")]] bool& dyn_needAccessors();
    // Get instance field reference: public System.Boolean needSetters
    [[deprecated("Use field access instead!")]] bool& dyn_needSetters();
    // Get instance field reference: public System.Boolean needParamDebug
    [[deprecated("Use field access instead!")]] bool& dyn_needParamDebug();
    // Get instance field reference: public System.Int32 paramDefinesStart
    [[deprecated("Use field access instead!")]] int& dyn_paramDefinesStart();
    // Get instance field reference: public System.Boolean omitStructDeclaration
    [[deprecated("Use field access instead!")]] bool& dyn_omitStructDeclaration();
    // Get instance field reference: public System.Boolean generateCBuffer
    [[deprecated("Use field access instead!")]] bool& dyn_generateCBuffer();
    // Get instance field reference: public System.Int32 constantRegister
    [[deprecated("Use field access instead!")]] int& dyn_constantRegister();
    // Get instance field reference: public System.String sourcePath
    [[deprecated("Use field access instead!")]] ::StringW& dyn_sourcePath();
    // public System.Void .ctor(UnityEngine.Rendering.PackingRules rules, System.Boolean needAccessors, System.Boolean needSetters, System.Boolean needParamDebug, System.Int32 paramDefinesStart, System.Boolean omitStructDeclaration, System.Boolean containsPackedFields, System.Boolean generateCBuffer, System.Int32 constantRegister, System.String sourcePath)
    // Offset: 0x525227C
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static GenerateHLSL* New_ctor(::UnityEngine::Rendering::PackingRules rules, bool needAccessors, bool needSetters, bool needParamDebug, int paramDefinesStart, bool omitStructDeclaration, bool containsPackedFields, bool generateCBuffer, int constantRegister, ::StringW sourcePath) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::GenerateHLSL::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<GenerateHLSL*, creationType>(rules, needAccessors, needSetters, needParamDebug, paramDefinesStart, omitStructDeclaration, containsPackedFields, generateCBuffer, constantRegister, sourcePath)));
    }
  }; // UnityEngine.Rendering.GenerateHLSL
  #pragma pack(pop)
  static check_size<sizeof(GenerateHLSL), 40 + sizeof(::StringW)> __UnityEngine_Rendering_GenerateHLSLSizeCheck;
  static_assert(sizeof(GenerateHLSL) == 0x30);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::Rendering::GenerateHLSL::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
