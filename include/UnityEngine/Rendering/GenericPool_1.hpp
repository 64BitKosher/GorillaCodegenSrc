// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::Rendering
namespace UnityEngine::Rendering {
  // Forward declaring type: ObjectPool`1<T>
  template<typename T>
  class ObjectPool_1;
}
// Completed forward declares
// Type namespace: UnityEngine.Rendering
namespace UnityEngine::Rendering {
  // Forward declaring type: GenericPool`1<T>
  template<typename T>
  class GenericPool_1;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE_GENERIC_CLASS(::UnityEngine::Rendering::GenericPool_1, "UnityEngine.Rendering", "GenericPool`1");
// Type namespace: UnityEngine.Rendering
namespace UnityEngine::Rendering {
  // WARNING Size may be invalid!
  // Autogenerated type: UnityEngine.Rendering.GenericPool`1
  // [TokenAttribute] Offset: FFFFFFFF
  template<typename T>
  class GenericPool_1 : public ::Il2CppObject {
    public:
    // Autogenerated static field getter
    // Get static field: static private readonly UnityEngine.Rendering.ObjectPool`1<T> s_Pool
    static ::UnityEngine::Rendering::ObjectPool_1<T>* _get_s_Pool() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::GenericPool_1::_get_s_Pool");
      return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Rendering::ObjectPool_1<T>*>(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<GenericPool_1<T>*>::get(), "s_Pool"));
    }
    // Autogenerated static field setter
    // Set static field: static private readonly UnityEngine.Rendering.ObjectPool`1<T> s_Pool
    static void _set_s_Pool(::UnityEngine::Rendering::ObjectPool_1<T>* value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::GenericPool_1::_set_s_Pool");
      THROW_UNLESS(il2cpp_utils::SetFieldValue(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<GenericPool_1<T>*>::get(), "s_Pool", value));
    }
    // static public T Get()
    // Offset: 0xFFFFFFFFFFFFFFFF
    static T Get() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::GenericPool_1::Get");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<GenericPool_1<T>*>::get(), "Get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      return ::il2cpp_utils::RunMethodRethrow<T, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
    }
    // static public System.Void Release(T toRelease)
    // Offset: 0xFFFFFFFFFFFFFFFF
    static void Release(T toRelease) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::GenericPool_1::Release");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<GenericPool_1<T>*>::get(), "Release", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(toRelease)})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, toRelease);
    }
    // static private System.Void .cctor()
    // Offset: 0xFFFFFFFFFFFFFFFF
    static void _cctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::GenericPool_1::.cctor");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<GenericPool_1<T>*>::get(), ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
    }
  }; // UnityEngine.Rendering.GenericPool`1
  // Could not write size check! Type: UnityEngine.Rendering.GenericPool`1 is generic, or has no fields that are valid for size checks!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
