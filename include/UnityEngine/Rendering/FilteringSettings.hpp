// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Including type: System.IEquatable`1
#include "System/IEquatable_1.hpp"
// Including type: UnityEngine.Rendering.RenderQueueRange
#include "UnityEngine/Rendering/RenderQueueRange.hpp"
// Including type: UnityEngine.Rendering.SortingLayerRange
#include "UnityEngine/Rendering/SortingLayerRange.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Nullable`1<T>
  template<typename T>
  struct Nullable_1;
}
// Completed forward declares
// Type namespace: UnityEngine.Rendering
namespace UnityEngine::Rendering {
  // Forward declaring type: FilteringSettings
  struct FilteringSettings;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::Rendering::FilteringSettings, "UnityEngine.Rendering", "FilteringSettings");
// Type namespace: UnityEngine.Rendering
namespace UnityEngine::Rendering {
  // Size: 0x18
  #pragma pack(push, 1)
  // WARNING Layout: Sequential may not be correctly taken into account!
  // Autogenerated type: UnityEngine.Rendering.FilteringSettings
  // [TokenAttribute] Offset: FFFFFFFF
  struct FilteringSettings/*, public ::System::ValueType, public ::System::IEquatable_1<::UnityEngine::Rendering::FilteringSettings>*/ {
    public:
    public:
    // private UnityEngine.Rendering.RenderQueueRange m_RenderQueueRange
    // Size: 0x8
    // Offset: 0x0
    ::UnityEngine::Rendering::RenderQueueRange m_RenderQueueRange;
    // Field size check
    static_assert(sizeof(::UnityEngine::Rendering::RenderQueueRange) == 0x8);
    // private System.Int32 m_LayerMask
    // Size: 0x4
    // Offset: 0x8
    int m_LayerMask;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private System.UInt32 m_RenderingLayerMask
    // Size: 0x4
    // Offset: 0xC
    uint m_RenderingLayerMask;
    // Field size check
    static_assert(sizeof(uint) == 0x4);
    // private System.Int32 m_ExcludeMotionVectorObjects
    // Size: 0x4
    // Offset: 0x10
    int m_ExcludeMotionVectorObjects;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private UnityEngine.Rendering.SortingLayerRange m_SortingLayerRange
    // Size: 0x4
    // Offset: 0x14
    ::UnityEngine::Rendering::SortingLayerRange m_SortingLayerRange;
    // Field size check
    static_assert(sizeof(::UnityEngine::Rendering::SortingLayerRange) == 0x4);
    public:
    // Creating value type constructor for type: FilteringSettings
    constexpr FilteringSettings(::UnityEngine::Rendering::RenderQueueRange m_RenderQueueRange_ = {}, int m_LayerMask_ = {}, uint m_RenderingLayerMask_ = {}, int m_ExcludeMotionVectorObjects_ = {}, ::UnityEngine::Rendering::SortingLayerRange m_SortingLayerRange_ = {}) noexcept : m_RenderQueueRange{m_RenderQueueRange_}, m_LayerMask{m_LayerMask_}, m_RenderingLayerMask{m_RenderingLayerMask_}, m_ExcludeMotionVectorObjects{m_ExcludeMotionVectorObjects_}, m_SortingLayerRange{m_SortingLayerRange_} {}
    // Creating interface conversion operator: operator ::System::ValueType
    operator ::System::ValueType() noexcept {
      return *reinterpret_cast<::System::ValueType*>(this);
    }
    // Creating interface conversion operator: operator ::System::IEquatable_1<::UnityEngine::Rendering::FilteringSettings>
    operator ::System::IEquatable_1<::UnityEngine::Rendering::FilteringSettings>() noexcept {
      return *reinterpret_cast<::System::IEquatable_1<::UnityEngine::Rendering::FilteringSettings>*>(this);
    }
    // Get instance field reference: private UnityEngine.Rendering.RenderQueueRange m_RenderQueueRange
    [[deprecated("Use field access instead!")]] ::UnityEngine::Rendering::RenderQueueRange& dyn_m_RenderQueueRange();
    // Get instance field reference: private System.Int32 m_LayerMask
    [[deprecated("Use field access instead!")]] int& dyn_m_LayerMask();
    // Get instance field reference: private System.UInt32 m_RenderingLayerMask
    [[deprecated("Use field access instead!")]] uint& dyn_m_RenderingLayerMask();
    // Get instance field reference: private System.Int32 m_ExcludeMotionVectorObjects
    [[deprecated("Use field access instead!")]] int& dyn_m_ExcludeMotionVectorObjects();
    // Get instance field reference: private UnityEngine.Rendering.SortingLayerRange m_SortingLayerRange
    [[deprecated("Use field access instead!")]] ::UnityEngine::Rendering::SortingLayerRange& dyn_m_SortingLayerRange();
    // public System.Void .ctor(System.Nullable`1<UnityEngine.Rendering.RenderQueueRange> renderQueueRange, System.Int32 layerMask, System.UInt32 renderingLayerMask, System.Int32 excludeMotionVectorObjects)
    // Offset: 0x54E7BC8
    FilteringSettings(::System::Nullable_1<::UnityEngine::Rendering::RenderQueueRange> renderQueueRange, int layerMask, uint renderingLayerMask, int excludeMotionVectorObjects);
    // public UnityEngine.Rendering.RenderQueueRange get_renderQueueRange()
    // Offset: 0x54E7CA0
    ::UnityEngine::Rendering::RenderQueueRange get_renderQueueRange();
    // public System.Void set_renderQueueRange(UnityEngine.Rendering.RenderQueueRange value)
    // Offset: 0x54E7CA8
    void set_renderQueueRange(::UnityEngine::Rendering::RenderQueueRange value);
    // public System.Void set_layerMask(System.Int32 value)
    // Offset: 0x54E7CB0
    void set_layerMask(int value);
    // public System.Void set_renderingLayerMask(System.UInt32 value)
    // Offset: 0x54E7CB8
    void set_renderingLayerMask(uint value);
    // public System.Void set_excludeMotionVectorObjects(System.Boolean value)
    // Offset: 0x54E7CC0
    void set_excludeMotionVectorObjects(bool value);
    // public System.Void set_sortingLayerRange(UnityEngine.Rendering.SortingLayerRange value)
    // Offset: 0x54E7CCC
    void set_sortingLayerRange(::UnityEngine::Rendering::SortingLayerRange value);
    // public System.Boolean Equals(UnityEngine.Rendering.FilteringSettings other)
    // Offset: 0x54E7CD4
    bool Equals(::UnityEngine::Rendering::FilteringSettings other);
    // public override System.Boolean Equals(System.Object obj)
    // Offset: 0x54E7D58
    // Implemented from: System.ValueType
    // Base method: System.Boolean ValueType::Equals(System.Object obj)
    bool Equals(::Il2CppObject* obj);
    // public override System.Int32 GetHashCode()
    // Offset: 0x54E7E10
    // Implemented from: System.ValueType
    // Base method: System.Int32 ValueType::GetHashCode()
    int GetHashCode();
  }; // UnityEngine.Rendering.FilteringSettings
  #pragma pack(pop)
  static check_size<sizeof(FilteringSettings), 20 + sizeof(::UnityEngine::Rendering::SortingLayerRange)> __UnityEngine_Rendering_FilteringSettingsSizeCheck;
  static_assert(sizeof(FilteringSettings) == 0x18);
  // static public System.Boolean op_Equality(UnityEngine.Rendering.FilteringSettings left, UnityEngine.Rendering.FilteringSettings right)
  // Offset: 0x54E7E58
  bool operator ==(const ::UnityEngine::Rendering::FilteringSettings& left, const ::UnityEngine::Rendering::FilteringSettings& right);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::Rendering::FilteringSettings::FilteringSettings
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::Rendering::FilteringSettings::get_renderQueueRange
// Il2CppName: get_renderQueueRange
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Rendering::RenderQueueRange (UnityEngine::Rendering::FilteringSettings::*)()>(&UnityEngine::Rendering::FilteringSettings::get_renderQueueRange)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::FilteringSettings), "get_renderQueueRange", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::FilteringSettings::set_renderQueueRange
// Il2CppName: set_renderQueueRange
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Rendering::FilteringSettings::*)(::UnityEngine::Rendering::RenderQueueRange)>(&UnityEngine::Rendering::FilteringSettings::set_renderQueueRange)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "RenderQueueRange")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::FilteringSettings), "set_renderQueueRange", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::FilteringSettings::set_layerMask
// Il2CppName: set_layerMask
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Rendering::FilteringSettings::*)(int)>(&UnityEngine::Rendering::FilteringSettings::set_layerMask)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::FilteringSettings), "set_layerMask", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::FilteringSettings::set_renderingLayerMask
// Il2CppName: set_renderingLayerMask
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Rendering::FilteringSettings::*)(uint)>(&UnityEngine::Rendering::FilteringSettings::set_renderingLayerMask)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::FilteringSettings), "set_renderingLayerMask", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::FilteringSettings::set_excludeMotionVectorObjects
// Il2CppName: set_excludeMotionVectorObjects
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Rendering::FilteringSettings::*)(bool)>(&UnityEngine::Rendering::FilteringSettings::set_excludeMotionVectorObjects)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::FilteringSettings), "set_excludeMotionVectorObjects", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::FilteringSettings::set_sortingLayerRange
// Il2CppName: set_sortingLayerRange
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Rendering::FilteringSettings::*)(::UnityEngine::Rendering::SortingLayerRange)>(&UnityEngine::Rendering::FilteringSettings::set_sortingLayerRange)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "SortingLayerRange")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::FilteringSettings), "set_sortingLayerRange", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::FilteringSettings::Equals
// Il2CppName: Equals
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::Rendering::FilteringSettings::*)(::UnityEngine::Rendering::FilteringSettings)>(&UnityEngine::Rendering::FilteringSettings::Equals)> {
  static const MethodInfo* get() {
    static auto* other = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "FilteringSettings")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::FilteringSettings), "Equals", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{other});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::FilteringSettings::Equals
// Il2CppName: Equals
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::Rendering::FilteringSettings::*)(::Il2CppObject*)>(&UnityEngine::Rendering::FilteringSettings::Equals)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::FilteringSettings), "Equals", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::FilteringSettings::GetHashCode
// Il2CppName: GetHashCode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::Rendering::FilteringSettings::*)()>(&UnityEngine::Rendering::FilteringSettings::GetHashCode)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::FilteringSettings), "GetHashCode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::FilteringSettings::operator ==
// Il2CppName: op_Equality
// Cannot perform method pointer template specialization from operators!
