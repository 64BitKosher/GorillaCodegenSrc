// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.Rendering.VolumeParameter`1
#include "UnityEngine/Rendering/VolumeParameter_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::Rendering
namespace UnityEngine::Rendering {
  // Forward declaring type: TextureCurve
  class TextureCurve;
}
// Completed forward declares
// Type namespace: UnityEngine.Rendering
namespace UnityEngine::Rendering {
  // Forward declaring type: TextureCurveParameter
  class TextureCurveParameter;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::Rendering::TextureCurveParameter);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::Rendering::TextureCurveParameter*, "UnityEngine.Rendering", "TextureCurveParameter");
// Type namespace: UnityEngine.Rendering
namespace UnityEngine::Rendering {
  // WARNING Size may be invalid!
  // Autogenerated type: UnityEngine.Rendering.TextureCurveParameter
  // [TokenAttribute] Offset: FFFFFFFF
  class TextureCurveParameter : public ::UnityEngine::Rendering::VolumeParameter_1<::UnityEngine::Rendering::TextureCurve*> {
    public:
    // public System.Void .ctor(UnityEngine.Rendering.TextureCurve value, System.Boolean overrideState)
    // Offset: 0x525F4E4
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static TextureCurveParameter* New_ctor(::UnityEngine::Rendering::TextureCurve* value, bool overrideState) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::TextureCurveParameter::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<TextureCurveParameter*, creationType>(value, overrideState)));
    }
    // public override System.Void Release()
    // Offset: 0x525F544
    // Implemented from: UnityEngine.Rendering.VolumeParameter
    // Base method: System.Void VolumeParameter::Release()
    void Release();
  }; // UnityEngine.Rendering.TextureCurveParameter
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::Rendering::TextureCurveParameter::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::Rendering::TextureCurveParameter::Release
// Il2CppName: Release
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Rendering::TextureCurveParameter::*)()>(&UnityEngine::Rendering::TextureCurveParameter::Release)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::TextureCurveParameter*), "Release", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
