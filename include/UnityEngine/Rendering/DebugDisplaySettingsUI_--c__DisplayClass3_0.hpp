// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.Rendering.DebugDisplaySettingsUI
#include "UnityEngine/Rendering/DebugDisplaySettingsUI.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::Rendering
namespace UnityEngine::Rendering {
  // Forward declaring type: DebugManager
  class DebugManager;
  // Forward declaring type: IDebugDisplaySettingsPanelDisposable
  class IDebugDisplaySettingsPanelDisposable;
  // Forward declaring type: IDebugDisplaySettingsData
  class IDebugDisplaySettingsData;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::Rendering::DebugDisplaySettingsUI::$$c__DisplayClass3_0);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::Rendering::DebugDisplaySettingsUI::$$c__DisplayClass3_0*, "UnityEngine.Rendering", "DebugDisplaySettingsUI/<>c__DisplayClass3_0");
// Type namespace: UnityEngine.Rendering
namespace UnityEngine::Rendering {
  // Size: 0x20
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.Rendering.DebugDisplaySettingsUI/<>c__DisplayClass3_0
  // [TokenAttribute] Offset: FFFFFFFF
  // [CompilerGeneratedAttribute] Offset: FFFFFFFF
  class DebugDisplaySettingsUI::$$c__DisplayClass3_0 : public ::Il2CppObject {
    public:
    public:
    // public UnityEngine.Rendering.DebugManager debugManager
    // Size: 0x8
    // Offset: 0x10
    ::UnityEngine::Rendering::DebugManager* debugManager;
    // Field size check
    static_assert(sizeof(::UnityEngine::Rendering::DebugManager*) == 0x8);
    // public System.Collections.Generic.List`1<UnityEngine.Rendering.IDebugDisplaySettingsPanelDisposable> panels
    // Size: 0x8
    // Offset: 0x18
    ::System::Collections::Generic::List_1<::UnityEngine::Rendering::IDebugDisplaySettingsPanelDisposable*>* panels;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::UnityEngine::Rendering::IDebugDisplaySettingsPanelDisposable*>*) == 0x8);
    public:
    // Get instance field reference: public UnityEngine.Rendering.DebugManager debugManager
    [[deprecated("Use field access instead!")]] ::UnityEngine::Rendering::DebugManager*& dyn_debugManager();
    // Get instance field reference: public System.Collections.Generic.List`1<UnityEngine.Rendering.IDebugDisplaySettingsPanelDisposable> panels
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::Rendering::IDebugDisplaySettingsPanelDisposable*>*& dyn_panels();
    // public System.Void .ctor()
    // Offset: 0x523EF44
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static DebugDisplaySettingsUI::$$c__DisplayClass3_0* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::DebugDisplaySettingsUI::$$c__DisplayClass3_0::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<DebugDisplaySettingsUI::$$c__DisplayClass3_0*, creationType>()));
    }
    // System.Void <RegisterDebug>b__0(UnityEngine.Rendering.IDebugDisplaySettingsData data)
    // Offset: 0x523EFD0
    void $RegisterDebug$b__0(::UnityEngine::Rendering::IDebugDisplaySettingsData* data);
  }; // UnityEngine.Rendering.DebugDisplaySettingsUI/<>c__DisplayClass3_0
  #pragma pack(pop)
  static check_size<sizeof(DebugDisplaySettingsUI::$$c__DisplayClass3_0), 24 + sizeof(::System::Collections::Generic::List_1<::UnityEngine::Rendering::IDebugDisplaySettingsPanelDisposable*>*)> __UnityEngine_Rendering_DebugDisplaySettingsUI_$$c__DisplayClass3_0SizeCheck;
  static_assert(sizeof(DebugDisplaySettingsUI::$$c__DisplayClass3_0) == 0x20);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::Rendering::DebugDisplaySettingsUI::$$c__DisplayClass3_0::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::Rendering::DebugDisplaySettingsUI::$$c__DisplayClass3_0::$RegisterDebug$b__0
// Il2CppName: <RegisterDebug>b__0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Rendering::DebugDisplaySettingsUI::$$c__DisplayClass3_0::*)(::UnityEngine::Rendering::IDebugDisplaySettingsData*)>(&UnityEngine::Rendering::DebugDisplaySettingsUI::$$c__DisplayClass3_0::$RegisterDebug$b__0)> {
  static const MethodInfo* get() {
    static auto* data = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "IDebugDisplaySettingsData")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::DebugDisplaySettingsUI::$$c__DisplayClass3_0*), "<RegisterDebug>b__0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{data});
  }
};
