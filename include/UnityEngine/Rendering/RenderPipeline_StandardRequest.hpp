// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.Rendering.RenderPipeline
#include "UnityEngine/Rendering/RenderPipeline.hpp"
// Including type: UnityEngine.CubemapFace
#include "UnityEngine/CubemapFace.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: RenderTexture
  class RenderTexture;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::Rendering::RenderPipeline::StandardRequest);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::Rendering::RenderPipeline::StandardRequest*, "UnityEngine.Rendering", "RenderPipeline/StandardRequest");
// Type namespace: UnityEngine.Rendering
namespace UnityEngine::Rendering {
  // Size: 0x24
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.Rendering.RenderPipeline/StandardRequest
  // [TokenAttribute] Offset: FFFFFFFF
  class RenderPipeline::StandardRequest : public ::Il2CppObject {
    public:
    public:
    // public UnityEngine.RenderTexture destination
    // Size: 0x8
    // Offset: 0x10
    ::UnityEngine::RenderTexture* destination;
    // Field size check
    static_assert(sizeof(::UnityEngine::RenderTexture*) == 0x8);
    // public System.Int32 mipLevel
    // Size: 0x4
    // Offset: 0x18
    int mipLevel;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // public UnityEngine.CubemapFace face
    // Size: 0x4
    // Offset: 0x1C
    ::UnityEngine::CubemapFace face;
    // Field size check
    static_assert(sizeof(::UnityEngine::CubemapFace) == 0x4);
    // public System.Int32 slice
    // Size: 0x4
    // Offset: 0x20
    int slice;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Get instance field reference: public UnityEngine.RenderTexture destination
    [[deprecated("Use field access instead!")]] ::UnityEngine::RenderTexture*& dyn_destination();
    // Get instance field reference: public System.Int32 mipLevel
    [[deprecated("Use field access instead!")]] int& dyn_mipLevel();
    // Get instance field reference: public UnityEngine.CubemapFace face
    [[deprecated("Use field access instead!")]] ::UnityEngine::CubemapFace& dyn_face();
    // Get instance field reference: public System.Int32 slice
    [[deprecated("Use field access instead!")]] int& dyn_slice();
  }; // UnityEngine.Rendering.RenderPipeline/StandardRequest
  #pragma pack(pop)
  static check_size<sizeof(RenderPipeline::StandardRequest), 32 + sizeof(int)> __UnityEngine_Rendering_RenderPipeline_StandardRequestSizeCheck;
  static_assert(sizeof(RenderPipeline::StandardRequest) == 0x24);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
