// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Including type: UnityEngine.Rendering.SortingCriteria
#include "UnityEngine/Rendering/SortingCriteria.hpp"
// Including type: UnityEngine.Rendering.PerObjectData
#include "UnityEngine/Rendering/PerObjectData.hpp"
// Including type: UnityEngine.Rendering.RenderQueueRange
#include "UnityEngine/Rendering/RenderQueueRange.hpp"
// Including type: System.Nullable`1
#include "System/Nullable_1.hpp"
// Including type: UnityEngine.Rendering.RenderStateBlock
#include "UnityEngine/Rendering/RenderStateBlock.hpp"
// Including type: UnityEngine.Rendering.CullingResults
#include "UnityEngine/Rendering/CullingResults.hpp"
// Including type: UnityEngine.Rendering.ShaderTagId
#include "UnityEngine/Rendering/ShaderTagId.hpp"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Shader
  class Shader;
  // Forward declaring type: Material
  class Material;
  // Forward declaring type: Camera
  class Camera;
}
// Forward declaring namespace: UnityEngine::Rendering
namespace UnityEngine::Rendering {
  // Forward declaring type: RendererListParams
  struct RendererListParams;
}
// Completed forward declares
// Type namespace: UnityEngine.Rendering.RendererUtils
namespace UnityEngine::Rendering::RendererUtils {
  // Forward declaring type: RendererListDesc
  struct RendererListDesc;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::Rendering::RendererUtils::RendererListDesc, "UnityEngine.Rendering.RendererUtils", "RendererListDesc");
// Type namespace: UnityEngine.Rendering.RendererUtils
namespace UnityEngine::Rendering::RendererUtils {
  // WARNING Size may be invalid!
  // WARNING Layout: Sequential may not be correctly taken into account!
  // Autogenerated type: UnityEngine.Rendering.RendererUtils.RendererListDesc
  // [TokenAttribute] Offset: FFFFFFFF
  struct RendererListDesc/*, public ::System::ValueType*/ {
    public:
    public:
    // public UnityEngine.Rendering.SortingCriteria sortingCriteria
    // Size: 0x4
    // Offset: 0x0
    ::UnityEngine::Rendering::SortingCriteria sortingCriteria;
    // Field size check
    static_assert(sizeof(::UnityEngine::Rendering::SortingCriteria) == 0x4);
    // public UnityEngine.Rendering.PerObjectData rendererConfiguration
    // Size: 0x4
    // Offset: 0x4
    ::UnityEngine::Rendering::PerObjectData rendererConfiguration;
    // Field size check
    static_assert(sizeof(::UnityEngine::Rendering::PerObjectData) == 0x4);
    // public UnityEngine.Rendering.RenderQueueRange renderQueueRange
    // Size: 0x8
    // Offset: 0x8
    ::UnityEngine::Rendering::RenderQueueRange renderQueueRange;
    // Field size check
    static_assert(sizeof(::UnityEngine::Rendering::RenderQueueRange) == 0x8);
    // public System.Nullable`1<UnityEngine.Rendering.RenderStateBlock> stateBlock
    // Size: 0xFFFFFFFF
    // Offset: 0x10
    ::System::Nullable_1<::UnityEngine::Rendering::RenderStateBlock> stateBlock;
    // public UnityEngine.Shader overrideShader
    // Size: 0x8
    // Offset: 0x80
    ::UnityEngine::Shader* overrideShader;
    // Field size check
    static_assert(sizeof(::UnityEngine::Shader*) == 0x8);
    // public UnityEngine.Material overrideMaterial
    // Size: 0x8
    // Offset: 0x88
    ::UnityEngine::Material* overrideMaterial;
    // Field size check
    static_assert(sizeof(::UnityEngine::Material*) == 0x8);
    // public System.Boolean excludeObjectMotionVectors
    // Size: 0x1
    // Offset: 0x90
    bool excludeObjectMotionVectors;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // public System.Int32 layerMask
    // Size: 0x4
    // Offset: 0x94
    int layerMask;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // public System.UInt32 renderingLayerMask
    // Size: 0x4
    // Offset: 0x98
    uint renderingLayerMask;
    // Field size check
    static_assert(sizeof(uint) == 0x4);
    // public System.Int32 overrideMaterialPassIndex
    // Size: 0x4
    // Offset: 0x9C
    int overrideMaterialPassIndex;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // public System.Int32 overrideShaderPassIndex
    // Size: 0x4
    // Offset: 0xA0
    int overrideShaderPassIndex;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private UnityEngine.Rendering.CullingResults <cullingResult>k__BackingField
    // Size: 0x10
    // Offset: 0xA8
    ::UnityEngine::Rendering::CullingResults cullingResult;
    // Field size check
    static_assert(sizeof(::UnityEngine::Rendering::CullingResults) == 0x10);
    // private UnityEngine.Camera <camera>k__BackingField
    // Size: 0x8
    // Offset: 0xB8
    ::UnityEngine::Camera* camera;
    // Field size check
    static_assert(sizeof(::UnityEngine::Camera*) == 0x8);
    // private UnityEngine.Rendering.ShaderTagId <passName>k__BackingField
    // Size: 0x4
    // Offset: 0xC0
    ::UnityEngine::Rendering::ShaderTagId passName;
    // Field size check
    static_assert(sizeof(::UnityEngine::Rendering::ShaderTagId) == 0x4);
    // private UnityEngine.Rendering.ShaderTagId[] <passNames>k__BackingField
    // Size: 0x8
    // Offset: 0xC8
    ::ArrayW<::UnityEngine::Rendering::ShaderTagId> passNames;
    // Field size check
    static_assert(sizeof(::ArrayW<::UnityEngine::Rendering::ShaderTagId>) == 0x8);
    public:
    // Creating value type constructor for type: RendererListDesc
    constexpr RendererListDesc(::UnityEngine::Rendering::SortingCriteria sortingCriteria_ = {}, ::UnityEngine::Rendering::PerObjectData rendererConfiguration_ = {}, ::UnityEngine::Rendering::RenderQueueRange renderQueueRange_ = {}, ::System::Nullable_1<::UnityEngine::Rendering::RenderStateBlock> stateBlock_ = {}, ::UnityEngine::Shader* overrideShader_ = {}, ::UnityEngine::Material* overrideMaterial_ = {}, bool excludeObjectMotionVectors_ = {}, int layerMask_ = {}, uint renderingLayerMask_ = {}, int overrideMaterialPassIndex_ = {}, int overrideShaderPassIndex_ = {}, ::UnityEngine::Rendering::CullingResults cullingResult_ = {}, ::UnityEngine::Camera* camera_ = {}, ::UnityEngine::Rendering::ShaderTagId passName_ = {}, ::ArrayW<::UnityEngine::Rendering::ShaderTagId> passNames_ = ::ArrayW<::UnityEngine::Rendering::ShaderTagId>(static_cast<void*>(nullptr))) noexcept : sortingCriteria{sortingCriteria_}, rendererConfiguration{rendererConfiguration_}, renderQueueRange{renderQueueRange_}, stateBlock{stateBlock_}, overrideShader{overrideShader_}, overrideMaterial{overrideMaterial_}, excludeObjectMotionVectors{excludeObjectMotionVectors_}, layerMask{layerMask_}, renderingLayerMask{renderingLayerMask_}, overrideMaterialPassIndex{overrideMaterialPassIndex_}, overrideShaderPassIndex{overrideShaderPassIndex_}, cullingResult{cullingResult_}, camera{camera_}, passName{passName_}, passNames{passNames_} {}
    // Creating interface conversion operator: operator ::System::ValueType
    operator ::System::ValueType() noexcept {
      return *reinterpret_cast<::System::ValueType*>(this);
    }
    // Get static field: static private readonly UnityEngine.Rendering.ShaderTagId s_EmptyName
    static ::UnityEngine::Rendering::ShaderTagId _get_s_EmptyName();
    // Set static field: static private readonly UnityEngine.Rendering.ShaderTagId s_EmptyName
    static void _set_s_EmptyName(::UnityEngine::Rendering::ShaderTagId value);
    // Get instance field reference: public UnityEngine.Rendering.SortingCriteria sortingCriteria
    [[deprecated("Use field access instead!")]] ::UnityEngine::Rendering::SortingCriteria& dyn_sortingCriteria();
    // Get instance field reference: public UnityEngine.Rendering.PerObjectData rendererConfiguration
    [[deprecated("Use field access instead!")]] ::UnityEngine::Rendering::PerObjectData& dyn_rendererConfiguration();
    // Get instance field reference: public UnityEngine.Rendering.RenderQueueRange renderQueueRange
    [[deprecated("Use field access instead!")]] ::UnityEngine::Rendering::RenderQueueRange& dyn_renderQueueRange();
    // Get instance field reference: public System.Nullable`1<UnityEngine.Rendering.RenderStateBlock> stateBlock
    [[deprecated("Use field access instead!")]] ::System::Nullable_1<::UnityEngine::Rendering::RenderStateBlock>& dyn_stateBlock();
    // Get instance field reference: public UnityEngine.Shader overrideShader
    [[deprecated("Use field access instead!")]] ::UnityEngine::Shader*& dyn_overrideShader();
    // Get instance field reference: public UnityEngine.Material overrideMaterial
    [[deprecated("Use field access instead!")]] ::UnityEngine::Material*& dyn_overrideMaterial();
    // Get instance field reference: public System.Boolean excludeObjectMotionVectors
    [[deprecated("Use field access instead!")]] bool& dyn_excludeObjectMotionVectors();
    // Get instance field reference: public System.Int32 layerMask
    [[deprecated("Use field access instead!")]] int& dyn_layerMask();
    // Get instance field reference: public System.UInt32 renderingLayerMask
    [[deprecated("Use field access instead!")]] uint& dyn_renderingLayerMask();
    // Get instance field reference: public System.Int32 overrideMaterialPassIndex
    [[deprecated("Use field access instead!")]] int& dyn_overrideMaterialPassIndex();
    // Get instance field reference: public System.Int32 overrideShaderPassIndex
    [[deprecated("Use field access instead!")]] int& dyn_overrideShaderPassIndex();
    // Get instance field reference: private UnityEngine.Rendering.CullingResults <cullingResult>k__BackingField
    [[deprecated("Use field access instead!")]] ::UnityEngine::Rendering::CullingResults& dyn_$cullingResult$k__BackingField();
    // Get instance field reference: private UnityEngine.Camera <camera>k__BackingField
    [[deprecated("Use field access instead!")]] ::UnityEngine::Camera*& dyn_$camera$k__BackingField();
    // Get instance field reference: private UnityEngine.Rendering.ShaderTagId <passName>k__BackingField
    [[deprecated("Use field access instead!")]] ::UnityEngine::Rendering::ShaderTagId& dyn_$passName$k__BackingField();
    // Get instance field reference: private UnityEngine.Rendering.ShaderTagId[] <passNames>k__BackingField
    [[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Rendering::ShaderTagId>& dyn_$passNames$k__BackingField();
    // UnityEngine.Rendering.CullingResults get_cullingResult()
    // Offset: 0x54F05A8
    ::UnityEngine::Rendering::CullingResults get_cullingResult();
    // UnityEngine.Camera get_camera()
    // Offset: 0x54F05B4
    ::UnityEngine::Camera* get_camera();
    // UnityEngine.Rendering.ShaderTagId get_passName()
    // Offset: 0x54F05BC
    ::UnityEngine::Rendering::ShaderTagId get_passName();
    // UnityEngine.Rendering.ShaderTagId[] get_passNames()
    // Offset: 0x54F05C4
    ::ArrayW<::UnityEngine::Rendering::ShaderTagId> get_passNames();
    // public System.Boolean IsValid()
    // Offset: 0x54F05CC
    bool IsValid();
    // static public UnityEngine.Rendering.RendererListParams ConvertToParameters(in UnityEngine.Rendering.RendererUtils.RendererListDesc desc)
    // Offset: 0x54ECD5C
    static ::UnityEngine::Rendering::RendererListParams ConvertToParameters(ByRef<::UnityEngine::Rendering::RendererUtils::RendererListDesc> desc);
    // static private System.Void .cctor()
    // Offset: 0x54F0684
    static void _cctor();
  }; // UnityEngine.Rendering.RendererUtils.RendererListDesc
  // WARNING Not writing size check since size may be invalid!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::Rendering::RendererUtils::RendererListDesc::get_cullingResult
// Il2CppName: get_cullingResult
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Rendering::CullingResults (UnityEngine::Rendering::RendererUtils::RendererListDesc::*)()>(&UnityEngine::Rendering::RendererUtils::RendererListDesc::get_cullingResult)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::RendererUtils::RendererListDesc), "get_cullingResult", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::RendererUtils::RendererListDesc::get_camera
// Il2CppName: get_camera
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Camera* (UnityEngine::Rendering::RendererUtils::RendererListDesc::*)()>(&UnityEngine::Rendering::RendererUtils::RendererListDesc::get_camera)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::RendererUtils::RendererListDesc), "get_camera", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::RendererUtils::RendererListDesc::get_passName
// Il2CppName: get_passName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Rendering::ShaderTagId (UnityEngine::Rendering::RendererUtils::RendererListDesc::*)()>(&UnityEngine::Rendering::RendererUtils::RendererListDesc::get_passName)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::RendererUtils::RendererListDesc), "get_passName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::RendererUtils::RendererListDesc::get_passNames
// Il2CppName: get_passNames
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::UnityEngine::Rendering::ShaderTagId> (UnityEngine::Rendering::RendererUtils::RendererListDesc::*)()>(&UnityEngine::Rendering::RendererUtils::RendererListDesc::get_passNames)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::RendererUtils::RendererListDesc), "get_passNames", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::RendererUtils::RendererListDesc::IsValid
// Il2CppName: IsValid
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::Rendering::RendererUtils::RendererListDesc::*)()>(&UnityEngine::Rendering::RendererUtils::RendererListDesc::IsValid)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::RendererUtils::RendererListDesc), "IsValid", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::RendererUtils::RendererListDesc::ConvertToParameters
// Il2CppName: ConvertToParameters
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Rendering::RendererListParams (*)(ByRef<::UnityEngine::Rendering::RendererUtils::RendererListDesc>)>(&UnityEngine::Rendering::RendererUtils::RendererListDesc::ConvertToParameters)> {
  static const MethodInfo* get() {
    static auto* desc = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering.RendererUtils", "RendererListDesc")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::RendererUtils::RendererListDesc), "ConvertToParameters", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{desc});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::RendererUtils::RendererListDesc::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&UnityEngine::Rendering::RendererUtils::RendererListDesc::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::RendererUtils::RendererListDesc), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
