// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.EventArgs
#include "System/EventArgs.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Type namespace: UnityEngine.Rendering
namespace UnityEngine::Rendering {
  // Forward declaring type: ListChangedEventArgs`1<T>
  template<typename T>
  class ListChangedEventArgs_1;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE_GENERIC_CLASS(::UnityEngine::Rendering::ListChangedEventArgs_1, "UnityEngine.Rendering", "ListChangedEventArgs`1");
// Type namespace: UnityEngine.Rendering
namespace UnityEngine::Rendering {
  // WARNING Size may be invalid!
  // Autogenerated type: UnityEngine.Rendering.ListChangedEventArgs`1
  // [TokenAttribute] Offset: FFFFFFFF
  template<typename T>
  class ListChangedEventArgs_1 : public ::System::EventArgs {
    public:
    public:
    // public readonly System.Int32 index
    // Size: 0x4
    // Offset: 0x0
    int index;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // public readonly T item
    // Size: 0xFFFFFFFF
    // Offset: 0x0
    T item;
    public:
    // Autogenerated instance field getter
    // Get instance field: public readonly System.Int32 index
    [[deprecated("Use field access instead!")]] int& dyn_index() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::ListChangedEventArgs_1::dyn_index");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "index"))->offset;
      return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: public readonly T item
    [[deprecated("Use field access instead!")]] T& dyn_item() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::ListChangedEventArgs_1::dyn_item");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "item"))->offset;
      return *reinterpret_cast<T*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // public System.Void .ctor(System.Int32 index, T item)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static ListChangedEventArgs_1<T>* New_ctor(int index, T item) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::ListChangedEventArgs_1::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<ListChangedEventArgs_1<T>*, creationType>(index, item)));
    }
  }; // UnityEngine.Rendering.ListChangedEventArgs`1
  // Could not write size check! Type: UnityEngine.Rendering.ListChangedEventArgs`1 is generic, or has no fields that are valid for size checks!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
