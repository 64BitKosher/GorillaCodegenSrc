// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.Rendering.IDebugData
#include "UnityEngine/Rendering/IDebugData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::Rendering
namespace UnityEngine::Rendering {
  // Forward declaring type: IDebugDisplaySettingsPanelDisposable
  class IDebugDisplaySettingsPanelDisposable;
  // Forward declaring type: IDebugDisplaySettings
  class IDebugDisplaySettings;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: IEnumerable`1<T>
  template<typename T>
  class IEnumerable_1;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Action
  class Action;
}
// Completed forward declares
// Type namespace: UnityEngine.Rendering
namespace UnityEngine::Rendering {
  // Forward declaring type: DebugDisplaySettingsUI
  class DebugDisplaySettingsUI;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::Rendering::DebugDisplaySettingsUI);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::Rendering::DebugDisplaySettingsUI*, "UnityEngine.Rendering", "DebugDisplaySettingsUI");
// Type namespace: UnityEngine.Rendering
namespace UnityEngine::Rendering {
  // Size: 0x20
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.Rendering.DebugDisplaySettingsUI
  // [TokenAttribute] Offset: FFFFFFFF
  class DebugDisplaySettingsUI : public ::Il2CppObject/*, public ::UnityEngine::Rendering::IDebugData*/ {
    public:
    // Nested type: ::UnityEngine::Rendering::DebugDisplaySettingsUI::$$c__DisplayClass3_0
    class $$c__DisplayClass3_0;
    public:
    // private System.Collections.Generic.IEnumerable`1<UnityEngine.Rendering.IDebugDisplaySettingsPanelDisposable> m_DisposablePanels
    // Size: 0x8
    // Offset: 0x10
    ::System::Collections::Generic::IEnumerable_1<::UnityEngine::Rendering::IDebugDisplaySettingsPanelDisposable*>* m_DisposablePanels;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::IEnumerable_1<::UnityEngine::Rendering::IDebugDisplaySettingsPanelDisposable*>*) == 0x8);
    // private UnityEngine.Rendering.IDebugDisplaySettings m_Settings
    // Size: 0x8
    // Offset: 0x18
    ::UnityEngine::Rendering::IDebugDisplaySettings* m_Settings;
    // Field size check
    static_assert(sizeof(::UnityEngine::Rendering::IDebugDisplaySettings*) == 0x8);
    public:
    // Creating interface conversion operator: operator ::UnityEngine::Rendering::IDebugData
    operator ::UnityEngine::Rendering::IDebugData() noexcept {
      return *reinterpret_cast<::UnityEngine::Rendering::IDebugData*>(this);
    }
    // Get instance field reference: private System.Collections.Generic.IEnumerable`1<UnityEngine.Rendering.IDebugDisplaySettingsPanelDisposable> m_DisposablePanels
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::IEnumerable_1<::UnityEngine::Rendering::IDebugDisplaySettingsPanelDisposable*>*& dyn_m_DisposablePanels();
    // Get instance field reference: private UnityEngine.Rendering.IDebugDisplaySettings m_Settings
    [[deprecated("Use field access instead!")]] ::UnityEngine::Rendering::IDebugDisplaySettings*& dyn_m_Settings();
    // private System.Void Reset()
    // Offset: 0x523E774
    void Reset();
    // public System.Void RegisterDebug(UnityEngine.Rendering.IDebugDisplaySettings settings)
    // Offset: 0x523ED54
    void RegisterDebug(::UnityEngine::Rendering::IDebugDisplaySettings* settings);
    // public System.Void UnregisterDebug()
    // Offset: 0x523E86C
    void UnregisterDebug();
    // public System.Action GetReset()
    // Offset: 0x523EF4C
    ::System::Action* GetReset();
    // public System.Void .ctor()
    // Offset: 0x523EFC8
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static DebugDisplaySettingsUI* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::DebugDisplaySettingsUI::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<DebugDisplaySettingsUI*, creationType>()));
    }
  }; // UnityEngine.Rendering.DebugDisplaySettingsUI
  #pragma pack(pop)
  static check_size<sizeof(DebugDisplaySettingsUI), 24 + sizeof(::UnityEngine::Rendering::IDebugDisplaySettings*)> __UnityEngine_Rendering_DebugDisplaySettingsUISizeCheck;
  static_assert(sizeof(DebugDisplaySettingsUI) == 0x20);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::Rendering::DebugDisplaySettingsUI::Reset
// Il2CppName: Reset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Rendering::DebugDisplaySettingsUI::*)()>(&UnityEngine::Rendering::DebugDisplaySettingsUI::Reset)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::DebugDisplaySettingsUI*), "Reset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::DebugDisplaySettingsUI::RegisterDebug
// Il2CppName: RegisterDebug
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Rendering::DebugDisplaySettingsUI::*)(::UnityEngine::Rendering::IDebugDisplaySettings*)>(&UnityEngine::Rendering::DebugDisplaySettingsUI::RegisterDebug)> {
  static const MethodInfo* get() {
    static auto* settings = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "IDebugDisplaySettings")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::DebugDisplaySettingsUI*), "RegisterDebug", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{settings});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::DebugDisplaySettingsUI::UnregisterDebug
// Il2CppName: UnregisterDebug
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Rendering::DebugDisplaySettingsUI::*)()>(&UnityEngine::Rendering::DebugDisplaySettingsUI::UnregisterDebug)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::DebugDisplaySettingsUI*), "UnregisterDebug", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::DebugDisplaySettingsUI::GetReset
// Il2CppName: GetReset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Action* (UnityEngine::Rendering::DebugDisplaySettingsUI::*)()>(&UnityEngine::Rendering::DebugDisplaySettingsUI::GetReset)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::DebugDisplaySettingsUI*), "GetReset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::DebugDisplaySettingsUI::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
