// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.MulticastDelegate
#include "System/MulticastDelegate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::Rendering
namespace UnityEngine::Rendering {
  // Forward declaring type: ObservableList`1<T>
  template<typename T>
  class ObservableList_1;
  // Forward declaring type: ListChangedEventArgs`1<T>
  template<typename T>
  class ListChangedEventArgs_1;
}
// Completed forward declares
// Type namespace: UnityEngine.Rendering
namespace UnityEngine::Rendering {
  // Forward declaring type: ListChangedEventHandler`1<T>
  template<typename T>
  class ListChangedEventHandler_1;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE_GENERIC_CLASS(::UnityEngine::Rendering::ListChangedEventHandler_1, "UnityEngine.Rendering", "ListChangedEventHandler`1");
// Type namespace: UnityEngine.Rendering
namespace UnityEngine::Rendering {
  // WARNING Size may be invalid!
  // Autogenerated type: UnityEngine.Rendering.ListChangedEventHandler`1
  // [TokenAttribute] Offset: FFFFFFFF
  template<typename T>
  class ListChangedEventHandler_1 : public ::System::MulticastDelegate {
    public:
    // public System.Void .ctor(System.Object object, System.IntPtr method)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static ListChangedEventHandler_1<T>* New_ctor(::Il2CppObject* object, ::System::IntPtr method) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::ListChangedEventHandler_1::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<ListChangedEventHandler_1<T>*, creationType>(object, method)));
    }
    // public System.Void Invoke(UnityEngine.Rendering.ObservableList`1<T> sender, UnityEngine.Rendering.ListChangedEventArgs`1<T> e)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void Invoke(::UnityEngine::Rendering::ObservableList_1<T>* sender, ::UnityEngine::Rendering::ListChangedEventArgs_1<T>* e) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::ListChangedEventHandler_1::Invoke");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Rendering::ListChangedEventHandler_1<T>*), -1));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sender, e);
    }
  }; // UnityEngine.Rendering.ListChangedEventHandler`1
  // Could not write size check! Type: UnityEngine.Rendering.ListChangedEventHandler`1 is generic, or has no fields that are valid for size checks!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
