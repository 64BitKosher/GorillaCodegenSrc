// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.Rendering.IntParameter
#include "UnityEngine/Rendering/IntParameter.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Type namespace: UnityEngine.Rendering
namespace UnityEngine::Rendering {
  // Forward declaring type: ClampedIntParameter
  class ClampedIntParameter;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::Rendering::ClampedIntParameter);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::Rendering::ClampedIntParameter*, "UnityEngine.Rendering", "ClampedIntParameter");
// Type namespace: UnityEngine.Rendering
namespace UnityEngine::Rendering {
  // WARNING Size may be invalid!
  // Autogenerated type: UnityEngine.Rendering.ClampedIntParameter
  // [TokenAttribute] Offset: FFFFFFFF
  // [DebuggerDisplayAttribute] Offset: FFFFFFFF
  class ClampedIntParameter : public ::UnityEngine::Rendering::IntParameter {
    public:
    public:
    // public System.Int32 min
    // Size: 0x4
    // Offset: 0x18
    int min;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // public System.Int32 max
    // Size: 0x4
    // Offset: 0x1C
    int max;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Get instance field reference: public System.Int32 min
    [[deprecated("Use field access instead!")]] int& dyn_min();
    // Get instance field reference: public System.Int32 max
    [[deprecated("Use field access instead!")]] int& dyn_max();
    // public System.Int32 get_value()
    // Offset: 0x5263890
    int get_value();
    // public System.Void set_value(System.Int32 value)
    // Offset: 0x5263898
    void set_value(int value);
    // public System.Void .ctor(System.Int32 value, System.Int32 min, System.Int32 max, System.Boolean overrideState)
    // Offset: 0x52638B4
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static ClampedIntParameter* New_ctor(int value, int min, int max, bool overrideState) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::ClampedIntParameter::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<ClampedIntParameter*, creationType>(value, min, max, overrideState)));
    }
  }; // UnityEngine.Rendering.ClampedIntParameter
  // WARNING Not writing size check since size may be invalid!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::Rendering::ClampedIntParameter::get_value
// Il2CppName: get_value
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::Rendering::ClampedIntParameter::*)()>(&UnityEngine::Rendering::ClampedIntParameter::get_value)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::ClampedIntParameter*), "get_value", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::ClampedIntParameter::set_value
// Il2CppName: set_value
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Rendering::ClampedIntParameter::*)(int)>(&UnityEngine::Rendering::ClampedIntParameter::set_value)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::ClampedIntParameter*), "set_value", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::ClampedIntParameter::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
