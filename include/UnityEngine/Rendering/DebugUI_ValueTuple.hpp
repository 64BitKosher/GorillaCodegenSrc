// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.Rendering.DebugUI
#include "UnityEngine/Rendering/DebugUI.hpp"
// Including type: UnityEngine.Rendering.DebugUI/Widget
#include "UnityEngine/Rendering/DebugUI_Widget.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
// Completed includes
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::Rendering::DebugUI::ValueTuple);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::Rendering::DebugUI::ValueTuple*, "UnityEngine.Rendering", "DebugUI/ValueTuple");
// Type namespace: UnityEngine.Rendering
namespace UnityEngine::Rendering {
  // Size: 0x54
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.Rendering.DebugUI/ValueTuple
  // [TokenAttribute] Offset: FFFFFFFF
  class DebugUI::ValueTuple : public ::UnityEngine::Rendering::DebugUI::Widget {
    public:
    public:
    // public UnityEngine.Rendering.DebugUI/Value[] values
    // Size: 0x8
    // Offset: 0x48
    ::ArrayW<::UnityEngine::Rendering::DebugUI::Value*> values;
    // Field size check
    static_assert(sizeof(::ArrayW<::UnityEngine::Rendering::DebugUI::Value*>) == 0x8);
    // public System.Int32 pinnedElementIndex
    // Size: 0x4
    // Offset: 0x50
    int pinnedElementIndex;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Get instance field reference: public UnityEngine.Rendering.DebugUI/Value[] values
    [[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Rendering::DebugUI::Value*>& dyn_values();
    // Get instance field reference: public System.Int32 pinnedElementIndex
    [[deprecated("Use field access instead!")]] int& dyn_pinnedElementIndex();
    // public System.Int32 get_numElements()
    // Offset: 0x524A1D4
    int get_numElements();
    // public System.Void .ctor()
    // Offset: 0x5245C10
    // Implemented from: UnityEngine.Rendering.DebugUI/Widget
    // Base method: System.Void Widget::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static DebugUI::ValueTuple* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::DebugUI::ValueTuple::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<DebugUI::ValueTuple*, creationType>()));
    }
  }; // UnityEngine.Rendering.DebugUI/ValueTuple
  #pragma pack(pop)
  static check_size<sizeof(DebugUI::ValueTuple), 80 + sizeof(int)> __UnityEngine_Rendering_DebugUI_ValueTupleSizeCheck;
  static_assert(sizeof(DebugUI::ValueTuple) == 0x54);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::Rendering::DebugUI::ValueTuple::get_numElements
// Il2CppName: get_numElements
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::Rendering::DebugUI::ValueTuple::*)()>(&UnityEngine::Rendering::DebugUI::ValueTuple::get_numElements)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::DebugUI::ValueTuple*), "get_numElements", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::DebugUI::ValueTuple::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
