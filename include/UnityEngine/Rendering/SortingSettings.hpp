// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Including type: System.IEquatable`1
#include "System/IEquatable_1.hpp"
// Including type: UnityEngine.Matrix4x4
#include "UnityEngine/Matrix4x4.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: UnityEngine.Rendering.SortingCriteria
#include "UnityEngine/Rendering/SortingCriteria.hpp"
// Including type: UnityEngine.Rendering.DistanceMetric
#include "UnityEngine/Rendering/DistanceMetric.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Camera
  class Camera;
}
// Completed forward declares
// Type namespace: UnityEngine.Rendering
namespace UnityEngine::Rendering {
  // Forward declaring type: SortingSettings
  struct SortingSettings;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::Rendering::SortingSettings, "UnityEngine.Rendering", "SortingSettings");
// Type namespace: UnityEngine.Rendering
namespace UnityEngine::Rendering {
  // Size: 0x60
  #pragma pack(push, 1)
  // WARNING Layout: Sequential may not be correctly taken into account!
  // Autogenerated type: UnityEngine.Rendering.SortingSettings
  // [TokenAttribute] Offset: FFFFFFFF
  struct SortingSettings/*, public ::System::ValueType, public ::System::IEquatable_1<::UnityEngine::Rendering::SortingSettings>*/ {
    public:
    public:
    // private UnityEngine.Matrix4x4 m_WorldToCameraMatrix
    // Size: 0x40
    // Offset: 0x0
    ::UnityEngine::Matrix4x4 m_WorldToCameraMatrix;
    // Field size check
    static_assert(sizeof(::UnityEngine::Matrix4x4) == 0x40);
    // private UnityEngine.Vector3 m_CameraPosition
    // Size: 0xC
    // Offset: 0x40
    ::UnityEngine::Vector3 m_CameraPosition;
    // Field size check
    static_assert(sizeof(::UnityEngine::Vector3) == 0xC);
    // private UnityEngine.Vector3 m_CustomAxis
    // Size: 0xC
    // Offset: 0x4C
    ::UnityEngine::Vector3 m_CustomAxis;
    // Field size check
    static_assert(sizeof(::UnityEngine::Vector3) == 0xC);
    // private UnityEngine.Rendering.SortingCriteria m_Criteria
    // Size: 0x4
    // Offset: 0x58
    ::UnityEngine::Rendering::SortingCriteria m_Criteria;
    // Field size check
    static_assert(sizeof(::UnityEngine::Rendering::SortingCriteria) == 0x4);
    // private UnityEngine.Rendering.DistanceMetric m_DistanceMetric
    // Size: 0x4
    // Offset: 0x5C
    ::UnityEngine::Rendering::DistanceMetric m_DistanceMetric;
    // Field size check
    static_assert(sizeof(::UnityEngine::Rendering::DistanceMetric) == 0x4);
    public:
    // Creating value type constructor for type: SortingSettings
    constexpr SortingSettings(::UnityEngine::Matrix4x4 m_WorldToCameraMatrix_ = {}, ::UnityEngine::Vector3 m_CameraPosition_ = {}, ::UnityEngine::Vector3 m_CustomAxis_ = {}, ::UnityEngine::Rendering::SortingCriteria m_Criteria_ = {}, ::UnityEngine::Rendering::DistanceMetric m_DistanceMetric_ = {}) noexcept : m_WorldToCameraMatrix{m_WorldToCameraMatrix_}, m_CameraPosition{m_CameraPosition_}, m_CustomAxis{m_CustomAxis_}, m_Criteria{m_Criteria_}, m_DistanceMetric{m_DistanceMetric_} {}
    // Creating interface conversion operator: operator ::System::ValueType
    operator ::System::ValueType() noexcept {
      return *reinterpret_cast<::System::ValueType*>(this);
    }
    // Creating interface conversion operator: operator ::System::IEquatable_1<::UnityEngine::Rendering::SortingSettings>
    operator ::System::IEquatable_1<::UnityEngine::Rendering::SortingSettings>() noexcept {
      return *reinterpret_cast<::System::IEquatable_1<::UnityEngine::Rendering::SortingSettings>*>(this);
    }
    // Get instance field reference: private UnityEngine.Matrix4x4 m_WorldToCameraMatrix
    [[deprecated("Use field access instead!")]] ::UnityEngine::Matrix4x4& dyn_m_WorldToCameraMatrix();
    // Get instance field reference: private UnityEngine.Vector3 m_CameraPosition
    [[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& dyn_m_CameraPosition();
    // Get instance field reference: private UnityEngine.Vector3 m_CustomAxis
    [[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& dyn_m_CustomAxis();
    // Get instance field reference: private UnityEngine.Rendering.SortingCriteria m_Criteria
    [[deprecated("Use field access instead!")]] ::UnityEngine::Rendering::SortingCriteria& dyn_m_Criteria();
    // Get instance field reference: private UnityEngine.Rendering.DistanceMetric m_DistanceMetric
    [[deprecated("Use field access instead!")]] ::UnityEngine::Rendering::DistanceMetric& dyn_m_DistanceMetric();
    // public System.Void .ctor(UnityEngine.Camera camera)
    // Offset: 0x54EDDDC
    SortingSettings(::UnityEngine::Camera* camera);
    // public System.Void set_customAxis(UnityEngine.Vector3 value)
    // Offset: 0x54EDE68
    void set_customAxis(::UnityEngine::Vector3 value);
    // public UnityEngine.Rendering.SortingCriteria get_criteria()
    // Offset: 0x54EDE60
    ::UnityEngine::Rendering::SortingCriteria get_criteria();
    // public System.Void set_criteria(UnityEngine.Rendering.SortingCriteria value)
    // Offset: 0x54EDE74
    void set_criteria(::UnityEngine::Rendering::SortingCriteria value);
    // public System.Void set_distanceMetric(UnityEngine.Rendering.DistanceMetric value)
    // Offset: 0x54EDE7C
    void set_distanceMetric(::UnityEngine::Rendering::DistanceMetric value);
    // public System.Boolean Equals(UnityEngine.Rendering.SortingSettings other)
    // Offset: 0x54EDE84
    bool Equals(::UnityEngine::Rendering::SortingSettings other);
    // public override System.Boolean Equals(System.Object obj)
    // Offset: 0x54EDF50
    // Implemented from: System.ValueType
    // Base method: System.Boolean ValueType::Equals(System.Object obj)
    bool Equals(::Il2CppObject* obj);
    // public override System.Int32 GetHashCode()
    // Offset: 0x54EDFE0
    // Implemented from: System.ValueType
    // Base method: System.Int32 ValueType::GetHashCode()
    int GetHashCode();
  }; // UnityEngine.Rendering.SortingSettings
  #pragma pack(pop)
  static check_size<sizeof(SortingSettings), 92 + sizeof(::UnityEngine::Rendering::DistanceMetric)> __UnityEngine_Rendering_SortingSettingsSizeCheck;
  static_assert(sizeof(SortingSettings) == 0x60);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::Rendering::SortingSettings::SortingSettings
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::Rendering::SortingSettings::set_customAxis
// Il2CppName: set_customAxis
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Rendering::SortingSettings::*)(::UnityEngine::Vector3)>(&UnityEngine::Rendering::SortingSettings::set_customAxis)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::SortingSettings), "set_customAxis", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::SortingSettings::get_criteria
// Il2CppName: get_criteria
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Rendering::SortingCriteria (UnityEngine::Rendering::SortingSettings::*)()>(&UnityEngine::Rendering::SortingSettings::get_criteria)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::SortingSettings), "get_criteria", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::SortingSettings::set_criteria
// Il2CppName: set_criteria
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Rendering::SortingSettings::*)(::UnityEngine::Rendering::SortingCriteria)>(&UnityEngine::Rendering::SortingSettings::set_criteria)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "SortingCriteria")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::SortingSettings), "set_criteria", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::SortingSettings::set_distanceMetric
// Il2CppName: set_distanceMetric
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Rendering::SortingSettings::*)(::UnityEngine::Rendering::DistanceMetric)>(&UnityEngine::Rendering::SortingSettings::set_distanceMetric)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "DistanceMetric")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::SortingSettings), "set_distanceMetric", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::SortingSettings::Equals
// Il2CppName: Equals
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::Rendering::SortingSettings::*)(::UnityEngine::Rendering::SortingSettings)>(&UnityEngine::Rendering::SortingSettings::Equals)> {
  static const MethodInfo* get() {
    static auto* other = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "SortingSettings")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::SortingSettings), "Equals", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{other});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::SortingSettings::Equals
// Il2CppName: Equals
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::Rendering::SortingSettings::*)(::Il2CppObject*)>(&UnityEngine::Rendering::SortingSettings::Equals)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::SortingSettings), "Equals", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::SortingSettings::GetHashCode
// Il2CppName: GetHashCode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::Rendering::SortingSettings::*)()>(&UnityEngine::Rendering::SortingSettings::GetHashCode)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::SortingSettings), "GetHashCode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
