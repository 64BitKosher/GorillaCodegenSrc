// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Matrix4x4
  struct Matrix4x4;
}
// Completed forward declares
// Type namespace: UnityEngine.Rendering
namespace UnityEngine::Rendering {
  // Forward declaring type: CoreMatrixUtils
  class CoreMatrixUtils;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::Rendering::CoreMatrixUtils);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::Rendering::CoreMatrixUtils*, "UnityEngine.Rendering", "CoreMatrixUtils");
// Type namespace: UnityEngine.Rendering
namespace UnityEngine::Rendering {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.Rendering.CoreMatrixUtils
  // [TokenAttribute] Offset: FFFFFFFF
  class CoreMatrixUtils : public ::Il2CppObject {
    public:
    // static public UnityEngine.Matrix4x4 MultiplyPerspectiveMatrix(UnityEngine.Matrix4x4 perspective, UnityEngine.Matrix4x4 rhs)
    // Offset: 0x525BB64
    static ::UnityEngine::Matrix4x4 MultiplyPerspectiveMatrix(::UnityEngine::Matrix4x4 perspective, ::UnityEngine::Matrix4x4 rhs);
    // static private UnityEngine.Matrix4x4 MultiplyOrthoMatrixCentered(UnityEngine.Matrix4x4 ortho, UnityEngine.Matrix4x4 rhs)
    // Offset: 0x525BC18
    static ::UnityEngine::Matrix4x4 MultiplyOrthoMatrixCentered(::UnityEngine::Matrix4x4 ortho, ::UnityEngine::Matrix4x4 rhs);
    // static public UnityEngine.Matrix4x4 MultiplyProjectionMatrix(UnityEngine.Matrix4x4 projMatrix, UnityEngine.Matrix4x4 rhs, System.Boolean orthoCentered)
    // Offset: 0x525BCBC
    static ::UnityEngine::Matrix4x4 MultiplyProjectionMatrix(::UnityEngine::Matrix4x4 projMatrix, ::UnityEngine::Matrix4x4 rhs, bool orthoCentered);
  }; // UnityEngine.Rendering.CoreMatrixUtils
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::Rendering::CoreMatrixUtils::MultiplyPerspectiveMatrix
// Il2CppName: MultiplyPerspectiveMatrix
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Matrix4x4 (*)(::UnityEngine::Matrix4x4, ::UnityEngine::Matrix4x4)>(&UnityEngine::Rendering::CoreMatrixUtils::MultiplyPerspectiveMatrix)> {
  static const MethodInfo* get() {
    static auto* perspective = &::il2cpp_utils::GetClassFromName("UnityEngine", "Matrix4x4")->byval_arg;
    static auto* rhs = &::il2cpp_utils::GetClassFromName("UnityEngine", "Matrix4x4")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::CoreMatrixUtils*), "MultiplyPerspectiveMatrix", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{perspective, rhs});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::CoreMatrixUtils::MultiplyOrthoMatrixCentered
// Il2CppName: MultiplyOrthoMatrixCentered
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Matrix4x4 (*)(::UnityEngine::Matrix4x4, ::UnityEngine::Matrix4x4)>(&UnityEngine::Rendering::CoreMatrixUtils::MultiplyOrthoMatrixCentered)> {
  static const MethodInfo* get() {
    static auto* ortho = &::il2cpp_utils::GetClassFromName("UnityEngine", "Matrix4x4")->byval_arg;
    static auto* rhs = &::il2cpp_utils::GetClassFromName("UnityEngine", "Matrix4x4")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::CoreMatrixUtils*), "MultiplyOrthoMatrixCentered", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ortho, rhs});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::CoreMatrixUtils::MultiplyProjectionMatrix
// Il2CppName: MultiplyProjectionMatrix
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Matrix4x4 (*)(::UnityEngine::Matrix4x4, ::UnityEngine::Matrix4x4, bool)>(&UnityEngine::Rendering::CoreMatrixUtils::MultiplyProjectionMatrix)> {
  static const MethodInfo* get() {
    static auto* projMatrix = &::il2cpp_utils::GetClassFromName("UnityEngine", "Matrix4x4")->byval_arg;
    static auto* rhs = &::il2cpp_utils::GetClassFromName("UnityEngine", "Matrix4x4")->byval_arg;
    static auto* orthoCentered = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::CoreMatrixUtils*), "MultiplyProjectionMatrix", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{projMatrix, rhs, orthoCentered});
  }
};
