// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: UnityEngine.Rendering.RenderTargetIdentifier
#include "UnityEngine/Rendering/RenderTargetIdentifier.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::Rendering
namespace UnityEngine::Rendering {
  // Forward declaring type: CommandBuffer
  class CommandBuffer;
  // Forward declaring type: ClearFlag
  struct ClearFlag;
  // Forward declaring type: RTHandle
  class RTHandle;
  // Forward declaring type: RenderBufferLoadAction
  struct RenderBufferLoadAction;
  // Forward declaring type: RenderBufferStoreAction
  struct RenderBufferStoreAction;
  // Forward declaring type: MSAASamples
  struct MSAASamples;
  // Forward declaring type: TextureDimension
  struct TextureDimension;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: IEnumerable`1<T>
  template<typename T>
  class IEnumerable_1;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Type
  class Type;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Color
  struct Color;
  // Skipping declaration: CubemapFace because it is already included!
  // Forward declaring type: RenderTextureFormat
  struct RenderTextureFormat;
  // Forward declaring type: Material
  class Material;
  // Forward declaring type: MaterialPropertyBlock
  class MaterialPropertyBlock;
  // Forward declaring type: Shader
  class Shader;
  // Forward declaring type: Object
  class Object;
  // Forward declaring type: Mesh
  class Mesh;
  // Forward declaring type: Camera
  class Camera;
  // Forward declaring type: Texture
  class Texture;
}
// Forward declaring namespace: UnityEngine::Experimental::Rendering
namespace UnityEngine::Experimental::Rendering {
  // Forward declaring type: GraphicsFormat
  struct GraphicsFormat;
}
// Completed forward declares
// Type namespace: UnityEngine.Rendering
namespace UnityEngine::Rendering {
  // Forward declaring type: CoreUtils
  class CoreUtils;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::Rendering::CoreUtils);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::Rendering::CoreUtils*, "UnityEngine.Rendering", "CoreUtils");
// Type namespace: UnityEngine.Rendering
namespace UnityEngine::Rendering {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.Rendering.CoreUtils
  // [TokenAttribute] Offset: FFFFFFFF
  class CoreUtils : public ::Il2CppObject {
    public:
    // Nested type: ::UnityEngine::Rendering::CoreUtils::$$c
    class $$c;
    // Nested type: ::UnityEngine::Rendering::CoreUtils::$$c__88_1<T>
    template<typename T>
    class $$c__88_1;
    // Get static field: static public readonly UnityEngine.Vector3[] lookAtList
    static ::ArrayW<::UnityEngine::Vector3> _get_lookAtList();
    // Set static field: static public readonly UnityEngine.Vector3[] lookAtList
    static void _set_lookAtList(::ArrayW<::UnityEngine::Vector3> value);
    // Get static field: static public readonly UnityEngine.Vector3[] upVectorList
    static ::ArrayW<::UnityEngine::Vector3> _get_upVectorList();
    // Set static field: static public readonly UnityEngine.Vector3[] upVectorList
    static void _set_upVectorList(::ArrayW<::UnityEngine::Vector3> value);
    // Get static field: static private System.Collections.Generic.IEnumerable`1<System.Type> m_AssemblyTypes
    static ::System::Collections::Generic::IEnumerable_1<::System::Type*>* _get_m_AssemblyTypes();
    // Set static field: static private System.Collections.Generic.IEnumerable`1<System.Type> m_AssemblyTypes
    static void _set_m_AssemblyTypes(::System::Collections::Generic::IEnumerable_1<::System::Type*>* value);
    // static public System.Void ClearRenderTarget(UnityEngine.Rendering.CommandBuffer cmd, UnityEngine.Rendering.ClearFlag clearFlag, UnityEngine.Color clearColor)
    // Offset: 0x525BD84
    static void ClearRenderTarget(::UnityEngine::Rendering::CommandBuffer* cmd, ::UnityEngine::Rendering::ClearFlag clearFlag, ::UnityEngine::Color clearColor);
    // static private System.Int32 FixupDepthSlice(System.Int32 depthSlice, UnityEngine.Rendering.RTHandle buffer)
    // Offset: 0x525BDA8
    static int FixupDepthSlice(int depthSlice, ::UnityEngine::Rendering::RTHandle* buffer);
    // static private System.Int32 FixupDepthSlice(System.Int32 depthSlice, UnityEngine.CubemapFace cubemapFace)
    // Offset: 0x525BDEC
    static int FixupDepthSlice(int depthSlice, ::UnityEngine::CubemapFace cubemapFace);
    // static public System.Void SetRenderTarget(UnityEngine.Rendering.CommandBuffer cmd, UnityEngine.Rendering.RenderTargetIdentifier buffer, UnityEngine.Rendering.ClearFlag clearFlag, UnityEngine.Color clearColor, System.Int32 miplevel, UnityEngine.CubemapFace cubemapFace, System.Int32 depthSlice)
    // Offset: 0x525BE00
    static void SetRenderTarget(::UnityEngine::Rendering::CommandBuffer* cmd, ::UnityEngine::Rendering::RenderTargetIdentifier buffer, ::UnityEngine::Rendering::ClearFlag clearFlag, ::UnityEngine::Color clearColor, int miplevel, ::UnityEngine::CubemapFace cubemapFace, int depthSlice);
    // static public System.Void SetRenderTarget(UnityEngine.Rendering.CommandBuffer cmd, UnityEngine.Rendering.RenderTargetIdentifier buffer, UnityEngine.Rendering.ClearFlag clearFlag, System.Int32 miplevel, UnityEngine.CubemapFace cubemapFace, System.Int32 depthSlice)
    // Offset: 0x525BF10
    static void SetRenderTarget(::UnityEngine::Rendering::CommandBuffer* cmd, ::UnityEngine::Rendering::RenderTargetIdentifier buffer, ::UnityEngine::Rendering::ClearFlag clearFlag, int miplevel, ::UnityEngine::CubemapFace cubemapFace, int depthSlice);
    // static public System.Void SetRenderTarget(UnityEngine.Rendering.CommandBuffer cmd, UnityEngine.Rendering.RenderTargetIdentifier colorBuffer, UnityEngine.Rendering.RenderTargetIdentifier depthBuffer, System.Int32 miplevel, UnityEngine.CubemapFace cubemapFace, System.Int32 depthSlice)
    // Offset: 0x525BFE0
    static void SetRenderTarget(::UnityEngine::Rendering::CommandBuffer* cmd, ::UnityEngine::Rendering::RenderTargetIdentifier colorBuffer, ::UnityEngine::Rendering::RenderTargetIdentifier depthBuffer, int miplevel, ::UnityEngine::CubemapFace cubemapFace, int depthSlice);
    // static public System.Void SetRenderTarget(UnityEngine.Rendering.CommandBuffer cmd, UnityEngine.Rendering.RenderTargetIdentifier colorBuffer, UnityEngine.Rendering.RenderTargetIdentifier depthBuffer, UnityEngine.Rendering.ClearFlag clearFlag, UnityEngine.Color clearColor, System.Int32 miplevel, UnityEngine.CubemapFace cubemapFace, System.Int32 depthSlice)
    // Offset: 0x525C0D4
    static void SetRenderTarget(::UnityEngine::Rendering::CommandBuffer* cmd, ::UnityEngine::Rendering::RenderTargetIdentifier colorBuffer, ::UnityEngine::Rendering::RenderTargetIdentifier depthBuffer, ::UnityEngine::Rendering::ClearFlag clearFlag, ::UnityEngine::Color clearColor, int miplevel, ::UnityEngine::CubemapFace cubemapFace, int depthSlice);
    // static public System.Void SetRenderTarget(UnityEngine.Rendering.CommandBuffer cmd, UnityEngine.Rendering.RenderTargetIdentifier[] colorBuffers, UnityEngine.Rendering.RenderTargetIdentifier depthBuffer, UnityEngine.Rendering.ClearFlag clearFlag, UnityEngine.Color clearColor)
    // Offset: 0x525C214
    static void SetRenderTarget(::UnityEngine::Rendering::CommandBuffer* cmd, ::ArrayW<::UnityEngine::Rendering::RenderTargetIdentifier> colorBuffers, ::UnityEngine::Rendering::RenderTargetIdentifier depthBuffer, ::UnityEngine::Rendering::ClearFlag clearFlag, ::UnityEngine::Color clearColor);
    // static public System.Void SetRenderTarget(UnityEngine.Rendering.CommandBuffer cmd, UnityEngine.Rendering.RenderTargetIdentifier buffer, UnityEngine.Rendering.RenderBufferLoadAction loadAction, UnityEngine.Rendering.RenderBufferStoreAction storeAction, UnityEngine.Rendering.ClearFlag clearFlag, UnityEngine.Color clearColor)
    // Offset: 0x525C304
    static void SetRenderTarget(::UnityEngine::Rendering::CommandBuffer* cmd, ::UnityEngine::Rendering::RenderTargetIdentifier buffer, ::UnityEngine::Rendering::RenderBufferLoadAction loadAction, ::UnityEngine::Rendering::RenderBufferStoreAction storeAction, ::UnityEngine::Rendering::ClearFlag clearFlag, ::UnityEngine::Color clearColor);
    // static public System.Void SetRenderTarget(UnityEngine.Rendering.CommandBuffer cmd, UnityEngine.Rendering.RenderTargetIdentifier buffer, UnityEngine.Rendering.RenderBufferLoadAction loadAction, UnityEngine.Rendering.RenderBufferStoreAction storeAction, System.Int32 miplevel, UnityEngine.CubemapFace cubemapFace, System.Int32 depthSlice)
    // Offset: 0x525C3F8
    static void SetRenderTarget(::UnityEngine::Rendering::CommandBuffer* cmd, ::UnityEngine::Rendering::RenderTargetIdentifier buffer, ::UnityEngine::Rendering::RenderBufferLoadAction loadAction, ::UnityEngine::Rendering::RenderBufferStoreAction storeAction, int miplevel, ::UnityEngine::CubemapFace cubemapFace, int depthSlice);
    // static public System.Void SetRenderTarget(UnityEngine.Rendering.CommandBuffer cmd, UnityEngine.Rendering.RenderTargetIdentifier colorBuffer, UnityEngine.Rendering.RenderBufferLoadAction colorLoadAction, UnityEngine.Rendering.RenderBufferStoreAction colorStoreAction, UnityEngine.Rendering.RenderTargetIdentifier depthBuffer, UnityEngine.Rendering.RenderBufferLoadAction depthLoadAction, UnityEngine.Rendering.RenderBufferStoreAction depthStoreAction, UnityEngine.Rendering.ClearFlag clearFlag, UnityEngine.Color clearColor)
    // Offset: 0x525C4F8
    static void SetRenderTarget(::UnityEngine::Rendering::CommandBuffer* cmd, ::UnityEngine::Rendering::RenderTargetIdentifier colorBuffer, ::UnityEngine::Rendering::RenderBufferLoadAction colorLoadAction, ::UnityEngine::Rendering::RenderBufferStoreAction colorStoreAction, ::UnityEngine::Rendering::RenderTargetIdentifier depthBuffer, ::UnityEngine::Rendering::RenderBufferLoadAction depthLoadAction, ::UnityEngine::Rendering::RenderBufferStoreAction depthStoreAction, ::UnityEngine::Rendering::ClearFlag clearFlag, ::UnityEngine::Color clearColor);
    // static public System.Void SetRenderTarget(UnityEngine.Rendering.CommandBuffer cmd, UnityEngine.Rendering.RenderTargetIdentifier colorBuffer, UnityEngine.Rendering.RenderBufferLoadAction colorLoadAction, UnityEngine.Rendering.RenderBufferStoreAction colorStoreAction, UnityEngine.Rendering.RenderTargetIdentifier depthBuffer, UnityEngine.Rendering.RenderBufferLoadAction depthLoadAction, UnityEngine.Rendering.RenderBufferStoreAction depthStoreAction, System.Int32 miplevel, UnityEngine.CubemapFace cubemapFace, System.Int32 depthSlice)
    // Offset: 0x525C634
    static void SetRenderTarget(::UnityEngine::Rendering::CommandBuffer* cmd, ::UnityEngine::Rendering::RenderTargetIdentifier colorBuffer, ::UnityEngine::Rendering::RenderBufferLoadAction colorLoadAction, ::UnityEngine::Rendering::RenderBufferStoreAction colorStoreAction, ::UnityEngine::Rendering::RenderTargetIdentifier depthBuffer, ::UnityEngine::Rendering::RenderBufferLoadAction depthLoadAction, ::UnityEngine::Rendering::RenderBufferStoreAction depthStoreAction, int miplevel, ::UnityEngine::CubemapFace cubemapFace, int depthSlice);
    // static public System.Void SetRenderTarget(UnityEngine.Rendering.CommandBuffer cmd, UnityEngine.Rendering.RenderTargetIdentifier buffer, UnityEngine.Rendering.RenderBufferLoadAction colorLoadAction, UnityEngine.Rendering.RenderBufferStoreAction colorStoreAction, UnityEngine.Rendering.RenderBufferLoadAction depthLoadAction, UnityEngine.Rendering.RenderBufferStoreAction depthStoreAction, UnityEngine.Rendering.ClearFlag clearFlag, UnityEngine.Color clearColor)
    // Offset: 0x525C7A4
    static void SetRenderTarget(::UnityEngine::Rendering::CommandBuffer* cmd, ::UnityEngine::Rendering::RenderTargetIdentifier buffer, ::UnityEngine::Rendering::RenderBufferLoadAction colorLoadAction, ::UnityEngine::Rendering::RenderBufferStoreAction colorStoreAction, ::UnityEngine::Rendering::RenderBufferLoadAction depthLoadAction, ::UnityEngine::Rendering::RenderBufferStoreAction depthStoreAction, ::UnityEngine::Rendering::ClearFlag clearFlag, ::UnityEngine::Color clearColor);
    // static private System.Void SetViewportAndClear(UnityEngine.Rendering.CommandBuffer cmd, UnityEngine.Rendering.RTHandle buffer, UnityEngine.Rendering.ClearFlag clearFlag, UnityEngine.Color clearColor)
    // Offset: 0x525C8B0
    static void SetViewportAndClear(::UnityEngine::Rendering::CommandBuffer* cmd, ::UnityEngine::Rendering::RTHandle* buffer, ::UnityEngine::Rendering::ClearFlag clearFlag, ::UnityEngine::Color clearColor);
    // static public System.Void SetRenderTarget(UnityEngine.Rendering.CommandBuffer cmd, UnityEngine.Rendering.RTHandle buffer, UnityEngine.Rendering.ClearFlag clearFlag, UnityEngine.Color clearColor, System.Int32 miplevel, UnityEngine.CubemapFace cubemapFace, System.Int32 depthSlice)
    // Offset: 0x525C9CC
    static void SetRenderTarget(::UnityEngine::Rendering::CommandBuffer* cmd, ::UnityEngine::Rendering::RTHandle* buffer, ::UnityEngine::Rendering::ClearFlag clearFlag, ::UnityEngine::Color clearColor, int miplevel, ::UnityEngine::CubemapFace cubemapFace, int depthSlice);
    // static public System.Void SetRenderTarget(UnityEngine.Rendering.CommandBuffer cmd, UnityEngine.Rendering.RTHandle buffer, UnityEngine.Rendering.ClearFlag clearFlag, System.Int32 miplevel, UnityEngine.CubemapFace cubemapFace, System.Int32 depthSlice)
    // Offset: 0x525961C
    static void SetRenderTarget(::UnityEngine::Rendering::CommandBuffer* cmd, ::UnityEngine::Rendering::RTHandle* buffer, ::UnityEngine::Rendering::ClearFlag clearFlag, int miplevel, ::UnityEngine::CubemapFace cubemapFace, int depthSlice);
    // static public System.Void SetRenderTarget(UnityEngine.Rendering.CommandBuffer cmd, UnityEngine.Rendering.RTHandle colorBuffer, UnityEngine.Rendering.RTHandle depthBuffer, System.Int32 miplevel, UnityEngine.CubemapFace cubemapFace, System.Int32 depthSlice)
    // Offset: 0x525CAE8
    static void SetRenderTarget(::UnityEngine::Rendering::CommandBuffer* cmd, ::UnityEngine::Rendering::RTHandle* colorBuffer, ::UnityEngine::Rendering::RTHandle* depthBuffer, int miplevel, ::UnityEngine::CubemapFace cubemapFace, int depthSlice);
    // static public System.Void SetRenderTarget(UnityEngine.Rendering.CommandBuffer cmd, UnityEngine.Rendering.RTHandle colorBuffer, UnityEngine.Rendering.RTHandle depthBuffer, UnityEngine.Rendering.ClearFlag clearFlag, UnityEngine.Color clearColor, System.Int32 miplevel, UnityEngine.CubemapFace cubemapFace, System.Int32 depthSlice)
    // Offset: 0x525CC50
    static void SetRenderTarget(::UnityEngine::Rendering::CommandBuffer* cmd, ::UnityEngine::Rendering::RTHandle* colorBuffer, ::UnityEngine::Rendering::RTHandle* depthBuffer, ::UnityEngine::Rendering::ClearFlag clearFlag, ::UnityEngine::Color clearColor, int miplevel, ::UnityEngine::CubemapFace cubemapFace, int depthSlice);
    // static public System.Void SetRenderTarget(UnityEngine.Rendering.CommandBuffer cmd, UnityEngine.Rendering.RTHandle buffer, UnityEngine.Rendering.RenderBufferLoadAction loadAction, UnityEngine.Rendering.RenderBufferStoreAction storeAction, UnityEngine.Rendering.ClearFlag clearFlag, UnityEngine.Color clearColor, System.Int32 miplevel, UnityEngine.CubemapFace cubemapFace, System.Int32 depthSlice)
    // Offset: 0x5259990
    static void SetRenderTarget(::UnityEngine::Rendering::CommandBuffer* cmd, ::UnityEngine::Rendering::RTHandle* buffer, ::UnityEngine::Rendering::RenderBufferLoadAction loadAction, ::UnityEngine::Rendering::RenderBufferStoreAction storeAction, ::UnityEngine::Rendering::ClearFlag clearFlag, ::UnityEngine::Color clearColor, int miplevel, ::UnityEngine::CubemapFace cubemapFace, int depthSlice);
    // static public System.Void SetRenderTarget(UnityEngine.Rendering.CommandBuffer cmd, UnityEngine.Rendering.RTHandle colorBuffer, UnityEngine.Rendering.RenderBufferLoadAction colorLoadAction, UnityEngine.Rendering.RenderBufferStoreAction colorStoreAction, UnityEngine.Rendering.RTHandle depthBuffer, UnityEngine.Rendering.RenderBufferLoadAction depthLoadAction, UnityEngine.Rendering.RenderBufferStoreAction depthStoreAction, UnityEngine.Rendering.ClearFlag clearFlag, UnityEngine.Color clearColor, System.Int32 miplevel, UnityEngine.CubemapFace cubemapFace, System.Int32 depthSlice)
    // Offset: 0x525CE64
    static void SetRenderTarget(::UnityEngine::Rendering::CommandBuffer* cmd, ::UnityEngine::Rendering::RTHandle* colorBuffer, ::UnityEngine::Rendering::RenderBufferLoadAction colorLoadAction, ::UnityEngine::Rendering::RenderBufferStoreAction colorStoreAction, ::UnityEngine::Rendering::RTHandle* depthBuffer, ::UnityEngine::Rendering::RenderBufferLoadAction depthLoadAction, ::UnityEngine::Rendering::RenderBufferStoreAction depthStoreAction, ::UnityEngine::Rendering::ClearFlag clearFlag, ::UnityEngine::Color clearColor, int miplevel, ::UnityEngine::CubemapFace cubemapFace, int depthSlice);
    // static public System.Void SetRenderTarget(UnityEngine.Rendering.CommandBuffer cmd, UnityEngine.Rendering.RenderTargetIdentifier[] colorBuffers, UnityEngine.Rendering.RTHandle depthBuffer)
    // Offset: 0x525D09C
    static void SetRenderTarget(::UnityEngine::Rendering::CommandBuffer* cmd, ::ArrayW<::UnityEngine::Rendering::RenderTargetIdentifier> colorBuffers, ::UnityEngine::Rendering::RTHandle* depthBuffer);
    // static public System.Void SetRenderTarget(UnityEngine.Rendering.CommandBuffer cmd, UnityEngine.Rendering.RenderTargetIdentifier[] colorBuffers, UnityEngine.Rendering.RTHandle depthBuffer, UnityEngine.Rendering.ClearFlag clearFlag, UnityEngine.Color clearColor)
    // Offset: 0x525D15C
    static void SetRenderTarget(::UnityEngine::Rendering::CommandBuffer* cmd, ::ArrayW<::UnityEngine::Rendering::RenderTargetIdentifier> colorBuffers, ::UnityEngine::Rendering::RTHandle* depthBuffer, ::UnityEngine::Rendering::ClearFlag clearFlag, ::UnityEngine::Color clearColor);
    // static public System.Void SetViewport(UnityEngine.Rendering.CommandBuffer cmd, UnityEngine.Rendering.RTHandle target)
    // Offset: 0x525C954
    static void SetViewport(::UnityEngine::Rendering::CommandBuffer* cmd, ::UnityEngine::Rendering::RTHandle* target);
    // static public System.String GetRenderTargetAutoName(System.Int32 width, System.Int32 height, System.Int32 depth, UnityEngine.RenderTextureFormat format, System.String name, System.Boolean mips, System.Boolean enableMSAA, UnityEngine.Rendering.MSAASamples msaaSamples)
    // Offset: 0x525D258
    static ::StringW GetRenderTargetAutoName(int width, int height, int depth, ::UnityEngine::RenderTextureFormat format, ::StringW name, bool mips, bool enableMSAA, ::UnityEngine::Rendering::MSAASamples msaaSamples);
    // static public System.String GetRenderTargetAutoName(System.Int32 width, System.Int32 height, System.Int32 depth, UnityEngine.Experimental.Rendering.GraphicsFormat format, UnityEngine.Rendering.TextureDimension dim, System.String name, System.Boolean mips, System.Boolean enableMSAA, UnityEngine.Rendering.MSAASamples msaaSamples, System.Boolean dynamicRes)
    // Offset: 0x525D5A0
    static ::StringW GetRenderTargetAutoName(int width, int height, int depth, ::UnityEngine::Experimental::Rendering::GraphicsFormat format, ::UnityEngine::Rendering::TextureDimension dim, ::StringW name, bool mips, bool enableMSAA, ::UnityEngine::Rendering::MSAASamples msaaSamples, bool dynamicRes);
    // static private System.String GetRenderTargetAutoName(System.Int32 width, System.Int32 height, System.Int32 depth, System.String format, UnityEngine.Rendering.TextureDimension dim, System.String name, System.Boolean mips, System.Boolean enableMSAA, UnityEngine.Rendering.MSAASamples msaaSamples, System.Boolean dynamicRes)
    // Offset: 0x525D350
    static ::StringW GetRenderTargetAutoName(int width, int height, int depth, ::StringW format, ::UnityEngine::Rendering::TextureDimension dim, ::StringW name, bool mips, bool enableMSAA, ::UnityEngine::Rendering::MSAASamples msaaSamples, bool dynamicRes);
    // static public System.Void DrawFullScreen(UnityEngine.Rendering.CommandBuffer commandBuffer, UnityEngine.Material material, UnityEngine.MaterialPropertyBlock properties, System.Int32 shaderPassId)
    // Offset: 0x525D6A4
    static void DrawFullScreen(::UnityEngine::Rendering::CommandBuffer* commandBuffer, ::UnityEngine::Material* material, ::UnityEngine::MaterialPropertyBlock* properties, int shaderPassId);
    // static public UnityEngine.Color ConvertSRGBToActiveColorSpace(UnityEngine.Color color)
    // Offset: 0x525D758
    static ::UnityEngine::Color ConvertSRGBToActiveColorSpace(::UnityEngine::Color color);
    // static public UnityEngine.Color ConvertLinearToActiveColorSpace(UnityEngine.Color color)
    // Offset: 0x525D7D4
    static ::UnityEngine::Color ConvertLinearToActiveColorSpace(::UnityEngine::Color color);
    // static public UnityEngine.Material CreateEngineMaterial(UnityEngine.Shader shader)
    // Offset: 0x5258668
    static ::UnityEngine::Material* CreateEngineMaterial(::UnityEngine::Shader* shader);
    // static public System.Void Swap(ref T a, ref T b)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class T>
    static void Swap(ByRef<T> a, ByRef<T> b) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::CoreUtils::Swap");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Rendering", "CoreUtils", "Swap", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}));
      ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___generic__method, byref(a), byref(b));
    }
    // static public System.Void SetKeyword(UnityEngine.Rendering.CommandBuffer cmd, System.String keyword, System.Boolean state)
    // Offset: 0x525D850
    static void SetKeyword(::UnityEngine::Rendering::CommandBuffer* cmd, ::StringW keyword, bool state);
    // static public System.Void SetKeyword(UnityEngine.Material material, System.String keyword, System.Boolean state)
    // Offset: 0x525D870
    static void SetKeyword(::UnityEngine::Material* material, ::StringW keyword, bool state);
    // static public System.Void Destroy(UnityEngine.Object obj)
    // Offset: 0x5258B94
    static void Destroy(::UnityEngine::Object* obj);
    // static public System.Collections.Generic.IEnumerable`1<System.Type> GetAllAssemblyTypes()
    // Offset: 0x525D890
    static ::System::Collections::Generic::IEnumerable_1<::System::Type*>* GetAllAssemblyTypes();
    // static public System.Collections.Generic.IEnumerable`1<System.Type> GetAllTypesDerivedFrom()
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class T>
    static ::System::Collections::Generic::IEnumerable_1<::System::Type*>* GetAllTypesDerivedFrom() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::CoreUtils::GetAllTypesDerivedFrom");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Rendering", "CoreUtils", "GetAllTypesDerivedFrom", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}, ::std::vector<const Il2CppType*>{})));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}));
      return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::System::Type*>*, false>(static_cast<Il2CppObject*>(nullptr), ___generic__method);
    }
    // static public UnityEngine.Mesh CreateCubeMesh(UnityEngine.Vector3 min, UnityEngine.Vector3 max)
    // Offset: 0x525DA28
    static ::UnityEngine::Mesh* CreateCubeMesh(::UnityEngine::Vector3 min, ::UnityEngine::Vector3 max);
    // static public System.Boolean ArePostProcessesEnabled(UnityEngine.Camera camera)
    // Offset: 0x525DDCC
    static bool ArePostProcessesEnabled(::UnityEngine::Camera* camera);
    // static public System.Int32 GetTextureHash(UnityEngine.Texture texture)
    // Offset: 0x525DDD4
    static int GetTextureHash(::UnityEngine::Texture* texture);
    // static private System.Void .cctor()
    // Offset: 0x525DF48
    static void _cctor();
  }; // UnityEngine.Rendering.CoreUtils
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::Rendering::CoreUtils::ClearRenderTarget
// Il2CppName: ClearRenderTarget
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::Rendering::CommandBuffer*, ::UnityEngine::Rendering::ClearFlag, ::UnityEngine::Color)>(&UnityEngine::Rendering::CoreUtils::ClearRenderTarget)> {
  static const MethodInfo* get() {
    static auto* cmd = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "CommandBuffer")->byval_arg;
    static auto* clearFlag = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "ClearFlag")->byval_arg;
    static auto* clearColor = &::il2cpp_utils::GetClassFromName("UnityEngine", "Color")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::CoreUtils*), "ClearRenderTarget", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{cmd, clearFlag, clearColor});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::CoreUtils::FixupDepthSlice
// Il2CppName: FixupDepthSlice
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(int, ::UnityEngine::Rendering::RTHandle*)>(&UnityEngine::Rendering::CoreUtils::FixupDepthSlice)> {
  static const MethodInfo* get() {
    static auto* depthSlice = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* buffer = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "RTHandle")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::CoreUtils*), "FixupDepthSlice", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{depthSlice, buffer});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::CoreUtils::FixupDepthSlice
// Il2CppName: FixupDepthSlice
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(int, ::UnityEngine::CubemapFace)>(&UnityEngine::Rendering::CoreUtils::FixupDepthSlice)> {
  static const MethodInfo* get() {
    static auto* depthSlice = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* cubemapFace = &::il2cpp_utils::GetClassFromName("UnityEngine", "CubemapFace")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::CoreUtils*), "FixupDepthSlice", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{depthSlice, cubemapFace});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::CoreUtils::SetRenderTarget
// Il2CppName: SetRenderTarget
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::Rendering::CommandBuffer*, ::UnityEngine::Rendering::RenderTargetIdentifier, ::UnityEngine::Rendering::ClearFlag, ::UnityEngine::Color, int, ::UnityEngine::CubemapFace, int)>(&UnityEngine::Rendering::CoreUtils::SetRenderTarget)> {
  static const MethodInfo* get() {
    static auto* cmd = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "CommandBuffer")->byval_arg;
    static auto* buffer = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "RenderTargetIdentifier")->byval_arg;
    static auto* clearFlag = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "ClearFlag")->byval_arg;
    static auto* clearColor = &::il2cpp_utils::GetClassFromName("UnityEngine", "Color")->byval_arg;
    static auto* miplevel = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* cubemapFace = &::il2cpp_utils::GetClassFromName("UnityEngine", "CubemapFace")->byval_arg;
    static auto* depthSlice = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::CoreUtils*), "SetRenderTarget", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{cmd, buffer, clearFlag, clearColor, miplevel, cubemapFace, depthSlice});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::CoreUtils::SetRenderTarget
// Il2CppName: SetRenderTarget
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::Rendering::CommandBuffer*, ::UnityEngine::Rendering::RenderTargetIdentifier, ::UnityEngine::Rendering::ClearFlag, int, ::UnityEngine::CubemapFace, int)>(&UnityEngine::Rendering::CoreUtils::SetRenderTarget)> {
  static const MethodInfo* get() {
    static auto* cmd = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "CommandBuffer")->byval_arg;
    static auto* buffer = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "RenderTargetIdentifier")->byval_arg;
    static auto* clearFlag = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "ClearFlag")->byval_arg;
    static auto* miplevel = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* cubemapFace = &::il2cpp_utils::GetClassFromName("UnityEngine", "CubemapFace")->byval_arg;
    static auto* depthSlice = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::CoreUtils*), "SetRenderTarget", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{cmd, buffer, clearFlag, miplevel, cubemapFace, depthSlice});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::CoreUtils::SetRenderTarget
// Il2CppName: SetRenderTarget
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::Rendering::CommandBuffer*, ::UnityEngine::Rendering::RenderTargetIdentifier, ::UnityEngine::Rendering::RenderTargetIdentifier, int, ::UnityEngine::CubemapFace, int)>(&UnityEngine::Rendering::CoreUtils::SetRenderTarget)> {
  static const MethodInfo* get() {
    static auto* cmd = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "CommandBuffer")->byval_arg;
    static auto* colorBuffer = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "RenderTargetIdentifier")->byval_arg;
    static auto* depthBuffer = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "RenderTargetIdentifier")->byval_arg;
    static auto* miplevel = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* cubemapFace = &::il2cpp_utils::GetClassFromName("UnityEngine", "CubemapFace")->byval_arg;
    static auto* depthSlice = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::CoreUtils*), "SetRenderTarget", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{cmd, colorBuffer, depthBuffer, miplevel, cubemapFace, depthSlice});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::CoreUtils::SetRenderTarget
// Il2CppName: SetRenderTarget
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::Rendering::CommandBuffer*, ::UnityEngine::Rendering::RenderTargetIdentifier, ::UnityEngine::Rendering::RenderTargetIdentifier, ::UnityEngine::Rendering::ClearFlag, ::UnityEngine::Color, int, ::UnityEngine::CubemapFace, int)>(&UnityEngine::Rendering::CoreUtils::SetRenderTarget)> {
  static const MethodInfo* get() {
    static auto* cmd = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "CommandBuffer")->byval_arg;
    static auto* colorBuffer = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "RenderTargetIdentifier")->byval_arg;
    static auto* depthBuffer = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "RenderTargetIdentifier")->byval_arg;
    static auto* clearFlag = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "ClearFlag")->byval_arg;
    static auto* clearColor = &::il2cpp_utils::GetClassFromName("UnityEngine", "Color")->byval_arg;
    static auto* miplevel = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* cubemapFace = &::il2cpp_utils::GetClassFromName("UnityEngine", "CubemapFace")->byval_arg;
    static auto* depthSlice = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::CoreUtils*), "SetRenderTarget", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{cmd, colorBuffer, depthBuffer, clearFlag, clearColor, miplevel, cubemapFace, depthSlice});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::CoreUtils::SetRenderTarget
// Il2CppName: SetRenderTarget
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::Rendering::CommandBuffer*, ::ArrayW<::UnityEngine::Rendering::RenderTargetIdentifier>, ::UnityEngine::Rendering::RenderTargetIdentifier, ::UnityEngine::Rendering::ClearFlag, ::UnityEngine::Color)>(&UnityEngine::Rendering::CoreUtils::SetRenderTarget)> {
  static const MethodInfo* get() {
    static auto* cmd = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "CommandBuffer")->byval_arg;
    static auto* colorBuffers = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "RenderTargetIdentifier"), 1)->byval_arg;
    static auto* depthBuffer = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "RenderTargetIdentifier")->byval_arg;
    static auto* clearFlag = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "ClearFlag")->byval_arg;
    static auto* clearColor = &::il2cpp_utils::GetClassFromName("UnityEngine", "Color")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::CoreUtils*), "SetRenderTarget", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{cmd, colorBuffers, depthBuffer, clearFlag, clearColor});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::CoreUtils::SetRenderTarget
// Il2CppName: SetRenderTarget
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::Rendering::CommandBuffer*, ::UnityEngine::Rendering::RenderTargetIdentifier, ::UnityEngine::Rendering::RenderBufferLoadAction, ::UnityEngine::Rendering::RenderBufferStoreAction, ::UnityEngine::Rendering::ClearFlag, ::UnityEngine::Color)>(&UnityEngine::Rendering::CoreUtils::SetRenderTarget)> {
  static const MethodInfo* get() {
    static auto* cmd = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "CommandBuffer")->byval_arg;
    static auto* buffer = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "RenderTargetIdentifier")->byval_arg;
    static auto* loadAction = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "RenderBufferLoadAction")->byval_arg;
    static auto* storeAction = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "RenderBufferStoreAction")->byval_arg;
    static auto* clearFlag = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "ClearFlag")->byval_arg;
    static auto* clearColor = &::il2cpp_utils::GetClassFromName("UnityEngine", "Color")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::CoreUtils*), "SetRenderTarget", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{cmd, buffer, loadAction, storeAction, clearFlag, clearColor});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::CoreUtils::SetRenderTarget
// Il2CppName: SetRenderTarget
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::Rendering::CommandBuffer*, ::UnityEngine::Rendering::RenderTargetIdentifier, ::UnityEngine::Rendering::RenderBufferLoadAction, ::UnityEngine::Rendering::RenderBufferStoreAction, int, ::UnityEngine::CubemapFace, int)>(&UnityEngine::Rendering::CoreUtils::SetRenderTarget)> {
  static const MethodInfo* get() {
    static auto* cmd = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "CommandBuffer")->byval_arg;
    static auto* buffer = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "RenderTargetIdentifier")->byval_arg;
    static auto* loadAction = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "RenderBufferLoadAction")->byval_arg;
    static auto* storeAction = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "RenderBufferStoreAction")->byval_arg;
    static auto* miplevel = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* cubemapFace = &::il2cpp_utils::GetClassFromName("UnityEngine", "CubemapFace")->byval_arg;
    static auto* depthSlice = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::CoreUtils*), "SetRenderTarget", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{cmd, buffer, loadAction, storeAction, miplevel, cubemapFace, depthSlice});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::CoreUtils::SetRenderTarget
// Il2CppName: SetRenderTarget
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::Rendering::CommandBuffer*, ::UnityEngine::Rendering::RenderTargetIdentifier, ::UnityEngine::Rendering::RenderBufferLoadAction, ::UnityEngine::Rendering::RenderBufferStoreAction, ::UnityEngine::Rendering::RenderTargetIdentifier, ::UnityEngine::Rendering::RenderBufferLoadAction, ::UnityEngine::Rendering::RenderBufferStoreAction, ::UnityEngine::Rendering::ClearFlag, ::UnityEngine::Color)>(&UnityEngine::Rendering::CoreUtils::SetRenderTarget)> {
  static const MethodInfo* get() {
    static auto* cmd = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "CommandBuffer")->byval_arg;
    static auto* colorBuffer = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "RenderTargetIdentifier")->byval_arg;
    static auto* colorLoadAction = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "RenderBufferLoadAction")->byval_arg;
    static auto* colorStoreAction = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "RenderBufferStoreAction")->byval_arg;
    static auto* depthBuffer = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "RenderTargetIdentifier")->byval_arg;
    static auto* depthLoadAction = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "RenderBufferLoadAction")->byval_arg;
    static auto* depthStoreAction = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "RenderBufferStoreAction")->byval_arg;
    static auto* clearFlag = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "ClearFlag")->byval_arg;
    static auto* clearColor = &::il2cpp_utils::GetClassFromName("UnityEngine", "Color")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::CoreUtils*), "SetRenderTarget", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{cmd, colorBuffer, colorLoadAction, colorStoreAction, depthBuffer, depthLoadAction, depthStoreAction, clearFlag, clearColor});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::CoreUtils::SetRenderTarget
// Il2CppName: SetRenderTarget
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::Rendering::CommandBuffer*, ::UnityEngine::Rendering::RenderTargetIdentifier, ::UnityEngine::Rendering::RenderBufferLoadAction, ::UnityEngine::Rendering::RenderBufferStoreAction, ::UnityEngine::Rendering::RenderTargetIdentifier, ::UnityEngine::Rendering::RenderBufferLoadAction, ::UnityEngine::Rendering::RenderBufferStoreAction, int, ::UnityEngine::CubemapFace, int)>(&UnityEngine::Rendering::CoreUtils::SetRenderTarget)> {
  static const MethodInfo* get() {
    static auto* cmd = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "CommandBuffer")->byval_arg;
    static auto* colorBuffer = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "RenderTargetIdentifier")->byval_arg;
    static auto* colorLoadAction = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "RenderBufferLoadAction")->byval_arg;
    static auto* colorStoreAction = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "RenderBufferStoreAction")->byval_arg;
    static auto* depthBuffer = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "RenderTargetIdentifier")->byval_arg;
    static auto* depthLoadAction = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "RenderBufferLoadAction")->byval_arg;
    static auto* depthStoreAction = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "RenderBufferStoreAction")->byval_arg;
    static auto* miplevel = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* cubemapFace = &::il2cpp_utils::GetClassFromName("UnityEngine", "CubemapFace")->byval_arg;
    static auto* depthSlice = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::CoreUtils*), "SetRenderTarget", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{cmd, colorBuffer, colorLoadAction, colorStoreAction, depthBuffer, depthLoadAction, depthStoreAction, miplevel, cubemapFace, depthSlice});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::CoreUtils::SetRenderTarget
// Il2CppName: SetRenderTarget
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::Rendering::CommandBuffer*, ::UnityEngine::Rendering::RenderTargetIdentifier, ::UnityEngine::Rendering::RenderBufferLoadAction, ::UnityEngine::Rendering::RenderBufferStoreAction, ::UnityEngine::Rendering::RenderBufferLoadAction, ::UnityEngine::Rendering::RenderBufferStoreAction, ::UnityEngine::Rendering::ClearFlag, ::UnityEngine::Color)>(&UnityEngine::Rendering::CoreUtils::SetRenderTarget)> {
  static const MethodInfo* get() {
    static auto* cmd = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "CommandBuffer")->byval_arg;
    static auto* buffer = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "RenderTargetIdentifier")->byval_arg;
    static auto* colorLoadAction = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "RenderBufferLoadAction")->byval_arg;
    static auto* colorStoreAction = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "RenderBufferStoreAction")->byval_arg;
    static auto* depthLoadAction = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "RenderBufferLoadAction")->byval_arg;
    static auto* depthStoreAction = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "RenderBufferStoreAction")->byval_arg;
    static auto* clearFlag = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "ClearFlag")->byval_arg;
    static auto* clearColor = &::il2cpp_utils::GetClassFromName("UnityEngine", "Color")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::CoreUtils*), "SetRenderTarget", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{cmd, buffer, colorLoadAction, colorStoreAction, depthLoadAction, depthStoreAction, clearFlag, clearColor});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::CoreUtils::SetViewportAndClear
// Il2CppName: SetViewportAndClear
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::Rendering::CommandBuffer*, ::UnityEngine::Rendering::RTHandle*, ::UnityEngine::Rendering::ClearFlag, ::UnityEngine::Color)>(&UnityEngine::Rendering::CoreUtils::SetViewportAndClear)> {
  static const MethodInfo* get() {
    static auto* cmd = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "CommandBuffer")->byval_arg;
    static auto* buffer = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "RTHandle")->byval_arg;
    static auto* clearFlag = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "ClearFlag")->byval_arg;
    static auto* clearColor = &::il2cpp_utils::GetClassFromName("UnityEngine", "Color")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::CoreUtils*), "SetViewportAndClear", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{cmd, buffer, clearFlag, clearColor});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::CoreUtils::SetRenderTarget
// Il2CppName: SetRenderTarget
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::Rendering::CommandBuffer*, ::UnityEngine::Rendering::RTHandle*, ::UnityEngine::Rendering::ClearFlag, ::UnityEngine::Color, int, ::UnityEngine::CubemapFace, int)>(&UnityEngine::Rendering::CoreUtils::SetRenderTarget)> {
  static const MethodInfo* get() {
    static auto* cmd = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "CommandBuffer")->byval_arg;
    static auto* buffer = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "RTHandle")->byval_arg;
    static auto* clearFlag = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "ClearFlag")->byval_arg;
    static auto* clearColor = &::il2cpp_utils::GetClassFromName("UnityEngine", "Color")->byval_arg;
    static auto* miplevel = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* cubemapFace = &::il2cpp_utils::GetClassFromName("UnityEngine", "CubemapFace")->byval_arg;
    static auto* depthSlice = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::CoreUtils*), "SetRenderTarget", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{cmd, buffer, clearFlag, clearColor, miplevel, cubemapFace, depthSlice});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::CoreUtils::SetRenderTarget
// Il2CppName: SetRenderTarget
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::Rendering::CommandBuffer*, ::UnityEngine::Rendering::RTHandle*, ::UnityEngine::Rendering::ClearFlag, int, ::UnityEngine::CubemapFace, int)>(&UnityEngine::Rendering::CoreUtils::SetRenderTarget)> {
  static const MethodInfo* get() {
    static auto* cmd = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "CommandBuffer")->byval_arg;
    static auto* buffer = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "RTHandle")->byval_arg;
    static auto* clearFlag = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "ClearFlag")->byval_arg;
    static auto* miplevel = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* cubemapFace = &::il2cpp_utils::GetClassFromName("UnityEngine", "CubemapFace")->byval_arg;
    static auto* depthSlice = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::CoreUtils*), "SetRenderTarget", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{cmd, buffer, clearFlag, miplevel, cubemapFace, depthSlice});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::CoreUtils::SetRenderTarget
// Il2CppName: SetRenderTarget
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::Rendering::CommandBuffer*, ::UnityEngine::Rendering::RTHandle*, ::UnityEngine::Rendering::RTHandle*, int, ::UnityEngine::CubemapFace, int)>(&UnityEngine::Rendering::CoreUtils::SetRenderTarget)> {
  static const MethodInfo* get() {
    static auto* cmd = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "CommandBuffer")->byval_arg;
    static auto* colorBuffer = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "RTHandle")->byval_arg;
    static auto* depthBuffer = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "RTHandle")->byval_arg;
    static auto* miplevel = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* cubemapFace = &::il2cpp_utils::GetClassFromName("UnityEngine", "CubemapFace")->byval_arg;
    static auto* depthSlice = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::CoreUtils*), "SetRenderTarget", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{cmd, colorBuffer, depthBuffer, miplevel, cubemapFace, depthSlice});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::CoreUtils::SetRenderTarget
// Il2CppName: SetRenderTarget
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::Rendering::CommandBuffer*, ::UnityEngine::Rendering::RTHandle*, ::UnityEngine::Rendering::RTHandle*, ::UnityEngine::Rendering::ClearFlag, ::UnityEngine::Color, int, ::UnityEngine::CubemapFace, int)>(&UnityEngine::Rendering::CoreUtils::SetRenderTarget)> {
  static const MethodInfo* get() {
    static auto* cmd = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "CommandBuffer")->byval_arg;
    static auto* colorBuffer = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "RTHandle")->byval_arg;
    static auto* depthBuffer = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "RTHandle")->byval_arg;
    static auto* clearFlag = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "ClearFlag")->byval_arg;
    static auto* clearColor = &::il2cpp_utils::GetClassFromName("UnityEngine", "Color")->byval_arg;
    static auto* miplevel = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* cubemapFace = &::il2cpp_utils::GetClassFromName("UnityEngine", "CubemapFace")->byval_arg;
    static auto* depthSlice = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::CoreUtils*), "SetRenderTarget", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{cmd, colorBuffer, depthBuffer, clearFlag, clearColor, miplevel, cubemapFace, depthSlice});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::CoreUtils::SetRenderTarget
// Il2CppName: SetRenderTarget
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::Rendering::CommandBuffer*, ::UnityEngine::Rendering::RTHandle*, ::UnityEngine::Rendering::RenderBufferLoadAction, ::UnityEngine::Rendering::RenderBufferStoreAction, ::UnityEngine::Rendering::ClearFlag, ::UnityEngine::Color, int, ::UnityEngine::CubemapFace, int)>(&UnityEngine::Rendering::CoreUtils::SetRenderTarget)> {
  static const MethodInfo* get() {
    static auto* cmd = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "CommandBuffer")->byval_arg;
    static auto* buffer = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "RTHandle")->byval_arg;
    static auto* loadAction = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "RenderBufferLoadAction")->byval_arg;
    static auto* storeAction = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "RenderBufferStoreAction")->byval_arg;
    static auto* clearFlag = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "ClearFlag")->byval_arg;
    static auto* clearColor = &::il2cpp_utils::GetClassFromName("UnityEngine", "Color")->byval_arg;
    static auto* miplevel = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* cubemapFace = &::il2cpp_utils::GetClassFromName("UnityEngine", "CubemapFace")->byval_arg;
    static auto* depthSlice = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::CoreUtils*), "SetRenderTarget", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{cmd, buffer, loadAction, storeAction, clearFlag, clearColor, miplevel, cubemapFace, depthSlice});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::CoreUtils::SetRenderTarget
// Il2CppName: SetRenderTarget
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::Rendering::CommandBuffer*, ::UnityEngine::Rendering::RTHandle*, ::UnityEngine::Rendering::RenderBufferLoadAction, ::UnityEngine::Rendering::RenderBufferStoreAction, ::UnityEngine::Rendering::RTHandle*, ::UnityEngine::Rendering::RenderBufferLoadAction, ::UnityEngine::Rendering::RenderBufferStoreAction, ::UnityEngine::Rendering::ClearFlag, ::UnityEngine::Color, int, ::UnityEngine::CubemapFace, int)>(&UnityEngine::Rendering::CoreUtils::SetRenderTarget)> {
  static const MethodInfo* get() {
    static auto* cmd = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "CommandBuffer")->byval_arg;
    static auto* colorBuffer = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "RTHandle")->byval_arg;
    static auto* colorLoadAction = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "RenderBufferLoadAction")->byval_arg;
    static auto* colorStoreAction = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "RenderBufferStoreAction")->byval_arg;
    static auto* depthBuffer = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "RTHandle")->byval_arg;
    static auto* depthLoadAction = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "RenderBufferLoadAction")->byval_arg;
    static auto* depthStoreAction = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "RenderBufferStoreAction")->byval_arg;
    static auto* clearFlag = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "ClearFlag")->byval_arg;
    static auto* clearColor = &::il2cpp_utils::GetClassFromName("UnityEngine", "Color")->byval_arg;
    static auto* miplevel = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* cubemapFace = &::il2cpp_utils::GetClassFromName("UnityEngine", "CubemapFace")->byval_arg;
    static auto* depthSlice = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::CoreUtils*), "SetRenderTarget", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{cmd, colorBuffer, colorLoadAction, colorStoreAction, depthBuffer, depthLoadAction, depthStoreAction, clearFlag, clearColor, miplevel, cubemapFace, depthSlice});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::CoreUtils::SetRenderTarget
// Il2CppName: SetRenderTarget
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::Rendering::CommandBuffer*, ::ArrayW<::UnityEngine::Rendering::RenderTargetIdentifier>, ::UnityEngine::Rendering::RTHandle*)>(&UnityEngine::Rendering::CoreUtils::SetRenderTarget)> {
  static const MethodInfo* get() {
    static auto* cmd = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "CommandBuffer")->byval_arg;
    static auto* colorBuffers = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "RenderTargetIdentifier"), 1)->byval_arg;
    static auto* depthBuffer = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "RTHandle")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::CoreUtils*), "SetRenderTarget", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{cmd, colorBuffers, depthBuffer});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::CoreUtils::SetRenderTarget
// Il2CppName: SetRenderTarget
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::Rendering::CommandBuffer*, ::ArrayW<::UnityEngine::Rendering::RenderTargetIdentifier>, ::UnityEngine::Rendering::RTHandle*, ::UnityEngine::Rendering::ClearFlag, ::UnityEngine::Color)>(&UnityEngine::Rendering::CoreUtils::SetRenderTarget)> {
  static const MethodInfo* get() {
    static auto* cmd = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "CommandBuffer")->byval_arg;
    static auto* colorBuffers = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "RenderTargetIdentifier"), 1)->byval_arg;
    static auto* depthBuffer = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "RTHandle")->byval_arg;
    static auto* clearFlag = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "ClearFlag")->byval_arg;
    static auto* clearColor = &::il2cpp_utils::GetClassFromName("UnityEngine", "Color")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::CoreUtils*), "SetRenderTarget", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{cmd, colorBuffers, depthBuffer, clearFlag, clearColor});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::CoreUtils::SetViewport
// Il2CppName: SetViewport
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::Rendering::CommandBuffer*, ::UnityEngine::Rendering::RTHandle*)>(&UnityEngine::Rendering::CoreUtils::SetViewport)> {
  static const MethodInfo* get() {
    static auto* cmd = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "CommandBuffer")->byval_arg;
    static auto* target = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "RTHandle")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::CoreUtils*), "SetViewport", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{cmd, target});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::CoreUtils::GetRenderTargetAutoName
// Il2CppName: GetRenderTargetAutoName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(int, int, int, ::UnityEngine::RenderTextureFormat, ::StringW, bool, bool, ::UnityEngine::Rendering::MSAASamples)>(&UnityEngine::Rendering::CoreUtils::GetRenderTargetAutoName)> {
  static const MethodInfo* get() {
    static auto* width = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* height = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* depth = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* format = &::il2cpp_utils::GetClassFromName("UnityEngine", "RenderTextureFormat")->byval_arg;
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* mips = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* enableMSAA = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* msaaSamples = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "MSAASamples")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::CoreUtils*), "GetRenderTargetAutoName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{width, height, depth, format, name, mips, enableMSAA, msaaSamples});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::CoreUtils::GetRenderTargetAutoName
// Il2CppName: GetRenderTargetAutoName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(int, int, int, ::UnityEngine::Experimental::Rendering::GraphicsFormat, ::UnityEngine::Rendering::TextureDimension, ::StringW, bool, bool, ::UnityEngine::Rendering::MSAASamples, bool)>(&UnityEngine::Rendering::CoreUtils::GetRenderTargetAutoName)> {
  static const MethodInfo* get() {
    static auto* width = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* height = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* depth = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* format = &::il2cpp_utils::GetClassFromName("UnityEngine.Experimental.Rendering", "GraphicsFormat")->byval_arg;
    static auto* dim = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "TextureDimension")->byval_arg;
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* mips = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* enableMSAA = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* msaaSamples = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "MSAASamples")->byval_arg;
    static auto* dynamicRes = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::CoreUtils*), "GetRenderTargetAutoName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{width, height, depth, format, dim, name, mips, enableMSAA, msaaSamples, dynamicRes});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::CoreUtils::GetRenderTargetAutoName
// Il2CppName: GetRenderTargetAutoName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(int, int, int, ::StringW, ::UnityEngine::Rendering::TextureDimension, ::StringW, bool, bool, ::UnityEngine::Rendering::MSAASamples, bool)>(&UnityEngine::Rendering::CoreUtils::GetRenderTargetAutoName)> {
  static const MethodInfo* get() {
    static auto* width = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* height = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* depth = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* format = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* dim = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "TextureDimension")->byval_arg;
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* mips = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* enableMSAA = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* msaaSamples = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "MSAASamples")->byval_arg;
    static auto* dynamicRes = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::CoreUtils*), "GetRenderTargetAutoName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{width, height, depth, format, dim, name, mips, enableMSAA, msaaSamples, dynamicRes});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::CoreUtils::DrawFullScreen
// Il2CppName: DrawFullScreen
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::Rendering::CommandBuffer*, ::UnityEngine::Material*, ::UnityEngine::MaterialPropertyBlock*, int)>(&UnityEngine::Rendering::CoreUtils::DrawFullScreen)> {
  static const MethodInfo* get() {
    static auto* commandBuffer = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "CommandBuffer")->byval_arg;
    static auto* material = &::il2cpp_utils::GetClassFromName("UnityEngine", "Material")->byval_arg;
    static auto* properties = &::il2cpp_utils::GetClassFromName("UnityEngine", "MaterialPropertyBlock")->byval_arg;
    static auto* shaderPassId = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::CoreUtils*), "DrawFullScreen", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{commandBuffer, material, properties, shaderPassId});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::CoreUtils::ConvertSRGBToActiveColorSpace
// Il2CppName: ConvertSRGBToActiveColorSpace
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Color (*)(::UnityEngine::Color)>(&UnityEngine::Rendering::CoreUtils::ConvertSRGBToActiveColorSpace)> {
  static const MethodInfo* get() {
    static auto* color = &::il2cpp_utils::GetClassFromName("UnityEngine", "Color")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::CoreUtils*), "ConvertSRGBToActiveColorSpace", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{color});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::CoreUtils::ConvertLinearToActiveColorSpace
// Il2CppName: ConvertLinearToActiveColorSpace
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Color (*)(::UnityEngine::Color)>(&UnityEngine::Rendering::CoreUtils::ConvertLinearToActiveColorSpace)> {
  static const MethodInfo* get() {
    static auto* color = &::il2cpp_utils::GetClassFromName("UnityEngine", "Color")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::CoreUtils*), "ConvertLinearToActiveColorSpace", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{color});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::CoreUtils::CreateEngineMaterial
// Il2CppName: CreateEngineMaterial
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Material* (*)(::UnityEngine::Shader*)>(&UnityEngine::Rendering::CoreUtils::CreateEngineMaterial)> {
  static const MethodInfo* get() {
    static auto* shader = &::il2cpp_utils::GetClassFromName("UnityEngine", "Shader")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::CoreUtils*), "CreateEngineMaterial", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{shader});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::CoreUtils::Swap
// Il2CppName: Swap
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: UnityEngine::Rendering::CoreUtils::SetKeyword
// Il2CppName: SetKeyword
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::Rendering::CommandBuffer*, ::StringW, bool)>(&UnityEngine::Rendering::CoreUtils::SetKeyword)> {
  static const MethodInfo* get() {
    static auto* cmd = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "CommandBuffer")->byval_arg;
    static auto* keyword = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* state = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::CoreUtils*), "SetKeyword", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{cmd, keyword, state});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::CoreUtils::SetKeyword
// Il2CppName: SetKeyword
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::Material*, ::StringW, bool)>(&UnityEngine::Rendering::CoreUtils::SetKeyword)> {
  static const MethodInfo* get() {
    static auto* material = &::il2cpp_utils::GetClassFromName("UnityEngine", "Material")->byval_arg;
    static auto* keyword = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* state = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::CoreUtils*), "SetKeyword", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{material, keyword, state});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::CoreUtils::Destroy
// Il2CppName: Destroy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::Object*)>(&UnityEngine::Rendering::CoreUtils::Destroy)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("UnityEngine", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::CoreUtils*), "Destroy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::CoreUtils::GetAllAssemblyTypes
// Il2CppName: GetAllAssemblyTypes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::IEnumerable_1<::System::Type*>* (*)()>(&UnityEngine::Rendering::CoreUtils::GetAllAssemblyTypes)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::CoreUtils*), "GetAllAssemblyTypes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::CoreUtils::GetAllTypesDerivedFrom
// Il2CppName: GetAllTypesDerivedFrom
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: UnityEngine::Rendering::CoreUtils::CreateCubeMesh
// Il2CppName: CreateCubeMesh
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Mesh* (*)(::UnityEngine::Vector3, ::UnityEngine::Vector3)>(&UnityEngine::Rendering::CoreUtils::CreateCubeMesh)> {
  static const MethodInfo* get() {
    static auto* min = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* max = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::CoreUtils*), "CreateCubeMesh", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{min, max});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::CoreUtils::ArePostProcessesEnabled
// Il2CppName: ArePostProcessesEnabled
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::UnityEngine::Camera*)>(&UnityEngine::Rendering::CoreUtils::ArePostProcessesEnabled)> {
  static const MethodInfo* get() {
    static auto* camera = &::il2cpp_utils::GetClassFromName("UnityEngine", "Camera")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::CoreUtils*), "ArePostProcessesEnabled", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{camera});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::CoreUtils::GetTextureHash
// Il2CppName: GetTextureHash
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::UnityEngine::Texture*)>(&UnityEngine::Rendering::CoreUtils::GetTextureHash)> {
  static const MethodInfo* get() {
    static auto* texture = &::il2cpp_utils::GetClassFromName("UnityEngine", "Texture")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::CoreUtils*), "GetTextureHash", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{texture});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::CoreUtils::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&UnityEngine::Rendering::CoreUtils::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::CoreUtils*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
