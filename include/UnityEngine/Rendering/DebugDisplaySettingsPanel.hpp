// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.Rendering.IDebugDisplaySettingsPanelDisposable
#include "UnityEngine/Rendering/IDebugDisplaySettingsPanelDisposable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Forward declaring namespace: UnityEngine::Rendering
namespace UnityEngine::Rendering {
  // Forward declaring type: DisplayInfoAttribute
  class DisplayInfoAttribute;
}
// Completed forward declares
// Type namespace: UnityEngine.Rendering
namespace UnityEngine::Rendering {
  // Forward declaring type: DebugDisplaySettingsPanel
  class DebugDisplaySettingsPanel;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::Rendering::DebugDisplaySettingsPanel);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::Rendering::DebugDisplaySettingsPanel*, "UnityEngine.Rendering", "DebugDisplaySettingsPanel");
// Type namespace: UnityEngine.Rendering
namespace UnityEngine::Rendering {
  // Size: 0x20
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.Rendering.DebugDisplaySettingsPanel
  // [TokenAttribute] Offset: FFFFFFFF
  class DebugDisplaySettingsPanel : public ::Il2CppObject/*, public ::UnityEngine::Rendering::IDebugDisplaySettingsPanelDisposable*/ {
    public:
    public:
    // private readonly System.Collections.Generic.List`1<UnityEngine.Rendering.DebugUI/Widget> m_Widgets
    // Size: 0x8
    // Offset: 0x10
    ::System::Collections::Generic::List_1<::UnityEngine::Rendering::DebugUI::Widget*>* m_Widgets;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::UnityEngine::Rendering::DebugUI::Widget*>*) == 0x8);
    // private readonly UnityEngine.Rendering.DisplayInfoAttribute m_DisplayInfo
    // Size: 0x8
    // Offset: 0x18
    ::UnityEngine::Rendering::DisplayInfoAttribute* m_DisplayInfo;
    // Field size check
    static_assert(sizeof(::UnityEngine::Rendering::DisplayInfoAttribute*) == 0x8);
    public:
    // Creating interface conversion operator: operator ::UnityEngine::Rendering::IDebugDisplaySettingsPanelDisposable
    operator ::UnityEngine::Rendering::IDebugDisplaySettingsPanelDisposable() noexcept {
      return *reinterpret_cast<::UnityEngine::Rendering::IDebugDisplaySettingsPanelDisposable*>(this);
    }
    // Get instance field reference: private readonly System.Collections.Generic.List`1<UnityEngine.Rendering.DebugUI/Widget> m_Widgets
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::Rendering::DebugUI::Widget*>*& dyn_m_Widgets();
    // Get instance field reference: private readonly UnityEngine.Rendering.DisplayInfoAttribute m_DisplayInfo
    [[deprecated("Use field access instead!")]] ::UnityEngine::Rendering::DisplayInfoAttribute*& dyn_m_DisplayInfo();
    // public System.String get_PanelName()
    // Offset: 0x523E3DC
    ::StringW get_PanelName();
    // public System.Int32 get_Order()
    // Offset: 0x523E438
    int get_Order();
    // public UnityEngine.Rendering.DebugUI/Widget[] get_Widgets()
    // Offset: 0x523E450
    ::ArrayW<::UnityEngine::Rendering::DebugUI::Widget*> get_Widgets();
    // public UnityEngine.Rendering.DebugUI/Flags get_Flags()
    // Offset: 0x523E4A0
    ::UnityEngine::Rendering::DebugUI::Flags get_Flags();
    // protected System.Void AddWidget(UnityEngine.Rendering.DebugUI/Widget widget)
    // Offset: 0x523E4A8
    void AddWidget(::UnityEngine::Rendering::DebugUI::Widget* widget);
    // protected System.Void Clear()
    // Offset: 0x523E5A0
    void Clear();
    // public System.Void Dispose()
    // Offset: 0x523E610
    void Dispose();
    // protected System.Void .ctor()
    // Offset: 0x523E614
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static DebugDisplaySettingsPanel* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::DebugDisplaySettingsPanel::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<DebugDisplaySettingsPanel*, creationType>()));
    }
  }; // UnityEngine.Rendering.DebugDisplaySettingsPanel
  #pragma pack(pop)
  static check_size<sizeof(DebugDisplaySettingsPanel), 24 + sizeof(::UnityEngine::Rendering::DisplayInfoAttribute*)> __UnityEngine_Rendering_DebugDisplaySettingsPanelSizeCheck;
  static_assert(sizeof(DebugDisplaySettingsPanel) == 0x20);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::Rendering::DebugDisplaySettingsPanel::get_PanelName
// Il2CppName: get_PanelName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (UnityEngine::Rendering::DebugDisplaySettingsPanel::*)()>(&UnityEngine::Rendering::DebugDisplaySettingsPanel::get_PanelName)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::DebugDisplaySettingsPanel*), "get_PanelName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::DebugDisplaySettingsPanel::get_Order
// Il2CppName: get_Order
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::Rendering::DebugDisplaySettingsPanel::*)()>(&UnityEngine::Rendering::DebugDisplaySettingsPanel::get_Order)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::DebugDisplaySettingsPanel*), "get_Order", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::DebugDisplaySettingsPanel::get_Widgets
// Il2CppName: get_Widgets
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::UnityEngine::Rendering::DebugUI::Widget*> (UnityEngine::Rendering::DebugDisplaySettingsPanel::*)()>(&UnityEngine::Rendering::DebugDisplaySettingsPanel::get_Widgets)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::DebugDisplaySettingsPanel*), "get_Widgets", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::DebugDisplaySettingsPanel::get_Flags
// Il2CppName: get_Flags
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Rendering::DebugUI::Flags (UnityEngine::Rendering::DebugDisplaySettingsPanel::*)()>(&UnityEngine::Rendering::DebugDisplaySettingsPanel::get_Flags)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::DebugDisplaySettingsPanel*), "get_Flags", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::DebugDisplaySettingsPanel::AddWidget
// Il2CppName: AddWidget
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Rendering::DebugDisplaySettingsPanel::*)(::UnityEngine::Rendering::DebugUI::Widget*)>(&UnityEngine::Rendering::DebugDisplaySettingsPanel::AddWidget)> {
  static const MethodInfo* get() {
    static auto* widget = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "DebugUI/Widget")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::DebugDisplaySettingsPanel*), "AddWidget", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{widget});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::DebugDisplaySettingsPanel::Clear
// Il2CppName: Clear
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Rendering::DebugDisplaySettingsPanel::*)()>(&UnityEngine::Rendering::DebugDisplaySettingsPanel::Clear)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::DebugDisplaySettingsPanel*), "Clear", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::DebugDisplaySettingsPanel::Dispose
// Il2CppName: Dispose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Rendering::DebugDisplaySettingsPanel::*)()>(&UnityEngine::Rendering::DebugDisplaySettingsPanel::Dispose)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::DebugDisplaySettingsPanel*), "Dispose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::DebugDisplaySettingsPanel::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
