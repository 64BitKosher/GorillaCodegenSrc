// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.Rendering.AsyncGPUReadbackRequest
#include "UnityEngine/Rendering/AsyncGPUReadbackRequest.hpp"
// Including type: Unity.Collections.NativeArray`1
#include "Unity/Collections/NativeArray_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Skipping declaration: ValueType because it is already included!
  // Forward declaring type: Action`1<T>
  template<typename T>
  class Action_1;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Texture
  class Texture;
}
// Forward declaring namespace: UnityEngine::Rendering
namespace UnityEngine::Rendering {
  // Forward declaring type: AsyncRequestNativeArrayData
  struct AsyncRequestNativeArrayData;
}
// Completed forward declares
// Type namespace: UnityEngine.Rendering
namespace UnityEngine::Rendering {
  // Forward declaring type: AsyncGPUReadback
  class AsyncGPUReadback;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::Rendering::AsyncGPUReadback);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::Rendering::AsyncGPUReadback*, "UnityEngine.Rendering", "AsyncGPUReadback");
// Type namespace: UnityEngine.Rendering
namespace UnityEngine::Rendering {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.Rendering.AsyncGPUReadback
  // [TokenAttribute] Offset: FFFFFFFF
  // [StaticAccessorAttribute] Offset: FFFFFFFF
  class AsyncGPUReadback : public ::Il2CppObject {
    public:
    // static public UnityEngine.Rendering.AsyncGPUReadbackRequest RequestIntoNativeArray(ref Unity.Collections.NativeArray`1<T> output, UnityEngine.Texture src, System.Int32 mipIndex, System.Action`1<UnityEngine.Rendering.AsyncGPUReadbackRequest> callback)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class T>
    static ::UnityEngine::Rendering::AsyncGPUReadbackRequest RequestIntoNativeArray(ByRef<::Unity::Collections::NativeArray_1<T>> output, ::UnityEngine::Texture* src, int mipIndex, ::System::Action_1<::UnityEngine::Rendering::AsyncGPUReadbackRequest>* callback) {
      static_assert(std::is_convertible_v<T, ::System::ValueType*>);
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::AsyncGPUReadback::RequestIntoNativeArray");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Rendering", "AsyncGPUReadback", "RequestIntoNativeArray", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(output), ::il2cpp_utils::ExtractType(src), ::il2cpp_utils::ExtractType(mipIndex), ::il2cpp_utils::ExtractType(callback)})));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}));
      return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Rendering::AsyncGPUReadbackRequest, false>(static_cast<Il2CppObject*>(nullptr), ___generic__method, byref(output), src, mipIndex, callback);
    }
    // static private UnityEngine.Rendering.AsyncGPUReadbackRequest Request_Internal_Texture_1(UnityEngine.Texture src, System.Int32 mipIndex, UnityEngine.Rendering.AsyncRequestNativeArrayData* data)
    // Offset: 0x54DF634
    static ::UnityEngine::Rendering::AsyncGPUReadbackRequest Request_Internal_Texture_1(::UnityEngine::Texture* src, int mipIndex, ::UnityEngine::Rendering::AsyncRequestNativeArrayData* data);
    // static private System.Void Request_Internal_Texture_1_Injected(UnityEngine.Texture src, System.Int32 mipIndex, UnityEngine.Rendering.AsyncRequestNativeArrayData* data, out UnityEngine.Rendering.AsyncGPUReadbackRequest ret)
    // Offset: 0x54DF6A0
    static void Request_Internal_Texture_1_Injected(::UnityEngine::Texture* src, int mipIndex, ::UnityEngine::Rendering::AsyncRequestNativeArrayData* data, ByRef<::UnityEngine::Rendering::AsyncGPUReadbackRequest> ret);
  }; // UnityEngine.Rendering.AsyncGPUReadback
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::Rendering::AsyncGPUReadback::RequestIntoNativeArray
// Il2CppName: RequestIntoNativeArray
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: UnityEngine::Rendering::AsyncGPUReadback::Request_Internal_Texture_1
// Il2CppName: Request_Internal_Texture_1
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Rendering::AsyncGPUReadbackRequest (*)(::UnityEngine::Texture*, int, ::UnityEngine::Rendering::AsyncRequestNativeArrayData*)>(&UnityEngine::Rendering::AsyncGPUReadback::Request_Internal_Texture_1)> {
  static const MethodInfo* get() {
    static auto* src = &::il2cpp_utils::GetClassFromName("UnityEngine", "Texture")->byval_arg;
    static auto* mipIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* data = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "AsyncRequestNativeArrayData"))->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::AsyncGPUReadback*), "Request_Internal_Texture_1", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{src, mipIndex, data});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::AsyncGPUReadback::Request_Internal_Texture_1_Injected
// Il2CppName: Request_Internal_Texture_1_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::Texture*, int, ::UnityEngine::Rendering::AsyncRequestNativeArrayData*, ByRef<::UnityEngine::Rendering::AsyncGPUReadbackRequest>)>(&UnityEngine::Rendering::AsyncGPUReadback::Request_Internal_Texture_1_Injected)> {
  static const MethodInfo* get() {
    static auto* src = &::il2cpp_utils::GetClassFromName("UnityEngine", "Texture")->byval_arg;
    static auto* mipIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* data = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "AsyncRequestNativeArrayData"))->byval_arg;
    static auto* ret = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "AsyncGPUReadbackRequest")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::AsyncGPUReadback*), "Request_Internal_Texture_1_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{src, mipIndex, data, ret});
  }
};
