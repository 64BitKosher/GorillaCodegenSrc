// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.Rendering.DebugDisplaySettingsVolume
#include "UnityEngine/Rendering/DebugDisplaySettingsVolume.hpp"
// Including type: UnityEngine.Rendering.DebugDisplaySettingsPanel`1
#include "UnityEngine/Rendering/DebugDisplaySettingsPanel_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Object
  class Object;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::Rendering::DebugDisplaySettingsVolume::SettingsPanel);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::Rendering::DebugDisplaySettingsVolume::SettingsPanel*, "UnityEngine.Rendering", "DebugDisplaySettingsVolume/SettingsPanel");
// Type namespace: UnityEngine.Rendering
namespace UnityEngine::Rendering {
  // WARNING Size may be invalid!
  // Autogenerated type: UnityEngine.Rendering.DebugDisplaySettingsVolume/SettingsPanel
  // [TokenAttribute] Offset: FFFFFFFF
  // [DisplayInfoAttribute] Offset: FFFFFFFF
  class DebugDisplaySettingsVolume::SettingsPanel : public ::UnityEngine::Rendering::DebugDisplaySettingsPanel_1<::UnityEngine::Rendering::DebugDisplaySettingsVolume*> {
    public:
    public:
    // private UnityEngine.Rendering.DebugUI/Table m_VolumeTable
    // Size: 0x8
    // Offset: 0x28
    ::UnityEngine::Rendering::DebugUI::Table* m_VolumeTable;
    // Field size check
    static_assert(sizeof(::UnityEngine::Rendering::DebugUI::Table*) == 0x8);
    public:
    // Get instance field reference: private UnityEngine.Rendering.DebugUI/Table m_VolumeTable
    [[deprecated("Use field access instead!")]] ::UnityEngine::Rendering::DebugUI::Table*& dyn_m_VolumeTable();
    // public System.Void .ctor(UnityEngine.Rendering.DebugDisplaySettingsVolume data)
    // Offset: 0x5243690
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static DebugDisplaySettingsVolume::SettingsPanel* New_ctor(::UnityEngine::Rendering::DebugDisplaySettingsVolume* data) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::DebugDisplaySettingsVolume::SettingsPanel::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<DebugDisplaySettingsVolume::SettingsPanel*, creationType>(data)));
    }
    // private System.Void Refresh()
    // Offset: 0x52437C0
    void Refresh();
    // private System.Void <.ctor>b__0_0(UnityEngine.Rendering.DebugUI/Field`1<System.Int32> _, System.Int32 __)
    // Offset: 0x5243CE4
    void $_ctor$b__0_0(::UnityEngine::Rendering::DebugUI::Field_1<int>* _, int __);
    // private System.Void <.ctor>b__0_1(UnityEngine.Rendering.DebugUI/Field`1<UnityEngine.Object> _, UnityEngine.Object __)
    // Offset: 0x5243CE8
    void $_ctor$b__0_1(::UnityEngine::Rendering::DebugUI::Field_1<::UnityEngine::Object*>* _, ::UnityEngine::Object* __);
  }; // UnityEngine.Rendering.DebugDisplaySettingsVolume/SettingsPanel
  // WARNING Not writing size check since size may be invalid!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::Rendering::DebugDisplaySettingsVolume::SettingsPanel::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::Rendering::DebugDisplaySettingsVolume::SettingsPanel::Refresh
// Il2CppName: Refresh
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Rendering::DebugDisplaySettingsVolume::SettingsPanel::*)()>(&UnityEngine::Rendering::DebugDisplaySettingsVolume::SettingsPanel::Refresh)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::DebugDisplaySettingsVolume::SettingsPanel*), "Refresh", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::DebugDisplaySettingsVolume::SettingsPanel::$_ctor$b__0_0
// Il2CppName: <.ctor>b__0_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Rendering::DebugDisplaySettingsVolume::SettingsPanel::*)(::UnityEngine::Rendering::DebugUI::Field_1<int>*, int)>(&UnityEngine::Rendering::DebugDisplaySettingsVolume::SettingsPanel::$_ctor$b__0_0)> {
  static const MethodInfo* get() {
    static auto* _ = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "DebugUI/Field`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Int32")})->byval_arg;
    static auto* __ = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::DebugDisplaySettingsVolume::SettingsPanel*), "<.ctor>b__0_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{_, __});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::DebugDisplaySettingsVolume::SettingsPanel::$_ctor$b__0_1
// Il2CppName: <.ctor>b__0_1
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Rendering::DebugDisplaySettingsVolume::SettingsPanel::*)(::UnityEngine::Rendering::DebugUI::Field_1<::UnityEngine::Object*>*, ::UnityEngine::Object*)>(&UnityEngine::Rendering::DebugDisplaySettingsVolume::SettingsPanel::$_ctor$b__0_1)> {
  static const MethodInfo* get() {
    static auto* _ = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "DebugUI/Field`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine", "Object")})->byval_arg;
    static auto* __ = &::il2cpp_utils::GetClassFromName("UnityEngine", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::DebugDisplaySettingsVolume::SettingsPanel*), "<.ctor>b__0_1", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{_, __});
  }
};
