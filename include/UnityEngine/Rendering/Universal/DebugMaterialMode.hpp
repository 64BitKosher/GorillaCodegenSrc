// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Enum
#include "System/Enum.hpp"
// Completed includes
// Type namespace: UnityEngine.Rendering.Universal
namespace UnityEngine::Rendering::Universal {
  // Forward declaring type: DebugMaterialMode
  struct DebugMaterialMode;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::Rendering::Universal::DebugMaterialMode, "UnityEngine.Rendering.Universal", "DebugMaterialMode");
// Type namespace: UnityEngine.Rendering.Universal
namespace UnityEngine::Rendering::Universal {
  // Size: 0x4
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.Rendering.Universal.DebugMaterialMode
  // [TokenAttribute] Offset: FFFFFFFF
  // [GenerateHLSL] Offset: FFFFFFFF
  struct DebugMaterialMode/*, public ::System::Enum*/ {
    public:
    public:
    // public System.Int32 value__
    // Size: 0x4
    // Offset: 0x0
    int value;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Creating value type constructor for type: DebugMaterialMode
    constexpr DebugMaterialMode(int value_ = {}) noexcept : value{value_} {}
    // Creating interface conversion operator: operator ::System::Enum
    operator ::System::Enum() noexcept {
      return *reinterpret_cast<::System::Enum*>(this);
    }
    // Creating conversion operator: operator int
    constexpr operator int() const noexcept {
      return value;
    }
    // static field const value: static public UnityEngine.Rendering.Universal.DebugMaterialMode None
    static constexpr const int None = 0;
    // Get static field: static public UnityEngine.Rendering.Universal.DebugMaterialMode None
    static ::UnityEngine::Rendering::Universal::DebugMaterialMode _get_None();
    // Set static field: static public UnityEngine.Rendering.Universal.DebugMaterialMode None
    static void _set_None(::UnityEngine::Rendering::Universal::DebugMaterialMode value);
    // static field const value: static public UnityEngine.Rendering.Universal.DebugMaterialMode Albedo
    static constexpr const int Albedo = 1;
    // Get static field: static public UnityEngine.Rendering.Universal.DebugMaterialMode Albedo
    static ::UnityEngine::Rendering::Universal::DebugMaterialMode _get_Albedo();
    // Set static field: static public UnityEngine.Rendering.Universal.DebugMaterialMode Albedo
    static void _set_Albedo(::UnityEngine::Rendering::Universal::DebugMaterialMode value);
    // static field const value: static public UnityEngine.Rendering.Universal.DebugMaterialMode Specular
    static constexpr const int Specular = 2;
    // Get static field: static public UnityEngine.Rendering.Universal.DebugMaterialMode Specular
    static ::UnityEngine::Rendering::Universal::DebugMaterialMode _get_Specular();
    // Set static field: static public UnityEngine.Rendering.Universal.DebugMaterialMode Specular
    static void _set_Specular(::UnityEngine::Rendering::Universal::DebugMaterialMode value);
    // static field const value: static public UnityEngine.Rendering.Universal.DebugMaterialMode Alpha
    static constexpr const int Alpha = 3;
    // Get static field: static public UnityEngine.Rendering.Universal.DebugMaterialMode Alpha
    static ::UnityEngine::Rendering::Universal::DebugMaterialMode _get_Alpha();
    // Set static field: static public UnityEngine.Rendering.Universal.DebugMaterialMode Alpha
    static void _set_Alpha(::UnityEngine::Rendering::Universal::DebugMaterialMode value);
    // static field const value: static public UnityEngine.Rendering.Universal.DebugMaterialMode Smoothness
    static constexpr const int Smoothness = 4;
    // Get static field: static public UnityEngine.Rendering.Universal.DebugMaterialMode Smoothness
    static ::UnityEngine::Rendering::Universal::DebugMaterialMode _get_Smoothness();
    // Set static field: static public UnityEngine.Rendering.Universal.DebugMaterialMode Smoothness
    static void _set_Smoothness(::UnityEngine::Rendering::Universal::DebugMaterialMode value);
    // static field const value: static public UnityEngine.Rendering.Universal.DebugMaterialMode AmbientOcclusion
    static constexpr const int AmbientOcclusion = 5;
    // Get static field: static public UnityEngine.Rendering.Universal.DebugMaterialMode AmbientOcclusion
    static ::UnityEngine::Rendering::Universal::DebugMaterialMode _get_AmbientOcclusion();
    // Set static field: static public UnityEngine.Rendering.Universal.DebugMaterialMode AmbientOcclusion
    static void _set_AmbientOcclusion(::UnityEngine::Rendering::Universal::DebugMaterialMode value);
    // static field const value: static public UnityEngine.Rendering.Universal.DebugMaterialMode Emission
    static constexpr const int Emission = 6;
    // Get static field: static public UnityEngine.Rendering.Universal.DebugMaterialMode Emission
    static ::UnityEngine::Rendering::Universal::DebugMaterialMode _get_Emission();
    // Set static field: static public UnityEngine.Rendering.Universal.DebugMaterialMode Emission
    static void _set_Emission(::UnityEngine::Rendering::Universal::DebugMaterialMode value);
    // static field const value: static public UnityEngine.Rendering.Universal.DebugMaterialMode NormalWorldSpace
    static constexpr const int NormalWorldSpace = 7;
    // Get static field: static public UnityEngine.Rendering.Universal.DebugMaterialMode NormalWorldSpace
    static ::UnityEngine::Rendering::Universal::DebugMaterialMode _get_NormalWorldSpace();
    // Set static field: static public UnityEngine.Rendering.Universal.DebugMaterialMode NormalWorldSpace
    static void _set_NormalWorldSpace(::UnityEngine::Rendering::Universal::DebugMaterialMode value);
    // static field const value: static public UnityEngine.Rendering.Universal.DebugMaterialMode NormalTangentSpace
    static constexpr const int NormalTangentSpace = 8;
    // Get static field: static public UnityEngine.Rendering.Universal.DebugMaterialMode NormalTangentSpace
    static ::UnityEngine::Rendering::Universal::DebugMaterialMode _get_NormalTangentSpace();
    // Set static field: static public UnityEngine.Rendering.Universal.DebugMaterialMode NormalTangentSpace
    static void _set_NormalTangentSpace(::UnityEngine::Rendering::Universal::DebugMaterialMode value);
    // static field const value: static public UnityEngine.Rendering.Universal.DebugMaterialMode LightingComplexity
    static constexpr const int LightingComplexity = 9;
    // Get static field: static public UnityEngine.Rendering.Universal.DebugMaterialMode LightingComplexity
    static ::UnityEngine::Rendering::Universal::DebugMaterialMode _get_LightingComplexity();
    // Set static field: static public UnityEngine.Rendering.Universal.DebugMaterialMode LightingComplexity
    static void _set_LightingComplexity(::UnityEngine::Rendering::Universal::DebugMaterialMode value);
    // static field const value: static public UnityEngine.Rendering.Universal.DebugMaterialMode Metallic
    static constexpr const int Metallic = 10;
    // Get static field: static public UnityEngine.Rendering.Universal.DebugMaterialMode Metallic
    static ::UnityEngine::Rendering::Universal::DebugMaterialMode _get_Metallic();
    // Set static field: static public UnityEngine.Rendering.Universal.DebugMaterialMode Metallic
    static void _set_Metallic(::UnityEngine::Rendering::Universal::DebugMaterialMode value);
    // static field const value: static public UnityEngine.Rendering.Universal.DebugMaterialMode SpriteMask
    static constexpr const int SpriteMask = 11;
    // Get static field: static public UnityEngine.Rendering.Universal.DebugMaterialMode SpriteMask
    static ::UnityEngine::Rendering::Universal::DebugMaterialMode _get_SpriteMask();
    // Set static field: static public UnityEngine.Rendering.Universal.DebugMaterialMode SpriteMask
    static void _set_SpriteMask(::UnityEngine::Rendering::Universal::DebugMaterialMode value);
    // Get instance field reference: public System.Int32 value__
    [[deprecated("Use field access instead!")]] int& dyn_value__();
  }; // UnityEngine.Rendering.Universal.DebugMaterialMode
  #pragma pack(pop)
  static check_size<sizeof(DebugMaterialMode), 0 + sizeof(int)> __UnityEngine_Rendering_Universal_DebugMaterialModeSizeCheck;
  static_assert(sizeof(DebugMaterialMode) == 0x4);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
