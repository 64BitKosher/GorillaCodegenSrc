// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.Rendering.Universal.LightCookieManager
#include "UnityEngine/Rendering/Universal/LightCookieManager.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Func`3<T1, T2, TResult>
  template<typename T1, typename T2, typename TResult>
  class Func_3;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::Rendering::Universal::LightCookieManager::Sorting, "UnityEngine.Rendering.Universal", "LightCookieManager/Sorting");
// Type namespace: UnityEngine.Rendering.Universal
namespace UnityEngine::Rendering::Universal {
  // Size: 0x0
  #pragma pack(push, 1)
  // WARNING Layout: Sequential may not be correctly taken into account!
  // Autogenerated type: UnityEngine.Rendering.Universal.LightCookieManager/Sorting
  // [TokenAttribute] Offset: FFFFFFFF
  struct LightCookieManager::Sorting/*, public ::System::ValueType*/ {
    public:
    // Nested type: ::UnityEngine::Rendering::Universal::LightCookieManager::Sorting::$$c__DisplayClass2_0_1<T>
    template<typename T>
    struct $$c__DisplayClass2_0_1;
    // WARNING Size may be invalid!
    // Autogenerated type: UnityEngine.Rendering.Universal.LightCookieManager/Sorting/<>c__DisplayClass2_0`1
    // [TokenAttribute] Offset: FFFFFFFF
    // [CompilerGeneratedAttribute] Offset: FFFFFFFF
    template<typename T>
    struct $$c__DisplayClass2_0_1/*, public ::System::ValueType*/ {
      public:
      public:
      // public T[] data
      // Size: 0x8
      // Offset: 0x0
      ::ArrayW<T> data;
      // Field size check
      static_assert(sizeof(::ArrayW<T>) == 0x8);
      public:
      // Creating value type constructor for type: $$c__DisplayClass2_0_1
      constexpr $$c__DisplayClass2_0_1(::ArrayW<T> data_ = ::ArrayW<T>(static_cast<void*>(nullptr))) noexcept : data{data_} {}
      // Creating interface conversion operator: operator ::System::ValueType
      operator ::System::ValueType() noexcept {
        return *reinterpret_cast<::System::ValueType*>(this);
      }
      // Creating conversion operator: operator ::ArrayW<T>
      constexpr operator ::ArrayW<T>() const noexcept {
        return data;
      }
      // Autogenerated instance field getter
      // Get instance field: public T[] data
      [[deprecated("Use field access instead!")]] ::ArrayW<T>& dyn_data() {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::Universal::LightCookieManager::Sorting::$$c__DisplayClass2_0_1::dyn_data");
        auto ___internal__instance = *this;
        static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "data"))->offset;
        return *reinterpret_cast<::ArrayW<T>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
      }
    }; // UnityEngine.Rendering.Universal.LightCookieManager/Sorting/<>c__DisplayClass2_0`1
    // Could not write size check! Type: UnityEngine.Rendering.Universal.LightCookieManager/Sorting/<>c__DisplayClass2_0`1 is generic, or has no fields that are valid for size checks!
    // Creating value type constructor for type: Sorting
    constexpr Sorting() noexcept {}
    // Creating interface conversion operator: operator ::System::ValueType
    operator ::System::ValueType() noexcept {
      return *reinterpret_cast<::System::ValueType*>(this);
    }
    // static public System.Void QuickSort(T[] data, System.Func`3<T,T,System.Int32> compare)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class T>
    static void QuickSort(::ArrayW<T> data, ::System::Func_3<T, T, int>* compare) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::Universal::LightCookieManager::Sorting::QuickSort");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Rendering.Universal", "LightCookieManager/Sorting", "QuickSort", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(compare)})));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}));
      ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___generic__method, data, compare);
    }
    // static public System.Void QuickSort(T[] data, System.Int32 start, System.Int32 end, System.Func`3<T,T,System.Int32> compare)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class T>
    static void QuickSort(::ArrayW<T> data, int start, int end, ::System::Func_3<T, T, int>* compare) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::Universal::LightCookieManager::Sorting::QuickSort");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Rendering.Universal", "LightCookieManager/Sorting", "QuickSort", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end), ::il2cpp_utils::ExtractType(compare)})));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}));
      ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___generic__method, data, start, end, compare);
    }
    // static private T Median3Pivot(T[] data, System.Int32 start, System.Int32 pivot, System.Int32 end, System.Func`3<T,T,System.Int32> compare)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class T>
    static T Median3Pivot(::ArrayW<T> data, int start, int pivot, int end, ::System::Func_3<T, T, int>* compare) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::Universal::LightCookieManager::Sorting::Median3Pivot");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Rendering.Universal", "LightCookieManager/Sorting", "Median3Pivot", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(pivot), ::il2cpp_utils::ExtractType(end), ::il2cpp_utils::ExtractType(compare)})));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}));
      return ::il2cpp_utils::RunMethodRethrow<T, false>(static_cast<Il2CppObject*>(nullptr), ___generic__method, data, start, pivot, end, compare);
    }
    // static private System.Int32 Partition(T[] data, System.Int32 start, System.Int32 end, System.Func`3<T,T,System.Int32> compare)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class T>
    static int Partition(::ArrayW<T> data, int start, int end, ::System::Func_3<T, T, int>* compare) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::Universal::LightCookieManager::Sorting::Partition");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Rendering.Universal", "LightCookieManager/Sorting", "Partition", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end), ::il2cpp_utils::ExtractType(compare)})));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}));
      return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___generic__method, data, start, end, compare);
    }
    // static public System.Void InsertionSort(T[] data, System.Int32 start, System.Int32 end, System.Func`3<T,T,System.Int32> compare)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class T>
    static void InsertionSort(::ArrayW<T> data, int start, int end, ::System::Func_3<T, T, int>* compare) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::Universal::LightCookieManager::Sorting::InsertionSort");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Rendering.Universal", "LightCookieManager/Sorting", "InsertionSort", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end), ::il2cpp_utils::ExtractType(compare)})));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}));
      ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___generic__method, data, start, end, compare);
    }
    // static System.Void <Median3Pivot>g__Swap|2_0(System.Int32 a, System.Int32 b, ref UnityEngine.Rendering.Universal.LightCookieManager/Sorting/<>c__DisplayClass2_0`1<T> )
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class T>
    static void $Median3Pivot$g__Swap_2_0(int a, int b, ByRef<::UnityEngine::Rendering::Universal::LightCookieManager::Sorting::$$c__DisplayClass2_0_1<T>> param_2) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::Universal::LightCookieManager::Sorting::<Median3Pivot>g__Swap|2_0");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Rendering.Universal", "LightCookieManager/Sorting", "<Median3Pivot>g__Swap|2_0", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(param_2)})));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}));
      ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___generic__method, a, b, byref(param_2));
    }
  }; // UnityEngine.Rendering.Universal.LightCookieManager/Sorting
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE_GENERIC_STRUCT(::UnityEngine::Rendering::Universal::LightCookieManager::Sorting::$$c__DisplayClass2_0_1, "UnityEngine.Rendering.Universal", "LightCookieManager/Sorting/<>c__DisplayClass2_0`1");
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::Rendering::Universal::LightCookieManager::Sorting::QuickSort
// Il2CppName: QuickSort
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: UnityEngine::Rendering::Universal::LightCookieManager::Sorting::QuickSort
// Il2CppName: QuickSort
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: UnityEngine::Rendering::Universal::LightCookieManager::Sorting::Median3Pivot
// Il2CppName: Median3Pivot
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: UnityEngine::Rendering::Universal::LightCookieManager::Sorting::Partition
// Il2CppName: Partition
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: UnityEngine::Rendering::Universal::LightCookieManager::Sorting::InsertionSort
// Il2CppName: InsertionSort
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: UnityEngine::Rendering::Universal::LightCookieManager::Sorting::$Median3Pivot$g__Swap_2_0
// Il2CppName: <Median3Pivot>g__Swap|2_0
// Cannot write MetadataGetter for generic methods!
