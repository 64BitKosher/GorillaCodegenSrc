// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.Rendering.Universal.HDRDebugViewPass
#include "UnityEngine/Rendering/Universal/HDRDebugViewPass.hpp"
// Including type: UnityEngine.Experimental.Rendering.RenderGraphModule.TextureHandle
#include "UnityEngine/Experimental/Rendering/RenderGraphModule/TextureHandle.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::Rendering::Universal::HDRDebugViewPass::$$c__DisplayClass16_0);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::Rendering::Universal::HDRDebugViewPass::$$c__DisplayClass16_0*, "UnityEngine.Rendering.Universal", "HDRDebugViewPass/<>c__DisplayClass16_0");
// Type namespace: UnityEngine.Rendering.Universal
namespace UnityEngine::Rendering::Universal {
  // Size: 0x30
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.Rendering.Universal.HDRDebugViewPass/<>c__DisplayClass16_0
  // [TokenAttribute] Offset: FFFFFFFF
  // [CompilerGeneratedAttribute] Offset: FFFFFFFF
  class HDRDebugViewPass::$$c__DisplayClass16_0 : public ::Il2CppObject {
    public:
    public:
    // public UnityEngine.Rendering.Universal.HDRDebugViewPass <>4__this
    // Size: 0x8
    // Offset: 0x10
    ::UnityEngine::Rendering::Universal::HDRDebugViewPass* $$4__this;
    // Field size check
    static_assert(sizeof(::UnityEngine::Rendering::Universal::HDRDebugViewPass*) == 0x8);
    // public UnityEngine.Experimental.Rendering.RenderGraphModule.TextureHandle currentColorTarget
    // Size: 0x8
    // Offset: 0x18
    ::UnityEngine::Experimental::Rendering::RenderGraphModule::TextureHandle currentColorTarget;
    // Field size check
    static_assert(sizeof(::UnityEngine::Experimental::Rendering::RenderGraphModule::TextureHandle) == 0x8);
    // public UnityEngine.Experimental.Rendering.RenderGraphModule.TextureHandle xyBuffer
    // Size: 0x8
    // Offset: 0x20
    ::UnityEngine::Experimental::Rendering::RenderGraphModule::TextureHandle xyBuffer;
    // Field size check
    static_assert(sizeof(::UnityEngine::Experimental::Rendering::RenderGraphModule::TextureHandle) == 0x8);
    // public UnityEngine.Experimental.Rendering.RenderGraphModule.TextureHandle passThroughRT
    // Size: 0x8
    // Offset: 0x28
    ::UnityEngine::Experimental::Rendering::RenderGraphModule::TextureHandle passThroughRT;
    // Field size check
    static_assert(sizeof(::UnityEngine::Experimental::Rendering::RenderGraphModule::TextureHandle) == 0x8);
    public:
    // Get instance field reference: public UnityEngine.Rendering.Universal.HDRDebugViewPass <>4__this
    [[deprecated("Use field access instead!")]] ::UnityEngine::Rendering::Universal::HDRDebugViewPass*& dyn_$$4__this();
    // Get instance field reference: public UnityEngine.Experimental.Rendering.RenderGraphModule.TextureHandle currentColorTarget
    [[deprecated("Use field access instead!")]] ::UnityEngine::Experimental::Rendering::RenderGraphModule::TextureHandle& dyn_currentColorTarget();
    // Get instance field reference: public UnityEngine.Experimental.Rendering.RenderGraphModule.TextureHandle xyBuffer
    [[deprecated("Use field access instead!")]] ::UnityEngine::Experimental::Rendering::RenderGraphModule::TextureHandle& dyn_xyBuffer();
    // Get instance field reference: public UnityEngine.Experimental.Rendering.RenderGraphModule.TextureHandle passThroughRT
    [[deprecated("Use field access instead!")]] ::UnityEngine::Experimental::Rendering::RenderGraphModule::TextureHandle& dyn_passThroughRT();
    // public System.Void .ctor()
    // Offset: 0x52C6018
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static HDRDebugViewPass::$$c__DisplayClass16_0* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::Universal::HDRDebugViewPass::$$c__DisplayClass16_0::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<HDRDebugViewPass::$$c__DisplayClass16_0*, creationType>()));
    }
  }; // UnityEngine.Rendering.Universal.HDRDebugViewPass/<>c__DisplayClass16_0
  #pragma pack(pop)
  static check_size<sizeof(HDRDebugViewPass::$$c__DisplayClass16_0), 40 + sizeof(::UnityEngine::Experimental::Rendering::RenderGraphModule::TextureHandle)> __UnityEngine_Rendering_Universal_HDRDebugViewPass_$$c__DisplayClass16_0SizeCheck;
  static_assert(sizeof(HDRDebugViewPass::$$c__DisplayClass16_0) == 0x30);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::Rendering::Universal::HDRDebugViewPass::$$c__DisplayClass16_0::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
