// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.Rendering.Universal.PostProcessPass
#include "UnityEngine/Rendering/Universal/PostProcessPass.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::Rendering
namespace UnityEngine::Rendering {
  // Forward declaring type: RTHandle
  class RTHandle;
  // Forward declaring type: CommandBuffer
  class CommandBuffer;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::Rendering::Universal::PostProcessPass::$$c__DisplayClass69_0, "UnityEngine.Rendering.Universal", "PostProcessPass/<>c__DisplayClass69_0");
// Type namespace: UnityEngine.Rendering.Universal
namespace UnityEngine::Rendering::Universal {
  // Size: 0x28
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.Rendering.Universal.PostProcessPass/<>c__DisplayClass69_0
  // [TokenAttribute] Offset: FFFFFFFF
  // [CompilerGeneratedAttribute] Offset: FFFFFFFF
  struct PostProcessPass::$$c__DisplayClass69_0/*, public ::System::ValueType*/ {
    public:
    public:
    // public UnityEngine.Rendering.RTHandle source
    // Size: 0x8
    // Offset: 0x0
    ::UnityEngine::Rendering::RTHandle* source;
    // Field size check
    static_assert(sizeof(::UnityEngine::Rendering::RTHandle*) == 0x8);
    // public UnityEngine.Rendering.RTHandle destination
    // Size: 0x8
    // Offset: 0x8
    ::UnityEngine::Rendering::RTHandle* destination;
    // Field size check
    static_assert(sizeof(::UnityEngine::Rendering::RTHandle*) == 0x8);
    // public UnityEngine.Rendering.Universal.PostProcessPass <>4__this
    // Size: 0x8
    // Offset: 0x10
    ::UnityEngine::Rendering::Universal::PostProcessPass* $$4__this;
    // Field size check
    static_assert(sizeof(::UnityEngine::Rendering::Universal::PostProcessPass*) == 0x8);
    // public System.Int32 amountOfPassesRemaining
    // Size: 0x4
    // Offset: 0x18
    int amountOfPassesRemaining;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // Padding between fields: amountOfPassesRemaining and: cmd
    char __padding3[0x4] = {};
    // public UnityEngine.Rendering.CommandBuffer cmd
    // Size: 0x8
    // Offset: 0x20
    ::UnityEngine::Rendering::CommandBuffer* cmd;
    // Field size check
    static_assert(sizeof(::UnityEngine::Rendering::CommandBuffer*) == 0x8);
    public:
    // Creating value type constructor for type: $$c__DisplayClass69_0
    constexpr $$c__DisplayClass69_0(::UnityEngine::Rendering::RTHandle* source_ = {}, ::UnityEngine::Rendering::RTHandle* destination_ = {}, ::UnityEngine::Rendering::Universal::PostProcessPass* $$4__this_ = {}, int amountOfPassesRemaining_ = {}, ::UnityEngine::Rendering::CommandBuffer* cmd_ = {}) noexcept : source{source_}, destination{destination_}, $$4__this{$$4__this_}, amountOfPassesRemaining{amountOfPassesRemaining_}, cmd{cmd_} {}
    // Creating interface conversion operator: operator ::System::ValueType
    operator ::System::ValueType() noexcept {
      return *reinterpret_cast<::System::ValueType*>(this);
    }
    // Get instance field reference: public UnityEngine.Rendering.RTHandle source
    [[deprecated("Use field access instead!")]] ::UnityEngine::Rendering::RTHandle*& dyn_source();
    // Get instance field reference: public UnityEngine.Rendering.RTHandle destination
    [[deprecated("Use field access instead!")]] ::UnityEngine::Rendering::RTHandle*& dyn_destination();
    // Get instance field reference: public UnityEngine.Rendering.Universal.PostProcessPass <>4__this
    [[deprecated("Use field access instead!")]] ::UnityEngine::Rendering::Universal::PostProcessPass*& dyn_$$4__this();
    // Get instance field reference: public System.Int32 amountOfPassesRemaining
    [[deprecated("Use field access instead!")]] int& dyn_amountOfPassesRemaining();
    // Get instance field reference: public UnityEngine.Rendering.CommandBuffer cmd
    [[deprecated("Use field access instead!")]] ::UnityEngine::Rendering::CommandBuffer*& dyn_cmd();
  }; // UnityEngine.Rendering.Universal.PostProcessPass/<>c__DisplayClass69_0
  #pragma pack(pop)
  static check_size<sizeof(PostProcessPass::$$c__DisplayClass69_0), 32 + sizeof(::UnityEngine::Rendering::CommandBuffer*)> __UnityEngine_Rendering_Universal_PostProcessPass_$$c__DisplayClass69_0SizeCheck;
  static_assert(sizeof(PostProcessPass::$$c__DisplayClass69_0) == 0x28);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
