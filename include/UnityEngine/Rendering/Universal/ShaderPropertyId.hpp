// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Completed includes
// Type namespace: UnityEngine.Rendering.Universal
namespace UnityEngine::Rendering::Universal {
  // Forward declaring type: ShaderPropertyId
  class ShaderPropertyId;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::Rendering::Universal::ShaderPropertyId);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::Rendering::Universal::ShaderPropertyId*, "UnityEngine.Rendering.Universal", "ShaderPropertyId");
// Type namespace: UnityEngine.Rendering.Universal
namespace UnityEngine::Rendering::Universal {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.Rendering.Universal.ShaderPropertyId
  // [TokenAttribute] Offset: FFFFFFFF
  class ShaderPropertyId : public ::Il2CppObject {
    public:
    // Get static field: static public readonly System.Int32 glossyEnvironmentColor
    static int _get_glossyEnvironmentColor();
    // Set static field: static public readonly System.Int32 glossyEnvironmentColor
    static void _set_glossyEnvironmentColor(int value);
    // Get static field: static public readonly System.Int32 subtractiveShadowColor
    static int _get_subtractiveShadowColor();
    // Set static field: static public readonly System.Int32 subtractiveShadowColor
    static void _set_subtractiveShadowColor(int value);
    // Get static field: static public readonly System.Int32 glossyEnvironmentCubeMap
    static int _get_glossyEnvironmentCubeMap();
    // Set static field: static public readonly System.Int32 glossyEnvironmentCubeMap
    static void _set_glossyEnvironmentCubeMap(int value);
    // Get static field: static public readonly System.Int32 glossyEnvironmentCubeMapHDR
    static int _get_glossyEnvironmentCubeMapHDR();
    // Set static field: static public readonly System.Int32 glossyEnvironmentCubeMapHDR
    static void _set_glossyEnvironmentCubeMapHDR(int value);
    // Get static field: static public readonly System.Int32 ambientSkyColor
    static int _get_ambientSkyColor();
    // Set static field: static public readonly System.Int32 ambientSkyColor
    static void _set_ambientSkyColor(int value);
    // Get static field: static public readonly System.Int32 ambientEquatorColor
    static int _get_ambientEquatorColor();
    // Set static field: static public readonly System.Int32 ambientEquatorColor
    static void _set_ambientEquatorColor(int value);
    // Get static field: static public readonly System.Int32 ambientGroundColor
    static int _get_ambientGroundColor();
    // Set static field: static public readonly System.Int32 ambientGroundColor
    static void _set_ambientGroundColor(int value);
    // Get static field: static public readonly System.Int32 time
    static int _get_time();
    // Set static field: static public readonly System.Int32 time
    static void _set_time(int value);
    // Get static field: static public readonly System.Int32 sinTime
    static int _get_sinTime();
    // Set static field: static public readonly System.Int32 sinTime
    static void _set_sinTime(int value);
    // Get static field: static public readonly System.Int32 cosTime
    static int _get_cosTime();
    // Set static field: static public readonly System.Int32 cosTime
    static void _set_cosTime(int value);
    // Get static field: static public readonly System.Int32 deltaTime
    static int _get_deltaTime();
    // Set static field: static public readonly System.Int32 deltaTime
    static void _set_deltaTime(int value);
    // Get static field: static public readonly System.Int32 timeParameters
    static int _get_timeParameters();
    // Set static field: static public readonly System.Int32 timeParameters
    static void _set_timeParameters(int value);
    // Get static field: static public readonly System.Int32 scaledScreenParams
    static int _get_scaledScreenParams();
    // Set static field: static public readonly System.Int32 scaledScreenParams
    static void _set_scaledScreenParams(int value);
    // Get static field: static public readonly System.Int32 worldSpaceCameraPos
    static int _get_worldSpaceCameraPos();
    // Set static field: static public readonly System.Int32 worldSpaceCameraPos
    static void _set_worldSpaceCameraPos(int value);
    // Get static field: static public readonly System.Int32 screenParams
    static int _get_screenParams();
    // Set static field: static public readonly System.Int32 screenParams
    static void _set_screenParams(int value);
    // Get static field: static public readonly System.Int32 alphaToMaskAvailable
    static int _get_alphaToMaskAvailable();
    // Set static field: static public readonly System.Int32 alphaToMaskAvailable
    static void _set_alphaToMaskAvailable(int value);
    // Get static field: static public readonly System.Int32 projectionParams
    static int _get_projectionParams();
    // Set static field: static public readonly System.Int32 projectionParams
    static void _set_projectionParams(int value);
    // Get static field: static public readonly System.Int32 zBufferParams
    static int _get_zBufferParams();
    // Set static field: static public readonly System.Int32 zBufferParams
    static void _set_zBufferParams(int value);
    // Get static field: static public readonly System.Int32 orthoParams
    static int _get_orthoParams();
    // Set static field: static public readonly System.Int32 orthoParams
    static void _set_orthoParams(int value);
    // Get static field: static public readonly System.Int32 globalMipBias
    static int _get_globalMipBias();
    // Set static field: static public readonly System.Int32 globalMipBias
    static void _set_globalMipBias(int value);
    // Get static field: static public readonly System.Int32 screenSize
    static int _get_screenSize();
    // Set static field: static public readonly System.Int32 screenSize
    static void _set_screenSize(int value);
    // Get static field: static public readonly System.Int32 screenCoordScaleBias
    static int _get_screenCoordScaleBias();
    // Set static field: static public readonly System.Int32 screenCoordScaleBias
    static void _set_screenCoordScaleBias(int value);
    // Get static field: static public readonly System.Int32 screenSizeOverride
    static int _get_screenSizeOverride();
    // Set static field: static public readonly System.Int32 screenSizeOverride
    static void _set_screenSizeOverride(int value);
    // Get static field: static public readonly System.Int32 viewMatrix
    static int _get_viewMatrix();
    // Set static field: static public readonly System.Int32 viewMatrix
    static void _set_viewMatrix(int value);
    // Get static field: static public readonly System.Int32 projectionMatrix
    static int _get_projectionMatrix();
    // Set static field: static public readonly System.Int32 projectionMatrix
    static void _set_projectionMatrix(int value);
    // Get static field: static public readonly System.Int32 viewAndProjectionMatrix
    static int _get_viewAndProjectionMatrix();
    // Set static field: static public readonly System.Int32 viewAndProjectionMatrix
    static void _set_viewAndProjectionMatrix(int value);
    // Get static field: static public readonly System.Int32 inverseViewMatrix
    static int _get_inverseViewMatrix();
    // Set static field: static public readonly System.Int32 inverseViewMatrix
    static void _set_inverseViewMatrix(int value);
    // Get static field: static public readonly System.Int32 inverseProjectionMatrix
    static int _get_inverseProjectionMatrix();
    // Set static field: static public readonly System.Int32 inverseProjectionMatrix
    static void _set_inverseProjectionMatrix(int value);
    // Get static field: static public readonly System.Int32 inverseViewAndProjectionMatrix
    static int _get_inverseViewAndProjectionMatrix();
    // Set static field: static public readonly System.Int32 inverseViewAndProjectionMatrix
    static void _set_inverseViewAndProjectionMatrix(int value);
    // Get static field: static public readonly System.Int32 cameraProjectionMatrix
    static int _get_cameraProjectionMatrix();
    // Set static field: static public readonly System.Int32 cameraProjectionMatrix
    static void _set_cameraProjectionMatrix(int value);
    // Get static field: static public readonly System.Int32 inverseCameraProjectionMatrix
    static int _get_inverseCameraProjectionMatrix();
    // Set static field: static public readonly System.Int32 inverseCameraProjectionMatrix
    static void _set_inverseCameraProjectionMatrix(int value);
    // Get static field: static public readonly System.Int32 worldToCameraMatrix
    static int _get_worldToCameraMatrix();
    // Set static field: static public readonly System.Int32 worldToCameraMatrix
    static void _set_worldToCameraMatrix(int value);
    // Get static field: static public readonly System.Int32 cameraToWorldMatrix
    static int _get_cameraToWorldMatrix();
    // Set static field: static public readonly System.Int32 cameraToWorldMatrix
    static void _set_cameraToWorldMatrix(int value);
    // Get static field: static public readonly System.Int32 cameraWorldClipPlanes
    static int _get_cameraWorldClipPlanes();
    // Set static field: static public readonly System.Int32 cameraWorldClipPlanes
    static void _set_cameraWorldClipPlanes(int value);
    // Get static field: static public readonly System.Int32 billboardNormal
    static int _get_billboardNormal();
    // Set static field: static public readonly System.Int32 billboardNormal
    static void _set_billboardNormal(int value);
    // Get static field: static public readonly System.Int32 billboardTangent
    static int _get_billboardTangent();
    // Set static field: static public readonly System.Int32 billboardTangent
    static void _set_billboardTangent(int value);
    // Get static field: static public readonly System.Int32 billboardCameraParams
    static int _get_billboardCameraParams();
    // Set static field: static public readonly System.Int32 billboardCameraParams
    static void _set_billboardCameraParams(int value);
    // Get static field: static public readonly System.Int32 blitTexture
    static int _get_blitTexture();
    // Set static field: static public readonly System.Int32 blitTexture
    static void _set_blitTexture(int value);
    // Get static field: static public readonly System.Int32 blitScaleBias
    static int _get_blitScaleBias();
    // Set static field: static public readonly System.Int32 blitScaleBias
    static void _set_blitScaleBias(int value);
    // Get static field: static public readonly System.Int32 sourceTex
    static int _get_sourceTex();
    // Set static field: static public readonly System.Int32 sourceTex
    static void _set_sourceTex(int value);
    // Get static field: static public readonly System.Int32 scaleBias
    static int _get_scaleBias();
    // Set static field: static public readonly System.Int32 scaleBias
    static void _set_scaleBias(int value);
    // Get static field: static public readonly System.Int32 scaleBiasRt
    static int _get_scaleBiasRt();
    // Set static field: static public readonly System.Int32 scaleBiasRt
    static void _set_scaleBiasRt(int value);
    // Get static field: static public readonly System.Int32 rendererColor
    static int _get_rendererColor();
    // Set static field: static public readonly System.Int32 rendererColor
    static void _set_rendererColor(int value);
    // Get static field: static public readonly System.Int32 ditheringTexture
    static int _get_ditheringTexture();
    // Set static field: static public readonly System.Int32 ditheringTexture
    static void _set_ditheringTexture(int value);
    // Get static field: static public readonly System.Int32 ditheringTextureInvSize
    static int _get_ditheringTextureInvSize();
    // Set static field: static public readonly System.Int32 ditheringTextureInvSize
    static void _set_ditheringTextureInvSize(int value);
    // Get static field: static public readonly System.Int32 renderingLayerMaxInt
    static int _get_renderingLayerMaxInt();
    // Set static field: static public readonly System.Int32 renderingLayerMaxInt
    static void _set_renderingLayerMaxInt(int value);
    // Get static field: static public readonly System.Int32 renderingLayerRcpMaxInt
    static int _get_renderingLayerRcpMaxInt();
    // Set static field: static public readonly System.Int32 renderingLayerRcpMaxInt
    static void _set_renderingLayerRcpMaxInt(int value);
    // Get static field: static public readonly System.Int32 overlayUITexture
    static int _get_overlayUITexture();
    // Set static field: static public readonly System.Int32 overlayUITexture
    static void _set_overlayUITexture(int value);
    // Get static field: static public readonly System.Int32 hdrOutputLuminanceParams
    static int _get_hdrOutputLuminanceParams();
    // Set static field: static public readonly System.Int32 hdrOutputLuminanceParams
    static void _set_hdrOutputLuminanceParams(int value);
    // Get static field: static public readonly System.Int32 hdrOutputGradingParams
    static int _get_hdrOutputGradingParams();
    // Set static field: static public readonly System.Int32 hdrOutputGradingParams
    static void _set_hdrOutputGradingParams(int value);
    // static private System.Void .cctor()
    // Offset: 0x52F8968
    static void _cctor();
  }; // UnityEngine.Rendering.Universal.ShaderPropertyId
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::Rendering::Universal::ShaderPropertyId::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&UnityEngine::Rendering::Universal::ShaderPropertyId::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::Universal::ShaderPropertyId*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
