// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.Rendering.Universal.DecalTechniqueOption
#include "UnityEngine/Rendering/Universal/DecalTechniqueOption.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::Rendering::Universal
namespace UnityEngine::Rendering::Universal {
  // Forward declaring type: DBufferSettings
  class DBufferSettings;
  // Forward declaring type: DecalScreenSpaceSettings
  class DecalScreenSpaceSettings;
}
// Completed forward declares
// Type namespace: UnityEngine.Rendering.Universal
namespace UnityEngine::Rendering::Universal {
  // Forward declaring type: DecalSettings
  class DecalSettings;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::Rendering::Universal::DecalSettings);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::Rendering::Universal::DecalSettings*, "UnityEngine.Rendering.Universal", "DecalSettings");
// Type namespace: UnityEngine.Rendering.Universal
namespace UnityEngine::Rendering::Universal {
  // Size: 0x30
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.Rendering.Universal.DecalSettings
  // [TokenAttribute] Offset: FFFFFFFF
  class DecalSettings : public ::Il2CppObject {
    public:
    public:
    // public UnityEngine.Rendering.Universal.DecalTechniqueOption technique
    // Size: 0x4
    // Offset: 0x10
    ::UnityEngine::Rendering::Universal::DecalTechniqueOption technique;
    // Field size check
    static_assert(sizeof(::UnityEngine::Rendering::Universal::DecalTechniqueOption) == 0x4);
    // public System.Single maxDrawDistance
    // Size: 0x4
    // Offset: 0x14
    float maxDrawDistance;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // public System.Boolean decalLayers
    // Size: 0x1
    // Offset: 0x18
    bool decalLayers;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: decalLayers and: dBufferSettings
    char __padding2[0x7] = {};
    // public UnityEngine.Rendering.Universal.DBufferSettings dBufferSettings
    // Size: 0x8
    // Offset: 0x20
    ::UnityEngine::Rendering::Universal::DBufferSettings* dBufferSettings;
    // Field size check
    static_assert(sizeof(::UnityEngine::Rendering::Universal::DBufferSettings*) == 0x8);
    // public UnityEngine.Rendering.Universal.DecalScreenSpaceSettings screenSpaceSettings
    // Size: 0x8
    // Offset: 0x28
    ::UnityEngine::Rendering::Universal::DecalScreenSpaceSettings* screenSpaceSettings;
    // Field size check
    static_assert(sizeof(::UnityEngine::Rendering::Universal::DecalScreenSpaceSettings*) == 0x8);
    public:
    // Get instance field reference: public UnityEngine.Rendering.Universal.DecalTechniqueOption technique
    [[deprecated("Use field access instead!")]] ::UnityEngine::Rendering::Universal::DecalTechniqueOption& dyn_technique();
    // Get instance field reference: public System.Single maxDrawDistance
    [[deprecated("Use field access instead!")]] float& dyn_maxDrawDistance();
    // Get instance field reference: public System.Boolean decalLayers
    [[deprecated("Use field access instead!")]] bool& dyn_decalLayers();
    // Get instance field reference: public UnityEngine.Rendering.Universal.DBufferSettings dBufferSettings
    [[deprecated("Use field access instead!")]] ::UnityEngine::Rendering::Universal::DBufferSettings*& dyn_dBufferSettings();
    // Get instance field reference: public UnityEngine.Rendering.Universal.DecalScreenSpaceSettings screenSpaceSettings
    [[deprecated("Use field access instead!")]] ::UnityEngine::Rendering::Universal::DecalScreenSpaceSettings*& dyn_screenSpaceSettings();
    // public System.Void .ctor()
    // Offset: 0x52D2FE8
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static DecalSettings* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::Universal::DecalSettings::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<DecalSettings*, creationType>()));
    }
  }; // UnityEngine.Rendering.Universal.DecalSettings
  #pragma pack(pop)
  static check_size<sizeof(DecalSettings), 40 + sizeof(::UnityEngine::Rendering::Universal::DecalScreenSpaceSettings*)> __UnityEngine_Rendering_Universal_DecalSettingsSizeCheck;
  static_assert(sizeof(DecalSettings) == 0x30);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::Rendering::Universal::DecalSettings::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
