// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.ScriptableObject
#include "UnityEngine/ScriptableObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::Rendering::Universal
namespace UnityEngine::Rendering::Universal {
}
// Completed forward declares
// Type namespace: UnityEngine.Rendering.Universal
namespace UnityEngine::Rendering::Universal {
  // Forward declaring type: PostProcessData
  class PostProcessData;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::Rendering::Universal::PostProcessData);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::Rendering::Universal::PostProcessData*, "UnityEngine.Rendering.Universal", "PostProcessData");
// Type namespace: UnityEngine.Rendering.Universal
namespace UnityEngine::Rendering::Universal {
  // Size: 0x28
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.Rendering.Universal.PostProcessData
  // [TokenAttribute] Offset: FFFFFFFF
  class PostProcessData : public ::UnityEngine::ScriptableObject {
    public:
    // Nested type: ::UnityEngine::Rendering::Universal::PostProcessData::ShaderResources
    class ShaderResources;
    // Nested type: ::UnityEngine::Rendering::Universal::PostProcessData::TextureResources
    class TextureResources;
    public:
    // public UnityEngine.Rendering.Universal.PostProcessData/ShaderResources shaders
    // Size: 0x8
    // Offset: 0x18
    ::UnityEngine::Rendering::Universal::PostProcessData::ShaderResources* shaders;
    // Field size check
    static_assert(sizeof(::UnityEngine::Rendering::Universal::PostProcessData::ShaderResources*) == 0x8);
    // public UnityEngine.Rendering.Universal.PostProcessData/TextureResources textures
    // Size: 0x8
    // Offset: 0x20
    ::UnityEngine::Rendering::Universal::PostProcessData::TextureResources* textures;
    // Field size check
    static_assert(sizeof(::UnityEngine::Rendering::Universal::PostProcessData::TextureResources*) == 0x8);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: public UnityEngine.Rendering.Universal.PostProcessData/ShaderResources shaders
    [[deprecated("Use field access instead!")]] ::UnityEngine::Rendering::Universal::PostProcessData::ShaderResources*& dyn_shaders();
    // Get instance field reference: public UnityEngine.Rendering.Universal.PostProcessData/TextureResources textures
    [[deprecated("Use field access instead!")]] ::UnityEngine::Rendering::Universal::PostProcessData::TextureResources*& dyn_textures();
    // public System.Void .ctor()
    // Offset: 0x5291CE4
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static PostProcessData* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::Universal::PostProcessData::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<PostProcessData*, creationType>()));
    }
  }; // UnityEngine.Rendering.Universal.PostProcessData
  #pragma pack(pop)
  static check_size<sizeof(PostProcessData), 32 + sizeof(::UnityEngine::Rendering::Universal::PostProcessData::TextureResources*)> __UnityEngine_Rendering_Universal_PostProcessDataSizeCheck;
  static_assert(sizeof(PostProcessData) == 0x28);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::Rendering::Universal::PostProcessData::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
