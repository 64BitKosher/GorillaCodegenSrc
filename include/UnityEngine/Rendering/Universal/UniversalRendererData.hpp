// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.Rendering.Universal.ScriptableRendererData
#include "UnityEngine/Rendering/Universal/ScriptableRendererData.hpp"
// Including type: UnityEngine.ISerializationCallbackReceiver
#include "UnityEngine/ISerializationCallbackReceiver.hpp"
// Including type: UnityEngine.LayerMask
#include "UnityEngine/LayerMask.hpp"
// Including type: UnityEngine.Rendering.Universal.RenderingMode
#include "UnityEngine/Rendering/Universal/RenderingMode.hpp"
// Including type: UnityEngine.Rendering.Universal.DepthPrimingMode
#include "UnityEngine/Rendering/Universal/DepthPrimingMode.hpp"
// Including type: UnityEngine.Rendering.Universal.CopyDepthMode
#include "UnityEngine/Rendering/Universal/CopyDepthMode.hpp"
// Including type: UnityEngine.Rendering.Universal.IntermediateTextureMode
#include "UnityEngine/Rendering/Universal/IntermediateTextureMode.hpp"
// Including type: System.Int32
#include "System/Int32.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::Rendering::Universal
namespace UnityEngine::Rendering::Universal {
  // Forward declaring type: PostProcessData
  class PostProcessData;
  // Forward declaring type: XRSystemData
  class XRSystemData;
  // Forward declaring type: StencilStateData
  class StencilStateData;
  // Forward declaring type: ScriptableRenderer
  class ScriptableRenderer;
}
// Completed forward declares
// Type namespace: UnityEngine.Rendering.Universal
namespace UnityEngine::Rendering::Universal {
  // Forward declaring type: UniversalRendererData
  class UniversalRendererData;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::Rendering::Universal::UniversalRendererData);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::Rendering::Universal::UniversalRendererData*, "UnityEngine.Rendering.Universal", "UniversalRendererData");
// Type namespace: UnityEngine.Rendering.Universal
namespace UnityEngine::Rendering::Universal {
  // Size: 0x88
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.Rendering.Universal.UniversalRendererData
  // [TokenAttribute] Offset: FFFFFFFF
  // [ReloadGroupAttribute] Offset: FFFFFFFF
  // [ExcludeFromPresetAttribute] Offset: FFFFFFFF
  class UniversalRendererData : public ::UnityEngine::Rendering::Universal::ScriptableRendererData/*, public ::UnityEngine::ISerializationCallbackReceiver*/ {
    public:
    // Writing base type padding for base size: 0x39 to desired offset: 0x40
    char ___base_padding[0x7] = {};
    // Nested type: ::UnityEngine::Rendering::Universal::UniversalRendererData::ShaderResources
    class ShaderResources;
    public:
    // public UnityEngine.Rendering.Universal.PostProcessData postProcessData
    // Size: 0x8
    // Offset: 0x40
    ::UnityEngine::Rendering::Universal::PostProcessData* postProcessData;
    // Field size check
    static_assert(sizeof(::UnityEngine::Rendering::Universal::PostProcessData*) == 0x8);
    // public UnityEngine.Rendering.Universal.XRSystemData xrSystemData
    // Size: 0x8
    // Offset: 0x48
    ::UnityEngine::Rendering::Universal::XRSystemData* xrSystemData;
    // Field size check
    static_assert(sizeof(::UnityEngine::Rendering::Universal::XRSystemData*) == 0x8);
    // public UnityEngine.Rendering.Universal.UniversalRendererData/ShaderResources shaders
    // Size: 0x8
    // Offset: 0x50
    ::UnityEngine::Rendering::Universal::UniversalRendererData::ShaderResources* shaders;
    // Field size check
    static_assert(sizeof(::UnityEngine::Rendering::Universal::UniversalRendererData::ShaderResources*) == 0x8);
    // private System.Int32 m_AssetVersion
    // Size: 0x4
    // Offset: 0x58
    int m_AssetVersion;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private UnityEngine.LayerMask m_OpaqueLayerMask
    // Size: 0x4
    // Offset: 0x5C
    ::UnityEngine::LayerMask m_OpaqueLayerMask;
    // Field size check
    static_assert(sizeof(::UnityEngine::LayerMask) == 0x4);
    // private UnityEngine.LayerMask m_TransparentLayerMask
    // Size: 0x4
    // Offset: 0x60
    ::UnityEngine::LayerMask m_TransparentLayerMask;
    // Field size check
    static_assert(sizeof(::UnityEngine::LayerMask) == 0x4);
    // Padding between fields: m_TransparentLayerMask and: m_DefaultStencilState
    char __padding5[0x4] = {};
    // private UnityEngine.Rendering.Universal.StencilStateData m_DefaultStencilState
    // Size: 0x8
    // Offset: 0x68
    ::UnityEngine::Rendering::Universal::StencilStateData* m_DefaultStencilState;
    // Field size check
    static_assert(sizeof(::UnityEngine::Rendering::Universal::StencilStateData*) == 0x8);
    // private System.Boolean m_ShadowTransparentReceive
    // Size: 0x1
    // Offset: 0x70
    bool m_ShadowTransparentReceive;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: m_ShadowTransparentReceive and: m_RenderingMode
    char __padding7[0x3] = {};
    // private UnityEngine.Rendering.Universal.RenderingMode m_RenderingMode
    // Size: 0x4
    // Offset: 0x74
    ::UnityEngine::Rendering::Universal::RenderingMode m_RenderingMode;
    // Field size check
    static_assert(sizeof(::UnityEngine::Rendering::Universal::RenderingMode) == 0x4);
    // private UnityEngine.Rendering.Universal.DepthPrimingMode m_DepthPrimingMode
    // Size: 0x4
    // Offset: 0x78
    ::UnityEngine::Rendering::Universal::DepthPrimingMode m_DepthPrimingMode;
    // Field size check
    static_assert(sizeof(::UnityEngine::Rendering::Universal::DepthPrimingMode) == 0x4);
    // private UnityEngine.Rendering.Universal.CopyDepthMode m_CopyDepthMode
    // Size: 0x4
    // Offset: 0x7C
    ::UnityEngine::Rendering::Universal::CopyDepthMode m_CopyDepthMode;
    // Field size check
    static_assert(sizeof(::UnityEngine::Rendering::Universal::CopyDepthMode) == 0x4);
    // private System.Boolean m_AccurateGbufferNormals
    // Size: 0x1
    // Offset: 0x80
    bool m_AccurateGbufferNormals;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: m_AccurateGbufferNormals and: m_IntermediateTextureMode
    char __padding11[0x3] = {};
    // private UnityEngine.Rendering.Universal.IntermediateTextureMode m_IntermediateTextureMode
    // Size: 0x4
    // Offset: 0x84
    ::UnityEngine::Rendering::Universal::IntermediateTextureMode m_IntermediateTextureMode;
    // Field size check
    static_assert(sizeof(::UnityEngine::Rendering::Universal::IntermediateTextureMode) == 0x4);
    public:
    // Creating interface conversion operator: operator ::UnityEngine::ISerializationCallbackReceiver
    operator ::UnityEngine::ISerializationCallbackReceiver() noexcept {
      return *reinterpret_cast<::UnityEngine::ISerializationCallbackReceiver*>(this);
    }
    // static field const value: static private System.Int32 k_LatestAssetVersion
    static constexpr const int k_LatestAssetVersion = 2;
    // Get static field: static private System.Int32 k_LatestAssetVersion
    static int _get_k_LatestAssetVersion();
    // Set static field: static private System.Int32 k_LatestAssetVersion
    static void _set_k_LatestAssetVersion(int value);
    // Get instance field reference: public UnityEngine.Rendering.Universal.PostProcessData postProcessData
    [[deprecated("Use field access instead!")]] ::UnityEngine::Rendering::Universal::PostProcessData*& dyn_postProcessData();
    // Get instance field reference: public UnityEngine.Rendering.Universal.XRSystemData xrSystemData
    [[deprecated("Use field access instead!")]] ::UnityEngine::Rendering::Universal::XRSystemData*& dyn_xrSystemData();
    // Get instance field reference: public UnityEngine.Rendering.Universal.UniversalRendererData/ShaderResources shaders
    [[deprecated("Use field access instead!")]] ::UnityEngine::Rendering::Universal::UniversalRendererData::ShaderResources*& dyn_shaders();
    // Get instance field reference: private System.Int32 m_AssetVersion
    [[deprecated("Use field access instead!")]] int& dyn_m_AssetVersion();
    // Get instance field reference: private UnityEngine.LayerMask m_OpaqueLayerMask
    [[deprecated("Use field access instead!")]] ::UnityEngine::LayerMask& dyn_m_OpaqueLayerMask();
    // Get instance field reference: private UnityEngine.LayerMask m_TransparentLayerMask
    [[deprecated("Use field access instead!")]] ::UnityEngine::LayerMask& dyn_m_TransparentLayerMask();
    // Get instance field reference: private UnityEngine.Rendering.Universal.StencilStateData m_DefaultStencilState
    [[deprecated("Use field access instead!")]] ::UnityEngine::Rendering::Universal::StencilStateData*& dyn_m_DefaultStencilState();
    // Get instance field reference: private System.Boolean m_ShadowTransparentReceive
    [[deprecated("Use field access instead!")]] bool& dyn_m_ShadowTransparentReceive();
    // Get instance field reference: private UnityEngine.Rendering.Universal.RenderingMode m_RenderingMode
    [[deprecated("Use field access instead!")]] ::UnityEngine::Rendering::Universal::RenderingMode& dyn_m_RenderingMode();
    // Get instance field reference: private UnityEngine.Rendering.Universal.DepthPrimingMode m_DepthPrimingMode
    [[deprecated("Use field access instead!")]] ::UnityEngine::Rendering::Universal::DepthPrimingMode& dyn_m_DepthPrimingMode();
    // Get instance field reference: private UnityEngine.Rendering.Universal.CopyDepthMode m_CopyDepthMode
    [[deprecated("Use field access instead!")]] ::UnityEngine::Rendering::Universal::CopyDepthMode& dyn_m_CopyDepthMode();
    // Get instance field reference: private System.Boolean m_AccurateGbufferNormals
    [[deprecated("Use field access instead!")]] bool& dyn_m_AccurateGbufferNormals();
    // Get instance field reference: private UnityEngine.Rendering.Universal.IntermediateTextureMode m_IntermediateTextureMode
    [[deprecated("Use field access instead!")]] ::UnityEngine::Rendering::Universal::IntermediateTextureMode& dyn_m_IntermediateTextureMode();
    // public UnityEngine.LayerMask get_opaqueLayerMask()
    // Offset: 0x52EEA84
    ::UnityEngine::LayerMask get_opaqueLayerMask();
    // public System.Void set_opaqueLayerMask(UnityEngine.LayerMask value)
    // Offset: 0x52EEA8C
    void set_opaqueLayerMask(::UnityEngine::LayerMask value);
    // public UnityEngine.LayerMask get_transparentLayerMask()
    // Offset: 0x52EEAB4
    ::UnityEngine::LayerMask get_transparentLayerMask();
    // public System.Void set_transparentLayerMask(UnityEngine.LayerMask value)
    // Offset: 0x52EEABC
    void set_transparentLayerMask(::UnityEngine::LayerMask value);
    // public UnityEngine.Rendering.Universal.StencilStateData get_defaultStencilState()
    // Offset: 0x52EEAE4
    ::UnityEngine::Rendering::Universal::StencilStateData* get_defaultStencilState();
    // public System.Void set_defaultStencilState(UnityEngine.Rendering.Universal.StencilStateData value)
    // Offset: 0x52EEAEC
    void set_defaultStencilState(::UnityEngine::Rendering::Universal::StencilStateData* value);
    // public System.Boolean get_shadowTransparentReceive()
    // Offset: 0x52EEB1C
    bool get_shadowTransparentReceive();
    // public System.Void set_shadowTransparentReceive(System.Boolean value)
    // Offset: 0x52EEB24
    void set_shadowTransparentReceive(bool value);
    // public UnityEngine.Rendering.Universal.RenderingMode get_renderingMode()
    // Offset: 0x52EEB4C
    ::UnityEngine::Rendering::Universal::RenderingMode get_renderingMode();
    // public System.Void set_renderingMode(UnityEngine.Rendering.Universal.RenderingMode value)
    // Offset: 0x52EEB54
    void set_renderingMode(::UnityEngine::Rendering::Universal::RenderingMode value);
    // public UnityEngine.Rendering.Universal.DepthPrimingMode get_depthPrimingMode()
    // Offset: 0x52EEB7C
    ::UnityEngine::Rendering::Universal::DepthPrimingMode get_depthPrimingMode();
    // public System.Void set_depthPrimingMode(UnityEngine.Rendering.Universal.DepthPrimingMode value)
    // Offset: 0x52EEB84
    void set_depthPrimingMode(::UnityEngine::Rendering::Universal::DepthPrimingMode value);
    // public UnityEngine.Rendering.Universal.CopyDepthMode get_copyDepthMode()
    // Offset: 0x52EEBAC
    ::UnityEngine::Rendering::Universal::CopyDepthMode get_copyDepthMode();
    // public System.Void set_copyDepthMode(UnityEngine.Rendering.Universal.CopyDepthMode value)
    // Offset: 0x52EEBB4
    void set_copyDepthMode(::UnityEngine::Rendering::Universal::CopyDepthMode value);
    // public System.Boolean get_accurateGbufferNormals()
    // Offset: 0x52EEBDC
    bool get_accurateGbufferNormals();
    // public System.Void set_accurateGbufferNormals(System.Boolean value)
    // Offset: 0x52EEBE4
    void set_accurateGbufferNormals(bool value);
    // public UnityEngine.Rendering.Universal.IntermediateTextureMode get_intermediateTextureMode()
    // Offset: 0x52EEC0C
    ::UnityEngine::Rendering::Universal::IntermediateTextureMode get_intermediateTextureMode();
    // public System.Void set_intermediateTextureMode(UnityEngine.Rendering.Universal.IntermediateTextureMode value)
    // Offset: 0x52EEC14
    void set_intermediateTextureMode(::UnityEngine::Rendering::Universal::IntermediateTextureMode value);
    // private System.Void ReloadAllNullProperties()
    // Offset: 0x52EEA80
    void ReloadAllNullProperties();
    // private System.Void UnityEngine.ISerializationCallbackReceiver.OnBeforeSerialize()
    // Offset: 0x52EEC44
    void UnityEngine_ISerializationCallbackReceiver_OnBeforeSerialize();
    // private System.Void UnityEngine.ISerializationCallbackReceiver.OnAfterDeserialize()
    // Offset: 0x52EEC50
    void UnityEngine_ISerializationCallbackReceiver_OnAfterDeserialize();
    // protected override UnityEngine.Rendering.Universal.ScriptableRenderer Create()
    // Offset: 0x52EE9FC
    // Implemented from: UnityEngine.Rendering.Universal.ScriptableRendererData
    // Base method: UnityEngine.Rendering.Universal.ScriptableRenderer ScriptableRendererData::Create()
    ::UnityEngine::Rendering::Universal::ScriptableRenderer* Create();
    // protected override System.Void OnEnable()
    // Offset: 0x52EEC3C
    // Implemented from: UnityEngine.Rendering.Universal.ScriptableRendererData
    // Base method: System.Void ScriptableRendererData::OnEnable()
    void OnEnable();
    // public System.Void .ctor()
    // Offset: 0x52EEC6C
    // Implemented from: UnityEngine.Rendering.Universal.ScriptableRendererData
    // Base method: System.Void ScriptableRendererData::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static UniversalRendererData* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::Universal::UniversalRendererData::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<UniversalRendererData*, creationType>()));
    }
  }; // UnityEngine.Rendering.Universal.UniversalRendererData
  #pragma pack(pop)
  static check_size<sizeof(UniversalRendererData), 132 + sizeof(::UnityEngine::Rendering::Universal::IntermediateTextureMode)> __UnityEngine_Rendering_Universal_UniversalRendererDataSizeCheck;
  static_assert(sizeof(UniversalRendererData) == 0x88);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::Rendering::Universal::UniversalRendererData::get_opaqueLayerMask
// Il2CppName: get_opaqueLayerMask
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::LayerMask (UnityEngine::Rendering::Universal::UniversalRendererData::*)()>(&UnityEngine::Rendering::Universal::UniversalRendererData::get_opaqueLayerMask)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::Universal::UniversalRendererData*), "get_opaqueLayerMask", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::Universal::UniversalRendererData::set_opaqueLayerMask
// Il2CppName: set_opaqueLayerMask
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Rendering::Universal::UniversalRendererData::*)(::UnityEngine::LayerMask)>(&UnityEngine::Rendering::Universal::UniversalRendererData::set_opaqueLayerMask)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "LayerMask")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::Universal::UniversalRendererData*), "set_opaqueLayerMask", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::Universal::UniversalRendererData::get_transparentLayerMask
// Il2CppName: get_transparentLayerMask
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::LayerMask (UnityEngine::Rendering::Universal::UniversalRendererData::*)()>(&UnityEngine::Rendering::Universal::UniversalRendererData::get_transparentLayerMask)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::Universal::UniversalRendererData*), "get_transparentLayerMask", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::Universal::UniversalRendererData::set_transparentLayerMask
// Il2CppName: set_transparentLayerMask
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Rendering::Universal::UniversalRendererData::*)(::UnityEngine::LayerMask)>(&UnityEngine::Rendering::Universal::UniversalRendererData::set_transparentLayerMask)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "LayerMask")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::Universal::UniversalRendererData*), "set_transparentLayerMask", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::Universal::UniversalRendererData::get_defaultStencilState
// Il2CppName: get_defaultStencilState
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Rendering::Universal::StencilStateData* (UnityEngine::Rendering::Universal::UniversalRendererData::*)()>(&UnityEngine::Rendering::Universal::UniversalRendererData::get_defaultStencilState)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::Universal::UniversalRendererData*), "get_defaultStencilState", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::Universal::UniversalRendererData::set_defaultStencilState
// Il2CppName: set_defaultStencilState
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Rendering::Universal::UniversalRendererData::*)(::UnityEngine::Rendering::Universal::StencilStateData*)>(&UnityEngine::Rendering::Universal::UniversalRendererData::set_defaultStencilState)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering.Universal", "StencilStateData")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::Universal::UniversalRendererData*), "set_defaultStencilState", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::Universal::UniversalRendererData::get_shadowTransparentReceive
// Il2CppName: get_shadowTransparentReceive
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::Rendering::Universal::UniversalRendererData::*)()>(&UnityEngine::Rendering::Universal::UniversalRendererData::get_shadowTransparentReceive)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::Universal::UniversalRendererData*), "get_shadowTransparentReceive", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::Universal::UniversalRendererData::set_shadowTransparentReceive
// Il2CppName: set_shadowTransparentReceive
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Rendering::Universal::UniversalRendererData::*)(bool)>(&UnityEngine::Rendering::Universal::UniversalRendererData::set_shadowTransparentReceive)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::Universal::UniversalRendererData*), "set_shadowTransparentReceive", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::Universal::UniversalRendererData::get_renderingMode
// Il2CppName: get_renderingMode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Rendering::Universal::RenderingMode (UnityEngine::Rendering::Universal::UniversalRendererData::*)()>(&UnityEngine::Rendering::Universal::UniversalRendererData::get_renderingMode)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::Universal::UniversalRendererData*), "get_renderingMode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::Universal::UniversalRendererData::set_renderingMode
// Il2CppName: set_renderingMode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Rendering::Universal::UniversalRendererData::*)(::UnityEngine::Rendering::Universal::RenderingMode)>(&UnityEngine::Rendering::Universal::UniversalRendererData::set_renderingMode)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering.Universal", "RenderingMode")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::Universal::UniversalRendererData*), "set_renderingMode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::Universal::UniversalRendererData::get_depthPrimingMode
// Il2CppName: get_depthPrimingMode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Rendering::Universal::DepthPrimingMode (UnityEngine::Rendering::Universal::UniversalRendererData::*)()>(&UnityEngine::Rendering::Universal::UniversalRendererData::get_depthPrimingMode)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::Universal::UniversalRendererData*), "get_depthPrimingMode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::Universal::UniversalRendererData::set_depthPrimingMode
// Il2CppName: set_depthPrimingMode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Rendering::Universal::UniversalRendererData::*)(::UnityEngine::Rendering::Universal::DepthPrimingMode)>(&UnityEngine::Rendering::Universal::UniversalRendererData::set_depthPrimingMode)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering.Universal", "DepthPrimingMode")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::Universal::UniversalRendererData*), "set_depthPrimingMode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::Universal::UniversalRendererData::get_copyDepthMode
// Il2CppName: get_copyDepthMode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Rendering::Universal::CopyDepthMode (UnityEngine::Rendering::Universal::UniversalRendererData::*)()>(&UnityEngine::Rendering::Universal::UniversalRendererData::get_copyDepthMode)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::Universal::UniversalRendererData*), "get_copyDepthMode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::Universal::UniversalRendererData::set_copyDepthMode
// Il2CppName: set_copyDepthMode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Rendering::Universal::UniversalRendererData::*)(::UnityEngine::Rendering::Universal::CopyDepthMode)>(&UnityEngine::Rendering::Universal::UniversalRendererData::set_copyDepthMode)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering.Universal", "CopyDepthMode")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::Universal::UniversalRendererData*), "set_copyDepthMode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::Universal::UniversalRendererData::get_accurateGbufferNormals
// Il2CppName: get_accurateGbufferNormals
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::Rendering::Universal::UniversalRendererData::*)()>(&UnityEngine::Rendering::Universal::UniversalRendererData::get_accurateGbufferNormals)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::Universal::UniversalRendererData*), "get_accurateGbufferNormals", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::Universal::UniversalRendererData::set_accurateGbufferNormals
// Il2CppName: set_accurateGbufferNormals
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Rendering::Universal::UniversalRendererData::*)(bool)>(&UnityEngine::Rendering::Universal::UniversalRendererData::set_accurateGbufferNormals)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::Universal::UniversalRendererData*), "set_accurateGbufferNormals", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::Universal::UniversalRendererData::get_intermediateTextureMode
// Il2CppName: get_intermediateTextureMode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Rendering::Universal::IntermediateTextureMode (UnityEngine::Rendering::Universal::UniversalRendererData::*)()>(&UnityEngine::Rendering::Universal::UniversalRendererData::get_intermediateTextureMode)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::Universal::UniversalRendererData*), "get_intermediateTextureMode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::Universal::UniversalRendererData::set_intermediateTextureMode
// Il2CppName: set_intermediateTextureMode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Rendering::Universal::UniversalRendererData::*)(::UnityEngine::Rendering::Universal::IntermediateTextureMode)>(&UnityEngine::Rendering::Universal::UniversalRendererData::set_intermediateTextureMode)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering.Universal", "IntermediateTextureMode")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::Universal::UniversalRendererData*), "set_intermediateTextureMode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::Universal::UniversalRendererData::ReloadAllNullProperties
// Il2CppName: ReloadAllNullProperties
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Rendering::Universal::UniversalRendererData::*)()>(&UnityEngine::Rendering::Universal::UniversalRendererData::ReloadAllNullProperties)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::Universal::UniversalRendererData*), "ReloadAllNullProperties", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::Universal::UniversalRendererData::UnityEngine_ISerializationCallbackReceiver_OnBeforeSerialize
// Il2CppName: UnityEngine.ISerializationCallbackReceiver.OnBeforeSerialize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Rendering::Universal::UniversalRendererData::*)()>(&UnityEngine::Rendering::Universal::UniversalRendererData::UnityEngine_ISerializationCallbackReceiver_OnBeforeSerialize)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::Universal::UniversalRendererData*), "UnityEngine.ISerializationCallbackReceiver.OnBeforeSerialize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::Universal::UniversalRendererData::UnityEngine_ISerializationCallbackReceiver_OnAfterDeserialize
// Il2CppName: UnityEngine.ISerializationCallbackReceiver.OnAfterDeserialize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Rendering::Universal::UniversalRendererData::*)()>(&UnityEngine::Rendering::Universal::UniversalRendererData::UnityEngine_ISerializationCallbackReceiver_OnAfterDeserialize)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::Universal::UniversalRendererData*), "UnityEngine.ISerializationCallbackReceiver.OnAfterDeserialize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::Universal::UniversalRendererData::Create
// Il2CppName: Create
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Rendering::Universal::ScriptableRenderer* (UnityEngine::Rendering::Universal::UniversalRendererData::*)()>(&UnityEngine::Rendering::Universal::UniversalRendererData::Create)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::Universal::UniversalRendererData*), "Create", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::Universal::UniversalRendererData::OnEnable
// Il2CppName: OnEnable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Rendering::Universal::UniversalRendererData::*)()>(&UnityEngine::Rendering::Universal::UniversalRendererData::OnEnable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::Universal::UniversalRendererData*), "OnEnable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::Universal::UniversalRendererData::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
