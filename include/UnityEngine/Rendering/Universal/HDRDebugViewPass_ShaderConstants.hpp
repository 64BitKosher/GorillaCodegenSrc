// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.Rendering.Universal.HDRDebugViewPass
#include "UnityEngine/Rendering/Universal/HDRDebugViewPass.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::Rendering::Universal::HDRDebugViewPass::ShaderConstants);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::Rendering::Universal::HDRDebugViewPass::ShaderConstants*, "UnityEngine.Rendering.Universal", "HDRDebugViewPass/ShaderConstants");
// Type namespace: UnityEngine.Rendering.Universal
namespace UnityEngine::Rendering::Universal {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.Rendering.Universal.HDRDebugViewPass/ShaderConstants
  // [TokenAttribute] Offset: FFFFFFFF
  class HDRDebugViewPass::ShaderConstants : public ::Il2CppObject {
    public:
    // Get static field: static public readonly System.Int32 _DebugHDRModeId
    static int _get__DebugHDRModeId();
    // Set static field: static public readonly System.Int32 _DebugHDRModeId
    static void _set__DebugHDRModeId(int value);
    // Get static field: static public readonly System.Int32 _HDRDebugParamsId
    static int _get__HDRDebugParamsId();
    // Set static field: static public readonly System.Int32 _HDRDebugParamsId
    static void _set__HDRDebugParamsId(int value);
    // Get static field: static public readonly System.Int32 _SourceTextureId
    static int _get__SourceTextureId();
    // Set static field: static public readonly System.Int32 _SourceTextureId
    static void _set__SourceTextureId(int value);
    // Get static field: static public readonly System.Int32 _xyTextureId
    static int _get__xyTextureId();
    // Set static field: static public readonly System.Int32 _xyTextureId
    static void _set__xyTextureId(int value);
    // Get static field: static public readonly System.Int32 _SizeOfHDRXYMapping
    static int _get__SizeOfHDRXYMapping();
    // Set static field: static public readonly System.Int32 _SizeOfHDRXYMapping
    static void _set__SizeOfHDRXYMapping(int value);
    // Get static field: static public readonly System.Int32 _CIExyUAVIndex
    static int _get__CIExyUAVIndex();
    // Set static field: static public readonly System.Int32 _CIExyUAVIndex
    static void _set__CIExyUAVIndex(int value);
    // public System.Void .ctor()
    // Offset: 0x52C6030
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static HDRDebugViewPass::ShaderConstants* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::Universal::HDRDebugViewPass::ShaderConstants::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<HDRDebugViewPass::ShaderConstants*, creationType>()));
    }
    // static private System.Void .cctor()
    // Offset: 0x52C6038
    static void _cctor();
  }; // UnityEngine.Rendering.Universal.HDRDebugViewPass/ShaderConstants
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::Rendering::Universal::HDRDebugViewPass::ShaderConstants::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::Rendering::Universal::HDRDebugViewPass::ShaderConstants::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&UnityEngine::Rendering::Universal::HDRDebugViewPass::ShaderConstants::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::Universal::HDRDebugViewPass::ShaderConstants*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
