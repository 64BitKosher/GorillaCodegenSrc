// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::Rendering::Universal
namespace UnityEngine::Rendering::Universal {
  // Forward declaring type: UniversalRendererData
  class UniversalRendererData;
  // Forward declaring type: UniversalRenderer
  class UniversalRenderer;
  // Forward declaring type: ScriptableRendererFeature
  class ScriptableRendererFeature;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Forward declaring namespace: UnityEngine::Rendering
namespace UnityEngine::Rendering {
  // Forward declaring type: CommandBuffer
  class CommandBuffer;
}
// Forward declaring namespace: UnityEngine::Experimental::Rendering
namespace UnityEngine::Experimental::Rendering {
  // Forward declaring type: GraphicsFormat
  struct GraphicsFormat;
}
// Completed forward declares
// Type namespace: UnityEngine.Rendering.Universal
namespace UnityEngine::Rendering::Universal {
  // Forward declaring type: RenderingLayerUtils
  class RenderingLayerUtils;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::Rendering::Universal::RenderingLayerUtils);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::Rendering::Universal::RenderingLayerUtils*, "UnityEngine.Rendering.Universal", "RenderingLayerUtils");
// Type namespace: UnityEngine.Rendering.Universal
namespace UnityEngine::Rendering::Universal {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.Rendering.Universal.RenderingLayerUtils
  // [TokenAttribute] Offset: FFFFFFFF
  class RenderingLayerUtils : public ::Il2CppObject {
    public:
    // Nested type: ::UnityEngine::Rendering::Universal::RenderingLayerUtils::Event
    struct Event;
    // Nested type: ::UnityEngine::Rendering::Universal::RenderingLayerUtils::MaskSize
    struct MaskSize;
    // static public System.Void CombineRendererEvents(System.Boolean isDeferred, System.Int32 msaaSampleCount, UnityEngine.Rendering.Universal.RenderingLayerUtils/Event rendererEvent, ref UnityEngine.Rendering.Universal.RenderingLayerUtils/Event combinedEvent)
    // Offset: 0x52D834C
    static void CombineRendererEvents(bool isDeferred, int msaaSampleCount, ::UnityEngine::Rendering::Universal::RenderingLayerUtils::Event rendererEvent, ByRef<::UnityEngine::Rendering::Universal::RenderingLayerUtils::Event> combinedEvent);
    // static public System.Boolean RequireRenderingLayers(UnityEngine.Rendering.Universal.UniversalRendererData universalRendererData, System.Int32 msaaSampleCount, out UnityEngine.Rendering.Universal.RenderingLayerUtils/Event combinedEvent, out UnityEngine.Rendering.Universal.RenderingLayerUtils/MaskSize combinedMaskSize)
    // Offset: 0x52D8380
    static bool RequireRenderingLayers(::UnityEngine::Rendering::Universal::UniversalRendererData* universalRendererData, int msaaSampleCount, ByRef<::UnityEngine::Rendering::Universal::RenderingLayerUtils::Event> combinedEvent, ByRef<::UnityEngine::Rendering::Universal::RenderingLayerUtils::MaskSize> combinedMaskSize);
    // static public System.Boolean RequireRenderingLayers(UnityEngine.Rendering.Universal.UniversalRenderer universalRenderer, System.Collections.Generic.List`1<UnityEngine.Rendering.Universal.ScriptableRendererFeature> rendererFeatures, System.Int32 msaaSampleCount, out UnityEngine.Rendering.Universal.RenderingLayerUtils/Event combinedEvent, out UnityEngine.Rendering.Universal.RenderingLayerUtils/MaskSize combinedMaskSize)
    // Offset: 0x52D86A0
    static bool RequireRenderingLayers(::UnityEngine::Rendering::Universal::UniversalRenderer* universalRenderer, ::System::Collections::Generic::List_1<::UnityEngine::Rendering::Universal::ScriptableRendererFeature*>* rendererFeatures, int msaaSampleCount, ByRef<::UnityEngine::Rendering::Universal::RenderingLayerUtils::Event> combinedEvent, ByRef<::UnityEngine::Rendering::Universal::RenderingLayerUtils::MaskSize> combinedMaskSize);
    // static public System.Void SetupProperties(UnityEngine.Rendering.CommandBuffer cmd, UnityEngine.Rendering.Universal.RenderingLayerUtils/MaskSize maskSize)
    // Offset: 0x52D8980
    static void SetupProperties(::UnityEngine::Rendering::CommandBuffer* cmd, ::UnityEngine::Rendering::Universal::RenderingLayerUtils::MaskSize maskSize);
    // static public UnityEngine.Experimental.Rendering.GraphicsFormat GetFormat(UnityEngine.Rendering.Universal.RenderingLayerUtils/MaskSize maskSize)
    // Offset: 0x52D8A94
    static ::UnityEngine::Experimental::Rendering::GraphicsFormat GetFormat(::UnityEngine::Rendering::Universal::RenderingLayerUtils::MaskSize maskSize);
    // static public System.UInt32 ToValidRenderingLayers(System.UInt32 renderingLayers)
    // Offset: 0x52D8AE8
    static uint ToValidRenderingLayers(uint renderingLayers);
    // static private UnityEngine.Rendering.Universal.RenderingLayerUtils/MaskSize GetMaskSize(System.Int32 bits)
    // Offset: 0x52D866C
    static ::UnityEngine::Rendering::Universal::RenderingLayerUtils::MaskSize GetMaskSize(int bits);
    // static private System.Int32 GetBits(UnityEngine.Rendering.Universal.RenderingLayerUtils/MaskSize maskSize)
    // Offset: 0x52D8A48
    static int GetBits(::UnityEngine::Rendering::Universal::RenderingLayerUtils::MaskSize maskSize);
    // static private UnityEngine.Rendering.Universal.RenderingLayerUtils/Event Combine(UnityEngine.Rendering.Universal.RenderingLayerUtils/Event a, UnityEngine.Rendering.Universal.RenderingLayerUtils/Event b)
    // Offset: 0x52D8374
    static ::UnityEngine::Rendering::Universal::RenderingLayerUtils::Event Combine(::UnityEngine::Rendering::Universal::RenderingLayerUtils::Event a, ::UnityEngine::Rendering::Universal::RenderingLayerUtils::Event b);
    // static private UnityEngine.Rendering.Universal.RenderingLayerUtils/MaskSize Combine(UnityEngine.Rendering.Universal.RenderingLayerUtils/MaskSize a, UnityEngine.Rendering.Universal.RenderingLayerUtils/MaskSize b)
    // Offset: 0x52D8660
    static ::UnityEngine::Rendering::Universal::RenderingLayerUtils::MaskSize Combine(::UnityEngine::Rendering::Universal::RenderingLayerUtils::MaskSize a, ::UnityEngine::Rendering::Universal::RenderingLayerUtils::MaskSize b);
  }; // UnityEngine.Rendering.Universal.RenderingLayerUtils
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::Rendering::Universal::RenderingLayerUtils::CombineRendererEvents
// Il2CppName: CombineRendererEvents
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(bool, int, ::UnityEngine::Rendering::Universal::RenderingLayerUtils::Event, ByRef<::UnityEngine::Rendering::Universal::RenderingLayerUtils::Event>)>(&UnityEngine::Rendering::Universal::RenderingLayerUtils::CombineRendererEvents)> {
  static const MethodInfo* get() {
    static auto* isDeferred = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* msaaSampleCount = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* rendererEvent = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering.Universal", "RenderingLayerUtils/Event")->byval_arg;
    static auto* combinedEvent = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering.Universal", "RenderingLayerUtils/Event")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::Universal::RenderingLayerUtils*), "CombineRendererEvents", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{isDeferred, msaaSampleCount, rendererEvent, combinedEvent});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::Universal::RenderingLayerUtils::RequireRenderingLayers
// Il2CppName: RequireRenderingLayers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::UnityEngine::Rendering::Universal::UniversalRendererData*, int, ByRef<::UnityEngine::Rendering::Universal::RenderingLayerUtils::Event>, ByRef<::UnityEngine::Rendering::Universal::RenderingLayerUtils::MaskSize>)>(&UnityEngine::Rendering::Universal::RenderingLayerUtils::RequireRenderingLayers)> {
  static const MethodInfo* get() {
    static auto* universalRendererData = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering.Universal", "UniversalRendererData")->byval_arg;
    static auto* msaaSampleCount = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* combinedEvent = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering.Universal", "RenderingLayerUtils/Event")->this_arg;
    static auto* combinedMaskSize = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering.Universal", "RenderingLayerUtils/MaskSize")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::Universal::RenderingLayerUtils*), "RequireRenderingLayers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{universalRendererData, msaaSampleCount, combinedEvent, combinedMaskSize});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::Universal::RenderingLayerUtils::RequireRenderingLayers
// Il2CppName: RequireRenderingLayers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::UnityEngine::Rendering::Universal::UniversalRenderer*, ::System::Collections::Generic::List_1<::UnityEngine::Rendering::Universal::ScriptableRendererFeature*>*, int, ByRef<::UnityEngine::Rendering::Universal::RenderingLayerUtils::Event>, ByRef<::UnityEngine::Rendering::Universal::RenderingLayerUtils::MaskSize>)>(&UnityEngine::Rendering::Universal::RenderingLayerUtils::RequireRenderingLayers)> {
  static const MethodInfo* get() {
    static auto* universalRenderer = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering.Universal", "UniversalRenderer")->byval_arg;
    static auto* rendererFeatures = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.Rendering.Universal", "ScriptableRendererFeature")})->byval_arg;
    static auto* msaaSampleCount = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* combinedEvent = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering.Universal", "RenderingLayerUtils/Event")->this_arg;
    static auto* combinedMaskSize = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering.Universal", "RenderingLayerUtils/MaskSize")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::Universal::RenderingLayerUtils*), "RequireRenderingLayers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{universalRenderer, rendererFeatures, msaaSampleCount, combinedEvent, combinedMaskSize});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::Universal::RenderingLayerUtils::SetupProperties
// Il2CppName: SetupProperties
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::Rendering::CommandBuffer*, ::UnityEngine::Rendering::Universal::RenderingLayerUtils::MaskSize)>(&UnityEngine::Rendering::Universal::RenderingLayerUtils::SetupProperties)> {
  static const MethodInfo* get() {
    static auto* cmd = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "CommandBuffer")->byval_arg;
    static auto* maskSize = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering.Universal", "RenderingLayerUtils/MaskSize")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::Universal::RenderingLayerUtils*), "SetupProperties", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{cmd, maskSize});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::Universal::RenderingLayerUtils::GetFormat
// Il2CppName: GetFormat
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Experimental::Rendering::GraphicsFormat (*)(::UnityEngine::Rendering::Universal::RenderingLayerUtils::MaskSize)>(&UnityEngine::Rendering::Universal::RenderingLayerUtils::GetFormat)> {
  static const MethodInfo* get() {
    static auto* maskSize = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering.Universal", "RenderingLayerUtils/MaskSize")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::Universal::RenderingLayerUtils*), "GetFormat", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{maskSize});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::Universal::RenderingLayerUtils::ToValidRenderingLayers
// Il2CppName: ToValidRenderingLayers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (*)(uint)>(&UnityEngine::Rendering::Universal::RenderingLayerUtils::ToValidRenderingLayers)> {
  static const MethodInfo* get() {
    static auto* renderingLayers = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::Universal::RenderingLayerUtils*), "ToValidRenderingLayers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{renderingLayers});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::Universal::RenderingLayerUtils::GetMaskSize
// Il2CppName: GetMaskSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Rendering::Universal::RenderingLayerUtils::MaskSize (*)(int)>(&UnityEngine::Rendering::Universal::RenderingLayerUtils::GetMaskSize)> {
  static const MethodInfo* get() {
    static auto* bits = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::Universal::RenderingLayerUtils*), "GetMaskSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{bits});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::Universal::RenderingLayerUtils::GetBits
// Il2CppName: GetBits
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::UnityEngine::Rendering::Universal::RenderingLayerUtils::MaskSize)>(&UnityEngine::Rendering::Universal::RenderingLayerUtils::GetBits)> {
  static const MethodInfo* get() {
    static auto* maskSize = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering.Universal", "RenderingLayerUtils/MaskSize")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::Universal::RenderingLayerUtils*), "GetBits", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{maskSize});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::Universal::RenderingLayerUtils::Combine
// Il2CppName: Combine
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Rendering::Universal::RenderingLayerUtils::Event (*)(::UnityEngine::Rendering::Universal::RenderingLayerUtils::Event, ::UnityEngine::Rendering::Universal::RenderingLayerUtils::Event)>(&UnityEngine::Rendering::Universal::RenderingLayerUtils::Combine)> {
  static const MethodInfo* get() {
    static auto* a = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering.Universal", "RenderingLayerUtils/Event")->byval_arg;
    static auto* b = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering.Universal", "RenderingLayerUtils/Event")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::Universal::RenderingLayerUtils*), "Combine", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{a, b});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::Universal::RenderingLayerUtils::Combine
// Il2CppName: Combine
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Rendering::Universal::RenderingLayerUtils::MaskSize (*)(::UnityEngine::Rendering::Universal::RenderingLayerUtils::MaskSize, ::UnityEngine::Rendering::Universal::RenderingLayerUtils::MaskSize)>(&UnityEngine::Rendering::Universal::RenderingLayerUtils::Combine)> {
  static const MethodInfo* get() {
    static auto* a = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering.Universal", "RenderingLayerUtils/MaskSize")->byval_arg;
    static auto* b = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering.Universal", "RenderingLayerUtils/MaskSize")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::Universal::RenderingLayerUtils*), "Combine", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{a, b});
  }
};
