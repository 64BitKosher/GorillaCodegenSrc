// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Enum
#include "System/Enum.hpp"
// Completed includes
// Type namespace: UnityEngine.Rendering.Universal
namespace UnityEngine::Rendering::Universal {
  // Forward declaring type: LightCookieResolution
  struct LightCookieResolution;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::Rendering::Universal::LightCookieResolution, "UnityEngine.Rendering.Universal", "LightCookieResolution");
// Type namespace: UnityEngine.Rendering.Universal
namespace UnityEngine::Rendering::Universal {
  // Size: 0x4
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.Rendering.Universal.LightCookieResolution
  // [TokenAttribute] Offset: FFFFFFFF
  struct LightCookieResolution/*, public ::System::Enum*/ {
    public:
    public:
    // public System.Int32 value__
    // Size: 0x4
    // Offset: 0x0
    int value;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Creating value type constructor for type: LightCookieResolution
    constexpr LightCookieResolution(int value_ = {}) noexcept : value{value_} {}
    // Creating interface conversion operator: operator ::System::Enum
    operator ::System::Enum() noexcept {
      return *reinterpret_cast<::System::Enum*>(this);
    }
    // Creating conversion operator: operator int
    constexpr operator int() const noexcept {
      return value;
    }
    // static field const value: static public UnityEngine.Rendering.Universal.LightCookieResolution _256
    static constexpr const int _256 = 256;
    // Get static field: static public UnityEngine.Rendering.Universal.LightCookieResolution _256
    static ::UnityEngine::Rendering::Universal::LightCookieResolution _get__256();
    // Set static field: static public UnityEngine.Rendering.Universal.LightCookieResolution _256
    static void _set__256(::UnityEngine::Rendering::Universal::LightCookieResolution value);
    // static field const value: static public UnityEngine.Rendering.Universal.LightCookieResolution _512
    static constexpr const int _512 = 512;
    // Get static field: static public UnityEngine.Rendering.Universal.LightCookieResolution _512
    static ::UnityEngine::Rendering::Universal::LightCookieResolution _get__512();
    // Set static field: static public UnityEngine.Rendering.Universal.LightCookieResolution _512
    static void _set__512(::UnityEngine::Rendering::Universal::LightCookieResolution value);
    // static field const value: static public UnityEngine.Rendering.Universal.LightCookieResolution _1024
    static constexpr const int _1024 = 1024;
    // Get static field: static public UnityEngine.Rendering.Universal.LightCookieResolution _1024
    static ::UnityEngine::Rendering::Universal::LightCookieResolution _get__1024();
    // Set static field: static public UnityEngine.Rendering.Universal.LightCookieResolution _1024
    static void _set__1024(::UnityEngine::Rendering::Universal::LightCookieResolution value);
    // static field const value: static public UnityEngine.Rendering.Universal.LightCookieResolution _2048
    static constexpr const int _2048 = 2048;
    // Get static field: static public UnityEngine.Rendering.Universal.LightCookieResolution _2048
    static ::UnityEngine::Rendering::Universal::LightCookieResolution _get__2048();
    // Set static field: static public UnityEngine.Rendering.Universal.LightCookieResolution _2048
    static void _set__2048(::UnityEngine::Rendering::Universal::LightCookieResolution value);
    // static field const value: static public UnityEngine.Rendering.Universal.LightCookieResolution _4096
    static constexpr const int _4096 = 4096;
    // Get static field: static public UnityEngine.Rendering.Universal.LightCookieResolution _4096
    static ::UnityEngine::Rendering::Universal::LightCookieResolution _get__4096();
    // Set static field: static public UnityEngine.Rendering.Universal.LightCookieResolution _4096
    static void _set__4096(::UnityEngine::Rendering::Universal::LightCookieResolution value);
    // Get instance field reference: public System.Int32 value__
    [[deprecated("Use field access instead!")]] int& dyn_value__();
  }; // UnityEngine.Rendering.Universal.LightCookieResolution
  #pragma pack(pop)
  static check_size<sizeof(LightCookieResolution), 0 + sizeof(int)> __UnityEngine_Rendering_Universal_LightCookieResolutionSizeCheck;
  static_assert(sizeof(LightCookieResolution) == 0x4);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
