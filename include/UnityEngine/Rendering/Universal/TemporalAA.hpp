// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::Rendering::Universal
namespace UnityEngine::Rendering::Universal {
  // Forward declaring type: CameraData
  struct CameraData;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Matrix4x4
  struct Matrix4x4;
  // Forward declaring type: Material
  class Material;
  // Forward declaring type: RenderTexture
  class RenderTexture;
}
// Forward declaring namespace: UnityEngine::Rendering
namespace UnityEngine::Rendering {
  // Forward declaring type: CommandBuffer
  class CommandBuffer;
  // Forward declaring type: RTHandle
  class RTHandle;
}
// Forward declaring namespace: UnityEngine::Experimental::Rendering::RenderGraphModule
namespace UnityEngine::Experimental::Rendering::RenderGraphModule {
  // Forward declaring type: RenderGraph
  class RenderGraph;
  // Forward declaring type: TextureHandle
  struct TextureHandle;
}
// Completed forward declares
// Type namespace: UnityEngine.Rendering.Universal
namespace UnityEngine::Rendering::Universal {
  // Forward declaring type: TemporalAA
  class TemporalAA;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::Rendering::Universal::TemporalAA);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::Rendering::Universal::TemporalAA*, "UnityEngine.Rendering.Universal", "TemporalAA");
// Type namespace: UnityEngine.Rendering.Universal
namespace UnityEngine::Rendering::Universal {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.Rendering.Universal.TemporalAA
  // [TokenAttribute] Offset: FFFFFFFF
  class TemporalAA : public ::Il2CppObject {
    public:
    // Nested type: ::UnityEngine::Rendering::Universal::TemporalAA::ShaderConstants
    class ShaderConstants;
    // Nested type: ::UnityEngine::Rendering::Universal::TemporalAA::Settings
    struct Settings;
    // Nested type: ::UnityEngine::Rendering::Universal::TemporalAA::TaaPassData
    class TaaPassData;
    // Nested type: ::UnityEngine::Rendering::Universal::TemporalAA::$$c
    class $$c;
    // Nested type: ::UnityEngine::Rendering::Universal::TemporalAA::$$c__DisplayClass10_0
    class $$c__DisplayClass10_0;
    // Get static field: static private readonly UnityEngine.Vector2[] taaFilterOffsets
    static ::ArrayW<::UnityEngine::Vector2> _get_taaFilterOffsets();
    // Set static field: static private readonly UnityEngine.Vector2[] taaFilterOffsets
    static void _set_taaFilterOffsets(::ArrayW<::UnityEngine::Vector2> value);
    // Get static field: static private readonly System.Single[] taaFilterWeights
    static ::ArrayW<float> _get_taaFilterWeights();
    // Set static field: static private readonly System.Single[] taaFilterWeights
    static void _set_taaFilterWeights(::ArrayW<float> value);
    // static UnityEngine.Matrix4x4 CalculateJitterMatrix(ref UnityEngine.Rendering.Universal.CameraData cameraData)
    // Offset: 0x52DEC20
    static ::UnityEngine::Matrix4x4 CalculateJitterMatrix(ByRef<::UnityEngine::Rendering::Universal::CameraData> cameraData);
    // static UnityEngine.Vector2 CalculateJitter(System.Int32 frameIndex)
    // Offset: 0x52DED50
    static ::UnityEngine::Vector2 CalculateJitter(int frameIndex);
    // static System.Single[] CalculateFilterWeights(System.Single jitterScale)
    // Offset: 0x52DED9C
    static ::ArrayW<float> CalculateFilterWeights(float jitterScale);
    // static System.String ValidateAndWarn(ref UnityEngine.Rendering.Universal.CameraData cameraData)
    // Offset: 0x52DEF00
    static ::StringW ValidateAndWarn(ByRef<::UnityEngine::Rendering::Universal::CameraData> cameraData);
    // static System.Void ExecutePass(UnityEngine.Rendering.CommandBuffer cmd, UnityEngine.Material taaMaterial, ref UnityEngine.Rendering.Universal.CameraData cameraData, UnityEngine.Rendering.RTHandle source, UnityEngine.Rendering.RTHandle destination, UnityEngine.RenderTexture motionVectors)
    // Offset: 0x52DF0E4
    static void ExecutePass(::UnityEngine::Rendering::CommandBuffer* cmd, ::UnityEngine::Material* taaMaterial, ByRef<::UnityEngine::Rendering::Universal::CameraData> cameraData, ::UnityEngine::Rendering::RTHandle* source, ::UnityEngine::Rendering::RTHandle* destination, ::UnityEngine::RenderTexture* motionVectors);
    // static System.Void Render(UnityEngine.Experimental.Rendering.RenderGraphModule.RenderGraph renderGraph, UnityEngine.Material taaMaterial, ref UnityEngine.Rendering.Universal.CameraData cameraData, ref UnityEngine.Experimental.Rendering.RenderGraphModule.TextureHandle srcColor, ref UnityEngine.Experimental.Rendering.RenderGraphModule.TextureHandle srcDepth, ref UnityEngine.Experimental.Rendering.RenderGraphModule.TextureHandle srcMotionVectors, ref UnityEngine.Experimental.Rendering.RenderGraphModule.TextureHandle dstColor)
    // Offset: 0x52DF4BC
    static void Render(::UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraph* renderGraph, ::UnityEngine::Material* taaMaterial, ByRef<::UnityEngine::Rendering::Universal::CameraData> cameraData, ByRef<::UnityEngine::Experimental::Rendering::RenderGraphModule::TextureHandle> srcColor, ByRef<::UnityEngine::Experimental::Rendering::RenderGraphModule::TextureHandle> srcDepth, ByRef<::UnityEngine::Experimental::Rendering::RenderGraphModule::TextureHandle> srcMotionVectors, ByRef<::UnityEngine::Experimental::Rendering::RenderGraphModule::TextureHandle> dstColor);
    // static private System.Void .cctor()
    // Offset: 0x52DFB24
    static void _cctor();
  }; // UnityEngine.Rendering.Universal.TemporalAA
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::Rendering::Universal::TemporalAA::CalculateJitterMatrix
// Il2CppName: CalculateJitterMatrix
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Matrix4x4 (*)(ByRef<::UnityEngine::Rendering::Universal::CameraData>)>(&UnityEngine::Rendering::Universal::TemporalAA::CalculateJitterMatrix)> {
  static const MethodInfo* get() {
    static auto* cameraData = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering.Universal", "CameraData")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::Universal::TemporalAA*), "CalculateJitterMatrix", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{cameraData});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::Universal::TemporalAA::CalculateJitter
// Il2CppName: CalculateJitter
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector2 (*)(int)>(&UnityEngine::Rendering::Universal::TemporalAA::CalculateJitter)> {
  static const MethodInfo* get() {
    static auto* frameIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::Universal::TemporalAA*), "CalculateJitter", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{frameIndex});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::Universal::TemporalAA::CalculateFilterWeights
// Il2CppName: CalculateFilterWeights
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<float> (*)(float)>(&UnityEngine::Rendering::Universal::TemporalAA::CalculateFilterWeights)> {
  static const MethodInfo* get() {
    static auto* jitterScale = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::Universal::TemporalAA*), "CalculateFilterWeights", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{jitterScale});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::Universal::TemporalAA::ValidateAndWarn
// Il2CppName: ValidateAndWarn
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(ByRef<::UnityEngine::Rendering::Universal::CameraData>)>(&UnityEngine::Rendering::Universal::TemporalAA::ValidateAndWarn)> {
  static const MethodInfo* get() {
    static auto* cameraData = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering.Universal", "CameraData")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::Universal::TemporalAA*), "ValidateAndWarn", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{cameraData});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::Universal::TemporalAA::ExecutePass
// Il2CppName: ExecutePass
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::Rendering::CommandBuffer*, ::UnityEngine::Material*, ByRef<::UnityEngine::Rendering::Universal::CameraData>, ::UnityEngine::Rendering::RTHandle*, ::UnityEngine::Rendering::RTHandle*, ::UnityEngine::RenderTexture*)>(&UnityEngine::Rendering::Universal::TemporalAA::ExecutePass)> {
  static const MethodInfo* get() {
    static auto* cmd = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "CommandBuffer")->byval_arg;
    static auto* taaMaterial = &::il2cpp_utils::GetClassFromName("UnityEngine", "Material")->byval_arg;
    static auto* cameraData = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering.Universal", "CameraData")->this_arg;
    static auto* source = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "RTHandle")->byval_arg;
    static auto* destination = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "RTHandle")->byval_arg;
    static auto* motionVectors = &::il2cpp_utils::GetClassFromName("UnityEngine", "RenderTexture")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::Universal::TemporalAA*), "ExecutePass", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{cmd, taaMaterial, cameraData, source, destination, motionVectors});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::Universal::TemporalAA::Render
// Il2CppName: Render
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraph*, ::UnityEngine::Material*, ByRef<::UnityEngine::Rendering::Universal::CameraData>, ByRef<::UnityEngine::Experimental::Rendering::RenderGraphModule::TextureHandle>, ByRef<::UnityEngine::Experimental::Rendering::RenderGraphModule::TextureHandle>, ByRef<::UnityEngine::Experimental::Rendering::RenderGraphModule::TextureHandle>, ByRef<::UnityEngine::Experimental::Rendering::RenderGraphModule::TextureHandle>)>(&UnityEngine::Rendering::Universal::TemporalAA::Render)> {
  static const MethodInfo* get() {
    static auto* renderGraph = &::il2cpp_utils::GetClassFromName("UnityEngine.Experimental.Rendering.RenderGraphModule", "RenderGraph")->byval_arg;
    static auto* taaMaterial = &::il2cpp_utils::GetClassFromName("UnityEngine", "Material")->byval_arg;
    static auto* cameraData = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering.Universal", "CameraData")->this_arg;
    static auto* srcColor = &::il2cpp_utils::GetClassFromName("UnityEngine.Experimental.Rendering.RenderGraphModule", "TextureHandle")->this_arg;
    static auto* srcDepth = &::il2cpp_utils::GetClassFromName("UnityEngine.Experimental.Rendering.RenderGraphModule", "TextureHandle")->this_arg;
    static auto* srcMotionVectors = &::il2cpp_utils::GetClassFromName("UnityEngine.Experimental.Rendering.RenderGraphModule", "TextureHandle")->this_arg;
    static auto* dstColor = &::il2cpp_utils::GetClassFromName("UnityEngine.Experimental.Rendering.RenderGraphModule", "TextureHandle")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::Universal::TemporalAA*), "Render", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{renderGraph, taaMaterial, cameraData, srcColor, srcDepth, srcMotionVectors, dstColor});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::Universal::TemporalAA::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&UnityEngine::Rendering::Universal::TemporalAA::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::Universal::TemporalAA*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
