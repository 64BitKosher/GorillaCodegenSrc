// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.Rendering.Universal.DebugDisplaySettingsRendering
#include "UnityEngine/Rendering/Universal/DebugDisplaySettingsRendering.hpp"
// Including type: UnityEngine.Rendering.DebugUI/Widget/NameAndTooltip
#include "UnityEngine/Rendering/DebugUI_Widget_NameAndTooltip.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: String
  class String;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::Rendering::Universal::DebugDisplaySettingsRendering::Strings);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::Rendering::Universal::DebugDisplaySettingsRendering::Strings*, "UnityEngine.Rendering.Universal", "DebugDisplaySettingsRendering/Strings");
// Type namespace: UnityEngine.Rendering.Universal
namespace UnityEngine::Rendering::Universal {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.Rendering.Universal.DebugDisplaySettingsRendering/Strings
  // [TokenAttribute] Offset: FFFFFFFF
  class DebugDisplaySettingsRendering::Strings : public ::Il2CppObject {
    public:
    // static field const value: static public System.String RangeValidationSettingsContainerName
    static constexpr const char* RangeValidationSettingsContainerName = "Pixel Range Settings";
    // Get static field: static public System.String RangeValidationSettingsContainerName
    static ::StringW _get_RangeValidationSettingsContainerName();
    // Set static field: static public System.String RangeValidationSettingsContainerName
    static void _set_RangeValidationSettingsContainerName(::StringW value);
    // Get static field: static public readonly UnityEngine.Rendering.DebugUI/Widget/NameAndTooltip MapOverlays
    static ::UnityEngine::Rendering::DebugUI::Widget::NameAndTooltip _get_MapOverlays();
    // Set static field: static public readonly UnityEngine.Rendering.DebugUI/Widget/NameAndTooltip MapOverlays
    static void _set_MapOverlays(::UnityEngine::Rendering::DebugUI::Widget::NameAndTooltip value);
    // Get static field: static public readonly UnityEngine.Rendering.DebugUI/Widget/NameAndTooltip MapSize
    static ::UnityEngine::Rendering::DebugUI::Widget::NameAndTooltip _get_MapSize();
    // Set static field: static public readonly UnityEngine.Rendering.DebugUI/Widget/NameAndTooltip MapSize
    static void _set_MapSize(::UnityEngine::Rendering::DebugUI::Widget::NameAndTooltip value);
    // Get static field: static public readonly UnityEngine.Rendering.DebugUI/Widget/NameAndTooltip AdditionalWireframeModes
    static ::UnityEngine::Rendering::DebugUI::Widget::NameAndTooltip _get_AdditionalWireframeModes();
    // Set static field: static public readonly UnityEngine.Rendering.DebugUI/Widget/NameAndTooltip AdditionalWireframeModes
    static void _set_AdditionalWireframeModes(::UnityEngine::Rendering::DebugUI::Widget::NameAndTooltip value);
    // Get static field: static public readonly UnityEngine.Rendering.DebugUI/Widget/NameAndTooltip WireframeNotSupportedWarning
    static ::UnityEngine::Rendering::DebugUI::Widget::NameAndTooltip _get_WireframeNotSupportedWarning();
    // Set static field: static public readonly UnityEngine.Rendering.DebugUI/Widget/NameAndTooltip WireframeNotSupportedWarning
    static void _set_WireframeNotSupportedWarning(::UnityEngine::Rendering::DebugUI::Widget::NameAndTooltip value);
    // Get static field: static public readonly UnityEngine.Rendering.DebugUI/Widget/NameAndTooltip OverdrawMode
    static ::UnityEngine::Rendering::DebugUI::Widget::NameAndTooltip _get_OverdrawMode();
    // Set static field: static public readonly UnityEngine.Rendering.DebugUI/Widget/NameAndTooltip OverdrawMode
    static void _set_OverdrawMode(::UnityEngine::Rendering::DebugUI::Widget::NameAndTooltip value);
    // Get static field: static public readonly UnityEngine.Rendering.DebugUI/Widget/NameAndTooltip MaxOverdrawCount
    static ::UnityEngine::Rendering::DebugUI::Widget::NameAndTooltip _get_MaxOverdrawCount();
    // Set static field: static public readonly UnityEngine.Rendering.DebugUI/Widget/NameAndTooltip MaxOverdrawCount
    static void _set_MaxOverdrawCount(::UnityEngine::Rendering::DebugUI::Widget::NameAndTooltip value);
    // Get static field: static public readonly UnityEngine.Rendering.DebugUI/Widget/NameAndTooltip PostProcessing
    static ::UnityEngine::Rendering::DebugUI::Widget::NameAndTooltip _get_PostProcessing();
    // Set static field: static public readonly UnityEngine.Rendering.DebugUI/Widget/NameAndTooltip PostProcessing
    static void _set_PostProcessing(::UnityEngine::Rendering::DebugUI::Widget::NameAndTooltip value);
    // Get static field: static public readonly UnityEngine.Rendering.DebugUI/Widget/NameAndTooltip MSAA
    static ::UnityEngine::Rendering::DebugUI::Widget::NameAndTooltip _get_MSAA();
    // Set static field: static public readonly UnityEngine.Rendering.DebugUI/Widget/NameAndTooltip MSAA
    static void _set_MSAA(::UnityEngine::Rendering::DebugUI::Widget::NameAndTooltip value);
    // Get static field: static public readonly UnityEngine.Rendering.DebugUI/Widget/NameAndTooltip HDR
    static ::UnityEngine::Rendering::DebugUI::Widget::NameAndTooltip _get_HDR();
    // Set static field: static public readonly UnityEngine.Rendering.DebugUI/Widget/NameAndTooltip HDR
    static void _set_HDR(::UnityEngine::Rendering::DebugUI::Widget::NameAndTooltip value);
    // Get static field: static public readonly UnityEngine.Rendering.DebugUI/Widget/NameAndTooltip TaaDebugMode
    static ::UnityEngine::Rendering::DebugUI::Widget::NameAndTooltip _get_TaaDebugMode();
    // Set static field: static public readonly UnityEngine.Rendering.DebugUI/Widget/NameAndTooltip TaaDebugMode
    static void _set_TaaDebugMode(::UnityEngine::Rendering::DebugUI::Widget::NameAndTooltip value);
    // Get static field: static public readonly UnityEngine.Rendering.DebugUI/Widget/NameAndTooltip PixelValidationMode
    static ::UnityEngine::Rendering::DebugUI::Widget::NameAndTooltip _get_PixelValidationMode();
    // Set static field: static public readonly UnityEngine.Rendering.DebugUI/Widget/NameAndTooltip PixelValidationMode
    static void _set_PixelValidationMode(::UnityEngine::Rendering::DebugUI::Widget::NameAndTooltip value);
    // Get static field: static public readonly UnityEngine.Rendering.DebugUI/Widget/NameAndTooltip Channels
    static ::UnityEngine::Rendering::DebugUI::Widget::NameAndTooltip _get_Channels();
    // Set static field: static public readonly UnityEngine.Rendering.DebugUI/Widget/NameAndTooltip Channels
    static void _set_Channels(::UnityEngine::Rendering::DebugUI::Widget::NameAndTooltip value);
    // Get static field: static public readonly UnityEngine.Rendering.DebugUI/Widget/NameAndTooltip ValueRangeMin
    static ::UnityEngine::Rendering::DebugUI::Widget::NameAndTooltip _get_ValueRangeMin();
    // Set static field: static public readonly UnityEngine.Rendering.DebugUI/Widget/NameAndTooltip ValueRangeMin
    static void _set_ValueRangeMin(::UnityEngine::Rendering::DebugUI::Widget::NameAndTooltip value);
    // Get static field: static public readonly UnityEngine.Rendering.DebugUI/Widget/NameAndTooltip ValueRangeMax
    static ::UnityEngine::Rendering::DebugUI::Widget::NameAndTooltip _get_ValueRangeMax();
    // Set static field: static public readonly UnityEngine.Rendering.DebugUI/Widget/NameAndTooltip ValueRangeMax
    static void _set_ValueRangeMax(::UnityEngine::Rendering::DebugUI::Widget::NameAndTooltip value);
    // static private System.Void .cctor()
    // Offset: 0x52994EC
    static void _cctor();
  }; // UnityEngine.Rendering.Universal.DebugDisplaySettingsRendering/Strings
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::Rendering::Universal::DebugDisplaySettingsRendering::Strings::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&UnityEngine::Rendering::Universal::DebugDisplaySettingsRendering::Strings::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::Universal::DebugDisplaySettingsRendering::Strings*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
