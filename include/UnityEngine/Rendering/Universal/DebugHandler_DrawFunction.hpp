// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.Rendering.Universal.DebugHandler
#include "UnityEngine/Rendering/Universal/DebugHandler.hpp"
// Including type: System.MulticastDelegate
#include "System/MulticastDelegate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::Rendering
namespace UnityEngine::Rendering {
  // Forward declaring type: ScriptableRenderContext
  struct ScriptableRenderContext;
  // Forward declaring type: DrawingSettings
  struct DrawingSettings;
  // Forward declaring type: FilteringSettings
  struct FilteringSettings;
  // Forward declaring type: RenderStateBlock
  struct RenderStateBlock;
}
// Forward declaring namespace: UnityEngine::Rendering::Universal
namespace UnityEngine::Rendering::Universal {
  // Forward declaring type: RenderingData
  struct RenderingData;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: IAsyncResult
  class IAsyncResult;
  // Forward declaring type: AsyncCallback
  class AsyncCallback;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::Rendering::Universal::DebugHandler::DrawFunction);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::Rendering::Universal::DebugHandler::DrawFunction*, "UnityEngine.Rendering.Universal", "DebugHandler/DrawFunction");
// Type namespace: UnityEngine.Rendering.Universal
namespace UnityEngine::Rendering::Universal {
  // Size: 0x80
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.Rendering.Universal.DebugHandler/DrawFunction
  // [TokenAttribute] Offset: FFFFFFFF
  class DebugHandler::DrawFunction : public ::System::MulticastDelegate {
    public:
    // public System.Void .ctor(System.Object object, System.IntPtr method)
    // Offset: 0x529F4A8
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static DebugHandler::DrawFunction* New_ctor(::Il2CppObject* object, ::System::IntPtr method) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::Universal::DebugHandler::DrawFunction::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<DebugHandler::DrawFunction*, creationType>(object, method)));
    }
    // public System.Void Invoke(UnityEngine.Rendering.ScriptableRenderContext context, ref UnityEngine.Rendering.Universal.RenderingData renderingData, ref UnityEngine.Rendering.DrawingSettings drawingSettings, ref UnityEngine.Rendering.FilteringSettings filteringSettings, ref UnityEngine.Rendering.RenderStateBlock renderStateBlock)
    // Offset: 0x529F548
    void Invoke(::UnityEngine::Rendering::ScriptableRenderContext context, ByRef<::UnityEngine::Rendering::Universal::RenderingData> renderingData, ByRef<::UnityEngine::Rendering::DrawingSettings> drawingSettings, ByRef<::UnityEngine::Rendering::FilteringSettings> filteringSettings, ByRef<::UnityEngine::Rendering::RenderStateBlock> renderStateBlock);
    // public System.IAsyncResult BeginInvoke(UnityEngine.Rendering.ScriptableRenderContext context, ref UnityEngine.Rendering.Universal.RenderingData renderingData, ref UnityEngine.Rendering.DrawingSettings drawingSettings, ref UnityEngine.Rendering.FilteringSettings filteringSettings, ref UnityEngine.Rendering.RenderStateBlock renderStateBlock, System.AsyncCallback callback, System.Object object)
    // Offset: 0x529F55C
    ::System::IAsyncResult* BeginInvoke(::UnityEngine::Rendering::ScriptableRenderContext context, ByRef<::UnityEngine::Rendering::Universal::RenderingData> renderingData, ByRef<::UnityEngine::Rendering::DrawingSettings> drawingSettings, ByRef<::UnityEngine::Rendering::FilteringSettings> filteringSettings, ByRef<::UnityEngine::Rendering::RenderStateBlock> renderStateBlock, ::System::AsyncCallback* callback, ::Il2CppObject* object);
    // public System.Void EndInvoke(ref UnityEngine.Rendering.Universal.RenderingData renderingData, ref UnityEngine.Rendering.DrawingSettings drawingSettings, ref UnityEngine.Rendering.FilteringSettings filteringSettings, ref UnityEngine.Rendering.RenderStateBlock renderStateBlock, System.IAsyncResult result)
    // Offset: 0x529F6B0
    void EndInvoke(ByRef<::UnityEngine::Rendering::Universal::RenderingData> renderingData, ByRef<::UnityEngine::Rendering::DrawingSettings> drawingSettings, ByRef<::UnityEngine::Rendering::FilteringSettings> filteringSettings, ByRef<::UnityEngine::Rendering::RenderStateBlock> renderStateBlock, ::System::IAsyncResult* result);
  }; // UnityEngine.Rendering.Universal.DebugHandler/DrawFunction
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::Rendering::Universal::DebugHandler::DrawFunction::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::Rendering::Universal::DebugHandler::DrawFunction::Invoke
// Il2CppName: Invoke
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Rendering::Universal::DebugHandler::DrawFunction::*)(::UnityEngine::Rendering::ScriptableRenderContext, ByRef<::UnityEngine::Rendering::Universal::RenderingData>, ByRef<::UnityEngine::Rendering::DrawingSettings>, ByRef<::UnityEngine::Rendering::FilteringSettings>, ByRef<::UnityEngine::Rendering::RenderStateBlock>)>(&UnityEngine::Rendering::Universal::DebugHandler::DrawFunction::Invoke)> {
  static const MethodInfo* get() {
    static auto* context = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "ScriptableRenderContext")->byval_arg;
    static auto* renderingData = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering.Universal", "RenderingData")->this_arg;
    static auto* drawingSettings = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "DrawingSettings")->this_arg;
    static auto* filteringSettings = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "FilteringSettings")->this_arg;
    static auto* renderStateBlock = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "RenderStateBlock")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::Universal::DebugHandler::DrawFunction*), "Invoke", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{context, renderingData, drawingSettings, filteringSettings, renderStateBlock});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::Universal::DebugHandler::DrawFunction::BeginInvoke
// Il2CppName: BeginInvoke
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IAsyncResult* (UnityEngine::Rendering::Universal::DebugHandler::DrawFunction::*)(::UnityEngine::Rendering::ScriptableRenderContext, ByRef<::UnityEngine::Rendering::Universal::RenderingData>, ByRef<::UnityEngine::Rendering::DrawingSettings>, ByRef<::UnityEngine::Rendering::FilteringSettings>, ByRef<::UnityEngine::Rendering::RenderStateBlock>, ::System::AsyncCallback*, ::Il2CppObject*)>(&UnityEngine::Rendering::Universal::DebugHandler::DrawFunction::BeginInvoke)> {
  static const MethodInfo* get() {
    static auto* context = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "ScriptableRenderContext")->byval_arg;
    static auto* renderingData = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering.Universal", "RenderingData")->this_arg;
    static auto* drawingSettings = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "DrawingSettings")->this_arg;
    static auto* filteringSettings = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "FilteringSettings")->this_arg;
    static auto* renderStateBlock = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "RenderStateBlock")->this_arg;
    static auto* callback = &::il2cpp_utils::GetClassFromName("System", "AsyncCallback")->byval_arg;
    static auto* object = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::Universal::DebugHandler::DrawFunction*), "BeginInvoke", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{context, renderingData, drawingSettings, filteringSettings, renderStateBlock, callback, object});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::Universal::DebugHandler::DrawFunction::EndInvoke
// Il2CppName: EndInvoke
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Rendering::Universal::DebugHandler::DrawFunction::*)(ByRef<::UnityEngine::Rendering::Universal::RenderingData>, ByRef<::UnityEngine::Rendering::DrawingSettings>, ByRef<::UnityEngine::Rendering::FilteringSettings>, ByRef<::UnityEngine::Rendering::RenderStateBlock>, ::System::IAsyncResult*)>(&UnityEngine::Rendering::Universal::DebugHandler::DrawFunction::EndInvoke)> {
  static const MethodInfo* get() {
    static auto* renderingData = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering.Universal", "RenderingData")->this_arg;
    static auto* drawingSettings = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "DrawingSettings")->this_arg;
    static auto* filteringSettings = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "FilteringSettings")->this_arg;
    static auto* renderStateBlock = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "RenderStateBlock")->this_arg;
    static auto* result = &::il2cpp_utils::GetClassFromName("System", "IAsyncResult")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::Universal::DebugHandler::DrawFunction*), "EndInvoke", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{renderingData, drawingSettings, filteringSettings, renderStateBlock, result});
  }
};
