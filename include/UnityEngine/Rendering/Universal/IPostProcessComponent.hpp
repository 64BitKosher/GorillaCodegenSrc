// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/byref.hpp"
// Completed includes
// Type namespace: UnityEngine.Rendering.Universal
namespace UnityEngine::Rendering::Universal {
  // Forward declaring type: IPostProcessComponent
  class IPostProcessComponent;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::Rendering::Universal::IPostProcessComponent);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::Rendering::Universal::IPostProcessComponent*, "UnityEngine.Rendering.Universal", "IPostProcessComponent");
// Type namespace: UnityEngine.Rendering.Universal
namespace UnityEngine::Rendering::Universal {
  // Size: 0x0
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.Rendering.Universal.IPostProcessComponent
  // [TokenAttribute] Offset: FFFFFFFF
  class IPostProcessComponent {
    public:
    // public System.Boolean IsActive()
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool IsActive();
    // public System.Boolean IsTileCompatible()
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool IsTileCompatible();
  }; // UnityEngine.Rendering.Universal.IPostProcessComponent
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::Rendering::Universal::IPostProcessComponent::IsActive
// Il2CppName: IsActive
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::Rendering::Universal::IPostProcessComponent::*)()>(&UnityEngine::Rendering::Universal::IPostProcessComponent::IsActive)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::Universal::IPostProcessComponent*), "IsActive", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::Universal::IPostProcessComponent::IsTileCompatible
// Il2CppName: IsTileCompatible
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::Rendering::Universal::IPostProcessComponent::*)()>(&UnityEngine::Rendering::Universal::IPostProcessComponent::IsTileCompatible)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::Universal::IPostProcessComponent*), "IsTileCompatible", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
