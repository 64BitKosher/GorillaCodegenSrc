// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.Rendering.IDebugDisplaySettingsData
#include "UnityEngine/Rendering/IDebugDisplaySettingsData.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
// Including type: UnityEngine.Rendering.Universal.DebugMaterialValidationMode
#include "UnityEngine/Rendering/Universal/DebugMaterialValidationMode.hpp"
// Including type: UnityEngine.Rendering.Universal.DebugMaterialMode
#include "UnityEngine/Rendering/Universal/DebugMaterialMode.hpp"
// Including type: UnityEngine.Rendering.Universal.DebugVertexAttributeMode
#include "UnityEngine/Rendering/Universal/DebugVertexAttributeMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::Rendering::Universal
namespace UnityEngine::Rendering::Universal {
  // Skipping declaration: AlbedoDebugValidationPreset because it is already included!
}
// Forward declaring namespace: UnityEngine::Rendering
namespace UnityEngine::Rendering {
  // Forward declaring type: IDebugDisplaySettingsPanelDisposable
  class IDebugDisplaySettingsPanelDisposable;
}
// Completed forward declares
// Type namespace: UnityEngine.Rendering.Universal
namespace UnityEngine::Rendering::Universal {
  // Forward declaring type: DebugDisplaySettingsMaterial
  class DebugDisplaySettingsMaterial;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::Rendering::Universal::DebugDisplaySettingsMaterial);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::Rendering::Universal::DebugDisplaySettingsMaterial*, "UnityEngine.Rendering.Universal", "DebugDisplaySettingsMaterial");
// Type namespace: UnityEngine.Rendering.Universal
namespace UnityEngine::Rendering::Universal {
  // Size: 0x50
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.Rendering.Universal.DebugDisplaySettingsMaterial
  // [TokenAttribute] Offset: FFFFFFFF
  class DebugDisplaySettingsMaterial : public ::Il2CppObject/*, public ::UnityEngine::Rendering::IDebugDisplaySettingsData*/ {
    public:
    // Nested type: ::UnityEngine::Rendering::Universal::DebugDisplaySettingsMaterial::AlbedoDebugValidationPreset
    struct AlbedoDebugValidationPreset;
    // Nested type: ::UnityEngine::Rendering::Universal::DebugDisplaySettingsMaterial::AlbedoDebugValidationPresetData
    struct AlbedoDebugValidationPresetData;
    // Nested type: ::UnityEngine::Rendering::Universal::DebugDisplaySettingsMaterial::Strings
    class Strings;
    // Nested type: ::UnityEngine::Rendering::Universal::DebugDisplaySettingsMaterial::WidgetFactory
    class WidgetFactory;
    // Nested type: ::UnityEngine::Rendering::Universal::DebugDisplaySettingsMaterial::SettingsPanel
    class SettingsPanel;
    // Size: 0x4
    #pragma pack(push, 1)
    // Autogenerated type: UnityEngine.Rendering.Universal.DebugDisplaySettingsMaterial/AlbedoDebugValidationPreset
    // [TokenAttribute] Offset: FFFFFFFF
    struct AlbedoDebugValidationPreset/*, public ::System::Enum*/ {
      public:
      public:
      // public System.Int32 value__
      // Size: 0x4
      // Offset: 0x0
      int value;
      // Field size check
      static_assert(sizeof(int) == 0x4);
      public:
      // Creating value type constructor for type: AlbedoDebugValidationPreset
      constexpr AlbedoDebugValidationPreset(int value_ = {}) noexcept : value{value_} {}
      // Creating interface conversion operator: operator ::System::Enum
      operator ::System::Enum() noexcept {
        return *reinterpret_cast<::System::Enum*>(this);
      }
      // Creating conversion operator: operator int
      constexpr operator int() const noexcept {
        return value;
      }
      // static field const value: static public UnityEngine.Rendering.Universal.DebugDisplaySettingsMaterial/AlbedoDebugValidationPreset DefaultLuminance
      static constexpr const int DefaultLuminance = 0;
      // Get static field: static public UnityEngine.Rendering.Universal.DebugDisplaySettingsMaterial/AlbedoDebugValidationPreset DefaultLuminance
      static ::UnityEngine::Rendering::Universal::DebugDisplaySettingsMaterial::AlbedoDebugValidationPreset _get_DefaultLuminance();
      // Set static field: static public UnityEngine.Rendering.Universal.DebugDisplaySettingsMaterial/AlbedoDebugValidationPreset DefaultLuminance
      static void _set_DefaultLuminance(::UnityEngine::Rendering::Universal::DebugDisplaySettingsMaterial::AlbedoDebugValidationPreset value);
      // static field const value: static public UnityEngine.Rendering.Universal.DebugDisplaySettingsMaterial/AlbedoDebugValidationPreset BlackAcrylicPaint
      static constexpr const int BlackAcrylicPaint = 1;
      // Get static field: static public UnityEngine.Rendering.Universal.DebugDisplaySettingsMaterial/AlbedoDebugValidationPreset BlackAcrylicPaint
      static ::UnityEngine::Rendering::Universal::DebugDisplaySettingsMaterial::AlbedoDebugValidationPreset _get_BlackAcrylicPaint();
      // Set static field: static public UnityEngine.Rendering.Universal.DebugDisplaySettingsMaterial/AlbedoDebugValidationPreset BlackAcrylicPaint
      static void _set_BlackAcrylicPaint(::UnityEngine::Rendering::Universal::DebugDisplaySettingsMaterial::AlbedoDebugValidationPreset value);
      // static field const value: static public UnityEngine.Rendering.Universal.DebugDisplaySettingsMaterial/AlbedoDebugValidationPreset DarkSoil
      static constexpr const int DarkSoil = 2;
      // Get static field: static public UnityEngine.Rendering.Universal.DebugDisplaySettingsMaterial/AlbedoDebugValidationPreset DarkSoil
      static ::UnityEngine::Rendering::Universal::DebugDisplaySettingsMaterial::AlbedoDebugValidationPreset _get_DarkSoil();
      // Set static field: static public UnityEngine.Rendering.Universal.DebugDisplaySettingsMaterial/AlbedoDebugValidationPreset DarkSoil
      static void _set_DarkSoil(::UnityEngine::Rendering::Universal::DebugDisplaySettingsMaterial::AlbedoDebugValidationPreset value);
      // static field const value: static public UnityEngine.Rendering.Universal.DebugDisplaySettingsMaterial/AlbedoDebugValidationPreset WornAsphalt
      static constexpr const int WornAsphalt = 3;
      // Get static field: static public UnityEngine.Rendering.Universal.DebugDisplaySettingsMaterial/AlbedoDebugValidationPreset WornAsphalt
      static ::UnityEngine::Rendering::Universal::DebugDisplaySettingsMaterial::AlbedoDebugValidationPreset _get_WornAsphalt();
      // Set static field: static public UnityEngine.Rendering.Universal.DebugDisplaySettingsMaterial/AlbedoDebugValidationPreset WornAsphalt
      static void _set_WornAsphalt(::UnityEngine::Rendering::Universal::DebugDisplaySettingsMaterial::AlbedoDebugValidationPreset value);
      // static field const value: static public UnityEngine.Rendering.Universal.DebugDisplaySettingsMaterial/AlbedoDebugValidationPreset DryClaySoil
      static constexpr const int DryClaySoil = 4;
      // Get static field: static public UnityEngine.Rendering.Universal.DebugDisplaySettingsMaterial/AlbedoDebugValidationPreset DryClaySoil
      static ::UnityEngine::Rendering::Universal::DebugDisplaySettingsMaterial::AlbedoDebugValidationPreset _get_DryClaySoil();
      // Set static field: static public UnityEngine.Rendering.Universal.DebugDisplaySettingsMaterial/AlbedoDebugValidationPreset DryClaySoil
      static void _set_DryClaySoil(::UnityEngine::Rendering::Universal::DebugDisplaySettingsMaterial::AlbedoDebugValidationPreset value);
      // static field const value: static public UnityEngine.Rendering.Universal.DebugDisplaySettingsMaterial/AlbedoDebugValidationPreset GreenGrass
      static constexpr const int GreenGrass = 5;
      // Get static field: static public UnityEngine.Rendering.Universal.DebugDisplaySettingsMaterial/AlbedoDebugValidationPreset GreenGrass
      static ::UnityEngine::Rendering::Universal::DebugDisplaySettingsMaterial::AlbedoDebugValidationPreset _get_GreenGrass();
      // Set static field: static public UnityEngine.Rendering.Universal.DebugDisplaySettingsMaterial/AlbedoDebugValidationPreset GreenGrass
      static void _set_GreenGrass(::UnityEngine::Rendering::Universal::DebugDisplaySettingsMaterial::AlbedoDebugValidationPreset value);
      // static field const value: static public UnityEngine.Rendering.Universal.DebugDisplaySettingsMaterial/AlbedoDebugValidationPreset OldConcrete
      static constexpr const int OldConcrete = 6;
      // Get static field: static public UnityEngine.Rendering.Universal.DebugDisplaySettingsMaterial/AlbedoDebugValidationPreset OldConcrete
      static ::UnityEngine::Rendering::Universal::DebugDisplaySettingsMaterial::AlbedoDebugValidationPreset _get_OldConcrete();
      // Set static field: static public UnityEngine.Rendering.Universal.DebugDisplaySettingsMaterial/AlbedoDebugValidationPreset OldConcrete
      static void _set_OldConcrete(::UnityEngine::Rendering::Universal::DebugDisplaySettingsMaterial::AlbedoDebugValidationPreset value);
      // static field const value: static public UnityEngine.Rendering.Universal.DebugDisplaySettingsMaterial/AlbedoDebugValidationPreset RedClayTile
      static constexpr const int RedClayTile = 7;
      // Get static field: static public UnityEngine.Rendering.Universal.DebugDisplaySettingsMaterial/AlbedoDebugValidationPreset RedClayTile
      static ::UnityEngine::Rendering::Universal::DebugDisplaySettingsMaterial::AlbedoDebugValidationPreset _get_RedClayTile();
      // Set static field: static public UnityEngine.Rendering.Universal.DebugDisplaySettingsMaterial/AlbedoDebugValidationPreset RedClayTile
      static void _set_RedClayTile(::UnityEngine::Rendering::Universal::DebugDisplaySettingsMaterial::AlbedoDebugValidationPreset value);
      // static field const value: static public UnityEngine.Rendering.Universal.DebugDisplaySettingsMaterial/AlbedoDebugValidationPreset DrySand
      static constexpr const int DrySand = 8;
      // Get static field: static public UnityEngine.Rendering.Universal.DebugDisplaySettingsMaterial/AlbedoDebugValidationPreset DrySand
      static ::UnityEngine::Rendering::Universal::DebugDisplaySettingsMaterial::AlbedoDebugValidationPreset _get_DrySand();
      // Set static field: static public UnityEngine.Rendering.Universal.DebugDisplaySettingsMaterial/AlbedoDebugValidationPreset DrySand
      static void _set_DrySand(::UnityEngine::Rendering::Universal::DebugDisplaySettingsMaterial::AlbedoDebugValidationPreset value);
      // static field const value: static public UnityEngine.Rendering.Universal.DebugDisplaySettingsMaterial/AlbedoDebugValidationPreset NewConcrete
      static constexpr const int NewConcrete = 9;
      // Get static field: static public UnityEngine.Rendering.Universal.DebugDisplaySettingsMaterial/AlbedoDebugValidationPreset NewConcrete
      static ::UnityEngine::Rendering::Universal::DebugDisplaySettingsMaterial::AlbedoDebugValidationPreset _get_NewConcrete();
      // Set static field: static public UnityEngine.Rendering.Universal.DebugDisplaySettingsMaterial/AlbedoDebugValidationPreset NewConcrete
      static void _set_NewConcrete(::UnityEngine::Rendering::Universal::DebugDisplaySettingsMaterial::AlbedoDebugValidationPreset value);
      // static field const value: static public UnityEngine.Rendering.Universal.DebugDisplaySettingsMaterial/AlbedoDebugValidationPreset WhiteAcrylicPaint
      static constexpr const int WhiteAcrylicPaint = 10;
      // Get static field: static public UnityEngine.Rendering.Universal.DebugDisplaySettingsMaterial/AlbedoDebugValidationPreset WhiteAcrylicPaint
      static ::UnityEngine::Rendering::Universal::DebugDisplaySettingsMaterial::AlbedoDebugValidationPreset _get_WhiteAcrylicPaint();
      // Set static field: static public UnityEngine.Rendering.Universal.DebugDisplaySettingsMaterial/AlbedoDebugValidationPreset WhiteAcrylicPaint
      static void _set_WhiteAcrylicPaint(::UnityEngine::Rendering::Universal::DebugDisplaySettingsMaterial::AlbedoDebugValidationPreset value);
      // static field const value: static public UnityEngine.Rendering.Universal.DebugDisplaySettingsMaterial/AlbedoDebugValidationPreset FreshSnow
      static constexpr const int FreshSnow = 11;
      // Get static field: static public UnityEngine.Rendering.Universal.DebugDisplaySettingsMaterial/AlbedoDebugValidationPreset FreshSnow
      static ::UnityEngine::Rendering::Universal::DebugDisplaySettingsMaterial::AlbedoDebugValidationPreset _get_FreshSnow();
      // Set static field: static public UnityEngine.Rendering.Universal.DebugDisplaySettingsMaterial/AlbedoDebugValidationPreset FreshSnow
      static void _set_FreshSnow(::UnityEngine::Rendering::Universal::DebugDisplaySettingsMaterial::AlbedoDebugValidationPreset value);
      // static field const value: static public UnityEngine.Rendering.Universal.DebugDisplaySettingsMaterial/AlbedoDebugValidationPreset BlueSky
      static constexpr const int BlueSky = 12;
      // Get static field: static public UnityEngine.Rendering.Universal.DebugDisplaySettingsMaterial/AlbedoDebugValidationPreset BlueSky
      static ::UnityEngine::Rendering::Universal::DebugDisplaySettingsMaterial::AlbedoDebugValidationPreset _get_BlueSky();
      // Set static field: static public UnityEngine.Rendering.Universal.DebugDisplaySettingsMaterial/AlbedoDebugValidationPreset BlueSky
      static void _set_BlueSky(::UnityEngine::Rendering::Universal::DebugDisplaySettingsMaterial::AlbedoDebugValidationPreset value);
      // static field const value: static public UnityEngine.Rendering.Universal.DebugDisplaySettingsMaterial/AlbedoDebugValidationPreset Foliage
      static constexpr const int Foliage = 13;
      // Get static field: static public UnityEngine.Rendering.Universal.DebugDisplaySettingsMaterial/AlbedoDebugValidationPreset Foliage
      static ::UnityEngine::Rendering::Universal::DebugDisplaySettingsMaterial::AlbedoDebugValidationPreset _get_Foliage();
      // Set static field: static public UnityEngine.Rendering.Universal.DebugDisplaySettingsMaterial/AlbedoDebugValidationPreset Foliage
      static void _set_Foliage(::UnityEngine::Rendering::Universal::DebugDisplaySettingsMaterial::AlbedoDebugValidationPreset value);
      // static field const value: static public UnityEngine.Rendering.Universal.DebugDisplaySettingsMaterial/AlbedoDebugValidationPreset Custom
      static constexpr const int Custom = 14;
      // Get static field: static public UnityEngine.Rendering.Universal.DebugDisplaySettingsMaterial/AlbedoDebugValidationPreset Custom
      static ::UnityEngine::Rendering::Universal::DebugDisplaySettingsMaterial::AlbedoDebugValidationPreset _get_Custom();
      // Set static field: static public UnityEngine.Rendering.Universal.DebugDisplaySettingsMaterial/AlbedoDebugValidationPreset Custom
      static void _set_Custom(::UnityEngine::Rendering::Universal::DebugDisplaySettingsMaterial::AlbedoDebugValidationPreset value);
      // Get instance field reference: public System.Int32 value__
      [[deprecated("Use field access instead!")]] int& dyn_value__();
    }; // UnityEngine.Rendering.Universal.DebugDisplaySettingsMaterial/AlbedoDebugValidationPreset
    #pragma pack(pop)
    static check_size<sizeof(DebugDisplaySettingsMaterial::AlbedoDebugValidationPreset), 0 + sizeof(int)> __UnityEngine_Rendering_Universal_DebugDisplaySettingsMaterial_AlbedoDebugValidationPresetSizeCheck;
    static_assert(sizeof(DebugDisplaySettingsMaterial::AlbedoDebugValidationPreset) == 0x4);
    // Size: 0x20
    #pragma pack(push, 1)
    // WARNING Layout: Sequential may not be correctly taken into account!
    // Autogenerated type: UnityEngine.Rendering.Universal.DebugDisplaySettingsMaterial/AlbedoDebugValidationPresetData
    // [TokenAttribute] Offset: FFFFFFFF
    struct AlbedoDebugValidationPresetData/*, public ::System::ValueType*/ {
      public:
      public:
      // public System.String name
      // Size: 0x8
      // Offset: 0x0
      ::StringW name;
      // Field size check
      static_assert(sizeof(::StringW) == 0x8);
      // public UnityEngine.Color color
      // Size: 0x10
      // Offset: 0x8
      ::UnityEngine::Color color;
      // Field size check
      static_assert(sizeof(::UnityEngine::Color) == 0x10);
      // public System.Single minLuminance
      // Size: 0x4
      // Offset: 0x18
      float minLuminance;
      // Field size check
      static_assert(sizeof(float) == 0x4);
      // public System.Single maxLuminance
      // Size: 0x4
      // Offset: 0x1C
      float maxLuminance;
      // Field size check
      static_assert(sizeof(float) == 0x4);
      public:
      // Creating value type constructor for type: AlbedoDebugValidationPresetData
      constexpr AlbedoDebugValidationPresetData(::StringW name_ = {}, ::UnityEngine::Color color_ = {}, float minLuminance_ = {}, float maxLuminance_ = {}) noexcept : name{name_}, color{color_}, minLuminance{minLuminance_}, maxLuminance{maxLuminance_} {}
      // Creating interface conversion operator: operator ::System::ValueType
      operator ::System::ValueType() noexcept {
        return *reinterpret_cast<::System::ValueType*>(this);
      }
      // Get instance field reference: public System.String name
      [[deprecated("Use field access instead!")]] ::StringW& dyn_name();
      // Get instance field reference: public UnityEngine.Color color
      [[deprecated("Use field access instead!")]] ::UnityEngine::Color& dyn_color();
      // Get instance field reference: public System.Single minLuminance
      [[deprecated("Use field access instead!")]] float& dyn_minLuminance();
      // Get instance field reference: public System.Single maxLuminance
      [[deprecated("Use field access instead!")]] float& dyn_maxLuminance();
    }; // UnityEngine.Rendering.Universal.DebugDisplaySettingsMaterial/AlbedoDebugValidationPresetData
    #pragma pack(pop)
    static check_size<sizeof(DebugDisplaySettingsMaterial::AlbedoDebugValidationPresetData), 28 + sizeof(float)> __UnityEngine_Rendering_Universal_DebugDisplaySettingsMaterial_AlbedoDebugValidationPresetDataSizeCheck;
    static_assert(sizeof(DebugDisplaySettingsMaterial::AlbedoDebugValidationPresetData) == 0x20);
    public:
    // private UnityEngine.Rendering.Universal.DebugDisplaySettingsMaterial/AlbedoDebugValidationPresetData[] m_AlbedoDebugValidationPresetData
    // Size: 0x8
    // Offset: 0x10
    ::ArrayW<::UnityEngine::Rendering::Universal::DebugDisplaySettingsMaterial::AlbedoDebugValidationPresetData> m_AlbedoDebugValidationPresetData;
    // Field size check
    static_assert(sizeof(::ArrayW<::UnityEngine::Rendering::Universal::DebugDisplaySettingsMaterial::AlbedoDebugValidationPresetData>) == 0x8);
    // private UnityEngine.Rendering.Universal.DebugDisplaySettingsMaterial/AlbedoDebugValidationPreset m_AlbedoValidationPreset
    // Size: 0x4
    // Offset: 0x18
    ::UnityEngine::Rendering::Universal::DebugDisplaySettingsMaterial::AlbedoDebugValidationPreset m_AlbedoValidationPreset;
    // Field size check
    static_assert(sizeof(::UnityEngine::Rendering::Universal::DebugDisplaySettingsMaterial::AlbedoDebugValidationPreset) == 0x4);
    // private System.Single <albedoMinLuminance>k__BackingField
    // Size: 0x4
    // Offset: 0x1C
    float albedoMinLuminance;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Single <albedoMaxLuminance>k__BackingField
    // Size: 0x4
    // Offset: 0x20
    float albedoMaxLuminance;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Single m_AlbedoHueTolerance
    // Size: 0x4
    // Offset: 0x24
    float m_AlbedoHueTolerance;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Single m_AlbedoSaturationTolerance
    // Size: 0x4
    // Offset: 0x28
    float m_AlbedoSaturationTolerance;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private UnityEngine.Color <albedoCompareColor>k__BackingField
    // Size: 0x10
    // Offset: 0x2C
    ::UnityEngine::Color albedoCompareColor;
    // Field size check
    static_assert(sizeof(::UnityEngine::Color) == 0x10);
    // private System.Single <metallicMinValue>k__BackingField
    // Size: 0x4
    // Offset: 0x3C
    float metallicMinValue;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Single <metallicMaxValue>k__BackingField
    // Size: 0x4
    // Offset: 0x40
    float metallicMaxValue;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private UnityEngine.Rendering.Universal.DebugMaterialValidationMode <materialValidationMode>k__BackingField
    // Size: 0x4
    // Offset: 0x44
    ::UnityEngine::Rendering::Universal::DebugMaterialValidationMode materialValidationMode;
    // Field size check
    static_assert(sizeof(::UnityEngine::Rendering::Universal::DebugMaterialValidationMode) == 0x4);
    // private UnityEngine.Rendering.Universal.DebugMaterialMode <materialDebugMode>k__BackingField
    // Size: 0x4
    // Offset: 0x48
    ::UnityEngine::Rendering::Universal::DebugMaterialMode materialDebugMode;
    // Field size check
    static_assert(sizeof(::UnityEngine::Rendering::Universal::DebugMaterialMode) == 0x4);
    // private UnityEngine.Rendering.Universal.DebugVertexAttributeMode <vertexAttributeDebugMode>k__BackingField
    // Size: 0x4
    // Offset: 0x4C
    ::UnityEngine::Rendering::Universal::DebugVertexAttributeMode vertexAttributeDebugMode;
    // Field size check
    static_assert(sizeof(::UnityEngine::Rendering::Universal::DebugVertexAttributeMode) == 0x4);
    public:
    // Creating interface conversion operator: operator ::UnityEngine::Rendering::IDebugDisplaySettingsData
    operator ::UnityEngine::Rendering::IDebugDisplaySettingsData() noexcept {
      return *reinterpret_cast<::UnityEngine::Rendering::IDebugDisplaySettingsData*>(this);
    }
    // Get instance field reference: private UnityEngine.Rendering.Universal.DebugDisplaySettingsMaterial/AlbedoDebugValidationPresetData[] m_AlbedoDebugValidationPresetData
    [[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Rendering::Universal::DebugDisplaySettingsMaterial::AlbedoDebugValidationPresetData>& dyn_m_AlbedoDebugValidationPresetData();
    // Get instance field reference: private UnityEngine.Rendering.Universal.DebugDisplaySettingsMaterial/AlbedoDebugValidationPreset m_AlbedoValidationPreset
    [[deprecated("Use field access instead!")]] ::UnityEngine::Rendering::Universal::DebugDisplaySettingsMaterial::AlbedoDebugValidationPreset& dyn_m_AlbedoValidationPreset();
    // Get instance field reference: private System.Single <albedoMinLuminance>k__BackingField
    [[deprecated("Use field access instead!")]] float& dyn_$albedoMinLuminance$k__BackingField();
    // Get instance field reference: private System.Single <albedoMaxLuminance>k__BackingField
    [[deprecated("Use field access instead!")]] float& dyn_$albedoMaxLuminance$k__BackingField();
    // Get instance field reference: private System.Single m_AlbedoHueTolerance
    [[deprecated("Use field access instead!")]] float& dyn_m_AlbedoHueTolerance();
    // Get instance field reference: private System.Single m_AlbedoSaturationTolerance
    [[deprecated("Use field access instead!")]] float& dyn_m_AlbedoSaturationTolerance();
    // Get instance field reference: private UnityEngine.Color <albedoCompareColor>k__BackingField
    [[deprecated("Use field access instead!")]] ::UnityEngine::Color& dyn_$albedoCompareColor$k__BackingField();
    // Get instance field reference: private System.Single <metallicMinValue>k__BackingField
    [[deprecated("Use field access instead!")]] float& dyn_$metallicMinValue$k__BackingField();
    // Get instance field reference: private System.Single <metallicMaxValue>k__BackingField
    [[deprecated("Use field access instead!")]] float& dyn_$metallicMaxValue$k__BackingField();
    // Get instance field reference: private UnityEngine.Rendering.Universal.DebugMaterialValidationMode <materialValidationMode>k__BackingField
    [[deprecated("Use field access instead!")]] ::UnityEngine::Rendering::Universal::DebugMaterialValidationMode& dyn_$materialValidationMode$k__BackingField();
    // Get instance field reference: private UnityEngine.Rendering.Universal.DebugMaterialMode <materialDebugMode>k__BackingField
    [[deprecated("Use field access instead!")]] ::UnityEngine::Rendering::Universal::DebugMaterialMode& dyn_$materialDebugMode$k__BackingField();
    // Get instance field reference: private UnityEngine.Rendering.Universal.DebugVertexAttributeMode <vertexAttributeDebugMode>k__BackingField
    [[deprecated("Use field access instead!")]] ::UnityEngine::Rendering::Universal::DebugVertexAttributeMode& dyn_$vertexAttributeDebugMode$k__BackingField();
    // public UnityEngine.Rendering.Universal.DebugDisplaySettingsMaterial/AlbedoDebugValidationPreset get_albedoValidationPreset()
    // Offset: 0x5295444
    ::UnityEngine::Rendering::Universal::DebugDisplaySettingsMaterial::AlbedoDebugValidationPreset get_albedoValidationPreset();
    // public System.Void set_albedoValidationPreset(UnityEngine.Rendering.Universal.DebugDisplaySettingsMaterial/AlbedoDebugValidationPreset value)
    // Offset: 0x529544C
    void set_albedoValidationPreset(::UnityEngine::Rendering::Universal::DebugDisplaySettingsMaterial::AlbedoDebugValidationPreset value);
    // public System.Single get_albedoMinLuminance()
    // Offset: 0x5295490
    float get_albedoMinLuminance();
    // public System.Void set_albedoMinLuminance(System.Single value)
    // Offset: 0x5295498
    void set_albedoMinLuminance(float value);
    // public System.Single get_albedoMaxLuminance()
    // Offset: 0x52954A0
    float get_albedoMaxLuminance();
    // public System.Void set_albedoMaxLuminance(System.Single value)
    // Offset: 0x52954A8
    void set_albedoMaxLuminance(float value);
    // public System.Single get_albedoHueTolerance()
    // Offset: 0x52954B0
    float get_albedoHueTolerance();
    // public System.Void set_albedoHueTolerance(System.Single value)
    // Offset: 0x52954C8
    void set_albedoHueTolerance(float value);
    // public System.Single get_albedoSaturationTolerance()
    // Offset: 0x52954D0
    float get_albedoSaturationTolerance();
    // public System.Void set_albedoSaturationTolerance(System.Single value)
    // Offset: 0x52954E8
    void set_albedoSaturationTolerance(float value);
    // public UnityEngine.Color get_albedoCompareColor()
    // Offset: 0x52954F0
    ::UnityEngine::Color get_albedoCompareColor();
    // public System.Void set_albedoCompareColor(UnityEngine.Color value)
    // Offset: 0x52954FC
    void set_albedoCompareColor(::UnityEngine::Color value);
    // public System.Single get_metallicMinValue()
    // Offset: 0x5295508
    float get_metallicMinValue();
    // public System.Void set_metallicMinValue(System.Single value)
    // Offset: 0x5295510
    void set_metallicMinValue(float value);
    // public System.Single get_metallicMaxValue()
    // Offset: 0x5295518
    float get_metallicMaxValue();
    // public System.Void set_metallicMaxValue(System.Single value)
    // Offset: 0x5295520
    void set_metallicMaxValue(float value);
    // public UnityEngine.Rendering.Universal.DebugMaterialValidationMode get_materialValidationMode()
    // Offset: 0x5295528
    ::UnityEngine::Rendering::Universal::DebugMaterialValidationMode get_materialValidationMode();
    // public System.Void set_materialValidationMode(UnityEngine.Rendering.Universal.DebugMaterialValidationMode value)
    // Offset: 0x5295530
    void set_materialValidationMode(::UnityEngine::Rendering::Universal::DebugMaterialValidationMode value);
    // public UnityEngine.Rendering.Universal.DebugMaterialMode get_materialDebugMode()
    // Offset: 0x5295538
    ::UnityEngine::Rendering::Universal::DebugMaterialMode get_materialDebugMode();
    // public System.Void set_materialDebugMode(UnityEngine.Rendering.Universal.DebugMaterialMode value)
    // Offset: 0x5295540
    void set_materialDebugMode(::UnityEngine::Rendering::Universal::DebugMaterialMode value);
    // public UnityEngine.Rendering.Universal.DebugVertexAttributeMode get_vertexAttributeDebugMode()
    // Offset: 0x5295548
    ::UnityEngine::Rendering::Universal::DebugVertexAttributeMode get_vertexAttributeDebugMode();
    // public System.Void set_vertexAttributeDebugMode(UnityEngine.Rendering.Universal.DebugVertexAttributeMode value)
    // Offset: 0x5295550
    void set_vertexAttributeDebugMode(::UnityEngine::Rendering::Universal::DebugVertexAttributeMode value);
    // public System.Boolean get_AreAnySettingsActive()
    // Offset: 0x5295558
    bool get_AreAnySettingsActive();
    // public System.Boolean get_IsPostProcessingAllowed()
    // Offset: 0x5295580
    bool get_IsPostProcessingAllowed();
    // public System.Boolean get_IsLightingActive()
    // Offset: 0x52955A8
    bool get_IsLightingActive();
    // public System.Boolean TryGetScreenClearColor(ref UnityEngine.Color color)
    // Offset: 0x52955D0
    bool TryGetScreenClearColor(ByRef<::UnityEngine::Color> color);
    // private UnityEngine.Rendering.IDebugDisplaySettingsPanelDisposable UnityEngine.Rendering.IDebugDisplaySettingsData.CreatePanel()
    // Offset: 0x52955D8
    ::UnityEngine::Rendering::IDebugDisplaySettingsPanelDisposable* UnityEngine_Rendering_IDebugDisplaySettingsData_CreatePanel();
    // public System.Void .ctor()
    // Offset: 0x5295A90
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static DebugDisplaySettingsMaterial* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::Universal::DebugDisplaySettingsMaterial::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<DebugDisplaySettingsMaterial*, creationType>()));
    }
  }; // UnityEngine.Rendering.Universal.DebugDisplaySettingsMaterial
  #pragma pack(pop)
  static check_size<sizeof(DebugDisplaySettingsMaterial), 76 + sizeof(::UnityEngine::Rendering::Universal::DebugVertexAttributeMode)> __UnityEngine_Rendering_Universal_DebugDisplaySettingsMaterialSizeCheck;
  static_assert(sizeof(DebugDisplaySettingsMaterial) == 0x50);
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::Rendering::Universal::DebugDisplaySettingsMaterial::AlbedoDebugValidationPresetData, "UnityEngine.Rendering.Universal", "DebugDisplaySettingsMaterial/AlbedoDebugValidationPresetData");
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::Rendering::Universal::DebugDisplaySettingsMaterial::AlbedoDebugValidationPreset, "UnityEngine.Rendering.Universal", "DebugDisplaySettingsMaterial/AlbedoDebugValidationPreset");
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::Rendering::Universal::DebugDisplaySettingsMaterial::get_albedoValidationPreset
// Il2CppName: get_albedoValidationPreset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Rendering::Universal::DebugDisplaySettingsMaterial::AlbedoDebugValidationPreset (UnityEngine::Rendering::Universal::DebugDisplaySettingsMaterial::*)()>(&UnityEngine::Rendering::Universal::DebugDisplaySettingsMaterial::get_albedoValidationPreset)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::Universal::DebugDisplaySettingsMaterial*), "get_albedoValidationPreset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::Universal::DebugDisplaySettingsMaterial::set_albedoValidationPreset
// Il2CppName: set_albedoValidationPreset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Rendering::Universal::DebugDisplaySettingsMaterial::*)(::UnityEngine::Rendering::Universal::DebugDisplaySettingsMaterial::AlbedoDebugValidationPreset)>(&UnityEngine::Rendering::Universal::DebugDisplaySettingsMaterial::set_albedoValidationPreset)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering.Universal", "DebugDisplaySettingsMaterial/AlbedoDebugValidationPreset")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::Universal::DebugDisplaySettingsMaterial*), "set_albedoValidationPreset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::Universal::DebugDisplaySettingsMaterial::get_albedoMinLuminance
// Il2CppName: get_albedoMinLuminance
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::Rendering::Universal::DebugDisplaySettingsMaterial::*)()>(&UnityEngine::Rendering::Universal::DebugDisplaySettingsMaterial::get_albedoMinLuminance)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::Universal::DebugDisplaySettingsMaterial*), "get_albedoMinLuminance", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::Universal::DebugDisplaySettingsMaterial::set_albedoMinLuminance
// Il2CppName: set_albedoMinLuminance
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Rendering::Universal::DebugDisplaySettingsMaterial::*)(float)>(&UnityEngine::Rendering::Universal::DebugDisplaySettingsMaterial::set_albedoMinLuminance)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::Universal::DebugDisplaySettingsMaterial*), "set_albedoMinLuminance", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::Universal::DebugDisplaySettingsMaterial::get_albedoMaxLuminance
// Il2CppName: get_albedoMaxLuminance
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::Rendering::Universal::DebugDisplaySettingsMaterial::*)()>(&UnityEngine::Rendering::Universal::DebugDisplaySettingsMaterial::get_albedoMaxLuminance)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::Universal::DebugDisplaySettingsMaterial*), "get_albedoMaxLuminance", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::Universal::DebugDisplaySettingsMaterial::set_albedoMaxLuminance
// Il2CppName: set_albedoMaxLuminance
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Rendering::Universal::DebugDisplaySettingsMaterial::*)(float)>(&UnityEngine::Rendering::Universal::DebugDisplaySettingsMaterial::set_albedoMaxLuminance)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::Universal::DebugDisplaySettingsMaterial*), "set_albedoMaxLuminance", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::Universal::DebugDisplaySettingsMaterial::get_albedoHueTolerance
// Il2CppName: get_albedoHueTolerance
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::Rendering::Universal::DebugDisplaySettingsMaterial::*)()>(&UnityEngine::Rendering::Universal::DebugDisplaySettingsMaterial::get_albedoHueTolerance)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::Universal::DebugDisplaySettingsMaterial*), "get_albedoHueTolerance", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::Universal::DebugDisplaySettingsMaterial::set_albedoHueTolerance
// Il2CppName: set_albedoHueTolerance
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Rendering::Universal::DebugDisplaySettingsMaterial::*)(float)>(&UnityEngine::Rendering::Universal::DebugDisplaySettingsMaterial::set_albedoHueTolerance)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::Universal::DebugDisplaySettingsMaterial*), "set_albedoHueTolerance", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::Universal::DebugDisplaySettingsMaterial::get_albedoSaturationTolerance
// Il2CppName: get_albedoSaturationTolerance
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::Rendering::Universal::DebugDisplaySettingsMaterial::*)()>(&UnityEngine::Rendering::Universal::DebugDisplaySettingsMaterial::get_albedoSaturationTolerance)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::Universal::DebugDisplaySettingsMaterial*), "get_albedoSaturationTolerance", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::Universal::DebugDisplaySettingsMaterial::set_albedoSaturationTolerance
// Il2CppName: set_albedoSaturationTolerance
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Rendering::Universal::DebugDisplaySettingsMaterial::*)(float)>(&UnityEngine::Rendering::Universal::DebugDisplaySettingsMaterial::set_albedoSaturationTolerance)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::Universal::DebugDisplaySettingsMaterial*), "set_albedoSaturationTolerance", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::Universal::DebugDisplaySettingsMaterial::get_albedoCompareColor
// Il2CppName: get_albedoCompareColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Color (UnityEngine::Rendering::Universal::DebugDisplaySettingsMaterial::*)()>(&UnityEngine::Rendering::Universal::DebugDisplaySettingsMaterial::get_albedoCompareColor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::Universal::DebugDisplaySettingsMaterial*), "get_albedoCompareColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::Universal::DebugDisplaySettingsMaterial::set_albedoCompareColor
// Il2CppName: set_albedoCompareColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Rendering::Universal::DebugDisplaySettingsMaterial::*)(::UnityEngine::Color)>(&UnityEngine::Rendering::Universal::DebugDisplaySettingsMaterial::set_albedoCompareColor)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Color")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::Universal::DebugDisplaySettingsMaterial*), "set_albedoCompareColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::Universal::DebugDisplaySettingsMaterial::get_metallicMinValue
// Il2CppName: get_metallicMinValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::Rendering::Universal::DebugDisplaySettingsMaterial::*)()>(&UnityEngine::Rendering::Universal::DebugDisplaySettingsMaterial::get_metallicMinValue)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::Universal::DebugDisplaySettingsMaterial*), "get_metallicMinValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::Universal::DebugDisplaySettingsMaterial::set_metallicMinValue
// Il2CppName: set_metallicMinValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Rendering::Universal::DebugDisplaySettingsMaterial::*)(float)>(&UnityEngine::Rendering::Universal::DebugDisplaySettingsMaterial::set_metallicMinValue)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::Universal::DebugDisplaySettingsMaterial*), "set_metallicMinValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::Universal::DebugDisplaySettingsMaterial::get_metallicMaxValue
// Il2CppName: get_metallicMaxValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::Rendering::Universal::DebugDisplaySettingsMaterial::*)()>(&UnityEngine::Rendering::Universal::DebugDisplaySettingsMaterial::get_metallicMaxValue)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::Universal::DebugDisplaySettingsMaterial*), "get_metallicMaxValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::Universal::DebugDisplaySettingsMaterial::set_metallicMaxValue
// Il2CppName: set_metallicMaxValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Rendering::Universal::DebugDisplaySettingsMaterial::*)(float)>(&UnityEngine::Rendering::Universal::DebugDisplaySettingsMaterial::set_metallicMaxValue)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::Universal::DebugDisplaySettingsMaterial*), "set_metallicMaxValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::Universal::DebugDisplaySettingsMaterial::get_materialValidationMode
// Il2CppName: get_materialValidationMode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Rendering::Universal::DebugMaterialValidationMode (UnityEngine::Rendering::Universal::DebugDisplaySettingsMaterial::*)()>(&UnityEngine::Rendering::Universal::DebugDisplaySettingsMaterial::get_materialValidationMode)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::Universal::DebugDisplaySettingsMaterial*), "get_materialValidationMode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::Universal::DebugDisplaySettingsMaterial::set_materialValidationMode
// Il2CppName: set_materialValidationMode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Rendering::Universal::DebugDisplaySettingsMaterial::*)(::UnityEngine::Rendering::Universal::DebugMaterialValidationMode)>(&UnityEngine::Rendering::Universal::DebugDisplaySettingsMaterial::set_materialValidationMode)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering.Universal", "DebugMaterialValidationMode")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::Universal::DebugDisplaySettingsMaterial*), "set_materialValidationMode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::Universal::DebugDisplaySettingsMaterial::get_materialDebugMode
// Il2CppName: get_materialDebugMode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Rendering::Universal::DebugMaterialMode (UnityEngine::Rendering::Universal::DebugDisplaySettingsMaterial::*)()>(&UnityEngine::Rendering::Universal::DebugDisplaySettingsMaterial::get_materialDebugMode)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::Universal::DebugDisplaySettingsMaterial*), "get_materialDebugMode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::Universal::DebugDisplaySettingsMaterial::set_materialDebugMode
// Il2CppName: set_materialDebugMode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Rendering::Universal::DebugDisplaySettingsMaterial::*)(::UnityEngine::Rendering::Universal::DebugMaterialMode)>(&UnityEngine::Rendering::Universal::DebugDisplaySettingsMaterial::set_materialDebugMode)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering.Universal", "DebugMaterialMode")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::Universal::DebugDisplaySettingsMaterial*), "set_materialDebugMode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::Universal::DebugDisplaySettingsMaterial::get_vertexAttributeDebugMode
// Il2CppName: get_vertexAttributeDebugMode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Rendering::Universal::DebugVertexAttributeMode (UnityEngine::Rendering::Universal::DebugDisplaySettingsMaterial::*)()>(&UnityEngine::Rendering::Universal::DebugDisplaySettingsMaterial::get_vertexAttributeDebugMode)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::Universal::DebugDisplaySettingsMaterial*), "get_vertexAttributeDebugMode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::Universal::DebugDisplaySettingsMaterial::set_vertexAttributeDebugMode
// Il2CppName: set_vertexAttributeDebugMode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Rendering::Universal::DebugDisplaySettingsMaterial::*)(::UnityEngine::Rendering::Universal::DebugVertexAttributeMode)>(&UnityEngine::Rendering::Universal::DebugDisplaySettingsMaterial::set_vertexAttributeDebugMode)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering.Universal", "DebugVertexAttributeMode")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::Universal::DebugDisplaySettingsMaterial*), "set_vertexAttributeDebugMode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::Universal::DebugDisplaySettingsMaterial::get_AreAnySettingsActive
// Il2CppName: get_AreAnySettingsActive
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::Rendering::Universal::DebugDisplaySettingsMaterial::*)()>(&UnityEngine::Rendering::Universal::DebugDisplaySettingsMaterial::get_AreAnySettingsActive)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::Universal::DebugDisplaySettingsMaterial*), "get_AreAnySettingsActive", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::Universal::DebugDisplaySettingsMaterial::get_IsPostProcessingAllowed
// Il2CppName: get_IsPostProcessingAllowed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::Rendering::Universal::DebugDisplaySettingsMaterial::*)()>(&UnityEngine::Rendering::Universal::DebugDisplaySettingsMaterial::get_IsPostProcessingAllowed)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::Universal::DebugDisplaySettingsMaterial*), "get_IsPostProcessingAllowed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::Universal::DebugDisplaySettingsMaterial::get_IsLightingActive
// Il2CppName: get_IsLightingActive
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::Rendering::Universal::DebugDisplaySettingsMaterial::*)()>(&UnityEngine::Rendering::Universal::DebugDisplaySettingsMaterial::get_IsLightingActive)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::Universal::DebugDisplaySettingsMaterial*), "get_IsLightingActive", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::Universal::DebugDisplaySettingsMaterial::TryGetScreenClearColor
// Il2CppName: TryGetScreenClearColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::Rendering::Universal::DebugDisplaySettingsMaterial::*)(ByRef<::UnityEngine::Color>)>(&UnityEngine::Rendering::Universal::DebugDisplaySettingsMaterial::TryGetScreenClearColor)> {
  static const MethodInfo* get() {
    static auto* color = &::il2cpp_utils::GetClassFromName("UnityEngine", "Color")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::Universal::DebugDisplaySettingsMaterial*), "TryGetScreenClearColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{color});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::Universal::DebugDisplaySettingsMaterial::UnityEngine_Rendering_IDebugDisplaySettingsData_CreatePanel
// Il2CppName: UnityEngine.Rendering.IDebugDisplaySettingsData.CreatePanel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Rendering::IDebugDisplaySettingsPanelDisposable* (UnityEngine::Rendering::Universal::DebugDisplaySettingsMaterial::*)()>(&UnityEngine::Rendering::Universal::DebugDisplaySettingsMaterial::UnityEngine_Rendering_IDebugDisplaySettingsData_CreatePanel)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::Universal::DebugDisplaySettingsMaterial*), "UnityEngine.Rendering.IDebugDisplaySettingsData.CreatePanel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::Universal::DebugDisplaySettingsMaterial::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
