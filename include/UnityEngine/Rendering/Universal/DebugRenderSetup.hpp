// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.IDisposable
#include "System/IDisposable.hpp"
// Including type: UnityEngine.Rendering.ScriptableRenderContext
#include "UnityEngine/Rendering/ScriptableRenderContext.hpp"
// Including type: UnityEngine.Rendering.FilteringSettings
#include "UnityEngine/Rendering/FilteringSettings.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::Rendering::Universal
namespace UnityEngine::Rendering::Universal {
  // Forward declaring type: DebugHandler
  class DebugHandler;
  // Forward declaring type: DebugDisplaySettingsMaterial
  class DebugDisplaySettingsMaterial;
  // Forward declaring type: DebugDisplaySettingsRendering
  class DebugDisplaySettingsRendering;
  // Forward declaring type: DebugDisplaySettingsLighting
  class DebugDisplaySettingsLighting;
}
// Forward declaring namespace: UnityEngine::Rendering
namespace UnityEngine::Rendering {
  // Forward declaring type: CommandBuffer
  class CommandBuffer;
  // Forward declaring type: DrawingSettings
  struct DrawingSettings;
  // Skipping declaration: RenderStateBlock because it is already included!
}
// Completed forward declares
// Type namespace: UnityEngine.Rendering.Universal
namespace UnityEngine::Rendering::Universal {
  // Forward declaring type: DebugRenderSetup
  class DebugRenderSetup;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::Rendering::Universal::DebugRenderSetup);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::Rendering::Universal::DebugRenderSetup*, "UnityEngine.Rendering.Universal", "DebugRenderSetup");
// Type namespace: UnityEngine.Rendering.Universal
namespace UnityEngine::Rendering::Universal {
  // Size: 0x44
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.Rendering.Universal.DebugRenderSetup
  // [TokenAttribute] Offset: FFFFFFFF
  class DebugRenderSetup : public ::Il2CppObject/*, public ::System::IDisposable*/ {
    public:
    public:
    // private readonly UnityEngine.Rendering.Universal.DebugHandler m_DebugHandler
    // Size: 0x8
    // Offset: 0x10
    ::UnityEngine::Rendering::Universal::DebugHandler* m_DebugHandler;
    // Field size check
    static_assert(sizeof(::UnityEngine::Rendering::Universal::DebugHandler*) == 0x8);
    // private readonly UnityEngine.Rendering.ScriptableRenderContext m_Context
    // Size: 0x8
    // Offset: 0x18
    ::UnityEngine::Rendering::ScriptableRenderContext m_Context;
    // Field size check
    static_assert(sizeof(::UnityEngine::Rendering::ScriptableRenderContext) == 0x8);
    // private readonly UnityEngine.Rendering.CommandBuffer m_CommandBuffer
    // Size: 0x8
    // Offset: 0x20
    ::UnityEngine::Rendering::CommandBuffer* m_CommandBuffer;
    // Field size check
    static_assert(sizeof(::UnityEngine::Rendering::CommandBuffer*) == 0x8);
    // private readonly System.Int32 m_Index
    // Size: 0x4
    // Offset: 0x28
    int m_Index;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private readonly UnityEngine.Rendering.FilteringSettings m_FilteringSettings
    // Size: 0x18
    // Offset: 0x2C
    ::UnityEngine::Rendering::FilteringSettings m_FilteringSettings;
    // Field size check
    static_assert(sizeof(::UnityEngine::Rendering::FilteringSettings) == 0x18);
    public:
    // Creating interface conversion operator: operator ::System::IDisposable
    operator ::System::IDisposable() noexcept {
      return *reinterpret_cast<::System::IDisposable*>(this);
    }
    // Get instance field reference: private readonly UnityEngine.Rendering.Universal.DebugHandler m_DebugHandler
    [[deprecated("Use field access instead!")]] ::UnityEngine::Rendering::Universal::DebugHandler*& dyn_m_DebugHandler();
    // Get instance field reference: private readonly UnityEngine.Rendering.ScriptableRenderContext m_Context
    [[deprecated("Use field access instead!")]] ::UnityEngine::Rendering::ScriptableRenderContext& dyn_m_Context();
    // Get instance field reference: private readonly UnityEngine.Rendering.CommandBuffer m_CommandBuffer
    [[deprecated("Use field access instead!")]] ::UnityEngine::Rendering::CommandBuffer*& dyn_m_CommandBuffer();
    // Get instance field reference: private readonly System.Int32 m_Index
    [[deprecated("Use field access instead!")]] int& dyn_m_Index();
    // Get instance field reference: private readonly UnityEngine.Rendering.FilteringSettings m_FilteringSettings
    [[deprecated("Use field access instead!")]] ::UnityEngine::Rendering::FilteringSettings& dyn_m_FilteringSettings();
    // private UnityEngine.Rendering.Universal.DebugDisplaySettingsMaterial get_MaterialSettings()
    // Offset: 0x529F6D8
    ::UnityEngine::Rendering::Universal::DebugDisplaySettingsMaterial* get_MaterialSettings();
    // private UnityEngine.Rendering.Universal.DebugDisplaySettingsRendering get_RenderingSettings()
    // Offset: 0x529F6FC
    ::UnityEngine::Rendering::Universal::DebugDisplaySettingsRendering* get_RenderingSettings();
    // private UnityEngine.Rendering.Universal.DebugDisplaySettingsLighting get_LightingSettings()
    // Offset: 0x529F720
    ::UnityEngine::Rendering::Universal::DebugDisplaySettingsLighting* get_LightingSettings();
    // private System.Void Begin()
    // Offset: 0x529F744
    void Begin();
    // private System.Void End()
    // Offset: 0x529F7D4
    void End();
    // System.Void .ctor(UnityEngine.Rendering.Universal.DebugHandler debugHandler, UnityEngine.Rendering.ScriptableRenderContext context, UnityEngine.Rendering.CommandBuffer commandBuffer, System.Int32 index, UnityEngine.Rendering.FilteringSettings filteringSettings)
    // Offset: 0x529F3D8
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static DebugRenderSetup* New_ctor(::UnityEngine::Rendering::Universal::DebugHandler* debugHandler, ::UnityEngine::Rendering::ScriptableRenderContext context, ::UnityEngine::Rendering::CommandBuffer* commandBuffer, int index, ::UnityEngine::Rendering::FilteringSettings filteringSettings) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::Universal::DebugRenderSetup::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<DebugRenderSetup*, creationType>(debugHandler, context, commandBuffer, index, filteringSettings)));
    }
    // UnityEngine.Rendering.DrawingSettings CreateDrawingSettings(UnityEngine.Rendering.DrawingSettings drawingSettings)
    // Offset: 0x529E858
    ::UnityEngine::Rendering::DrawingSettings CreateDrawingSettings(::UnityEngine::Rendering::DrawingSettings drawingSettings);
    // UnityEngine.Rendering.RenderStateBlock GetRenderStateBlock(UnityEngine.Rendering.RenderStateBlock renderStateBlock)
    // Offset: 0x529E92C
    ::UnityEngine::Rendering::RenderStateBlock GetRenderStateBlock(::UnityEngine::Rendering::RenderStateBlock renderStateBlock);
    // public System.Void Dispose()
    // Offset: 0x529F3D4
    void Dispose();
  }; // UnityEngine.Rendering.Universal.DebugRenderSetup
  #pragma pack(pop)
  static check_size<sizeof(DebugRenderSetup), 44 + sizeof(::UnityEngine::Rendering::FilteringSettings)> __UnityEngine_Rendering_Universal_DebugRenderSetupSizeCheck;
  static_assert(sizeof(DebugRenderSetup) == 0x44);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::Rendering::Universal::DebugRenderSetup::get_MaterialSettings
// Il2CppName: get_MaterialSettings
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Rendering::Universal::DebugDisplaySettingsMaterial* (UnityEngine::Rendering::Universal::DebugRenderSetup::*)()>(&UnityEngine::Rendering::Universal::DebugRenderSetup::get_MaterialSettings)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::Universal::DebugRenderSetup*), "get_MaterialSettings", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::Universal::DebugRenderSetup::get_RenderingSettings
// Il2CppName: get_RenderingSettings
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Rendering::Universal::DebugDisplaySettingsRendering* (UnityEngine::Rendering::Universal::DebugRenderSetup::*)()>(&UnityEngine::Rendering::Universal::DebugRenderSetup::get_RenderingSettings)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::Universal::DebugRenderSetup*), "get_RenderingSettings", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::Universal::DebugRenderSetup::get_LightingSettings
// Il2CppName: get_LightingSettings
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Rendering::Universal::DebugDisplaySettingsLighting* (UnityEngine::Rendering::Universal::DebugRenderSetup::*)()>(&UnityEngine::Rendering::Universal::DebugRenderSetup::get_LightingSettings)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::Universal::DebugRenderSetup*), "get_LightingSettings", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::Universal::DebugRenderSetup::Begin
// Il2CppName: Begin
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Rendering::Universal::DebugRenderSetup::*)()>(&UnityEngine::Rendering::Universal::DebugRenderSetup::Begin)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::Universal::DebugRenderSetup*), "Begin", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::Universal::DebugRenderSetup::End
// Il2CppName: End
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Rendering::Universal::DebugRenderSetup::*)()>(&UnityEngine::Rendering::Universal::DebugRenderSetup::End)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::Universal::DebugRenderSetup*), "End", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::Universal::DebugRenderSetup::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::Rendering::Universal::DebugRenderSetup::CreateDrawingSettings
// Il2CppName: CreateDrawingSettings
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Rendering::DrawingSettings (UnityEngine::Rendering::Universal::DebugRenderSetup::*)(::UnityEngine::Rendering::DrawingSettings)>(&UnityEngine::Rendering::Universal::DebugRenderSetup::CreateDrawingSettings)> {
  static const MethodInfo* get() {
    static auto* drawingSettings = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "DrawingSettings")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::Universal::DebugRenderSetup*), "CreateDrawingSettings", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{drawingSettings});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::Universal::DebugRenderSetup::GetRenderStateBlock
// Il2CppName: GetRenderStateBlock
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Rendering::RenderStateBlock (UnityEngine::Rendering::Universal::DebugRenderSetup::*)(::UnityEngine::Rendering::RenderStateBlock)>(&UnityEngine::Rendering::Universal::DebugRenderSetup::GetRenderStateBlock)> {
  static const MethodInfo* get() {
    static auto* renderStateBlock = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "RenderStateBlock")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::Universal::DebugRenderSetup*), "GetRenderStateBlock", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{renderStateBlock});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::Universal::DebugRenderSetup::Dispose
// Il2CppName: Dispose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Rendering::Universal::DebugRenderSetup::*)()>(&UnityEngine::Rendering::Universal::DebugRenderSetup::Dispose)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::Universal::DebugRenderSetup*), "Dispose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
