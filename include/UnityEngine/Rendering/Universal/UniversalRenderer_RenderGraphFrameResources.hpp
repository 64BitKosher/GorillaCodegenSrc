// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.Rendering.Universal.UniversalRenderer
#include "UnityEngine/Rendering/Universal/UniversalRenderer.hpp"
// Including type: UnityEngine.Experimental.Rendering.RenderGraphModule.TextureHandle
#include "UnityEngine/Experimental/Rendering/RenderGraphModule/TextureHandle.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
// Completed includes
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::Rendering::Universal::UniversalRenderer::RenderGraphFrameResources);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::Rendering::Universal::UniversalRenderer::RenderGraphFrameResources*, "UnityEngine.Rendering.Universal", "UniversalRenderer/RenderGraphFrameResources");
// Type namespace: UnityEngine.Rendering.Universal
namespace UnityEngine::Rendering::Universal {
  // Size: 0x78
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.Rendering.Universal.UniversalRenderer/RenderGraphFrameResources
  // [TokenAttribute] Offset: FFFFFFFF
  class UniversalRenderer::RenderGraphFrameResources : public ::Il2CppObject {
    public:
    public:
    // UnityEngine.Experimental.Rendering.RenderGraphModule.TextureHandle backBufferColor
    // Size: 0x8
    // Offset: 0x10
    ::UnityEngine::Experimental::Rendering::RenderGraphModule::TextureHandle backBufferColor;
    // Field size check
    static_assert(sizeof(::UnityEngine::Experimental::Rendering::RenderGraphModule::TextureHandle) == 0x8);
    // UnityEngine.Experimental.Rendering.RenderGraphModule.TextureHandle cameraColor
    // Size: 0x8
    // Offset: 0x18
    ::UnityEngine::Experimental::Rendering::RenderGraphModule::TextureHandle cameraColor;
    // Field size check
    static_assert(sizeof(::UnityEngine::Experimental::Rendering::RenderGraphModule::TextureHandle) == 0x8);
    // UnityEngine.Experimental.Rendering.RenderGraphModule.TextureHandle cameraDepth
    // Size: 0x8
    // Offset: 0x20
    ::UnityEngine::Experimental::Rendering::RenderGraphModule::TextureHandle cameraDepth;
    // Field size check
    static_assert(sizeof(::UnityEngine::Experimental::Rendering::RenderGraphModule::TextureHandle) == 0x8);
    // UnityEngine.Experimental.Rendering.RenderGraphModule.TextureHandle mainShadowsTexture
    // Size: 0x8
    // Offset: 0x28
    ::UnityEngine::Experimental::Rendering::RenderGraphModule::TextureHandle mainShadowsTexture;
    // Field size check
    static_assert(sizeof(::UnityEngine::Experimental::Rendering::RenderGraphModule::TextureHandle) == 0x8);
    // UnityEngine.Experimental.Rendering.RenderGraphModule.TextureHandle additionalShadowsTexture
    // Size: 0x8
    // Offset: 0x30
    ::UnityEngine::Experimental::Rendering::RenderGraphModule::TextureHandle additionalShadowsTexture;
    // Field size check
    static_assert(sizeof(::UnityEngine::Experimental::Rendering::RenderGraphModule::TextureHandle) == 0x8);
    // UnityEngine.Experimental.Rendering.RenderGraphModule.TextureHandle[] gbuffer
    // Size: 0x8
    // Offset: 0x38
    ::ArrayW<::UnityEngine::Experimental::Rendering::RenderGraphModule::TextureHandle> gbuffer;
    // Field size check
    static_assert(sizeof(::ArrayW<::UnityEngine::Experimental::Rendering::RenderGraphModule::TextureHandle>) == 0x8);
    // UnityEngine.Experimental.Rendering.RenderGraphModule.TextureHandle cameraOpaqueTexture
    // Size: 0x8
    // Offset: 0x40
    ::UnityEngine::Experimental::Rendering::RenderGraphModule::TextureHandle cameraOpaqueTexture;
    // Field size check
    static_assert(sizeof(::UnityEngine::Experimental::Rendering::RenderGraphModule::TextureHandle) == 0x8);
    // UnityEngine.Experimental.Rendering.RenderGraphModule.TextureHandle cameraDepthTexture
    // Size: 0x8
    // Offset: 0x48
    ::UnityEngine::Experimental::Rendering::RenderGraphModule::TextureHandle cameraDepthTexture;
    // Field size check
    static_assert(sizeof(::UnityEngine::Experimental::Rendering::RenderGraphModule::TextureHandle) == 0x8);
    // UnityEngine.Experimental.Rendering.RenderGraphModule.TextureHandle cameraNormalsTexture
    // Size: 0x8
    // Offset: 0x50
    ::UnityEngine::Experimental::Rendering::RenderGraphModule::TextureHandle cameraNormalsTexture;
    // Field size check
    static_assert(sizeof(::UnityEngine::Experimental::Rendering::RenderGraphModule::TextureHandle) == 0x8);
    // UnityEngine.Experimental.Rendering.RenderGraphModule.TextureHandle motionVectorColor
    // Size: 0x8
    // Offset: 0x58
    ::UnityEngine::Experimental::Rendering::RenderGraphModule::TextureHandle motionVectorColor;
    // Field size check
    static_assert(sizeof(::UnityEngine::Experimental::Rendering::RenderGraphModule::TextureHandle) == 0x8);
    // UnityEngine.Experimental.Rendering.RenderGraphModule.TextureHandle motionVectorDepth
    // Size: 0x8
    // Offset: 0x60
    ::UnityEngine::Experimental::Rendering::RenderGraphModule::TextureHandle motionVectorDepth;
    // Field size check
    static_assert(sizeof(::UnityEngine::Experimental::Rendering::RenderGraphModule::TextureHandle) == 0x8);
    // UnityEngine.Experimental.Rendering.RenderGraphModule.TextureHandle internalColorLut
    // Size: 0x8
    // Offset: 0x68
    ::UnityEngine::Experimental::Rendering::RenderGraphModule::TextureHandle internalColorLut;
    // Field size check
    static_assert(sizeof(::UnityEngine::Experimental::Rendering::RenderGraphModule::TextureHandle) == 0x8);
    // UnityEngine.Experimental.Rendering.RenderGraphModule.TextureHandle overlayUITexture
    // Size: 0x8
    // Offset: 0x70
    ::UnityEngine::Experimental::Rendering::RenderGraphModule::TextureHandle overlayUITexture;
    // Field size check
    static_assert(sizeof(::UnityEngine::Experimental::Rendering::RenderGraphModule::TextureHandle) == 0x8);
    public:
    // Get instance field reference: UnityEngine.Experimental.Rendering.RenderGraphModule.TextureHandle backBufferColor
    [[deprecated("Use field access instead!")]] ::UnityEngine::Experimental::Rendering::RenderGraphModule::TextureHandle& dyn_backBufferColor();
    // Get instance field reference: UnityEngine.Experimental.Rendering.RenderGraphModule.TextureHandle cameraColor
    [[deprecated("Use field access instead!")]] ::UnityEngine::Experimental::Rendering::RenderGraphModule::TextureHandle& dyn_cameraColor();
    // Get instance field reference: UnityEngine.Experimental.Rendering.RenderGraphModule.TextureHandle cameraDepth
    [[deprecated("Use field access instead!")]] ::UnityEngine::Experimental::Rendering::RenderGraphModule::TextureHandle& dyn_cameraDepth();
    // Get instance field reference: UnityEngine.Experimental.Rendering.RenderGraphModule.TextureHandle mainShadowsTexture
    [[deprecated("Use field access instead!")]] ::UnityEngine::Experimental::Rendering::RenderGraphModule::TextureHandle& dyn_mainShadowsTexture();
    // Get instance field reference: UnityEngine.Experimental.Rendering.RenderGraphModule.TextureHandle additionalShadowsTexture
    [[deprecated("Use field access instead!")]] ::UnityEngine::Experimental::Rendering::RenderGraphModule::TextureHandle& dyn_additionalShadowsTexture();
    // Get instance field reference: UnityEngine.Experimental.Rendering.RenderGraphModule.TextureHandle[] gbuffer
    [[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Experimental::Rendering::RenderGraphModule::TextureHandle>& dyn_gbuffer();
    // Get instance field reference: UnityEngine.Experimental.Rendering.RenderGraphModule.TextureHandle cameraOpaqueTexture
    [[deprecated("Use field access instead!")]] ::UnityEngine::Experimental::Rendering::RenderGraphModule::TextureHandle& dyn_cameraOpaqueTexture();
    // Get instance field reference: UnityEngine.Experimental.Rendering.RenderGraphModule.TextureHandle cameraDepthTexture
    [[deprecated("Use field access instead!")]] ::UnityEngine::Experimental::Rendering::RenderGraphModule::TextureHandle& dyn_cameraDepthTexture();
    // Get instance field reference: UnityEngine.Experimental.Rendering.RenderGraphModule.TextureHandle cameraNormalsTexture
    [[deprecated("Use field access instead!")]] ::UnityEngine::Experimental::Rendering::RenderGraphModule::TextureHandle& dyn_cameraNormalsTexture();
    // Get instance field reference: UnityEngine.Experimental.Rendering.RenderGraphModule.TextureHandle motionVectorColor
    [[deprecated("Use field access instead!")]] ::UnityEngine::Experimental::Rendering::RenderGraphModule::TextureHandle& dyn_motionVectorColor();
    // Get instance field reference: UnityEngine.Experimental.Rendering.RenderGraphModule.TextureHandle motionVectorDepth
    [[deprecated("Use field access instead!")]] ::UnityEngine::Experimental::Rendering::RenderGraphModule::TextureHandle& dyn_motionVectorDepth();
    // Get instance field reference: UnityEngine.Experimental.Rendering.RenderGraphModule.TextureHandle internalColorLut
    [[deprecated("Use field access instead!")]] ::UnityEngine::Experimental::Rendering::RenderGraphModule::TextureHandle& dyn_internalColorLut();
    // Get instance field reference: UnityEngine.Experimental.Rendering.RenderGraphModule.TextureHandle overlayUITexture
    [[deprecated("Use field access instead!")]] ::UnityEngine::Experimental::Rendering::RenderGraphModule::TextureHandle& dyn_overlayUITexture();
    // public System.Void .ctor()
    // Offset: 0x52E921C
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static UniversalRenderer::RenderGraphFrameResources* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::Universal::UniversalRenderer::RenderGraphFrameResources::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<UniversalRenderer::RenderGraphFrameResources*, creationType>()));
    }
  }; // UnityEngine.Rendering.Universal.UniversalRenderer/RenderGraphFrameResources
  #pragma pack(pop)
  static check_size<sizeof(UniversalRenderer::RenderGraphFrameResources), 112 + sizeof(::UnityEngine::Experimental::Rendering::RenderGraphModule::TextureHandle)> __UnityEngine_Rendering_Universal_UniversalRenderer_RenderGraphFrameResourcesSizeCheck;
  static_assert(sizeof(UniversalRenderer::RenderGraphFrameResources) == 0x78);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::Rendering::Universal::UniversalRenderer::RenderGraphFrameResources::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
