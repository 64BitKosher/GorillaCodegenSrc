// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.Rendering.Universal.Internal.DrawObjectsPass
#include "UnityEngine/Rendering/Universal/Internal/DrawObjectsPass.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::Rendering
namespace UnityEngine::Rendering {
  // Forward declaring type: RTHandle
  class RTHandle;
  // Forward declaring type: CommandBuffer
  class CommandBuffer;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: RenderTextureDescriptor
  struct RenderTextureDescriptor;
}
// Completed forward declares
// Type namespace: UnityEngine.Rendering.Universal.Internal
namespace UnityEngine::Rendering::Universal::Internal {
  // Forward declaring type: DrawObjectsWithRenderingLayersPass
  class DrawObjectsWithRenderingLayersPass;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::Rendering::Universal::Internal::DrawObjectsWithRenderingLayersPass);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::Rendering::Universal::Internal::DrawObjectsWithRenderingLayersPass*, "UnityEngine.Rendering.Universal.Internal", "DrawObjectsWithRenderingLayersPass");
// Type namespace: UnityEngine.Rendering.Universal.Internal
namespace UnityEngine::Rendering::Universal::Internal {
  // WARNING Size may be invalid!
  // Autogenerated type: UnityEngine.Rendering.Universal.Internal.DrawObjectsWithRenderingLayersPass
  // [TokenAttribute] Offset: FFFFFFFF
  class DrawObjectsWithRenderingLayersPass : public ::UnityEngine::Rendering::Universal::Internal::DrawObjectsPass {
    public:
    public:
    // private UnityEngine.Rendering.RTHandle[] m_ColorTargetIndentifiers
    // Size: 0x8
    // Offset: 0x198
    ::ArrayW<::UnityEngine::Rendering::RTHandle*> m_ColorTargetIndentifiers;
    // Field size check
    static_assert(sizeof(::ArrayW<::UnityEngine::Rendering::RTHandle*>) == 0x8);
    // private UnityEngine.Rendering.RTHandle m_DepthTargetIndentifiers
    // Size: 0x8
    // Offset: 0x1A0
    ::UnityEngine::Rendering::RTHandle* m_DepthTargetIndentifiers;
    // Field size check
    static_assert(sizeof(::UnityEngine::Rendering::RTHandle*) == 0x8);
    public:
    // Get instance field reference: private UnityEngine.Rendering.RTHandle[] m_ColorTargetIndentifiers
    [[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Rendering::RTHandle*>& dyn_m_ColorTargetIndentifiers();
    // Get instance field reference: private UnityEngine.Rendering.RTHandle m_DepthTargetIndentifiers
    [[deprecated("Use field access instead!")]] ::UnityEngine::Rendering::RTHandle*& dyn_m_DepthTargetIndentifiers();
    // public System.Void Setup(UnityEngine.Rendering.RTHandle colorAttachment, UnityEngine.Rendering.RTHandle renderingLayersTexture, UnityEngine.Rendering.RTHandle depthAttachment)
    // Offset: 0x53151B4
    void Setup(::UnityEngine::Rendering::RTHandle* colorAttachment, ::UnityEngine::Rendering::RTHandle* renderingLayersTexture, ::UnityEngine::Rendering::RTHandle* depthAttachment);
    // public System.Void .ctor(UnityEngine.Rendering.Universal.URPProfileId profilerTag, System.Boolean opaque, UnityEngine.Rendering.Universal.RenderPassEvent evt, UnityEngine.Rendering.RenderQueueRange renderQueueRange, UnityEngine.LayerMask layerMask, UnityEngine.Rendering.StencilState stencilState, System.Int32 stencilReference)
    // Offset: 0x5314FBC
    // Implemented from: UnityEngine.Rendering.Universal.Internal.DrawObjectsPass
    // Base method: System.Void DrawObjectsPass::.ctor(UnityEngine.Rendering.Universal.URPProfileId profilerTag, System.Boolean opaque, UnityEngine.Rendering.Universal.RenderPassEvent evt, UnityEngine.Rendering.RenderQueueRange renderQueueRange, UnityEngine.LayerMask layerMask, UnityEngine.Rendering.StencilState stencilState, System.Int32 stencilReference)
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static DrawObjectsWithRenderingLayersPass* New_ctor(::UnityEngine::Rendering::Universal::URPProfileId profilerTag, bool opaque, ::UnityEngine::Rendering::Universal::RenderPassEvent evt, ::UnityEngine::Rendering::RenderQueueRange renderQueueRange, ::UnityEngine::LayerMask layerMask, ::UnityEngine::Rendering::StencilState stencilState, int stencilReference) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::Universal::Internal::DrawObjectsWithRenderingLayersPass::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<DrawObjectsWithRenderingLayersPass*, creationType>(profilerTag, opaque, evt, renderQueueRange, layerMask, stencilState, stencilReference)));
    }
    // public override System.Void Configure(UnityEngine.Rendering.CommandBuffer cmd, UnityEngine.RenderTextureDescriptor cameraTextureDescriptor)
    // Offset: 0x5315334
    // Implemented from: UnityEngine.Rendering.Universal.ScriptableRenderPass
    // Base method: System.Void ScriptableRenderPass::Configure(UnityEngine.Rendering.CommandBuffer cmd, UnityEngine.RenderTextureDescriptor cameraTextureDescriptor)
    void Configure(::UnityEngine::Rendering::CommandBuffer* cmd, ::UnityEngine::RenderTextureDescriptor cameraTextureDescriptor);
    // protected override System.Void OnExecute(UnityEngine.Rendering.CommandBuffer cmd)
    // Offset: 0x5315340
    // Implemented from: UnityEngine.Rendering.Universal.Internal.DrawObjectsPass
    // Base method: System.Void DrawObjectsPass::OnExecute(UnityEngine.Rendering.CommandBuffer cmd)
    void OnExecute(::UnityEngine::Rendering::CommandBuffer* cmd);
  }; // UnityEngine.Rendering.Universal.Internal.DrawObjectsWithRenderingLayersPass
  // WARNING Not writing size check since size may be invalid!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::Rendering::Universal::Internal::DrawObjectsWithRenderingLayersPass::Setup
// Il2CppName: Setup
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Rendering::Universal::Internal::DrawObjectsWithRenderingLayersPass::*)(::UnityEngine::Rendering::RTHandle*, ::UnityEngine::Rendering::RTHandle*, ::UnityEngine::Rendering::RTHandle*)>(&UnityEngine::Rendering::Universal::Internal::DrawObjectsWithRenderingLayersPass::Setup)> {
  static const MethodInfo* get() {
    static auto* colorAttachment = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "RTHandle")->byval_arg;
    static auto* renderingLayersTexture = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "RTHandle")->byval_arg;
    static auto* depthAttachment = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "RTHandle")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::Universal::Internal::DrawObjectsWithRenderingLayersPass*), "Setup", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{colorAttachment, renderingLayersTexture, depthAttachment});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::Universal::Internal::DrawObjectsWithRenderingLayersPass::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::Rendering::Universal::Internal::DrawObjectsWithRenderingLayersPass::Configure
// Il2CppName: Configure
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Rendering::Universal::Internal::DrawObjectsWithRenderingLayersPass::*)(::UnityEngine::Rendering::CommandBuffer*, ::UnityEngine::RenderTextureDescriptor)>(&UnityEngine::Rendering::Universal::Internal::DrawObjectsWithRenderingLayersPass::Configure)> {
  static const MethodInfo* get() {
    static auto* cmd = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "CommandBuffer")->byval_arg;
    static auto* cameraTextureDescriptor = &::il2cpp_utils::GetClassFromName("UnityEngine", "RenderTextureDescriptor")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::Universal::Internal::DrawObjectsWithRenderingLayersPass*), "Configure", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{cmd, cameraTextureDescriptor});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::Universal::Internal::DrawObjectsWithRenderingLayersPass::OnExecute
// Il2CppName: OnExecute
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Rendering::Universal::Internal::DrawObjectsWithRenderingLayersPass::*)(::UnityEngine::Rendering::CommandBuffer*)>(&UnityEngine::Rendering::Universal::Internal::DrawObjectsWithRenderingLayersPass::OnExecute)> {
  static const MethodInfo* get() {
    static auto* cmd = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "CommandBuffer")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::Universal::Internal::DrawObjectsWithRenderingLayersPass*), "OnExecute", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{cmd});
  }
};
