// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.Rendering.Universal.Internal.ForwardLights
#include "UnityEngine/Rendering/Universal/Internal/ForwardLights.hpp"
// Completed includes
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::Rendering::Universal::Internal::ForwardLights::LightConstantBuffer);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::Rendering::Universal::Internal::ForwardLights::LightConstantBuffer*, "UnityEngine.Rendering.Universal.Internal", "ForwardLights/LightConstantBuffer");
// Type namespace: UnityEngine.Rendering.Universal.Internal
namespace UnityEngine::Rendering::Universal::Internal {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.Rendering.Universal.Internal.ForwardLights/LightConstantBuffer
  // [TokenAttribute] Offset: FFFFFFFF
  class ForwardLights::LightConstantBuffer : public ::Il2CppObject {
    public:
    // Get static field: static public System.Int32 _MainLightPosition
    static int _get__MainLightPosition();
    // Set static field: static public System.Int32 _MainLightPosition
    static void _set__MainLightPosition(int value);
    // Get static field: static public System.Int32 _MainLightColor
    static int _get__MainLightColor();
    // Set static field: static public System.Int32 _MainLightColor
    static void _set__MainLightColor(int value);
    // Get static field: static public System.Int32 _MainLightOcclusionProbesChannel
    static int _get__MainLightOcclusionProbesChannel();
    // Set static field: static public System.Int32 _MainLightOcclusionProbesChannel
    static void _set__MainLightOcclusionProbesChannel(int value);
    // Get static field: static public System.Int32 _MainLightLayerMask
    static int _get__MainLightLayerMask();
    // Set static field: static public System.Int32 _MainLightLayerMask
    static void _set__MainLightLayerMask(int value);
    // Get static field: static public System.Int32 _AdditionalLightsCount
    static int _get__AdditionalLightsCount();
    // Set static field: static public System.Int32 _AdditionalLightsCount
    static void _set__AdditionalLightsCount(int value);
    // Get static field: static public System.Int32 _AdditionalLightsPosition
    static int _get__AdditionalLightsPosition();
    // Set static field: static public System.Int32 _AdditionalLightsPosition
    static void _set__AdditionalLightsPosition(int value);
    // Get static field: static public System.Int32 _AdditionalLightsColor
    static int _get__AdditionalLightsColor();
    // Set static field: static public System.Int32 _AdditionalLightsColor
    static void _set__AdditionalLightsColor(int value);
    // Get static field: static public System.Int32 _AdditionalLightsAttenuation
    static int _get__AdditionalLightsAttenuation();
    // Set static field: static public System.Int32 _AdditionalLightsAttenuation
    static void _set__AdditionalLightsAttenuation(int value);
    // Get static field: static public System.Int32 _AdditionalLightsSpotDir
    static int _get__AdditionalLightsSpotDir();
    // Set static field: static public System.Int32 _AdditionalLightsSpotDir
    static void _set__AdditionalLightsSpotDir(int value);
    // Get static field: static public System.Int32 _AdditionalLightOcclusionProbeChannel
    static int _get__AdditionalLightOcclusionProbeChannel();
    // Set static field: static public System.Int32 _AdditionalLightOcclusionProbeChannel
    static void _set__AdditionalLightOcclusionProbeChannel(int value);
    // Get static field: static public System.Int32 _AdditionalLightsLayerMasks
    static int _get__AdditionalLightsLayerMasks();
    // Set static field: static public System.Int32 _AdditionalLightsLayerMasks
    static void _set__AdditionalLightsLayerMasks(int value);
  }; // UnityEngine.Rendering.Universal.Internal.ForwardLights/LightConstantBuffer
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
