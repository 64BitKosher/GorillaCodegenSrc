// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Including type: Unity.Collections.NativeArray`1
#include "Unity/Collections/NativeArray_1.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Unity::Collections
namespace Unity::Collections {
  // Skipping declaration: Allocator because it is already included!
}
// Completed forward declares
// Type namespace: UnityEngine.Rendering.Universal.UTess
namespace UnityEngine::Rendering::Universal::UTess {
  // Forward declaring type: TessLink
  struct TessLink;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::Rendering::Universal::UTess::TessLink, "UnityEngine.Rendering.Universal.UTess", "TessLink");
// Type namespace: UnityEngine.Rendering.Universal.UTess
namespace UnityEngine::Rendering::Universal::UTess {
  // WARNING Size may be invalid!
  // WARNING Layout: Sequential may not be correctly taken into account!
  // Autogenerated type: UnityEngine.Rendering.Universal.UTess.TessLink
  // [TokenAttribute] Offset: FFFFFFFF
  struct TessLink/*, public ::System::ValueType*/ {
    public:
    public:
    // Unity.Collections.NativeArray`1<System.Int32> roots
    // Size: 0xFFFFFFFF
    // Offset: 0x0
    ::Unity::Collections::NativeArray_1<int> roots;
    // Unity.Collections.NativeArray`1<System.Int32> ranks
    // Size: 0xFFFFFFFF
    // Offset: 0x10
    ::Unity::Collections::NativeArray_1<int> ranks;
    public:
    // Creating value type constructor for type: TessLink
    constexpr TessLink(::Unity::Collections::NativeArray_1<int> roots_ = {}, ::Unity::Collections::NativeArray_1<int> ranks_ = {}) noexcept : roots{roots_}, ranks{ranks_} {}
    // Creating interface conversion operator: operator ::System::ValueType
    operator ::System::ValueType() noexcept {
      return *reinterpret_cast<::System::ValueType*>(this);
    }
    // Get instance field reference: Unity.Collections.NativeArray`1<System.Int32> roots
    [[deprecated("Use field access instead!")]] ::Unity::Collections::NativeArray_1<int>& dyn_roots();
    // Get instance field reference: Unity.Collections.NativeArray`1<System.Int32> ranks
    [[deprecated("Use field access instead!")]] ::Unity::Collections::NativeArray_1<int>& dyn_ranks();
    // static UnityEngine.Rendering.Universal.UTess.TessLink CreateLink(System.Int32 count, Unity.Collections.Allocator allocator)
    // Offset: 0x5321E1C
    static ::UnityEngine::Rendering::Universal::UTess::TessLink CreateLink(int count, ::Unity::Collections::Allocator allocator);
    // static System.Void DestroyLink(UnityEngine.Rendering.Universal.UTess.TessLink link)
    // Offset: 0x5321EE8
    static void DestroyLink(::UnityEngine::Rendering::Universal::UTess::TessLink link);
    // System.Int32 Find(System.Int32 x)
    // Offset: 0x5321F3C
    int Find(int x);
    // System.Void Link(System.Int32 x, System.Int32 y)
    // Offset: 0x5321F74
    void Link(int x, int y);
  }; // UnityEngine.Rendering.Universal.UTess.TessLink
  // WARNING Not writing size check since size may be invalid!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::Rendering::Universal::UTess::TessLink::CreateLink
// Il2CppName: CreateLink
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Rendering::Universal::UTess::TessLink (*)(int, ::Unity::Collections::Allocator)>(&UnityEngine::Rendering::Universal::UTess::TessLink::CreateLink)> {
  static const MethodInfo* get() {
    static auto* count = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* allocator = &::il2cpp_utils::GetClassFromName("Unity.Collections", "Allocator")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::Universal::UTess::TessLink), "CreateLink", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{count, allocator});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::Universal::UTess::TessLink::DestroyLink
// Il2CppName: DestroyLink
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::Rendering::Universal::UTess::TessLink)>(&UnityEngine::Rendering::Universal::UTess::TessLink::DestroyLink)> {
  static const MethodInfo* get() {
    static auto* link = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering.Universal.UTess", "TessLink")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::Universal::UTess::TessLink), "DestroyLink", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{link});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::Universal::UTess::TessLink::Find
// Il2CppName: Find
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::Rendering::Universal::UTess::TessLink::*)(int)>(&UnityEngine::Rendering::Universal::UTess::TessLink::Find)> {
  static const MethodInfo* get() {
    static auto* x = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::Universal::UTess::TessLink), "Find", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{x});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::Universal::UTess::TessLink::Link
// Il2CppName: Link
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Rendering::Universal::UTess::TessLink::*)(int, int)>(&UnityEngine::Rendering::Universal::UTess::TessLink::Link)> {
  static const MethodInfo* get() {
    static auto* x = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* y = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::Universal::UTess::TessLink), "Link", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{x, y});
  }
};
