// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Including type: UnityEngine.Rendering.Universal.UTess.ArraySlice`1
#include "UnityEngine/Rendering/Universal/UTess/ArraySlice_1.hpp"
// Completed includes
// Type namespace: UnityEngine.Rendering.Universal.UTess
namespace UnityEngine::Rendering::Universal::UTess {
  // Forward declaring type: UStar
  struct UStar;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::Rendering::Universal::UTess::UStar, "UnityEngine.Rendering.Universal.UTess", "UStar");
// Type namespace: UnityEngine.Rendering.Universal.UTess
namespace UnityEngine::Rendering::Universal::UTess {
  // WARNING Size may be invalid!
  // WARNING Layout: Sequential may not be correctly taken into account!
  // Autogenerated type: UnityEngine.Rendering.Universal.UTess.UStar
  // [TokenAttribute] Offset: FFFFFFFF
  struct UStar/*, public ::System::ValueType*/ {
    public:
    public:
    // public UnityEngine.Rendering.Universal.UTess.ArraySlice`1<System.Int32> points
    // Size: 0xFFFFFFFF
    // Offset: 0x0
    ::UnityEngine::Rendering::Universal::UTess::ArraySlice_1<int> points;
    // public System.Int32 pointCount
    // Size: 0x4
    // Offset: 0x10
    int pointCount;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Creating value type constructor for type: UStar
    constexpr UStar(::UnityEngine::Rendering::Universal::UTess::ArraySlice_1<int> points_ = {}, int pointCount_ = {}) noexcept : points{points_}, pointCount{pointCount_} {}
    // Creating interface conversion operator: operator ::System::ValueType
    operator ::System::ValueType() noexcept {
      return *reinterpret_cast<::System::ValueType*>(this);
    }
    // Get instance field reference: public UnityEngine.Rendering.Universal.UTess.ArraySlice`1<System.Int32> points
    [[deprecated("Use field access instead!")]] ::UnityEngine::Rendering::Universal::UTess::ArraySlice_1<int>& dyn_points();
    // Get instance field reference: public System.Int32 pointCount
    [[deprecated("Use field access instead!")]] int& dyn_pointCount();
  }; // UnityEngine.Rendering.Universal.UTess.UStar
  // WARNING Not writing size check since size may be invalid!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
