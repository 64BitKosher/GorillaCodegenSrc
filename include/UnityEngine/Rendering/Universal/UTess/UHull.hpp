// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Including type: Unity.Mathematics.float2
#include "Unity/Mathematics/float2.hpp"
// Including type: UnityEngine.Rendering.Universal.UTess.ArraySlice`1
#include "UnityEngine/Rendering/Universal/UTess/ArraySlice_1.hpp"
// Completed includes
// Type namespace: UnityEngine.Rendering.Universal.UTess
namespace UnityEngine::Rendering::Universal::UTess {
  // Forward declaring type: UHull
  struct UHull;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::Rendering::Universal::UTess::UHull, "UnityEngine.Rendering.Universal.UTess", "UHull");
// Type namespace: UnityEngine.Rendering.Universal.UTess
namespace UnityEngine::Rendering::Universal::UTess {
  // WARNING Size may be invalid!
  // WARNING Layout: Sequential may not be correctly taken into account!
  // Autogenerated type: UnityEngine.Rendering.Universal.UTess.UHull
  // [TokenAttribute] Offset: FFFFFFFF
  struct UHull/*, public ::System::ValueType*/ {
    public:
    public:
    // public Unity.Mathematics.float2 a
    // Size: 0x8
    // Offset: 0x0
    ::Unity::Mathematics::float2 a;
    // Field size check
    static_assert(sizeof(::Unity::Mathematics::float2) == 0x8);
    // public Unity.Mathematics.float2 b
    // Size: 0x8
    // Offset: 0x8
    ::Unity::Mathematics::float2 b;
    // Field size check
    static_assert(sizeof(::Unity::Mathematics::float2) == 0x8);
    // public System.Int32 idx
    // Size: 0x4
    // Offset: 0x10
    int idx;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // public UnityEngine.Rendering.Universal.UTess.ArraySlice`1<System.Int32> ilarray
    // Size: 0xFFFFFFFF
    // Offset: 0x18
    ::UnityEngine::Rendering::Universal::UTess::ArraySlice_1<int> ilarray;
    // public System.Int32 ilcount
    // Size: 0x4
    // Offset: 0x28
    int ilcount;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // public UnityEngine.Rendering.Universal.UTess.ArraySlice`1<System.Int32> iuarray
    // Size: 0xFFFFFFFF
    // Offset: 0x30
    ::UnityEngine::Rendering::Universal::UTess::ArraySlice_1<int> iuarray;
    // public System.Int32 iucount
    // Size: 0x4
    // Offset: 0x40
    int iucount;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Creating value type constructor for type: UHull
    constexpr UHull(::Unity::Mathematics::float2 a_ = {}, ::Unity::Mathematics::float2 b_ = {}, int idx_ = {}, ::UnityEngine::Rendering::Universal::UTess::ArraySlice_1<int> ilarray_ = {}, int ilcount_ = {}, ::UnityEngine::Rendering::Universal::UTess::ArraySlice_1<int> iuarray_ = {}, int iucount_ = {}) noexcept : a{a_}, b{b_}, idx{idx_}, ilarray{ilarray_}, ilcount{ilcount_}, iuarray{iuarray_}, iucount{iucount_} {}
    // Creating interface conversion operator: operator ::System::ValueType
    operator ::System::ValueType() noexcept {
      return *reinterpret_cast<::System::ValueType*>(this);
    }
    // Get instance field reference: public Unity.Mathematics.float2 a
    [[deprecated("Use field access instead!")]] ::Unity::Mathematics::float2& dyn_a();
    // Get instance field reference: public Unity.Mathematics.float2 b
    [[deprecated("Use field access instead!")]] ::Unity::Mathematics::float2& dyn_b();
    // Get instance field reference: public System.Int32 idx
    [[deprecated("Use field access instead!")]] int& dyn_idx();
    // Get instance field reference: public UnityEngine.Rendering.Universal.UTess.ArraySlice`1<System.Int32> ilarray
    [[deprecated("Use field access instead!")]] ::UnityEngine::Rendering::Universal::UTess::ArraySlice_1<int>& dyn_ilarray();
    // Get instance field reference: public System.Int32 ilcount
    [[deprecated("Use field access instead!")]] int& dyn_ilcount();
    // Get instance field reference: public UnityEngine.Rendering.Universal.UTess.ArraySlice`1<System.Int32> iuarray
    [[deprecated("Use field access instead!")]] ::UnityEngine::Rendering::Universal::UTess::ArraySlice_1<int>& dyn_iuarray();
    // Get instance field reference: public System.Int32 iucount
    [[deprecated("Use field access instead!")]] int& dyn_iucount();
  }; // UnityEngine.Rendering.Universal.UTess.UHull
  // WARNING Not writing size check since size may be invalid!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
