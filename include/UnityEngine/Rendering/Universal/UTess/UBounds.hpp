// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Including type: Unity.Mathematics.double2
#include "Unity/Mathematics/double2.hpp"
// Completed includes
// Type namespace: UnityEngine.Rendering.Universal.UTess
namespace UnityEngine::Rendering::Universal::UTess {
  // Forward declaring type: UBounds
  struct UBounds;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::Rendering::Universal::UTess::UBounds, "UnityEngine.Rendering.Universal.UTess", "UBounds");
// Type namespace: UnityEngine.Rendering.Universal.UTess
namespace UnityEngine::Rendering::Universal::UTess {
  // Size: 0x20
  #pragma pack(push, 1)
  // WARNING Layout: Sequential may not be correctly taken into account!
  // Autogenerated type: UnityEngine.Rendering.Universal.UTess.UBounds
  // [TokenAttribute] Offset: FFFFFFFF
  struct UBounds/*, public ::System::ValueType*/ {
    public:
    public:
    // public Unity.Mathematics.double2 min
    // Size: 0x10
    // Offset: 0x0
    ::Unity::Mathematics::double2 min;
    // Field size check
    static_assert(sizeof(::Unity::Mathematics::double2) == 0x10);
    // public Unity.Mathematics.double2 max
    // Size: 0x10
    // Offset: 0x10
    ::Unity::Mathematics::double2 max;
    // Field size check
    static_assert(sizeof(::Unity::Mathematics::double2) == 0x10);
    public:
    // Creating value type constructor for type: UBounds
    constexpr UBounds(::Unity::Mathematics::double2 min_ = {}, ::Unity::Mathematics::double2 max_ = {}) noexcept : min{min_}, max{max_} {}
    // Creating interface conversion operator: operator ::System::ValueType
    operator ::System::ValueType() noexcept {
      return *reinterpret_cast<::System::ValueType*>(this);
    }
    // Get instance field reference: public Unity.Mathematics.double2 min
    [[deprecated("Use field access instead!")]] ::Unity::Mathematics::double2& dyn_min();
    // Get instance field reference: public Unity.Mathematics.double2 max
    [[deprecated("Use field access instead!")]] ::Unity::Mathematics::double2& dyn_max();
  }; // UnityEngine.Rendering.Universal.UTess.UBounds
  #pragma pack(pop)
  static check_size<sizeof(UBounds), 16 + sizeof(::Unity::Mathematics::double2)> __UnityEngine_Rendering_Universal_UTess_UBoundsSizeCheck;
  static_assert(sizeof(UBounds) == 0x20);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
