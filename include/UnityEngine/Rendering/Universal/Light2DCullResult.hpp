// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.Rendering.Universal.ILight2DCullResult
#include "UnityEngine/Rendering/Universal/ILight2DCullResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::Rendering::Universal
namespace UnityEngine::Rendering::Universal {
  // Forward declaring type: Light2D
  class Light2D;
  // Forward declaring type: ShadowCasterGroup2D
  class ShadowCasterGroup2D;
  // Forward declaring type: LightStats
  struct LightStats;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Forward declaring namespace: UnityEngine::Rendering
namespace UnityEngine::Rendering {
  // Forward declaring type: ScriptableCullingParameters
  struct ScriptableCullingParameters;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Camera
  class Camera;
}
// Completed forward declares
// Type namespace: UnityEngine.Rendering.Universal
namespace UnityEngine::Rendering::Universal {
  // Forward declaring type: Light2DCullResult
  class Light2DCullResult;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::Rendering::Universal::Light2DCullResult);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::Rendering::Universal::Light2DCullResult*, "UnityEngine.Rendering.Universal", "Light2DCullResult");
// Type namespace: UnityEngine.Rendering.Universal
namespace UnityEngine::Rendering::Universal {
  // Size: 0x20
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.Rendering.Universal.Light2DCullResult
  // [TokenAttribute] Offset: FFFFFFFF
  class Light2DCullResult : public ::Il2CppObject/*, public ::UnityEngine::Rendering::Universal::ILight2DCullResult*/ {
    public:
    // Nested type: ::UnityEngine::Rendering::Universal::Light2DCullResult::$$c
    class $$c;
    public:
    // private System.Collections.Generic.List`1<UnityEngine.Rendering.Universal.Light2D> m_VisibleLights
    // Size: 0x8
    // Offset: 0x10
    ::System::Collections::Generic::List_1<::UnityEngine::Rendering::Universal::Light2D*>* m_VisibleLights;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::UnityEngine::Rendering::Universal::Light2D*>*) == 0x8);
    // private System.Collections.Generic.List`1<UnityEngine.Rendering.Universal.ShadowCasterGroup2D> m_VisibleShadows
    // Size: 0x8
    // Offset: 0x18
    ::System::Collections::Generic::List_1<::UnityEngine::Rendering::Universal::ShadowCasterGroup2D*>* m_VisibleShadows;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::UnityEngine::Rendering::Universal::ShadowCasterGroup2D*>*) == 0x8);
    public:
    // Creating interface conversion operator: operator ::UnityEngine::Rendering::Universal::ILight2DCullResult
    operator ::UnityEngine::Rendering::Universal::ILight2DCullResult() noexcept {
      return *reinterpret_cast<::UnityEngine::Rendering::Universal::ILight2DCullResult*>(this);
    }
    // Get instance field reference: private System.Collections.Generic.List`1<UnityEngine.Rendering.Universal.Light2D> m_VisibleLights
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::Rendering::Universal::Light2D*>*& dyn_m_VisibleLights();
    // Get instance field reference: private System.Collections.Generic.List`1<UnityEngine.Rendering.Universal.ShadowCasterGroup2D> m_VisibleShadows
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::Rendering::Universal::ShadowCasterGroup2D*>*& dyn_m_VisibleShadows();
    // public System.Collections.Generic.List`1<UnityEngine.Rendering.Universal.Light2D> get_visibleLights()
    // Offset: 0x527F4E0
    ::System::Collections::Generic::List_1<::UnityEngine::Rendering::Universal::Light2D*>* get_visibleLights();
    // public System.Collections.Generic.List`1<UnityEngine.Rendering.Universal.ShadowCasterGroup2D> get_visibleShadows()
    // Offset: 0x527F4E8
    ::System::Collections::Generic::List_1<::UnityEngine::Rendering::Universal::ShadowCasterGroup2D*>* get_visibleShadows();
    // public System.Boolean IsSceneLit()
    // Offset: 0x527F4F0
    bool IsSceneLit();
    // public UnityEngine.Rendering.Universal.LightStats GetLightStatsByLayer(System.Int32 layer)
    // Offset: 0x527F598
    ::UnityEngine::Rendering::Universal::LightStats GetLightStatsByLayer(int layer);
    // public System.Void SetupCulling(ref UnityEngine.Rendering.ScriptableCullingParameters cullingParameters, UnityEngine.Camera camera)
    // Offset: 0x527F760
    void SetupCulling(ByRef<::UnityEngine::Rendering::ScriptableCullingParameters> cullingParameters, ::UnityEngine::Camera* camera);
    // public System.Void .ctor()
    // Offset: 0x52800F8
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static Light2DCullResult* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::Universal::Light2DCullResult::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<Light2DCullResult*, creationType>()));
    }
  }; // UnityEngine.Rendering.Universal.Light2DCullResult
  #pragma pack(pop)
  static check_size<sizeof(Light2DCullResult), 24 + sizeof(::System::Collections::Generic::List_1<::UnityEngine::Rendering::Universal::ShadowCasterGroup2D*>*)> __UnityEngine_Rendering_Universal_Light2DCullResultSizeCheck;
  static_assert(sizeof(Light2DCullResult) == 0x20);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::Rendering::Universal::Light2DCullResult::get_visibleLights
// Il2CppName: get_visibleLights
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::List_1<::UnityEngine::Rendering::Universal::Light2D*>* (UnityEngine::Rendering::Universal::Light2DCullResult::*)()>(&UnityEngine::Rendering::Universal::Light2DCullResult::get_visibleLights)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::Universal::Light2DCullResult*), "get_visibleLights", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::Universal::Light2DCullResult::get_visibleShadows
// Il2CppName: get_visibleShadows
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::List_1<::UnityEngine::Rendering::Universal::ShadowCasterGroup2D*>* (UnityEngine::Rendering::Universal::Light2DCullResult::*)()>(&UnityEngine::Rendering::Universal::Light2DCullResult::get_visibleShadows)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::Universal::Light2DCullResult*), "get_visibleShadows", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::Universal::Light2DCullResult::IsSceneLit
// Il2CppName: IsSceneLit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::Rendering::Universal::Light2DCullResult::*)()>(&UnityEngine::Rendering::Universal::Light2DCullResult::IsSceneLit)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::Universal::Light2DCullResult*), "IsSceneLit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::Universal::Light2DCullResult::GetLightStatsByLayer
// Il2CppName: GetLightStatsByLayer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Rendering::Universal::LightStats (UnityEngine::Rendering::Universal::Light2DCullResult::*)(int)>(&UnityEngine::Rendering::Universal::Light2DCullResult::GetLightStatsByLayer)> {
  static const MethodInfo* get() {
    static auto* layer = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::Universal::Light2DCullResult*), "GetLightStatsByLayer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{layer});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::Universal::Light2DCullResult::SetupCulling
// Il2CppName: SetupCulling
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Rendering::Universal::Light2DCullResult::*)(ByRef<::UnityEngine::Rendering::ScriptableCullingParameters>, ::UnityEngine::Camera*)>(&UnityEngine::Rendering::Universal::Light2DCullResult::SetupCulling)> {
  static const MethodInfo* get() {
    static auto* cullingParameters = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "ScriptableCullingParameters")->this_arg;
    static auto* camera = &::il2cpp_utils::GetClassFromName("UnityEngine", "Camera")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::Universal::Light2DCullResult*), "SetupCulling", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{cullingParameters, camera});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::Universal::Light2DCullResult::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
