// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.Rendering.Universal.UniversalRenderPipeline/Profiling/Pipeline
#include "UnityEngine/Rendering/Universal/UniversalRenderPipeline_Profiling_Pipeline.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: String
  class String;
}
// Forward declaring namespace: UnityEngine::Rendering
namespace UnityEngine::Rendering {
  // Forward declaring type: ProfilingSampler
  class ProfilingSampler;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::Rendering::Universal::UniversalRenderPipeline::Profiling::Pipeline::Renderer);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::Rendering::Universal::UniversalRenderPipeline::Profiling::Pipeline::Renderer*, "UnityEngine.Rendering.Universal", "UniversalRenderPipeline/Profiling/Pipeline/Renderer");
// Type namespace: UnityEngine.Rendering.Universal
namespace UnityEngine::Rendering::Universal {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.Rendering.Universal.UniversalRenderPipeline/Profiling/Pipeline/Renderer
  // [TokenAttribute] Offset: FFFFFFFF
  class UniversalRenderPipeline::Profiling::Pipeline::Renderer : public ::Il2CppObject {
    public:
    // static field const value: static private System.String k_Name
    static constexpr const char* k_Name = "ScriptableRenderer";
    // Get static field: static private System.String k_Name
    static ::StringW _get_k_Name();
    // Set static field: static private System.String k_Name
    static void _set_k_Name(::StringW value);
    // Get static field: static public readonly UnityEngine.Rendering.ProfilingSampler setupCullingParameters
    static ::UnityEngine::Rendering::ProfilingSampler* _get_setupCullingParameters();
    // Set static field: static public readonly UnityEngine.Rendering.ProfilingSampler setupCullingParameters
    static void _set_setupCullingParameters(::UnityEngine::Rendering::ProfilingSampler* value);
    // Get static field: static public readonly UnityEngine.Rendering.ProfilingSampler setup
    static ::UnityEngine::Rendering::ProfilingSampler* _get_setup();
    // Set static field: static public readonly UnityEngine.Rendering.ProfilingSampler setup
    static void _set_setup(::UnityEngine::Rendering::ProfilingSampler* value);
    // static private System.Void .cctor()
    // Offset: 0x52F797C
    static void _cctor();
  }; // UnityEngine.Rendering.Universal.UniversalRenderPipeline/Profiling/Pipeline/Renderer
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::Rendering::Universal::UniversalRenderPipeline::Profiling::Pipeline::Renderer::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&UnityEngine::Rendering::Universal::UniversalRenderPipeline::Profiling::Pipeline::Renderer::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::Universal::UniversalRenderPipeline::Profiling::Pipeline::Renderer*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
