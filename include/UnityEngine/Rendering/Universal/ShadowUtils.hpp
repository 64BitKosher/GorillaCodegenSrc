// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::Rendering
namespace UnityEngine::Rendering {
  // Forward declaring type: CullingResults
  struct CullingResults;
  // Forward declaring type: ShadowSplitData
  struct ShadowSplitData;
  // Forward declaring type: CommandBuffer
  class CommandBuffer;
  // Forward declaring type: ScriptableRenderContext
  struct ScriptableRenderContext;
  // Forward declaring type: ShadowDrawingSettings
  struct ShadowDrawingSettings;
  // Forward declaring type: VisibleLight
  struct VisibleLight;
  // Forward declaring type: RTHandle
  class RTHandle;
}
// Forward declaring namespace: UnityEngine::Rendering::Universal
namespace UnityEngine::Rendering::Universal {
  // Forward declaring type: ShadowData
  struct ShadowData;
  // Forward declaring type: ShadowSliceData
  struct ShadowSliceData;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Vector4
  struct Vector4;
  // Forward declaring type: Matrix4x4
  struct Matrix4x4;
  // Forward declaring type: CubemapFace
  struct CubemapFace;
  // Forward declaring type: RenderTextureDescriptor
  struct RenderTextureDescriptor;
  // Forward declaring type: RenderTexture
  class RenderTexture;
  // Forward declaring type: Light
  class Light;
}
// Completed forward declares
// Type namespace: UnityEngine.Rendering.Universal
namespace UnityEngine::Rendering::Universal {
  // Forward declaring type: ShadowUtils
  class ShadowUtils;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::Rendering::Universal::ShadowUtils);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::Rendering::Universal::ShadowUtils*, "UnityEngine.Rendering.Universal", "ShadowUtils");
// Type namespace: UnityEngine.Rendering.Universal
namespace UnityEngine::Rendering::Universal {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.Rendering.Universal.ShadowUtils
  // [TokenAttribute] Offset: FFFFFFFF
  class ShadowUtils : public ::Il2CppObject {
    public:
    // Get static field: static readonly System.Boolean m_ForceShadowPointSampling
    static bool _get_m_ForceShadowPointSampling();
    // Set static field: static readonly System.Boolean m_ForceShadowPointSampling
    static void _set_m_ForceShadowPointSampling(bool value);
    // static private System.Void .cctor()
    // Offset: 0x52DCEE4
    static void _cctor();
    // static public System.Boolean ExtractDirectionalLightMatrix(ref UnityEngine.Rendering.CullingResults cullResults, ref UnityEngine.Rendering.Universal.ShadowData shadowData, System.Int32 shadowLightIndex, System.Int32 cascadeIndex, System.Int32 shadowmapWidth, System.Int32 shadowmapHeight, System.Int32 shadowResolution, System.Single shadowNearPlane, out UnityEngine.Vector4 cascadeSplitDistance, out UnityEngine.Rendering.Universal.ShadowSliceData shadowSliceData, out UnityEngine.Matrix4x4 viewMatrix, out UnityEngine.Matrix4x4 projMatrix)
    // Offset: 0x52DCF78
    static bool ExtractDirectionalLightMatrix(ByRef<::UnityEngine::Rendering::CullingResults> cullResults, ByRef<::UnityEngine::Rendering::Universal::ShadowData> shadowData, int shadowLightIndex, int cascadeIndex, int shadowmapWidth, int shadowmapHeight, int shadowResolution, float shadowNearPlane, ByRef<::UnityEngine::Vector4> cascadeSplitDistance, ByRef<::UnityEngine::Rendering::Universal::ShadowSliceData> shadowSliceData, ByRef<::UnityEngine::Matrix4x4> viewMatrix, ByRef<::UnityEngine::Matrix4x4> projMatrix);
    // static public System.Boolean ExtractDirectionalLightMatrix(ref UnityEngine.Rendering.CullingResults cullResults, ref UnityEngine.Rendering.Universal.ShadowData shadowData, System.Int32 shadowLightIndex, System.Int32 cascadeIndex, System.Int32 shadowmapWidth, System.Int32 shadowmapHeight, System.Int32 shadowResolution, System.Single shadowNearPlane, out UnityEngine.Vector4 cascadeSplitDistance, out UnityEngine.Rendering.Universal.ShadowSliceData shadowSliceData)
    // Offset: 0x52DD0B4
    static bool ExtractDirectionalLightMatrix(ByRef<::UnityEngine::Rendering::CullingResults> cullResults, ByRef<::UnityEngine::Rendering::Universal::ShadowData> shadowData, int shadowLightIndex, int cascadeIndex, int shadowmapWidth, int shadowmapHeight, int shadowResolution, float shadowNearPlane, ByRef<::UnityEngine::Vector4> cascadeSplitDistance, ByRef<::UnityEngine::Rendering::Universal::ShadowSliceData> shadowSliceData);
    // static public System.Boolean ExtractSpotLightMatrix(ref UnityEngine.Rendering.CullingResults cullResults, ref UnityEngine.Rendering.Universal.ShadowData shadowData, System.Int32 shadowLightIndex, out UnityEngine.Matrix4x4 shadowMatrix, out UnityEngine.Matrix4x4 viewMatrix, out UnityEngine.Matrix4x4 projMatrix, out UnityEngine.Rendering.ShadowSplitData splitData)
    // Offset: 0x52DD510
    static bool ExtractSpotLightMatrix(ByRef<::UnityEngine::Rendering::CullingResults> cullResults, ByRef<::UnityEngine::Rendering::Universal::ShadowData> shadowData, int shadowLightIndex, ByRef<::UnityEngine::Matrix4x4> shadowMatrix, ByRef<::UnityEngine::Matrix4x4> viewMatrix, ByRef<::UnityEngine::Matrix4x4> projMatrix, ByRef<::UnityEngine::Rendering::ShadowSplitData> splitData);
    // static public System.Boolean ExtractPointLightMatrix(ref UnityEngine.Rendering.CullingResults cullResults, ref UnityEngine.Rendering.Universal.ShadowData shadowData, System.Int32 shadowLightIndex, UnityEngine.CubemapFace cubemapFace, System.Single fovBias, out UnityEngine.Matrix4x4 shadowMatrix, out UnityEngine.Matrix4x4 viewMatrix, out UnityEngine.Matrix4x4 projMatrix, out UnityEngine.Rendering.ShadowSplitData splitData)
    // Offset: 0x52DD61C
    static bool ExtractPointLightMatrix(ByRef<::UnityEngine::Rendering::CullingResults> cullResults, ByRef<::UnityEngine::Rendering::Universal::ShadowData> shadowData, int shadowLightIndex, ::UnityEngine::CubemapFace cubemapFace, float fovBias, ByRef<::UnityEngine::Matrix4x4> shadowMatrix, ByRef<::UnityEngine::Matrix4x4> viewMatrix, ByRef<::UnityEngine::Matrix4x4> projMatrix, ByRef<::UnityEngine::Rendering::ShadowSplitData> splitData);
    // static public System.Void RenderShadowSlice(UnityEngine.Rendering.CommandBuffer cmd, ref UnityEngine.Rendering.ScriptableRenderContext context, ref UnityEngine.Rendering.Universal.ShadowSliceData shadowSliceData, ref UnityEngine.Rendering.ShadowDrawingSettings settings, UnityEngine.Matrix4x4 proj, UnityEngine.Matrix4x4 view)
    // Offset: 0x52DD778
    static void RenderShadowSlice(::UnityEngine::Rendering::CommandBuffer* cmd, ByRef<::UnityEngine::Rendering::ScriptableRenderContext> context, ByRef<::UnityEngine::Rendering::Universal::ShadowSliceData> shadowSliceData, ByRef<::UnityEngine::Rendering::ShadowDrawingSettings> settings, ::UnityEngine::Matrix4x4 proj, ::UnityEngine::Matrix4x4 view);
    // static public System.Void RenderShadowSlice(UnityEngine.Rendering.CommandBuffer cmd, ref UnityEngine.Rendering.ScriptableRenderContext context, ref UnityEngine.Rendering.Universal.ShadowSliceData shadowSliceData, ref UnityEngine.Rendering.ShadowDrawingSettings settings)
    // Offset: 0x52DD894
    static void RenderShadowSlice(::UnityEngine::Rendering::CommandBuffer* cmd, ByRef<::UnityEngine::Rendering::ScriptableRenderContext> context, ByRef<::UnityEngine::Rendering::Universal::ShadowSliceData> shadowSliceData, ByRef<::UnityEngine::Rendering::ShadowDrawingSettings> settings);
    // static public System.Int32 GetMaxTileResolutionInAtlas(System.Int32 atlasWidth, System.Int32 atlasHeight, System.Int32 tileCount)
    // Offset: 0x52DD964
    static int GetMaxTileResolutionInAtlas(int atlasWidth, int atlasHeight, int tileCount);
    // static public System.Void ApplySliceTransform(ref UnityEngine.Rendering.Universal.ShadowSliceData shadowSliceData, System.Int32 atlasWidth, System.Int32 atlasHeight)
    // Offset: 0x52DD3E0
    static void ApplySliceTransform(ByRef<::UnityEngine::Rendering::Universal::ShadowSliceData> shadowSliceData, int atlasWidth, int atlasHeight);
    // static public UnityEngine.Vector4 GetShadowBias(ref UnityEngine.Rendering.VisibleLight shadowLight, System.Int32 shadowLightIndex, ref UnityEngine.Rendering.Universal.ShadowData shadowData, UnityEngine.Matrix4x4 lightProjectionMatrix, System.Single shadowResolution)
    // Offset: 0x52DD990
    static ::UnityEngine::Vector4 GetShadowBias(ByRef<::UnityEngine::Rendering::VisibleLight> shadowLight, int shadowLightIndex, ByRef<::UnityEngine::Rendering::Universal::ShadowData> shadowData, ::UnityEngine::Matrix4x4 lightProjectionMatrix, float shadowResolution);
    // static System.Void GetScaleAndBiasForLinearDistanceFade(System.Single fadeDistance, System.Single border, out System.Single scale, out System.Single bias)
    // Offset: 0x52DDD2C
    static void GetScaleAndBiasForLinearDistanceFade(float fadeDistance, float border, ByRef<float> scale, ByRef<float> bias);
    // static public System.Void SetupShadowCasterConstantBuffer(UnityEngine.Rendering.CommandBuffer cmd, ref UnityEngine.Rendering.VisibleLight shadowLight, UnityEngine.Vector4 shadowBias)
    // Offset: 0x52DDD80
    static void SetupShadowCasterConstantBuffer(::UnityEngine::Rendering::CommandBuffer* cmd, ByRef<::UnityEngine::Rendering::VisibleLight> shadowLight, ::UnityEngine::Vector4 shadowBias);
    // static private UnityEngine.RenderTextureDescriptor GetTemporaryShadowTextureDescriptor(System.Int32 width, System.Int32 height, System.Int32 bits)
    // Offset: 0x52DDEE4
    static ::UnityEngine::RenderTextureDescriptor GetTemporaryShadowTextureDescriptor(int width, int height, int bits);
    // static public UnityEngine.RenderTexture GetTemporaryShadowTexture(System.Int32 width, System.Int32 height, System.Int32 bits)
    // Offset: 0x52DDFFC
    static ::UnityEngine::RenderTexture* GetTemporaryShadowTexture(int width, int height, int bits);
    // static public System.Boolean ShadowRTNeedsReAlloc(UnityEngine.Rendering.RTHandle handle, System.Int32 width, System.Int32 height, System.Int32 bits, System.Int32 anisoLevel, System.Single mipMapBias, System.String name)
    // Offset: 0x52DE0BC
    static bool ShadowRTNeedsReAlloc(::UnityEngine::Rendering::RTHandle* handle, int width, int height, int bits, int anisoLevel, float mipMapBias, ::StringW name);
    // static public UnityEngine.Rendering.RTHandle AllocShadowRT(System.Int32 width, System.Int32 height, System.Int32 bits, System.Int32 anisoLevel, System.Single mipMapBias, System.String name)
    // Offset: 0x52DE250
    static ::UnityEngine::Rendering::RTHandle* AllocShadowRT(int width, int height, int bits, int anisoLevel, float mipMapBias, ::StringW name);
    // static public System.Boolean ShadowRTReAllocateIfNeeded(ref UnityEngine.Rendering.RTHandle handle, System.Int32 width, System.Int32 height, System.Int32 bits, System.Int32 anisoLevel, System.Single mipMapBias, System.String name)
    // Offset: 0x52DE33C
    static bool ShadowRTReAllocateIfNeeded(ByRef<::UnityEngine::Rendering::RTHandle*> handle, int width, int height, int bits, int anisoLevel, float mipMapBias, ::StringW name);
    // static private UnityEngine.Matrix4x4 GetShadowTransform(UnityEngine.Matrix4x4 proj, UnityEngine.Matrix4x4 view)
    // Offset: 0x52DD26C
    static ::UnityEngine::Matrix4x4 GetShadowTransform(::UnityEngine::Matrix4x4 proj, ::UnityEngine::Matrix4x4 view);
    // static System.Single SoftShadowQualityToShaderProperty(UnityEngine.Light light, System.Boolean softShadowsEnabled)
    // Offset: 0x52DE438
    static float SoftShadowQualityToShaderProperty(::UnityEngine::Light* light, bool softShadowsEnabled);
  }; // UnityEngine.Rendering.Universal.ShadowUtils
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::Rendering::Universal::ShadowUtils::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&UnityEngine::Rendering::Universal::ShadowUtils::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::Universal::ShadowUtils*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::Universal::ShadowUtils::ExtractDirectionalLightMatrix
// Il2CppName: ExtractDirectionalLightMatrix
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(ByRef<::UnityEngine::Rendering::CullingResults>, ByRef<::UnityEngine::Rendering::Universal::ShadowData>, int, int, int, int, int, float, ByRef<::UnityEngine::Vector4>, ByRef<::UnityEngine::Rendering::Universal::ShadowSliceData>, ByRef<::UnityEngine::Matrix4x4>, ByRef<::UnityEngine::Matrix4x4>)>(&UnityEngine::Rendering::Universal::ShadowUtils::ExtractDirectionalLightMatrix)> {
  static const MethodInfo* get() {
    static auto* cullResults = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "CullingResults")->this_arg;
    static auto* shadowData = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering.Universal", "ShadowData")->this_arg;
    static auto* shadowLightIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* cascadeIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* shadowmapWidth = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* shadowmapHeight = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* shadowResolution = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* shadowNearPlane = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* cascadeSplitDistance = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector4")->this_arg;
    static auto* shadowSliceData = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering.Universal", "ShadowSliceData")->this_arg;
    static auto* viewMatrix = &::il2cpp_utils::GetClassFromName("UnityEngine", "Matrix4x4")->this_arg;
    static auto* projMatrix = &::il2cpp_utils::GetClassFromName("UnityEngine", "Matrix4x4")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::Universal::ShadowUtils*), "ExtractDirectionalLightMatrix", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{cullResults, shadowData, shadowLightIndex, cascadeIndex, shadowmapWidth, shadowmapHeight, shadowResolution, shadowNearPlane, cascadeSplitDistance, shadowSliceData, viewMatrix, projMatrix});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::Universal::ShadowUtils::ExtractDirectionalLightMatrix
// Il2CppName: ExtractDirectionalLightMatrix
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(ByRef<::UnityEngine::Rendering::CullingResults>, ByRef<::UnityEngine::Rendering::Universal::ShadowData>, int, int, int, int, int, float, ByRef<::UnityEngine::Vector4>, ByRef<::UnityEngine::Rendering::Universal::ShadowSliceData>)>(&UnityEngine::Rendering::Universal::ShadowUtils::ExtractDirectionalLightMatrix)> {
  static const MethodInfo* get() {
    static auto* cullResults = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "CullingResults")->this_arg;
    static auto* shadowData = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering.Universal", "ShadowData")->this_arg;
    static auto* shadowLightIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* cascadeIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* shadowmapWidth = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* shadowmapHeight = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* shadowResolution = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* shadowNearPlane = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* cascadeSplitDistance = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector4")->this_arg;
    static auto* shadowSliceData = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering.Universal", "ShadowSliceData")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::Universal::ShadowUtils*), "ExtractDirectionalLightMatrix", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{cullResults, shadowData, shadowLightIndex, cascadeIndex, shadowmapWidth, shadowmapHeight, shadowResolution, shadowNearPlane, cascadeSplitDistance, shadowSliceData});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::Universal::ShadowUtils::ExtractSpotLightMatrix
// Il2CppName: ExtractSpotLightMatrix
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(ByRef<::UnityEngine::Rendering::CullingResults>, ByRef<::UnityEngine::Rendering::Universal::ShadowData>, int, ByRef<::UnityEngine::Matrix4x4>, ByRef<::UnityEngine::Matrix4x4>, ByRef<::UnityEngine::Matrix4x4>, ByRef<::UnityEngine::Rendering::ShadowSplitData>)>(&UnityEngine::Rendering::Universal::ShadowUtils::ExtractSpotLightMatrix)> {
  static const MethodInfo* get() {
    static auto* cullResults = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "CullingResults")->this_arg;
    static auto* shadowData = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering.Universal", "ShadowData")->this_arg;
    static auto* shadowLightIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* shadowMatrix = &::il2cpp_utils::GetClassFromName("UnityEngine", "Matrix4x4")->this_arg;
    static auto* viewMatrix = &::il2cpp_utils::GetClassFromName("UnityEngine", "Matrix4x4")->this_arg;
    static auto* projMatrix = &::il2cpp_utils::GetClassFromName("UnityEngine", "Matrix4x4")->this_arg;
    static auto* splitData = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "ShadowSplitData")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::Universal::ShadowUtils*), "ExtractSpotLightMatrix", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{cullResults, shadowData, shadowLightIndex, shadowMatrix, viewMatrix, projMatrix, splitData});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::Universal::ShadowUtils::ExtractPointLightMatrix
// Il2CppName: ExtractPointLightMatrix
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(ByRef<::UnityEngine::Rendering::CullingResults>, ByRef<::UnityEngine::Rendering::Universal::ShadowData>, int, ::UnityEngine::CubemapFace, float, ByRef<::UnityEngine::Matrix4x4>, ByRef<::UnityEngine::Matrix4x4>, ByRef<::UnityEngine::Matrix4x4>, ByRef<::UnityEngine::Rendering::ShadowSplitData>)>(&UnityEngine::Rendering::Universal::ShadowUtils::ExtractPointLightMatrix)> {
  static const MethodInfo* get() {
    static auto* cullResults = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "CullingResults")->this_arg;
    static auto* shadowData = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering.Universal", "ShadowData")->this_arg;
    static auto* shadowLightIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* cubemapFace = &::il2cpp_utils::GetClassFromName("UnityEngine", "CubemapFace")->byval_arg;
    static auto* fovBias = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* shadowMatrix = &::il2cpp_utils::GetClassFromName("UnityEngine", "Matrix4x4")->this_arg;
    static auto* viewMatrix = &::il2cpp_utils::GetClassFromName("UnityEngine", "Matrix4x4")->this_arg;
    static auto* projMatrix = &::il2cpp_utils::GetClassFromName("UnityEngine", "Matrix4x4")->this_arg;
    static auto* splitData = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "ShadowSplitData")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::Universal::ShadowUtils*), "ExtractPointLightMatrix", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{cullResults, shadowData, shadowLightIndex, cubemapFace, fovBias, shadowMatrix, viewMatrix, projMatrix, splitData});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::Universal::ShadowUtils::RenderShadowSlice
// Il2CppName: RenderShadowSlice
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::Rendering::CommandBuffer*, ByRef<::UnityEngine::Rendering::ScriptableRenderContext>, ByRef<::UnityEngine::Rendering::Universal::ShadowSliceData>, ByRef<::UnityEngine::Rendering::ShadowDrawingSettings>, ::UnityEngine::Matrix4x4, ::UnityEngine::Matrix4x4)>(&UnityEngine::Rendering::Universal::ShadowUtils::RenderShadowSlice)> {
  static const MethodInfo* get() {
    static auto* cmd = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "CommandBuffer")->byval_arg;
    static auto* context = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "ScriptableRenderContext")->this_arg;
    static auto* shadowSliceData = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering.Universal", "ShadowSliceData")->this_arg;
    static auto* settings = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "ShadowDrawingSettings")->this_arg;
    static auto* proj = &::il2cpp_utils::GetClassFromName("UnityEngine", "Matrix4x4")->byval_arg;
    static auto* view = &::il2cpp_utils::GetClassFromName("UnityEngine", "Matrix4x4")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::Universal::ShadowUtils*), "RenderShadowSlice", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{cmd, context, shadowSliceData, settings, proj, view});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::Universal::ShadowUtils::RenderShadowSlice
// Il2CppName: RenderShadowSlice
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::Rendering::CommandBuffer*, ByRef<::UnityEngine::Rendering::ScriptableRenderContext>, ByRef<::UnityEngine::Rendering::Universal::ShadowSliceData>, ByRef<::UnityEngine::Rendering::ShadowDrawingSettings>)>(&UnityEngine::Rendering::Universal::ShadowUtils::RenderShadowSlice)> {
  static const MethodInfo* get() {
    static auto* cmd = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "CommandBuffer")->byval_arg;
    static auto* context = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "ScriptableRenderContext")->this_arg;
    static auto* shadowSliceData = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering.Universal", "ShadowSliceData")->this_arg;
    static auto* settings = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "ShadowDrawingSettings")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::Universal::ShadowUtils*), "RenderShadowSlice", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{cmd, context, shadowSliceData, settings});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::Universal::ShadowUtils::GetMaxTileResolutionInAtlas
// Il2CppName: GetMaxTileResolutionInAtlas
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(int, int, int)>(&UnityEngine::Rendering::Universal::ShadowUtils::GetMaxTileResolutionInAtlas)> {
  static const MethodInfo* get() {
    static auto* atlasWidth = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* atlasHeight = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* tileCount = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::Universal::ShadowUtils*), "GetMaxTileResolutionInAtlas", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{atlasWidth, atlasHeight, tileCount});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::Universal::ShadowUtils::ApplySliceTransform
// Il2CppName: ApplySliceTransform
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(ByRef<::UnityEngine::Rendering::Universal::ShadowSliceData>, int, int)>(&UnityEngine::Rendering::Universal::ShadowUtils::ApplySliceTransform)> {
  static const MethodInfo* get() {
    static auto* shadowSliceData = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering.Universal", "ShadowSliceData")->this_arg;
    static auto* atlasWidth = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* atlasHeight = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::Universal::ShadowUtils*), "ApplySliceTransform", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{shadowSliceData, atlasWidth, atlasHeight});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::Universal::ShadowUtils::GetShadowBias
// Il2CppName: GetShadowBias
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector4 (*)(ByRef<::UnityEngine::Rendering::VisibleLight>, int, ByRef<::UnityEngine::Rendering::Universal::ShadowData>, ::UnityEngine::Matrix4x4, float)>(&UnityEngine::Rendering::Universal::ShadowUtils::GetShadowBias)> {
  static const MethodInfo* get() {
    static auto* shadowLight = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "VisibleLight")->this_arg;
    static auto* shadowLightIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* shadowData = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering.Universal", "ShadowData")->this_arg;
    static auto* lightProjectionMatrix = &::il2cpp_utils::GetClassFromName("UnityEngine", "Matrix4x4")->byval_arg;
    static auto* shadowResolution = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::Universal::ShadowUtils*), "GetShadowBias", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{shadowLight, shadowLightIndex, shadowData, lightProjectionMatrix, shadowResolution});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::Universal::ShadowUtils::GetScaleAndBiasForLinearDistanceFade
// Il2CppName: GetScaleAndBiasForLinearDistanceFade
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(float, float, ByRef<float>, ByRef<float>)>(&UnityEngine::Rendering::Universal::ShadowUtils::GetScaleAndBiasForLinearDistanceFade)> {
  static const MethodInfo* get() {
    static auto* fadeDistance = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* border = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* scale = &::il2cpp_utils::GetClassFromName("System", "Single")->this_arg;
    static auto* bias = &::il2cpp_utils::GetClassFromName("System", "Single")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::Universal::ShadowUtils*), "GetScaleAndBiasForLinearDistanceFade", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{fadeDistance, border, scale, bias});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::Universal::ShadowUtils::SetupShadowCasterConstantBuffer
// Il2CppName: SetupShadowCasterConstantBuffer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::Rendering::CommandBuffer*, ByRef<::UnityEngine::Rendering::VisibleLight>, ::UnityEngine::Vector4)>(&UnityEngine::Rendering::Universal::ShadowUtils::SetupShadowCasterConstantBuffer)> {
  static const MethodInfo* get() {
    static auto* cmd = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "CommandBuffer")->byval_arg;
    static auto* shadowLight = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "VisibleLight")->this_arg;
    static auto* shadowBias = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector4")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::Universal::ShadowUtils*), "SetupShadowCasterConstantBuffer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{cmd, shadowLight, shadowBias});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::Universal::ShadowUtils::GetTemporaryShadowTextureDescriptor
// Il2CppName: GetTemporaryShadowTextureDescriptor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::RenderTextureDescriptor (*)(int, int, int)>(&UnityEngine::Rendering::Universal::ShadowUtils::GetTemporaryShadowTextureDescriptor)> {
  static const MethodInfo* get() {
    static auto* width = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* height = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* bits = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::Universal::ShadowUtils*), "GetTemporaryShadowTextureDescriptor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{width, height, bits});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::Universal::ShadowUtils::GetTemporaryShadowTexture
// Il2CppName: GetTemporaryShadowTexture
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::RenderTexture* (*)(int, int, int)>(&UnityEngine::Rendering::Universal::ShadowUtils::GetTemporaryShadowTexture)> {
  static const MethodInfo* get() {
    static auto* width = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* height = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* bits = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::Universal::ShadowUtils*), "GetTemporaryShadowTexture", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{width, height, bits});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::Universal::ShadowUtils::ShadowRTNeedsReAlloc
// Il2CppName: ShadowRTNeedsReAlloc
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::UnityEngine::Rendering::RTHandle*, int, int, int, int, float, ::StringW)>(&UnityEngine::Rendering::Universal::ShadowUtils::ShadowRTNeedsReAlloc)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "RTHandle")->byval_arg;
    static auto* width = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* height = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* bits = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* anisoLevel = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* mipMapBias = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::Universal::ShadowUtils*), "ShadowRTNeedsReAlloc", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle, width, height, bits, anisoLevel, mipMapBias, name});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::Universal::ShadowUtils::AllocShadowRT
// Il2CppName: AllocShadowRT
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Rendering::RTHandle* (*)(int, int, int, int, float, ::StringW)>(&UnityEngine::Rendering::Universal::ShadowUtils::AllocShadowRT)> {
  static const MethodInfo* get() {
    static auto* width = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* height = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* bits = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* anisoLevel = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* mipMapBias = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::Universal::ShadowUtils*), "AllocShadowRT", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{width, height, bits, anisoLevel, mipMapBias, name});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::Universal::ShadowUtils::ShadowRTReAllocateIfNeeded
// Il2CppName: ShadowRTReAllocateIfNeeded
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(ByRef<::UnityEngine::Rendering::RTHandle*>, int, int, int, int, float, ::StringW)>(&UnityEngine::Rendering::Universal::ShadowUtils::ShadowRTReAllocateIfNeeded)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "RTHandle")->this_arg;
    static auto* width = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* height = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* bits = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* anisoLevel = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* mipMapBias = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::Universal::ShadowUtils*), "ShadowRTReAllocateIfNeeded", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle, width, height, bits, anisoLevel, mipMapBias, name});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::Universal::ShadowUtils::GetShadowTransform
// Il2CppName: GetShadowTransform
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Matrix4x4 (*)(::UnityEngine::Matrix4x4, ::UnityEngine::Matrix4x4)>(&UnityEngine::Rendering::Universal::ShadowUtils::GetShadowTransform)> {
  static const MethodInfo* get() {
    static auto* proj = &::il2cpp_utils::GetClassFromName("UnityEngine", "Matrix4x4")->byval_arg;
    static auto* view = &::il2cpp_utils::GetClassFromName("UnityEngine", "Matrix4x4")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::Universal::ShadowUtils*), "GetShadowTransform", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{proj, view});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::Universal::ShadowUtils::SoftShadowQualityToShaderProperty
// Il2CppName: SoftShadowQualityToShaderProperty
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (*)(::UnityEngine::Light*, bool)>(&UnityEngine::Rendering::Universal::ShadowUtils::SoftShadowQualityToShaderProperty)> {
  static const MethodInfo* get() {
    static auto* light = &::il2cpp_utils::GetClassFromName("UnityEngine", "Light")->byval_arg;
    static auto* softShadowsEnabled = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::Universal::ShadowUtils*), "SoftShadowQualityToShaderProperty", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{light, softShadowsEnabled});
  }
};
