// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::Rendering::Universal
namespace UnityEngine::Rendering::Universal {
  // Forward declaring type: DecalEntityManager
  class DecalEntityManager;
  // Forward declaring type: DecalEntityChunk
  class DecalEntityChunk;
  // Forward declaring type: DecalCachedChunk
  class DecalCachedChunk;
}
// Forward declaring namespace: UnityEngine::Rendering
namespace UnityEngine::Rendering {
  // Forward declaring type: ProfilingSampler
  class ProfilingSampler;
}
// Completed forward declares
// Type namespace: UnityEngine.Rendering.Universal
namespace UnityEngine::Rendering::Universal {
  // Forward declaring type: DecalUpdateCachedSystem
  class DecalUpdateCachedSystem;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::Rendering::Universal::DecalUpdateCachedSystem);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::Rendering::Universal::DecalUpdateCachedSystem*, "UnityEngine.Rendering.Universal", "DecalUpdateCachedSystem");
// Type namespace: UnityEngine.Rendering.Universal
namespace UnityEngine::Rendering::Universal {
  // Size: 0x28
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.Rendering.Universal.DecalUpdateCachedSystem
  // [TokenAttribute] Offset: FFFFFFFF
  class DecalUpdateCachedSystem : public ::Il2CppObject {
    public:
    // Nested type: ::UnityEngine::Rendering::Universal::DecalUpdateCachedSystem::UpdateTransformsJob
    struct UpdateTransformsJob;
    public:
    // private UnityEngine.Rendering.Universal.DecalEntityManager m_EntityManager
    // Size: 0x8
    // Offset: 0x10
    ::UnityEngine::Rendering::Universal::DecalEntityManager* m_EntityManager;
    // Field size check
    static_assert(sizeof(::UnityEngine::Rendering::Universal::DecalEntityManager*) == 0x8);
    // private UnityEngine.Rendering.ProfilingSampler m_Sampler
    // Size: 0x8
    // Offset: 0x18
    ::UnityEngine::Rendering::ProfilingSampler* m_Sampler;
    // Field size check
    static_assert(sizeof(::UnityEngine::Rendering::ProfilingSampler*) == 0x8);
    // private UnityEngine.Rendering.ProfilingSampler m_SamplerJob
    // Size: 0x8
    // Offset: 0x20
    ::UnityEngine::Rendering::ProfilingSampler* m_SamplerJob;
    // Field size check
    static_assert(sizeof(::UnityEngine::Rendering::ProfilingSampler*) == 0x8);
    public:
    // Get instance field reference: private UnityEngine.Rendering.Universal.DecalEntityManager m_EntityManager
    [[deprecated("Use field access instead!")]] ::UnityEngine::Rendering::Universal::DecalEntityManager*& dyn_m_EntityManager();
    // Get instance field reference: private UnityEngine.Rendering.ProfilingSampler m_Sampler
    [[deprecated("Use field access instead!")]] ::UnityEngine::Rendering::ProfilingSampler*& dyn_m_Sampler();
    // Get instance field reference: private UnityEngine.Rendering.ProfilingSampler m_SamplerJob
    [[deprecated("Use field access instead!")]] ::UnityEngine::Rendering::ProfilingSampler*& dyn_m_SamplerJob();
    // public System.Void .ctor(UnityEngine.Rendering.Universal.DecalEntityManager entityManager)
    // Offset: 0x52A8650
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static DecalUpdateCachedSystem* New_ctor(::UnityEngine::Rendering::Universal::DecalEntityManager* entityManager) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::Universal::DecalUpdateCachedSystem::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<DecalUpdateCachedSystem*, creationType>(entityManager)));
    }
    // public System.Void Execute()
    // Offset: 0x52A8734
    void Execute();
    // private System.Void Execute(UnityEngine.Rendering.Universal.DecalEntityChunk entityChunk, UnityEngine.Rendering.Universal.DecalCachedChunk cachedChunk, System.Int32 count)
    // Offset: 0x52A88F4
    void Execute(::UnityEngine::Rendering::Universal::DecalEntityChunk* entityChunk, ::UnityEngine::Rendering::Universal::DecalCachedChunk* cachedChunk, int count);
  }; // UnityEngine.Rendering.Universal.DecalUpdateCachedSystem
  #pragma pack(pop)
  static check_size<sizeof(DecalUpdateCachedSystem), 32 + sizeof(::UnityEngine::Rendering::ProfilingSampler*)> __UnityEngine_Rendering_Universal_DecalUpdateCachedSystemSizeCheck;
  static_assert(sizeof(DecalUpdateCachedSystem) == 0x28);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::Rendering::Universal::DecalUpdateCachedSystem::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::Rendering::Universal::DecalUpdateCachedSystem::Execute
// Il2CppName: Execute
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Rendering::Universal::DecalUpdateCachedSystem::*)()>(&UnityEngine::Rendering::Universal::DecalUpdateCachedSystem::Execute)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::Universal::DecalUpdateCachedSystem*), "Execute", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::Universal::DecalUpdateCachedSystem::Execute
// Il2CppName: Execute
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Rendering::Universal::DecalUpdateCachedSystem::*)(::UnityEngine::Rendering::Universal::DecalEntityChunk*, ::UnityEngine::Rendering::Universal::DecalCachedChunk*, int)>(&UnityEngine::Rendering::Universal::DecalUpdateCachedSystem::Execute)> {
  static const MethodInfo* get() {
    static auto* entityChunk = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering.Universal", "DecalEntityChunk")->byval_arg;
    static auto* cachedChunk = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering.Universal", "DecalCachedChunk")->byval_arg;
    static auto* count = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::Universal::DecalUpdateCachedSystem*), "Execute", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{entityChunk, cachedChunk, count});
  }
};
