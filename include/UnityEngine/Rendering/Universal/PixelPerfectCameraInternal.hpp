// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.ISerializationCallbackReceiver
#include "UnityEngine/ISerializationCallbackReceiver.hpp"
// Including type: UnityEngine.Rect
#include "UnityEngine/Rect.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::Rendering::Universal
namespace UnityEngine::Rendering::Universal {
  // Forward declaring type: IPixelPerfectCamera
  class IPixelPerfectCamera;
}
// Forward declaring namespace: UnityEngine::Experimental::Rendering::Universal
namespace UnityEngine::Experimental::Rendering::Universal {
  // Forward declaring type: PixelPerfectCamera
  class PixelPerfectCamera;
}
// Completed forward declares
// Type namespace: UnityEngine.Rendering.Universal
namespace UnityEngine::Rendering::Universal {
  // Forward declaring type: PixelPerfectCameraInternal
  class PixelPerfectCameraInternal;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::Rendering::Universal::PixelPerfectCameraInternal);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::Rendering::Universal::PixelPerfectCameraInternal*, "UnityEngine.Rendering.Universal", "PixelPerfectCameraInternal");
// Type namespace: UnityEngine.Rendering.Universal
namespace UnityEngine::Rendering::Universal {
  // Size: 0x55
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.Rendering.Universal.PixelPerfectCameraInternal
  // [TokenAttribute] Offset: FFFFFFFF
  class PixelPerfectCameraInternal : public ::Il2CppObject/*, public ::UnityEngine::ISerializationCallbackReceiver*/ {
    public:
    public:
    // private UnityEngine.Rendering.Universal.IPixelPerfectCamera m_Component
    // Size: 0x8
    // Offset: 0x10
    ::UnityEngine::Rendering::Universal::IPixelPerfectCamera* m_Component;
    // Field size check
    static_assert(sizeof(::UnityEngine::Rendering::Universal::IPixelPerfectCamera*) == 0x8);
    // private UnityEngine.Experimental.Rendering.Universal.PixelPerfectCamera m_SerializableComponent
    // Size: 0x8
    // Offset: 0x18
    ::UnityEngine::Experimental::Rendering::Universal::PixelPerfectCamera* m_SerializableComponent;
    // Field size check
    static_assert(sizeof(::UnityEngine::Experimental::Rendering::Universal::PixelPerfectCamera*) == 0x8);
    // System.Single originalOrthoSize
    // Size: 0x4
    // Offset: 0x20
    float originalOrthoSize;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // System.Boolean hasPostProcessLayer
    // Size: 0x1
    // Offset: 0x24
    bool hasPostProcessLayer;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // System.Boolean cropFrameXAndY
    // Size: 0x1
    // Offset: 0x25
    bool cropFrameXAndY;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // System.Boolean cropFrameXOrY
    // Size: 0x1
    // Offset: 0x26
    bool cropFrameXOrY;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // System.Boolean useStretchFill
    // Size: 0x1
    // Offset: 0x27
    bool useStretchFill;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // System.Int32 zoom
    // Size: 0x4
    // Offset: 0x28
    int zoom;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // System.Boolean useOffscreenRT
    // Size: 0x1
    // Offset: 0x2C
    bool useOffscreenRT;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: useOffscreenRT and: offscreenRTWidth
    char __padding8[0x3] = {};
    // System.Int32 offscreenRTWidth
    // Size: 0x4
    // Offset: 0x30
    int offscreenRTWidth;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // System.Int32 offscreenRTHeight
    // Size: 0x4
    // Offset: 0x34
    int offscreenRTHeight;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // UnityEngine.Rect pixelRect
    // Size: 0x10
    // Offset: 0x38
    ::UnityEngine::Rect pixelRect;
    // Field size check
    static_assert(sizeof(::UnityEngine::Rect) == 0x10);
    // System.Single orthoSize
    // Size: 0x4
    // Offset: 0x48
    float orthoSize;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // System.Single unitsPerPixel
    // Size: 0x4
    // Offset: 0x4C
    float unitsPerPixel;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // System.Int32 cinemachineVCamZoom
    // Size: 0x4
    // Offset: 0x50
    int cinemachineVCamZoom;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // System.Boolean requiresUpscaling
    // Size: 0x1
    // Offset: 0x54
    bool requiresUpscaling;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    public:
    // Creating interface conversion operator: operator ::UnityEngine::ISerializationCallbackReceiver
    operator ::UnityEngine::ISerializationCallbackReceiver() noexcept {
      return *reinterpret_cast<::UnityEngine::ISerializationCallbackReceiver*>(this);
    }
    // Get instance field reference: private UnityEngine.Rendering.Universal.IPixelPerfectCamera m_Component
    [[deprecated("Use field access instead!")]] ::UnityEngine::Rendering::Universal::IPixelPerfectCamera*& dyn_m_Component();
    // Get instance field reference: private UnityEngine.Experimental.Rendering.Universal.PixelPerfectCamera m_SerializableComponent
    [[deprecated("Use field access instead!")]] ::UnityEngine::Experimental::Rendering::Universal::PixelPerfectCamera*& dyn_m_SerializableComponent();
    // Get instance field reference: System.Single originalOrthoSize
    [[deprecated("Use field access instead!")]] float& dyn_originalOrthoSize();
    // Get instance field reference: System.Boolean hasPostProcessLayer
    [[deprecated("Use field access instead!")]] bool& dyn_hasPostProcessLayer();
    // Get instance field reference: System.Boolean cropFrameXAndY
    [[deprecated("Use field access instead!")]] bool& dyn_cropFrameXAndY();
    // Get instance field reference: System.Boolean cropFrameXOrY
    [[deprecated("Use field access instead!")]] bool& dyn_cropFrameXOrY();
    // Get instance field reference: System.Boolean useStretchFill
    [[deprecated("Use field access instead!")]] bool& dyn_useStretchFill();
    // Get instance field reference: System.Int32 zoom
    [[deprecated("Use field access instead!")]] int& dyn_zoom();
    // Get instance field reference: System.Boolean useOffscreenRT
    [[deprecated("Use field access instead!")]] bool& dyn_useOffscreenRT();
    // Get instance field reference: System.Int32 offscreenRTWidth
    [[deprecated("Use field access instead!")]] int& dyn_offscreenRTWidth();
    // Get instance field reference: System.Int32 offscreenRTHeight
    [[deprecated("Use field access instead!")]] int& dyn_offscreenRTHeight();
    // Get instance field reference: UnityEngine.Rect pixelRect
    [[deprecated("Use field access instead!")]] ::UnityEngine::Rect& dyn_pixelRect();
    // Get instance field reference: System.Single orthoSize
    [[deprecated("Use field access instead!")]] float& dyn_orthoSize();
    // Get instance field reference: System.Single unitsPerPixel
    [[deprecated("Use field access instead!")]] float& dyn_unitsPerPixel();
    // Get instance field reference: System.Int32 cinemachineVCamZoom
    [[deprecated("Use field access instead!")]] int& dyn_cinemachineVCamZoom();
    // Get instance field reference: System.Boolean requiresUpscaling
    [[deprecated("Use field access instead!")]] bool& dyn_requiresUpscaling();
    // System.Void .ctor(UnityEngine.Rendering.Universal.IPixelPerfectCamera component)
    // Offset: 0x5289E1C
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static PixelPerfectCameraInternal* New_ctor(::UnityEngine::Rendering::Universal::IPixelPerfectCamera* component) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::Universal::PixelPerfectCameraInternal::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<PixelPerfectCameraInternal*, creationType>(component)));
    }
    // public System.Void OnBeforeSerialize()
    // Offset: 0x5289E74
    void OnBeforeSerialize();
    // public System.Void OnAfterDeserialize()
    // Offset: 0x5289F30
    void OnAfterDeserialize();
    // System.Void CalculateCameraProperties(System.Int32 screenWidth, System.Int32 screenHeight)
    // Offset: 0x5289FB0
    void CalculateCameraProperties(int screenWidth, int screenHeight);
    // UnityEngine.Rect CalculateFinalBlitPixelRect(System.Int32 screenWidth, System.Int32 screenHeight)
    // Offset: 0x528A610
    ::UnityEngine::Rect CalculateFinalBlitPixelRect(int screenWidth, int screenHeight);
    // System.Single CorrectCinemachineOrthoSize(System.Single targetOrthoSize)
    // Offset: 0x528A9A4
    float CorrectCinemachineOrthoSize(float targetOrthoSize);
  }; // UnityEngine.Rendering.Universal.PixelPerfectCameraInternal
  #pragma pack(pop)
  static check_size<sizeof(PixelPerfectCameraInternal), 84 + sizeof(bool)> __UnityEngine_Rendering_Universal_PixelPerfectCameraInternalSizeCheck;
  static_assert(sizeof(PixelPerfectCameraInternal) == 0x55);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::Rendering::Universal::PixelPerfectCameraInternal::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::Rendering::Universal::PixelPerfectCameraInternal::OnBeforeSerialize
// Il2CppName: OnBeforeSerialize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Rendering::Universal::PixelPerfectCameraInternal::*)()>(&UnityEngine::Rendering::Universal::PixelPerfectCameraInternal::OnBeforeSerialize)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::Universal::PixelPerfectCameraInternal*), "OnBeforeSerialize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::Universal::PixelPerfectCameraInternal::OnAfterDeserialize
// Il2CppName: OnAfterDeserialize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Rendering::Universal::PixelPerfectCameraInternal::*)()>(&UnityEngine::Rendering::Universal::PixelPerfectCameraInternal::OnAfterDeserialize)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::Universal::PixelPerfectCameraInternal*), "OnAfterDeserialize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::Universal::PixelPerfectCameraInternal::CalculateCameraProperties
// Il2CppName: CalculateCameraProperties
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Rendering::Universal::PixelPerfectCameraInternal::*)(int, int)>(&UnityEngine::Rendering::Universal::PixelPerfectCameraInternal::CalculateCameraProperties)> {
  static const MethodInfo* get() {
    static auto* screenWidth = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* screenHeight = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::Universal::PixelPerfectCameraInternal*), "CalculateCameraProperties", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{screenWidth, screenHeight});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::Universal::PixelPerfectCameraInternal::CalculateFinalBlitPixelRect
// Il2CppName: CalculateFinalBlitPixelRect
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Rect (UnityEngine::Rendering::Universal::PixelPerfectCameraInternal::*)(int, int)>(&UnityEngine::Rendering::Universal::PixelPerfectCameraInternal::CalculateFinalBlitPixelRect)> {
  static const MethodInfo* get() {
    static auto* screenWidth = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* screenHeight = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::Universal::PixelPerfectCameraInternal*), "CalculateFinalBlitPixelRect", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{screenWidth, screenHeight});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::Universal::PixelPerfectCameraInternal::CorrectCinemachineOrthoSize
// Il2CppName: CorrectCinemachineOrthoSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::Rendering::Universal::PixelPerfectCameraInternal::*)(float)>(&UnityEngine::Rendering::Universal::PixelPerfectCameraInternal::CorrectCinemachineOrthoSize)> {
  static const MethodInfo* get() {
    static auto* targetOrthoSize = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::Universal::PixelPerfectCameraInternal*), "CorrectCinemachineOrthoSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{targetOrthoSize});
  }
};
