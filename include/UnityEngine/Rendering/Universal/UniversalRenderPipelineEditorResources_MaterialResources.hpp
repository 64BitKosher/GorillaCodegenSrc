// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.Rendering.Universal.UniversalRenderPipelineEditorResources
#include "UnityEngine/Rendering/Universal/UniversalRenderPipelineEditorResources.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Material
  class Material;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::Rendering::Universal::UniversalRenderPipelineEditorResources::MaterialResources);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::Rendering::Universal::UniversalRenderPipelineEditorResources::MaterialResources*, "UnityEngine.Rendering.Universal", "UniversalRenderPipelineEditorResources/MaterialResources");
// Type namespace: UnityEngine.Rendering.Universal
namespace UnityEngine::Rendering::Universal {
  // Size: 0x30
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.Rendering.Universal.UniversalRenderPipelineEditorResources/MaterialResources
  // [TokenAttribute] Offset: FFFFFFFF
  // [ReloadGroupAttribute] Offset: FFFFFFFF
  class UniversalRenderPipelineEditorResources::MaterialResources : public ::Il2CppObject {
    public:
    public:
    // public UnityEngine.Material lit
    // Size: 0x8
    // Offset: 0x10
    ::UnityEngine::Material* lit;
    // Field size check
    static_assert(sizeof(::UnityEngine::Material*) == 0x8);
    // public UnityEngine.Material particleLit
    // Size: 0x8
    // Offset: 0x18
    ::UnityEngine::Material* particleLit;
    // Field size check
    static_assert(sizeof(::UnityEngine::Material*) == 0x8);
    // public UnityEngine.Material terrainLit
    // Size: 0x8
    // Offset: 0x20
    ::UnityEngine::Material* terrainLit;
    // Field size check
    static_assert(sizeof(::UnityEngine::Material*) == 0x8);
    // public UnityEngine.Material decal
    // Size: 0x8
    // Offset: 0x28
    ::UnityEngine::Material* decal;
    // Field size check
    static_assert(sizeof(::UnityEngine::Material*) == 0x8);
    public:
    // Get instance field reference: public UnityEngine.Material lit
    [[deprecated("Use field access instead!")]] ::UnityEngine::Material*& dyn_lit();
    // Get instance field reference: public UnityEngine.Material particleLit
    [[deprecated("Use field access instead!")]] ::UnityEngine::Material*& dyn_particleLit();
    // Get instance field reference: public UnityEngine.Material terrainLit
    [[deprecated("Use field access instead!")]] ::UnityEngine::Material*& dyn_terrainLit();
    // Get instance field reference: public UnityEngine.Material decal
    [[deprecated("Use field access instead!")]] ::UnityEngine::Material*& dyn_decal();
    // public System.Void .ctor()
    // Offset: 0x5293E50
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static UniversalRenderPipelineEditorResources::MaterialResources* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::Universal::UniversalRenderPipelineEditorResources::MaterialResources::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<UniversalRenderPipelineEditorResources::MaterialResources*, creationType>()));
    }
  }; // UnityEngine.Rendering.Universal.UniversalRenderPipelineEditorResources/MaterialResources
  #pragma pack(pop)
  static check_size<sizeof(UniversalRenderPipelineEditorResources::MaterialResources), 40 + sizeof(::UnityEngine::Material*)> __UnityEngine_Rendering_Universal_UniversalRenderPipelineEditorResources_MaterialResourcesSizeCheck;
  static_assert(sizeof(UniversalRenderPipelineEditorResources::MaterialResources) == 0x30);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::Rendering::Universal::UniversalRenderPipelineEditorResources::MaterialResources::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
