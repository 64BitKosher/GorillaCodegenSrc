// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.Rendering.Universal.LibTessDotNet.PriorityHeap`1
#include "UnityEngine/Rendering/Universal/LibTessDotNet/PriorityHeap_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::Rendering::Universal::LibTessDotNet
namespace UnityEngine::Rendering::Universal::LibTessDotNet {
  // Skipping declaration: StackItem because it is already included!
}
// Completed forward declares
// Type namespace: UnityEngine.Rendering.Universal.LibTessDotNet
namespace UnityEngine::Rendering::Universal::LibTessDotNet {
  // Forward declaring type: PriorityQueue`1<TValue>
  template<typename TValue>
  class PriorityQueue_1;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE_GENERIC_CLASS(::UnityEngine::Rendering::Universal::LibTessDotNet::PriorityQueue_1, "UnityEngine.Rendering.Universal.LibTessDotNet", "PriorityQueue`1");
// Type namespace: UnityEngine.Rendering.Universal.LibTessDotNet
namespace UnityEngine::Rendering::Universal::LibTessDotNet {
  // WARNING Size may be invalid!
  // Autogenerated type: UnityEngine.Rendering.Universal.LibTessDotNet.PriorityQueue`1
  // [TokenAttribute] Offset: FFFFFFFF
  template<typename TValue>
  class PriorityQueue_1 : public ::Il2CppObject {
    public:
    // Nested type: ::UnityEngine::Rendering::Universal::LibTessDotNet::PriorityQueue_1::StackItem<TValue>
    class StackItem;
    // WARNING Size may be invalid!
    // Autogenerated type: UnityEngine.Rendering.Universal.LibTessDotNet.PriorityQueue`1/StackItem
    // [TokenAttribute] Offset: FFFFFFFF
    class StackItem : public ::il2cpp_utils::il2cpp_type_check::NestedType, public ::Il2CppObject {
      public:
      using declaring_type = PriorityQueue_1<TValue>*;
      static constexpr std::string_view NESTED_NAME = "StackItem";
      static constexpr bool IS_VALUE_TYPE = false;
      public:
      // System.Int32 p
      // Size: 0x4
      // Offset: 0x0
      int p;
      // Field size check
      static_assert(sizeof(int) == 0x4);
      // System.Int32 r
      // Size: 0x4
      // Offset: 0x0
      int r;
      // Field size check
      static_assert(sizeof(int) == 0x4);
      public:
      // Autogenerated instance field getter
      // Get instance field: System.Int32 p
      [[deprecated("Use field access instead!")]] int& dyn_p() {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::Universal::LibTessDotNet::PriorityQueue_1::StackItem::dyn_p");
        auto ___internal__instance = this;
        static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "p"))->offset;
        return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
      }
      // Autogenerated instance field getter
      // Get instance field: System.Int32 r
      [[deprecated("Use field access instead!")]] int& dyn_r() {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::Universal::LibTessDotNet::PriorityQueue_1::StackItem::dyn_r");
        auto ___internal__instance = this;
        static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "r"))->offset;
        return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
      }
      // public System.Void .ctor()
      // Offset: 0xFFFFFFFFFFFFFFFF
      template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
      static typename PriorityQueue_1<TValue>::StackItem* New_ctor() {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::Universal::LibTessDotNet::PriorityQueue_1::StackItem::.ctor");
        return THROW_UNLESS((::il2cpp_utils::New<typename PriorityQueue_1<TValue>::StackItem*, creationType>()));
      }
    }; // UnityEngine.Rendering.Universal.LibTessDotNet.PriorityQueue`1/StackItem
    // Could not write size check! Type: UnityEngine.Rendering.Universal.LibTessDotNet.PriorityQueue`1/StackItem is generic, or has no fields that are valid for size checks!
    public:
    // private UnityEngine.Rendering.Universal.LibTessDotNet.PriorityHeap`1/LessOrEqual<TValue> _leq
    // Size: 0x8
    // Offset: 0x0
    typename ::UnityEngine::Rendering::Universal::LibTessDotNet::PriorityHeap_1<TValue>::LessOrEqual* leq;
    // Field size check
    static_assert(sizeof(typename ::UnityEngine::Rendering::Universal::LibTessDotNet::PriorityHeap_1<TValue>::LessOrEqual*) == 0x8);
    // private UnityEngine.Rendering.Universal.LibTessDotNet.PriorityHeap`1<TValue> _heap
    // Size: 0x8
    // Offset: 0x0
    ::UnityEngine::Rendering::Universal::LibTessDotNet::PriorityHeap_1<TValue>* heap;
    // Field size check
    static_assert(sizeof(::UnityEngine::Rendering::Universal::LibTessDotNet::PriorityHeap_1<TValue>*) == 0x8);
    // private TValue[] _keys
    // Size: 0x8
    // Offset: 0x0
    ::ArrayW<TValue> keys;
    // Field size check
    static_assert(sizeof(::ArrayW<TValue>) == 0x8);
    // private System.Int32[] _order
    // Size: 0x8
    // Offset: 0x0
    ::ArrayW<int> order;
    // Field size check
    static_assert(sizeof(::ArrayW<int>) == 0x8);
    // private System.Int32 _size
    // Size: 0x4
    // Offset: 0x0
    int size;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private System.Int32 _max
    // Size: 0x4
    // Offset: 0x0
    int max;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private System.Boolean _initialized
    // Size: 0x1
    // Offset: 0x0
    bool initialized;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    public:
    // Autogenerated instance field getter
    // Get instance field: private UnityEngine.Rendering.Universal.LibTessDotNet.PriorityHeap`1/LessOrEqual<TValue> _leq
    [[deprecated("Use field access instead!")]] typename ::UnityEngine::Rendering::Universal::LibTessDotNet::PriorityHeap_1<TValue>::LessOrEqual*& dyn__leq() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::Universal::LibTessDotNet::PriorityQueue_1::dyn__leq");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_leq"))->offset;
      return *reinterpret_cast<typename ::UnityEngine::Rendering::Universal::LibTessDotNet::PriorityHeap_1<TValue>::LessOrEqual**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: private UnityEngine.Rendering.Universal.LibTessDotNet.PriorityHeap`1<TValue> _heap
    [[deprecated("Use field access instead!")]] ::UnityEngine::Rendering::Universal::LibTessDotNet::PriorityHeap_1<TValue>*& dyn__heap() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::Universal::LibTessDotNet::PriorityQueue_1::dyn__heap");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_heap"))->offset;
      return *reinterpret_cast<::UnityEngine::Rendering::Universal::LibTessDotNet::PriorityHeap_1<TValue>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: private TValue[] _keys
    [[deprecated("Use field access instead!")]] ::ArrayW<TValue>& dyn__keys() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::Universal::LibTessDotNet::PriorityQueue_1::dyn__keys");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_keys"))->offset;
      return *reinterpret_cast<::ArrayW<TValue>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: private System.Int32[] _order
    [[deprecated("Use field access instead!")]] ::ArrayW<int>& dyn__order() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::Universal::LibTessDotNet::PriorityQueue_1::dyn__order");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_order"))->offset;
      return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: private System.Int32 _size
    [[deprecated("Use field access instead!")]] int& dyn__size() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::Universal::LibTessDotNet::PriorityQueue_1::dyn__size");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_size"))->offset;
      return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: private System.Int32 _max
    [[deprecated("Use field access instead!")]] int& dyn__max() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::Universal::LibTessDotNet::PriorityQueue_1::dyn__max");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_max"))->offset;
      return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: private System.Boolean _initialized
    [[deprecated("Use field access instead!")]] bool& dyn__initialized() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::Universal::LibTessDotNet::PriorityQueue_1::dyn__initialized");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_initialized"))->offset;
      return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // public System.Boolean get_Empty()
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool get_Empty() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::Universal::LibTessDotNet::PriorityQueue_1::get_Empty");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Empty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
    }
    // public System.Void .ctor(System.Int32 initialSize, UnityEngine.Rendering.Universal.LibTessDotNet.PriorityHeap`1/LessOrEqual<TValue> leq)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static PriorityQueue_1<TValue>* New_ctor(int initialSize, typename ::UnityEngine::Rendering::Universal::LibTessDotNet::PriorityHeap_1<TValue>::LessOrEqual* leq) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::Universal::LibTessDotNet::PriorityQueue_1::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<PriorityQueue_1<TValue>*, creationType>(initialSize, leq)));
    }
    // static private System.Void Swap(ref System.Int32 a, ref System.Int32 b)
    // Offset: 0xFFFFFFFFFFFFFFFF
    static void Swap(ByRef<int> a, ByRef<int> b) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::Universal::LibTessDotNet::PriorityQueue_1::Swap");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<PriorityQueue_1<TValue>*>::get(), "Swap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(a), byref(b));
    }
    // public System.Void Init()
    // Offset: 0xFFFFFFFFFFFFFFFF
    void Init() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::Universal::LibTessDotNet::PriorityQueue_1::Init");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
    }
    // public UnityEngine.Rendering.Universal.LibTessDotNet.PQHandle Insert(TValue value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::UnityEngine::Rendering::Universal::LibTessDotNet::PQHandle Insert(TValue value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::Universal::LibTessDotNet::PriorityQueue_1::Insert");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Insert", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
      return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Rendering::Universal::LibTessDotNet::PQHandle, false>(this, ___internal__method, value);
    }
    // public TValue ExtractMin()
    // Offset: 0xFFFFFFFFFFFFFFFF
    TValue ExtractMin() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::Universal::LibTessDotNet::PriorityQueue_1::ExtractMin");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ExtractMin", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      return ::il2cpp_utils::RunMethodRethrow<TValue, false>(this, ___internal__method);
    }
    // public TValue Minimum()
    // Offset: 0xFFFFFFFFFFFFFFFF
    TValue Minimum() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::Universal::LibTessDotNet::PriorityQueue_1::Minimum");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Minimum", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      return ::il2cpp_utils::RunMethodRethrow<TValue, false>(this, ___internal__method);
    }
    // public System.Void Remove(UnityEngine.Rendering.Universal.LibTessDotNet.PQHandle handle)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void Remove(::UnityEngine::Rendering::Universal::LibTessDotNet::PQHandle handle) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::Universal::LibTessDotNet::PriorityQueue_1::Remove");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Remove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, handle);
    }
  }; // UnityEngine.Rendering.Universal.LibTessDotNet.PriorityQueue`1
  // Could not write size check! Type: UnityEngine.Rendering.Universal.LibTessDotNet.PriorityQueue`1 is generic, or has no fields that are valid for size checks!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
