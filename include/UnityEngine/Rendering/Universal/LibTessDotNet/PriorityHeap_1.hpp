// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.Rendering.Universal.LibTessDotNet.PQHandle
#include "UnityEngine/Rendering/Universal/LibTessDotNet/PQHandle.hpp"
// Including type: System.MulticastDelegate
#include "System/MulticastDelegate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::Rendering::Universal::LibTessDotNet
namespace UnityEngine::Rendering::Universal::LibTessDotNet {
  // Skipping declaration: LessOrEqual because it is already included!
  // Skipping declaration: HandleElem because it is already included!
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: IAsyncResult
  class IAsyncResult;
  // Forward declaring type: AsyncCallback
  class AsyncCallback;
}
// Completed forward declares
// Type namespace: UnityEngine.Rendering.Universal.LibTessDotNet
namespace UnityEngine::Rendering::Universal::LibTessDotNet {
  // Forward declaring type: PriorityHeap`1<TValue>
  template<typename TValue>
  class PriorityHeap_1;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE_GENERIC_CLASS(::UnityEngine::Rendering::Universal::LibTessDotNet::PriorityHeap_1, "UnityEngine.Rendering.Universal.LibTessDotNet", "PriorityHeap`1");
// Type namespace: UnityEngine.Rendering.Universal.LibTessDotNet
namespace UnityEngine::Rendering::Universal::LibTessDotNet {
  // WARNING Size may be invalid!
  // Autogenerated type: UnityEngine.Rendering.Universal.LibTessDotNet.PriorityHeap`1
  // [TokenAttribute] Offset: FFFFFFFF
  template<typename TValue>
  class PriorityHeap_1 : public ::Il2CppObject {
    public:
    // Nested type: ::UnityEngine::Rendering::Universal::LibTessDotNet::PriorityHeap_1::LessOrEqual<TValue>
    class LessOrEqual;
    // Nested type: ::UnityEngine::Rendering::Universal::LibTessDotNet::PriorityHeap_1::HandleElem<TValue>
    class HandleElem;
    // WARNING Size may be invalid!
    // Autogenerated type: UnityEngine.Rendering.Universal.LibTessDotNet.PriorityHeap`1/LessOrEqual
    // [TokenAttribute] Offset: FFFFFFFF
    class LessOrEqual : public ::il2cpp_utils::il2cpp_type_check::NestedType, public ::System::MulticastDelegate {
      public:
      using declaring_type = PriorityHeap_1<TValue>*;
      static constexpr std::string_view NESTED_NAME = "LessOrEqual";
      static constexpr bool IS_VALUE_TYPE = false;
      // public System.Void .ctor(System.Object object, System.IntPtr method)
      // Offset: 0xFFFFFFFFFFFFFFFF
      template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
      static typename PriorityHeap_1<TValue>::LessOrEqual* New_ctor(::Il2CppObject* object, ::System::IntPtr method) {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::Universal::LibTessDotNet::PriorityHeap_1::LessOrEqual::.ctor");
        return THROW_UNLESS((::il2cpp_utils::New<typename PriorityHeap_1<TValue>::LessOrEqual*, creationType>(object, method)));
      }
      // public System.Boolean Invoke(TValue lhs, TValue rhs)
      // Offset: 0xFFFFFFFFFFFFFFFF
      bool Invoke(TValue lhs, TValue rhs) {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::Universal::LibTessDotNet::PriorityHeap_1::LessOrEqual::Invoke");
        auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(typename ::UnityEngine::Rendering::Universal::LibTessDotNet::PriorityHeap_1<TValue>::LessOrEqual*), -1));
        return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, lhs, rhs);
      }
      // public System.IAsyncResult BeginInvoke(TValue lhs, TValue rhs, System.AsyncCallback callback, System.Object object)
      // Offset: 0xFFFFFFFFFFFFFFFF
      ::System::IAsyncResult* BeginInvoke(TValue lhs, TValue rhs, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::Universal::LibTessDotNet::PriorityHeap_1::LessOrEqual::BeginInvoke");
        auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(typename ::UnityEngine::Rendering::Universal::LibTessDotNet::PriorityHeap_1<TValue>::LessOrEqual*), -1));
        return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, lhs, rhs, callback, object);
      }
      // public System.Boolean EndInvoke(System.IAsyncResult result)
      // Offset: 0xFFFFFFFFFFFFFFFF
      bool EndInvoke(::System::IAsyncResult* result) {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::Universal::LibTessDotNet::PriorityHeap_1::LessOrEqual::EndInvoke");
        auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(typename ::UnityEngine::Rendering::Universal::LibTessDotNet::PriorityHeap_1<TValue>::LessOrEqual*), -1));
        return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, result);
      }
    }; // UnityEngine.Rendering.Universal.LibTessDotNet.PriorityHeap`1/LessOrEqual
    // Could not write size check! Type: UnityEngine.Rendering.Universal.LibTessDotNet.PriorityHeap`1/LessOrEqual is generic, or has no fields that are valid for size checks!
    // WARNING Size may be invalid!
    // Autogenerated type: UnityEngine.Rendering.Universal.LibTessDotNet.PriorityHeap`1/HandleElem
    // [TokenAttribute] Offset: FFFFFFFF
    class HandleElem : public ::il2cpp_utils::il2cpp_type_check::NestedType, public ::Il2CppObject {
      public:
      using declaring_type = PriorityHeap_1<TValue>*;
      static constexpr std::string_view NESTED_NAME = "HandleElem";
      static constexpr bool IS_VALUE_TYPE = false;
      public:
      // TValue _key
      // Size: 0xFFFFFFFF
      // Offset: 0x0
      TValue key;
      // System.Int32 _node
      // Size: 0x4
      // Offset: 0x0
      int node;
      // Field size check
      static_assert(sizeof(int) == 0x4);
      public:
      // Autogenerated instance field getter
      // Get instance field: TValue _key
      [[deprecated("Use field access instead!")]] TValue& dyn__key() {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::Universal::LibTessDotNet::PriorityHeap_1::HandleElem::dyn__key");
        auto ___internal__instance = this;
        static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_key"))->offset;
        return *reinterpret_cast<TValue*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
      }
      // Autogenerated instance field getter
      // Get instance field: System.Int32 _node
      [[deprecated("Use field access instead!")]] int& dyn__node() {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::Universal::LibTessDotNet::PriorityHeap_1::HandleElem::dyn__node");
        auto ___internal__instance = this;
        static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_node"))->offset;
        return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
      }
      // public System.Void .ctor()
      // Offset: 0xFFFFFFFFFFFFFFFF
      template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
      static typename PriorityHeap_1<TValue>::HandleElem* New_ctor() {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::Universal::LibTessDotNet::PriorityHeap_1::HandleElem::.ctor");
        return THROW_UNLESS((::il2cpp_utils::New<typename PriorityHeap_1<TValue>::HandleElem*, creationType>()));
      }
    }; // UnityEngine.Rendering.Universal.LibTessDotNet.PriorityHeap`1/HandleElem
    // Could not write size check! Type: UnityEngine.Rendering.Universal.LibTessDotNet.PriorityHeap`1/HandleElem is generic, or has no fields that are valid for size checks!
    public:
    // private UnityEngine.Rendering.Universal.LibTessDotNet.PriorityHeap`1/LessOrEqual<TValue> _leq
    // Size: 0x8
    // Offset: 0x0
    typename ::UnityEngine::Rendering::Universal::LibTessDotNet::PriorityHeap_1<TValue>::LessOrEqual* leq;
    // Field size check
    static_assert(sizeof(typename ::UnityEngine::Rendering::Universal::LibTessDotNet::PriorityHeap_1<TValue>::LessOrEqual*) == 0x8);
    // private System.Int32[] _nodes
    // Size: 0x8
    // Offset: 0x0
    ::ArrayW<int> nodes;
    // Field size check
    static_assert(sizeof(::ArrayW<int>) == 0x8);
    // private UnityEngine.Rendering.Universal.LibTessDotNet.PriorityHeap`1/HandleElem<TValue>[] _handles
    // Size: 0x8
    // Offset: 0x0
    ::ArrayW<typename ::UnityEngine::Rendering::Universal::LibTessDotNet::PriorityHeap_1<TValue>::HandleElem*> handles;
    // Field size check
    static_assert(sizeof(::ArrayW<typename ::UnityEngine::Rendering::Universal::LibTessDotNet::PriorityHeap_1<TValue>::HandleElem*>) == 0x8);
    // private System.Int32 _size
    // Size: 0x4
    // Offset: 0x0
    int size;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private System.Int32 _max
    // Size: 0x4
    // Offset: 0x0
    int max;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private System.Int32 _freeList
    // Size: 0x4
    // Offset: 0x0
    int freeList;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private System.Boolean _initialized
    // Size: 0x1
    // Offset: 0x0
    bool initialized;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    public:
    // Autogenerated instance field getter
    // Get instance field: private UnityEngine.Rendering.Universal.LibTessDotNet.PriorityHeap`1/LessOrEqual<TValue> _leq
    [[deprecated("Use field access instead!")]] typename ::UnityEngine::Rendering::Universal::LibTessDotNet::PriorityHeap_1<TValue>::LessOrEqual*& dyn__leq() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::Universal::LibTessDotNet::PriorityHeap_1::dyn__leq");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_leq"))->offset;
      return *reinterpret_cast<typename ::UnityEngine::Rendering::Universal::LibTessDotNet::PriorityHeap_1<TValue>::LessOrEqual**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: private System.Int32[] _nodes
    [[deprecated("Use field access instead!")]] ::ArrayW<int>& dyn__nodes() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::Universal::LibTessDotNet::PriorityHeap_1::dyn__nodes");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_nodes"))->offset;
      return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: private UnityEngine.Rendering.Universal.LibTessDotNet.PriorityHeap`1/HandleElem<TValue>[] _handles
    [[deprecated("Use field access instead!")]] ::ArrayW<typename ::UnityEngine::Rendering::Universal::LibTessDotNet::PriorityHeap_1<TValue>::HandleElem*>& dyn__handles() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::Universal::LibTessDotNet::PriorityHeap_1::dyn__handles");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_handles"))->offset;
      return *reinterpret_cast<::ArrayW<typename ::UnityEngine::Rendering::Universal::LibTessDotNet::PriorityHeap_1<TValue>::HandleElem*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: private System.Int32 _size
    [[deprecated("Use field access instead!")]] int& dyn__size() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::Universal::LibTessDotNet::PriorityHeap_1::dyn__size");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_size"))->offset;
      return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: private System.Int32 _max
    [[deprecated("Use field access instead!")]] int& dyn__max() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::Universal::LibTessDotNet::PriorityHeap_1::dyn__max");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_max"))->offset;
      return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: private System.Int32 _freeList
    [[deprecated("Use field access instead!")]] int& dyn__freeList() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::Universal::LibTessDotNet::PriorityHeap_1::dyn__freeList");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_freeList"))->offset;
      return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: private System.Boolean _initialized
    [[deprecated("Use field access instead!")]] bool& dyn__initialized() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::Universal::LibTessDotNet::PriorityHeap_1::dyn__initialized");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_initialized"))->offset;
      return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // public System.Boolean get_Empty()
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool get_Empty() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::Universal::LibTessDotNet::PriorityHeap_1::get_Empty");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Empty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
    }
    // public System.Void .ctor(System.Int32 initialSize, UnityEngine.Rendering.Universal.LibTessDotNet.PriorityHeap`1/LessOrEqual<TValue> leq)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static PriorityHeap_1<TValue>* New_ctor(int initialSize, typename ::UnityEngine::Rendering::Universal::LibTessDotNet::PriorityHeap_1<TValue>::LessOrEqual* leq) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::Universal::LibTessDotNet::PriorityHeap_1::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<PriorityHeap_1<TValue>*, creationType>(initialSize, leq)));
    }
    // private System.Void FloatDown(System.Int32 curr)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void FloatDown(int curr) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::Universal::LibTessDotNet::PriorityHeap_1::FloatDown");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FloatDown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(curr)})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, curr);
    }
    // private System.Void FloatUp(System.Int32 curr)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void FloatUp(int curr) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::Universal::LibTessDotNet::PriorityHeap_1::FloatUp");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FloatUp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(curr)})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, curr);
    }
    // public System.Void Init()
    // Offset: 0xFFFFFFFFFFFFFFFF
    void Init() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::Universal::LibTessDotNet::PriorityHeap_1::Init");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
    }
    // public UnityEngine.Rendering.Universal.LibTessDotNet.PQHandle Insert(TValue value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::UnityEngine::Rendering::Universal::LibTessDotNet::PQHandle Insert(TValue value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::Universal::LibTessDotNet::PriorityHeap_1::Insert");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Insert", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
      return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Rendering::Universal::LibTessDotNet::PQHandle, false>(this, ___internal__method, value);
    }
    // public TValue ExtractMin()
    // Offset: 0xFFFFFFFFFFFFFFFF
    TValue ExtractMin() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::Universal::LibTessDotNet::PriorityHeap_1::ExtractMin");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ExtractMin", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      return ::il2cpp_utils::RunMethodRethrow<TValue, false>(this, ___internal__method);
    }
    // public TValue Minimum()
    // Offset: 0xFFFFFFFFFFFFFFFF
    TValue Minimum() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::Universal::LibTessDotNet::PriorityHeap_1::Minimum");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Minimum", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      return ::il2cpp_utils::RunMethodRethrow<TValue, false>(this, ___internal__method);
    }
    // public System.Void Remove(UnityEngine.Rendering.Universal.LibTessDotNet.PQHandle handle)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void Remove(::UnityEngine::Rendering::Universal::LibTessDotNet::PQHandle handle) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::Universal::LibTessDotNet::PriorityHeap_1::Remove");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Remove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, handle);
    }
  }; // UnityEngine.Rendering.Universal.LibTessDotNet.PriorityHeap`1
  // Could not write size check! Type: UnityEngine.Rendering.Universal.LibTessDotNet.PriorityHeap`1 is generic, or has no fields that are valid for size checks!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
