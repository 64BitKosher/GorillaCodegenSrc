// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Including type: UnityEngine.Rendering.Universal.LibTessDotNet.Vec3
#include "UnityEngine/Rendering/Universal/LibTessDotNet/Vec3.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin il2cpp-utils forward declares
struct Il2CppObject;
// Completed il2cpp-utils forward declares
// Type namespace: UnityEngine.Rendering.Universal.LibTessDotNet
namespace UnityEngine::Rendering::Universal::LibTessDotNet {
  // Forward declaring type: ContourVertex
  struct ContourVertex;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::Rendering::Universal::LibTessDotNet::ContourVertex, "UnityEngine.Rendering.Universal.LibTessDotNet", "ContourVertex");
// Type namespace: UnityEngine.Rendering.Universal.LibTessDotNet
namespace UnityEngine::Rendering::Universal::LibTessDotNet {
  // Size: 0x18
  #pragma pack(push, 1)
  // WARNING Layout: Sequential may not be correctly taken into account!
  // Autogenerated type: UnityEngine.Rendering.Universal.LibTessDotNet.ContourVertex
  // [TokenAttribute] Offset: FFFFFFFF
  struct ContourVertex/*, public ::System::ValueType*/ {
    public:
    public:
    // public UnityEngine.Rendering.Universal.LibTessDotNet.Vec3 Position
    // Size: 0xC
    // Offset: 0x0
    ::UnityEngine::Rendering::Universal::LibTessDotNet::Vec3 Position;
    // Field size check
    static_assert(sizeof(::UnityEngine::Rendering::Universal::LibTessDotNet::Vec3) == 0xC);
    // Padding between fields: Position and: Data
    char __padding0[0x4] = {};
    // public System.Object Data
    // Size: 0x8
    // Offset: 0x10
    ::Il2CppObject* Data;
    // Field size check
    static_assert(sizeof(::Il2CppObject*) == 0x8);
    public:
    // Creating value type constructor for type: ContourVertex
    constexpr ContourVertex(::UnityEngine::Rendering::Universal::LibTessDotNet::Vec3 Position_ = {}, ::Il2CppObject* Data_ = {}) noexcept : Position{Position_}, Data{Data_} {}
    // Creating interface conversion operator: operator ::System::ValueType
    operator ::System::ValueType() noexcept {
      return *reinterpret_cast<::System::ValueType*>(this);
    }
    // Get instance field reference: public UnityEngine.Rendering.Universal.LibTessDotNet.Vec3 Position
    [[deprecated("Use field access instead!")]] ::UnityEngine::Rendering::Universal::LibTessDotNet::Vec3& dyn_Position();
    // Get instance field reference: public System.Object Data
    [[deprecated("Use field access instead!")]] ::Il2CppObject*& dyn_Data();
    // public override System.String ToString()
    // Offset: 0x53005E4
    // Implemented from: System.ValueType
    // Base method: System.String ValueType::ToString()
    ::StringW ToString();
  }; // UnityEngine.Rendering.Universal.LibTessDotNet.ContourVertex
  #pragma pack(pop)
  static check_size<sizeof(ContourVertex), 16 + sizeof(::Il2CppObject*)> __UnityEngine_Rendering_Universal_LibTessDotNet_ContourVertexSizeCheck;
  static_assert(sizeof(ContourVertex) == 0x18);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::Rendering::Universal::LibTessDotNet::ContourVertex::ToString
// Il2CppName: ToString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (UnityEngine::Rendering::Universal::LibTessDotNet::ContourVertex::*)()>(&UnityEngine::Rendering::Universal::LibTessDotNet::ContourVertex::ToString)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::Universal::LibTessDotNet::ContourVertex), "ToString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
