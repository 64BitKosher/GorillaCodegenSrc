// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.Rendering.Universal.LibTessDotNet.MeshUtils
#include "UnityEngine/Rendering/Universal/LibTessDotNet/MeshUtils.hpp"
// Including type: UnityEngine.Rendering.Universal.LibTessDotNet.MeshUtils/Pooled`1
#include "UnityEngine/Rendering/Universal/LibTessDotNet/MeshUtils_Pooled_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::Rendering::Universal::LibTessDotNet::MeshUtils::Face);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::Rendering::Universal::LibTessDotNet::MeshUtils::Face*, "UnityEngine.Rendering.Universal.LibTessDotNet", "MeshUtils/Face");
// Type namespace: UnityEngine.Rendering.Universal.LibTessDotNet
namespace UnityEngine::Rendering::Universal::LibTessDotNet {
  // WARNING Size may be invalid!
  // Autogenerated type: UnityEngine.Rendering.Universal.LibTessDotNet.MeshUtils/Face
  // [TokenAttribute] Offset: FFFFFFFF
  class MeshUtils::Face : public ::UnityEngine::Rendering::Universal::LibTessDotNet::MeshUtils::Pooled_1<::UnityEngine::Rendering::Universal::LibTessDotNet::MeshUtils::Face*> {
    public:
    public:
    // UnityEngine.Rendering.Universal.LibTessDotNet.MeshUtils/Face _prev
    // Size: 0x8
    // Offset: 0x10
    ::UnityEngine::Rendering::Universal::LibTessDotNet::MeshUtils::Face* prev;
    // Field size check
    static_assert(sizeof(::UnityEngine::Rendering::Universal::LibTessDotNet::MeshUtils::Face*) == 0x8);
    // UnityEngine.Rendering.Universal.LibTessDotNet.MeshUtils/Face _next
    // Size: 0x8
    // Offset: 0x18
    ::UnityEngine::Rendering::Universal::LibTessDotNet::MeshUtils::Face* next;
    // Field size check
    static_assert(sizeof(::UnityEngine::Rendering::Universal::LibTessDotNet::MeshUtils::Face*) == 0x8);
    // UnityEngine.Rendering.Universal.LibTessDotNet.MeshUtils/Edge _anEdge
    // Size: 0x8
    // Offset: 0x20
    ::UnityEngine::Rendering::Universal::LibTessDotNet::MeshUtils::Edge* anEdge;
    // Field size check
    static_assert(sizeof(::UnityEngine::Rendering::Universal::LibTessDotNet::MeshUtils::Edge*) == 0x8);
    // UnityEngine.Rendering.Universal.LibTessDotNet.MeshUtils/Face _trail
    // Size: 0x8
    // Offset: 0x28
    ::UnityEngine::Rendering::Universal::LibTessDotNet::MeshUtils::Face* trail;
    // Field size check
    static_assert(sizeof(::UnityEngine::Rendering::Universal::LibTessDotNet::MeshUtils::Face*) == 0x8);
    // System.Int32 _n
    // Size: 0x4
    // Offset: 0x30
    int n;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // System.Boolean _marked
    // Size: 0x1
    // Offset: 0x34
    bool marked;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // System.Boolean _inside
    // Size: 0x1
    // Offset: 0x35
    bool inside;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    public:
    // Get instance field reference: UnityEngine.Rendering.Universal.LibTessDotNet.MeshUtils/Face _prev
    [[deprecated("Use field access instead!")]] ::UnityEngine::Rendering::Universal::LibTessDotNet::MeshUtils::Face*& dyn__prev();
    // Get instance field reference: UnityEngine.Rendering.Universal.LibTessDotNet.MeshUtils/Face _next
    [[deprecated("Use field access instead!")]] ::UnityEngine::Rendering::Universal::LibTessDotNet::MeshUtils::Face*& dyn__next();
    // Get instance field reference: UnityEngine.Rendering.Universal.LibTessDotNet.MeshUtils/Edge _anEdge
    [[deprecated("Use field access instead!")]] ::UnityEngine::Rendering::Universal::LibTessDotNet::MeshUtils::Edge*& dyn__anEdge();
    // Get instance field reference: UnityEngine.Rendering.Universal.LibTessDotNet.MeshUtils/Face _trail
    [[deprecated("Use field access instead!")]] ::UnityEngine::Rendering::Universal::LibTessDotNet::MeshUtils::Face*& dyn__trail();
    // Get instance field reference: System.Int32 _n
    [[deprecated("Use field access instead!")]] int& dyn__n();
    // Get instance field reference: System.Boolean _marked
    [[deprecated("Use field access instead!")]] bool& dyn__marked();
    // Get instance field reference: System.Boolean _inside
    [[deprecated("Use field access instead!")]] bool& dyn__inside();
    // System.Int32 get_VertsCount()
    // Offset: 0x52FBF84
    int get_VertsCount();
    // public override System.Void Reset()
    // Offset: 0x52FC554
    // Implemented from: UnityEngine.Rendering.Universal.LibTessDotNet.MeshUtils/Pooled`1
    // Base method: System.Void Pooled_1::Reset()
    void Reset();
    // public System.Void .ctor()
    // Offset: 0x52FC5A8
    // Implemented from: UnityEngine.Rendering.Universal.LibTessDotNet.MeshUtils/Pooled`1
    // Base method: System.Void Pooled_1::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static MeshUtils::Face* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::Universal::LibTessDotNet::MeshUtils::Face::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<MeshUtils::Face*, creationType>()));
    }
  }; // UnityEngine.Rendering.Universal.LibTessDotNet.MeshUtils/Face
  // WARNING Not writing size check since size may be invalid!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::Rendering::Universal::LibTessDotNet::MeshUtils::Face::get_VertsCount
// Il2CppName: get_VertsCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::Rendering::Universal::LibTessDotNet::MeshUtils::Face::*)()>(&UnityEngine::Rendering::Universal::LibTessDotNet::MeshUtils::Face::get_VertsCount)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::Universal::LibTessDotNet::MeshUtils::Face*), "get_VertsCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::Universal::LibTessDotNet::MeshUtils::Face::Reset
// Il2CppName: Reset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Rendering::Universal::LibTessDotNet::MeshUtils::Face::*)()>(&UnityEngine::Rendering::Universal::LibTessDotNet::MeshUtils::Face::Reset)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::Universal::LibTessDotNet::MeshUtils::Face*), "Reset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::Universal::LibTessDotNet::MeshUtils::Face::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
