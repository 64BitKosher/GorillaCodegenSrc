// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.Rendering.Universal.LibTessDotNet.MeshUtils
#include "UnityEngine/Rendering/Universal/LibTessDotNet/MeshUtils.hpp"
// Including type: UnityEngine.Rendering.Universal.LibTessDotNet.MeshUtils/Pooled`1
#include "UnityEngine/Rendering/Universal/LibTessDotNet/MeshUtils_Pooled_1.hpp"
// Including type: UnityEngine.Rendering.Universal.LibTessDotNet.Vec3
#include "UnityEngine/Rendering/Universal/LibTessDotNet/Vec3.hpp"
// Including type: UnityEngine.Rendering.Universal.LibTessDotNet.PQHandle
#include "UnityEngine/Rendering/Universal/LibTessDotNet/PQHandle.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::Rendering::Universal::LibTessDotNet::MeshUtils::Vertex);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::Rendering::Universal::LibTessDotNet::MeshUtils::Vertex*, "UnityEngine.Rendering.Universal.LibTessDotNet", "MeshUtils/Vertex");
// Type namespace: UnityEngine.Rendering.Universal.LibTessDotNet
namespace UnityEngine::Rendering::Universal::LibTessDotNet {
  // WARNING Size may be invalid!
  // Autogenerated type: UnityEngine.Rendering.Universal.LibTessDotNet.MeshUtils/Vertex
  // [TokenAttribute] Offset: FFFFFFFF
  class MeshUtils::Vertex : public ::UnityEngine::Rendering::Universal::LibTessDotNet::MeshUtils::Pooled_1<::UnityEngine::Rendering::Universal::LibTessDotNet::MeshUtils::Vertex*> {
    public:
    public:
    // UnityEngine.Rendering.Universal.LibTessDotNet.MeshUtils/Vertex _prev
    // Size: 0x8
    // Offset: 0x10
    ::UnityEngine::Rendering::Universal::LibTessDotNet::MeshUtils::Vertex* prev;
    // Field size check
    static_assert(sizeof(::UnityEngine::Rendering::Universal::LibTessDotNet::MeshUtils::Vertex*) == 0x8);
    // UnityEngine.Rendering.Universal.LibTessDotNet.MeshUtils/Vertex _next
    // Size: 0x8
    // Offset: 0x18
    ::UnityEngine::Rendering::Universal::LibTessDotNet::MeshUtils::Vertex* next;
    // Field size check
    static_assert(sizeof(::UnityEngine::Rendering::Universal::LibTessDotNet::MeshUtils::Vertex*) == 0x8);
    // UnityEngine.Rendering.Universal.LibTessDotNet.MeshUtils/Edge _anEdge
    // Size: 0x8
    // Offset: 0x20
    ::UnityEngine::Rendering::Universal::LibTessDotNet::MeshUtils::Edge* anEdge;
    // Field size check
    static_assert(sizeof(::UnityEngine::Rendering::Universal::LibTessDotNet::MeshUtils::Edge*) == 0x8);
    // UnityEngine.Rendering.Universal.LibTessDotNet.Vec3 _coords
    // Size: 0xC
    // Offset: 0x28
    ::UnityEngine::Rendering::Universal::LibTessDotNet::Vec3 coords;
    // Field size check
    static_assert(sizeof(::UnityEngine::Rendering::Universal::LibTessDotNet::Vec3) == 0xC);
    // System.Single _s
    // Size: 0x4
    // Offset: 0x34
    float s;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // System.Single _t
    // Size: 0x4
    // Offset: 0x38
    float t;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // UnityEngine.Rendering.Universal.LibTessDotNet.PQHandle _pqHandle
    // Size: 0x4
    // Offset: 0x3C
    ::UnityEngine::Rendering::Universal::LibTessDotNet::PQHandle pqHandle;
    // Field size check
    static_assert(sizeof(::UnityEngine::Rendering::Universal::LibTessDotNet::PQHandle) == 0x4);
    // System.Int32 _n
    // Size: 0x4
    // Offset: 0x40
    int n;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // System.Object _data
    // Size: 0x8
    // Offset: 0x48
    ::Il2CppObject* data;
    // Field size check
    static_assert(sizeof(::Il2CppObject*) == 0x8);
    public:
    // Get instance field reference: UnityEngine.Rendering.Universal.LibTessDotNet.MeshUtils/Vertex _prev
    [[deprecated("Use field access instead!")]] ::UnityEngine::Rendering::Universal::LibTessDotNet::MeshUtils::Vertex*& dyn__prev();
    // Get instance field reference: UnityEngine.Rendering.Universal.LibTessDotNet.MeshUtils/Vertex _next
    [[deprecated("Use field access instead!")]] ::UnityEngine::Rendering::Universal::LibTessDotNet::MeshUtils::Vertex*& dyn__next();
    // Get instance field reference: UnityEngine.Rendering.Universal.LibTessDotNet.MeshUtils/Edge _anEdge
    [[deprecated("Use field access instead!")]] ::UnityEngine::Rendering::Universal::LibTessDotNet::MeshUtils::Edge*& dyn__anEdge();
    // Get instance field reference: UnityEngine.Rendering.Universal.LibTessDotNet.Vec3 _coords
    [[deprecated("Use field access instead!")]] ::UnityEngine::Rendering::Universal::LibTessDotNet::Vec3& dyn__coords();
    // Get instance field reference: System.Single _s
    [[deprecated("Use field access instead!")]] float& dyn__s();
    // Get instance field reference: System.Single _t
    [[deprecated("Use field access instead!")]] float& dyn__t();
    // Get instance field reference: UnityEngine.Rendering.Universal.LibTessDotNet.PQHandle _pqHandle
    [[deprecated("Use field access instead!")]] ::UnityEngine::Rendering::Universal::LibTessDotNet::PQHandle& dyn__pqHandle();
    // Get instance field reference: System.Int32 _n
    [[deprecated("Use field access instead!")]] int& dyn__n();
    // Get instance field reference: System.Object _data
    [[deprecated("Use field access instead!")]] ::Il2CppObject*& dyn__data();
    // public override System.Void Reset()
    // Offset: 0x52FC460
    // Implemented from: UnityEngine.Rendering.Universal.LibTessDotNet.MeshUtils/Pooled`1
    // Base method: System.Void Pooled_1::Reset()
    void Reset();
    // public System.Void .ctor()
    // Offset: 0x52FC50C
    // Implemented from: UnityEngine.Rendering.Universal.LibTessDotNet.MeshUtils/Pooled`1
    // Base method: System.Void Pooled_1::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static MeshUtils::Vertex* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::Universal::LibTessDotNet::MeshUtils::Vertex::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<MeshUtils::Vertex*, creationType>()));
    }
  }; // UnityEngine.Rendering.Universal.LibTessDotNet.MeshUtils/Vertex
  // WARNING Not writing size check since size may be invalid!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::Rendering::Universal::LibTessDotNet::MeshUtils::Vertex::Reset
// Il2CppName: Reset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Rendering::Universal::LibTessDotNet::MeshUtils::Vertex::*)()>(&UnityEngine::Rendering::Universal::LibTessDotNet::MeshUtils::Vertex::Reset)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::Universal::LibTessDotNet::MeshUtils::Vertex*), "Reset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::Universal::LibTessDotNet::MeshUtils::Vertex::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
