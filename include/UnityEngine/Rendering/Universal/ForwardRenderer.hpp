// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.Rendering.Universal.ScriptableRenderer
#include "UnityEngine/Rendering/Universal/ScriptableRenderer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::Rendering::Universal
namespace UnityEngine::Rendering::Universal {
  // Forward declaring type: ForwardRendererData
  class ForwardRendererData;
  // Forward declaring type: RenderingData
  struct RenderingData;
  // Forward declaring type: CameraData
  struct CameraData;
}
// Forward declaring namespace: UnityEngine::Rendering
namespace UnityEngine::Rendering {
  // Forward declaring type: ScriptableRenderContext
  struct ScriptableRenderContext;
  // Forward declaring type: ScriptableCullingParameters
  struct ScriptableCullingParameters;
  // Forward declaring type: CommandBuffer
  class CommandBuffer;
  // Forward declaring type: RTHandle
  class RTHandle;
}
// Completed forward declares
// Type namespace: UnityEngine.Rendering.Universal
namespace UnityEngine::Rendering::Universal {
  // Forward declaring type: ForwardRenderer
  class ForwardRenderer;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::Rendering::Universal::ForwardRenderer);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::Rendering::Universal::ForwardRenderer*, "UnityEngine.Rendering.Universal", "ForwardRenderer");
// Type namespace: UnityEngine.Rendering.Universal
namespace UnityEngine::Rendering::Universal {
  // Size: 0x1A8
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.Rendering.Universal.ForwardRenderer
  // [TokenAttribute] Offset: FFFFFFFF
  // [ObsoleteAttribute] Offset: FFFFFFFF
  class ForwardRenderer : public ::UnityEngine::Rendering::Universal::ScriptableRenderer {
    public:
    // Get static field: static private readonly System.String k_ErrorMessage
    static ::StringW _get_k_ErrorMessage();
    // Set static field: static private readonly System.String k_ErrorMessage
    static void _set_k_ErrorMessage(::StringW value);
    // public System.Void .ctor(UnityEngine.Rendering.Universal.ForwardRendererData data)
    // Offset: 0x52ACFA4
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static ForwardRenderer* New_ctor(::UnityEngine::Rendering::Universal::ForwardRendererData* data) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::Universal::ForwardRenderer::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<ForwardRenderer*, creationType>(data)));
    }
    // public override System.Void Setup(UnityEngine.Rendering.ScriptableRenderContext context, ref UnityEngine.Rendering.Universal.RenderingData renderingData)
    // Offset: 0x52AD9DC
    // Implemented from: UnityEngine.Rendering.Universal.ScriptableRenderer
    // Base method: System.Void ScriptableRenderer::Setup(UnityEngine.Rendering.ScriptableRenderContext context, ref UnityEngine.Rendering.Universal.RenderingData renderingData)
    void Setup(::UnityEngine::Rendering::ScriptableRenderContext context, ByRef<::UnityEngine::Rendering::Universal::RenderingData> renderingData);
    // public override System.Void SetupLights(UnityEngine.Rendering.ScriptableRenderContext context, ref UnityEngine.Rendering.Universal.RenderingData renderingData)
    // Offset: 0x52ADA40
    // Implemented from: UnityEngine.Rendering.Universal.ScriptableRenderer
    // Base method: System.Void ScriptableRenderer::SetupLights(UnityEngine.Rendering.ScriptableRenderContext context, ref UnityEngine.Rendering.Universal.RenderingData renderingData)
    void SetupLights(::UnityEngine::Rendering::ScriptableRenderContext context, ByRef<::UnityEngine::Rendering::Universal::RenderingData> renderingData);
    // public override System.Void SetupCullingParameters(ref UnityEngine.Rendering.ScriptableCullingParameters cullingParameters, ref UnityEngine.Rendering.Universal.CameraData cameraData)
    // Offset: 0x52ADAA4
    // Implemented from: UnityEngine.Rendering.Universal.ScriptableRenderer
    // Base method: System.Void ScriptableRenderer::SetupCullingParameters(ref UnityEngine.Rendering.ScriptableCullingParameters cullingParameters, ref UnityEngine.Rendering.Universal.CameraData cameraData)
    void SetupCullingParameters(ByRef<::UnityEngine::Rendering::ScriptableCullingParameters> cullingParameters, ByRef<::UnityEngine::Rendering::Universal::CameraData> cameraData);
    // public override System.Void FinishRendering(UnityEngine.Rendering.CommandBuffer cmd)
    // Offset: 0x52ADB08
    // Implemented from: UnityEngine.Rendering.Universal.ScriptableRenderer
    // Base method: System.Void ScriptableRenderer::FinishRendering(UnityEngine.Rendering.CommandBuffer cmd)
    void FinishRendering(::UnityEngine::Rendering::CommandBuffer* cmd);
    // override System.Void SwapColorBuffer(UnityEngine.Rendering.CommandBuffer cmd)
    // Offset: 0x52ADB6C
    // Implemented from: UnityEngine.Rendering.Universal.ScriptableRenderer
    // Base method: System.Void ScriptableRenderer::SwapColorBuffer(UnityEngine.Rendering.CommandBuffer cmd)
    void SwapColorBuffer(::UnityEngine::Rendering::CommandBuffer* cmd);
    // override UnityEngine.Rendering.RTHandle GetCameraColorFrontBuffer(UnityEngine.Rendering.CommandBuffer cmd)
    // Offset: 0x52ADBD0
    // Implemented from: UnityEngine.Rendering.Universal.ScriptableRenderer
    // Base method: UnityEngine.Rendering.RTHandle ScriptableRenderer::GetCameraColorFrontBuffer(UnityEngine.Rendering.CommandBuffer cmd)
    ::UnityEngine::Rendering::RTHandle* GetCameraColorFrontBuffer(::UnityEngine::Rendering::CommandBuffer* cmd);
    // static private System.Void .cctor()
    // Offset: 0x52ADC08
    // Implemented from: UnityEngine.Rendering.Universal.ScriptableRenderer
    // Base method: System.Void ScriptableRenderer::.cctor()
    static void _cctor();
  }; // UnityEngine.Rendering.Universal.ForwardRenderer
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::Rendering::Universal::ForwardRenderer::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::Rendering::Universal::ForwardRenderer::Setup
// Il2CppName: Setup
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Rendering::Universal::ForwardRenderer::*)(::UnityEngine::Rendering::ScriptableRenderContext, ByRef<::UnityEngine::Rendering::Universal::RenderingData>)>(&UnityEngine::Rendering::Universal::ForwardRenderer::Setup)> {
  static const MethodInfo* get() {
    static auto* context = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "ScriptableRenderContext")->byval_arg;
    static auto* renderingData = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering.Universal", "RenderingData")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::Universal::ForwardRenderer*), "Setup", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{context, renderingData});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::Universal::ForwardRenderer::SetupLights
// Il2CppName: SetupLights
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Rendering::Universal::ForwardRenderer::*)(::UnityEngine::Rendering::ScriptableRenderContext, ByRef<::UnityEngine::Rendering::Universal::RenderingData>)>(&UnityEngine::Rendering::Universal::ForwardRenderer::SetupLights)> {
  static const MethodInfo* get() {
    static auto* context = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "ScriptableRenderContext")->byval_arg;
    static auto* renderingData = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering.Universal", "RenderingData")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::Universal::ForwardRenderer*), "SetupLights", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{context, renderingData});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::Universal::ForwardRenderer::SetupCullingParameters
// Il2CppName: SetupCullingParameters
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Rendering::Universal::ForwardRenderer::*)(ByRef<::UnityEngine::Rendering::ScriptableCullingParameters>, ByRef<::UnityEngine::Rendering::Universal::CameraData>)>(&UnityEngine::Rendering::Universal::ForwardRenderer::SetupCullingParameters)> {
  static const MethodInfo* get() {
    static auto* cullingParameters = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "ScriptableCullingParameters")->this_arg;
    static auto* cameraData = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering.Universal", "CameraData")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::Universal::ForwardRenderer*), "SetupCullingParameters", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{cullingParameters, cameraData});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::Universal::ForwardRenderer::FinishRendering
// Il2CppName: FinishRendering
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Rendering::Universal::ForwardRenderer::*)(::UnityEngine::Rendering::CommandBuffer*)>(&UnityEngine::Rendering::Universal::ForwardRenderer::FinishRendering)> {
  static const MethodInfo* get() {
    static auto* cmd = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "CommandBuffer")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::Universal::ForwardRenderer*), "FinishRendering", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{cmd});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::Universal::ForwardRenderer::SwapColorBuffer
// Il2CppName: SwapColorBuffer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Rendering::Universal::ForwardRenderer::*)(::UnityEngine::Rendering::CommandBuffer*)>(&UnityEngine::Rendering::Universal::ForwardRenderer::SwapColorBuffer)> {
  static const MethodInfo* get() {
    static auto* cmd = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "CommandBuffer")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::Universal::ForwardRenderer*), "SwapColorBuffer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{cmd});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::Universal::ForwardRenderer::GetCameraColorFrontBuffer
// Il2CppName: GetCameraColorFrontBuffer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Rendering::RTHandle* (UnityEngine::Rendering::Universal::ForwardRenderer::*)(::UnityEngine::Rendering::CommandBuffer*)>(&UnityEngine::Rendering::Universal::ForwardRenderer::GetCameraColorFrontBuffer)> {
  static const MethodInfo* get() {
    static auto* cmd = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "CommandBuffer")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::Universal::ForwardRenderer*), "GetCameraColorFrontBuffer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{cmd});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::Universal::ForwardRenderer::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&UnityEngine::Rendering::Universal::ForwardRenderer::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::Universal::ForwardRenderer*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
