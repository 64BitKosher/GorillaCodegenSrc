// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/byref.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::Rendering::Universal
namespace UnityEngine::Rendering::Universal {
  // Forward declaring type: Renderer2DData
  class Renderer2DData;
}
// Completed forward declares
// Type namespace: UnityEngine.Rendering.Universal
namespace UnityEngine::Rendering::Universal {
  // Forward declaring type: IRenderPass2D
  class IRenderPass2D;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::Rendering::Universal::IRenderPass2D);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::Rendering::Universal::IRenderPass2D*, "UnityEngine.Rendering.Universal", "IRenderPass2D");
// Type namespace: UnityEngine.Rendering.Universal
namespace UnityEngine::Rendering::Universal {
  // Size: 0x0
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.Rendering.Universal.IRenderPass2D
  // [TokenAttribute] Offset: FFFFFFFF
  class IRenderPass2D {
    public:
    // public UnityEngine.Rendering.Universal.Renderer2DData get_rendererData()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::UnityEngine::Rendering::Universal::Renderer2DData* get_rendererData();
  }; // UnityEngine.Rendering.Universal.IRenderPass2D
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::Rendering::Universal::IRenderPass2D::get_rendererData
// Il2CppName: get_rendererData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Rendering::Universal::Renderer2DData* (UnityEngine::Rendering::Universal::IRenderPass2D::*)()>(&UnityEngine::Rendering::Universal::IRenderPass2D::get_rendererData)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::Universal::IRenderPass2D*), "get_rendererData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
