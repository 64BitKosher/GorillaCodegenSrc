// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.Rendering.Universal.DebugDisplaySettingsMaterial
#include "UnityEngine/Rendering/Universal/DebugDisplaySettingsMaterial.hpp"
// Including type: UnityEngine.Rendering.DebugUI/Widget/NameAndTooltip
#include "UnityEngine/Rendering/DebugUI_Widget_NameAndTooltip.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: String
  class String;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::Rendering::Universal::DebugDisplaySettingsMaterial::Strings);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::Rendering::Universal::DebugDisplaySettingsMaterial::Strings*, "UnityEngine.Rendering.Universal", "DebugDisplaySettingsMaterial/Strings");
// Type namespace: UnityEngine.Rendering.Universal
namespace UnityEngine::Rendering::Universal {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.Rendering.Universal.DebugDisplaySettingsMaterial/Strings
  // [TokenAttribute] Offset: FFFFFFFF
  class DebugDisplaySettingsMaterial::Strings : public ::Il2CppObject {
    public:
    // static field const value: static public System.String AlbedoSettingsContainerName
    static constexpr const char* AlbedoSettingsContainerName = "Albedo Settings";
    // Get static field: static public System.String AlbedoSettingsContainerName
    static ::StringW _get_AlbedoSettingsContainerName();
    // Set static field: static public System.String AlbedoSettingsContainerName
    static void _set_AlbedoSettingsContainerName(::StringW value);
    // static field const value: static public System.String MetallicSettingsContainerName
    static constexpr const char* MetallicSettingsContainerName = "Metallic Settings";
    // Get static field: static public System.String MetallicSettingsContainerName
    static ::StringW _get_MetallicSettingsContainerName();
    // Set static field: static public System.String MetallicSettingsContainerName
    static void _set_MetallicSettingsContainerName(::StringW value);
    // Get static field: static public readonly UnityEngine.Rendering.DebugUI/Widget/NameAndTooltip MaterialOverride
    static ::UnityEngine::Rendering::DebugUI::Widget::NameAndTooltip _get_MaterialOverride();
    // Set static field: static public readonly UnityEngine.Rendering.DebugUI/Widget/NameAndTooltip MaterialOverride
    static void _set_MaterialOverride(::UnityEngine::Rendering::DebugUI::Widget::NameAndTooltip value);
    // Get static field: static public readonly UnityEngine.Rendering.DebugUI/Widget/NameAndTooltip VertexAttribute
    static ::UnityEngine::Rendering::DebugUI::Widget::NameAndTooltip _get_VertexAttribute();
    // Set static field: static public readonly UnityEngine.Rendering.DebugUI/Widget/NameAndTooltip VertexAttribute
    static void _set_VertexAttribute(::UnityEngine::Rendering::DebugUI::Widget::NameAndTooltip value);
    // Get static field: static public readonly UnityEngine.Rendering.DebugUI/Widget/NameAndTooltip MaterialValidationMode
    static ::UnityEngine::Rendering::DebugUI::Widget::NameAndTooltip _get_MaterialValidationMode();
    // Set static field: static public readonly UnityEngine.Rendering.DebugUI/Widget/NameAndTooltip MaterialValidationMode
    static void _set_MaterialValidationMode(::UnityEngine::Rendering::DebugUI::Widget::NameAndTooltip value);
    // Get static field: static public readonly UnityEngine.Rendering.DebugUI/Widget/NameAndTooltip ValidationPreset
    static ::UnityEngine::Rendering::DebugUI::Widget::NameAndTooltip _get_ValidationPreset();
    // Set static field: static public readonly UnityEngine.Rendering.DebugUI/Widget/NameAndTooltip ValidationPreset
    static void _set_ValidationPreset(::UnityEngine::Rendering::DebugUI::Widget::NameAndTooltip value);
    // Get static field: static public readonly UnityEngine.Rendering.DebugUI/Widget/NameAndTooltip AlbedoCustomColor
    static ::UnityEngine::Rendering::DebugUI::Widget::NameAndTooltip _get_AlbedoCustomColor();
    // Set static field: static public readonly UnityEngine.Rendering.DebugUI/Widget/NameAndTooltip AlbedoCustomColor
    static void _set_AlbedoCustomColor(::UnityEngine::Rendering::DebugUI::Widget::NameAndTooltip value);
    // Get static field: static public readonly UnityEngine.Rendering.DebugUI/Widget/NameAndTooltip AlbedoMinLuminance
    static ::UnityEngine::Rendering::DebugUI::Widget::NameAndTooltip _get_AlbedoMinLuminance();
    // Set static field: static public readonly UnityEngine.Rendering.DebugUI/Widget/NameAndTooltip AlbedoMinLuminance
    static void _set_AlbedoMinLuminance(::UnityEngine::Rendering::DebugUI::Widget::NameAndTooltip value);
    // Get static field: static public readonly UnityEngine.Rendering.DebugUI/Widget/NameAndTooltip AlbedoMaxLuminance
    static ::UnityEngine::Rendering::DebugUI::Widget::NameAndTooltip _get_AlbedoMaxLuminance();
    // Set static field: static public readonly UnityEngine.Rendering.DebugUI/Widget/NameAndTooltip AlbedoMaxLuminance
    static void _set_AlbedoMaxLuminance(::UnityEngine::Rendering::DebugUI::Widget::NameAndTooltip value);
    // Get static field: static public readonly UnityEngine.Rendering.DebugUI/Widget/NameAndTooltip AlbedoHueTolerance
    static ::UnityEngine::Rendering::DebugUI::Widget::NameAndTooltip _get_AlbedoHueTolerance();
    // Set static field: static public readonly UnityEngine.Rendering.DebugUI/Widget/NameAndTooltip AlbedoHueTolerance
    static void _set_AlbedoHueTolerance(::UnityEngine::Rendering::DebugUI::Widget::NameAndTooltip value);
    // Get static field: static public readonly UnityEngine.Rendering.DebugUI/Widget/NameAndTooltip AlbedoSaturationTolerance
    static ::UnityEngine::Rendering::DebugUI::Widget::NameAndTooltip _get_AlbedoSaturationTolerance();
    // Set static field: static public readonly UnityEngine.Rendering.DebugUI/Widget/NameAndTooltip AlbedoSaturationTolerance
    static void _set_AlbedoSaturationTolerance(::UnityEngine::Rendering::DebugUI::Widget::NameAndTooltip value);
    // Get static field: static public readonly UnityEngine.Rendering.DebugUI/Widget/NameAndTooltip MetallicMinValue
    static ::UnityEngine::Rendering::DebugUI::Widget::NameAndTooltip _get_MetallicMinValue();
    // Set static field: static public readonly UnityEngine.Rendering.DebugUI/Widget/NameAndTooltip MetallicMinValue
    static void _set_MetallicMinValue(::UnityEngine::Rendering::DebugUI::Widget::NameAndTooltip value);
    // Get static field: static public readonly UnityEngine.Rendering.DebugUI/Widget/NameAndTooltip MetallicMaxValue
    static ::UnityEngine::Rendering::DebugUI::Widget::NameAndTooltip _get_MetallicMaxValue();
    // Set static field: static public readonly UnityEngine.Rendering.DebugUI/Widget/NameAndTooltip MetallicMaxValue
    static void _set_MetallicMaxValue(::UnityEngine::Rendering::DebugUI::Widget::NameAndTooltip value);
    // static private System.Void .cctor()
    // Offset: 0x5296328
    static void _cctor();
  }; // UnityEngine.Rendering.Universal.DebugDisplaySettingsMaterial/Strings
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::Rendering::Universal::DebugDisplaySettingsMaterial::Strings::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&UnityEngine::Rendering::Universal::DebugDisplaySettingsMaterial::Strings::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::Universal::DebugDisplaySettingsMaterial::Strings*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
