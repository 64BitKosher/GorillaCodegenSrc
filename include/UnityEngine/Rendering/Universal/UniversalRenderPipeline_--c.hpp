// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.Rendering.Universal.UniversalRenderPipeline
#include "UnityEngine/Rendering/Universal/UniversalRenderPipeline.hpp"
// Including type: UnityEngine.Experimental.GlobalIllumination.LightDataGI
#include "UnityEngine/Experimental/GlobalIllumination/LightDataGI.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Comparison`1<T>
  template<typename T>
  class Comparison_1;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Camera
  class Camera;
  // Forward declaring type: Light
  class Light;
}
// Forward declaring namespace: Unity::Collections
namespace Unity::Collections {
  // Forward declaring type: NativeArray`1<T>
  template<typename T>
  struct NativeArray_1;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::Rendering::Universal::UniversalRenderPipeline::$$c);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::Rendering::Universal::UniversalRenderPipeline::$$c*, "UnityEngine.Rendering.Universal", "UniversalRenderPipeline/<>c");
// Type namespace: UnityEngine.Rendering.Universal
namespace UnityEngine::Rendering::Universal {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.Rendering.Universal.UniversalRenderPipeline/<>c
  // [TokenAttribute] Offset: FFFFFFFF
  // [CompilerGeneratedAttribute] Offset: FFFFFFFF
  class UniversalRenderPipeline::$$c : public ::Il2CppObject {
    public:
    // Get static field: static public readonly UnityEngine.Rendering.Universal.UniversalRenderPipeline/<>c <>9
    static ::UnityEngine::Rendering::Universal::UniversalRenderPipeline::$$c* _get_$$9();
    // Set static field: static public readonly UnityEngine.Rendering.Universal.UniversalRenderPipeline/<>c <>9
    static void _set_$$9(::UnityEngine::Rendering::Universal::UniversalRenderPipeline::$$c* value);
    // Get static field: static public System.Comparison`1<UnityEngine.Camera> <>9__35_0
    static ::System::Comparison_1<::UnityEngine::Camera*>* _get_$$9__35_0();
    // Set static field: static public System.Comparison`1<UnityEngine.Camera> <>9__35_0
    static void _set_$$9__35_0(::System::Comparison_1<::UnityEngine::Camera*>* value);
    // static private System.Void .cctor()
    // Offset: 0x52F7B04
    static void _cctor();
    // public System.Void .ctor()
    // Offset: 0x52F7B6C
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static UniversalRenderPipeline::$$c* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::Universal::UniversalRenderPipeline::$$c::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<UniversalRenderPipeline::$$c*, creationType>()));
    }
    // System.Int32 <.ctor>b__35_0(UnityEngine.Camera camera1, UnityEngine.Camera camera2)
    // Offset: 0x52F7B74
    int $_ctor$b__35_0(::UnityEngine::Camera* camera1, ::UnityEngine::Camera* camera2);
    // System.Void <.cctor>b__98_0(UnityEngine.Light[] requests, Unity.Collections.NativeArray`1<UnityEngine.Experimental.GlobalIllumination.LightDataGI> lightsOutput)
    // Offset: 0x52F7BDC
    void $_cctor$b__98_0(::ArrayW<::UnityEngine::Light*> requests, ::Unity::Collections::NativeArray_1<::UnityEngine::Experimental::GlobalIllumination::LightDataGI> lightsOutput);
  }; // UnityEngine.Rendering.Universal.UniversalRenderPipeline/<>c
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::Rendering::Universal::UniversalRenderPipeline::$$c::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&UnityEngine::Rendering::Universal::UniversalRenderPipeline::$$c::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::Universal::UniversalRenderPipeline::$$c*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::Universal::UniversalRenderPipeline::$$c::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::Rendering::Universal::UniversalRenderPipeline::$$c::$_ctor$b__35_0
// Il2CppName: <.ctor>b__35_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::Rendering::Universal::UniversalRenderPipeline::$$c::*)(::UnityEngine::Camera*, ::UnityEngine::Camera*)>(&UnityEngine::Rendering::Universal::UniversalRenderPipeline::$$c::$_ctor$b__35_0)> {
  static const MethodInfo* get() {
    static auto* camera1 = &::il2cpp_utils::GetClassFromName("UnityEngine", "Camera")->byval_arg;
    static auto* camera2 = &::il2cpp_utils::GetClassFromName("UnityEngine", "Camera")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::Universal::UniversalRenderPipeline::$$c*), "<.ctor>b__35_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{camera1, camera2});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::Universal::UniversalRenderPipeline::$$c::$_cctor$b__98_0
// Il2CppName: <.cctor>b__98_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Rendering::Universal::UniversalRenderPipeline::$$c::*)(::ArrayW<::UnityEngine::Light*>, ::Unity::Collections::NativeArray_1<::UnityEngine::Experimental::GlobalIllumination::LightDataGI>)>(&UnityEngine::Rendering::Universal::UniversalRenderPipeline::$$c::$_cctor$b__98_0)> {
  static const MethodInfo* get() {
    static auto* requests = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("UnityEngine", "Light"), 1)->byval_arg;
    static auto* lightsOutput = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("Unity.Collections", "NativeArray`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.Experimental.GlobalIllumination", "LightDataGI")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::Universal::UniversalRenderPipeline::$$c*), "<.cctor>b__98_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{requests, lightsOutput});
  }
};
