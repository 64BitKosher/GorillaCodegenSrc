// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.Rendering.IDebugDisplaySettingsData
#include "UnityEngine/Rendering/IDebugDisplaySettingsData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::Rendering::Universal
namespace UnityEngine::Rendering::Universal {
}
// Forward declaring namespace: UnityEngine::Rendering
namespace UnityEngine::Rendering {
  // Forward declaring type: DebugFrameTiming
  class DebugFrameTiming;
  // Forward declaring type: IDebugDisplaySettingsPanelDisposable
  class IDebugDisplaySettingsPanelDisposable;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Color
  struct Color;
}
// Completed forward declares
// Type namespace: UnityEngine.Rendering.Universal
namespace UnityEngine::Rendering::Universal {
  // Forward declaring type: DebugDisplayStats
  class DebugDisplayStats;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::Rendering::Universal::DebugDisplayStats);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::Rendering::Universal::DebugDisplayStats*, "UnityEngine.Rendering.Universal", "DebugDisplayStats");
// Type namespace: UnityEngine.Rendering.Universal
namespace UnityEngine::Rendering::Universal {
  // Size: 0x18
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.Rendering.Universal.DebugDisplayStats
  // [TokenAttribute] Offset: FFFFFFFF
  class DebugDisplayStats : public ::Il2CppObject/*, public ::UnityEngine::Rendering::IDebugDisplaySettingsData*/ {
    public:
    // Nested type: ::UnityEngine::Rendering::Universal::DebugDisplayStats::StatsPanel
    class StatsPanel;
    public:
    // private UnityEngine.Rendering.DebugFrameTiming m_DebugFrameTiming
    // Size: 0x8
    // Offset: 0x10
    ::UnityEngine::Rendering::DebugFrameTiming* m_DebugFrameTiming;
    // Field size check
    static_assert(sizeof(::UnityEngine::Rendering::DebugFrameTiming*) == 0x8);
    public:
    // Creating interface conversion operator: operator ::UnityEngine::Rendering::IDebugDisplaySettingsData
    operator ::UnityEngine::Rendering::IDebugDisplaySettingsData() noexcept {
      return *reinterpret_cast<::UnityEngine::Rendering::IDebugDisplaySettingsData*>(this);
    }
    // Creating conversion operator: operator ::UnityEngine::Rendering::DebugFrameTiming*
    constexpr operator ::UnityEngine::Rendering::DebugFrameTiming*() const noexcept {
      return m_DebugFrameTiming;
    }
    // Get instance field reference: private UnityEngine.Rendering.DebugFrameTiming m_DebugFrameTiming
    [[deprecated("Use field access instead!")]] ::UnityEngine::Rendering::DebugFrameTiming*& dyn_m_DebugFrameTiming();
    // public System.Void UpdateFrameTiming()
    // Offset: 0x529CE70
    void UpdateFrameTiming();
    // public System.Boolean get_AreAnySettingsActive()
    // Offset: 0x529CE8C
    bool get_AreAnySettingsActive();
    // public System.Boolean get_IsPostProcessingAllowed()
    // Offset: 0x529CE94
    bool get_IsPostProcessingAllowed();
    // public System.Boolean get_IsLightingActive()
    // Offset: 0x529CE9C
    bool get_IsLightingActive();
    // public System.Boolean TryGetScreenClearColor(ref UnityEngine.Color _)
    // Offset: 0x529CEA4
    bool TryGetScreenClearColor(ByRef<::UnityEngine::Color> _);
    // public UnityEngine.Rendering.IDebugDisplaySettingsPanelDisposable CreatePanel()
    // Offset: 0x529CEAC
    ::UnityEngine::Rendering::IDebugDisplaySettingsPanelDisposable* CreatePanel();
    // public System.Void .ctor()
    // Offset: 0x529D0A4
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static DebugDisplayStats* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::Universal::DebugDisplayStats::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<DebugDisplayStats*, creationType>()));
    }
  }; // UnityEngine.Rendering.Universal.DebugDisplayStats
  #pragma pack(pop)
  static check_size<sizeof(DebugDisplayStats), 16 + sizeof(::UnityEngine::Rendering::DebugFrameTiming*)> __UnityEngine_Rendering_Universal_DebugDisplayStatsSizeCheck;
  static_assert(sizeof(DebugDisplayStats) == 0x18);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::Rendering::Universal::DebugDisplayStats::UpdateFrameTiming
// Il2CppName: UpdateFrameTiming
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Rendering::Universal::DebugDisplayStats::*)()>(&UnityEngine::Rendering::Universal::DebugDisplayStats::UpdateFrameTiming)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::Universal::DebugDisplayStats*), "UpdateFrameTiming", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::Universal::DebugDisplayStats::get_AreAnySettingsActive
// Il2CppName: get_AreAnySettingsActive
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::Rendering::Universal::DebugDisplayStats::*)()>(&UnityEngine::Rendering::Universal::DebugDisplayStats::get_AreAnySettingsActive)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::Universal::DebugDisplayStats*), "get_AreAnySettingsActive", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::Universal::DebugDisplayStats::get_IsPostProcessingAllowed
// Il2CppName: get_IsPostProcessingAllowed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::Rendering::Universal::DebugDisplayStats::*)()>(&UnityEngine::Rendering::Universal::DebugDisplayStats::get_IsPostProcessingAllowed)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::Universal::DebugDisplayStats*), "get_IsPostProcessingAllowed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::Universal::DebugDisplayStats::get_IsLightingActive
// Il2CppName: get_IsLightingActive
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::Rendering::Universal::DebugDisplayStats::*)()>(&UnityEngine::Rendering::Universal::DebugDisplayStats::get_IsLightingActive)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::Universal::DebugDisplayStats*), "get_IsLightingActive", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::Universal::DebugDisplayStats::TryGetScreenClearColor
// Il2CppName: TryGetScreenClearColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::Rendering::Universal::DebugDisplayStats::*)(ByRef<::UnityEngine::Color>)>(&UnityEngine::Rendering::Universal::DebugDisplayStats::TryGetScreenClearColor)> {
  static const MethodInfo* get() {
    static auto* _ = &::il2cpp_utils::GetClassFromName("UnityEngine", "Color")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::Universal::DebugDisplayStats*), "TryGetScreenClearColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{_});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::Universal::DebugDisplayStats::CreatePanel
// Il2CppName: CreatePanel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Rendering::IDebugDisplaySettingsPanelDisposable* (UnityEngine::Rendering::Universal::DebugDisplayStats::*)()>(&UnityEngine::Rendering::Universal::DebugDisplayStats::CreatePanel)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::Universal::DebugDisplayStats*), "CreatePanel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::Universal::DebugDisplayStats::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
