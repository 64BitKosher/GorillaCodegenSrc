// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.Rendering.Universal.InvokeOnRenderObjectCallbackPass
#include "UnityEngine/Rendering/Universal/InvokeOnRenderObjectCallbackPass.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::Experimental::Rendering::RenderGraphModule
namespace UnityEngine::Experimental::Rendering::RenderGraphModule {
  // Forward declaring type: RenderFunc`1<PassData>
  template<typename PassData>
  class RenderFunc_1;
  // Forward declaring type: RenderGraphContext
  class RenderGraphContext;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::Rendering::Universal::InvokeOnRenderObjectCallbackPass::$$c);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::Rendering::Universal::InvokeOnRenderObjectCallbackPass::$$c*, "UnityEngine.Rendering.Universal", "InvokeOnRenderObjectCallbackPass/<>c");
// Type namespace: UnityEngine.Rendering.Universal
namespace UnityEngine::Rendering::Universal {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.Rendering.Universal.InvokeOnRenderObjectCallbackPass/<>c
  // [TokenAttribute] Offset: FFFFFFFF
  // [CompilerGeneratedAttribute] Offset: FFFFFFFF
  class InvokeOnRenderObjectCallbackPass::$$c : public ::Il2CppObject {
    public:
    // Get static field: static public readonly UnityEngine.Rendering.Universal.InvokeOnRenderObjectCallbackPass/<>c <>9
    static ::UnityEngine::Rendering::Universal::InvokeOnRenderObjectCallbackPass::$$c* _get_$$9();
    // Set static field: static public readonly UnityEngine.Rendering.Universal.InvokeOnRenderObjectCallbackPass/<>c <>9
    static void _set_$$9(::UnityEngine::Rendering::Universal::InvokeOnRenderObjectCallbackPass::$$c* value);
    // Get static field: static public UnityEngine.Experimental.Rendering.RenderGraphModule.RenderFunc`1<UnityEngine.Rendering.Universal.InvokeOnRenderObjectCallbackPass/PassData> <>9__3_0
    static ::UnityEngine::Experimental::Rendering::RenderGraphModule::RenderFunc_1<::UnityEngine::Rendering::Universal::InvokeOnRenderObjectCallbackPass::PassData*>* _get_$$9__3_0();
    // Set static field: static public UnityEngine.Experimental.Rendering.RenderGraphModule.RenderFunc`1<UnityEngine.Rendering.Universal.InvokeOnRenderObjectCallbackPass/PassData> <>9__3_0
    static void _set_$$9__3_0(::UnityEngine::Experimental::Rendering::RenderGraphModule::RenderFunc_1<::UnityEngine::Rendering::Universal::InvokeOnRenderObjectCallbackPass::PassData*>* value);
    // static private System.Void .cctor()
    // Offset: 0x52C6538
    static void _cctor();
    // public System.Void .ctor()
    // Offset: 0x52C65A0
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static InvokeOnRenderObjectCallbackPass::$$c* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::Universal::InvokeOnRenderObjectCallbackPass::$$c::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<InvokeOnRenderObjectCallbackPass::$$c*, creationType>()));
    }
    // System.Void <Render>b__3_0(UnityEngine.Rendering.Universal.InvokeOnRenderObjectCallbackPass/PassData data, UnityEngine.Experimental.Rendering.RenderGraphModule.RenderGraphContext context)
    // Offset: 0x52C65A8
    void $Render$b__3_0(::UnityEngine::Rendering::Universal::InvokeOnRenderObjectCallbackPass::PassData* data, ::UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphContext* context);
  }; // UnityEngine.Rendering.Universal.InvokeOnRenderObjectCallbackPass/<>c
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::Rendering::Universal::InvokeOnRenderObjectCallbackPass::$$c::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&UnityEngine::Rendering::Universal::InvokeOnRenderObjectCallbackPass::$$c::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::Universal::InvokeOnRenderObjectCallbackPass::$$c*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::Universal::InvokeOnRenderObjectCallbackPass::$$c::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::Rendering::Universal::InvokeOnRenderObjectCallbackPass::$$c::$Render$b__3_0
// Il2CppName: <Render>b__3_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Rendering::Universal::InvokeOnRenderObjectCallbackPass::$$c::*)(::UnityEngine::Rendering::Universal::InvokeOnRenderObjectCallbackPass::PassData*, ::UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphContext*)>(&UnityEngine::Rendering::Universal::InvokeOnRenderObjectCallbackPass::$$c::$Render$b__3_0)> {
  static const MethodInfo* get() {
    static auto* data = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering.Universal", "InvokeOnRenderObjectCallbackPass/PassData")->byval_arg;
    static auto* context = &::il2cpp_utils::GetClassFromName("UnityEngine.Experimental.Rendering.RenderGraphModule", "RenderGraphContext")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::Universal::InvokeOnRenderObjectCallbackPass::$$c*), "<Render>b__3_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{data, context});
  }
};
