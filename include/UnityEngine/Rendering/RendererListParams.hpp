// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Including type: System.IEquatable`1
#include "System/IEquatable_1.hpp"
// Including type: UnityEngine.Rendering.CullingResults
#include "UnityEngine/Rendering/CullingResults.hpp"
// Including type: UnityEngine.Rendering.DrawingSettings
#include "UnityEngine/Rendering/DrawingSettings.hpp"
// Including type: UnityEngine.Rendering.FilteringSettings
#include "UnityEngine/Rendering/FilteringSettings.hpp"
// Including type: UnityEngine.Rendering.ShaderTagId
#include "UnityEngine/Rendering/ShaderTagId.hpp"
// Including type: System.Nullable`1
#include "System/Nullable_1.hpp"
// Including type: UnityEngine.Rendering.RenderStateBlock
#include "UnityEngine/Rendering/RenderStateBlock.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Skipping declaration: IntPtr because it is already included!
}
// Completed forward declares
// Type namespace: UnityEngine.Rendering
namespace UnityEngine::Rendering {
  // Forward declaring type: RendererListParams
  struct RendererListParams;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::Rendering::RendererListParams, "UnityEngine.Rendering", "RendererListParams");
// Type namespace: UnityEngine.Rendering
namespace UnityEngine::Rendering {
  // WARNING Size may be invalid!
  // WARNING Layout: Sequential may not be correctly taken into account!
  // Autogenerated type: UnityEngine.Rendering.RendererListParams
  // [TokenAttribute] Offset: FFFFFFFF
  struct RendererListParams/*, public ::System::ValueType, public ::System::IEquatable_1<::UnityEngine::Rendering::RendererListParams>*/ {
    public:
    public:
    // public UnityEngine.Rendering.CullingResults cullingResults
    // Size: 0x10
    // Offset: 0x0
    ::UnityEngine::Rendering::CullingResults cullingResults;
    // Field size check
    static_assert(sizeof(::UnityEngine::Rendering::CullingResults) == 0x10);
    // public UnityEngine.Rendering.DrawingSettings drawSettings
    // Size: 0xC4
    // Offset: 0x10
    ::UnityEngine::Rendering::DrawingSettings drawSettings;
    // Field size check
    static_assert(sizeof(::UnityEngine::Rendering::DrawingSettings) == 0xC4);
    // public UnityEngine.Rendering.FilteringSettings filteringSettings
    // Size: 0x18
    // Offset: 0xD4
    ::UnityEngine::Rendering::FilteringSettings filteringSettings;
    // Field size check
    static_assert(sizeof(::UnityEngine::Rendering::FilteringSettings) == 0x18);
    // public UnityEngine.Rendering.ShaderTagId tagName
    // Size: 0x4
    // Offset: 0xEC
    ::UnityEngine::Rendering::ShaderTagId tagName;
    // Field size check
    static_assert(sizeof(::UnityEngine::Rendering::ShaderTagId) == 0x4);
    // public System.Boolean isPassTagName
    // Size: 0x1
    // Offset: 0xF0
    bool isPassTagName;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // public System.Nullable`1<Unity.Collections.NativeArray`1<UnityEngine.Rendering.ShaderTagId>> tagValues
    // Size: 0xFFFFFFFF
    // Offset: 0xF8
    ::System::Nullable_1<::Unity::Collections::NativeArray_1<::UnityEngine::Rendering::ShaderTagId>> tagValues;
    // public System.Nullable`1<Unity.Collections.NativeArray`1<UnityEngine.Rendering.RenderStateBlock>> stateBlocks
    // Size: 0xFFFFFFFF
    // Offset: 0x110
    ::System::Nullable_1<::Unity::Collections::NativeArray_1<::UnityEngine::Rendering::RenderStateBlock>> stateBlocks;
    public:
    // Creating value type constructor for type: RendererListParams
    constexpr RendererListParams(::UnityEngine::Rendering::CullingResults cullingResults_ = {}, ::UnityEngine::Rendering::DrawingSettings drawSettings_ = {}, ::UnityEngine::Rendering::FilteringSettings filteringSettings_ = {}, ::UnityEngine::Rendering::ShaderTagId tagName_ = {}, bool isPassTagName_ = {}, ::System::Nullable_1<::Unity::Collections::NativeArray_1<::UnityEngine::Rendering::ShaderTagId>> tagValues_ = {}, ::System::Nullable_1<::Unity::Collections::NativeArray_1<::UnityEngine::Rendering::RenderStateBlock>> stateBlocks_ = {}) noexcept : cullingResults{cullingResults_}, drawSettings{drawSettings_}, filteringSettings{filteringSettings_}, tagName{tagName_}, isPassTagName{isPassTagName_}, tagValues{tagValues_}, stateBlocks{stateBlocks_} {}
    // Creating interface conversion operator: operator ::System::ValueType
    operator ::System::ValueType() noexcept {
      return *reinterpret_cast<::System::ValueType*>(this);
    }
    // Creating interface conversion operator: operator ::System::IEquatable_1<::UnityEngine::Rendering::RendererListParams>
    operator ::System::IEquatable_1<::UnityEngine::Rendering::RendererListParams>() noexcept {
      return *reinterpret_cast<::System::IEquatable_1<::UnityEngine::Rendering::RendererListParams>*>(this);
    }
    // Get static field: static public readonly UnityEngine.Rendering.RendererListParams Invalid
    static ::UnityEngine::Rendering::RendererListParams _get_Invalid();
    // Set static field: static public readonly UnityEngine.Rendering.RendererListParams Invalid
    static void _set_Invalid(::UnityEngine::Rendering::RendererListParams value);
    // Get instance field reference: public UnityEngine.Rendering.CullingResults cullingResults
    [[deprecated("Use field access instead!")]] ::UnityEngine::Rendering::CullingResults& dyn_cullingResults();
    // Get instance field reference: public UnityEngine.Rendering.DrawingSettings drawSettings
    [[deprecated("Use field access instead!")]] ::UnityEngine::Rendering::DrawingSettings& dyn_drawSettings();
    // Get instance field reference: public UnityEngine.Rendering.FilteringSettings filteringSettings
    [[deprecated("Use field access instead!")]] ::UnityEngine::Rendering::FilteringSettings& dyn_filteringSettings();
    // Get instance field reference: public UnityEngine.Rendering.ShaderTagId tagName
    [[deprecated("Use field access instead!")]] ::UnityEngine::Rendering::ShaderTagId& dyn_tagName();
    // Get instance field reference: public System.Boolean isPassTagName
    [[deprecated("Use field access instead!")]] bool& dyn_isPassTagName();
    // Get instance field reference: public System.Nullable`1<Unity.Collections.NativeArray`1<UnityEngine.Rendering.ShaderTagId>> tagValues
    [[deprecated("Use field access instead!")]] ::System::Nullable_1<::Unity::Collections::NativeArray_1<::UnityEngine::Rendering::ShaderTagId>>& dyn_tagValues();
    // Get instance field reference: public System.Nullable`1<Unity.Collections.NativeArray`1<UnityEngine.Rendering.RenderStateBlock>> stateBlocks
    [[deprecated("Use field access instead!")]] ::System::Nullable_1<::Unity::Collections::NativeArray_1<::UnityEngine::Rendering::RenderStateBlock>>& dyn_stateBlocks();
    // System.Int32 get_numStateBlocks()
    // Offset: 0x54EA57C
    int get_numStateBlocks();
    // System.IntPtr get_stateBlocksPtr()
    // Offset: 0x54EA5E8
    ::System::IntPtr get_stateBlocksPtr();
    // System.IntPtr get_tagsValuePtr()
    // Offset: 0x54EA678
    ::System::IntPtr get_tagsValuePtr();
    // System.Void Dispose()
    // Offset: 0x54EA708
    void Dispose();
    // System.Void Validate()
    // Offset: 0x54EA810
    void Validate();
    // public System.Boolean Equals(UnityEngine.Rendering.RendererListParams other)
    // Offset: 0x54EAC6C
    bool Equals(::UnityEngine::Rendering::RendererListParams other);
    // static private System.Void .cctor()
    // Offset: 0x54EB0B4
    static void _cctor();
    // public override System.Boolean Equals(System.Object obj)
    // Offset: 0x54EAECC
    // Implemented from: System.ValueType
    // Base method: System.Boolean ValueType::Equals(System.Object obj)
    bool Equals(::Il2CppObject* obj);
    // public override System.Int32 GetHashCode()
    // Offset: 0x54EAF84
    // Implemented from: System.ValueType
    // Base method: System.Int32 ValueType::GetHashCode()
    int GetHashCode();
  }; // UnityEngine.Rendering.RendererListParams
  // WARNING Not writing size check since size may be invalid!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::Rendering::RendererListParams::get_numStateBlocks
// Il2CppName: get_numStateBlocks
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::Rendering::RendererListParams::*)()>(&UnityEngine::Rendering::RendererListParams::get_numStateBlocks)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::RendererListParams), "get_numStateBlocks", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::RendererListParams::get_stateBlocksPtr
// Il2CppName: get_stateBlocksPtr
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (UnityEngine::Rendering::RendererListParams::*)()>(&UnityEngine::Rendering::RendererListParams::get_stateBlocksPtr)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::RendererListParams), "get_stateBlocksPtr", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::RendererListParams::get_tagsValuePtr
// Il2CppName: get_tagsValuePtr
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (UnityEngine::Rendering::RendererListParams::*)()>(&UnityEngine::Rendering::RendererListParams::get_tagsValuePtr)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::RendererListParams), "get_tagsValuePtr", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::RendererListParams::Dispose
// Il2CppName: Dispose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Rendering::RendererListParams::*)()>(&UnityEngine::Rendering::RendererListParams::Dispose)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::RendererListParams), "Dispose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::RendererListParams::Validate
// Il2CppName: Validate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Rendering::RendererListParams::*)()>(&UnityEngine::Rendering::RendererListParams::Validate)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::RendererListParams), "Validate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::RendererListParams::Equals
// Il2CppName: Equals
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::Rendering::RendererListParams::*)(::UnityEngine::Rendering::RendererListParams)>(&UnityEngine::Rendering::RendererListParams::Equals)> {
  static const MethodInfo* get() {
    static auto* other = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "RendererListParams")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::RendererListParams), "Equals", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{other});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::RendererListParams::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&UnityEngine::Rendering::RendererListParams::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::RendererListParams), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::RendererListParams::Equals
// Il2CppName: Equals
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::Rendering::RendererListParams::*)(::Il2CppObject*)>(&UnityEngine::Rendering::RendererListParams::Equals)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::RendererListParams), "Equals", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::RendererListParams::GetHashCode
// Il2CppName: GetHashCode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::Rendering::RendererListParams::*)()>(&UnityEngine::Rendering::RendererListParams::GetHashCode)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::RendererListParams), "GetHashCode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
