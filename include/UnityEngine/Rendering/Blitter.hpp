// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.Rendering.LocalKeyword
#include "UnityEngine/Rendering/LocalKeyword.hpp"
// Including type: UnityEngine.Vector4
#include "UnityEngine/Vector4.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::Rendering
namespace UnityEngine::Rendering {
  // Forward declaring type: TextureDimension
  struct TextureDimension;
  // Forward declaring type: CommandBuffer
  class CommandBuffer;
  // Forward declaring type: RTHandle
  class RTHandle;
  // Forward declaring type: RenderTargetIdentifier
  struct RenderTargetIdentifier;
  // Forward declaring type: RenderBufferLoadAction
  struct RenderBufferLoadAction;
  // Forward declaring type: RenderBufferStoreAction
  struct RenderBufferStoreAction;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Material
  class Material;
  // Forward declaring type: MaterialPropertyBlock
  class MaterialPropertyBlock;
  // Forward declaring type: Mesh
  class Mesh;
  // Forward declaring type: Shader
  class Shader;
  // Forward declaring type: Texture
  class Texture;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Nullable`1<T>
  template<typename T>
  struct Nullable_1;
}
// Completed forward declares
// Type namespace: UnityEngine.Rendering
namespace UnityEngine::Rendering {
  // Forward declaring type: Blitter
  class Blitter;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::Rendering::Blitter);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::Rendering::Blitter*, "UnityEngine.Rendering", "Blitter");
// Type namespace: UnityEngine.Rendering
namespace UnityEngine::Rendering {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.Rendering.Blitter
  // [TokenAttribute] Offset: FFFFFFFF
  class Blitter : public ::Il2CppObject {
    public:
    // Nested type: ::UnityEngine::Rendering::Blitter::BlitShaderIDs
    class BlitShaderIDs;
    // Get static field: static private UnityEngine.Material s_Blit
    static ::UnityEngine::Material* _get_s_Blit();
    // Set static field: static private UnityEngine.Material s_Blit
    static void _set_s_Blit(::UnityEngine::Material* value);
    // Get static field: static private UnityEngine.Material s_BlitTexArray
    static ::UnityEngine::Material* _get_s_BlitTexArray();
    // Set static field: static private UnityEngine.Material s_BlitTexArray
    static void _set_s_BlitTexArray(::UnityEngine::Material* value);
    // Get static field: static private UnityEngine.Material s_BlitTexArraySingleSlice
    static ::UnityEngine::Material* _get_s_BlitTexArraySingleSlice();
    // Set static field: static private UnityEngine.Material s_BlitTexArraySingleSlice
    static void _set_s_BlitTexArraySingleSlice(::UnityEngine::Material* value);
    // Get static field: static private UnityEngine.Material s_BlitColorAndDepth
    static ::UnityEngine::Material* _get_s_BlitColorAndDepth();
    // Set static field: static private UnityEngine.Material s_BlitColorAndDepth
    static void _set_s_BlitColorAndDepth(::UnityEngine::Material* value);
    // Get static field: static private UnityEngine.MaterialPropertyBlock s_PropertyBlock
    static ::UnityEngine::MaterialPropertyBlock* _get_s_PropertyBlock();
    // Set static field: static private UnityEngine.MaterialPropertyBlock s_PropertyBlock
    static void _set_s_PropertyBlock(::UnityEngine::MaterialPropertyBlock* value);
    // Get static field: static private UnityEngine.Mesh s_TriangleMesh
    static ::UnityEngine::Mesh* _get_s_TriangleMesh();
    // Set static field: static private UnityEngine.Mesh s_TriangleMesh
    static void _set_s_TriangleMesh(::UnityEngine::Mesh* value);
    // Get static field: static private UnityEngine.Mesh s_QuadMesh
    static ::UnityEngine::Mesh* _get_s_QuadMesh();
    // Set static field: static private UnityEngine.Mesh s_QuadMesh
    static void _set_s_QuadMesh(::UnityEngine::Mesh* value);
    // Get static field: static private UnityEngine.Rendering.LocalKeyword s_DecodeHdrKeyword
    static ::UnityEngine::Rendering::LocalKeyword _get_s_DecodeHdrKeyword();
    // Set static field: static private UnityEngine.Rendering.LocalKeyword s_DecodeHdrKeyword
    static void _set_s_DecodeHdrKeyword(::UnityEngine::Rendering::LocalKeyword value);
    // static public System.Void Initialize(UnityEngine.Shader blitPS, UnityEngine.Shader blitColorAndDepthPS)
    // Offset: 0x5258100
    static void Initialize(::UnityEngine::Shader* blitPS, ::UnityEngine::Shader* blitColorAndDepthPS);
    // static public System.Void Cleanup()
    // Offset: 0x5258A40
    static void Cleanup();
    // static public UnityEngine.Material GetBlitMaterial(UnityEngine.Rendering.TextureDimension dimension, System.Boolean singleSlice)
    // Offset: 0x5258C1C
    static ::UnityEngine::Material* GetBlitMaterial(::UnityEngine::Rendering::TextureDimension dimension, bool singleSlice);
    // static private System.Void DrawTriangle(UnityEngine.Rendering.CommandBuffer cmd, UnityEngine.Material material, System.Int32 shaderPass)
    // Offset: 0x5258C9C
    static void DrawTriangle(::UnityEngine::Rendering::CommandBuffer* cmd, ::UnityEngine::Material* material, int shaderPass);
    // static System.Void DrawQuad(UnityEngine.Rendering.CommandBuffer cmd, UnityEngine.Material material, System.Int32 shaderPass)
    // Offset: 0x5258E4C
    static void DrawQuad(::UnityEngine::Rendering::CommandBuffer* cmd, ::UnityEngine::Material* material, int shaderPass);
    // static public System.Void BlitTexture(UnityEngine.Rendering.CommandBuffer cmd, UnityEngine.Rendering.RTHandle source, UnityEngine.Vector4 scaleBias, System.Single mipLevel, System.Boolean bilinear)
    // Offset: 0x5258FFC
    static void BlitTexture(::UnityEngine::Rendering::CommandBuffer* cmd, ::UnityEngine::Rendering::RTHandle* source, ::UnityEngine::Vector4 scaleBias, float mipLevel, bool bilinear);
    // static public System.Void BlitTexture(UnityEngine.Rendering.CommandBuffer cmd, UnityEngine.Rendering.RTHandle source, UnityEngine.Vector4 scaleBias, UnityEngine.Material material, System.Int32 pass)
    // Offset: 0x5259150
    static void BlitTexture(::UnityEngine::Rendering::CommandBuffer* cmd, ::UnityEngine::Rendering::RTHandle* source, ::UnityEngine::Vector4 scaleBias, ::UnityEngine::Material* material, int pass);
    // static public System.Void BlitTexture(UnityEngine.Rendering.CommandBuffer cmd, UnityEngine.Rendering.RenderTargetIdentifier source, UnityEngine.Vector4 scaleBias, UnityEngine.Material material, System.Int32 pass)
    // Offset: 0x5259288
    static void BlitTexture(::UnityEngine::Rendering::CommandBuffer* cmd, ::UnityEngine::Rendering::RenderTargetIdentifier source, ::UnityEngine::Vector4 scaleBias, ::UnityEngine::Material* material, int pass);
    // static public System.Void BlitTexture(UnityEngine.Rendering.CommandBuffer cmd, UnityEngine.Vector4 scaleBias, UnityEngine.Material material, System.Int32 pass)
    // Offset: 0x52593D0
    static void BlitTexture(::UnityEngine::Rendering::CommandBuffer* cmd, ::UnityEngine::Vector4 scaleBias, ::UnityEngine::Material* material, int pass);
    // static public System.Void BlitCameraTexture(UnityEngine.Rendering.CommandBuffer cmd, UnityEngine.Rendering.RTHandle source, UnityEngine.Rendering.RTHandle destination, System.Single mipLevel, System.Boolean bilinear)
    // Offset: 0x52594C0
    static void BlitCameraTexture(::UnityEngine::Rendering::CommandBuffer* cmd, ::UnityEngine::Rendering::RTHandle* source, ::UnityEngine::Rendering::RTHandle* destination, float mipLevel, bool bilinear);
    // static public System.Void BlitCameraTexture(UnityEngine.Rendering.CommandBuffer cmd, UnityEngine.Rendering.RTHandle source, UnityEngine.Rendering.RTHandle destination, UnityEngine.Material material, System.Int32 pass)
    // Offset: 0x52596C0
    static void BlitCameraTexture(::UnityEngine::Rendering::CommandBuffer* cmd, ::UnityEngine::Rendering::RTHandle* source, ::UnityEngine::Rendering::RTHandle* destination, ::UnityEngine::Material* material, int pass);
    // static public System.Void BlitCameraTexture(UnityEngine.Rendering.CommandBuffer cmd, UnityEngine.Rendering.RTHandle source, UnityEngine.Rendering.RTHandle destination, UnityEngine.Rendering.RenderBufferLoadAction loadAction, UnityEngine.Rendering.RenderBufferStoreAction storeAction, UnityEngine.Material material, System.Int32 pass)
    // Offset: 0x5259814
    static void BlitCameraTexture(::UnityEngine::Rendering::CommandBuffer* cmd, ::UnityEngine::Rendering::RTHandle* source, ::UnityEngine::Rendering::RTHandle* destination, ::UnityEngine::Rendering::RenderBufferLoadAction loadAction, ::UnityEngine::Rendering::RenderBufferStoreAction storeAction, ::UnityEngine::Material* material, int pass);
    // static public System.Void BlitQuad(UnityEngine.Rendering.CommandBuffer cmd, UnityEngine.Texture source, UnityEngine.Vector4 scaleBiasTex, UnityEngine.Vector4 scaleBiasRT, System.Int32 mipLevelTex, System.Boolean bilinear)
    // Offset: 0x5259AA8
    static void BlitQuad(::UnityEngine::Rendering::CommandBuffer* cmd, ::UnityEngine::Texture* source, ::UnityEngine::Vector4 scaleBiasTex, ::UnityEngine::Vector4 scaleBiasRT, int mipLevelTex, bool bilinear);
    // static public System.Void BlitQuadWithPadding(UnityEngine.Rendering.CommandBuffer cmd, UnityEngine.Texture source, UnityEngine.Vector2 textureSize, UnityEngine.Vector4 scaleBiasTex, UnityEngine.Vector4 scaleBiasRT, System.Int32 mipLevelTex, System.Boolean bilinear, System.Int32 paddingInPixels)
    // Offset: 0x5259C84
    static void BlitQuadWithPadding(::UnityEngine::Rendering::CommandBuffer* cmd, ::UnityEngine::Texture* source, ::UnityEngine::Vector2 textureSize, ::UnityEngine::Vector4 scaleBiasTex, ::UnityEngine::Vector4 scaleBiasRT, int mipLevelTex, bool bilinear, int paddingInPixels);
    // static public System.Void BlitQuadWithPaddingMultiply(UnityEngine.Rendering.CommandBuffer cmd, UnityEngine.Texture source, UnityEngine.Vector2 textureSize, UnityEngine.Vector4 scaleBiasTex, UnityEngine.Vector4 scaleBiasRT, System.Int32 mipLevelTex, System.Boolean bilinear, System.Int32 paddingInPixels)
    // Offset: 0x5259F00
    static void BlitQuadWithPaddingMultiply(::UnityEngine::Rendering::CommandBuffer* cmd, ::UnityEngine::Texture* source, ::UnityEngine::Vector2 textureSize, ::UnityEngine::Vector4 scaleBiasTex, ::UnityEngine::Vector4 scaleBiasRT, int mipLevelTex, bool bilinear, int paddingInPixels);
    // static public System.Void BlitOctahedralWithPadding(UnityEngine.Rendering.CommandBuffer cmd, UnityEngine.Texture source, UnityEngine.Vector2 textureSize, UnityEngine.Vector4 scaleBiasTex, UnityEngine.Vector4 scaleBiasRT, System.Int32 mipLevelTex, System.Boolean bilinear, System.Int32 paddingInPixels)
    // Offset: 0x525A17C
    static void BlitOctahedralWithPadding(::UnityEngine::Rendering::CommandBuffer* cmd, ::UnityEngine::Texture* source, ::UnityEngine::Vector2 textureSize, ::UnityEngine::Vector4 scaleBiasTex, ::UnityEngine::Vector4 scaleBiasRT, int mipLevelTex, bool bilinear, int paddingInPixels);
    // static public System.Void BlitOctahedralWithPaddingMultiply(UnityEngine.Rendering.CommandBuffer cmd, UnityEngine.Texture source, UnityEngine.Vector2 textureSize, UnityEngine.Vector4 scaleBiasTex, UnityEngine.Vector4 scaleBiasRT, System.Int32 mipLevelTex, System.Boolean bilinear, System.Int32 paddingInPixels)
    // Offset: 0x525A394
    static void BlitOctahedralWithPaddingMultiply(::UnityEngine::Rendering::CommandBuffer* cmd, ::UnityEngine::Texture* source, ::UnityEngine::Vector2 textureSize, ::UnityEngine::Vector4 scaleBiasTex, ::UnityEngine::Vector4 scaleBiasRT, int mipLevelTex, bool bilinear, int paddingInPixels);
    // static public System.Void BlitCubeToOctahedral2DQuad(UnityEngine.Rendering.CommandBuffer cmd, UnityEngine.Texture source, UnityEngine.Vector4 scaleBiasRT, System.Int32 mipLevelTex)
    // Offset: 0x525A5AC
    static void BlitCubeToOctahedral2DQuad(::UnityEngine::Rendering::CommandBuffer* cmd, ::UnityEngine::Texture* source, ::UnityEngine::Vector4 scaleBiasRT, int mipLevelTex);
    // static public System.Void BlitCubeToOctahedral2DQuadWithPadding(UnityEngine.Rendering.CommandBuffer cmd, UnityEngine.Texture source, UnityEngine.Vector2 textureSize, UnityEngine.Vector4 scaleBiasRT, System.Int32 mipLevelTex, System.Boolean bilinear, System.Int32 paddingInPixels, System.Nullable`1<UnityEngine.Vector4> decodeInstructions)
    // Offset: 0x525A744
    static void BlitCubeToOctahedral2DQuadWithPadding(::UnityEngine::Rendering::CommandBuffer* cmd, ::UnityEngine::Texture* source, ::UnityEngine::Vector2 textureSize, ::UnityEngine::Vector4 scaleBiasRT, int mipLevelTex, bool bilinear, int paddingInPixels, ::System::Nullable_1<::UnityEngine::Vector4> decodeInstructions);
    // static public System.Void BlitCubeToOctahedral2DQuadSingleChannel(UnityEngine.Rendering.CommandBuffer cmd, UnityEngine.Texture source, UnityEngine.Vector4 scaleBiasRT, System.Int32 mipLevelTex)
    // Offset: 0x525AA54
    static void BlitCubeToOctahedral2DQuadSingleChannel(::UnityEngine::Rendering::CommandBuffer* cmd, ::UnityEngine::Texture* source, ::UnityEngine::Vector4 scaleBiasRT, int mipLevelTex);
    // static public System.Void BlitQuadSingleChannel(UnityEngine.Rendering.CommandBuffer cmd, UnityEngine.Texture source, UnityEngine.Vector4 scaleBiasTex, UnityEngine.Vector4 scaleBiasRT, System.Int32 mipLevelTex)
    // Offset: 0x525ACC4
    static void BlitQuadSingleChannel(::UnityEngine::Rendering::CommandBuffer* cmd, ::UnityEngine::Texture* source, ::UnityEngine::Vector4 scaleBiasTex, ::UnityEngine::Vector4 scaleBiasRT, int mipLevelTex);
    // static private System.Void .cctor()
    // Offset: 0x525AF54
    static void _cctor();
    // static UnityEngine.Vector3[] <Initialize>g__GetFullScreenTriangleVertexPosition|9_0(System.Single z)
    // Offset: 0x5258760
    static ::ArrayW<::UnityEngine::Vector3> $Initialize$g__GetFullScreenTriangleVertexPosition_9_0(float z);
    // static UnityEngine.Vector2[] <Initialize>g__GetFullScreenTriangleTexCoord|9_1()
    // Offset: 0x5258814
    static ::ArrayW<::UnityEngine::Vector2> $Initialize$g__GetFullScreenTriangleTexCoord_9_1();
    // static UnityEngine.Vector3[] <Initialize>g__GetQuadVertexPosition|9_2(System.Single z)
    // Offset: 0x52588DC
    static ::ArrayW<::UnityEngine::Vector3> $Initialize$g__GetQuadVertexPosition_9_2(float z);
    // static UnityEngine.Vector2[] <Initialize>g__GetQuadTexCoord|9_3()
    // Offset: 0x5258984
    static ::ArrayW<::UnityEngine::Vector2> $Initialize$g__GetQuadTexCoord_9_3();
  }; // UnityEngine.Rendering.Blitter
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::Rendering::Blitter::Initialize
// Il2CppName: Initialize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::Shader*, ::UnityEngine::Shader*)>(&UnityEngine::Rendering::Blitter::Initialize)> {
  static const MethodInfo* get() {
    static auto* blitPS = &::il2cpp_utils::GetClassFromName("UnityEngine", "Shader")->byval_arg;
    static auto* blitColorAndDepthPS = &::il2cpp_utils::GetClassFromName("UnityEngine", "Shader")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::Blitter*), "Initialize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{blitPS, blitColorAndDepthPS});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::Blitter::Cleanup
// Il2CppName: Cleanup
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&UnityEngine::Rendering::Blitter::Cleanup)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::Blitter*), "Cleanup", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::Blitter::GetBlitMaterial
// Il2CppName: GetBlitMaterial
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Material* (*)(::UnityEngine::Rendering::TextureDimension, bool)>(&UnityEngine::Rendering::Blitter::GetBlitMaterial)> {
  static const MethodInfo* get() {
    static auto* dimension = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "TextureDimension")->byval_arg;
    static auto* singleSlice = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::Blitter*), "GetBlitMaterial", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{dimension, singleSlice});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::Blitter::DrawTriangle
// Il2CppName: DrawTriangle
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::Rendering::CommandBuffer*, ::UnityEngine::Material*, int)>(&UnityEngine::Rendering::Blitter::DrawTriangle)> {
  static const MethodInfo* get() {
    static auto* cmd = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "CommandBuffer")->byval_arg;
    static auto* material = &::il2cpp_utils::GetClassFromName("UnityEngine", "Material")->byval_arg;
    static auto* shaderPass = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::Blitter*), "DrawTriangle", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{cmd, material, shaderPass});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::Blitter::DrawQuad
// Il2CppName: DrawQuad
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::Rendering::CommandBuffer*, ::UnityEngine::Material*, int)>(&UnityEngine::Rendering::Blitter::DrawQuad)> {
  static const MethodInfo* get() {
    static auto* cmd = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "CommandBuffer")->byval_arg;
    static auto* material = &::il2cpp_utils::GetClassFromName("UnityEngine", "Material")->byval_arg;
    static auto* shaderPass = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::Blitter*), "DrawQuad", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{cmd, material, shaderPass});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::Blitter::BlitTexture
// Il2CppName: BlitTexture
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::Rendering::CommandBuffer*, ::UnityEngine::Rendering::RTHandle*, ::UnityEngine::Vector4, float, bool)>(&UnityEngine::Rendering::Blitter::BlitTexture)> {
  static const MethodInfo* get() {
    static auto* cmd = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "CommandBuffer")->byval_arg;
    static auto* source = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "RTHandle")->byval_arg;
    static auto* scaleBias = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector4")->byval_arg;
    static auto* mipLevel = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* bilinear = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::Blitter*), "BlitTexture", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{cmd, source, scaleBias, mipLevel, bilinear});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::Blitter::BlitTexture
// Il2CppName: BlitTexture
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::Rendering::CommandBuffer*, ::UnityEngine::Rendering::RTHandle*, ::UnityEngine::Vector4, ::UnityEngine::Material*, int)>(&UnityEngine::Rendering::Blitter::BlitTexture)> {
  static const MethodInfo* get() {
    static auto* cmd = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "CommandBuffer")->byval_arg;
    static auto* source = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "RTHandle")->byval_arg;
    static auto* scaleBias = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector4")->byval_arg;
    static auto* material = &::il2cpp_utils::GetClassFromName("UnityEngine", "Material")->byval_arg;
    static auto* pass = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::Blitter*), "BlitTexture", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{cmd, source, scaleBias, material, pass});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::Blitter::BlitTexture
// Il2CppName: BlitTexture
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::Rendering::CommandBuffer*, ::UnityEngine::Rendering::RenderTargetIdentifier, ::UnityEngine::Vector4, ::UnityEngine::Material*, int)>(&UnityEngine::Rendering::Blitter::BlitTexture)> {
  static const MethodInfo* get() {
    static auto* cmd = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "CommandBuffer")->byval_arg;
    static auto* source = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "RenderTargetIdentifier")->byval_arg;
    static auto* scaleBias = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector4")->byval_arg;
    static auto* material = &::il2cpp_utils::GetClassFromName("UnityEngine", "Material")->byval_arg;
    static auto* pass = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::Blitter*), "BlitTexture", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{cmd, source, scaleBias, material, pass});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::Blitter::BlitTexture
// Il2CppName: BlitTexture
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::Rendering::CommandBuffer*, ::UnityEngine::Vector4, ::UnityEngine::Material*, int)>(&UnityEngine::Rendering::Blitter::BlitTexture)> {
  static const MethodInfo* get() {
    static auto* cmd = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "CommandBuffer")->byval_arg;
    static auto* scaleBias = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector4")->byval_arg;
    static auto* material = &::il2cpp_utils::GetClassFromName("UnityEngine", "Material")->byval_arg;
    static auto* pass = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::Blitter*), "BlitTexture", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{cmd, scaleBias, material, pass});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::Blitter::BlitCameraTexture
// Il2CppName: BlitCameraTexture
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::Rendering::CommandBuffer*, ::UnityEngine::Rendering::RTHandle*, ::UnityEngine::Rendering::RTHandle*, float, bool)>(&UnityEngine::Rendering::Blitter::BlitCameraTexture)> {
  static const MethodInfo* get() {
    static auto* cmd = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "CommandBuffer")->byval_arg;
    static auto* source = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "RTHandle")->byval_arg;
    static auto* destination = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "RTHandle")->byval_arg;
    static auto* mipLevel = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* bilinear = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::Blitter*), "BlitCameraTexture", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{cmd, source, destination, mipLevel, bilinear});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::Blitter::BlitCameraTexture
// Il2CppName: BlitCameraTexture
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::Rendering::CommandBuffer*, ::UnityEngine::Rendering::RTHandle*, ::UnityEngine::Rendering::RTHandle*, ::UnityEngine::Material*, int)>(&UnityEngine::Rendering::Blitter::BlitCameraTexture)> {
  static const MethodInfo* get() {
    static auto* cmd = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "CommandBuffer")->byval_arg;
    static auto* source = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "RTHandle")->byval_arg;
    static auto* destination = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "RTHandle")->byval_arg;
    static auto* material = &::il2cpp_utils::GetClassFromName("UnityEngine", "Material")->byval_arg;
    static auto* pass = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::Blitter*), "BlitCameraTexture", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{cmd, source, destination, material, pass});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::Blitter::BlitCameraTexture
// Il2CppName: BlitCameraTexture
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::Rendering::CommandBuffer*, ::UnityEngine::Rendering::RTHandle*, ::UnityEngine::Rendering::RTHandle*, ::UnityEngine::Rendering::RenderBufferLoadAction, ::UnityEngine::Rendering::RenderBufferStoreAction, ::UnityEngine::Material*, int)>(&UnityEngine::Rendering::Blitter::BlitCameraTexture)> {
  static const MethodInfo* get() {
    static auto* cmd = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "CommandBuffer")->byval_arg;
    static auto* source = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "RTHandle")->byval_arg;
    static auto* destination = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "RTHandle")->byval_arg;
    static auto* loadAction = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "RenderBufferLoadAction")->byval_arg;
    static auto* storeAction = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "RenderBufferStoreAction")->byval_arg;
    static auto* material = &::il2cpp_utils::GetClassFromName("UnityEngine", "Material")->byval_arg;
    static auto* pass = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::Blitter*), "BlitCameraTexture", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{cmd, source, destination, loadAction, storeAction, material, pass});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::Blitter::BlitQuad
// Il2CppName: BlitQuad
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::Rendering::CommandBuffer*, ::UnityEngine::Texture*, ::UnityEngine::Vector4, ::UnityEngine::Vector4, int, bool)>(&UnityEngine::Rendering::Blitter::BlitQuad)> {
  static const MethodInfo* get() {
    static auto* cmd = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "CommandBuffer")->byval_arg;
    static auto* source = &::il2cpp_utils::GetClassFromName("UnityEngine", "Texture")->byval_arg;
    static auto* scaleBiasTex = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector4")->byval_arg;
    static auto* scaleBiasRT = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector4")->byval_arg;
    static auto* mipLevelTex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* bilinear = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::Blitter*), "BlitQuad", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{cmd, source, scaleBiasTex, scaleBiasRT, mipLevelTex, bilinear});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::Blitter::BlitQuadWithPadding
// Il2CppName: BlitQuadWithPadding
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::Rendering::CommandBuffer*, ::UnityEngine::Texture*, ::UnityEngine::Vector2, ::UnityEngine::Vector4, ::UnityEngine::Vector4, int, bool, int)>(&UnityEngine::Rendering::Blitter::BlitQuadWithPadding)> {
  static const MethodInfo* get() {
    static auto* cmd = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "CommandBuffer")->byval_arg;
    static auto* source = &::il2cpp_utils::GetClassFromName("UnityEngine", "Texture")->byval_arg;
    static auto* textureSize = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector2")->byval_arg;
    static auto* scaleBiasTex = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector4")->byval_arg;
    static auto* scaleBiasRT = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector4")->byval_arg;
    static auto* mipLevelTex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* bilinear = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* paddingInPixels = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::Blitter*), "BlitQuadWithPadding", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{cmd, source, textureSize, scaleBiasTex, scaleBiasRT, mipLevelTex, bilinear, paddingInPixels});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::Blitter::BlitQuadWithPaddingMultiply
// Il2CppName: BlitQuadWithPaddingMultiply
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::Rendering::CommandBuffer*, ::UnityEngine::Texture*, ::UnityEngine::Vector2, ::UnityEngine::Vector4, ::UnityEngine::Vector4, int, bool, int)>(&UnityEngine::Rendering::Blitter::BlitQuadWithPaddingMultiply)> {
  static const MethodInfo* get() {
    static auto* cmd = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "CommandBuffer")->byval_arg;
    static auto* source = &::il2cpp_utils::GetClassFromName("UnityEngine", "Texture")->byval_arg;
    static auto* textureSize = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector2")->byval_arg;
    static auto* scaleBiasTex = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector4")->byval_arg;
    static auto* scaleBiasRT = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector4")->byval_arg;
    static auto* mipLevelTex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* bilinear = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* paddingInPixels = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::Blitter*), "BlitQuadWithPaddingMultiply", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{cmd, source, textureSize, scaleBiasTex, scaleBiasRT, mipLevelTex, bilinear, paddingInPixels});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::Blitter::BlitOctahedralWithPadding
// Il2CppName: BlitOctahedralWithPadding
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::Rendering::CommandBuffer*, ::UnityEngine::Texture*, ::UnityEngine::Vector2, ::UnityEngine::Vector4, ::UnityEngine::Vector4, int, bool, int)>(&UnityEngine::Rendering::Blitter::BlitOctahedralWithPadding)> {
  static const MethodInfo* get() {
    static auto* cmd = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "CommandBuffer")->byval_arg;
    static auto* source = &::il2cpp_utils::GetClassFromName("UnityEngine", "Texture")->byval_arg;
    static auto* textureSize = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector2")->byval_arg;
    static auto* scaleBiasTex = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector4")->byval_arg;
    static auto* scaleBiasRT = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector4")->byval_arg;
    static auto* mipLevelTex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* bilinear = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* paddingInPixels = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::Blitter*), "BlitOctahedralWithPadding", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{cmd, source, textureSize, scaleBiasTex, scaleBiasRT, mipLevelTex, bilinear, paddingInPixels});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::Blitter::BlitOctahedralWithPaddingMultiply
// Il2CppName: BlitOctahedralWithPaddingMultiply
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::Rendering::CommandBuffer*, ::UnityEngine::Texture*, ::UnityEngine::Vector2, ::UnityEngine::Vector4, ::UnityEngine::Vector4, int, bool, int)>(&UnityEngine::Rendering::Blitter::BlitOctahedralWithPaddingMultiply)> {
  static const MethodInfo* get() {
    static auto* cmd = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "CommandBuffer")->byval_arg;
    static auto* source = &::il2cpp_utils::GetClassFromName("UnityEngine", "Texture")->byval_arg;
    static auto* textureSize = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector2")->byval_arg;
    static auto* scaleBiasTex = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector4")->byval_arg;
    static auto* scaleBiasRT = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector4")->byval_arg;
    static auto* mipLevelTex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* bilinear = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* paddingInPixels = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::Blitter*), "BlitOctahedralWithPaddingMultiply", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{cmd, source, textureSize, scaleBiasTex, scaleBiasRT, mipLevelTex, bilinear, paddingInPixels});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::Blitter::BlitCubeToOctahedral2DQuad
// Il2CppName: BlitCubeToOctahedral2DQuad
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::Rendering::CommandBuffer*, ::UnityEngine::Texture*, ::UnityEngine::Vector4, int)>(&UnityEngine::Rendering::Blitter::BlitCubeToOctahedral2DQuad)> {
  static const MethodInfo* get() {
    static auto* cmd = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "CommandBuffer")->byval_arg;
    static auto* source = &::il2cpp_utils::GetClassFromName("UnityEngine", "Texture")->byval_arg;
    static auto* scaleBiasRT = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector4")->byval_arg;
    static auto* mipLevelTex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::Blitter*), "BlitCubeToOctahedral2DQuad", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{cmd, source, scaleBiasRT, mipLevelTex});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::Blitter::BlitCubeToOctahedral2DQuadWithPadding
// Il2CppName: BlitCubeToOctahedral2DQuadWithPadding
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::Rendering::CommandBuffer*, ::UnityEngine::Texture*, ::UnityEngine::Vector2, ::UnityEngine::Vector4, int, bool, int, ::System::Nullable_1<::UnityEngine::Vector4>)>(&UnityEngine::Rendering::Blitter::BlitCubeToOctahedral2DQuadWithPadding)> {
  static const MethodInfo* get() {
    static auto* cmd = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "CommandBuffer")->byval_arg;
    static auto* source = &::il2cpp_utils::GetClassFromName("UnityEngine", "Texture")->byval_arg;
    static auto* textureSize = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector2")->byval_arg;
    static auto* scaleBiasRT = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector4")->byval_arg;
    static auto* mipLevelTex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* bilinear = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* paddingInPixels = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* decodeInstructions = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Nullable`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine", "Vector4")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::Blitter*), "BlitCubeToOctahedral2DQuadWithPadding", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{cmd, source, textureSize, scaleBiasRT, mipLevelTex, bilinear, paddingInPixels, decodeInstructions});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::Blitter::BlitCubeToOctahedral2DQuadSingleChannel
// Il2CppName: BlitCubeToOctahedral2DQuadSingleChannel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::Rendering::CommandBuffer*, ::UnityEngine::Texture*, ::UnityEngine::Vector4, int)>(&UnityEngine::Rendering::Blitter::BlitCubeToOctahedral2DQuadSingleChannel)> {
  static const MethodInfo* get() {
    static auto* cmd = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "CommandBuffer")->byval_arg;
    static auto* source = &::il2cpp_utils::GetClassFromName("UnityEngine", "Texture")->byval_arg;
    static auto* scaleBiasRT = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector4")->byval_arg;
    static auto* mipLevelTex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::Blitter*), "BlitCubeToOctahedral2DQuadSingleChannel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{cmd, source, scaleBiasRT, mipLevelTex});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::Blitter::BlitQuadSingleChannel
// Il2CppName: BlitQuadSingleChannel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::Rendering::CommandBuffer*, ::UnityEngine::Texture*, ::UnityEngine::Vector4, ::UnityEngine::Vector4, int)>(&UnityEngine::Rendering::Blitter::BlitQuadSingleChannel)> {
  static const MethodInfo* get() {
    static auto* cmd = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "CommandBuffer")->byval_arg;
    static auto* source = &::il2cpp_utils::GetClassFromName("UnityEngine", "Texture")->byval_arg;
    static auto* scaleBiasTex = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector4")->byval_arg;
    static auto* scaleBiasRT = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector4")->byval_arg;
    static auto* mipLevelTex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::Blitter*), "BlitQuadSingleChannel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{cmd, source, scaleBiasTex, scaleBiasRT, mipLevelTex});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::Blitter::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&UnityEngine::Rendering::Blitter::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::Blitter*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::Blitter::$Initialize$g__GetFullScreenTriangleVertexPosition_9_0
// Il2CppName: <Initialize>g__GetFullScreenTriangleVertexPosition|9_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::UnityEngine::Vector3> (*)(float)>(&UnityEngine::Rendering::Blitter::$Initialize$g__GetFullScreenTriangleVertexPosition_9_0)> {
  static const MethodInfo* get() {
    static auto* z = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::Blitter*), "<Initialize>g__GetFullScreenTriangleVertexPosition|9_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{z});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::Blitter::$Initialize$g__GetFullScreenTriangleTexCoord_9_1
// Il2CppName: <Initialize>g__GetFullScreenTriangleTexCoord|9_1
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::UnityEngine::Vector2> (*)()>(&UnityEngine::Rendering::Blitter::$Initialize$g__GetFullScreenTriangleTexCoord_9_1)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::Blitter*), "<Initialize>g__GetFullScreenTriangleTexCoord|9_1", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::Blitter::$Initialize$g__GetQuadVertexPosition_9_2
// Il2CppName: <Initialize>g__GetQuadVertexPosition|9_2
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::UnityEngine::Vector3> (*)(float)>(&UnityEngine::Rendering::Blitter::$Initialize$g__GetQuadVertexPosition_9_2)> {
  static const MethodInfo* get() {
    static auto* z = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::Blitter*), "<Initialize>g__GetQuadVertexPosition|9_2", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{z});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::Blitter::$Initialize$g__GetQuadTexCoord_9_3
// Il2CppName: <Initialize>g__GetQuadTexCoord|9_3
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::UnityEngine::Vector2> (*)()>(&UnityEngine::Rendering::Blitter::$Initialize$g__GetQuadTexCoord_9_3)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::Blitter*), "<Initialize>g__GetQuadTexCoord|9_3", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
