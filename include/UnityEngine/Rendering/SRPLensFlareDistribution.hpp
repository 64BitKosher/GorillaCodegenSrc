// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Enum
#include "System/Enum.hpp"
// Completed includes
// Type namespace: UnityEngine.Rendering
namespace UnityEngine::Rendering {
  // Forward declaring type: SRPLensFlareDistribution
  struct SRPLensFlareDistribution;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::Rendering::SRPLensFlareDistribution, "UnityEngine.Rendering", "SRPLensFlareDistribution");
// Type namespace: UnityEngine.Rendering
namespace UnityEngine::Rendering {
  // Size: 0x4
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.Rendering.SRPLensFlareDistribution
  // [TokenAttribute] Offset: FFFFFFFF
  struct SRPLensFlareDistribution/*, public ::System::Enum*/ {
    public:
    public:
    // public System.Int32 value__
    // Size: 0x4
    // Offset: 0x0
    int value;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Creating value type constructor for type: SRPLensFlareDistribution
    constexpr SRPLensFlareDistribution(int value_ = {}) noexcept : value{value_} {}
    // Creating interface conversion operator: operator ::System::Enum
    operator ::System::Enum() noexcept {
      return *reinterpret_cast<::System::Enum*>(this);
    }
    // Creating conversion operator: operator int
    constexpr operator int() const noexcept {
      return value;
    }
    // static field const value: static public UnityEngine.Rendering.SRPLensFlareDistribution Uniform
    static constexpr const int Uniform = 0;
    // Get static field: static public UnityEngine.Rendering.SRPLensFlareDistribution Uniform
    static ::UnityEngine::Rendering::SRPLensFlareDistribution _get_Uniform();
    // Set static field: static public UnityEngine.Rendering.SRPLensFlareDistribution Uniform
    static void _set_Uniform(::UnityEngine::Rendering::SRPLensFlareDistribution value);
    // static field const value: static public UnityEngine.Rendering.SRPLensFlareDistribution Curve
    static constexpr const int Curve = 1;
    // Get static field: static public UnityEngine.Rendering.SRPLensFlareDistribution Curve
    static ::UnityEngine::Rendering::SRPLensFlareDistribution _get_Curve();
    // Set static field: static public UnityEngine.Rendering.SRPLensFlareDistribution Curve
    static void _set_Curve(::UnityEngine::Rendering::SRPLensFlareDistribution value);
    // static field const value: static public UnityEngine.Rendering.SRPLensFlareDistribution Random
    static constexpr const int Random = 2;
    // Get static field: static public UnityEngine.Rendering.SRPLensFlareDistribution Random
    static ::UnityEngine::Rendering::SRPLensFlareDistribution _get_Random();
    // Set static field: static public UnityEngine.Rendering.SRPLensFlareDistribution Random
    static void _set_Random(::UnityEngine::Rendering::SRPLensFlareDistribution value);
    // Get instance field reference: public System.Int32 value__
    [[deprecated("Use field access instead!")]] int& dyn_value__();
  }; // UnityEngine.Rendering.SRPLensFlareDistribution
  #pragma pack(pop)
  static check_size<sizeof(SRPLensFlareDistribution), 0 + sizeof(int)> __UnityEngine_Rendering_SRPLensFlareDistributionSizeCheck;
  static_assert(sizeof(SRPLensFlareDistribution) == 0x4);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
