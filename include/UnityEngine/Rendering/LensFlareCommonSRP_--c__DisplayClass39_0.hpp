// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.Rendering.LensFlareCommonSRP
#include "UnityEngine/Rendering/LensFlareCommonSRP.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
// Completed includes
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::Rendering::LensFlareCommonSRP::$$c__DisplayClass39_0, "UnityEngine.Rendering", "LensFlareCommonSRP/<>c__DisplayClass39_0");
// Type namespace: UnityEngine.Rendering
namespace UnityEngine::Rendering {
  // Size: 0x8
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.Rendering.LensFlareCommonSRP/<>c__DisplayClass39_0
  // [TokenAttribute] Offset: FFFFFFFF
  // [CompilerGeneratedAttribute] Offset: FFFFFFFF
  struct LensFlareCommonSRP::$$c__DisplayClass39_0/*, public ::System::ValueType*/ {
    public:
    public:
    // public UnityEngine.Vector2 screenPos
    // Size: 0x8
    // Offset: 0x0
    ::UnityEngine::Vector2 screenPos;
    // Field size check
    static_assert(sizeof(::UnityEngine::Vector2) == 0x8);
    public:
    // Creating value type constructor for type: $$c__DisplayClass39_0
    constexpr $$c__DisplayClass39_0(::UnityEngine::Vector2 screenPos_ = {}) noexcept : screenPos{screenPos_} {}
    // Creating interface conversion operator: operator ::System::ValueType
    operator ::System::ValueType() noexcept {
      return *reinterpret_cast<::System::ValueType*>(this);
    }
    // Creating conversion operator: operator ::UnityEngine::Vector2
    constexpr operator ::UnityEngine::Vector2() const noexcept {
      return screenPos;
    }
    // Get instance field reference: public UnityEngine.Vector2 screenPos
    [[deprecated("Use field access instead!")]] ::UnityEngine::Vector2& dyn_screenPos();
  }; // UnityEngine.Rendering.LensFlareCommonSRP/<>c__DisplayClass39_0
  #pragma pack(pop)
  static check_size<sizeof(LensFlareCommonSRP::$$c__DisplayClass39_0), 0 + sizeof(::UnityEngine::Vector2)> __UnityEngine_Rendering_LensFlareCommonSRP_$$c__DisplayClass39_0SizeCheck;
  static_assert(sizeof(LensFlareCommonSRP::$$c__DisplayClass39_0) == 0x8);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
