// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.Rendering.DebugUI
#include "UnityEngine/Rendering/DebugUI.hpp"
// Including type: UnityEngine.Rendering.DebugUI/Widget
#include "UnityEngine/Rendering/DebugUI_Widget.hpp"
// Including type: UnityEngine.Rendering.DebugUI/IContainer
#include "UnityEngine/Rendering/DebugUI_IContainer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::Rendering
namespace UnityEngine::Rendering {
  // Forward declaring type: ObservableList`1<T>
  template<typename T>
  class ObservableList_1;
  // Forward declaring type: ListChangedEventArgs`1<T>
  template<typename T>
  class ListChangedEventArgs_1;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::Rendering::DebugUI::Container);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::Rendering::DebugUI::Container*, "UnityEngine.Rendering", "DebugUI/Container");
// Type namespace: UnityEngine.Rendering
namespace UnityEngine::Rendering {
  // Size: 0x50
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.Rendering.DebugUI/Container
  // [TokenAttribute] Offset: FFFFFFFF
  class DebugUI::Container : public ::UnityEngine::Rendering::DebugUI::Widget/*, public ::UnityEngine::Rendering::DebugUI::IContainer*/ {
    public:
    public:
    // private UnityEngine.Rendering.ObservableList`1<UnityEngine.Rendering.DebugUI/Widget> <children>k__BackingField
    // Size: 0x8
    // Offset: 0x48
    ::UnityEngine::Rendering::ObservableList_1<::UnityEngine::Rendering::DebugUI::Widget*>* children;
    // Field size check
    static_assert(sizeof(::UnityEngine::Rendering::ObservableList_1<::UnityEngine::Rendering::DebugUI::Widget*>*) == 0x8);
    public:
    // Creating interface conversion operator: operator ::UnityEngine::Rendering::DebugUI::IContainer
    operator ::UnityEngine::Rendering::DebugUI::IContainer() noexcept {
      return *reinterpret_cast<::UnityEngine::Rendering::DebugUI::IContainer*>(this);
    }
    // Creating conversion operator: operator ::UnityEngine::Rendering::ObservableList_1<::UnityEngine::Rendering::DebugUI::Widget*>*
    constexpr operator ::UnityEngine::Rendering::ObservableList_1<::UnityEngine::Rendering::DebugUI::Widget*>*() const noexcept {
      return children;
    }
    // Get instance field reference: private UnityEngine.Rendering.ObservableList`1<UnityEngine.Rendering.DebugUI/Widget> <children>k__BackingField
    [[deprecated("Use field access instead!")]] ::UnityEngine::Rendering::ObservableList_1<::UnityEngine::Rendering::DebugUI::Widget*>*& dyn_$children$k__BackingField();
    // public UnityEngine.Rendering.ObservableList`1<UnityEngine.Rendering.DebugUI/Widget> get_children()
    // Offset: 0x524939C
    ::UnityEngine::Rendering::ObservableList_1<::UnityEngine::Rendering::DebugUI::Widget*>* get_children();
    // private System.Void set_children(UnityEngine.Rendering.ObservableList`1<UnityEngine.Rendering.DebugUI/Widget> value)
    // Offset: 0x52493A4
    void set_children(::UnityEngine::Rendering::ObservableList_1<::UnityEngine::Rendering::DebugUI::Widget*>* value);
    // public System.Void .ctor(System.String displayName, UnityEngine.Rendering.ObservableList`1<UnityEngine.Rendering.DebugUI/Widget> children)
    // Offset: 0x5249528
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static DebugUI::Container* New_ctor(::StringW displayName, ::UnityEngine::Rendering::ObservableList_1<::UnityEngine::Rendering::DebugUI::Widget*>* children) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::DebugUI::Container::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<DebugUI::Container*, creationType>(displayName, children)));
    }
    // protected System.Void OnItemAdded(UnityEngine.Rendering.ObservableList`1<UnityEngine.Rendering.DebugUI/Widget> sender, UnityEngine.Rendering.ListChangedEventArgs`1<UnityEngine.Rendering.DebugUI/Widget> e)
    // Offset: 0x52498E4
    void OnItemAdded(::UnityEngine::Rendering::ObservableList_1<::UnityEngine::Rendering::DebugUI::Widget*>* sender, ::UnityEngine::Rendering::ListChangedEventArgs_1<::UnityEngine::Rendering::DebugUI::Widget*>* e);
    // protected System.Void OnItemRemoved(UnityEngine.Rendering.ObservableList`1<UnityEngine.Rendering.DebugUI/Widget> sender, UnityEngine.Rendering.ListChangedEventArgs`1<UnityEngine.Rendering.DebugUI/Widget> e)
    // Offset: 0x5249A14
    void OnItemRemoved(::UnityEngine::Rendering::ObservableList_1<::UnityEngine::Rendering::DebugUI::Widget*>* sender, ::UnityEngine::Rendering::ListChangedEventArgs_1<::UnityEngine::Rendering::DebugUI::Widget*>* e);
    // public override UnityEngine.Rendering.DebugUI/Panel get_panel()
    // Offset: 0x52493AC
    // Implemented from: UnityEngine.Rendering.DebugUI/Widget
    // Base method: UnityEngine.Rendering.DebugUI/Panel Widget::get_panel()
    ::UnityEngine::Rendering::DebugUI::Panel* get_panel();
    // override System.Void set_panel(UnityEngine.Rendering.DebugUI/Panel value)
    // Offset: 0x52493B4
    // Implemented from: UnityEngine.Rendering.DebugUI/Widget
    // Base method: System.Void Widget::set_panel(UnityEngine.Rendering.DebugUI/Panel value)
    void set_panel(::UnityEngine::Rendering::DebugUI::Panel* value);
    // public System.Void .ctor()
    // Offset: 0x524948C
    // Implemented from: UnityEngine.Rendering.DebugUI/Widget
    // Base method: System.Void Widget::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static DebugUI::Container* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::DebugUI::Container::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<DebugUI::Container*, creationType>()));
    }
    // override System.Void GenerateQueryPath()
    // Offset: 0x5249728
    // Implemented from: UnityEngine.Rendering.DebugUI/Widget
    // Base method: System.Void Widget::GenerateQueryPath()
    void GenerateQueryPath();
    // public override System.Int32 GetHashCode()
    // Offset: 0x5249A7C
    // Implemented from: UnityEngine.Rendering.DebugUI/Widget
    // Base method: System.Int32 Widget::GetHashCode()
    int GetHashCode();
  }; // UnityEngine.Rendering.DebugUI/Container
  #pragma pack(pop)
  static check_size<sizeof(DebugUI::Container), 72 + sizeof(::UnityEngine::Rendering::ObservableList_1<::UnityEngine::Rendering::DebugUI::Widget*>*)> __UnityEngine_Rendering_DebugUI_ContainerSizeCheck;
  static_assert(sizeof(DebugUI::Container) == 0x50);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::Rendering::DebugUI::Container::get_children
// Il2CppName: get_children
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Rendering::ObservableList_1<::UnityEngine::Rendering::DebugUI::Widget*>* (UnityEngine::Rendering::DebugUI::Container::*)()>(&UnityEngine::Rendering::DebugUI::Container::get_children)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::DebugUI::Container*), "get_children", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::DebugUI::Container::set_children
// Il2CppName: set_children
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Rendering::DebugUI::Container::*)(::UnityEngine::Rendering::ObservableList_1<::UnityEngine::Rendering::DebugUI::Widget*>*)>(&UnityEngine::Rendering::DebugUI::Container::set_children)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "ObservableList`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "DebugUI/Widget")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::DebugUI::Container*), "set_children", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::DebugUI::Container::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::Rendering::DebugUI::Container::OnItemAdded
// Il2CppName: OnItemAdded
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Rendering::DebugUI::Container::*)(::UnityEngine::Rendering::ObservableList_1<::UnityEngine::Rendering::DebugUI::Widget*>*, ::UnityEngine::Rendering::ListChangedEventArgs_1<::UnityEngine::Rendering::DebugUI::Widget*>*)>(&UnityEngine::Rendering::DebugUI::Container::OnItemAdded)> {
  static const MethodInfo* get() {
    static auto* sender = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "ObservableList`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "DebugUI/Widget")})->byval_arg;
    static auto* e = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "ListChangedEventArgs`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "DebugUI/Widget")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::DebugUI::Container*), "OnItemAdded", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sender, e});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::DebugUI::Container::OnItemRemoved
// Il2CppName: OnItemRemoved
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Rendering::DebugUI::Container::*)(::UnityEngine::Rendering::ObservableList_1<::UnityEngine::Rendering::DebugUI::Widget*>*, ::UnityEngine::Rendering::ListChangedEventArgs_1<::UnityEngine::Rendering::DebugUI::Widget*>*)>(&UnityEngine::Rendering::DebugUI::Container::OnItemRemoved)> {
  static const MethodInfo* get() {
    static auto* sender = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "ObservableList`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "DebugUI/Widget")})->byval_arg;
    static auto* e = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "ListChangedEventArgs`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "DebugUI/Widget")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::DebugUI::Container*), "OnItemRemoved", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sender, e});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::DebugUI::Container::get_panel
// Il2CppName: get_panel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Rendering::DebugUI::Panel* (UnityEngine::Rendering::DebugUI::Container::*)()>(&UnityEngine::Rendering::DebugUI::Container::get_panel)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::DebugUI::Container*), "get_panel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::DebugUI::Container::set_panel
// Il2CppName: set_panel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Rendering::DebugUI::Container::*)(::UnityEngine::Rendering::DebugUI::Panel*)>(&UnityEngine::Rendering::DebugUI::Container::set_panel)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "DebugUI/Panel")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::DebugUI::Container*), "set_panel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::DebugUI::Container::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::Rendering::DebugUI::Container::GenerateQueryPath
// Il2CppName: GenerateQueryPath
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Rendering::DebugUI::Container::*)()>(&UnityEngine::Rendering::DebugUI::Container::GenerateQueryPath)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::DebugUI::Container*), "GenerateQueryPath", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::DebugUI::Container::GetHashCode
// Il2CppName: GetHashCode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::Rendering::DebugUI::Container::*)()>(&UnityEngine::Rendering::DebugUI::Container::GetHashCode)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::DebugUI::Container*), "GetHashCode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
