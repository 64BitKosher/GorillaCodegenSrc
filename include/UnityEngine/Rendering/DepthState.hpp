// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include <stdint.h>
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Including type: System.IEquatable`1
#include "System/IEquatable_1.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::Rendering
namespace UnityEngine::Rendering {
  // Forward declaring type: CompareFunction
  struct CompareFunction;
}
// Completed forward declares
// Begin il2cpp-utils forward declares
struct Il2CppObject;
// Completed il2cpp-utils forward declares
// Type namespace: UnityEngine.Rendering
namespace UnityEngine::Rendering {
  // Forward declaring type: DepthState
  struct DepthState;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::Rendering::DepthState, "UnityEngine.Rendering", "DepthState");
// Type namespace: UnityEngine.Rendering
namespace UnityEngine::Rendering {
  // Size: 0x2
  #pragma pack(push, 1)
  // WARNING Layout: Sequential may not be correctly taken into account!
  // Autogenerated type: UnityEngine.Rendering.DepthState
  // [TokenAttribute] Offset: FFFFFFFF
  struct DepthState/*, public ::System::ValueType, public ::System::IEquatable_1<::UnityEngine::Rendering::DepthState>*/ {
    public:
    public:
    // private System.Byte m_WriteEnabled
    // Size: 0x1
    // Offset: 0x0
    uint8_t m_WriteEnabled;
    // Field size check
    static_assert(sizeof(uint8_t) == 0x1);
    // private System.SByte m_CompareFunction
    // Size: 0x1
    // Offset: 0x1
    int8_t m_CompareFunction;
    // Field size check
    static_assert(sizeof(int8_t) == 0x1);
    public:
    // Creating value type constructor for type: DepthState
    constexpr DepthState(uint8_t m_WriteEnabled_ = {}, int8_t m_CompareFunction_ = {}) noexcept : m_WriteEnabled{m_WriteEnabled_}, m_CompareFunction{m_CompareFunction_} {}
    // Creating interface conversion operator: operator ::System::ValueType
    operator ::System::ValueType() noexcept {
      return *reinterpret_cast<::System::ValueType*>(this);
    }
    // Creating interface conversion operator: operator ::System::IEquatable_1<::UnityEngine::Rendering::DepthState>
    operator ::System::IEquatable_1<::UnityEngine::Rendering::DepthState>() noexcept {
      return *reinterpret_cast<::System::IEquatable_1<::UnityEngine::Rendering::DepthState>*>(this);
    }
    // Get instance field reference: private System.Byte m_WriteEnabled
    [[deprecated("Use field access instead!")]] uint8_t& dyn_m_WriteEnabled();
    // Get instance field reference: private System.SByte m_CompareFunction
    [[deprecated("Use field access instead!")]] int8_t& dyn_m_CompareFunction();
    // static public UnityEngine.Rendering.DepthState get_defaultValue()
    // Offset: 0x54E72A8
    static ::UnityEngine::Rendering::DepthState get_defaultValue();
    // public System.Void .ctor(System.Boolean writeEnabled, UnityEngine.Rendering.CompareFunction compareFunction)
    // Offset: 0x54E72CC
    DepthState(bool writeEnabled, ::UnityEngine::Rendering::CompareFunction compareFunction);
    // public UnityEngine.Rendering.CompareFunction get_compareFunction()
    // Offset: 0x54E7340
    ::UnityEngine::Rendering::CompareFunction get_compareFunction();
    // public System.Boolean Equals(UnityEngine.Rendering.DepthState other)
    // Offset: 0x54E7348
    bool Equals(::UnityEngine::Rendering::DepthState other);
    // public override System.Boolean Equals(System.Object obj)
    // Offset: 0x54E7370
    // Implemented from: System.ValueType
    // Base method: System.Boolean ValueType::Equals(System.Object obj)
    bool Equals(::Il2CppObject* obj);
    // public override System.Int32 GetHashCode()
    // Offset: 0x54E73F8
    // Implemented from: System.ValueType
    // Base method: System.Int32 ValueType::GetHashCode()
    int GetHashCode();
  }; // UnityEngine.Rendering.DepthState
  #pragma pack(pop)
  static check_size<sizeof(DepthState), 1 + sizeof(int8_t)> __UnityEngine_Rendering_DepthStateSizeCheck;
  static_assert(sizeof(DepthState) == 0x2);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::Rendering::DepthState::get_defaultValue
// Il2CppName: get_defaultValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Rendering::DepthState (*)()>(&UnityEngine::Rendering::DepthState::get_defaultValue)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::DepthState), "get_defaultValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::DepthState::DepthState
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::Rendering::DepthState::get_compareFunction
// Il2CppName: get_compareFunction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Rendering::CompareFunction (UnityEngine::Rendering::DepthState::*)()>(&UnityEngine::Rendering::DepthState::get_compareFunction)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::DepthState), "get_compareFunction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::DepthState::Equals
// Il2CppName: Equals
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::Rendering::DepthState::*)(::UnityEngine::Rendering::DepthState)>(&UnityEngine::Rendering::DepthState::Equals)> {
  static const MethodInfo* get() {
    static auto* other = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "DepthState")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::DepthState), "Equals", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{other});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::DepthState::Equals
// Il2CppName: Equals
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::Rendering::DepthState::*)(::Il2CppObject*)>(&UnityEngine::Rendering::DepthState::Equals)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::DepthState), "Equals", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::DepthState::GetHashCode
// Il2CppName: GetHashCode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::Rendering::DepthState::*)()>(&UnityEngine::Rendering::DepthState::GetHashCode)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::DepthState), "GetHashCode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
