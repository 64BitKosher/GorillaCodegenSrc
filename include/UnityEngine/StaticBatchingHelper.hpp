// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: GameObject
  class GameObject;
}
// Completed forward declares
// Type namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: StaticBatchingHelper
  struct StaticBatchingHelper;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::StaticBatchingHelper, "UnityEngine", "StaticBatchingHelper");
// Type namespace: UnityEngine
namespace UnityEngine {
  // Size: 0x0
  #pragma pack(push, 1)
  // WARNING Layout: Sequential may not be correctly taken into account!
  // Autogenerated type: UnityEngine.StaticBatchingHelper
  // [TokenAttribute] Offset: FFFFFFFF
  // [NativeHeaderAttribute] Offset: FFFFFFFF
  struct StaticBatchingHelper/*, public ::System::ValueType*/ {
    public:
    // Creating value type constructor for type: StaticBatchingHelper
    constexpr StaticBatchingHelper() noexcept {}
    // Creating interface conversion operator: operator ::System::ValueType
    operator ::System::ValueType() noexcept {
      return *reinterpret_cast<::System::ValueType*>(this);
    }
    // static System.Void CombineMeshes(UnityEngine.GameObject[] gos, UnityEngine.GameObject staticBatchRoot)
    // Offset: 0x54A88D0
    static void CombineMeshes(::ArrayW<::UnityEngine::GameObject*> gos, ::UnityEngine::GameObject* staticBatchRoot);
  }; // UnityEngine.StaticBatchingHelper
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::StaticBatchingHelper::CombineMeshes
// Il2CppName: CombineMeshes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::ArrayW<::UnityEngine::GameObject*>, ::UnityEngine::GameObject*)>(&UnityEngine::StaticBatchingHelper::CombineMeshes)> {
  static const MethodInfo* get() {
    static auto* gos = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject"), 1)->byval_arg;
    static auto* staticBatchRoot = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::StaticBatchingHelper), "CombineMeshes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{gos, staticBatchRoot});
  }
};
