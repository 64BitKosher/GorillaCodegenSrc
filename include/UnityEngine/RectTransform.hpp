// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Rect
  struct Rect;
  // Forward declaring type: Vector2
  struct Vector2;
  // Skipping declaration: Object because it is already included!
  // Forward declaring type: DrivenTransformProperties
  struct DrivenTransformProperties;
}
// Completed forward declares
// Type namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: RectTransform
  class RectTransform;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::RectTransform);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::RectTransform*, "UnityEngine", "RectTransform");
// Type namespace: UnityEngine
namespace UnityEngine {
  // Size: 0x18
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.RectTransform
  // [TokenAttribute] Offset: FFFFFFFF
  // [NativeClassAttribute] Offset: FFFFFFFF
  // [NativeHeaderAttribute] Offset: FFFFFFFF
  class RectTransform : public ::UnityEngine::Transform {
    public:
    // Nested type: ::UnityEngine::RectTransform::Edge
    struct Edge;
    // Nested type: ::UnityEngine::RectTransform::Axis
    struct Axis;
    // Nested type: ::UnityEngine::RectTransform::ReapplyDrivenProperties
    class ReapplyDrivenProperties;
    // Get static field: static private UnityEngine.RectTransform/ReapplyDrivenProperties reapplyDrivenProperties
    static ::UnityEngine::RectTransform::ReapplyDrivenProperties* _get_reapplyDrivenProperties();
    // Set static field: static private UnityEngine.RectTransform/ReapplyDrivenProperties reapplyDrivenProperties
    static void _set_reapplyDrivenProperties(::UnityEngine::RectTransform::ReapplyDrivenProperties* value);
    // static public System.Void add_reapplyDrivenProperties(UnityEngine.RectTransform/ReapplyDrivenProperties value)
    // Offset: 0x54CFF0C
    static void add_reapplyDrivenProperties(::UnityEngine::RectTransform::ReapplyDrivenProperties* value);
    // static public System.Void remove_reapplyDrivenProperties(UnityEngine.RectTransform/ReapplyDrivenProperties value)
    // Offset: 0x54CFFC4
    static void remove_reapplyDrivenProperties(::UnityEngine::RectTransform::ReapplyDrivenProperties* value);
    // public UnityEngine.Rect get_rect()
    // Offset: 0x54D007C
    ::UnityEngine::Rect get_rect();
    // public UnityEngine.Vector2 get_anchorMin()
    // Offset: 0x54D0118
    ::UnityEngine::Vector2 get_anchorMin();
    // public System.Void set_anchorMin(UnityEngine.Vector2 value)
    // Offset: 0x54D01A8
    void set_anchorMin(::UnityEngine::Vector2 value);
    // public UnityEngine.Vector2 get_anchorMax()
    // Offset: 0x54D0234
    ::UnityEngine::Vector2 get_anchorMax();
    // public System.Void set_anchorMax(UnityEngine.Vector2 value)
    // Offset: 0x54D02C4
    void set_anchorMax(::UnityEngine::Vector2 value);
    // public UnityEngine.Vector2 get_anchoredPosition()
    // Offset: 0x54D0350
    ::UnityEngine::Vector2 get_anchoredPosition();
    // public System.Void set_anchoredPosition(UnityEngine.Vector2 value)
    // Offset: 0x54D03E0
    void set_anchoredPosition(::UnityEngine::Vector2 value);
    // public UnityEngine.Vector2 get_sizeDelta()
    // Offset: 0x54D046C
    ::UnityEngine::Vector2 get_sizeDelta();
    // public System.Void set_sizeDelta(UnityEngine.Vector2 value)
    // Offset: 0x54D04FC
    void set_sizeDelta(::UnityEngine::Vector2 value);
    // public UnityEngine.Vector2 get_pivot()
    // Offset: 0x54D0588
    ::UnityEngine::Vector2 get_pivot();
    // public System.Void set_pivot(UnityEngine.Vector2 value)
    // Offset: 0x54D0618
    void set_pivot(::UnityEngine::Vector2 value);
    // public UnityEngine.Vector3 get_anchoredPosition3D()
    // Offset: 0x54D06A4
    ::UnityEngine::Vector3 get_anchoredPosition3D();
    // public System.Void set_anchoredPosition3D(UnityEngine.Vector3 value)
    // Offset: 0x54D0734
    void set_anchoredPosition3D(::UnityEngine::Vector3 value);
    // public UnityEngine.Vector2 get_offsetMin()
    // Offset: 0x54D07B8
    ::UnityEngine::Vector2 get_offsetMin();
    // public System.Void set_offsetMin(UnityEngine.Vector2 value)
    // Offset: 0x54D080C
    void set_offsetMin(::UnityEngine::Vector2 value);
    // public UnityEngine.Vector2 get_offsetMax()
    // Offset: 0x54D0900
    ::UnityEngine::Vector2 get_offsetMax();
    // public System.Void set_offsetMax(UnityEngine.Vector2 value)
    // Offset: 0x54D09A0
    void set_offsetMax(::UnityEngine::Vector2 value);
    // public UnityEngine.Object get_drivenByObject()
    // Offset: 0x54D0A9C
    ::UnityEngine::Object* get_drivenByObject();
    // System.Void set_drivenByObject(UnityEngine.Object value)
    // Offset: 0x54D0AD8
    void set_drivenByObject(::UnityEngine::Object* value);
    // UnityEngine.DrivenTransformProperties get_drivenProperties()
    // Offset: 0x54D0B1C
    ::UnityEngine::DrivenTransformProperties get_drivenProperties();
    // System.Void set_drivenProperties(UnityEngine.DrivenTransformProperties value)
    // Offset: 0x54D0B58
    void set_drivenProperties(::UnityEngine::DrivenTransformProperties value);
    // public System.Void ForceUpdateRectTransforms()
    // Offset: 0x54D0B9C
    void ForceUpdateRectTransforms();
    // public System.Void GetLocalCorners(UnityEngine.Vector3[] fourCornersArray)
    // Offset: 0x54D0BD8
    void GetLocalCorners(::ArrayW<::UnityEngine::Vector3> fourCornersArray);
    // public System.Void GetWorldCorners(UnityEngine.Vector3[] fourCornersArray)
    // Offset: 0x54D0CB8
    void GetWorldCorners(::ArrayW<::UnityEngine::Vector3> fourCornersArray);
    // public System.Void SetInsetAndSizeFromParentEdge(UnityEngine.RectTransform/Edge edge, System.Single inset, System.Single size)
    // Offset: 0x54D0E78
    void SetInsetAndSizeFromParentEdge(::UnityEngine::RectTransform::Edge edge, float inset, float size);
    // public System.Void SetSizeWithCurrentAnchors(UnityEngine.RectTransform/Axis axis, System.Single size)
    // Offset: 0x54D0F88
    void SetSizeWithCurrentAnchors(::UnityEngine::RectTransform::Axis axis, float size);
    // static System.Void SendReapplyDrivenProperties(UnityEngine.RectTransform driven)
    // Offset: 0x54D1188
    static void SendReapplyDrivenProperties(::UnityEngine::RectTransform* driven);
    // UnityEngine.Rect GetRectInParentSpace()
    // Offset: 0x54D11F4
    ::UnityEngine::Rect GetRectInParentSpace();
    // private UnityEngine.Vector2 GetParentSize()
    // Offset: 0x54D1080
    ::UnityEngine::Vector2 GetParentSize();
    // private System.Void get_rect_Injected(out UnityEngine.Rect ret)
    // Offset: 0x54D00D4
    void get_rect_Injected(ByRef<::UnityEngine::Rect> ret);
    // private System.Void get_anchorMin_Injected(out UnityEngine.Vector2 ret)
    // Offset: 0x54D0164
    void get_anchorMin_Injected(ByRef<::UnityEngine::Vector2> ret);
    // private System.Void set_anchorMin_Injected(ref UnityEngine.Vector2 value)
    // Offset: 0x54D01F0
    void set_anchorMin_Injected(ByRef<::UnityEngine::Vector2> value);
    // private System.Void get_anchorMax_Injected(out UnityEngine.Vector2 ret)
    // Offset: 0x54D0280
    void get_anchorMax_Injected(ByRef<::UnityEngine::Vector2> ret);
    // private System.Void set_anchorMax_Injected(ref UnityEngine.Vector2 value)
    // Offset: 0x54D030C
    void set_anchorMax_Injected(ByRef<::UnityEngine::Vector2> value);
    // private System.Void get_anchoredPosition_Injected(out UnityEngine.Vector2 ret)
    // Offset: 0x54D039C
    void get_anchoredPosition_Injected(ByRef<::UnityEngine::Vector2> ret);
    // private System.Void set_anchoredPosition_Injected(ref UnityEngine.Vector2 value)
    // Offset: 0x54D0428
    void set_anchoredPosition_Injected(ByRef<::UnityEngine::Vector2> value);
    // private System.Void get_sizeDelta_Injected(out UnityEngine.Vector2 ret)
    // Offset: 0x54D04B8
    void get_sizeDelta_Injected(ByRef<::UnityEngine::Vector2> ret);
    // private System.Void set_sizeDelta_Injected(ref UnityEngine.Vector2 value)
    // Offset: 0x54D0544
    void set_sizeDelta_Injected(ByRef<::UnityEngine::Vector2> value);
    // private System.Void get_pivot_Injected(out UnityEngine.Vector2 ret)
    // Offset: 0x54D05D4
    void get_pivot_Injected(ByRef<::UnityEngine::Vector2> ret);
    // private System.Void set_pivot_Injected(ref UnityEngine.Vector2 value)
    // Offset: 0x54D0660
    void set_pivot_Injected(ByRef<::UnityEngine::Vector2> value);
    // public System.Void .ctor()
    // Offset: 0x54D1404
    // Implemented from: UnityEngine.Transform
    // Base method: System.Void Transform::.ctor()
    // Base method: System.Void Component::.ctor()
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static RectTransform* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RectTransform::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<RectTransform*, creationType>()));
    }
  }; // UnityEngine.RectTransform
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::RectTransform::add_reapplyDrivenProperties
// Il2CppName: add_reapplyDrivenProperties
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::RectTransform::ReapplyDrivenProperties*)>(&UnityEngine::RectTransform::add_reapplyDrivenProperties)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "RectTransform/ReapplyDrivenProperties")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::RectTransform*), "add_reapplyDrivenProperties", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::RectTransform::remove_reapplyDrivenProperties
// Il2CppName: remove_reapplyDrivenProperties
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::RectTransform::ReapplyDrivenProperties*)>(&UnityEngine::RectTransform::remove_reapplyDrivenProperties)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "RectTransform/ReapplyDrivenProperties")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::RectTransform*), "remove_reapplyDrivenProperties", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::RectTransform::get_rect
// Il2CppName: get_rect
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Rect (UnityEngine::RectTransform::*)()>(&UnityEngine::RectTransform::get_rect)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::RectTransform*), "get_rect", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::RectTransform::get_anchorMin
// Il2CppName: get_anchorMin
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector2 (UnityEngine::RectTransform::*)()>(&UnityEngine::RectTransform::get_anchorMin)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::RectTransform*), "get_anchorMin", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::RectTransform::set_anchorMin
// Il2CppName: set_anchorMin
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::RectTransform::*)(::UnityEngine::Vector2)>(&UnityEngine::RectTransform::set_anchorMin)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector2")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::RectTransform*), "set_anchorMin", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::RectTransform::get_anchorMax
// Il2CppName: get_anchorMax
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector2 (UnityEngine::RectTransform::*)()>(&UnityEngine::RectTransform::get_anchorMax)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::RectTransform*), "get_anchorMax", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::RectTransform::set_anchorMax
// Il2CppName: set_anchorMax
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::RectTransform::*)(::UnityEngine::Vector2)>(&UnityEngine::RectTransform::set_anchorMax)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector2")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::RectTransform*), "set_anchorMax", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::RectTransform::get_anchoredPosition
// Il2CppName: get_anchoredPosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector2 (UnityEngine::RectTransform::*)()>(&UnityEngine::RectTransform::get_anchoredPosition)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::RectTransform*), "get_anchoredPosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::RectTransform::set_anchoredPosition
// Il2CppName: set_anchoredPosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::RectTransform::*)(::UnityEngine::Vector2)>(&UnityEngine::RectTransform::set_anchoredPosition)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector2")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::RectTransform*), "set_anchoredPosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::RectTransform::get_sizeDelta
// Il2CppName: get_sizeDelta
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector2 (UnityEngine::RectTransform::*)()>(&UnityEngine::RectTransform::get_sizeDelta)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::RectTransform*), "get_sizeDelta", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::RectTransform::set_sizeDelta
// Il2CppName: set_sizeDelta
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::RectTransform::*)(::UnityEngine::Vector2)>(&UnityEngine::RectTransform::set_sizeDelta)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector2")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::RectTransform*), "set_sizeDelta", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::RectTransform::get_pivot
// Il2CppName: get_pivot
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector2 (UnityEngine::RectTransform::*)()>(&UnityEngine::RectTransform::get_pivot)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::RectTransform*), "get_pivot", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::RectTransform::set_pivot
// Il2CppName: set_pivot
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::RectTransform::*)(::UnityEngine::Vector2)>(&UnityEngine::RectTransform::set_pivot)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector2")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::RectTransform*), "set_pivot", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::RectTransform::get_anchoredPosition3D
// Il2CppName: get_anchoredPosition3D
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector3 (UnityEngine::RectTransform::*)()>(&UnityEngine::RectTransform::get_anchoredPosition3D)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::RectTransform*), "get_anchoredPosition3D", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::RectTransform::set_anchoredPosition3D
// Il2CppName: set_anchoredPosition3D
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::RectTransform::*)(::UnityEngine::Vector3)>(&UnityEngine::RectTransform::set_anchoredPosition3D)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::RectTransform*), "set_anchoredPosition3D", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::RectTransform::get_offsetMin
// Il2CppName: get_offsetMin
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector2 (UnityEngine::RectTransform::*)()>(&UnityEngine::RectTransform::get_offsetMin)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::RectTransform*), "get_offsetMin", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::RectTransform::set_offsetMin
// Il2CppName: set_offsetMin
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::RectTransform::*)(::UnityEngine::Vector2)>(&UnityEngine::RectTransform::set_offsetMin)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector2")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::RectTransform*), "set_offsetMin", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::RectTransform::get_offsetMax
// Il2CppName: get_offsetMax
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector2 (UnityEngine::RectTransform::*)()>(&UnityEngine::RectTransform::get_offsetMax)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::RectTransform*), "get_offsetMax", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::RectTransform::set_offsetMax
// Il2CppName: set_offsetMax
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::RectTransform::*)(::UnityEngine::Vector2)>(&UnityEngine::RectTransform::set_offsetMax)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector2")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::RectTransform*), "set_offsetMax", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::RectTransform::get_drivenByObject
// Il2CppName: get_drivenByObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Object* (UnityEngine::RectTransform::*)()>(&UnityEngine::RectTransform::get_drivenByObject)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::RectTransform*), "get_drivenByObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::RectTransform::set_drivenByObject
// Il2CppName: set_drivenByObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::RectTransform::*)(::UnityEngine::Object*)>(&UnityEngine::RectTransform::set_drivenByObject)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::RectTransform*), "set_drivenByObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::RectTransform::get_drivenProperties
// Il2CppName: get_drivenProperties
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::DrivenTransformProperties (UnityEngine::RectTransform::*)()>(&UnityEngine::RectTransform::get_drivenProperties)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::RectTransform*), "get_drivenProperties", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::RectTransform::set_drivenProperties
// Il2CppName: set_drivenProperties
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::RectTransform::*)(::UnityEngine::DrivenTransformProperties)>(&UnityEngine::RectTransform::set_drivenProperties)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "DrivenTransformProperties")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::RectTransform*), "set_drivenProperties", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::RectTransform::ForceUpdateRectTransforms
// Il2CppName: ForceUpdateRectTransforms
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::RectTransform::*)()>(&UnityEngine::RectTransform::ForceUpdateRectTransforms)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::RectTransform*), "ForceUpdateRectTransforms", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::RectTransform::GetLocalCorners
// Il2CppName: GetLocalCorners
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::RectTransform::*)(::ArrayW<::UnityEngine::Vector3>)>(&UnityEngine::RectTransform::GetLocalCorners)> {
  static const MethodInfo* get() {
    static auto* fourCornersArray = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::RectTransform*), "GetLocalCorners", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{fourCornersArray});
  }
};
// Writing MetadataGetter for method: UnityEngine::RectTransform::GetWorldCorners
// Il2CppName: GetWorldCorners
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::RectTransform::*)(::ArrayW<::UnityEngine::Vector3>)>(&UnityEngine::RectTransform::GetWorldCorners)> {
  static const MethodInfo* get() {
    static auto* fourCornersArray = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::RectTransform*), "GetWorldCorners", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{fourCornersArray});
  }
};
// Writing MetadataGetter for method: UnityEngine::RectTransform::SetInsetAndSizeFromParentEdge
// Il2CppName: SetInsetAndSizeFromParentEdge
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::RectTransform::*)(::UnityEngine::RectTransform::Edge, float, float)>(&UnityEngine::RectTransform::SetInsetAndSizeFromParentEdge)> {
  static const MethodInfo* get() {
    static auto* edge = &::il2cpp_utils::GetClassFromName("UnityEngine", "RectTransform/Edge")->byval_arg;
    static auto* inset = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* size = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::RectTransform*), "SetInsetAndSizeFromParentEdge", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{edge, inset, size});
  }
};
// Writing MetadataGetter for method: UnityEngine::RectTransform::SetSizeWithCurrentAnchors
// Il2CppName: SetSizeWithCurrentAnchors
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::RectTransform::*)(::UnityEngine::RectTransform::Axis, float)>(&UnityEngine::RectTransform::SetSizeWithCurrentAnchors)> {
  static const MethodInfo* get() {
    static auto* axis = &::il2cpp_utils::GetClassFromName("UnityEngine", "RectTransform/Axis")->byval_arg;
    static auto* size = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::RectTransform*), "SetSizeWithCurrentAnchors", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{axis, size});
  }
};
// Writing MetadataGetter for method: UnityEngine::RectTransform::SendReapplyDrivenProperties
// Il2CppName: SendReapplyDrivenProperties
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::RectTransform*)>(&UnityEngine::RectTransform::SendReapplyDrivenProperties)> {
  static const MethodInfo* get() {
    static auto* driven = &::il2cpp_utils::GetClassFromName("UnityEngine", "RectTransform")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::RectTransform*), "SendReapplyDrivenProperties", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{driven});
  }
};
// Writing MetadataGetter for method: UnityEngine::RectTransform::GetRectInParentSpace
// Il2CppName: GetRectInParentSpace
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Rect (UnityEngine::RectTransform::*)()>(&UnityEngine::RectTransform::GetRectInParentSpace)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::RectTransform*), "GetRectInParentSpace", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::RectTransform::GetParentSize
// Il2CppName: GetParentSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector2 (UnityEngine::RectTransform::*)()>(&UnityEngine::RectTransform::GetParentSize)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::RectTransform*), "GetParentSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::RectTransform::get_rect_Injected
// Il2CppName: get_rect_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::RectTransform::*)(ByRef<::UnityEngine::Rect>)>(&UnityEngine::RectTransform::get_rect_Injected)> {
  static const MethodInfo* get() {
    static auto* ret = &::il2cpp_utils::GetClassFromName("UnityEngine", "Rect")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::RectTransform*), "get_rect_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ret});
  }
};
// Writing MetadataGetter for method: UnityEngine::RectTransform::get_anchorMin_Injected
// Il2CppName: get_anchorMin_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::RectTransform::*)(ByRef<::UnityEngine::Vector2>)>(&UnityEngine::RectTransform::get_anchorMin_Injected)> {
  static const MethodInfo* get() {
    static auto* ret = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector2")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::RectTransform*), "get_anchorMin_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ret});
  }
};
// Writing MetadataGetter for method: UnityEngine::RectTransform::set_anchorMin_Injected
// Il2CppName: set_anchorMin_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::RectTransform::*)(ByRef<::UnityEngine::Vector2>)>(&UnityEngine::RectTransform::set_anchorMin_Injected)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector2")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::RectTransform*), "set_anchorMin_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::RectTransform::get_anchorMax_Injected
// Il2CppName: get_anchorMax_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::RectTransform::*)(ByRef<::UnityEngine::Vector2>)>(&UnityEngine::RectTransform::get_anchorMax_Injected)> {
  static const MethodInfo* get() {
    static auto* ret = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector2")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::RectTransform*), "get_anchorMax_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ret});
  }
};
// Writing MetadataGetter for method: UnityEngine::RectTransform::set_anchorMax_Injected
// Il2CppName: set_anchorMax_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::RectTransform::*)(ByRef<::UnityEngine::Vector2>)>(&UnityEngine::RectTransform::set_anchorMax_Injected)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector2")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::RectTransform*), "set_anchorMax_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::RectTransform::get_anchoredPosition_Injected
// Il2CppName: get_anchoredPosition_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::RectTransform::*)(ByRef<::UnityEngine::Vector2>)>(&UnityEngine::RectTransform::get_anchoredPosition_Injected)> {
  static const MethodInfo* get() {
    static auto* ret = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector2")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::RectTransform*), "get_anchoredPosition_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ret});
  }
};
// Writing MetadataGetter for method: UnityEngine::RectTransform::set_anchoredPosition_Injected
// Il2CppName: set_anchoredPosition_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::RectTransform::*)(ByRef<::UnityEngine::Vector2>)>(&UnityEngine::RectTransform::set_anchoredPosition_Injected)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector2")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::RectTransform*), "set_anchoredPosition_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::RectTransform::get_sizeDelta_Injected
// Il2CppName: get_sizeDelta_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::RectTransform::*)(ByRef<::UnityEngine::Vector2>)>(&UnityEngine::RectTransform::get_sizeDelta_Injected)> {
  static const MethodInfo* get() {
    static auto* ret = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector2")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::RectTransform*), "get_sizeDelta_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ret});
  }
};
// Writing MetadataGetter for method: UnityEngine::RectTransform::set_sizeDelta_Injected
// Il2CppName: set_sizeDelta_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::RectTransform::*)(ByRef<::UnityEngine::Vector2>)>(&UnityEngine::RectTransform::set_sizeDelta_Injected)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector2")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::RectTransform*), "set_sizeDelta_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::RectTransform::get_pivot_Injected
// Il2CppName: get_pivot_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::RectTransform::*)(ByRef<::UnityEngine::Vector2>)>(&UnityEngine::RectTransform::get_pivot_Injected)> {
  static const MethodInfo* get() {
    static auto* ret = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector2")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::RectTransform*), "get_pivot_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ret});
  }
};
// Writing MetadataGetter for method: UnityEngine::RectTransform::set_pivot_Injected
// Il2CppName: set_pivot_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::RectTransform::*)(ByRef<::UnityEngine::Vector2>)>(&UnityEngine::RectTransform::set_pivot_Injected)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector2")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::RectTransform*), "set_pivot_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::RectTransform::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
