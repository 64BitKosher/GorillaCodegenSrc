// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.ObjectDispatcher
#include "UnityEngine/ObjectDispatcher.hpp"
// Including type: UnityEngine.TypeDispatchData
#include "UnityEngine/TypeDispatchData.hpp"
// Including type: UnityEngine.TransformDispatchData
#include "UnityEngine/TransformDispatchData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Object
  class Object;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: IntPtr
  struct IntPtr;
  // Forward declaring type: Action`1<T>
  template<typename T>
  class Action_1;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::ObjectDispatcher::$$c);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::ObjectDispatcher::$$c*, "UnityEngine", "ObjectDispatcher/<>c");
// Type namespace: UnityEngine
namespace UnityEngine {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.ObjectDispatcher/<>c
  // [TokenAttribute] Offset: FFFFFFFF
  // [CompilerGeneratedAttribute] Offset: FFFFFFFF
  class ObjectDispatcher::$$c : public ::Il2CppObject {
    public:
    // Get static field: static public readonly UnityEngine.ObjectDispatcher/<>c <>9
    static ::UnityEngine::ObjectDispatcher::$$c* _get_$$9();
    // Set static field: static public readonly UnityEngine.ObjectDispatcher/<>c <>9
    static void _set_$$9(::UnityEngine::ObjectDispatcher::$$c* value);
    // static private System.Void .cctor()
    // Offset: 0x54BEC34
    static void _cctor();
    // public System.Void .ctor()
    // Offset: 0x54BEC9C
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static ObjectDispatcher::$$c* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ObjectDispatcher::$$c::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<ObjectDispatcher::$$c*, creationType>()));
    }
    // System.Void <.cctor>b__54_0(UnityEngine.Object[] changed, System.IntPtr changedID, System.IntPtr destroyedID, System.Int32 changedCount, System.Int32 destroyedCount, System.Action`1<UnityEngine.TypeDispatchData> callback)
    // Offset: 0x54BECA4
    void $_cctor$b__54_0(::ArrayW<::UnityEngine::Object*> changed, ::System::IntPtr changedID, ::System::IntPtr destroyedID, int changedCount, int destroyedCount, ::System::Action_1<::UnityEngine::TypeDispatchData>* callback);
    // System.Void <.cctor>b__54_1(System.IntPtr transformed, System.IntPtr parents, System.IntPtr localToWorldMatrices, System.IntPtr positions, System.IntPtr rotations, System.IntPtr scales, System.Int32 count, System.Action`1<UnityEngine.TransformDispatchData> callback)
    // Offset: 0x54BEDAC
    void $_cctor$b__54_1(::System::IntPtr transformed, ::System::IntPtr parents, ::System::IntPtr localToWorldMatrices, ::System::IntPtr positions, ::System::IntPtr rotations, ::System::IntPtr scales, int count, ::System::Action_1<::UnityEngine::TransformDispatchData>* callback);
  }; // UnityEngine.ObjectDispatcher/<>c
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::ObjectDispatcher::$$c::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&UnityEngine::ObjectDispatcher::$$c::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ObjectDispatcher::$$c*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::ObjectDispatcher::$$c::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::ObjectDispatcher::$$c::$_cctor$b__54_0
// Il2CppName: <.cctor>b__54_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::ObjectDispatcher::$$c::*)(::ArrayW<::UnityEngine::Object*>, ::System::IntPtr, ::System::IntPtr, int, int, ::System::Action_1<::UnityEngine::TypeDispatchData>*)>(&UnityEngine::ObjectDispatcher::$$c::$_cctor$b__54_0)> {
  static const MethodInfo* get() {
    static auto* changed = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("UnityEngine", "Object"), 1)->byval_arg;
    static auto* changedID = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* destroyedID = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* changedCount = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* destroyedCount = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* callback = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine", "TypeDispatchData")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ObjectDispatcher::$$c*), "<.cctor>b__54_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{changed, changedID, destroyedID, changedCount, destroyedCount, callback});
  }
};
// Writing MetadataGetter for method: UnityEngine::ObjectDispatcher::$$c::$_cctor$b__54_1
// Il2CppName: <.cctor>b__54_1
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::ObjectDispatcher::$$c::*)(::System::IntPtr, ::System::IntPtr, ::System::IntPtr, ::System::IntPtr, ::System::IntPtr, ::System::IntPtr, int, ::System::Action_1<::UnityEngine::TransformDispatchData>*)>(&UnityEngine::ObjectDispatcher::$$c::$_cctor$b__54_1)> {
  static const MethodInfo* get() {
    static auto* transformed = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* parents = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* localToWorldMatrices = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* positions = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* rotations = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* scales = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* count = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* callback = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine", "TransformDispatchData")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ObjectDispatcher::$$c*), "<.cctor>b__54_1", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{transformed, parents, localToWorldMatrices, positions, rotations, scales, count, callback});
  }
};
