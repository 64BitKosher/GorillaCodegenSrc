// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.TextEditor/DblClickSnapping
#include "UnityEngine/TextEditor.hpp"
// Including type: System.Int32
#include "System/Int32.hpp"
// Including type: System.Char
#include "System/Char.hpp"
// Including type: UnityEngine.TextSelectOp
#include "UnityEngine/TextSelectOp.hpp"
// Including type: UnityEngine.TextCore.Text.TextElementInfo
#include "UnityEngine/TextCore/Text/TextElementInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Event
  class Event;
  // Skipping declaration: Vector2 because it is already included!
}
// Forward declaring namespace: UnityEngine::TextCore::Text
namespace UnityEngine::TextCore::Text {
  // Forward declaring type: TextHandle
  class TextHandle;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Action
  class Action;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: Dictionary`2<TKey, TValue>
  template<typename TKey, typename TValue>
  class Dictionary_2;
}
// Completed forward declares
// Type namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: TextSelectingUtilities
  class TextSelectingUtilities;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::TextSelectingUtilities);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::TextSelectingUtilities*, "UnityEngine", "TextSelectingUtilities");
// Type namespace: UnityEngine
namespace UnityEngine {
  // Size: 0x50
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.TextSelectingUtilities
  // [TokenAttribute] Offset: FFFFFFFF
  class TextSelectingUtilities : public ::Il2CppObject {
    public:
    // Nested type: ::UnityEngine::TextSelectingUtilities::CharacterType
    struct CharacterType;
    // Nested type: ::UnityEngine::TextSelectingUtilities::Direction
    struct Direction;
    public:
    // public UnityEngine.TextEditor/DblClickSnapping dblClickSnap
    // Size: 0x1
    // Offset: 0x10
    ::UnityEngine::TextEditor::DblClickSnapping dblClickSnap;
    // Field size check
    static_assert(sizeof(::UnityEngine::TextEditor::DblClickSnapping) == 0x1);
    // Padding between fields: dblClickSnap and: iAltCursorPos
    char __padding0[0x3] = {};
    // public System.Int32 iAltCursorPos
    // Size: 0x4
    // Offset: 0x14
    int iAltCursorPos;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // public System.Boolean hasHorizontalCursorPos
    // Size: 0x1
    // Offset: 0x18
    bool hasHorizontalCursorPos;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean m_bJustSelected
    // Size: 0x1
    // Offset: 0x19
    bool m_bJustSelected;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean m_MouseDragSelectsWholeWords
    // Size: 0x1
    // Offset: 0x1A
    bool m_MouseDragSelectsWholeWords;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: m_MouseDragSelectsWholeWords and: m_DblClickInitPos
    char __padding4[0x1] = {};
    // private System.Int32 m_DblClickInitPos
    // Size: 0x4
    // Offset: 0x1C
    int m_DblClickInitPos;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private UnityEngine.TextCore.Text.TextHandle m_TextHandle
    // Size: 0x8
    // Offset: 0x20
    ::UnityEngine::TextCore::Text::TextHandle* m_TextHandle;
    // Field size check
    static_assert(sizeof(::UnityEngine::TextCore::Text::TextHandle*) == 0x8);
    // private System.Boolean m_RevealCursor
    // Size: 0x1
    // Offset: 0x28
    bool m_RevealCursor;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: m_RevealCursor and: m_CursorIndex
    char __padding7[0x3] = {};
    // private System.Int32 m_CursorIndex
    // Size: 0x4
    // Offset: 0x2C
    int m_CursorIndex;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // System.Int32 m_SelectIndex
    // Size: 0x4
    // Offset: 0x30
    int m_SelectIndex;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // Padding between fields: m_SelectIndex and: OnCursorIndexChange
    char __padding9[0x4] = {};
    // System.Action OnCursorIndexChange
    // Size: 0x8
    // Offset: 0x38
    ::System::Action* OnCursorIndexChange;
    // Field size check
    static_assert(sizeof(::System::Action*) == 0x8);
    // System.Action OnSelectIndexChange
    // Size: 0x8
    // Offset: 0x40
    ::System::Action* OnSelectIndexChange;
    // Field size check
    static_assert(sizeof(::System::Action*) == 0x8);
    // System.Action OnRevealCursorChange
    // Size: 0x8
    // Offset: 0x48
    ::System::Action* OnRevealCursorChange;
    // Field size check
    static_assert(sizeof(::System::Action*) == 0x8);
    public:
    // static field const value: static private System.Int32 kMoveDownHeight
    static constexpr const int kMoveDownHeight = 5;
    // Get static field: static private System.Int32 kMoveDownHeight
    static int _get_kMoveDownHeight();
    // Set static field: static private System.Int32 kMoveDownHeight
    static void _set_kMoveDownHeight(int value);
    // static field const value: static private System.Char kNewLineChar
    static constexpr const ::Il2CppChar kNewLineChar = u'\u000a';
    // Get static field: static private System.Char kNewLineChar
    static ::Il2CppChar _get_kNewLineChar();
    // Set static field: static private System.Char kNewLineChar
    static void _set_kNewLineChar(::Il2CppChar value);
    // Get static field: static private System.Collections.Generic.Dictionary`2<UnityEngine.Event,UnityEngine.TextSelectOp> s_KeySelectOps
    static ::System::Collections::Generic::Dictionary_2<::UnityEngine::Event*, ::UnityEngine::TextSelectOp>* _get_s_KeySelectOps();
    // Set static field: static private System.Collections.Generic.Dictionary`2<UnityEngine.Event,UnityEngine.TextSelectOp> s_KeySelectOps
    static void _set_s_KeySelectOps(::System::Collections::Generic::Dictionary_2<::UnityEngine::Event*, ::UnityEngine::TextSelectOp>* value);
    // Get instance field reference: public UnityEngine.TextEditor/DblClickSnapping dblClickSnap
    [[deprecated("Use field access instead!")]] ::UnityEngine::TextEditor::DblClickSnapping& dyn_dblClickSnap();
    // Get instance field reference: public System.Int32 iAltCursorPos
    [[deprecated("Use field access instead!")]] int& dyn_iAltCursorPos();
    // Get instance field reference: public System.Boolean hasHorizontalCursorPos
    [[deprecated("Use field access instead!")]] bool& dyn_hasHorizontalCursorPos();
    // Get instance field reference: private System.Boolean m_bJustSelected
    [[deprecated("Use field access instead!")]] bool& dyn_m_bJustSelected();
    // Get instance field reference: private System.Boolean m_MouseDragSelectsWholeWords
    [[deprecated("Use field access instead!")]] bool& dyn_m_MouseDragSelectsWholeWords();
    // Get instance field reference: private System.Int32 m_DblClickInitPos
    [[deprecated("Use field access instead!")]] int& dyn_m_DblClickInitPos();
    // Get instance field reference: private UnityEngine.TextCore.Text.TextHandle m_TextHandle
    [[deprecated("Use field access instead!")]] ::UnityEngine::TextCore::Text::TextHandle*& dyn_m_TextHandle();
    // Get instance field reference: private System.Boolean m_RevealCursor
    [[deprecated("Use field access instead!")]] bool& dyn_m_RevealCursor();
    // Get instance field reference: private System.Int32 m_CursorIndex
    [[deprecated("Use field access instead!")]] int& dyn_m_CursorIndex();
    // Get instance field reference: System.Int32 m_SelectIndex
    [[deprecated("Use field access instead!")]] int& dyn_m_SelectIndex();
    // Get instance field reference: System.Action OnCursorIndexChange
    [[deprecated("Use field access instead!")]] ::System::Action*& dyn_OnCursorIndexChange();
    // Get instance field reference: System.Action OnSelectIndexChange
    [[deprecated("Use field access instead!")]] ::System::Action*& dyn_OnSelectIndexChange();
    // Get instance field reference: System.Action OnRevealCursorChange
    [[deprecated("Use field access instead!")]] ::System::Action*& dyn_OnRevealCursorChange();
    // public System.Boolean get_hasSelection()
    // Offset: 0x5510518
    bool get_hasSelection();
    // public System.Boolean get_revealCursor()
    // Offset: 0x5517064
    bool get_revealCursor();
    // public System.Void set_revealCursor(System.Boolean value)
    // Offset: 0x5510598
    void set_revealCursor(bool value);
    // private System.Int32 get_m_CharacterCount()
    // Offset: 0x551706C
    int get_m_CharacterCount();
    // private System.Int32 get_characterCount()
    // Offset: 0x5517094
    int get_characterCount();
    // private UnityEngine.TextCore.Text.TextElementInfo[] get_m_TextElementInfos()
    // Offset: 0x5517128
    ::ArrayW<::UnityEngine::TextCore::Text::TextElementInfo> get_m_TextElementInfos();
    // public System.Int32 get_cursorIndex()
    // Offset: 0x55105E4
    int get_cursorIndex();
    // public System.Void set_cursorIndex(System.Int32 value)
    // Offset: 0x5510630
    void set_cursorIndex(int value);
    // System.Void SetCursorIndexWithoutNotify(System.Int32 index)
    // Offset: 0x5512F94
    void SetCursorIndexWithoutNotify(int index);
    // public System.Int32 get_selectIndex()
    // Offset: 0x5510678
    int get_selectIndex();
    // public System.Void set_selectIndex(System.Int32 value)
    // Offset: 0x55106C4
    void set_selectIndex(int value);
    // System.Void SetSelectIndexWithoutNotify(System.Int32 index)
    // Offset: 0x5512F9C
    void SetSelectIndexWithoutNotify(int index);
    // public System.String get_selectedText()
    // Offset: 0x55171A8
    ::StringW get_selectedText();
    // public System.Void .ctor(UnityEngine.TextCore.Text.TextHandle textHandle)
    // Offset: 0x55172B8
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static TextSelectingUtilities* New_ctor(::UnityEngine::TextCore::Text::TextHandle* textHandle) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextSelectingUtilities::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<TextSelectingUtilities*, creationType>(textHandle)));
    }
    // System.Boolean HandleKeyEvent(UnityEngine.Event e)
    // Offset: 0x5517304
    bool HandleKeyEvent(::UnityEngine::Event* e);
    // private System.Boolean PerformOperation(UnityEngine.TextSelectOp operation)
    // Offset: 0x5517824
    bool PerformOperation(::UnityEngine::TextSelectOp operation);
    // static private System.Void MapKey(System.String key, UnityEngine.TextSelectOp action)
    // Offset: 0x55185D8
    static void MapKey(::StringW key, ::UnityEngine::TextSelectOp action);
    // private System.Void InitKeyActions()
    // Offset: 0x5517410
    void InitKeyActions();
    // public System.Void ClearCursorPos()
    // Offset: 0x5512FA4
    void ClearCursorPos();
    // public System.Void OnFocus(System.Boolean selectAll)
    // Offset: 0x5518668
    void OnFocus(bool selectAll);
    // public System.Void SelectAll()
    // Offset: 0x551856C
    void SelectAll();
    // public System.Void SelectNone()
    // Offset: 0x5513118
    void SelectNone();
    // public System.Void SelectLeft()
    // Offset: 0x5517A14
    void SelectLeft();
    // public System.Void SelectRight()
    // Offset: 0x5517B10
    void SelectRight();
    // public System.Void SelectUp()
    // Offset: 0x5517C0C
    void SelectUp();
    // public System.Void SelectDown()
    // Offset: 0x5517C78
    void SelectDown();
    // public System.Void SelectTextEnd()
    // Offset: 0x5518024
    void SelectTextEnd();
    // public System.Void SelectTextStart()
    // Offset: 0x5517FFC
    void SelectTextStart();
    // public System.Void SelectToStartOfNextWord()
    // Offset: 0x5517FA0
    void SelectToStartOfNextWord();
    // public System.Void SelectToEndOfPreviousWord()
    // Offset: 0x5517F44
    void SelectToEndOfPreviousWord();
    // public System.Void SelectWordRight()
    // Offset: 0x5517CE4
    void SelectWordRight();
    // public System.Void SelectWordLeft()
    // Offset: 0x5517E14
    void SelectWordLeft();
    // public System.Void SelectGraphicalLineStart()
    // Offset: 0x55184B4
    void SelectGraphicalLineStart();
    // public System.Void SelectGraphicalLineEnd()
    // Offset: 0x5518510
    void SelectGraphicalLineEnd();
    // public System.Void SelectParagraphForward()
    // Offset: 0x5518244
    void SelectParagraphForward();
    // public System.Void SelectParagraphBackward()
    // Offset: 0x5518358
    void SelectParagraphBackward();
    // public System.Void SelectCurrentWord()
    // Offset: 0x55187C4
    void SelectCurrentWord();
    // public System.Void SelectCurrentParagraph()
    // Offset: 0x5518A18
    void SelectCurrentParagraph();
    // public System.Void MoveRight()
    // Offset: 0x5511654
    void MoveRight();
    // public System.Void MoveLeft()
    // Offset: 0x5511548
    void MoveLeft();
    // public System.Void MoveUp()
    // Offset: 0x5511768
    void MoveUp();
    // public System.Void MoveDown()
    // Offset: 0x551189C
    void MoveDown();
    // public System.Void MoveLineStart()
    // Offset: 0x55119DC
    void MoveLineStart();
    // public System.Void MoveLineEnd()
    // Offset: 0x5511B10
    void MoveLineEnd();
    // public System.Void MoveGraphicalLineStart()
    // Offset: 0x5512304
    void MoveGraphicalLineStart();
    // public System.Void MoveGraphicalLineEnd()
    // Offset: 0x55123B8
    void MoveGraphicalLineEnd();
    // public System.Void MoveTextStart()
    // Offset: 0x5511FD4
    void MoveTextStart();
    // public System.Void MoveTextEnd()
    // Offset: 0x5512030
    void MoveTextEnd();
    // public System.Void MoveParagraphForward()
    // Offset: 0x55120A8
    void MoveParagraphForward();
    // public System.Void MoveParagraphBackward()
    // Offset: 0x55121B4
    void MoveParagraphBackward();
    // public System.Void MoveWordRight()
    // Offset: 0x5511C5C
    void MoveWordRight();
    // public System.Void MoveToStartOfNextWord()
    // Offset: 0x5511D4C
    void MoveToStartOfNextWord();
    // public System.Void MoveToEndOfPreviousWord()
    // Offset: 0x5511E14
    void MoveToEndOfPreviousWord();
    // public System.Void MoveWordLeft()
    // Offset: 0x5511EDC
    void MoveWordLeft();
    // public System.Void ExpandSelectGraphicalLineStart()
    // Offset: 0x5518064
    void ExpandSelectGraphicalLineStart();
    // public System.Void ExpandSelectGraphicalLineEnd()
    // Offset: 0x5518154
    void ExpandSelectGraphicalLineEnd();
    // protected internal System.Void MoveCursorToPosition_Internal(UnityEngine.Vector2 cursorPosition, System.Boolean shift)
    // Offset: 0x5518C28
    void MoveCursorToPosition_Internal(::UnityEngine::Vector2 cursorPosition, bool shift);
    // public System.Void SelectToPosition(UnityEngine.Vector2 cursorPosition)
    // Offset: 0x5518CC4
    void SelectToPosition(::UnityEngine::Vector2 cursorPosition);
    // private System.Int32 FindNextSeperator(System.Int32 startPos)
    // Offset: 0x5518B08
    int FindNextSeperator(int startPos);
    // private System.Int32 FindPrevSeperator(System.Int32 startPos)
    // Offset: 0x5518B8C
    int FindPrevSeperator(int startPos);
    // public System.Int32 FindStartOfNextWord(System.Int32 p)
    // Offset: 0x5512C18
    int FindStartOfNextWord(int p);
    // public System.Int32 FindEndOfPreviousWord(System.Int32 p)
    // Offset: 0x5512B3C
    int FindEndOfPreviousWord(int p);
    // private System.Int32 FindEndOfClassification(System.Int32 p, UnityEngine.TextSelectingUtilities/Direction dir)
    // Offset: 0x55188D4
    int FindEndOfClassification(int p, ::UnityEngine::TextSelectingUtilities::Direction dir);
    // private System.Int32 ClampTextIndex(System.Int32 index)
    // Offset: 0x5519068
    int ClampTextIndex(int index);
    // System.Int32 EnsureValidCodePointIndex(System.Int32 index)
    // Offset: 0x5517150
    int EnsureValidCodePointIndex(int index);
    // private System.Boolean IsValidCodePointIndex(System.Int32 index)
    // Offset: 0x551908C
    bool IsValidCodePointIndex(int index);
    // private System.Int32 IndexOfEndOfLine(System.Int32 startIndex)
    // Offset: 0x5518784
    int IndexOfEndOfLine(int startIndex);
    // public System.Int32 PreviousCodePointIndex(System.Int32 index)
    // Offset: 0x5512EBC
    int PreviousCodePointIndex(int index);
    // public System.Int32 NextCodePointIndex(System.Int32 index)
    // Offset: 0x5512DDC
    int NextCodePointIndex(int index);
    // private System.Int32 GetGraphicalLineStart(System.Int32 p)
    // Offset: 0x55186B4
    int GetGraphicalLineStart(int p);
    // private System.Int32 GetGraphicalLineEnd(System.Int32 p)
    // Offset: 0x5518718
    int GetGraphicalLineEnd(int p);
    // public System.Void Copy()
    // Offset: 0x5513010
    void Copy();
    // private UnityEngine.TextSelectingUtilities/CharacterType ClassifyChar(System.Int32 index)
    // Offset: 0x5518F5C
    ::UnityEngine::TextSelectingUtilities::CharacterType ClassifyChar(int index);
  }; // UnityEngine.TextSelectingUtilities
  #pragma pack(pop)
  static check_size<sizeof(TextSelectingUtilities), 72 + sizeof(::System::Action*)> __UnityEngine_TextSelectingUtilitiesSizeCheck;
  static_assert(sizeof(TextSelectingUtilities) == 0x50);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::TextSelectingUtilities::get_hasSelection
// Il2CppName: get_hasSelection
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::TextSelectingUtilities::*)()>(&UnityEngine::TextSelectingUtilities::get_hasSelection)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextSelectingUtilities*), "get_hasSelection", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextSelectingUtilities::get_revealCursor
// Il2CppName: get_revealCursor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::TextSelectingUtilities::*)()>(&UnityEngine::TextSelectingUtilities::get_revealCursor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextSelectingUtilities*), "get_revealCursor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextSelectingUtilities::set_revealCursor
// Il2CppName: set_revealCursor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TextSelectingUtilities::*)(bool)>(&UnityEngine::TextSelectingUtilities::set_revealCursor)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextSelectingUtilities*), "set_revealCursor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextSelectingUtilities::get_m_CharacterCount
// Il2CppName: get_m_CharacterCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::TextSelectingUtilities::*)()>(&UnityEngine::TextSelectingUtilities::get_m_CharacterCount)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextSelectingUtilities*), "get_m_CharacterCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextSelectingUtilities::get_characterCount
// Il2CppName: get_characterCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::TextSelectingUtilities::*)()>(&UnityEngine::TextSelectingUtilities::get_characterCount)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextSelectingUtilities*), "get_characterCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextSelectingUtilities::get_m_TextElementInfos
// Il2CppName: get_m_TextElementInfos
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::UnityEngine::TextCore::Text::TextElementInfo> (UnityEngine::TextSelectingUtilities::*)()>(&UnityEngine::TextSelectingUtilities::get_m_TextElementInfos)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextSelectingUtilities*), "get_m_TextElementInfos", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextSelectingUtilities::get_cursorIndex
// Il2CppName: get_cursorIndex
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::TextSelectingUtilities::*)()>(&UnityEngine::TextSelectingUtilities::get_cursorIndex)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextSelectingUtilities*), "get_cursorIndex", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextSelectingUtilities::set_cursorIndex
// Il2CppName: set_cursorIndex
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TextSelectingUtilities::*)(int)>(&UnityEngine::TextSelectingUtilities::set_cursorIndex)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextSelectingUtilities*), "set_cursorIndex", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextSelectingUtilities::SetCursorIndexWithoutNotify
// Il2CppName: SetCursorIndexWithoutNotify
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TextSelectingUtilities::*)(int)>(&UnityEngine::TextSelectingUtilities::SetCursorIndexWithoutNotify)> {
  static const MethodInfo* get() {
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextSelectingUtilities*), "SetCursorIndexWithoutNotify", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{index});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextSelectingUtilities::get_selectIndex
// Il2CppName: get_selectIndex
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::TextSelectingUtilities::*)()>(&UnityEngine::TextSelectingUtilities::get_selectIndex)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextSelectingUtilities*), "get_selectIndex", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextSelectingUtilities::set_selectIndex
// Il2CppName: set_selectIndex
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TextSelectingUtilities::*)(int)>(&UnityEngine::TextSelectingUtilities::set_selectIndex)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextSelectingUtilities*), "set_selectIndex", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextSelectingUtilities::SetSelectIndexWithoutNotify
// Il2CppName: SetSelectIndexWithoutNotify
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TextSelectingUtilities::*)(int)>(&UnityEngine::TextSelectingUtilities::SetSelectIndexWithoutNotify)> {
  static const MethodInfo* get() {
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextSelectingUtilities*), "SetSelectIndexWithoutNotify", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{index});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextSelectingUtilities::get_selectedText
// Il2CppName: get_selectedText
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (UnityEngine::TextSelectingUtilities::*)()>(&UnityEngine::TextSelectingUtilities::get_selectedText)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextSelectingUtilities*), "get_selectedText", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextSelectingUtilities::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::TextSelectingUtilities::HandleKeyEvent
// Il2CppName: HandleKeyEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::TextSelectingUtilities::*)(::UnityEngine::Event*)>(&UnityEngine::TextSelectingUtilities::HandleKeyEvent)> {
  static const MethodInfo* get() {
    static auto* e = &::il2cpp_utils::GetClassFromName("UnityEngine", "Event")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextSelectingUtilities*), "HandleKeyEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{e});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextSelectingUtilities::PerformOperation
// Il2CppName: PerformOperation
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::TextSelectingUtilities::*)(::UnityEngine::TextSelectOp)>(&UnityEngine::TextSelectingUtilities::PerformOperation)> {
  static const MethodInfo* get() {
    static auto* operation = &::il2cpp_utils::GetClassFromName("UnityEngine", "TextSelectOp")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextSelectingUtilities*), "PerformOperation", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{operation});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextSelectingUtilities::MapKey
// Il2CppName: MapKey
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::StringW, ::UnityEngine::TextSelectOp)>(&UnityEngine::TextSelectingUtilities::MapKey)> {
  static const MethodInfo* get() {
    static auto* key = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* action = &::il2cpp_utils::GetClassFromName("UnityEngine", "TextSelectOp")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextSelectingUtilities*), "MapKey", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{key, action});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextSelectingUtilities::InitKeyActions
// Il2CppName: InitKeyActions
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TextSelectingUtilities::*)()>(&UnityEngine::TextSelectingUtilities::InitKeyActions)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextSelectingUtilities*), "InitKeyActions", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextSelectingUtilities::ClearCursorPos
// Il2CppName: ClearCursorPos
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TextSelectingUtilities::*)()>(&UnityEngine::TextSelectingUtilities::ClearCursorPos)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextSelectingUtilities*), "ClearCursorPos", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextSelectingUtilities::OnFocus
// Il2CppName: OnFocus
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TextSelectingUtilities::*)(bool)>(&UnityEngine::TextSelectingUtilities::OnFocus)> {
  static const MethodInfo* get() {
    static auto* selectAll = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextSelectingUtilities*), "OnFocus", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{selectAll});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextSelectingUtilities::SelectAll
// Il2CppName: SelectAll
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TextSelectingUtilities::*)()>(&UnityEngine::TextSelectingUtilities::SelectAll)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextSelectingUtilities*), "SelectAll", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextSelectingUtilities::SelectNone
// Il2CppName: SelectNone
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TextSelectingUtilities::*)()>(&UnityEngine::TextSelectingUtilities::SelectNone)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextSelectingUtilities*), "SelectNone", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextSelectingUtilities::SelectLeft
// Il2CppName: SelectLeft
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TextSelectingUtilities::*)()>(&UnityEngine::TextSelectingUtilities::SelectLeft)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextSelectingUtilities*), "SelectLeft", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextSelectingUtilities::SelectRight
// Il2CppName: SelectRight
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TextSelectingUtilities::*)()>(&UnityEngine::TextSelectingUtilities::SelectRight)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextSelectingUtilities*), "SelectRight", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextSelectingUtilities::SelectUp
// Il2CppName: SelectUp
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TextSelectingUtilities::*)()>(&UnityEngine::TextSelectingUtilities::SelectUp)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextSelectingUtilities*), "SelectUp", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextSelectingUtilities::SelectDown
// Il2CppName: SelectDown
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TextSelectingUtilities::*)()>(&UnityEngine::TextSelectingUtilities::SelectDown)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextSelectingUtilities*), "SelectDown", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextSelectingUtilities::SelectTextEnd
// Il2CppName: SelectTextEnd
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TextSelectingUtilities::*)()>(&UnityEngine::TextSelectingUtilities::SelectTextEnd)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextSelectingUtilities*), "SelectTextEnd", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextSelectingUtilities::SelectTextStart
// Il2CppName: SelectTextStart
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TextSelectingUtilities::*)()>(&UnityEngine::TextSelectingUtilities::SelectTextStart)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextSelectingUtilities*), "SelectTextStart", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextSelectingUtilities::SelectToStartOfNextWord
// Il2CppName: SelectToStartOfNextWord
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TextSelectingUtilities::*)()>(&UnityEngine::TextSelectingUtilities::SelectToStartOfNextWord)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextSelectingUtilities*), "SelectToStartOfNextWord", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextSelectingUtilities::SelectToEndOfPreviousWord
// Il2CppName: SelectToEndOfPreviousWord
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TextSelectingUtilities::*)()>(&UnityEngine::TextSelectingUtilities::SelectToEndOfPreviousWord)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextSelectingUtilities*), "SelectToEndOfPreviousWord", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextSelectingUtilities::SelectWordRight
// Il2CppName: SelectWordRight
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TextSelectingUtilities::*)()>(&UnityEngine::TextSelectingUtilities::SelectWordRight)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextSelectingUtilities*), "SelectWordRight", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextSelectingUtilities::SelectWordLeft
// Il2CppName: SelectWordLeft
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TextSelectingUtilities::*)()>(&UnityEngine::TextSelectingUtilities::SelectWordLeft)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextSelectingUtilities*), "SelectWordLeft", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextSelectingUtilities::SelectGraphicalLineStart
// Il2CppName: SelectGraphicalLineStart
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TextSelectingUtilities::*)()>(&UnityEngine::TextSelectingUtilities::SelectGraphicalLineStart)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextSelectingUtilities*), "SelectGraphicalLineStart", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextSelectingUtilities::SelectGraphicalLineEnd
// Il2CppName: SelectGraphicalLineEnd
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TextSelectingUtilities::*)()>(&UnityEngine::TextSelectingUtilities::SelectGraphicalLineEnd)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextSelectingUtilities*), "SelectGraphicalLineEnd", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextSelectingUtilities::SelectParagraphForward
// Il2CppName: SelectParagraphForward
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TextSelectingUtilities::*)()>(&UnityEngine::TextSelectingUtilities::SelectParagraphForward)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextSelectingUtilities*), "SelectParagraphForward", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextSelectingUtilities::SelectParagraphBackward
// Il2CppName: SelectParagraphBackward
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TextSelectingUtilities::*)()>(&UnityEngine::TextSelectingUtilities::SelectParagraphBackward)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextSelectingUtilities*), "SelectParagraphBackward", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextSelectingUtilities::SelectCurrentWord
// Il2CppName: SelectCurrentWord
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TextSelectingUtilities::*)()>(&UnityEngine::TextSelectingUtilities::SelectCurrentWord)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextSelectingUtilities*), "SelectCurrentWord", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextSelectingUtilities::SelectCurrentParagraph
// Il2CppName: SelectCurrentParagraph
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TextSelectingUtilities::*)()>(&UnityEngine::TextSelectingUtilities::SelectCurrentParagraph)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextSelectingUtilities*), "SelectCurrentParagraph", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextSelectingUtilities::MoveRight
// Il2CppName: MoveRight
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TextSelectingUtilities::*)()>(&UnityEngine::TextSelectingUtilities::MoveRight)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextSelectingUtilities*), "MoveRight", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextSelectingUtilities::MoveLeft
// Il2CppName: MoveLeft
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TextSelectingUtilities::*)()>(&UnityEngine::TextSelectingUtilities::MoveLeft)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextSelectingUtilities*), "MoveLeft", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextSelectingUtilities::MoveUp
// Il2CppName: MoveUp
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TextSelectingUtilities::*)()>(&UnityEngine::TextSelectingUtilities::MoveUp)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextSelectingUtilities*), "MoveUp", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextSelectingUtilities::MoveDown
// Il2CppName: MoveDown
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TextSelectingUtilities::*)()>(&UnityEngine::TextSelectingUtilities::MoveDown)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextSelectingUtilities*), "MoveDown", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextSelectingUtilities::MoveLineStart
// Il2CppName: MoveLineStart
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TextSelectingUtilities::*)()>(&UnityEngine::TextSelectingUtilities::MoveLineStart)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextSelectingUtilities*), "MoveLineStart", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextSelectingUtilities::MoveLineEnd
// Il2CppName: MoveLineEnd
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TextSelectingUtilities::*)()>(&UnityEngine::TextSelectingUtilities::MoveLineEnd)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextSelectingUtilities*), "MoveLineEnd", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextSelectingUtilities::MoveGraphicalLineStart
// Il2CppName: MoveGraphicalLineStart
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TextSelectingUtilities::*)()>(&UnityEngine::TextSelectingUtilities::MoveGraphicalLineStart)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextSelectingUtilities*), "MoveGraphicalLineStart", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextSelectingUtilities::MoveGraphicalLineEnd
// Il2CppName: MoveGraphicalLineEnd
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TextSelectingUtilities::*)()>(&UnityEngine::TextSelectingUtilities::MoveGraphicalLineEnd)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextSelectingUtilities*), "MoveGraphicalLineEnd", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextSelectingUtilities::MoveTextStart
// Il2CppName: MoveTextStart
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TextSelectingUtilities::*)()>(&UnityEngine::TextSelectingUtilities::MoveTextStart)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextSelectingUtilities*), "MoveTextStart", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextSelectingUtilities::MoveTextEnd
// Il2CppName: MoveTextEnd
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TextSelectingUtilities::*)()>(&UnityEngine::TextSelectingUtilities::MoveTextEnd)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextSelectingUtilities*), "MoveTextEnd", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextSelectingUtilities::MoveParagraphForward
// Il2CppName: MoveParagraphForward
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TextSelectingUtilities::*)()>(&UnityEngine::TextSelectingUtilities::MoveParagraphForward)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextSelectingUtilities*), "MoveParagraphForward", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextSelectingUtilities::MoveParagraphBackward
// Il2CppName: MoveParagraphBackward
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TextSelectingUtilities::*)()>(&UnityEngine::TextSelectingUtilities::MoveParagraphBackward)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextSelectingUtilities*), "MoveParagraphBackward", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextSelectingUtilities::MoveWordRight
// Il2CppName: MoveWordRight
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TextSelectingUtilities::*)()>(&UnityEngine::TextSelectingUtilities::MoveWordRight)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextSelectingUtilities*), "MoveWordRight", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextSelectingUtilities::MoveToStartOfNextWord
// Il2CppName: MoveToStartOfNextWord
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TextSelectingUtilities::*)()>(&UnityEngine::TextSelectingUtilities::MoveToStartOfNextWord)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextSelectingUtilities*), "MoveToStartOfNextWord", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextSelectingUtilities::MoveToEndOfPreviousWord
// Il2CppName: MoveToEndOfPreviousWord
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TextSelectingUtilities::*)()>(&UnityEngine::TextSelectingUtilities::MoveToEndOfPreviousWord)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextSelectingUtilities*), "MoveToEndOfPreviousWord", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextSelectingUtilities::MoveWordLeft
// Il2CppName: MoveWordLeft
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TextSelectingUtilities::*)()>(&UnityEngine::TextSelectingUtilities::MoveWordLeft)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextSelectingUtilities*), "MoveWordLeft", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextSelectingUtilities::ExpandSelectGraphicalLineStart
// Il2CppName: ExpandSelectGraphicalLineStart
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TextSelectingUtilities::*)()>(&UnityEngine::TextSelectingUtilities::ExpandSelectGraphicalLineStart)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextSelectingUtilities*), "ExpandSelectGraphicalLineStart", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextSelectingUtilities::ExpandSelectGraphicalLineEnd
// Il2CppName: ExpandSelectGraphicalLineEnd
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TextSelectingUtilities::*)()>(&UnityEngine::TextSelectingUtilities::ExpandSelectGraphicalLineEnd)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextSelectingUtilities*), "ExpandSelectGraphicalLineEnd", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextSelectingUtilities::MoveCursorToPosition_Internal
// Il2CppName: MoveCursorToPosition_Internal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TextSelectingUtilities::*)(::UnityEngine::Vector2, bool)>(&UnityEngine::TextSelectingUtilities::MoveCursorToPosition_Internal)> {
  static const MethodInfo* get() {
    static auto* cursorPosition = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector2")->byval_arg;
    static auto* shift = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextSelectingUtilities*), "MoveCursorToPosition_Internal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{cursorPosition, shift});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextSelectingUtilities::SelectToPosition
// Il2CppName: SelectToPosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TextSelectingUtilities::*)(::UnityEngine::Vector2)>(&UnityEngine::TextSelectingUtilities::SelectToPosition)> {
  static const MethodInfo* get() {
    static auto* cursorPosition = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector2")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextSelectingUtilities*), "SelectToPosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{cursorPosition});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextSelectingUtilities::FindNextSeperator
// Il2CppName: FindNextSeperator
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::TextSelectingUtilities::*)(int)>(&UnityEngine::TextSelectingUtilities::FindNextSeperator)> {
  static const MethodInfo* get() {
    static auto* startPos = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextSelectingUtilities*), "FindNextSeperator", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{startPos});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextSelectingUtilities::FindPrevSeperator
// Il2CppName: FindPrevSeperator
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::TextSelectingUtilities::*)(int)>(&UnityEngine::TextSelectingUtilities::FindPrevSeperator)> {
  static const MethodInfo* get() {
    static auto* startPos = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextSelectingUtilities*), "FindPrevSeperator", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{startPos});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextSelectingUtilities::FindStartOfNextWord
// Il2CppName: FindStartOfNextWord
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::TextSelectingUtilities::*)(int)>(&UnityEngine::TextSelectingUtilities::FindStartOfNextWord)> {
  static const MethodInfo* get() {
    static auto* p = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextSelectingUtilities*), "FindStartOfNextWord", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{p});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextSelectingUtilities::FindEndOfPreviousWord
// Il2CppName: FindEndOfPreviousWord
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::TextSelectingUtilities::*)(int)>(&UnityEngine::TextSelectingUtilities::FindEndOfPreviousWord)> {
  static const MethodInfo* get() {
    static auto* p = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextSelectingUtilities*), "FindEndOfPreviousWord", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{p});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextSelectingUtilities::FindEndOfClassification
// Il2CppName: FindEndOfClassification
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::TextSelectingUtilities::*)(int, ::UnityEngine::TextSelectingUtilities::Direction)>(&UnityEngine::TextSelectingUtilities::FindEndOfClassification)> {
  static const MethodInfo* get() {
    static auto* p = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* dir = &::il2cpp_utils::GetClassFromName("UnityEngine", "TextSelectingUtilities/Direction")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextSelectingUtilities*), "FindEndOfClassification", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{p, dir});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextSelectingUtilities::ClampTextIndex
// Il2CppName: ClampTextIndex
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::TextSelectingUtilities::*)(int)>(&UnityEngine::TextSelectingUtilities::ClampTextIndex)> {
  static const MethodInfo* get() {
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextSelectingUtilities*), "ClampTextIndex", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{index});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextSelectingUtilities::EnsureValidCodePointIndex
// Il2CppName: EnsureValidCodePointIndex
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::TextSelectingUtilities::*)(int)>(&UnityEngine::TextSelectingUtilities::EnsureValidCodePointIndex)> {
  static const MethodInfo* get() {
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextSelectingUtilities*), "EnsureValidCodePointIndex", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{index});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextSelectingUtilities::IsValidCodePointIndex
// Il2CppName: IsValidCodePointIndex
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::TextSelectingUtilities::*)(int)>(&UnityEngine::TextSelectingUtilities::IsValidCodePointIndex)> {
  static const MethodInfo* get() {
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextSelectingUtilities*), "IsValidCodePointIndex", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{index});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextSelectingUtilities::IndexOfEndOfLine
// Il2CppName: IndexOfEndOfLine
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::TextSelectingUtilities::*)(int)>(&UnityEngine::TextSelectingUtilities::IndexOfEndOfLine)> {
  static const MethodInfo* get() {
    static auto* startIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextSelectingUtilities*), "IndexOfEndOfLine", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{startIndex});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextSelectingUtilities::PreviousCodePointIndex
// Il2CppName: PreviousCodePointIndex
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::TextSelectingUtilities::*)(int)>(&UnityEngine::TextSelectingUtilities::PreviousCodePointIndex)> {
  static const MethodInfo* get() {
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextSelectingUtilities*), "PreviousCodePointIndex", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{index});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextSelectingUtilities::NextCodePointIndex
// Il2CppName: NextCodePointIndex
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::TextSelectingUtilities::*)(int)>(&UnityEngine::TextSelectingUtilities::NextCodePointIndex)> {
  static const MethodInfo* get() {
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextSelectingUtilities*), "NextCodePointIndex", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{index});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextSelectingUtilities::GetGraphicalLineStart
// Il2CppName: GetGraphicalLineStart
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::TextSelectingUtilities::*)(int)>(&UnityEngine::TextSelectingUtilities::GetGraphicalLineStart)> {
  static const MethodInfo* get() {
    static auto* p = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextSelectingUtilities*), "GetGraphicalLineStart", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{p});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextSelectingUtilities::GetGraphicalLineEnd
// Il2CppName: GetGraphicalLineEnd
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::TextSelectingUtilities::*)(int)>(&UnityEngine::TextSelectingUtilities::GetGraphicalLineEnd)> {
  static const MethodInfo* get() {
    static auto* p = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextSelectingUtilities*), "GetGraphicalLineEnd", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{p});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextSelectingUtilities::Copy
// Il2CppName: Copy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TextSelectingUtilities::*)()>(&UnityEngine::TextSelectingUtilities::Copy)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextSelectingUtilities*), "Copy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextSelectingUtilities::ClassifyChar
// Il2CppName: ClassifyChar
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::TextSelectingUtilities::CharacterType (UnityEngine::TextSelectingUtilities::*)(int)>(&UnityEngine::TextSelectingUtilities::ClassifyChar)> {
  static const MethodInfo* get() {
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextSelectingUtilities*), "ClassifyChar", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{index});
  }
};
