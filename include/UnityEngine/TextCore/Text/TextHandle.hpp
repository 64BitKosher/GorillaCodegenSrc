// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::TextCore::Text
namespace UnityEngine::TextCore::Text {
  // Forward declaring type: TextInfo
  class TextInfo;
  // Forward declaring type: TextGenerationSettings
  class TextGenerationSettings;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Vector3
  struct Vector3;
}
// Completed forward declares
// Type namespace: UnityEngine.TextCore.Text
namespace UnityEngine::TextCore::Text {
  // Forward declaring type: TextHandle
  class TextHandle;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::TextCore::Text::TextHandle);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::TextCore::Text::TextHandle*, "UnityEngine.TextCore.Text", "TextHandle");
// Type namespace: UnityEngine.TextCore.Text
namespace UnityEngine::TextCore::Text {
  // Size: 0x31
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.TextCore.Text.TextHandle
  // [TokenAttribute] Offset: FFFFFFFF
  class TextHandle : public ::Il2CppObject {
    public:
    public:
    // private UnityEngine.Vector2 m_PreferredSize
    // Size: 0x8
    // Offset: 0x10
    ::UnityEngine::Vector2 m_PreferredSize;
    // Field size check
    static_assert(sizeof(::UnityEngine::Vector2) == 0x8);
    // private UnityEngine.TextCore.Text.TextInfo m_TextInfo
    // Size: 0x8
    // Offset: 0x18
    ::UnityEngine::TextCore::Text::TextInfo* m_TextInfo;
    // Field size check
    static_assert(sizeof(::UnityEngine::TextCore::Text::TextInfo*) == 0x8);
    // private System.Int32 m_PreviousGenerationSettingsHash
    // Size: 0x4
    // Offset: 0x20
    int m_PreviousGenerationSettingsHash;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // Padding between fields: m_PreviousGenerationSettingsHash and: textGenerationSettings
    char __padding2[0x4] = {};
    // protected UnityEngine.TextCore.Text.TextGenerationSettings textGenerationSettings
    // Size: 0x8
    // Offset: 0x28
    ::UnityEngine::TextCore::Text::TextGenerationSettings* textGenerationSettings;
    // Field size check
    static_assert(sizeof(::UnityEngine::TextCore::Text::TextGenerationSettings*) == 0x8);
    // private System.Boolean isDirty
    // Size: 0x1
    // Offset: 0x30
    bool isDirty;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    public:
    // Get static field: static private UnityEngine.TextCore.Text.TextInfo m_LayoutTextInfo
    static ::UnityEngine::TextCore::Text::TextInfo* _get_m_LayoutTextInfo();
    // Set static field: static private UnityEngine.TextCore.Text.TextInfo m_LayoutTextInfo
    static void _set_m_LayoutTextInfo(::UnityEngine::TextCore::Text::TextInfo* value);
    // Get static field: static protected UnityEngine.TextCore.Text.TextGenerationSettings s_LayoutSettings
    static ::UnityEngine::TextCore::Text::TextGenerationSettings* _get_s_LayoutSettings();
    // Set static field: static protected UnityEngine.TextCore.Text.TextGenerationSettings s_LayoutSettings
    static void _set_s_LayoutSettings(::UnityEngine::TextCore::Text::TextGenerationSettings* value);
    // Get instance field reference: private UnityEngine.Vector2 m_PreferredSize
    [[deprecated("Use field access instead!")]] ::UnityEngine::Vector2& dyn_m_PreferredSize();
    // Get instance field reference: private UnityEngine.TextCore.Text.TextInfo m_TextInfo
    [[deprecated("Use field access instead!")]] ::UnityEngine::TextCore::Text::TextInfo*& dyn_m_TextInfo();
    // Get instance field reference: private System.Int32 m_PreviousGenerationSettingsHash
    [[deprecated("Use field access instead!")]] int& dyn_m_PreviousGenerationSettingsHash();
    // Get instance field reference: protected UnityEngine.TextCore.Text.TextGenerationSettings textGenerationSettings
    [[deprecated("Use field access instead!")]] ::UnityEngine::TextCore::Text::TextGenerationSettings*& dyn_textGenerationSettings();
    // Get instance field reference: private System.Boolean isDirty
    [[deprecated("Use field access instead!")]] bool& dyn_isDirty();
    // public System.Void .ctor()
    // Offset: 0x557066C
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static TextHandle* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::Text::TextHandle::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<TextHandle*, creationType>()));
    }
    // UnityEngine.TextCore.Text.TextInfo get_textInfo()
    // Offset: 0x55706D8
    ::UnityEngine::TextCore::Text::TextInfo* get_textInfo();
    // static UnityEngine.TextCore.Text.TextInfo get_layoutTextInfo()
    // Offset: 0x55708C4
    static ::UnityEngine::TextCore::Text::TextInfo* get_layoutTextInfo();
    // public System.Boolean IsDirty()
    // Offset: 0x557098C
    bool IsDirty();
    // public UnityEngine.Vector2 GetCursorPositionFromStringIndexUsingCharacterHeight(System.Int32 index, System.Boolean inverseYAxis)
    // Offset: 0x55709DC
    ::UnityEngine::Vector2 GetCursorPositionFromStringIndexUsingCharacterHeight(int index, bool inverseYAxis);
    // public UnityEngine.Vector2 GetCursorPositionFromStringIndexUsingLineHeight(System.Int32 index, System.Boolean useXAdvance, System.Boolean inverseYAxis)
    // Offset: 0x5570B2C
    ::UnityEngine::Vector2 GetCursorPositionFromStringIndexUsingLineHeight(int index, bool useXAdvance, bool inverseYAxis);
    // public System.Int32 GetCursorIndexFromPosition(UnityEngine.Vector2 position, System.Boolean inverseYAxis)
    // Offset: 0x5570CB8
    int GetCursorIndexFromPosition(::UnityEngine::Vector2 position, bool inverseYAxis);
    // public System.Int32 LineDownCharacterPosition(System.Int32 originalPos)
    // Offset: 0x5571148
    int LineDownCharacterPosition(int originalPos);
    // public System.Int32 LineUpCharacterPosition(System.Int32 originalPos)
    // Offset: 0x5571324
    int LineUpCharacterPosition(int originalPos);
    // public System.Int32 FindNearestLine(UnityEngine.Vector2 position)
    // Offset: 0x5570DD0
    int FindNearestLine(::UnityEngine::Vector2 position);
    // public System.Int32 FindNearestCharacterOnLine(UnityEngine.Vector2 position, System.Int32 line, System.Boolean visibleOnly)
    // Offset: 0x5570EA0
    int FindNearestCharacterOnLine(::UnityEngine::Vector2 position, int line, bool visibleOnly);
    // public System.Int32 FindIntersectingLink(UnityEngine.Vector3 position, System.Boolean inverseYAxis)
    // Offset: 0x5571674
    int FindIntersectingLink(::UnityEngine::Vector3 position, bool inverseYAxis);
    // static private System.Boolean PointIntersectRectangle(UnityEngine.Vector3 m, UnityEngine.Vector3 a, UnityEngine.Vector3 b, UnityEngine.Vector3 c, UnityEngine.Vector3 d)
    // Offset: 0x55714EC
    static bool PointIntersectRectangle(::UnityEngine::Vector3 m, ::UnityEngine::Vector3 a, ::UnityEngine::Vector3 b, ::UnityEngine::Vector3 c, ::UnityEngine::Vector3 d);
    // static private System.Single DistanceToLine(UnityEngine.Vector3 a, UnityEngine.Vector3 b, UnityEngine.Vector3 point)
    // Offset: 0x55715AC
    static float DistanceToLine(::UnityEngine::Vector3 a, ::UnityEngine::Vector3 b, ::UnityEngine::Vector3 point);
    // public System.Int32 GetLineNumber(System.Int32 index)
    // Offset: 0x5571938
    int GetLineNumber(int index);
    // public System.Single GetLineHeight(System.Int32 lineNumber)
    // Offset: 0x55719C8
    float GetLineHeight(int lineNumber);
    // public System.Single GetLineHeightFromCharacterIndex(System.Int32 index)
    // Offset: 0x5571A58
    float GetLineHeightFromCharacterIndex(int index);
    // public System.Single GetCharacterHeightFromIndex(System.Int32 index)
    // Offset: 0x5571AEC
    float GetCharacterHeightFromIndex(int index);
    // public System.Boolean IsElided()
    // Offset: 0x5571B84
    bool IsElided();
    // public System.String Substring(System.Int32 startIndex, System.Int32 length)
    // Offset: 0x5571BC4
    ::StringW Substring(int startIndex, int length);
    // public System.Int32 IndexOf(System.Char value, System.Int32 startIndex)
    // Offset: 0x5571CFC
    int IndexOf(::Il2CppChar value, int startIndex);
    // public System.Int32 LastIndexOf(System.Char value, System.Int32 startIndex)
    // Offset: 0x5571DE4
    int LastIndexOf(::Il2CppChar value, int startIndex);
    // protected System.Single ComputeTextWidth(UnityEngine.TextCore.Text.TextGenerationSettings tgs)
    // Offset: 0x5571EB0
    float ComputeTextWidth(::UnityEngine::TextCore::Text::TextGenerationSettings* tgs);
    // protected System.Single ComputeTextHeight(UnityEngine.TextCore.Text.TextGenerationSettings tgs)
    // Offset: 0x5571F3C
    float ComputeTextHeight(::UnityEngine::TextCore::Text::TextGenerationSettings* tgs);
    // protected System.Void UpdatePreferredValues(UnityEngine.TextCore.Text.TextGenerationSettings tgs)
    // Offset: 0x5571EC8
    void UpdatePreferredValues(::UnityEngine::TextCore::Text::TextGenerationSettings* tgs);
    // protected UnityEngine.TextCore.Text.TextInfo Update(UnityEngine.TextCore.Text.TextGenerationSettings tgs)
    // Offset: 0x5571F54
    ::UnityEngine::TextCore::Text::TextInfo* Update(::UnityEngine::TextCore::Text::TextGenerationSettings* tgs);
    // static private System.Void .cctor()
    // Offset: 0x5571FCC
    static void _cctor();
  }; // UnityEngine.TextCore.Text.TextHandle
  #pragma pack(pop)
  static check_size<sizeof(TextHandle), 48 + sizeof(bool)> __UnityEngine_TextCore_Text_TextHandleSizeCheck;
  static_assert(sizeof(TextHandle) == 0x31);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::TextHandle::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::TextHandle::get_textInfo
// Il2CppName: get_textInfo
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::TextCore::Text::TextInfo* (UnityEngine::TextCore::Text::TextHandle::*)()>(&UnityEngine::TextCore::Text::TextHandle::get_textInfo)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::TextHandle*), "get_textInfo", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::TextHandle::get_layoutTextInfo
// Il2CppName: get_layoutTextInfo
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::TextCore::Text::TextInfo* (*)()>(&UnityEngine::TextCore::Text::TextHandle::get_layoutTextInfo)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::TextHandle*), "get_layoutTextInfo", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::TextHandle::IsDirty
// Il2CppName: IsDirty
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::TextCore::Text::TextHandle::*)()>(&UnityEngine::TextCore::Text::TextHandle::IsDirty)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::TextHandle*), "IsDirty", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::TextHandle::GetCursorPositionFromStringIndexUsingCharacterHeight
// Il2CppName: GetCursorPositionFromStringIndexUsingCharacterHeight
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector2 (UnityEngine::TextCore::Text::TextHandle::*)(int, bool)>(&UnityEngine::TextCore::Text::TextHandle::GetCursorPositionFromStringIndexUsingCharacterHeight)> {
  static const MethodInfo* get() {
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* inverseYAxis = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::TextHandle*), "GetCursorPositionFromStringIndexUsingCharacterHeight", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{index, inverseYAxis});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::TextHandle::GetCursorPositionFromStringIndexUsingLineHeight
// Il2CppName: GetCursorPositionFromStringIndexUsingLineHeight
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector2 (UnityEngine::TextCore::Text::TextHandle::*)(int, bool, bool)>(&UnityEngine::TextCore::Text::TextHandle::GetCursorPositionFromStringIndexUsingLineHeight)> {
  static const MethodInfo* get() {
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* useXAdvance = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* inverseYAxis = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::TextHandle*), "GetCursorPositionFromStringIndexUsingLineHeight", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{index, useXAdvance, inverseYAxis});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::TextHandle::GetCursorIndexFromPosition
// Il2CppName: GetCursorIndexFromPosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::TextCore::Text::TextHandle::*)(::UnityEngine::Vector2, bool)>(&UnityEngine::TextCore::Text::TextHandle::GetCursorIndexFromPosition)> {
  static const MethodInfo* get() {
    static auto* position = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector2")->byval_arg;
    static auto* inverseYAxis = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::TextHandle*), "GetCursorIndexFromPosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{position, inverseYAxis});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::TextHandle::LineDownCharacterPosition
// Il2CppName: LineDownCharacterPosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::TextCore::Text::TextHandle::*)(int)>(&UnityEngine::TextCore::Text::TextHandle::LineDownCharacterPosition)> {
  static const MethodInfo* get() {
    static auto* originalPos = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::TextHandle*), "LineDownCharacterPosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{originalPos});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::TextHandle::LineUpCharacterPosition
// Il2CppName: LineUpCharacterPosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::TextCore::Text::TextHandle::*)(int)>(&UnityEngine::TextCore::Text::TextHandle::LineUpCharacterPosition)> {
  static const MethodInfo* get() {
    static auto* originalPos = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::TextHandle*), "LineUpCharacterPosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{originalPos});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::TextHandle::FindNearestLine
// Il2CppName: FindNearestLine
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::TextCore::Text::TextHandle::*)(::UnityEngine::Vector2)>(&UnityEngine::TextCore::Text::TextHandle::FindNearestLine)> {
  static const MethodInfo* get() {
    static auto* position = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector2")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::TextHandle*), "FindNearestLine", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{position});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::TextHandle::FindNearestCharacterOnLine
// Il2CppName: FindNearestCharacterOnLine
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::TextCore::Text::TextHandle::*)(::UnityEngine::Vector2, int, bool)>(&UnityEngine::TextCore::Text::TextHandle::FindNearestCharacterOnLine)> {
  static const MethodInfo* get() {
    static auto* position = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector2")->byval_arg;
    static auto* line = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* visibleOnly = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::TextHandle*), "FindNearestCharacterOnLine", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{position, line, visibleOnly});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::TextHandle::FindIntersectingLink
// Il2CppName: FindIntersectingLink
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::TextCore::Text::TextHandle::*)(::UnityEngine::Vector3, bool)>(&UnityEngine::TextCore::Text::TextHandle::FindIntersectingLink)> {
  static const MethodInfo* get() {
    static auto* position = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* inverseYAxis = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::TextHandle*), "FindIntersectingLink", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{position, inverseYAxis});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::TextHandle::PointIntersectRectangle
// Il2CppName: PointIntersectRectangle
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::UnityEngine::Vector3, ::UnityEngine::Vector3, ::UnityEngine::Vector3, ::UnityEngine::Vector3, ::UnityEngine::Vector3)>(&UnityEngine::TextCore::Text::TextHandle::PointIntersectRectangle)> {
  static const MethodInfo* get() {
    static auto* m = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* a = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* b = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* c = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* d = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::TextHandle*), "PointIntersectRectangle", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{m, a, b, c, d});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::TextHandle::DistanceToLine
// Il2CppName: DistanceToLine
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (*)(::UnityEngine::Vector3, ::UnityEngine::Vector3, ::UnityEngine::Vector3)>(&UnityEngine::TextCore::Text::TextHandle::DistanceToLine)> {
  static const MethodInfo* get() {
    static auto* a = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* b = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* point = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::TextHandle*), "DistanceToLine", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{a, b, point});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::TextHandle::GetLineNumber
// Il2CppName: GetLineNumber
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::TextCore::Text::TextHandle::*)(int)>(&UnityEngine::TextCore::Text::TextHandle::GetLineNumber)> {
  static const MethodInfo* get() {
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::TextHandle*), "GetLineNumber", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{index});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::TextHandle::GetLineHeight
// Il2CppName: GetLineHeight
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::TextCore::Text::TextHandle::*)(int)>(&UnityEngine::TextCore::Text::TextHandle::GetLineHeight)> {
  static const MethodInfo* get() {
    static auto* lineNumber = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::TextHandle*), "GetLineHeight", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{lineNumber});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::TextHandle::GetLineHeightFromCharacterIndex
// Il2CppName: GetLineHeightFromCharacterIndex
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::TextCore::Text::TextHandle::*)(int)>(&UnityEngine::TextCore::Text::TextHandle::GetLineHeightFromCharacterIndex)> {
  static const MethodInfo* get() {
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::TextHandle*), "GetLineHeightFromCharacterIndex", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{index});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::TextHandle::GetCharacterHeightFromIndex
// Il2CppName: GetCharacterHeightFromIndex
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::TextCore::Text::TextHandle::*)(int)>(&UnityEngine::TextCore::Text::TextHandle::GetCharacterHeightFromIndex)> {
  static const MethodInfo* get() {
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::TextHandle*), "GetCharacterHeightFromIndex", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{index});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::TextHandle::IsElided
// Il2CppName: IsElided
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::TextCore::Text::TextHandle::*)()>(&UnityEngine::TextCore::Text::TextHandle::IsElided)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::TextHandle*), "IsElided", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::TextHandle::Substring
// Il2CppName: Substring
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (UnityEngine::TextCore::Text::TextHandle::*)(int, int)>(&UnityEngine::TextCore::Text::TextHandle::Substring)> {
  static const MethodInfo* get() {
    static auto* startIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* length = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::TextHandle*), "Substring", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{startIndex, length});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::TextHandle::IndexOf
// Il2CppName: IndexOf
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::TextCore::Text::TextHandle::*)(::Il2CppChar, int)>(&UnityEngine::TextCore::Text::TextHandle::IndexOf)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Char")->byval_arg;
    static auto* startIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::TextHandle*), "IndexOf", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value, startIndex});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::TextHandle::LastIndexOf
// Il2CppName: LastIndexOf
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::TextCore::Text::TextHandle::*)(::Il2CppChar, int)>(&UnityEngine::TextCore::Text::TextHandle::LastIndexOf)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Char")->byval_arg;
    static auto* startIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::TextHandle*), "LastIndexOf", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value, startIndex});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::TextHandle::ComputeTextWidth
// Il2CppName: ComputeTextWidth
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::TextCore::Text::TextHandle::*)(::UnityEngine::TextCore::Text::TextGenerationSettings*)>(&UnityEngine::TextCore::Text::TextHandle::ComputeTextWidth)> {
  static const MethodInfo* get() {
    static auto* tgs = &::il2cpp_utils::GetClassFromName("UnityEngine.TextCore.Text", "TextGenerationSettings")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::TextHandle*), "ComputeTextWidth", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{tgs});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::TextHandle::ComputeTextHeight
// Il2CppName: ComputeTextHeight
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::TextCore::Text::TextHandle::*)(::UnityEngine::TextCore::Text::TextGenerationSettings*)>(&UnityEngine::TextCore::Text::TextHandle::ComputeTextHeight)> {
  static const MethodInfo* get() {
    static auto* tgs = &::il2cpp_utils::GetClassFromName("UnityEngine.TextCore.Text", "TextGenerationSettings")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::TextHandle*), "ComputeTextHeight", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{tgs});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::TextHandle::UpdatePreferredValues
// Il2CppName: UpdatePreferredValues
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TextCore::Text::TextHandle::*)(::UnityEngine::TextCore::Text::TextGenerationSettings*)>(&UnityEngine::TextCore::Text::TextHandle::UpdatePreferredValues)> {
  static const MethodInfo* get() {
    static auto* tgs = &::il2cpp_utils::GetClassFromName("UnityEngine.TextCore.Text", "TextGenerationSettings")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::TextHandle*), "UpdatePreferredValues", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{tgs});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::TextHandle::Update
// Il2CppName: Update
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::TextCore::Text::TextInfo* (UnityEngine::TextCore::Text::TextHandle::*)(::UnityEngine::TextCore::Text::TextGenerationSettings*)>(&UnityEngine::TextCore::Text::TextHandle::Update)> {
  static const MethodInfo* get() {
    static auto* tgs = &::il2cpp_utils::GetClassFromName("UnityEngine.TextCore.Text", "TextGenerationSettings")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::TextHandle*), "Update", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{tgs});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::TextHandle::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&UnityEngine::TextCore::Text::TextHandle::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::TextHandle*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
