// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.TextCore.Text.TextElement
#include "UnityEngine/TextCore/Text/TextElement.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::TextCore::Text
namespace UnityEngine::TextCore::Text {
  // Forward declaring type: FontAsset
  class FontAsset;
}
// Forward declaring namespace: UnityEngine::TextCore
namespace UnityEngine::TextCore {
  // Forward declaring type: Glyph
  class Glyph;
}
// Completed forward declares
// Type namespace: UnityEngine.TextCore.Text
namespace UnityEngine::TextCore::Text {
  // Forward declaring type: Character
  class Character;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::TextCore::Text::Character);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::TextCore::Text::Character*, "UnityEngine.TextCore.Text", "Character");
// Type namespace: UnityEngine.TextCore.Text
namespace UnityEngine::TextCore::Text {
  // Size: 0x30
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.TextCore.Text.Character
  // [TokenAttribute] Offset: FFFFFFFF
  class Character : public ::UnityEngine::TextCore::Text::TextElement {
    public:
    // public System.Void .ctor(System.UInt32 unicode, UnityEngine.TextCore.Text.FontAsset fontAsset, UnityEngine.TextCore.Glyph glyph)
    // Offset: 0x5543A1C
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static Character* New_ctor(uint unicode, ::UnityEngine::TextCore::Text::FontAsset* fontAsset, ::UnityEngine::TextCore::Glyph* glyph) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::Text::Character::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<Character*, creationType>(unicode, fontAsset, glyph)));
    }
    // System.Void .ctor(System.UInt32 unicode, System.UInt32 glyphIndex)
    // Offset: 0x5543AB8
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static Character* New_ctor(uint unicode, uint glyphIndex) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::Text::Character::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<Character*, creationType>(unicode, glyphIndex)));
    }
    // public System.Void .ctor()
    // Offset: 0x55439E4
    // Implemented from: UnityEngine.TextCore.Text.TextElement
    // Base method: System.Void TextElement::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static Character* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::Text::Character::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<Character*, creationType>()));
    }
  }; // UnityEngine.TextCore.Text.Character
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::Character::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::Character::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::Character::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
