// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Enum
#include "System/Enum.hpp"
// Completed includes
// Type namespace: UnityEngine.TextCore.Text
namespace UnityEngine::TextCore::Text {
  // Forward declaring type: TextInputSource
  struct TextInputSource;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::TextCore::Text::TextInputSource, "UnityEngine.TextCore.Text", "TextInputSource");
// Type namespace: UnityEngine.TextCore.Text
namespace UnityEngine::TextCore::Text {
  // Size: 0x4
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.TextCore.Text.TextInputSource
  // [TokenAttribute] Offset: FFFFFFFF
  struct TextInputSource/*, public ::System::Enum*/ {
    public:
    public:
    // public System.Int32 value__
    // Size: 0x4
    // Offset: 0x0
    int value;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Creating value type constructor for type: TextInputSource
    constexpr TextInputSource(int value_ = {}) noexcept : value{value_} {}
    // Creating interface conversion operator: operator ::System::Enum
    operator ::System::Enum() noexcept {
      return *reinterpret_cast<::System::Enum*>(this);
    }
    // Creating conversion operator: operator int
    constexpr operator int() const noexcept {
      return value;
    }
    // static field const value: static public UnityEngine.TextCore.Text.TextInputSource TextInputBox
    static constexpr const int TextInputBox = 0;
    // Get static field: static public UnityEngine.TextCore.Text.TextInputSource TextInputBox
    static ::UnityEngine::TextCore::Text::TextInputSource _get_TextInputBox();
    // Set static field: static public UnityEngine.TextCore.Text.TextInputSource TextInputBox
    static void _set_TextInputBox(::UnityEngine::TextCore::Text::TextInputSource value);
    // static field const value: static public UnityEngine.TextCore.Text.TextInputSource SetText
    static constexpr const int SetText = 1;
    // Get static field: static public UnityEngine.TextCore.Text.TextInputSource SetText
    static ::UnityEngine::TextCore::Text::TextInputSource _get_SetText();
    // Set static field: static public UnityEngine.TextCore.Text.TextInputSource SetText
    static void _set_SetText(::UnityEngine::TextCore::Text::TextInputSource value);
    // static field const value: static public UnityEngine.TextCore.Text.TextInputSource SetTextArray
    static constexpr const int SetTextArray = 2;
    // Get static field: static public UnityEngine.TextCore.Text.TextInputSource SetTextArray
    static ::UnityEngine::TextCore::Text::TextInputSource _get_SetTextArray();
    // Set static field: static public UnityEngine.TextCore.Text.TextInputSource SetTextArray
    static void _set_SetTextArray(::UnityEngine::TextCore::Text::TextInputSource value);
    // static field const value: static public UnityEngine.TextCore.Text.TextInputSource TextString
    static constexpr const int TextString = 3;
    // Get static field: static public UnityEngine.TextCore.Text.TextInputSource TextString
    static ::UnityEngine::TextCore::Text::TextInputSource _get_TextString();
    // Set static field: static public UnityEngine.TextCore.Text.TextInputSource TextString
    static void _set_TextString(::UnityEngine::TextCore::Text::TextInputSource value);
    // Get instance field reference: public System.Int32 value__
    [[deprecated("Use field access instead!")]] int& dyn_value__();
  }; // UnityEngine.TextCore.Text.TextInputSource
  #pragma pack(pop)
  static check_size<sizeof(TextInputSource), 0 + sizeof(int)> __UnityEngine_TextCore_Text_TextInputSourceSizeCheck;
  static_assert(sizeof(TextInputSource) == 0x4);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
