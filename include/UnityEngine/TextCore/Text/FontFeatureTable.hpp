// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.TextCore.LowLevel.MultipleSubstitutionRecord
#include "UnityEngine/TextCore/LowLevel/MultipleSubstitutionRecord.hpp"
// Including type: UnityEngine.TextCore.LowLevel.LigatureSubstitutionRecord
#include "UnityEngine/TextCore/LowLevel/LigatureSubstitutionRecord.hpp"
// Including type: UnityEngine.TextCore.LowLevel.GlyphPairAdjustmentRecord
#include "UnityEngine/TextCore/LowLevel/GlyphPairAdjustmentRecord.hpp"
// Including type: UnityEngine.TextCore.LowLevel.MarkToBaseAdjustmentRecord
#include "UnityEngine/TextCore/LowLevel/MarkToBaseAdjustmentRecord.hpp"
// Including type: UnityEngine.TextCore.LowLevel.MarkToMarkAdjustmentRecord
#include "UnityEngine/TextCore/LowLevel/MarkToMarkAdjustmentRecord.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::TextCore::Text
namespace UnityEngine::TextCore::Text {
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
  // Forward declaring type: Dictionary`2<TKey, TValue>
  template<typename TKey, typename TValue>
  class Dictionary_2;
}
// Completed forward declares
// Type namespace: UnityEngine.TextCore.Text
namespace UnityEngine::TextCore::Text {
  // Forward declaring type: FontFeatureTable
  class FontFeatureTable;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::TextCore::Text::FontFeatureTable);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::TextCore::Text::FontFeatureTable*, "UnityEngine.TextCore.Text", "FontFeatureTable");
// Type namespace: UnityEngine.TextCore.Text
namespace UnityEngine::TextCore::Text {
  // Size: 0x58
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.TextCore.Text.FontFeatureTable
  // [TokenAttribute] Offset: FFFFFFFF
  class FontFeatureTable : public ::Il2CppObject {
    public:
    // Nested type: ::UnityEngine::TextCore::Text::FontFeatureTable::$$c
    class $$c;
    public:
    // System.Collections.Generic.List`1<UnityEngine.TextCore.LowLevel.MultipleSubstitutionRecord> m_MultipleSubstitutionRecords
    // Size: 0x8
    // Offset: 0x10
    ::System::Collections::Generic::List_1<::UnityEngine::TextCore::LowLevel::MultipleSubstitutionRecord>* m_MultipleSubstitutionRecords;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::UnityEngine::TextCore::LowLevel::MultipleSubstitutionRecord>*) == 0x8);
    // System.Collections.Generic.List`1<UnityEngine.TextCore.LowLevel.LigatureSubstitutionRecord> m_LigatureSubstitutionRecords
    // Size: 0x8
    // Offset: 0x18
    ::System::Collections::Generic::List_1<::UnityEngine::TextCore::LowLevel::LigatureSubstitutionRecord>* m_LigatureSubstitutionRecords;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::UnityEngine::TextCore::LowLevel::LigatureSubstitutionRecord>*) == 0x8);
    // System.Collections.Generic.List`1<UnityEngine.TextCore.LowLevel.GlyphPairAdjustmentRecord> m_GlyphPairAdjustmentRecords
    // Size: 0x8
    // Offset: 0x20
    ::System::Collections::Generic::List_1<::UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord>* m_GlyphPairAdjustmentRecords;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord>*) == 0x8);
    // System.Collections.Generic.List`1<UnityEngine.TextCore.LowLevel.MarkToBaseAdjustmentRecord> m_MarkToBaseAdjustmentRecords
    // Size: 0x8
    // Offset: 0x28
    ::System::Collections::Generic::List_1<::UnityEngine::TextCore::LowLevel::MarkToBaseAdjustmentRecord>* m_MarkToBaseAdjustmentRecords;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::UnityEngine::TextCore::LowLevel::MarkToBaseAdjustmentRecord>*) == 0x8);
    // System.Collections.Generic.List`1<UnityEngine.TextCore.LowLevel.MarkToMarkAdjustmentRecord> m_MarkToMarkAdjustmentRecords
    // Size: 0x8
    // Offset: 0x30
    ::System::Collections::Generic::List_1<::UnityEngine::TextCore::LowLevel::MarkToMarkAdjustmentRecord>* m_MarkToMarkAdjustmentRecords;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::UnityEngine::TextCore::LowLevel::MarkToMarkAdjustmentRecord>*) == 0x8);
    // System.Collections.Generic.Dictionary`2<System.UInt32,System.Collections.Generic.List`1<UnityEngine.TextCore.LowLevel.LigatureSubstitutionRecord>> m_LigatureSubstitutionRecordLookup
    // Size: 0x8
    // Offset: 0x38
    ::System::Collections::Generic::Dictionary_2<uint, ::System::Collections::Generic::List_1<::UnityEngine::TextCore::LowLevel::LigatureSubstitutionRecord>*>* m_LigatureSubstitutionRecordLookup;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::Dictionary_2<uint, ::System::Collections::Generic::List_1<::UnityEngine::TextCore::LowLevel::LigatureSubstitutionRecord>*>*) == 0x8);
    // System.Collections.Generic.Dictionary`2<System.UInt32,UnityEngine.TextCore.LowLevel.GlyphPairAdjustmentRecord> m_GlyphPairAdjustmentRecordLookup
    // Size: 0x8
    // Offset: 0x40
    ::System::Collections::Generic::Dictionary_2<uint, ::UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord>* m_GlyphPairAdjustmentRecordLookup;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::Dictionary_2<uint, ::UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord>*) == 0x8);
    // System.Collections.Generic.Dictionary`2<System.UInt32,UnityEngine.TextCore.LowLevel.MarkToBaseAdjustmentRecord> m_MarkToBaseAdjustmentRecordLookup
    // Size: 0x8
    // Offset: 0x48
    ::System::Collections::Generic::Dictionary_2<uint, ::UnityEngine::TextCore::LowLevel::MarkToBaseAdjustmentRecord>* m_MarkToBaseAdjustmentRecordLookup;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::Dictionary_2<uint, ::UnityEngine::TextCore::LowLevel::MarkToBaseAdjustmentRecord>*) == 0x8);
    // System.Collections.Generic.Dictionary`2<System.UInt32,UnityEngine.TextCore.LowLevel.MarkToMarkAdjustmentRecord> m_MarkToMarkAdjustmentRecordLookup
    // Size: 0x8
    // Offset: 0x50
    ::System::Collections::Generic::Dictionary_2<uint, ::UnityEngine::TextCore::LowLevel::MarkToMarkAdjustmentRecord>* m_MarkToMarkAdjustmentRecordLookup;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::Dictionary_2<uint, ::UnityEngine::TextCore::LowLevel::MarkToMarkAdjustmentRecord>*) == 0x8);
    public:
    // Get instance field reference: System.Collections.Generic.List`1<UnityEngine.TextCore.LowLevel.MultipleSubstitutionRecord> m_MultipleSubstitutionRecords
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::TextCore::LowLevel::MultipleSubstitutionRecord>*& dyn_m_MultipleSubstitutionRecords();
    // Get instance field reference: System.Collections.Generic.List`1<UnityEngine.TextCore.LowLevel.LigatureSubstitutionRecord> m_LigatureSubstitutionRecords
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::TextCore::LowLevel::LigatureSubstitutionRecord>*& dyn_m_LigatureSubstitutionRecords();
    // Get instance field reference: System.Collections.Generic.List`1<UnityEngine.TextCore.LowLevel.GlyphPairAdjustmentRecord> m_GlyphPairAdjustmentRecords
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord>*& dyn_m_GlyphPairAdjustmentRecords();
    // Get instance field reference: System.Collections.Generic.List`1<UnityEngine.TextCore.LowLevel.MarkToBaseAdjustmentRecord> m_MarkToBaseAdjustmentRecords
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::TextCore::LowLevel::MarkToBaseAdjustmentRecord>*& dyn_m_MarkToBaseAdjustmentRecords();
    // Get instance field reference: System.Collections.Generic.List`1<UnityEngine.TextCore.LowLevel.MarkToMarkAdjustmentRecord> m_MarkToMarkAdjustmentRecords
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::TextCore::LowLevel::MarkToMarkAdjustmentRecord>*& dyn_m_MarkToMarkAdjustmentRecords();
    // Get instance field reference: System.Collections.Generic.Dictionary`2<System.UInt32,System.Collections.Generic.List`1<UnityEngine.TextCore.LowLevel.LigatureSubstitutionRecord>> m_LigatureSubstitutionRecordLookup
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<uint, ::System::Collections::Generic::List_1<::UnityEngine::TextCore::LowLevel::LigatureSubstitutionRecord>*>*& dyn_m_LigatureSubstitutionRecordLookup();
    // Get instance field reference: System.Collections.Generic.Dictionary`2<System.UInt32,UnityEngine.TextCore.LowLevel.GlyphPairAdjustmentRecord> m_GlyphPairAdjustmentRecordLookup
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<uint, ::UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord>*& dyn_m_GlyphPairAdjustmentRecordLookup();
    // Get instance field reference: System.Collections.Generic.Dictionary`2<System.UInt32,UnityEngine.TextCore.LowLevel.MarkToBaseAdjustmentRecord> m_MarkToBaseAdjustmentRecordLookup
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<uint, ::UnityEngine::TextCore::LowLevel::MarkToBaseAdjustmentRecord>*& dyn_m_MarkToBaseAdjustmentRecordLookup();
    // Get instance field reference: System.Collections.Generic.Dictionary`2<System.UInt32,UnityEngine.TextCore.LowLevel.MarkToMarkAdjustmentRecord> m_MarkToMarkAdjustmentRecordLookup
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<uint, ::UnityEngine::TextCore::LowLevel::MarkToMarkAdjustmentRecord>*& dyn_m_MarkToMarkAdjustmentRecordLookup();
    // System.Void .ctor()
    // Offset: 0x554BFD8
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static FontFeatureTable* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::Text::FontFeatureTable::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<FontFeatureTable*, creationType>()));
    }
    // public System.Void SortGlyphPairAdjustmentRecords()
    // Offset: 0x5546794
    void SortGlyphPairAdjustmentRecords();
    // public System.Void SortMarkToBaseAdjustmentRecords()
    // Offset: 0x55469AC
    void SortMarkToBaseAdjustmentRecords();
    // public System.Void SortMarkToMarkAdjustmentRecords()
    // Offset: 0x5546BC4
    void SortMarkToMarkAdjustmentRecords();
  }; // UnityEngine.TextCore.Text.FontFeatureTable
  #pragma pack(pop)
  static check_size<sizeof(FontFeatureTable), 80 + sizeof(::System::Collections::Generic::Dictionary_2<uint, ::UnityEngine::TextCore::LowLevel::MarkToMarkAdjustmentRecord>*)> __UnityEngine_TextCore_Text_FontFeatureTableSizeCheck;
  static_assert(sizeof(FontFeatureTable) == 0x58);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::FontFeatureTable::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::FontFeatureTable::SortGlyphPairAdjustmentRecords
// Il2CppName: SortGlyphPairAdjustmentRecords
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TextCore::Text::FontFeatureTable::*)()>(&UnityEngine::TextCore::Text::FontFeatureTable::SortGlyphPairAdjustmentRecords)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::FontFeatureTable*), "SortGlyphPairAdjustmentRecords", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::FontFeatureTable::SortMarkToBaseAdjustmentRecords
// Il2CppName: SortMarkToBaseAdjustmentRecords
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TextCore::Text::FontFeatureTable::*)()>(&UnityEngine::TextCore::Text::FontFeatureTable::SortMarkToBaseAdjustmentRecords)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::FontFeatureTable*), "SortMarkToBaseAdjustmentRecords", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::FontFeatureTable::SortMarkToMarkAdjustmentRecords
// Il2CppName: SortMarkToMarkAdjustmentRecords
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TextCore::Text::FontFeatureTable::*)()>(&UnityEngine::TextCore::Text::FontFeatureTable::SortMarkToMarkAdjustmentRecords)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::FontFeatureTable*), "SortMarkToMarkAdjustmentRecords", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
