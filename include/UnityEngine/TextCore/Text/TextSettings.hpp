// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.ScriptableObject
#include "UnityEngine/ScriptableObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Font
  class Font;
}
// Forward declaring namespace: UnityEngine::TextCore::Text
namespace UnityEngine::TextCore::Text {
  // Forward declaring type: FontAsset
  class FontAsset;
  // Forward declaring type: SpriteAsset
  class SpriteAsset;
  // Forward declaring type: TextStyleSheet
  class TextStyleSheet;
  // Forward declaring type: UnicodeLineBreakingRules
  class UnicodeLineBreakingRules;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
  // Forward declaring type: Dictionary`2<TKey, TValue>
  template<typename TKey, typename TValue>
  class Dictionary_2;
}
// Completed forward declares
// Type namespace: UnityEngine.TextCore.Text
namespace UnityEngine::TextCore::Text {
  // Forward declaring type: TextSettings
  class TextSettings;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::TextCore::Text::TextSettings);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::TextCore::Text::TextSettings*, "UnityEngine.TextCore.Text", "TextSettings");
// Type namespace: UnityEngine.TextCore.Text
namespace UnityEngine::TextCore::Text {
  // Size: 0xA0
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.TextCore.Text.TextSettings
  // [TokenAttribute] Offset: FFFFFFFF
  // [ExcludeFromObjectFactoryAttribute] Offset: FFFFFFFF
  // [ExcludeFromPresetAttribute] Offset: FFFFFFFF
  class TextSettings : public ::UnityEngine::ScriptableObject {
    public:
    // Nested type: ::UnityEngine::TextCore::Text::TextSettings::FontReferenceMap
    struct FontReferenceMap;
    // Size: 0x10
    #pragma pack(push, 1)
    // WARNING Layout: Sequential may not be correctly taken into account!
    // Autogenerated type: UnityEngine.TextCore.Text.TextSettings/FontReferenceMap
    // [TokenAttribute] Offset: FFFFFFFF
    struct FontReferenceMap/*, public ::System::ValueType*/ {
      public:
      public:
      // public UnityEngine.Font font
      // Size: 0x8
      // Offset: 0x0
      ::UnityEngine::Font* font;
      // Field size check
      static_assert(sizeof(::UnityEngine::Font*) == 0x8);
      // public UnityEngine.TextCore.Text.FontAsset fontAsset
      // Size: 0x8
      // Offset: 0x8
      ::UnityEngine::TextCore::Text::FontAsset* fontAsset;
      // Field size check
      static_assert(sizeof(::UnityEngine::TextCore::Text::FontAsset*) == 0x8);
      public:
      // Creating value type constructor for type: FontReferenceMap
      constexpr FontReferenceMap(::UnityEngine::Font* font_ = {}, ::UnityEngine::TextCore::Text::FontAsset* fontAsset_ = {}) noexcept : font{font_}, fontAsset{fontAsset_} {}
      // Creating interface conversion operator: operator ::System::ValueType
      operator ::System::ValueType() noexcept {
        return *reinterpret_cast<::System::ValueType*>(this);
      }
      // Get instance field reference: public UnityEngine.Font font
      [[deprecated("Use field access instead!")]] ::UnityEngine::Font*& dyn_font();
      // Get instance field reference: public UnityEngine.TextCore.Text.FontAsset fontAsset
      [[deprecated("Use field access instead!")]] ::UnityEngine::TextCore::Text::FontAsset*& dyn_fontAsset();
      // public System.Void .ctor(UnityEngine.Font font, UnityEngine.TextCore.Text.FontAsset fontAsset)
      // Offset: 0x55737D4
      // ABORTED: conflicts with another method.  FontReferenceMap(::UnityEngine::Font* font, ::UnityEngine::TextCore::Text::FontAsset* fontAsset);
    }; // UnityEngine.TextCore.Text.TextSettings/FontReferenceMap
    #pragma pack(pop)
    static check_size<sizeof(TextSettings::FontReferenceMap), 8 + sizeof(::UnityEngine::TextCore::Text::FontAsset*)> __UnityEngine_TextCore_Text_TextSettings_FontReferenceMapSizeCheck;
    static_assert(sizeof(TextSettings::FontReferenceMap) == 0x10);
    public:
    // protected System.String m_Version
    // Size: 0x8
    // Offset: 0x18
    ::StringW m_Version;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // protected UnityEngine.TextCore.Text.FontAsset m_DefaultFontAsset
    // Size: 0x8
    // Offset: 0x20
    ::UnityEngine::TextCore::Text::FontAsset* m_DefaultFontAsset;
    // Field size check
    static_assert(sizeof(::UnityEngine::TextCore::Text::FontAsset*) == 0x8);
    // protected System.String m_DefaultFontAssetPath
    // Size: 0x8
    // Offset: 0x28
    ::StringW m_DefaultFontAssetPath;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // protected System.Collections.Generic.List`1<UnityEngine.TextCore.Text.FontAsset> m_FallbackFontAssets
    // Size: 0x8
    // Offset: 0x30
    ::System::Collections::Generic::List_1<::UnityEngine::TextCore::Text::FontAsset*>* m_FallbackFontAssets;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::UnityEngine::TextCore::Text::FontAsset*>*) == 0x8);
    // protected System.Boolean m_MatchMaterialPreset
    // Size: 0x1
    // Offset: 0x38
    bool m_MatchMaterialPreset;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: m_MatchMaterialPreset and: m_MissingCharacterUnicode
    char __padding4[0x3] = {};
    // protected System.Int32 m_MissingCharacterUnicode
    // Size: 0x4
    // Offset: 0x3C
    int m_MissingCharacterUnicode;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // protected System.Boolean m_ClearDynamicDataOnBuild
    // Size: 0x1
    // Offset: 0x40
    bool m_ClearDynamicDataOnBuild;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: m_ClearDynamicDataOnBuild and: m_DefaultSpriteAsset
    char __padding6[0x7] = {};
    // protected UnityEngine.TextCore.Text.SpriteAsset m_DefaultSpriteAsset
    // Size: 0x8
    // Offset: 0x48
    ::UnityEngine::TextCore::Text::SpriteAsset* m_DefaultSpriteAsset;
    // Field size check
    static_assert(sizeof(::UnityEngine::TextCore::Text::SpriteAsset*) == 0x8);
    // protected System.String m_DefaultSpriteAssetPath
    // Size: 0x8
    // Offset: 0x50
    ::StringW m_DefaultSpriteAssetPath;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // protected System.Collections.Generic.List`1<UnityEngine.TextCore.Text.SpriteAsset> m_FallbackSpriteAssets
    // Size: 0x8
    // Offset: 0x58
    ::System::Collections::Generic::List_1<::UnityEngine::TextCore::Text::SpriteAsset*>* m_FallbackSpriteAssets;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::UnityEngine::TextCore::Text::SpriteAsset*>*) == 0x8);
    // protected System.UInt32 m_MissingSpriteCharacterUnicode
    // Size: 0x4
    // Offset: 0x60
    uint m_MissingSpriteCharacterUnicode;
    // Field size check
    static_assert(sizeof(uint) == 0x4);
    // Padding between fields: m_MissingSpriteCharacterUnicode and: m_DefaultStyleSheet
    char __padding10[0x4] = {};
    // protected UnityEngine.TextCore.Text.TextStyleSheet m_DefaultStyleSheet
    // Size: 0x8
    // Offset: 0x68
    ::UnityEngine::TextCore::Text::TextStyleSheet* m_DefaultStyleSheet;
    // Field size check
    static_assert(sizeof(::UnityEngine::TextCore::Text::TextStyleSheet*) == 0x8);
    // protected System.String m_StyleSheetsResourcePath
    // Size: 0x8
    // Offset: 0x70
    ::StringW m_StyleSheetsResourcePath;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // protected System.String m_DefaultColorGradientPresetsPath
    // Size: 0x8
    // Offset: 0x78
    ::StringW m_DefaultColorGradientPresetsPath;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // protected UnityEngine.TextCore.Text.UnicodeLineBreakingRules m_UnicodeLineBreakingRules
    // Size: 0x8
    // Offset: 0x80
    ::UnityEngine::TextCore::Text::UnicodeLineBreakingRules* m_UnicodeLineBreakingRules;
    // Field size check
    static_assert(sizeof(::UnityEngine::TextCore::Text::UnicodeLineBreakingRules*) == 0x8);
    // private System.Boolean m_UseModernHangulLineBreakingRules
    // Size: 0x1
    // Offset: 0x88
    bool m_UseModernHangulLineBreakingRules;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // protected System.Boolean m_DisplayWarnings
    // Size: 0x1
    // Offset: 0x89
    bool m_DisplayWarnings;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: m_DisplayWarnings and: m_FontLookup
    char __padding16[0x6] = {};
    // System.Collections.Generic.Dictionary`2<System.Int32,UnityEngine.TextCore.Text.FontAsset> m_FontLookup
    // Size: 0x8
    // Offset: 0x90
    ::System::Collections::Generic::Dictionary_2<int, ::UnityEngine::TextCore::Text::FontAsset*>* m_FontLookup;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::Dictionary_2<int, ::UnityEngine::TextCore::Text::FontAsset*>*) == 0x8);
    // private System.Collections.Generic.List`1<UnityEngine.TextCore.Text.TextSettings/FontReferenceMap> m_FontReferences
    // Size: 0x8
    // Offset: 0x98
    ::System::Collections::Generic::List_1<::UnityEngine::TextCore::Text::TextSettings::FontReferenceMap>* m_FontReferences;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::UnityEngine::TextCore::Text::TextSettings::FontReferenceMap>*) == 0x8);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: protected System.String m_Version
    [[deprecated("Use field access instead!")]] ::StringW& dyn_m_Version();
    // Get instance field reference: protected UnityEngine.TextCore.Text.FontAsset m_DefaultFontAsset
    [[deprecated("Use field access instead!")]] ::UnityEngine::TextCore::Text::FontAsset*& dyn_m_DefaultFontAsset();
    // Get instance field reference: protected System.String m_DefaultFontAssetPath
    [[deprecated("Use field access instead!")]] ::StringW& dyn_m_DefaultFontAssetPath();
    // Get instance field reference: protected System.Collections.Generic.List`1<UnityEngine.TextCore.Text.FontAsset> m_FallbackFontAssets
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::TextCore::Text::FontAsset*>*& dyn_m_FallbackFontAssets();
    // Get instance field reference: protected System.Boolean m_MatchMaterialPreset
    [[deprecated("Use field access instead!")]] bool& dyn_m_MatchMaterialPreset();
    // Get instance field reference: protected System.Int32 m_MissingCharacterUnicode
    [[deprecated("Use field access instead!")]] int& dyn_m_MissingCharacterUnicode();
    // Get instance field reference: protected System.Boolean m_ClearDynamicDataOnBuild
    [[deprecated("Use field access instead!")]] bool& dyn_m_ClearDynamicDataOnBuild();
    // Get instance field reference: protected UnityEngine.TextCore.Text.SpriteAsset m_DefaultSpriteAsset
    [[deprecated("Use field access instead!")]] ::UnityEngine::TextCore::Text::SpriteAsset*& dyn_m_DefaultSpriteAsset();
    // Get instance field reference: protected System.String m_DefaultSpriteAssetPath
    [[deprecated("Use field access instead!")]] ::StringW& dyn_m_DefaultSpriteAssetPath();
    // Get instance field reference: protected System.Collections.Generic.List`1<UnityEngine.TextCore.Text.SpriteAsset> m_FallbackSpriteAssets
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::TextCore::Text::SpriteAsset*>*& dyn_m_FallbackSpriteAssets();
    // Get instance field reference: protected System.UInt32 m_MissingSpriteCharacterUnicode
    [[deprecated("Use field access instead!")]] uint& dyn_m_MissingSpriteCharacterUnicode();
    // Get instance field reference: protected UnityEngine.TextCore.Text.TextStyleSheet m_DefaultStyleSheet
    [[deprecated("Use field access instead!")]] ::UnityEngine::TextCore::Text::TextStyleSheet*& dyn_m_DefaultStyleSheet();
    // Get instance field reference: protected System.String m_StyleSheetsResourcePath
    [[deprecated("Use field access instead!")]] ::StringW& dyn_m_StyleSheetsResourcePath();
    // Get instance field reference: protected System.String m_DefaultColorGradientPresetsPath
    [[deprecated("Use field access instead!")]] ::StringW& dyn_m_DefaultColorGradientPresetsPath();
    // Get instance field reference: protected UnityEngine.TextCore.Text.UnicodeLineBreakingRules m_UnicodeLineBreakingRules
    [[deprecated("Use field access instead!")]] ::UnityEngine::TextCore::Text::UnicodeLineBreakingRules*& dyn_m_UnicodeLineBreakingRules();
    // Get instance field reference: private System.Boolean m_UseModernHangulLineBreakingRules
    [[deprecated("Use field access instead!")]] bool& dyn_m_UseModernHangulLineBreakingRules();
    // Get instance field reference: protected System.Boolean m_DisplayWarnings
    [[deprecated("Use field access instead!")]] bool& dyn_m_DisplayWarnings();
    // Get instance field reference: System.Collections.Generic.Dictionary`2<System.Int32,UnityEngine.TextCore.Text.FontAsset> m_FontLookup
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<int, ::UnityEngine::TextCore::Text::FontAsset*>*& dyn_m_FontLookup();
    // Get instance field reference: private System.Collections.Generic.List`1<UnityEngine.TextCore.Text.TextSettings/FontReferenceMap> m_FontReferences
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::TextCore::Text::TextSettings::FontReferenceMap>*& dyn_m_FontReferences();
    // public System.String get_version()
    // Offset: 0x5572D8C
    ::StringW get_version();
    // System.Void set_version(System.String value)
    // Offset: 0x5572D94
    void set_version(::StringW value);
    // public UnityEngine.TextCore.Text.FontAsset get_defaultFontAsset()
    // Offset: 0x5572D9C
    ::UnityEngine::TextCore::Text::FontAsset* get_defaultFontAsset();
    // public System.Void set_defaultFontAsset(UnityEngine.TextCore.Text.FontAsset value)
    // Offset: 0x5572DA4
    void set_defaultFontAsset(::UnityEngine::TextCore::Text::FontAsset* value);
    // public System.String get_defaultFontAssetPath()
    // Offset: 0x5572DAC
    ::StringW get_defaultFontAssetPath();
    // public System.Void set_defaultFontAssetPath(System.String value)
    // Offset: 0x5572DB4
    void set_defaultFontAssetPath(::StringW value);
    // public System.Collections.Generic.List`1<UnityEngine.TextCore.Text.FontAsset> get_fallbackFontAssets()
    // Offset: 0x5572DBC
    ::System::Collections::Generic::List_1<::UnityEngine::TextCore::Text::FontAsset*>* get_fallbackFontAssets();
    // public System.Void set_fallbackFontAssets(System.Collections.Generic.List`1<UnityEngine.TextCore.Text.FontAsset> value)
    // Offset: 0x5572DC4
    void set_fallbackFontAssets(::System::Collections::Generic::List_1<::UnityEngine::TextCore::Text::FontAsset*>* value);
    // public System.Boolean get_matchMaterialPreset()
    // Offset: 0x5572DCC
    bool get_matchMaterialPreset();
    // public System.Void set_matchMaterialPreset(System.Boolean value)
    // Offset: 0x5572DD4
    void set_matchMaterialPreset(bool value);
    // public System.Int32 get_missingCharacterUnicode()
    // Offset: 0x5572DE0
    int get_missingCharacterUnicode();
    // public System.Void set_missingCharacterUnicode(System.Int32 value)
    // Offset: 0x5572DE8
    void set_missingCharacterUnicode(int value);
    // public System.Boolean get_clearDynamicDataOnBuild()
    // Offset: 0x5572DF0
    bool get_clearDynamicDataOnBuild();
    // public System.Void set_clearDynamicDataOnBuild(System.Boolean value)
    // Offset: 0x5572DF8
    void set_clearDynamicDataOnBuild(bool value);
    // public UnityEngine.TextCore.Text.SpriteAsset get_defaultSpriteAsset()
    // Offset: 0x5572E04
    ::UnityEngine::TextCore::Text::SpriteAsset* get_defaultSpriteAsset();
    // public System.Void set_defaultSpriteAsset(UnityEngine.TextCore.Text.SpriteAsset value)
    // Offset: 0x5572E0C
    void set_defaultSpriteAsset(::UnityEngine::TextCore::Text::SpriteAsset* value);
    // public System.String get_defaultSpriteAssetPath()
    // Offset: 0x5572E14
    ::StringW get_defaultSpriteAssetPath();
    // public System.Void set_defaultSpriteAssetPath(System.String value)
    // Offset: 0x5572E1C
    void set_defaultSpriteAssetPath(::StringW value);
    // public System.Collections.Generic.List`1<UnityEngine.TextCore.Text.SpriteAsset> get_fallbackSpriteAssets()
    // Offset: 0x5572E24
    ::System::Collections::Generic::List_1<::UnityEngine::TextCore::Text::SpriteAsset*>* get_fallbackSpriteAssets();
    // public System.Void set_fallbackSpriteAssets(System.Collections.Generic.List`1<UnityEngine.TextCore.Text.SpriteAsset> value)
    // Offset: 0x5572E2C
    void set_fallbackSpriteAssets(::System::Collections::Generic::List_1<::UnityEngine::TextCore::Text::SpriteAsset*>* value);
    // public System.UInt32 get_missingSpriteCharacterUnicode()
    // Offset: 0x5572E34
    uint get_missingSpriteCharacterUnicode();
    // public System.Void set_missingSpriteCharacterUnicode(System.UInt32 value)
    // Offset: 0x5572E3C
    void set_missingSpriteCharacterUnicode(uint value);
    // public UnityEngine.TextCore.Text.TextStyleSheet get_defaultStyleSheet()
    // Offset: 0x5572E44
    ::UnityEngine::TextCore::Text::TextStyleSheet* get_defaultStyleSheet();
    // public System.Void set_defaultStyleSheet(UnityEngine.TextCore.Text.TextStyleSheet value)
    // Offset: 0x5572E4C
    void set_defaultStyleSheet(::UnityEngine::TextCore::Text::TextStyleSheet* value);
    // public System.String get_styleSheetsResourcePath()
    // Offset: 0x5572E54
    ::StringW get_styleSheetsResourcePath();
    // public System.Void set_styleSheetsResourcePath(System.String value)
    // Offset: 0x5572E5C
    void set_styleSheetsResourcePath(::StringW value);
    // public System.String get_defaultColorGradientPresetsPath()
    // Offset: 0x5572E64
    ::StringW get_defaultColorGradientPresetsPath();
    // public System.Void set_defaultColorGradientPresetsPath(System.String value)
    // Offset: 0x5572E6C
    void set_defaultColorGradientPresetsPath(::StringW value);
    // public UnityEngine.TextCore.Text.UnicodeLineBreakingRules get_lineBreakingRules()
    // Offset: 0x5572E74
    ::UnityEngine::TextCore::Text::UnicodeLineBreakingRules* get_lineBreakingRules();
    // public System.Void set_lineBreakingRules(UnityEngine.TextCore.Text.UnicodeLineBreakingRules value)
    // Offset: 0x557324C
    void set_lineBreakingRules(::UnityEngine::TextCore::Text::UnicodeLineBreakingRules* value);
    // public System.Boolean get_useModernHangulLineBreakingRules()
    // Offset: 0x5573254
    bool get_useModernHangulLineBreakingRules();
    // public System.Void set_useModernHangulLineBreakingRules(System.Boolean value)
    // Offset: 0x557325C
    void set_useModernHangulLineBreakingRules(bool value);
    // public System.Boolean get_displayWarnings()
    // Offset: 0x5573268
    bool get_displayWarnings();
    // public System.Void set_displayWarnings(System.Boolean value)
    // Offset: 0x5573270
    void set_displayWarnings(bool value);
    // protected System.Void InitializeFontReferenceLookup()
    // Offset: 0x557327C
    void InitializeFontReferenceLookup();
    // protected UnityEngine.TextCore.Text.FontAsset GetCachedFontAssetInternal(UnityEngine.Font font)
    // Offset: 0x5573468
    ::UnityEngine::TextCore::Text::FontAsset* GetCachedFontAssetInternal(::UnityEngine::Font* font);
    // public System.Void .ctor()
    // Offset: 0x5573804
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static TextSettings* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::Text::TextSettings::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<TextSettings*, creationType>()));
    }
  }; // UnityEngine.TextCore.Text.TextSettings
  #pragma pack(pop)
  static check_size<sizeof(TextSettings), 152 + sizeof(::System::Collections::Generic::List_1<::UnityEngine::TextCore::Text::TextSettings::FontReferenceMap>*)> __UnityEngine_TextCore_Text_TextSettingsSizeCheck;
  static_assert(sizeof(TextSettings) == 0xA0);
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::TextCore::Text::TextSettings::FontReferenceMap, "UnityEngine.TextCore.Text", "TextSettings/FontReferenceMap");
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::TextSettings::get_version
// Il2CppName: get_version
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (UnityEngine::TextCore::Text::TextSettings::*)()>(&UnityEngine::TextCore::Text::TextSettings::get_version)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::TextSettings*), "get_version", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::TextSettings::set_version
// Il2CppName: set_version
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TextCore::Text::TextSettings::*)(::StringW)>(&UnityEngine::TextCore::Text::TextSettings::set_version)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::TextSettings*), "set_version", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::TextSettings::get_defaultFontAsset
// Il2CppName: get_defaultFontAsset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::TextCore::Text::FontAsset* (UnityEngine::TextCore::Text::TextSettings::*)()>(&UnityEngine::TextCore::Text::TextSettings::get_defaultFontAsset)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::TextSettings*), "get_defaultFontAsset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::TextSettings::set_defaultFontAsset
// Il2CppName: set_defaultFontAsset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TextCore::Text::TextSettings::*)(::UnityEngine::TextCore::Text::FontAsset*)>(&UnityEngine::TextCore::Text::TextSettings::set_defaultFontAsset)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.TextCore.Text", "FontAsset")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::TextSettings*), "set_defaultFontAsset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::TextSettings::get_defaultFontAssetPath
// Il2CppName: get_defaultFontAssetPath
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (UnityEngine::TextCore::Text::TextSettings::*)()>(&UnityEngine::TextCore::Text::TextSettings::get_defaultFontAssetPath)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::TextSettings*), "get_defaultFontAssetPath", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::TextSettings::set_defaultFontAssetPath
// Il2CppName: set_defaultFontAssetPath
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TextCore::Text::TextSettings::*)(::StringW)>(&UnityEngine::TextCore::Text::TextSettings::set_defaultFontAssetPath)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::TextSettings*), "set_defaultFontAssetPath", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::TextSettings::get_fallbackFontAssets
// Il2CppName: get_fallbackFontAssets
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::List_1<::UnityEngine::TextCore::Text::FontAsset*>* (UnityEngine::TextCore::Text::TextSettings::*)()>(&UnityEngine::TextCore::Text::TextSettings::get_fallbackFontAssets)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::TextSettings*), "get_fallbackFontAssets", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::TextSettings::set_fallbackFontAssets
// Il2CppName: set_fallbackFontAssets
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TextCore::Text::TextSettings::*)(::System::Collections::Generic::List_1<::UnityEngine::TextCore::Text::FontAsset*>*)>(&UnityEngine::TextCore::Text::TextSettings::set_fallbackFontAssets)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.TextCore.Text", "FontAsset")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::TextSettings*), "set_fallbackFontAssets", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::TextSettings::get_matchMaterialPreset
// Il2CppName: get_matchMaterialPreset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::TextCore::Text::TextSettings::*)()>(&UnityEngine::TextCore::Text::TextSettings::get_matchMaterialPreset)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::TextSettings*), "get_matchMaterialPreset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::TextSettings::set_matchMaterialPreset
// Il2CppName: set_matchMaterialPreset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TextCore::Text::TextSettings::*)(bool)>(&UnityEngine::TextCore::Text::TextSettings::set_matchMaterialPreset)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::TextSettings*), "set_matchMaterialPreset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::TextSettings::get_missingCharacterUnicode
// Il2CppName: get_missingCharacterUnicode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::TextCore::Text::TextSettings::*)()>(&UnityEngine::TextCore::Text::TextSettings::get_missingCharacterUnicode)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::TextSettings*), "get_missingCharacterUnicode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::TextSettings::set_missingCharacterUnicode
// Il2CppName: set_missingCharacterUnicode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TextCore::Text::TextSettings::*)(int)>(&UnityEngine::TextCore::Text::TextSettings::set_missingCharacterUnicode)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::TextSettings*), "set_missingCharacterUnicode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::TextSettings::get_clearDynamicDataOnBuild
// Il2CppName: get_clearDynamicDataOnBuild
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::TextCore::Text::TextSettings::*)()>(&UnityEngine::TextCore::Text::TextSettings::get_clearDynamicDataOnBuild)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::TextSettings*), "get_clearDynamicDataOnBuild", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::TextSettings::set_clearDynamicDataOnBuild
// Il2CppName: set_clearDynamicDataOnBuild
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TextCore::Text::TextSettings::*)(bool)>(&UnityEngine::TextCore::Text::TextSettings::set_clearDynamicDataOnBuild)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::TextSettings*), "set_clearDynamicDataOnBuild", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::TextSettings::get_defaultSpriteAsset
// Il2CppName: get_defaultSpriteAsset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::TextCore::Text::SpriteAsset* (UnityEngine::TextCore::Text::TextSettings::*)()>(&UnityEngine::TextCore::Text::TextSettings::get_defaultSpriteAsset)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::TextSettings*), "get_defaultSpriteAsset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::TextSettings::set_defaultSpriteAsset
// Il2CppName: set_defaultSpriteAsset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TextCore::Text::TextSettings::*)(::UnityEngine::TextCore::Text::SpriteAsset*)>(&UnityEngine::TextCore::Text::TextSettings::set_defaultSpriteAsset)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.TextCore.Text", "SpriteAsset")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::TextSettings*), "set_defaultSpriteAsset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::TextSettings::get_defaultSpriteAssetPath
// Il2CppName: get_defaultSpriteAssetPath
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (UnityEngine::TextCore::Text::TextSettings::*)()>(&UnityEngine::TextCore::Text::TextSettings::get_defaultSpriteAssetPath)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::TextSettings*), "get_defaultSpriteAssetPath", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::TextSettings::set_defaultSpriteAssetPath
// Il2CppName: set_defaultSpriteAssetPath
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TextCore::Text::TextSettings::*)(::StringW)>(&UnityEngine::TextCore::Text::TextSettings::set_defaultSpriteAssetPath)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::TextSettings*), "set_defaultSpriteAssetPath", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::TextSettings::get_fallbackSpriteAssets
// Il2CppName: get_fallbackSpriteAssets
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::List_1<::UnityEngine::TextCore::Text::SpriteAsset*>* (UnityEngine::TextCore::Text::TextSettings::*)()>(&UnityEngine::TextCore::Text::TextSettings::get_fallbackSpriteAssets)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::TextSettings*), "get_fallbackSpriteAssets", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::TextSettings::set_fallbackSpriteAssets
// Il2CppName: set_fallbackSpriteAssets
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TextCore::Text::TextSettings::*)(::System::Collections::Generic::List_1<::UnityEngine::TextCore::Text::SpriteAsset*>*)>(&UnityEngine::TextCore::Text::TextSettings::set_fallbackSpriteAssets)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.TextCore.Text", "SpriteAsset")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::TextSettings*), "set_fallbackSpriteAssets", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::TextSettings::get_missingSpriteCharacterUnicode
// Il2CppName: get_missingSpriteCharacterUnicode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (UnityEngine::TextCore::Text::TextSettings::*)()>(&UnityEngine::TextCore::Text::TextSettings::get_missingSpriteCharacterUnicode)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::TextSettings*), "get_missingSpriteCharacterUnicode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::TextSettings::set_missingSpriteCharacterUnicode
// Il2CppName: set_missingSpriteCharacterUnicode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TextCore::Text::TextSettings::*)(uint)>(&UnityEngine::TextCore::Text::TextSettings::set_missingSpriteCharacterUnicode)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::TextSettings*), "set_missingSpriteCharacterUnicode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::TextSettings::get_defaultStyleSheet
// Il2CppName: get_defaultStyleSheet
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::TextCore::Text::TextStyleSheet* (UnityEngine::TextCore::Text::TextSettings::*)()>(&UnityEngine::TextCore::Text::TextSettings::get_defaultStyleSheet)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::TextSettings*), "get_defaultStyleSheet", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::TextSettings::set_defaultStyleSheet
// Il2CppName: set_defaultStyleSheet
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TextCore::Text::TextSettings::*)(::UnityEngine::TextCore::Text::TextStyleSheet*)>(&UnityEngine::TextCore::Text::TextSettings::set_defaultStyleSheet)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.TextCore.Text", "TextStyleSheet")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::TextSettings*), "set_defaultStyleSheet", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::TextSettings::get_styleSheetsResourcePath
// Il2CppName: get_styleSheetsResourcePath
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (UnityEngine::TextCore::Text::TextSettings::*)()>(&UnityEngine::TextCore::Text::TextSettings::get_styleSheetsResourcePath)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::TextSettings*), "get_styleSheetsResourcePath", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::TextSettings::set_styleSheetsResourcePath
// Il2CppName: set_styleSheetsResourcePath
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TextCore::Text::TextSettings::*)(::StringW)>(&UnityEngine::TextCore::Text::TextSettings::set_styleSheetsResourcePath)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::TextSettings*), "set_styleSheetsResourcePath", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::TextSettings::get_defaultColorGradientPresetsPath
// Il2CppName: get_defaultColorGradientPresetsPath
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (UnityEngine::TextCore::Text::TextSettings::*)()>(&UnityEngine::TextCore::Text::TextSettings::get_defaultColorGradientPresetsPath)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::TextSettings*), "get_defaultColorGradientPresetsPath", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::TextSettings::set_defaultColorGradientPresetsPath
// Il2CppName: set_defaultColorGradientPresetsPath
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TextCore::Text::TextSettings::*)(::StringW)>(&UnityEngine::TextCore::Text::TextSettings::set_defaultColorGradientPresetsPath)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::TextSettings*), "set_defaultColorGradientPresetsPath", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::TextSettings::get_lineBreakingRules
// Il2CppName: get_lineBreakingRules
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::TextCore::Text::UnicodeLineBreakingRules* (UnityEngine::TextCore::Text::TextSettings::*)()>(&UnityEngine::TextCore::Text::TextSettings::get_lineBreakingRules)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::TextSettings*), "get_lineBreakingRules", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::TextSettings::set_lineBreakingRules
// Il2CppName: set_lineBreakingRules
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TextCore::Text::TextSettings::*)(::UnityEngine::TextCore::Text::UnicodeLineBreakingRules*)>(&UnityEngine::TextCore::Text::TextSettings::set_lineBreakingRules)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.TextCore.Text", "UnicodeLineBreakingRules")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::TextSettings*), "set_lineBreakingRules", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::TextSettings::get_useModernHangulLineBreakingRules
// Il2CppName: get_useModernHangulLineBreakingRules
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::TextCore::Text::TextSettings::*)()>(&UnityEngine::TextCore::Text::TextSettings::get_useModernHangulLineBreakingRules)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::TextSettings*), "get_useModernHangulLineBreakingRules", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::TextSettings::set_useModernHangulLineBreakingRules
// Il2CppName: set_useModernHangulLineBreakingRules
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TextCore::Text::TextSettings::*)(bool)>(&UnityEngine::TextCore::Text::TextSettings::set_useModernHangulLineBreakingRules)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::TextSettings*), "set_useModernHangulLineBreakingRules", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::TextSettings::get_displayWarnings
// Il2CppName: get_displayWarnings
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::TextCore::Text::TextSettings::*)()>(&UnityEngine::TextCore::Text::TextSettings::get_displayWarnings)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::TextSettings*), "get_displayWarnings", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::TextSettings::set_displayWarnings
// Il2CppName: set_displayWarnings
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TextCore::Text::TextSettings::*)(bool)>(&UnityEngine::TextCore::Text::TextSettings::set_displayWarnings)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::TextSettings*), "set_displayWarnings", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::TextSettings::InitializeFontReferenceLookup
// Il2CppName: InitializeFontReferenceLookup
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TextCore::Text::TextSettings::*)()>(&UnityEngine::TextCore::Text::TextSettings::InitializeFontReferenceLookup)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::TextSettings*), "InitializeFontReferenceLookup", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::TextSettings::GetCachedFontAssetInternal
// Il2CppName: GetCachedFontAssetInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::TextCore::Text::FontAsset* (UnityEngine::TextCore::Text::TextSettings::*)(::UnityEngine::Font*)>(&UnityEngine::TextCore::Text::TextSettings::GetCachedFontAssetInternal)> {
  static const MethodInfo* get() {
    static auto* font = &::il2cpp_utils::GetClassFromName("UnityEngine", "Font")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::TextSettings*), "GetCachedFontAssetInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{font});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::TextSettings::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
