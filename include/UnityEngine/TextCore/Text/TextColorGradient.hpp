// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.ScriptableObject
#include "UnityEngine/ScriptableObject.hpp"
// Including type: UnityEngine.TextCore.Text.ColorGradientMode
#include "UnityEngine/TextCore/Text/ColorGradientMode.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Type namespace: UnityEngine.TextCore.Text
namespace UnityEngine::TextCore::Text {
  // Forward declaring type: TextColorGradient
  class TextColorGradient;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::TextCore::Text::TextColorGradient);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::TextCore::Text::TextColorGradient*, "UnityEngine.TextCore.Text", "TextColorGradient");
// Type namespace: UnityEngine.TextCore.Text
namespace UnityEngine::TextCore::Text {
  // Size: 0x5C
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.TextCore.Text.TextColorGradient
  // [TokenAttribute] Offset: FFFFFFFF
  // [ExcludeFromObjectFactoryAttribute] Offset: FFFFFFFF
  // [ExcludeFromPresetAttribute] Offset: FFFFFFFF
  class TextColorGradient : public ::UnityEngine::ScriptableObject {
    public:
    public:
    // public UnityEngine.TextCore.Text.ColorGradientMode colorMode
    // Size: 0x4
    // Offset: 0x18
    ::UnityEngine::TextCore::Text::ColorGradientMode colorMode;
    // Field size check
    static_assert(sizeof(::UnityEngine::TextCore::Text::ColorGradientMode) == 0x4);
    // public UnityEngine.Color topLeft
    // Size: 0x10
    // Offset: 0x1C
    ::UnityEngine::Color topLeft;
    // Field size check
    static_assert(sizeof(::UnityEngine::Color) == 0x10);
    // public UnityEngine.Color topRight
    // Size: 0x10
    // Offset: 0x2C
    ::UnityEngine::Color topRight;
    // Field size check
    static_assert(sizeof(::UnityEngine::Color) == 0x10);
    // public UnityEngine.Color bottomLeft
    // Size: 0x10
    // Offset: 0x3C
    ::UnityEngine::Color bottomLeft;
    // Field size check
    static_assert(sizeof(::UnityEngine::Color) == 0x10);
    // public UnityEngine.Color bottomRight
    // Size: 0x10
    // Offset: 0x4C
    ::UnityEngine::Color bottomRight;
    // Field size check
    static_assert(sizeof(::UnityEngine::Color) == 0x10);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // static field const value: static private UnityEngine.TextCore.Text.ColorGradientMode k_DefaultColorMode
    static constexpr const int k_DefaultColorMode = 3;
    // Get static field: static private UnityEngine.TextCore.Text.ColorGradientMode k_DefaultColorMode
    static ::UnityEngine::TextCore::Text::ColorGradientMode _get_k_DefaultColorMode();
    // Set static field: static private UnityEngine.TextCore.Text.ColorGradientMode k_DefaultColorMode
    static void _set_k_DefaultColorMode(::UnityEngine::TextCore::Text::ColorGradientMode value);
    // Get static field: static private readonly UnityEngine.Color k_DefaultColor
    static ::UnityEngine::Color _get_k_DefaultColor();
    // Set static field: static private readonly UnityEngine.Color k_DefaultColor
    static void _set_k_DefaultColor(::UnityEngine::Color value);
    // Get instance field reference: public UnityEngine.TextCore.Text.ColorGradientMode colorMode
    [[deprecated("Use field access instead!")]] ::UnityEngine::TextCore::Text::ColorGradientMode& dyn_colorMode();
    // Get instance field reference: public UnityEngine.Color topLeft
    [[deprecated("Use field access instead!")]] ::UnityEngine::Color& dyn_topLeft();
    // Get instance field reference: public UnityEngine.Color topRight
    [[deprecated("Use field access instead!")]] ::UnityEngine::Color& dyn_topRight();
    // Get instance field reference: public UnityEngine.Color bottomLeft
    [[deprecated("Use field access instead!")]] ::UnityEngine::Color& dyn_bottomLeft();
    // Get instance field reference: public UnityEngine.Color bottomRight
    [[deprecated("Use field access instead!")]] ::UnityEngine::Color& dyn_bottomRight();
    // public System.Void .ctor()
    // Offset: 0x5552284
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static TextColorGradient* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::Text::TextColorGradient::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<TextColorGradient*, creationType>()));
    }
    // public System.Void .ctor(UnityEngine.Color color)
    // Offset: 0x5552320
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static TextColorGradient* New_ctor(::UnityEngine::Color color) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::Text::TextColorGradient::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<TextColorGradient*, creationType>(color)));
    }
    // public System.Void .ctor(UnityEngine.Color color0, UnityEngine.Color color1, UnityEngine.Color color2, UnityEngine.Color color3)
    // Offset: 0x555238C
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static TextColorGradient* New_ctor(::UnityEngine::Color color0, ::UnityEngine::Color color1, ::UnityEngine::Color color2, ::UnityEngine::Color color3) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::Text::TextColorGradient::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<TextColorGradient*, creationType>(color0, color1, color2, color3)));
    }
    // static private System.Void .cctor()
    // Offset: 0x5552430
    static void _cctor();
  }; // UnityEngine.TextCore.Text.TextColorGradient
  #pragma pack(pop)
  static check_size<sizeof(TextColorGradient), 76 + sizeof(::UnityEngine::Color)> __UnityEngine_TextCore_Text_TextColorGradientSizeCheck;
  static_assert(sizeof(TextColorGradient) == 0x5C);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::TextColorGradient::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::TextColorGradient::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::TextColorGradient::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::TextColorGradient::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&UnityEngine::TextCore::Text::TextColorGradient::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::TextColorGradient*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
