// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.TextCore.Text.TextAsset
#include "UnityEngine/TextCore/Text/TextAsset.hpp"
// Including type: UnityEngine.TextCore.Text.AtlasPopulationMode
#include "UnityEngine/TextCore/Text/AtlasPopulationMode.hpp"
// Including type: UnityEngine.TextCore.FaceInfo
#include "UnityEngine/TextCore/FaceInfo.hpp"
// Including type: UnityEngine.TextCore.LowLevel.GlyphRenderMode
#include "UnityEngine/TextCore/LowLevel/GlyphRenderMode.hpp"
// Including type: UnityEngine.TextCore.GlyphRect
#include "UnityEngine/TextCore/GlyphRect.hpp"
// Including type: UnityEngine.TextCore.Text.FontAssetCreationEditorSettings
#include "UnityEngine/TextCore/Text/FontAssetCreationEditorSettings.hpp"
// Including type: UnityEngine.TextCore.Text.FontWeightPair
#include "UnityEngine/TextCore/Text/FontWeightPair.hpp"
// Including type: Unity.Profiling.ProfilerMarker
#include "Unity/Profiling/ProfilerMarker.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::TextCore::Text
namespace UnityEngine::TextCore::Text {
  // Forward declaring type: Character
  class Character;
  // Forward declaring type: FontFeatureTable
  class FontFeatureTable;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Font
  class Font;
  // Forward declaring type: Texture2D
  class Texture2D;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
  // Forward declaring type: Dictionary`2<TKey, TValue>
  template<typename TKey, typename TValue>
  class Dictionary_2;
  // Forward declaring type: HashSet`1<T>
  template<typename T>
  class HashSet_1;
}
// Forward declaring namespace: UnityEngine::TextCore
namespace UnityEngine::TextCore {
  // Forward declaring type: Glyph
  class Glyph;
}
// Forward declaring namespace: UnityEngine::TextCore::LowLevel
namespace UnityEngine::TextCore::LowLevel {
  // Forward declaring type: FontEngineError
  struct FontEngineError;
}
// Completed forward declares
// Type namespace: UnityEngine.TextCore.Text
namespace UnityEngine::TextCore::Text {
  // Forward declaring type: FontAsset
  class FontAsset;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::TextCore::Text::FontAsset);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::TextCore::Text::FontAsset*, "UnityEngine.TextCore.Text", "FontAsset");
// Type namespace: UnityEngine.TextCore.Text
namespace UnityEngine::TextCore::Text {
  // Size: 0x1F0
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.TextCore.Text.FontAsset
  // [TokenAttribute] Offset: FFFFFFFF
  // [ExcludeFromPresetAttribute] Offset: FFFFFFFF
  class FontAsset : public ::UnityEngine::TextCore::Text::TextAsset {
    public:
    // Writing base type padding for base size: 0x34 to desired offset: 0x38
    char ___base_padding[0x4] = {};
    // Nested type: ::UnityEngine::TextCore::Text::FontAsset::$$c
    class $$c;
    public:
    // System.String m_SourceFontFileGUID
    // Size: 0x8
    // Offset: 0x38
    ::StringW m_SourceFontFileGUID;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private UnityEngine.Font m_SourceFontFile
    // Size: 0x8
    // Offset: 0x40
    ::UnityEngine::Font* m_SourceFontFile;
    // Field size check
    static_assert(sizeof(::UnityEngine::Font*) == 0x8);
    // private System.String m_SourceFontFilePath
    // Size: 0x8
    // Offset: 0x48
    ::StringW m_SourceFontFilePath;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private UnityEngine.TextCore.Text.AtlasPopulationMode m_AtlasPopulationMode
    // Size: 0x4
    // Offset: 0x50
    ::UnityEngine::TextCore::Text::AtlasPopulationMode m_AtlasPopulationMode;
    // Field size check
    static_assert(sizeof(::UnityEngine::TextCore::Text::AtlasPopulationMode) == 0x4);
    // System.Boolean InternalDynamicOS
    // Size: 0x1
    // Offset: 0x54
    bool InternalDynamicOS;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: InternalDynamicOS and: m_FaceInfo
    char __padding4[0x3] = {};
    // UnityEngine.TextCore.FaceInfo m_FaceInfo
    // Size: 0x60
    // Offset: 0x58
    ::UnityEngine::TextCore::FaceInfo m_FaceInfo;
    // Field size check
    static_assert(sizeof(::UnityEngine::TextCore::FaceInfo) == 0x60);
    // private System.Int32 m_FamilyNameHashCode
    // Size: 0x4
    // Offset: 0xB8
    int m_FamilyNameHashCode;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private System.Int32 m_StyleNameHashCode
    // Size: 0x4
    // Offset: 0xBC
    int m_StyleNameHashCode;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // System.Collections.Generic.List`1<UnityEngine.TextCore.Glyph> m_GlyphTable
    // Size: 0x8
    // Offset: 0xC0
    ::System::Collections::Generic::List_1<::UnityEngine::TextCore::Glyph*>* m_GlyphTable;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::UnityEngine::TextCore::Glyph*>*) == 0x8);
    // System.Collections.Generic.Dictionary`2<System.UInt32,UnityEngine.TextCore.Glyph> m_GlyphLookupDictionary
    // Size: 0x8
    // Offset: 0xC8
    ::System::Collections::Generic::Dictionary_2<uint, ::UnityEngine::TextCore::Glyph*>* m_GlyphLookupDictionary;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::Dictionary_2<uint, ::UnityEngine::TextCore::Glyph*>*) == 0x8);
    // System.Collections.Generic.List`1<UnityEngine.TextCore.Text.Character> m_CharacterTable
    // Size: 0x8
    // Offset: 0xD0
    ::System::Collections::Generic::List_1<::UnityEngine::TextCore::Text::Character*>* m_CharacterTable;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::UnityEngine::TextCore::Text::Character*>*) == 0x8);
    // System.Collections.Generic.Dictionary`2<System.UInt32,UnityEngine.TextCore.Text.Character> m_CharacterLookupDictionary
    // Size: 0x8
    // Offset: 0xD8
    ::System::Collections::Generic::Dictionary_2<uint, ::UnityEngine::TextCore::Text::Character*>* m_CharacterLookupDictionary;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::Dictionary_2<uint, ::UnityEngine::TextCore::Text::Character*>*) == 0x8);
    // UnityEngine.Texture2D m_AtlasTexture
    // Size: 0x8
    // Offset: 0xE0
    ::UnityEngine::Texture2D* m_AtlasTexture;
    // Field size check
    static_assert(sizeof(::UnityEngine::Texture2D*) == 0x8);
    // UnityEngine.Texture2D[] m_AtlasTextures
    // Size: 0x8
    // Offset: 0xE8
    ::ArrayW<::UnityEngine::Texture2D*> m_AtlasTextures;
    // Field size check
    static_assert(sizeof(::ArrayW<::UnityEngine::Texture2D*>) == 0x8);
    // System.Int32 m_AtlasTextureIndex
    // Size: 0x4
    // Offset: 0xF0
    int m_AtlasTextureIndex;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private System.Boolean m_IsMultiAtlasTexturesEnabled
    // Size: 0x1
    // Offset: 0xF4
    bool m_IsMultiAtlasTexturesEnabled;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean m_ClearDynamicDataOnBuild
    // Size: 0x1
    // Offset: 0xF5
    bool m_ClearDynamicDataOnBuild;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: m_ClearDynamicDataOnBuild and: m_AtlasWidth
    char __padding16[0x2] = {};
    // System.Int32 m_AtlasWidth
    // Size: 0x4
    // Offset: 0xF8
    int m_AtlasWidth;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // System.Int32 m_AtlasHeight
    // Size: 0x4
    // Offset: 0xFC
    int m_AtlasHeight;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // System.Int32 m_AtlasPadding
    // Size: 0x4
    // Offset: 0x100
    int m_AtlasPadding;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // UnityEngine.TextCore.LowLevel.GlyphRenderMode m_AtlasRenderMode
    // Size: 0x4
    // Offset: 0x104
    ::UnityEngine::TextCore::LowLevel::GlyphRenderMode m_AtlasRenderMode;
    // Field size check
    static_assert(sizeof(::UnityEngine::TextCore::LowLevel::GlyphRenderMode) == 0x4);
    // private System.Collections.Generic.List`1<UnityEngine.TextCore.GlyphRect> m_UsedGlyphRects
    // Size: 0x8
    // Offset: 0x108
    ::System::Collections::Generic::List_1<::UnityEngine::TextCore::GlyphRect>* m_UsedGlyphRects;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::UnityEngine::TextCore::GlyphRect>*) == 0x8);
    // private System.Collections.Generic.List`1<UnityEngine.TextCore.GlyphRect> m_FreeGlyphRects
    // Size: 0x8
    // Offset: 0x110
    ::System::Collections::Generic::List_1<::UnityEngine::TextCore::GlyphRect>* m_FreeGlyphRects;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::UnityEngine::TextCore::GlyphRect>*) == 0x8);
    // UnityEngine.TextCore.Text.FontFeatureTable m_FontFeatureTable
    // Size: 0x8
    // Offset: 0x118
    ::UnityEngine::TextCore::Text::FontFeatureTable* m_FontFeatureTable;
    // Field size check
    static_assert(sizeof(::UnityEngine::TextCore::Text::FontFeatureTable*) == 0x8);
    // System.Collections.Generic.List`1<UnityEngine.TextCore.Text.FontAsset> m_FallbackFontAssetTable
    // Size: 0x8
    // Offset: 0x120
    ::System::Collections::Generic::List_1<::UnityEngine::TextCore::Text::FontAsset*>* m_FallbackFontAssetTable;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::UnityEngine::TextCore::Text::FontAsset*>*) == 0x8);
    // UnityEngine.TextCore.Text.FontAssetCreationEditorSettings m_fontAssetCreationEditorSettings
    // Size: 0x55
    // Offset: 0x128
    ::UnityEngine::TextCore::Text::FontAssetCreationEditorSettings m_fontAssetCreationEditorSettings;
    // Field size check
    static_assert(sizeof(::UnityEngine::TextCore::Text::FontAssetCreationEditorSettings) == 0x55);
    // Padding between fields: m_fontAssetCreationEditorSettings and: m_FontWeightTable
    char __padding25[0x3] = {};
    // private UnityEngine.TextCore.Text.FontWeightPair[] m_FontWeightTable
    // Size: 0x8
    // Offset: 0x180
    ::ArrayW<::UnityEngine::TextCore::Text::FontWeightPair> m_FontWeightTable;
    // Field size check
    static_assert(sizeof(::ArrayW<::UnityEngine::TextCore::Text::FontWeightPair>) == 0x8);
    // System.Single m_RegularStyleWeight
    // Size: 0x4
    // Offset: 0x188
    float m_RegularStyleWeight;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // System.Single m_RegularStyleSpacing
    // Size: 0x4
    // Offset: 0x18C
    float m_RegularStyleSpacing;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // System.Single m_BoldStyleWeight
    // Size: 0x4
    // Offset: 0x190
    float m_BoldStyleWeight;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // System.Single m_BoldStyleSpacing
    // Size: 0x4
    // Offset: 0x194
    float m_BoldStyleSpacing;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // System.Byte m_ItalicStyleSlant
    // Size: 0x1
    // Offset: 0x198
    uint8_t m_ItalicStyleSlant;
    // Field size check
    static_assert(sizeof(uint8_t) == 0x1);
    // System.Byte m_TabMultiple
    // Size: 0x1
    // Offset: 0x199
    uint8_t m_TabMultiple;
    // Field size check
    static_assert(sizeof(uint8_t) == 0x1);
    // System.Boolean IsFontAssetLookupTablesDirty
    // Size: 0x1
    // Offset: 0x19A
    bool IsFontAssetLookupTablesDirty;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: IsFontAssetLookupTablesDirty and: m_GlyphsToRender
    char __padding33[0x5] = {};
    // private System.Collections.Generic.List`1<UnityEngine.TextCore.Glyph> m_GlyphsToRender
    // Size: 0x8
    // Offset: 0x1A0
    ::System::Collections::Generic::List_1<::UnityEngine::TextCore::Glyph*>* m_GlyphsToRender;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::UnityEngine::TextCore::Glyph*>*) == 0x8);
    // private System.Collections.Generic.List`1<UnityEngine.TextCore.Glyph> m_GlyphsRendered
    // Size: 0x8
    // Offset: 0x1A8
    ::System::Collections::Generic::List_1<::UnityEngine::TextCore::Glyph*>* m_GlyphsRendered;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::UnityEngine::TextCore::Glyph*>*) == 0x8);
    // private System.Collections.Generic.List`1<System.UInt32> m_GlyphIndexList
    // Size: 0x8
    // Offset: 0x1B0
    ::System::Collections::Generic::List_1<uint>* m_GlyphIndexList;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<uint>*) == 0x8);
    // private System.Collections.Generic.List`1<System.UInt32> m_GlyphIndexListNewlyAdded
    // Size: 0x8
    // Offset: 0x1B8
    ::System::Collections::Generic::List_1<uint>* m_GlyphIndexListNewlyAdded;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<uint>*) == 0x8);
    // System.Collections.Generic.List`1<System.UInt32> m_GlyphsToAdd
    // Size: 0x8
    // Offset: 0x1C0
    ::System::Collections::Generic::List_1<uint>* m_GlyphsToAdd;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<uint>*) == 0x8);
    // System.Collections.Generic.HashSet`1<System.UInt32> m_GlyphsToAddLookup
    // Size: 0x8
    // Offset: 0x1C8
    ::System::Collections::Generic::HashSet_1<uint>* m_GlyphsToAddLookup;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::HashSet_1<uint>*) == 0x8);
    // System.Collections.Generic.List`1<UnityEngine.TextCore.Text.Character> m_CharactersToAdd
    // Size: 0x8
    // Offset: 0x1D0
    ::System::Collections::Generic::List_1<::UnityEngine::TextCore::Text::Character*>* m_CharactersToAdd;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::UnityEngine::TextCore::Text::Character*>*) == 0x8);
    // System.Collections.Generic.HashSet`1<System.UInt32> m_CharactersToAddLookup
    // Size: 0x8
    // Offset: 0x1D8
    ::System::Collections::Generic::HashSet_1<uint>* m_CharactersToAddLookup;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::HashSet_1<uint>*) == 0x8);
    // System.Collections.Generic.List`1<System.UInt32> s_MissingCharacterList
    // Size: 0x8
    // Offset: 0x1E0
    ::System::Collections::Generic::List_1<uint>* s_MissingCharacterList;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<uint>*) == 0x8);
    // System.Collections.Generic.HashSet`1<System.UInt32> m_MissingUnicodesFromFontFile
    // Size: 0x8
    // Offset: 0x1E8
    ::System::Collections::Generic::HashSet_1<uint>* m_MissingUnicodesFromFontFile;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::HashSet_1<uint>*) == 0x8);
    public:
    // Get static field: static private Unity.Profiling.ProfilerMarker k_ReadFontAssetDefinitionMarker
    static ::Unity::Profiling::ProfilerMarker _get_k_ReadFontAssetDefinitionMarker();
    // Set static field: static private Unity.Profiling.ProfilerMarker k_ReadFontAssetDefinitionMarker
    static void _set_k_ReadFontAssetDefinitionMarker(::Unity::Profiling::ProfilerMarker value);
    // Get static field: static private Unity.Profiling.ProfilerMarker k_AddSynthesizedCharactersMarker
    static ::Unity::Profiling::ProfilerMarker _get_k_AddSynthesizedCharactersMarker();
    // Set static field: static private Unity.Profiling.ProfilerMarker k_AddSynthesizedCharactersMarker
    static void _set_k_AddSynthesizedCharactersMarker(::Unity::Profiling::ProfilerMarker value);
    // Get static field: static private Unity.Profiling.ProfilerMarker k_TryAddCharacterMarker
    static ::Unity::Profiling::ProfilerMarker _get_k_TryAddCharacterMarker();
    // Set static field: static private Unity.Profiling.ProfilerMarker k_TryAddCharacterMarker
    static void _set_k_TryAddCharacterMarker(::Unity::Profiling::ProfilerMarker value);
    // Get static field: static private Unity.Profiling.ProfilerMarker k_TryAddCharactersMarker
    static ::Unity::Profiling::ProfilerMarker _get_k_TryAddCharactersMarker();
    // Set static field: static private Unity.Profiling.ProfilerMarker k_TryAddCharactersMarker
    static void _set_k_TryAddCharactersMarker(::Unity::Profiling::ProfilerMarker value);
    // Get static field: static private Unity.Profiling.ProfilerMarker k_UpdateGlyphAdjustmentRecordsMarker
    static ::Unity::Profiling::ProfilerMarker _get_k_UpdateGlyphAdjustmentRecordsMarker();
    // Set static field: static private Unity.Profiling.ProfilerMarker k_UpdateGlyphAdjustmentRecordsMarker
    static void _set_k_UpdateGlyphAdjustmentRecordsMarker(::Unity::Profiling::ProfilerMarker value);
    // Get static field: static private Unity.Profiling.ProfilerMarker k_UpdateDiacriticalMarkAdjustmentRecordsMarker
    static ::Unity::Profiling::ProfilerMarker _get_k_UpdateDiacriticalMarkAdjustmentRecordsMarker();
    // Set static field: static private Unity.Profiling.ProfilerMarker k_UpdateDiacriticalMarkAdjustmentRecordsMarker
    static void _set_k_UpdateDiacriticalMarkAdjustmentRecordsMarker(::Unity::Profiling::ProfilerMarker value);
    // Get static field: static private Unity.Profiling.ProfilerMarker k_ClearFontAssetDataMarker
    static ::Unity::Profiling::ProfilerMarker _get_k_ClearFontAssetDataMarker();
    // Set static field: static private Unity.Profiling.ProfilerMarker k_ClearFontAssetDataMarker
    static void _set_k_ClearFontAssetDataMarker(::Unity::Profiling::ProfilerMarker value);
    // Get static field: static private Unity.Profiling.ProfilerMarker k_UpdateFontAssetDataMarker
    static ::Unity::Profiling::ProfilerMarker _get_k_UpdateFontAssetDataMarker();
    // Set static field: static private Unity.Profiling.ProfilerMarker k_UpdateFontAssetDataMarker
    static void _set_k_UpdateFontAssetDataMarker(::Unity::Profiling::ProfilerMarker value);
    // Get static field: static private Unity.Profiling.ProfilerMarker k_TryAddGlyphMarker
    static ::Unity::Profiling::ProfilerMarker _get_k_TryAddGlyphMarker();
    // Set static field: static private Unity.Profiling.ProfilerMarker k_TryAddGlyphMarker
    static void _set_k_TryAddGlyphMarker(::Unity::Profiling::ProfilerMarker value);
    // Get static field: static private System.String s_DefaultMaterialSuffix
    static ::StringW _get_s_DefaultMaterialSuffix();
    // Set static field: static private System.String s_DefaultMaterialSuffix
    static void _set_s_DefaultMaterialSuffix(::StringW value);
    // Get static field: static private System.Collections.Generic.HashSet`1<System.Int32> k_SearchedFontAssetLookup
    static ::System::Collections::Generic::HashSet_1<int>* _get_k_SearchedFontAssetLookup();
    // Set static field: static private System.Collections.Generic.HashSet`1<System.Int32> k_SearchedFontAssetLookup
    static void _set_k_SearchedFontAssetLookup(::System::Collections::Generic::HashSet_1<int>* value);
    // Get static field: static private System.Collections.Generic.List`1<UnityEngine.TextCore.Text.FontAsset> k_FontAssets_FontFeaturesUpdateQueue
    static ::System::Collections::Generic::List_1<::UnityEngine::TextCore::Text::FontAsset*>* _get_k_FontAssets_FontFeaturesUpdateQueue();
    // Set static field: static private System.Collections.Generic.List`1<UnityEngine.TextCore.Text.FontAsset> k_FontAssets_FontFeaturesUpdateQueue
    static void _set_k_FontAssets_FontFeaturesUpdateQueue(::System::Collections::Generic::List_1<::UnityEngine::TextCore::Text::FontAsset*>* value);
    // Get static field: static private System.Collections.Generic.HashSet`1<System.Int32> k_FontAssets_FontFeaturesUpdateQueueLookup
    static ::System::Collections::Generic::HashSet_1<int>* _get_k_FontAssets_FontFeaturesUpdateQueueLookup();
    // Set static field: static private System.Collections.Generic.HashSet`1<System.Int32> k_FontAssets_FontFeaturesUpdateQueueLookup
    static void _set_k_FontAssets_FontFeaturesUpdateQueueLookup(::System::Collections::Generic::HashSet_1<int>* value);
    // Get static field: static private System.Collections.Generic.List`1<UnityEngine.Texture2D> k_FontAssets_AtlasTexturesUpdateQueue
    static ::System::Collections::Generic::List_1<::UnityEngine::Texture2D*>* _get_k_FontAssets_AtlasTexturesUpdateQueue();
    // Set static field: static private System.Collections.Generic.List`1<UnityEngine.Texture2D> k_FontAssets_AtlasTexturesUpdateQueue
    static void _set_k_FontAssets_AtlasTexturesUpdateQueue(::System::Collections::Generic::List_1<::UnityEngine::Texture2D*>* value);
    // Get static field: static private System.Collections.Generic.HashSet`1<System.Int32> k_FontAssets_AtlasTexturesUpdateQueueLookup
    static ::System::Collections::Generic::HashSet_1<int>* _get_k_FontAssets_AtlasTexturesUpdateQueueLookup();
    // Set static field: static private System.Collections.Generic.HashSet`1<System.Int32> k_FontAssets_AtlasTexturesUpdateQueueLookup
    static void _set_k_FontAssets_AtlasTexturesUpdateQueueLookup(::System::Collections::Generic::HashSet_1<int>* value);
    // Get static field: static System.UInt32[] k_GlyphIndexArray
    static ::ArrayW<uint> _get_k_GlyphIndexArray();
    // Set static field: static System.UInt32[] k_GlyphIndexArray
    static void _set_k_GlyphIndexArray(::ArrayW<uint> value);
    // Get instance field reference: System.String m_SourceFontFileGUID
    [[deprecated("Use field access instead!")]] ::StringW& dyn_m_SourceFontFileGUID();
    // Get instance field reference: private UnityEngine.Font m_SourceFontFile
    [[deprecated("Use field access instead!")]] ::UnityEngine::Font*& dyn_m_SourceFontFile();
    // Get instance field reference: private System.String m_SourceFontFilePath
    [[deprecated("Use field access instead!")]] ::StringW& dyn_m_SourceFontFilePath();
    // Get instance field reference: private UnityEngine.TextCore.Text.AtlasPopulationMode m_AtlasPopulationMode
    [[deprecated("Use field access instead!")]] ::UnityEngine::TextCore::Text::AtlasPopulationMode& dyn_m_AtlasPopulationMode();
    // Get instance field reference: System.Boolean InternalDynamicOS
    [[deprecated("Use field access instead!")]] bool& dyn_InternalDynamicOS();
    // Get instance field reference: UnityEngine.TextCore.FaceInfo m_FaceInfo
    [[deprecated("Use field access instead!")]] ::UnityEngine::TextCore::FaceInfo& dyn_m_FaceInfo();
    // Get instance field reference: private System.Int32 m_FamilyNameHashCode
    [[deprecated("Use field access instead!")]] int& dyn_m_FamilyNameHashCode();
    // Get instance field reference: private System.Int32 m_StyleNameHashCode
    [[deprecated("Use field access instead!")]] int& dyn_m_StyleNameHashCode();
    // Get instance field reference: System.Collections.Generic.List`1<UnityEngine.TextCore.Glyph> m_GlyphTable
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::TextCore::Glyph*>*& dyn_m_GlyphTable();
    // Get instance field reference: System.Collections.Generic.Dictionary`2<System.UInt32,UnityEngine.TextCore.Glyph> m_GlyphLookupDictionary
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<uint, ::UnityEngine::TextCore::Glyph*>*& dyn_m_GlyphLookupDictionary();
    // Get instance field reference: System.Collections.Generic.List`1<UnityEngine.TextCore.Text.Character> m_CharacterTable
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::TextCore::Text::Character*>*& dyn_m_CharacterTable();
    // Get instance field reference: System.Collections.Generic.Dictionary`2<System.UInt32,UnityEngine.TextCore.Text.Character> m_CharacterLookupDictionary
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<uint, ::UnityEngine::TextCore::Text::Character*>*& dyn_m_CharacterLookupDictionary();
    // Get instance field reference: UnityEngine.Texture2D m_AtlasTexture
    [[deprecated("Use field access instead!")]] ::UnityEngine::Texture2D*& dyn_m_AtlasTexture();
    // Get instance field reference: UnityEngine.Texture2D[] m_AtlasTextures
    [[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Texture2D*>& dyn_m_AtlasTextures();
    // Get instance field reference: System.Int32 m_AtlasTextureIndex
    [[deprecated("Use field access instead!")]] int& dyn_m_AtlasTextureIndex();
    // Get instance field reference: private System.Boolean m_IsMultiAtlasTexturesEnabled
    [[deprecated("Use field access instead!")]] bool& dyn_m_IsMultiAtlasTexturesEnabled();
    // Get instance field reference: private System.Boolean m_ClearDynamicDataOnBuild
    [[deprecated("Use field access instead!")]] bool& dyn_m_ClearDynamicDataOnBuild();
    // Get instance field reference: System.Int32 m_AtlasWidth
    [[deprecated("Use field access instead!")]] int& dyn_m_AtlasWidth();
    // Get instance field reference: System.Int32 m_AtlasHeight
    [[deprecated("Use field access instead!")]] int& dyn_m_AtlasHeight();
    // Get instance field reference: System.Int32 m_AtlasPadding
    [[deprecated("Use field access instead!")]] int& dyn_m_AtlasPadding();
    // Get instance field reference: UnityEngine.TextCore.LowLevel.GlyphRenderMode m_AtlasRenderMode
    [[deprecated("Use field access instead!")]] ::UnityEngine::TextCore::LowLevel::GlyphRenderMode& dyn_m_AtlasRenderMode();
    // Get instance field reference: private System.Collections.Generic.List`1<UnityEngine.TextCore.GlyphRect> m_UsedGlyphRects
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::TextCore::GlyphRect>*& dyn_m_UsedGlyphRects();
    // Get instance field reference: private System.Collections.Generic.List`1<UnityEngine.TextCore.GlyphRect> m_FreeGlyphRects
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::TextCore::GlyphRect>*& dyn_m_FreeGlyphRects();
    // Get instance field reference: UnityEngine.TextCore.Text.FontFeatureTable m_FontFeatureTable
    [[deprecated("Use field access instead!")]] ::UnityEngine::TextCore::Text::FontFeatureTable*& dyn_m_FontFeatureTable();
    // Get instance field reference: System.Collections.Generic.List`1<UnityEngine.TextCore.Text.FontAsset> m_FallbackFontAssetTable
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::TextCore::Text::FontAsset*>*& dyn_m_FallbackFontAssetTable();
    // Get instance field reference: UnityEngine.TextCore.Text.FontAssetCreationEditorSettings m_fontAssetCreationEditorSettings
    [[deprecated("Use field access instead!")]] ::UnityEngine::TextCore::Text::FontAssetCreationEditorSettings& dyn_m_fontAssetCreationEditorSettings();
    // Get instance field reference: private UnityEngine.TextCore.Text.FontWeightPair[] m_FontWeightTable
    [[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::TextCore::Text::FontWeightPair>& dyn_m_FontWeightTable();
    // Get instance field reference: System.Single m_RegularStyleWeight
    [[deprecated("Use field access instead!")]] float& dyn_m_RegularStyleWeight();
    // Get instance field reference: System.Single m_RegularStyleSpacing
    [[deprecated("Use field access instead!")]] float& dyn_m_RegularStyleSpacing();
    // Get instance field reference: System.Single m_BoldStyleWeight
    [[deprecated("Use field access instead!")]] float& dyn_m_BoldStyleWeight();
    // Get instance field reference: System.Single m_BoldStyleSpacing
    [[deprecated("Use field access instead!")]] float& dyn_m_BoldStyleSpacing();
    // Get instance field reference: System.Byte m_ItalicStyleSlant
    [[deprecated("Use field access instead!")]] uint8_t& dyn_m_ItalicStyleSlant();
    // Get instance field reference: System.Byte m_TabMultiple
    [[deprecated("Use field access instead!")]] uint8_t& dyn_m_TabMultiple();
    // Get instance field reference: System.Boolean IsFontAssetLookupTablesDirty
    [[deprecated("Use field access instead!")]] bool& dyn_IsFontAssetLookupTablesDirty();
    // Get instance field reference: private System.Collections.Generic.List`1<UnityEngine.TextCore.Glyph> m_GlyphsToRender
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::TextCore::Glyph*>*& dyn_m_GlyphsToRender();
    // Get instance field reference: private System.Collections.Generic.List`1<UnityEngine.TextCore.Glyph> m_GlyphsRendered
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::TextCore::Glyph*>*& dyn_m_GlyphsRendered();
    // Get instance field reference: private System.Collections.Generic.List`1<System.UInt32> m_GlyphIndexList
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<uint>*& dyn_m_GlyphIndexList();
    // Get instance field reference: private System.Collections.Generic.List`1<System.UInt32> m_GlyphIndexListNewlyAdded
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<uint>*& dyn_m_GlyphIndexListNewlyAdded();
    // Get instance field reference: System.Collections.Generic.List`1<System.UInt32> m_GlyphsToAdd
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<uint>*& dyn_m_GlyphsToAdd();
    // Get instance field reference: System.Collections.Generic.HashSet`1<System.UInt32> m_GlyphsToAddLookup
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::HashSet_1<uint>*& dyn_m_GlyphsToAddLookup();
    // Get instance field reference: System.Collections.Generic.List`1<UnityEngine.TextCore.Text.Character> m_CharactersToAdd
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::TextCore::Text::Character*>*& dyn_m_CharactersToAdd();
    // Get instance field reference: System.Collections.Generic.HashSet`1<System.UInt32> m_CharactersToAddLookup
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::HashSet_1<uint>*& dyn_m_CharactersToAddLookup();
    // Get instance field reference: System.Collections.Generic.List`1<System.UInt32> s_MissingCharacterList
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<uint>*& dyn_s_MissingCharacterList();
    // Get instance field reference: System.Collections.Generic.HashSet`1<System.UInt32> m_MissingUnicodesFromFontFile
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::HashSet_1<uint>*& dyn_m_MissingUnicodesFromFontFile();
    // public UnityEngine.Font get_sourceFontFile()
    // Offset: 0x5543BDC
    ::UnityEngine::Font* get_sourceFontFile();
    // System.Void set_sourceFontFile(UnityEngine.Font value)
    // Offset: 0x5543BE4
    void set_sourceFontFile(::UnityEngine::Font* value);
    // public UnityEngine.TextCore.Text.AtlasPopulationMode get_atlasPopulationMode()
    // Offset: 0x5543BEC
    ::UnityEngine::TextCore::Text::AtlasPopulationMode get_atlasPopulationMode();
    // public System.Void set_atlasPopulationMode(UnityEngine.TextCore.Text.AtlasPopulationMode value)
    // Offset: 0x5543BF4
    void set_atlasPopulationMode(::UnityEngine::TextCore::Text::AtlasPopulationMode value);
    // public UnityEngine.TextCore.FaceInfo get_faceInfo()
    // Offset: 0x5543BFC
    ::UnityEngine::TextCore::FaceInfo get_faceInfo();
    // public System.Void set_faceInfo(UnityEngine.TextCore.FaceInfo value)
    // Offset: 0x5543C18
    void set_faceInfo(::UnityEngine::TextCore::FaceInfo value);
    // System.Int32 get_familyNameHashCode()
    // Offset: 0x5543C3C
    int get_familyNameHashCode();
    // System.Void set_familyNameHashCode(System.Int32 value)
    // Offset: 0x5543C6C
    void set_familyNameHashCode(int value);
    // System.Int32 get_styleNameHashCode()
    // Offset: 0x5543C74
    int get_styleNameHashCode();
    // System.Void set_styleNameHashCode(System.Int32 value)
    // Offset: 0x5543CA4
    void set_styleNameHashCode(int value);
    // public System.Collections.Generic.List`1<UnityEngine.TextCore.Glyph> get_glyphTable()
    // Offset: 0x5543CAC
    ::System::Collections::Generic::List_1<::UnityEngine::TextCore::Glyph*>* get_glyphTable();
    // System.Void set_glyphTable(System.Collections.Generic.List`1<UnityEngine.TextCore.Glyph> value)
    // Offset: 0x5543CB4
    void set_glyphTable(::System::Collections::Generic::List_1<::UnityEngine::TextCore::Glyph*>* value);
    // public System.Collections.Generic.Dictionary`2<System.UInt32,UnityEngine.TextCore.Glyph> get_glyphLookupTable()
    // Offset: 0x5543CBC
    ::System::Collections::Generic::Dictionary_2<uint, ::UnityEngine::TextCore::Glyph*>* get_glyphLookupTable();
    // public System.Collections.Generic.List`1<UnityEngine.TextCore.Text.Character> get_characterTable()
    // Offset: 0x5544080
    ::System::Collections::Generic::List_1<::UnityEngine::TextCore::Text::Character*>* get_characterTable();
    // System.Void set_characterTable(System.Collections.Generic.List`1<UnityEngine.TextCore.Text.Character> value)
    // Offset: 0x5544088
    void set_characterTable(::System::Collections::Generic::List_1<::UnityEngine::TextCore::Text::Character*>* value);
    // public System.Collections.Generic.Dictionary`2<System.UInt32,UnityEngine.TextCore.Text.Character> get_characterLookupTable()
    // Offset: 0x5544090
    ::System::Collections::Generic::Dictionary_2<uint, ::UnityEngine::TextCore::Text::Character*>* get_characterLookupTable();
    // public UnityEngine.Texture2D get_atlasTexture()
    // Offset: 0x55440B4
    ::UnityEngine::Texture2D* get_atlasTexture();
    // public UnityEngine.Texture2D[] get_atlasTextures()
    // Offset: 0x5544154
    ::ArrayW<::UnityEngine::Texture2D*> get_atlasTextures();
    // public System.Void set_atlasTextures(UnityEngine.Texture2D[] value)
    // Offset: 0x554415C
    void set_atlasTextures(::ArrayW<::UnityEngine::Texture2D*> value);
    // public System.Int32 get_atlasTextureCount()
    // Offset: 0x5544164
    int get_atlasTextureCount();
    // public System.Boolean get_isMultiAtlasTexturesEnabled()
    // Offset: 0x5544170
    bool get_isMultiAtlasTexturesEnabled();
    // public System.Void set_isMultiAtlasTexturesEnabled(System.Boolean value)
    // Offset: 0x5544178
    void set_isMultiAtlasTexturesEnabled(bool value);
    // System.Boolean get_clearDynamicDataOnBuild()
    // Offset: 0x5544184
    bool get_clearDynamicDataOnBuild();
    // System.Void set_clearDynamicDataOnBuild(System.Boolean value)
    // Offset: 0x554418C
    void set_clearDynamicDataOnBuild(bool value);
    // public System.Int32 get_atlasWidth()
    // Offset: 0x5544198
    int get_atlasWidth();
    // System.Void set_atlasWidth(System.Int32 value)
    // Offset: 0x55441A0
    void set_atlasWidth(int value);
    // public System.Int32 get_atlasHeight()
    // Offset: 0x55441A8
    int get_atlasHeight();
    // System.Void set_atlasHeight(System.Int32 value)
    // Offset: 0x55441B0
    void set_atlasHeight(int value);
    // public System.Int32 get_atlasPadding()
    // Offset: 0x55441B8
    int get_atlasPadding();
    // System.Void set_atlasPadding(System.Int32 value)
    // Offset: 0x55441C0
    void set_atlasPadding(int value);
    // public UnityEngine.TextCore.LowLevel.GlyphRenderMode get_atlasRenderMode()
    // Offset: 0x55441C8
    ::UnityEngine::TextCore::LowLevel::GlyphRenderMode get_atlasRenderMode();
    // System.Void set_atlasRenderMode(UnityEngine.TextCore.LowLevel.GlyphRenderMode value)
    // Offset: 0x55441D0
    void set_atlasRenderMode(::UnityEngine::TextCore::LowLevel::GlyphRenderMode value);
    // System.Collections.Generic.List`1<UnityEngine.TextCore.GlyphRect> get_usedGlyphRects()
    // Offset: 0x55441D8
    ::System::Collections::Generic::List_1<::UnityEngine::TextCore::GlyphRect>* get_usedGlyphRects();
    // System.Void set_usedGlyphRects(System.Collections.Generic.List`1<UnityEngine.TextCore.GlyphRect> value)
    // Offset: 0x55441E0
    void set_usedGlyphRects(::System::Collections::Generic::List_1<::UnityEngine::TextCore::GlyphRect>* value);
    // System.Collections.Generic.List`1<UnityEngine.TextCore.GlyphRect> get_freeGlyphRects()
    // Offset: 0x55441F0
    ::System::Collections::Generic::List_1<::UnityEngine::TextCore::GlyphRect>* get_freeGlyphRects();
    // System.Void set_freeGlyphRects(System.Collections.Generic.List`1<UnityEngine.TextCore.GlyphRect> value)
    // Offset: 0x55441F8
    void set_freeGlyphRects(::System::Collections::Generic::List_1<::UnityEngine::TextCore::GlyphRect>* value);
    // public UnityEngine.TextCore.Text.FontFeatureTable get_fontFeatureTable()
    // Offset: 0x5544208
    ::UnityEngine::TextCore::Text::FontFeatureTable* get_fontFeatureTable();
    // System.Void set_fontFeatureTable(UnityEngine.TextCore.Text.FontFeatureTable value)
    // Offset: 0x5544210
    void set_fontFeatureTable(::UnityEngine::TextCore::Text::FontFeatureTable* value);
    // public System.Collections.Generic.List`1<UnityEngine.TextCore.Text.FontAsset> get_fallbackFontAssetTable()
    // Offset: 0x5544220
    ::System::Collections::Generic::List_1<::UnityEngine::TextCore::Text::FontAsset*>* get_fallbackFontAssetTable();
    // public System.Void set_fallbackFontAssetTable(System.Collections.Generic.List`1<UnityEngine.TextCore.Text.FontAsset> value)
    // Offset: 0x5544228
    void set_fallbackFontAssetTable(::System::Collections::Generic::List_1<::UnityEngine::TextCore::Text::FontAsset*>* value);
    // public UnityEngine.TextCore.Text.FontAssetCreationEditorSettings get_fontAssetCreationEditorSettings()
    // Offset: 0x5544238
    ::UnityEngine::TextCore::Text::FontAssetCreationEditorSettings get_fontAssetCreationEditorSettings();
    // public System.Void set_fontAssetCreationEditorSettings(UnityEngine.TextCore.Text.FontAssetCreationEditorSettings value)
    // Offset: 0x5544254
    void set_fontAssetCreationEditorSettings(::UnityEngine::TextCore::Text::FontAssetCreationEditorSettings value);
    // public UnityEngine.TextCore.Text.FontWeightPair[] get_fontWeightTable()
    // Offset: 0x5544278
    ::ArrayW<::UnityEngine::TextCore::Text::FontWeightPair> get_fontWeightTable();
    // System.Void set_fontWeightTable(UnityEngine.TextCore.Text.FontWeightPair[] value)
    // Offset: 0x5544280
    void set_fontWeightTable(::ArrayW<::UnityEngine::TextCore::Text::FontWeightPair> value);
    // public System.Single get_regularStyleWeight()
    // Offset: 0x5544290
    float get_regularStyleWeight();
    // public System.Void set_regularStyleWeight(System.Single value)
    // Offset: 0x5544298
    void set_regularStyleWeight(float value);
    // public System.Single get_regularStyleSpacing()
    // Offset: 0x55442A0
    float get_regularStyleSpacing();
    // public System.Void set_regularStyleSpacing(System.Single value)
    // Offset: 0x55442A8
    void set_regularStyleSpacing(float value);
    // public System.Single get_boldStyleWeight()
    // Offset: 0x55442B0
    float get_boldStyleWeight();
    // public System.Void set_boldStyleWeight(System.Single value)
    // Offset: 0x55442B8
    void set_boldStyleWeight(float value);
    // public System.Single get_boldStyleSpacing()
    // Offset: 0x55442C0
    float get_boldStyleSpacing();
    // public System.Void set_boldStyleSpacing(System.Single value)
    // Offset: 0x55442C8
    void set_boldStyleSpacing(float value);
    // public System.Byte get_italicStyleSlant()
    // Offset: 0x55442D0
    uint8_t get_italicStyleSlant();
    // public System.Void set_italicStyleSlant(System.Byte value)
    // Offset: 0x55442D8
    void set_italicStyleSlant(uint8_t value);
    // public System.Byte get_tabMultiple()
    // Offset: 0x55442E0
    uint8_t get_tabMultiple();
    // public System.Void set_tabMultiple(System.Byte value)
    // Offset: 0x55442E8
    void set_tabMultiple(uint8_t value);
    // static public UnityEngine.TextCore.Text.FontAsset CreateFontAsset(System.String familyName, System.String styleName, System.Int32 pointSize)
    // Offset: 0x55442F0
    static ::UnityEngine::TextCore::Text::FontAsset* CreateFontAsset(::StringW familyName, ::StringW styleName, int pointSize);
    // static public UnityEngine.TextCore.Text.FontAsset CreateFontAsset(System.String fontFilePath, System.Int32 faceIndex, System.Int32 samplingPointSize, System.Int32 atlasPadding, UnityEngine.TextCore.LowLevel.GlyphRenderMode renderMode, System.Int32 atlasWidth, System.Int32 atlasHeight)
    // Offset: 0x55446A4
    static ::UnityEngine::TextCore::Text::FontAsset* CreateFontAsset(::StringW fontFilePath, int faceIndex, int samplingPointSize, int atlasPadding, ::UnityEngine::TextCore::LowLevel::GlyphRenderMode renderMode, int atlasWidth, int atlasHeight);
    // static private UnityEngine.TextCore.Text.FontAsset CreateFontAsset(System.String fontFilePath, System.Int32 faceIndex, System.Int32 samplingPointSize, System.Int32 atlasPadding, UnityEngine.TextCore.LowLevel.GlyphRenderMode renderMode, System.Int32 atlasWidth, System.Int32 atlasHeight, UnityEngine.TextCore.Text.AtlasPopulationMode atlasPopulationMode, System.Boolean enableMultiAtlasSupport)
    // Offset: 0x5544520
    static ::UnityEngine::TextCore::Text::FontAsset* CreateFontAsset(::StringW fontFilePath, int faceIndex, int samplingPointSize, int atlasPadding, ::UnityEngine::TextCore::LowLevel::GlyphRenderMode renderMode, int atlasWidth, int atlasHeight, ::UnityEngine::TextCore::Text::AtlasPopulationMode atlasPopulationMode, bool enableMultiAtlasSupport);
    // static public UnityEngine.TextCore.Text.FontAsset CreateFontAsset(UnityEngine.Font font)
    // Offset: 0x5544C20
    static ::UnityEngine::TextCore::Text::FontAsset* CreateFontAsset(::UnityEngine::Font* font);
    // static public UnityEngine.TextCore.Text.FontAsset CreateFontAsset(UnityEngine.Font font, System.Int32 samplingPointSize, System.Int32 atlasPadding, UnityEngine.TextCore.LowLevel.GlyphRenderMode renderMode, System.Int32 atlasWidth, System.Int32 atlasHeight, UnityEngine.TextCore.Text.AtlasPopulationMode atlasPopulationMode, System.Boolean enableMultiAtlasSupport)
    // Offset: 0x5544C9C
    static ::UnityEngine::TextCore::Text::FontAsset* CreateFontAsset(::UnityEngine::Font* font, int samplingPointSize, int atlasPadding, ::UnityEngine::TextCore::LowLevel::GlyphRenderMode renderMode, int atlasWidth, int atlasHeight, ::UnityEngine::TextCore::Text::AtlasPopulationMode atlasPopulationMode, bool enableMultiAtlasSupport);
    // static private UnityEngine.TextCore.Text.FontAsset CreateFontAsset(UnityEngine.Font font, System.Int32 faceIndex, System.Int32 samplingPointSize, System.Int32 atlasPadding, UnityEngine.TextCore.LowLevel.GlyphRenderMode renderMode, System.Int32 atlasWidth, System.Int32 atlasHeight, UnityEngine.TextCore.Text.AtlasPopulationMode atlasPopulationMode, System.Boolean enableMultiAtlasSupport)
    // Offset: 0x5544D5C
    static ::UnityEngine::TextCore::Text::FontAsset* CreateFontAsset(::UnityEngine::Font* font, int faceIndex, int samplingPointSize, int atlasPadding, ::UnityEngine::TextCore::LowLevel::GlyphRenderMode renderMode, int atlasWidth, int atlasHeight, ::UnityEngine::TextCore::Text::AtlasPopulationMode atlasPopulationMode, bool enableMultiAtlasSupport);
    // static private UnityEngine.TextCore.Text.FontAsset CreateFontAssetInstance(UnityEngine.Font font, System.Int32 atlasPadding, UnityEngine.TextCore.LowLevel.GlyphRenderMode renderMode, System.Int32 atlasWidth, System.Int32 atlasHeight, UnityEngine.TextCore.Text.AtlasPopulationMode atlasPopulationMode, System.Boolean enableMultiAtlasSupport)
    // Offset: 0x5544758
    static ::UnityEngine::TextCore::Text::FontAsset* CreateFontAssetInstance(::UnityEngine::Font* font, int atlasPadding, ::UnityEngine::TextCore::LowLevel::GlyphRenderMode renderMode, int atlasWidth, int atlasHeight, ::UnityEngine::TextCore::Text::AtlasPopulationMode atlasPopulationMode, bool enableMultiAtlasSupport);
    // private System.Void Awake()
    // Offset: 0x5544F8C
    void Awake();
    // private System.Void OnDestroy()
    // Offset: 0x5544F90
    void OnDestroy();
    // public System.Void ReadFontAssetDefinition()
    // Offset: 0x5543CE0
    void ReadFontAssetDefinition();
    // System.Void InitializeDictionaryLookupTables()
    // Offset: 0x55450B8
    void InitializeDictionaryLookupTables();
    // System.Void InitializeGlyphLookupDictionary()
    // Offset: 0x55452C8
    void InitializeGlyphLookupDictionary();
    // System.Void InitializeCharacterLookupDictionary()
    // Offset: 0x5545588
    void InitializeCharacterLookupDictionary();
    // System.Void InitializeLigatureSubstitutionLookupDictionary()
    // Offset: 0x5545750
    void InitializeLigatureSubstitutionLookupDictionary();
    // System.Void InitializeGlyphPaidAdjustmentRecordsLookupDictionary()
    // Offset: 0x5545A88
    void InitializeGlyphPaidAdjustmentRecordsLookupDictionary();
    // System.Void InitializeMarkToBaseAdjustmentRecordsLookupDictionary()
    // Offset: 0x5545CCC
    void InitializeMarkToBaseAdjustmentRecordsLookupDictionary();
    // System.Void InitializeMarkToMarkAdjustmentRecordsLookupDictionary()
    // Offset: 0x5545EB8
    void InitializeMarkToMarkAdjustmentRecordsLookupDictionary();
    // System.Void AddSynthesizedCharactersAndFaceMetrics()
    // Offset: 0x55450F0
    void AddSynthesizedCharactersAndFaceMetrics();
    // private System.Void AddSynthesizedCharacter(System.UInt32 unicode, System.Boolean isFontFaceLoaded, System.Boolean addImmediately)
    // Offset: 0x5546238
    void AddSynthesizedCharacter(uint unicode, bool isFontFaceLoaded, bool addImmediately);
    // System.Void AddCharacterToLookupCache(System.UInt32 unicode, UnityEngine.TextCore.Text.Character character)
    // Offset: 0x5546450
    void AddCharacterToLookupCache(uint unicode, ::UnityEngine::TextCore::Text::Character* character);
    // private UnityEngine.TextCore.LowLevel.FontEngineError LoadFontFace()
    // Offset: 0x55460AC
    ::UnityEngine::TextCore::LowLevel::FontEngineError LoadFontFace();
    // System.Void SortCharacterTable()
    // Offset: 0x55464B8
    void SortCharacterTable();
    // System.Void SortGlyphTable()
    // Offset: 0x554660C
    void SortGlyphTable();
    // System.Void SortFontFeatureTable()
    // Offset: 0x5546760
    void SortFontFeatureTable();
    // System.Void SortAllTables()
    // Offset: 0x5546DDC
    void SortAllTables();
    // public System.Boolean HasCharacter(System.Int32 character)
    // Offset: 0x5546DFC
    bool HasCharacter(int character);
    // public System.Boolean HasCharacter(System.Char character, System.Boolean searchFallbacks, System.Boolean tryAddCharacter)
    // Offset: 0x5546E5C
    bool HasCharacter(::Il2CppChar character, bool searchFallbacks, bool tryAddCharacter);
    // public System.Boolean HasCharacter(System.UInt32 character, System.Boolean searchFallbacks, System.Boolean tryAddCharacter)
    // Offset: 0x5546E64
    bool HasCharacter(uint character, bool searchFallbacks, bool tryAddCharacter);
    // private System.Boolean HasCharacter_Internal(System.UInt32 character, System.Boolean searchFallbacks, System.Boolean tryAddCharacter)
    // Offset: 0x5547A88
    bool HasCharacter_Internal(uint character, bool searchFallbacks, bool tryAddCharacter);
    // public System.Boolean HasCharacters(System.String text, out System.Collections.Generic.List`1<System.Char> missingCharacters)
    // Offset: 0x5547CAC
    bool HasCharacters(::StringW text, ByRef<::System::Collections::Generic::List_1<::Il2CppChar>*> missingCharacters);
    // public System.Boolean HasCharacters(System.String text, out System.UInt32[] missingCharacters, System.Boolean searchFallbacks, System.Boolean tryAddCharacter)
    // Offset: 0x5547E64
    bool HasCharacters(::StringW text, ByRef<::ArrayW<uint>> missingCharacters, bool searchFallbacks, bool tryAddCharacter);
    // public System.Boolean HasCharacters(System.String text)
    // Offset: 0x55482B0
    bool HasCharacters(::StringW text);
    // static public System.String GetCharacters(UnityEngine.TextCore.Text.FontAsset fontAsset)
    // Offset: 0x5548374
    static ::StringW GetCharacters(::UnityEngine::TextCore::Text::FontAsset* fontAsset);
    // static public System.Int32[] GetCharactersArray(UnityEngine.TextCore.Text.FontAsset fontAsset)
    // Offset: 0x5548454
    static ::ArrayW<int> GetCharactersArray(::UnityEngine::TextCore::Text::FontAsset* fontAsset);
    // System.UInt32 GetGlyphIndex(System.UInt32 unicode)
    // Offset: 0x5548538
    uint GetGlyphIndex(uint unicode);
    // static System.Void RegisterFontAssetForFontFeatureUpdate(UnityEngine.TextCore.Text.FontAsset fontAsset)
    // Offset: 0x5548614
    static void RegisterFontAssetForFontFeatureUpdate(::UnityEngine::TextCore::Text::FontAsset* fontAsset);
    // static System.Void UpdateFontFeaturesForFontAssetsInQueue()
    // Offset: 0x5548780
    static void UpdateFontFeaturesForFontAssetsInQueue();
    // static System.Void RegisterAtlasTextureForApply(UnityEngine.Texture2D texture)
    // Offset: 0x5548944
    static void RegisterAtlasTextureForApply(::UnityEngine::Texture2D* texture);
    // static System.Void UpdateAtlasTexturesInQueue()
    // Offset: 0x5548A80
    static void UpdateAtlasTexturesInQueue();
    // static System.Void UpdateFontAssetsInUpdateQueue()
    // Offset: 0x5548BF8
    static void UpdateFontAssetsInUpdateQueue();
    // public System.Boolean TryAddCharacters(System.UInt32[] unicodes, System.Boolean includeFontFeatures)
    // Offset: 0x5548C48
    bool TryAddCharacters(::ArrayW<uint> unicodes, bool includeFontFeatures);
    // public System.Boolean TryAddCharacters(System.UInt32[] unicodes, out System.UInt32[] missingUnicodes, System.Boolean includeFontFeatures)
    // Offset: 0x5548C68
    bool TryAddCharacters(::ArrayW<uint> unicodes, ByRef<::ArrayW<uint>> missingUnicodes, bool includeFontFeatures);
    // public System.Boolean TryAddCharacters(System.String characters, System.Boolean includeFontFeatures)
    // Offset: 0x5549D68
    bool TryAddCharacters(::StringW characters, bool includeFontFeatures);
    // public System.Boolean TryAddCharacters(System.String characters, out System.String missingCharacters, System.Boolean includeFontFeatures)
    // Offset: 0x5549D88
    bool TryAddCharacters(::StringW characters, ByRef<::StringW> missingCharacters, bool includeFontFeatures);
    // System.Boolean TryAddGlyphInternal(System.UInt32 glyphIndex, out UnityEngine.TextCore.Glyph glyph)
    // Offset: 0x554A9A8
    bool TryAddGlyphInternal(uint glyphIndex, ByRef<::UnityEngine::TextCore::Glyph*> glyph);
    // System.Boolean TryAddCharacterInternal(System.UInt32 unicode, out UnityEngine.TextCore.Text.Character character, System.Boolean shouldGetFontFeatures)
    // Offset: 0x5547180
    bool TryAddCharacterInternal(uint unicode, ByRef<::UnityEngine::TextCore::Text::Character*> character, bool shouldGetFontFeatures);
    // System.Boolean TryGetCharacter_and_QueueRenderToTexture(System.UInt32 unicode, out UnityEngine.TextCore.Text.Character character, System.Boolean shouldGetFontFeatures)
    // Offset: 0x554B57C
    bool TryGetCharacter_and_QueueRenderToTexture(uint unicode, ByRef<::UnityEngine::TextCore::Text::Character*> character, bool shouldGetFontFeatures);
    // System.Void TryAddGlyphsToAtlasTextures()
    // Offset: 0x554BB18
    void TryAddGlyphsToAtlasTextures();
    // private System.Boolean TryAddGlyphsToNewAtlasTexture()
    // Offset: 0x55498C0
    bool TryAddGlyphsToNewAtlasTexture();
    // private System.Void SetupNewAtlasTexture()
    // Offset: 0x554B36C
    void SetupNewAtlasTexture();
    // private System.Void UpdateAllFontFeatures()
    // Offset: 0x55488EC
    void UpdateAllFontFeatures();
    // System.Void UpdateGlyphAdjustmentRecords()
    // Offset: 0x554BB1C
    void UpdateGlyphAdjustmentRecords();
    // System.Void UpdateGlyphAdjustmentRecords(System.UInt32[] glyphIndexes)
    // Offset: 0x554C28C
    void UpdateGlyphAdjustmentRecords(::ArrayW<uint> glyphIndexes);
    // System.Void UpdateGlyphAdjustmentRecords(System.Collections.Generic.List`1<System.UInt32> glyphIndexes)
    // Offset: 0x554C718
    void UpdateGlyphAdjustmentRecords(::System::Collections::Generic::List_1<uint>* glyphIndexes);
    // System.Void UpdateGlyphAdjustmentRecords(System.Collections.Generic.List`1<System.UInt32> newGlyphIndexes, System.Collections.Generic.List`1<System.UInt32> allGlyphIndexes)
    // Offset: 0x554C71C
    void UpdateGlyphAdjustmentRecords(::System::Collections::Generic::List_1<uint>* newGlyphIndexes, ::System::Collections::Generic::List_1<uint>* allGlyphIndexes);
    // private System.Void CopyListDataToArray(System.Collections.Generic.List`1<T> srcList, ref T[] dstArray)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class T>
    void CopyListDataToArray(::System::Collections::Generic::List_1<T>* srcList, ByRef<::ArrayW<T>> dstArray) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::Text::FontAsset::CopyListDataToArray");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyListDataToArray", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(srcList), ::il2cpp_utils::ExtractType(dstArray)})));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___generic__method, srcList, byref(dstArray));
    }
    // public System.Void ClearFontAssetData(System.Boolean setAtlasSizeToZero)
    // Offset: 0x554C720
    void ClearFontAssetData(bool setAtlasSizeToZero);
    // System.Void ClearFontAssetDataInternal(System.Boolean clearFontFeatures)
    // Offset: 0x554CCE4
    void ClearFontAssetDataInternal(bool clearFontFeatures);
    // System.Void UpdateFontAssetData()
    // Offset: 0x554CD04
    void UpdateFontAssetData();
    // System.Void ClearFontAssetTables(System.Boolean clearFontFeatures)
    // Offset: 0x554C860
    void ClearFontAssetTables(bool clearFontFeatures);
    // System.Void ClearAtlasTextures(System.Boolean setAtlasSizeToZero)
    // Offset: 0x554CAE4
    void ClearAtlasTextures(bool setAtlasSizeToZero);
    // private System.Void DestroyAtlasTextures()
    // Offset: 0x5544FF4
    void DestroyAtlasTextures();
    // static private System.Void .cctor()
    // Offset: 0x554D268
    static void _cctor();
    // public System.Void .ctor()
    // Offset: 0x554CF40
    // Implemented from: UnityEngine.TextCore.Text.TextAsset
    // Base method: System.Void TextAsset::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static FontAsset* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::Text::FontAsset::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<FontAsset*, creationType>()));
    }
  }; // UnityEngine.TextCore.Text.FontAsset
  #pragma pack(pop)
  static check_size<sizeof(FontAsset), 488 + sizeof(::System::Collections::Generic::HashSet_1<uint>*)> __UnityEngine_TextCore_Text_FontAssetSizeCheck;
  static_assert(sizeof(FontAsset) == 0x1F0);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::FontAsset::get_sourceFontFile
// Il2CppName: get_sourceFontFile
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Font* (UnityEngine::TextCore::Text::FontAsset::*)()>(&UnityEngine::TextCore::Text::FontAsset::get_sourceFontFile)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::FontAsset*), "get_sourceFontFile", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::FontAsset::set_sourceFontFile
// Il2CppName: set_sourceFontFile
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TextCore::Text::FontAsset::*)(::UnityEngine::Font*)>(&UnityEngine::TextCore::Text::FontAsset::set_sourceFontFile)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Font")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::FontAsset*), "set_sourceFontFile", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::FontAsset::get_atlasPopulationMode
// Il2CppName: get_atlasPopulationMode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::TextCore::Text::AtlasPopulationMode (UnityEngine::TextCore::Text::FontAsset::*)()>(&UnityEngine::TextCore::Text::FontAsset::get_atlasPopulationMode)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::FontAsset*), "get_atlasPopulationMode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::FontAsset::set_atlasPopulationMode
// Il2CppName: set_atlasPopulationMode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TextCore::Text::FontAsset::*)(::UnityEngine::TextCore::Text::AtlasPopulationMode)>(&UnityEngine::TextCore::Text::FontAsset::set_atlasPopulationMode)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.TextCore.Text", "AtlasPopulationMode")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::FontAsset*), "set_atlasPopulationMode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::FontAsset::get_faceInfo
// Il2CppName: get_faceInfo
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::TextCore::FaceInfo (UnityEngine::TextCore::Text::FontAsset::*)()>(&UnityEngine::TextCore::Text::FontAsset::get_faceInfo)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::FontAsset*), "get_faceInfo", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::FontAsset::set_faceInfo
// Il2CppName: set_faceInfo
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TextCore::Text::FontAsset::*)(::UnityEngine::TextCore::FaceInfo)>(&UnityEngine::TextCore::Text::FontAsset::set_faceInfo)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.TextCore", "FaceInfo")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::FontAsset*), "set_faceInfo", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::FontAsset::get_familyNameHashCode
// Il2CppName: get_familyNameHashCode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::TextCore::Text::FontAsset::*)()>(&UnityEngine::TextCore::Text::FontAsset::get_familyNameHashCode)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::FontAsset*), "get_familyNameHashCode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::FontAsset::set_familyNameHashCode
// Il2CppName: set_familyNameHashCode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TextCore::Text::FontAsset::*)(int)>(&UnityEngine::TextCore::Text::FontAsset::set_familyNameHashCode)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::FontAsset*), "set_familyNameHashCode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::FontAsset::get_styleNameHashCode
// Il2CppName: get_styleNameHashCode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::TextCore::Text::FontAsset::*)()>(&UnityEngine::TextCore::Text::FontAsset::get_styleNameHashCode)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::FontAsset*), "get_styleNameHashCode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::FontAsset::set_styleNameHashCode
// Il2CppName: set_styleNameHashCode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TextCore::Text::FontAsset::*)(int)>(&UnityEngine::TextCore::Text::FontAsset::set_styleNameHashCode)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::FontAsset*), "set_styleNameHashCode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::FontAsset::get_glyphTable
// Il2CppName: get_glyphTable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::List_1<::UnityEngine::TextCore::Glyph*>* (UnityEngine::TextCore::Text::FontAsset::*)()>(&UnityEngine::TextCore::Text::FontAsset::get_glyphTable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::FontAsset*), "get_glyphTable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::FontAsset::set_glyphTable
// Il2CppName: set_glyphTable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TextCore::Text::FontAsset::*)(::System::Collections::Generic::List_1<::UnityEngine::TextCore::Glyph*>*)>(&UnityEngine::TextCore::Text::FontAsset::set_glyphTable)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.TextCore", "Glyph")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::FontAsset*), "set_glyphTable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::FontAsset::get_glyphLookupTable
// Il2CppName: get_glyphLookupTable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::Dictionary_2<uint, ::UnityEngine::TextCore::Glyph*>* (UnityEngine::TextCore::Text::FontAsset::*)()>(&UnityEngine::TextCore::Text::FontAsset::get_glyphLookupTable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::FontAsset*), "get_glyphLookupTable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::FontAsset::get_characterTable
// Il2CppName: get_characterTable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::List_1<::UnityEngine::TextCore::Text::Character*>* (UnityEngine::TextCore::Text::FontAsset::*)()>(&UnityEngine::TextCore::Text::FontAsset::get_characterTable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::FontAsset*), "get_characterTable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::FontAsset::set_characterTable
// Il2CppName: set_characterTable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TextCore::Text::FontAsset::*)(::System::Collections::Generic::List_1<::UnityEngine::TextCore::Text::Character*>*)>(&UnityEngine::TextCore::Text::FontAsset::set_characterTable)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.TextCore.Text", "Character")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::FontAsset*), "set_characterTable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::FontAsset::get_characterLookupTable
// Il2CppName: get_characterLookupTable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::Dictionary_2<uint, ::UnityEngine::TextCore::Text::Character*>* (UnityEngine::TextCore::Text::FontAsset::*)()>(&UnityEngine::TextCore::Text::FontAsset::get_characterLookupTable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::FontAsset*), "get_characterLookupTable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::FontAsset::get_atlasTexture
// Il2CppName: get_atlasTexture
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Texture2D* (UnityEngine::TextCore::Text::FontAsset::*)()>(&UnityEngine::TextCore::Text::FontAsset::get_atlasTexture)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::FontAsset*), "get_atlasTexture", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::FontAsset::get_atlasTextures
// Il2CppName: get_atlasTextures
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::UnityEngine::Texture2D*> (UnityEngine::TextCore::Text::FontAsset::*)()>(&UnityEngine::TextCore::Text::FontAsset::get_atlasTextures)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::FontAsset*), "get_atlasTextures", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::FontAsset::set_atlasTextures
// Il2CppName: set_atlasTextures
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TextCore::Text::FontAsset::*)(::ArrayW<::UnityEngine::Texture2D*>)>(&UnityEngine::TextCore::Text::FontAsset::set_atlasTextures)> {
  static const MethodInfo* get() {
    static auto* value = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("UnityEngine", "Texture2D"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::FontAsset*), "set_atlasTextures", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::FontAsset::get_atlasTextureCount
// Il2CppName: get_atlasTextureCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::TextCore::Text::FontAsset::*)()>(&UnityEngine::TextCore::Text::FontAsset::get_atlasTextureCount)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::FontAsset*), "get_atlasTextureCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::FontAsset::get_isMultiAtlasTexturesEnabled
// Il2CppName: get_isMultiAtlasTexturesEnabled
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::TextCore::Text::FontAsset::*)()>(&UnityEngine::TextCore::Text::FontAsset::get_isMultiAtlasTexturesEnabled)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::FontAsset*), "get_isMultiAtlasTexturesEnabled", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::FontAsset::set_isMultiAtlasTexturesEnabled
// Il2CppName: set_isMultiAtlasTexturesEnabled
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TextCore::Text::FontAsset::*)(bool)>(&UnityEngine::TextCore::Text::FontAsset::set_isMultiAtlasTexturesEnabled)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::FontAsset*), "set_isMultiAtlasTexturesEnabled", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::FontAsset::get_clearDynamicDataOnBuild
// Il2CppName: get_clearDynamicDataOnBuild
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::TextCore::Text::FontAsset::*)()>(&UnityEngine::TextCore::Text::FontAsset::get_clearDynamicDataOnBuild)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::FontAsset*), "get_clearDynamicDataOnBuild", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::FontAsset::set_clearDynamicDataOnBuild
// Il2CppName: set_clearDynamicDataOnBuild
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TextCore::Text::FontAsset::*)(bool)>(&UnityEngine::TextCore::Text::FontAsset::set_clearDynamicDataOnBuild)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::FontAsset*), "set_clearDynamicDataOnBuild", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::FontAsset::get_atlasWidth
// Il2CppName: get_atlasWidth
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::TextCore::Text::FontAsset::*)()>(&UnityEngine::TextCore::Text::FontAsset::get_atlasWidth)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::FontAsset*), "get_atlasWidth", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::FontAsset::set_atlasWidth
// Il2CppName: set_atlasWidth
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TextCore::Text::FontAsset::*)(int)>(&UnityEngine::TextCore::Text::FontAsset::set_atlasWidth)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::FontAsset*), "set_atlasWidth", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::FontAsset::get_atlasHeight
// Il2CppName: get_atlasHeight
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::TextCore::Text::FontAsset::*)()>(&UnityEngine::TextCore::Text::FontAsset::get_atlasHeight)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::FontAsset*), "get_atlasHeight", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::FontAsset::set_atlasHeight
// Il2CppName: set_atlasHeight
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TextCore::Text::FontAsset::*)(int)>(&UnityEngine::TextCore::Text::FontAsset::set_atlasHeight)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::FontAsset*), "set_atlasHeight", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::FontAsset::get_atlasPadding
// Il2CppName: get_atlasPadding
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::TextCore::Text::FontAsset::*)()>(&UnityEngine::TextCore::Text::FontAsset::get_atlasPadding)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::FontAsset*), "get_atlasPadding", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::FontAsset::set_atlasPadding
// Il2CppName: set_atlasPadding
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TextCore::Text::FontAsset::*)(int)>(&UnityEngine::TextCore::Text::FontAsset::set_atlasPadding)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::FontAsset*), "set_atlasPadding", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::FontAsset::get_atlasRenderMode
// Il2CppName: get_atlasRenderMode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::TextCore::LowLevel::GlyphRenderMode (UnityEngine::TextCore::Text::FontAsset::*)()>(&UnityEngine::TextCore::Text::FontAsset::get_atlasRenderMode)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::FontAsset*), "get_atlasRenderMode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::FontAsset::set_atlasRenderMode
// Il2CppName: set_atlasRenderMode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TextCore::Text::FontAsset::*)(::UnityEngine::TextCore::LowLevel::GlyphRenderMode)>(&UnityEngine::TextCore::Text::FontAsset::set_atlasRenderMode)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.TextCore.LowLevel", "GlyphRenderMode")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::FontAsset*), "set_atlasRenderMode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::FontAsset::get_usedGlyphRects
// Il2CppName: get_usedGlyphRects
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::List_1<::UnityEngine::TextCore::GlyphRect>* (UnityEngine::TextCore::Text::FontAsset::*)()>(&UnityEngine::TextCore::Text::FontAsset::get_usedGlyphRects)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::FontAsset*), "get_usedGlyphRects", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::FontAsset::set_usedGlyphRects
// Il2CppName: set_usedGlyphRects
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TextCore::Text::FontAsset::*)(::System::Collections::Generic::List_1<::UnityEngine::TextCore::GlyphRect>*)>(&UnityEngine::TextCore::Text::FontAsset::set_usedGlyphRects)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.TextCore", "GlyphRect")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::FontAsset*), "set_usedGlyphRects", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::FontAsset::get_freeGlyphRects
// Il2CppName: get_freeGlyphRects
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::List_1<::UnityEngine::TextCore::GlyphRect>* (UnityEngine::TextCore::Text::FontAsset::*)()>(&UnityEngine::TextCore::Text::FontAsset::get_freeGlyphRects)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::FontAsset*), "get_freeGlyphRects", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::FontAsset::set_freeGlyphRects
// Il2CppName: set_freeGlyphRects
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TextCore::Text::FontAsset::*)(::System::Collections::Generic::List_1<::UnityEngine::TextCore::GlyphRect>*)>(&UnityEngine::TextCore::Text::FontAsset::set_freeGlyphRects)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.TextCore", "GlyphRect")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::FontAsset*), "set_freeGlyphRects", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::FontAsset::get_fontFeatureTable
// Il2CppName: get_fontFeatureTable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::TextCore::Text::FontFeatureTable* (UnityEngine::TextCore::Text::FontAsset::*)()>(&UnityEngine::TextCore::Text::FontAsset::get_fontFeatureTable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::FontAsset*), "get_fontFeatureTable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::FontAsset::set_fontFeatureTable
// Il2CppName: set_fontFeatureTable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TextCore::Text::FontAsset::*)(::UnityEngine::TextCore::Text::FontFeatureTable*)>(&UnityEngine::TextCore::Text::FontAsset::set_fontFeatureTable)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.TextCore.Text", "FontFeatureTable")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::FontAsset*), "set_fontFeatureTable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::FontAsset::get_fallbackFontAssetTable
// Il2CppName: get_fallbackFontAssetTable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::List_1<::UnityEngine::TextCore::Text::FontAsset*>* (UnityEngine::TextCore::Text::FontAsset::*)()>(&UnityEngine::TextCore::Text::FontAsset::get_fallbackFontAssetTable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::FontAsset*), "get_fallbackFontAssetTable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::FontAsset::set_fallbackFontAssetTable
// Il2CppName: set_fallbackFontAssetTable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TextCore::Text::FontAsset::*)(::System::Collections::Generic::List_1<::UnityEngine::TextCore::Text::FontAsset*>*)>(&UnityEngine::TextCore::Text::FontAsset::set_fallbackFontAssetTable)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.TextCore.Text", "FontAsset")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::FontAsset*), "set_fallbackFontAssetTable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::FontAsset::get_fontAssetCreationEditorSettings
// Il2CppName: get_fontAssetCreationEditorSettings
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::TextCore::Text::FontAssetCreationEditorSettings (UnityEngine::TextCore::Text::FontAsset::*)()>(&UnityEngine::TextCore::Text::FontAsset::get_fontAssetCreationEditorSettings)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::FontAsset*), "get_fontAssetCreationEditorSettings", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::FontAsset::set_fontAssetCreationEditorSettings
// Il2CppName: set_fontAssetCreationEditorSettings
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TextCore::Text::FontAsset::*)(::UnityEngine::TextCore::Text::FontAssetCreationEditorSettings)>(&UnityEngine::TextCore::Text::FontAsset::set_fontAssetCreationEditorSettings)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.TextCore.Text", "FontAssetCreationEditorSettings")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::FontAsset*), "set_fontAssetCreationEditorSettings", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::FontAsset::get_fontWeightTable
// Il2CppName: get_fontWeightTable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::UnityEngine::TextCore::Text::FontWeightPair> (UnityEngine::TextCore::Text::FontAsset::*)()>(&UnityEngine::TextCore::Text::FontAsset::get_fontWeightTable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::FontAsset*), "get_fontWeightTable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::FontAsset::set_fontWeightTable
// Il2CppName: set_fontWeightTable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TextCore::Text::FontAsset::*)(::ArrayW<::UnityEngine::TextCore::Text::FontWeightPair>)>(&UnityEngine::TextCore::Text::FontAsset::set_fontWeightTable)> {
  static const MethodInfo* get() {
    static auto* value = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("UnityEngine.TextCore.Text", "FontWeightPair"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::FontAsset*), "set_fontWeightTable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::FontAsset::get_regularStyleWeight
// Il2CppName: get_regularStyleWeight
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::TextCore::Text::FontAsset::*)()>(&UnityEngine::TextCore::Text::FontAsset::get_regularStyleWeight)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::FontAsset*), "get_regularStyleWeight", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::FontAsset::set_regularStyleWeight
// Il2CppName: set_regularStyleWeight
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TextCore::Text::FontAsset::*)(float)>(&UnityEngine::TextCore::Text::FontAsset::set_regularStyleWeight)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::FontAsset*), "set_regularStyleWeight", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::FontAsset::get_regularStyleSpacing
// Il2CppName: get_regularStyleSpacing
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::TextCore::Text::FontAsset::*)()>(&UnityEngine::TextCore::Text::FontAsset::get_regularStyleSpacing)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::FontAsset*), "get_regularStyleSpacing", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::FontAsset::set_regularStyleSpacing
// Il2CppName: set_regularStyleSpacing
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TextCore::Text::FontAsset::*)(float)>(&UnityEngine::TextCore::Text::FontAsset::set_regularStyleSpacing)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::FontAsset*), "set_regularStyleSpacing", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::FontAsset::get_boldStyleWeight
// Il2CppName: get_boldStyleWeight
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::TextCore::Text::FontAsset::*)()>(&UnityEngine::TextCore::Text::FontAsset::get_boldStyleWeight)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::FontAsset*), "get_boldStyleWeight", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::FontAsset::set_boldStyleWeight
// Il2CppName: set_boldStyleWeight
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TextCore::Text::FontAsset::*)(float)>(&UnityEngine::TextCore::Text::FontAsset::set_boldStyleWeight)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::FontAsset*), "set_boldStyleWeight", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::FontAsset::get_boldStyleSpacing
// Il2CppName: get_boldStyleSpacing
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::TextCore::Text::FontAsset::*)()>(&UnityEngine::TextCore::Text::FontAsset::get_boldStyleSpacing)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::FontAsset*), "get_boldStyleSpacing", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::FontAsset::set_boldStyleSpacing
// Il2CppName: set_boldStyleSpacing
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TextCore::Text::FontAsset::*)(float)>(&UnityEngine::TextCore::Text::FontAsset::set_boldStyleSpacing)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::FontAsset*), "set_boldStyleSpacing", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::FontAsset::get_italicStyleSlant
// Il2CppName: get_italicStyleSlant
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint8_t (UnityEngine::TextCore::Text::FontAsset::*)()>(&UnityEngine::TextCore::Text::FontAsset::get_italicStyleSlant)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::FontAsset*), "get_italicStyleSlant", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::FontAsset::set_italicStyleSlant
// Il2CppName: set_italicStyleSlant
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TextCore::Text::FontAsset::*)(uint8_t)>(&UnityEngine::TextCore::Text::FontAsset::set_italicStyleSlant)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::FontAsset*), "set_italicStyleSlant", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::FontAsset::get_tabMultiple
// Il2CppName: get_tabMultiple
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint8_t (UnityEngine::TextCore::Text::FontAsset::*)()>(&UnityEngine::TextCore::Text::FontAsset::get_tabMultiple)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::FontAsset*), "get_tabMultiple", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::FontAsset::set_tabMultiple
// Il2CppName: set_tabMultiple
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TextCore::Text::FontAsset::*)(uint8_t)>(&UnityEngine::TextCore::Text::FontAsset::set_tabMultiple)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::FontAsset*), "set_tabMultiple", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::FontAsset::CreateFontAsset
// Il2CppName: CreateFontAsset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::TextCore::Text::FontAsset* (*)(::StringW, ::StringW, int)>(&UnityEngine::TextCore::Text::FontAsset::CreateFontAsset)> {
  static const MethodInfo* get() {
    static auto* familyName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* styleName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* pointSize = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::FontAsset*), "CreateFontAsset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{familyName, styleName, pointSize});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::FontAsset::CreateFontAsset
// Il2CppName: CreateFontAsset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::TextCore::Text::FontAsset* (*)(::StringW, int, int, int, ::UnityEngine::TextCore::LowLevel::GlyphRenderMode, int, int)>(&UnityEngine::TextCore::Text::FontAsset::CreateFontAsset)> {
  static const MethodInfo* get() {
    static auto* fontFilePath = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* faceIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* samplingPointSize = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* atlasPadding = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* renderMode = &::il2cpp_utils::GetClassFromName("UnityEngine.TextCore.LowLevel", "GlyphRenderMode")->byval_arg;
    static auto* atlasWidth = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* atlasHeight = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::FontAsset*), "CreateFontAsset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{fontFilePath, faceIndex, samplingPointSize, atlasPadding, renderMode, atlasWidth, atlasHeight});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::FontAsset::CreateFontAsset
// Il2CppName: CreateFontAsset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::TextCore::Text::FontAsset* (*)(::StringW, int, int, int, ::UnityEngine::TextCore::LowLevel::GlyphRenderMode, int, int, ::UnityEngine::TextCore::Text::AtlasPopulationMode, bool)>(&UnityEngine::TextCore::Text::FontAsset::CreateFontAsset)> {
  static const MethodInfo* get() {
    static auto* fontFilePath = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* faceIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* samplingPointSize = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* atlasPadding = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* renderMode = &::il2cpp_utils::GetClassFromName("UnityEngine.TextCore.LowLevel", "GlyphRenderMode")->byval_arg;
    static auto* atlasWidth = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* atlasHeight = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* atlasPopulationMode = &::il2cpp_utils::GetClassFromName("UnityEngine.TextCore.Text", "AtlasPopulationMode")->byval_arg;
    static auto* enableMultiAtlasSupport = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::FontAsset*), "CreateFontAsset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{fontFilePath, faceIndex, samplingPointSize, atlasPadding, renderMode, atlasWidth, atlasHeight, atlasPopulationMode, enableMultiAtlasSupport});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::FontAsset::CreateFontAsset
// Il2CppName: CreateFontAsset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::TextCore::Text::FontAsset* (*)(::UnityEngine::Font*)>(&UnityEngine::TextCore::Text::FontAsset::CreateFontAsset)> {
  static const MethodInfo* get() {
    static auto* font = &::il2cpp_utils::GetClassFromName("UnityEngine", "Font")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::FontAsset*), "CreateFontAsset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{font});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::FontAsset::CreateFontAsset
// Il2CppName: CreateFontAsset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::TextCore::Text::FontAsset* (*)(::UnityEngine::Font*, int, int, ::UnityEngine::TextCore::LowLevel::GlyphRenderMode, int, int, ::UnityEngine::TextCore::Text::AtlasPopulationMode, bool)>(&UnityEngine::TextCore::Text::FontAsset::CreateFontAsset)> {
  static const MethodInfo* get() {
    static auto* font = &::il2cpp_utils::GetClassFromName("UnityEngine", "Font")->byval_arg;
    static auto* samplingPointSize = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* atlasPadding = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* renderMode = &::il2cpp_utils::GetClassFromName("UnityEngine.TextCore.LowLevel", "GlyphRenderMode")->byval_arg;
    static auto* atlasWidth = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* atlasHeight = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* atlasPopulationMode = &::il2cpp_utils::GetClassFromName("UnityEngine.TextCore.Text", "AtlasPopulationMode")->byval_arg;
    static auto* enableMultiAtlasSupport = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::FontAsset*), "CreateFontAsset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{font, samplingPointSize, atlasPadding, renderMode, atlasWidth, atlasHeight, atlasPopulationMode, enableMultiAtlasSupport});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::FontAsset::CreateFontAsset
// Il2CppName: CreateFontAsset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::TextCore::Text::FontAsset* (*)(::UnityEngine::Font*, int, int, int, ::UnityEngine::TextCore::LowLevel::GlyphRenderMode, int, int, ::UnityEngine::TextCore::Text::AtlasPopulationMode, bool)>(&UnityEngine::TextCore::Text::FontAsset::CreateFontAsset)> {
  static const MethodInfo* get() {
    static auto* font = &::il2cpp_utils::GetClassFromName("UnityEngine", "Font")->byval_arg;
    static auto* faceIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* samplingPointSize = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* atlasPadding = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* renderMode = &::il2cpp_utils::GetClassFromName("UnityEngine.TextCore.LowLevel", "GlyphRenderMode")->byval_arg;
    static auto* atlasWidth = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* atlasHeight = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* atlasPopulationMode = &::il2cpp_utils::GetClassFromName("UnityEngine.TextCore.Text", "AtlasPopulationMode")->byval_arg;
    static auto* enableMultiAtlasSupport = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::FontAsset*), "CreateFontAsset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{font, faceIndex, samplingPointSize, atlasPadding, renderMode, atlasWidth, atlasHeight, atlasPopulationMode, enableMultiAtlasSupport});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::FontAsset::CreateFontAssetInstance
// Il2CppName: CreateFontAssetInstance
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::TextCore::Text::FontAsset* (*)(::UnityEngine::Font*, int, ::UnityEngine::TextCore::LowLevel::GlyphRenderMode, int, int, ::UnityEngine::TextCore::Text::AtlasPopulationMode, bool)>(&UnityEngine::TextCore::Text::FontAsset::CreateFontAssetInstance)> {
  static const MethodInfo* get() {
    static auto* font = &::il2cpp_utils::GetClassFromName("UnityEngine", "Font")->byval_arg;
    static auto* atlasPadding = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* renderMode = &::il2cpp_utils::GetClassFromName("UnityEngine.TextCore.LowLevel", "GlyphRenderMode")->byval_arg;
    static auto* atlasWidth = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* atlasHeight = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* atlasPopulationMode = &::il2cpp_utils::GetClassFromName("UnityEngine.TextCore.Text", "AtlasPopulationMode")->byval_arg;
    static auto* enableMultiAtlasSupport = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::FontAsset*), "CreateFontAssetInstance", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{font, atlasPadding, renderMode, atlasWidth, atlasHeight, atlasPopulationMode, enableMultiAtlasSupport});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::FontAsset::Awake
// Il2CppName: Awake
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TextCore::Text::FontAsset::*)()>(&UnityEngine::TextCore::Text::FontAsset::Awake)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::FontAsset*), "Awake", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::FontAsset::OnDestroy
// Il2CppName: OnDestroy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TextCore::Text::FontAsset::*)()>(&UnityEngine::TextCore::Text::FontAsset::OnDestroy)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::FontAsset*), "OnDestroy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::FontAsset::ReadFontAssetDefinition
// Il2CppName: ReadFontAssetDefinition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TextCore::Text::FontAsset::*)()>(&UnityEngine::TextCore::Text::FontAsset::ReadFontAssetDefinition)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::FontAsset*), "ReadFontAssetDefinition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::FontAsset::InitializeDictionaryLookupTables
// Il2CppName: InitializeDictionaryLookupTables
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TextCore::Text::FontAsset::*)()>(&UnityEngine::TextCore::Text::FontAsset::InitializeDictionaryLookupTables)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::FontAsset*), "InitializeDictionaryLookupTables", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::FontAsset::InitializeGlyphLookupDictionary
// Il2CppName: InitializeGlyphLookupDictionary
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TextCore::Text::FontAsset::*)()>(&UnityEngine::TextCore::Text::FontAsset::InitializeGlyphLookupDictionary)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::FontAsset*), "InitializeGlyphLookupDictionary", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::FontAsset::InitializeCharacterLookupDictionary
// Il2CppName: InitializeCharacterLookupDictionary
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TextCore::Text::FontAsset::*)()>(&UnityEngine::TextCore::Text::FontAsset::InitializeCharacterLookupDictionary)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::FontAsset*), "InitializeCharacterLookupDictionary", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::FontAsset::InitializeLigatureSubstitutionLookupDictionary
// Il2CppName: InitializeLigatureSubstitutionLookupDictionary
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TextCore::Text::FontAsset::*)()>(&UnityEngine::TextCore::Text::FontAsset::InitializeLigatureSubstitutionLookupDictionary)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::FontAsset*), "InitializeLigatureSubstitutionLookupDictionary", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::FontAsset::InitializeGlyphPaidAdjustmentRecordsLookupDictionary
// Il2CppName: InitializeGlyphPaidAdjustmentRecordsLookupDictionary
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TextCore::Text::FontAsset::*)()>(&UnityEngine::TextCore::Text::FontAsset::InitializeGlyphPaidAdjustmentRecordsLookupDictionary)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::FontAsset*), "InitializeGlyphPaidAdjustmentRecordsLookupDictionary", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::FontAsset::InitializeMarkToBaseAdjustmentRecordsLookupDictionary
// Il2CppName: InitializeMarkToBaseAdjustmentRecordsLookupDictionary
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TextCore::Text::FontAsset::*)()>(&UnityEngine::TextCore::Text::FontAsset::InitializeMarkToBaseAdjustmentRecordsLookupDictionary)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::FontAsset*), "InitializeMarkToBaseAdjustmentRecordsLookupDictionary", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::FontAsset::InitializeMarkToMarkAdjustmentRecordsLookupDictionary
// Il2CppName: InitializeMarkToMarkAdjustmentRecordsLookupDictionary
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TextCore::Text::FontAsset::*)()>(&UnityEngine::TextCore::Text::FontAsset::InitializeMarkToMarkAdjustmentRecordsLookupDictionary)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::FontAsset*), "InitializeMarkToMarkAdjustmentRecordsLookupDictionary", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::FontAsset::AddSynthesizedCharactersAndFaceMetrics
// Il2CppName: AddSynthesizedCharactersAndFaceMetrics
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TextCore::Text::FontAsset::*)()>(&UnityEngine::TextCore::Text::FontAsset::AddSynthesizedCharactersAndFaceMetrics)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::FontAsset*), "AddSynthesizedCharactersAndFaceMetrics", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::FontAsset::AddSynthesizedCharacter
// Il2CppName: AddSynthesizedCharacter
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TextCore::Text::FontAsset::*)(uint, bool, bool)>(&UnityEngine::TextCore::Text::FontAsset::AddSynthesizedCharacter)> {
  static const MethodInfo* get() {
    static auto* unicode = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    static auto* isFontFaceLoaded = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* addImmediately = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::FontAsset*), "AddSynthesizedCharacter", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{unicode, isFontFaceLoaded, addImmediately});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::FontAsset::AddCharacterToLookupCache
// Il2CppName: AddCharacterToLookupCache
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TextCore::Text::FontAsset::*)(uint, ::UnityEngine::TextCore::Text::Character*)>(&UnityEngine::TextCore::Text::FontAsset::AddCharacterToLookupCache)> {
  static const MethodInfo* get() {
    static auto* unicode = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    static auto* character = &::il2cpp_utils::GetClassFromName("UnityEngine.TextCore.Text", "Character")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::FontAsset*), "AddCharacterToLookupCache", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{unicode, character});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::FontAsset::LoadFontFace
// Il2CppName: LoadFontFace
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::TextCore::LowLevel::FontEngineError (UnityEngine::TextCore::Text::FontAsset::*)()>(&UnityEngine::TextCore::Text::FontAsset::LoadFontFace)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::FontAsset*), "LoadFontFace", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::FontAsset::SortCharacterTable
// Il2CppName: SortCharacterTable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TextCore::Text::FontAsset::*)()>(&UnityEngine::TextCore::Text::FontAsset::SortCharacterTable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::FontAsset*), "SortCharacterTable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::FontAsset::SortGlyphTable
// Il2CppName: SortGlyphTable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TextCore::Text::FontAsset::*)()>(&UnityEngine::TextCore::Text::FontAsset::SortGlyphTable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::FontAsset*), "SortGlyphTable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::FontAsset::SortFontFeatureTable
// Il2CppName: SortFontFeatureTable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TextCore::Text::FontAsset::*)()>(&UnityEngine::TextCore::Text::FontAsset::SortFontFeatureTable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::FontAsset*), "SortFontFeatureTable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::FontAsset::SortAllTables
// Il2CppName: SortAllTables
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TextCore::Text::FontAsset::*)()>(&UnityEngine::TextCore::Text::FontAsset::SortAllTables)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::FontAsset*), "SortAllTables", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::FontAsset::HasCharacter
// Il2CppName: HasCharacter
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::TextCore::Text::FontAsset::*)(int)>(&UnityEngine::TextCore::Text::FontAsset::HasCharacter)> {
  static const MethodInfo* get() {
    static auto* character = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::FontAsset*), "HasCharacter", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{character});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::FontAsset::HasCharacter
// Il2CppName: HasCharacter
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::TextCore::Text::FontAsset::*)(::Il2CppChar, bool, bool)>(&UnityEngine::TextCore::Text::FontAsset::HasCharacter)> {
  static const MethodInfo* get() {
    static auto* character = &::il2cpp_utils::GetClassFromName("System", "Char")->byval_arg;
    static auto* searchFallbacks = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* tryAddCharacter = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::FontAsset*), "HasCharacter", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{character, searchFallbacks, tryAddCharacter});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::FontAsset::HasCharacter
// Il2CppName: HasCharacter
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::TextCore::Text::FontAsset::*)(uint, bool, bool)>(&UnityEngine::TextCore::Text::FontAsset::HasCharacter)> {
  static const MethodInfo* get() {
    static auto* character = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    static auto* searchFallbacks = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* tryAddCharacter = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::FontAsset*), "HasCharacter", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{character, searchFallbacks, tryAddCharacter});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::FontAsset::HasCharacter_Internal
// Il2CppName: HasCharacter_Internal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::TextCore::Text::FontAsset::*)(uint, bool, bool)>(&UnityEngine::TextCore::Text::FontAsset::HasCharacter_Internal)> {
  static const MethodInfo* get() {
    static auto* character = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    static auto* searchFallbacks = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* tryAddCharacter = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::FontAsset*), "HasCharacter_Internal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{character, searchFallbacks, tryAddCharacter});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::FontAsset::HasCharacters
// Il2CppName: HasCharacters
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::TextCore::Text::FontAsset::*)(::StringW, ByRef<::System::Collections::Generic::List_1<::Il2CppChar>*>)>(&UnityEngine::TextCore::Text::FontAsset::HasCharacters)> {
  static const MethodInfo* get() {
    static auto* text = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* missingCharacters = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Char")})->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::FontAsset*), "HasCharacters", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{text, missingCharacters});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::FontAsset::HasCharacters
// Il2CppName: HasCharacters
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::TextCore::Text::FontAsset::*)(::StringW, ByRef<::ArrayW<uint>>, bool, bool)>(&UnityEngine::TextCore::Text::FontAsset::HasCharacters)> {
  static const MethodInfo* get() {
    static auto* text = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* missingCharacters = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "UInt32"), 1)->this_arg;
    static auto* searchFallbacks = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* tryAddCharacter = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::FontAsset*), "HasCharacters", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{text, missingCharacters, searchFallbacks, tryAddCharacter});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::FontAsset::HasCharacters
// Il2CppName: HasCharacters
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::TextCore::Text::FontAsset::*)(::StringW)>(&UnityEngine::TextCore::Text::FontAsset::HasCharacters)> {
  static const MethodInfo* get() {
    static auto* text = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::FontAsset*), "HasCharacters", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{text});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::FontAsset::GetCharacters
// Il2CppName: GetCharacters
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::UnityEngine::TextCore::Text::FontAsset*)>(&UnityEngine::TextCore::Text::FontAsset::GetCharacters)> {
  static const MethodInfo* get() {
    static auto* fontAsset = &::il2cpp_utils::GetClassFromName("UnityEngine.TextCore.Text", "FontAsset")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::FontAsset*), "GetCharacters", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{fontAsset});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::FontAsset::GetCharactersArray
// Il2CppName: GetCharactersArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<int> (*)(::UnityEngine::TextCore::Text::FontAsset*)>(&UnityEngine::TextCore::Text::FontAsset::GetCharactersArray)> {
  static const MethodInfo* get() {
    static auto* fontAsset = &::il2cpp_utils::GetClassFromName("UnityEngine.TextCore.Text", "FontAsset")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::FontAsset*), "GetCharactersArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{fontAsset});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::FontAsset::GetGlyphIndex
// Il2CppName: GetGlyphIndex
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (UnityEngine::TextCore::Text::FontAsset::*)(uint)>(&UnityEngine::TextCore::Text::FontAsset::GetGlyphIndex)> {
  static const MethodInfo* get() {
    static auto* unicode = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::FontAsset*), "GetGlyphIndex", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{unicode});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::FontAsset::RegisterFontAssetForFontFeatureUpdate
// Il2CppName: RegisterFontAssetForFontFeatureUpdate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::TextCore::Text::FontAsset*)>(&UnityEngine::TextCore::Text::FontAsset::RegisterFontAssetForFontFeatureUpdate)> {
  static const MethodInfo* get() {
    static auto* fontAsset = &::il2cpp_utils::GetClassFromName("UnityEngine.TextCore.Text", "FontAsset")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::FontAsset*), "RegisterFontAssetForFontFeatureUpdate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{fontAsset});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::FontAsset::UpdateFontFeaturesForFontAssetsInQueue
// Il2CppName: UpdateFontFeaturesForFontAssetsInQueue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&UnityEngine::TextCore::Text::FontAsset::UpdateFontFeaturesForFontAssetsInQueue)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::FontAsset*), "UpdateFontFeaturesForFontAssetsInQueue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::FontAsset::RegisterAtlasTextureForApply
// Il2CppName: RegisterAtlasTextureForApply
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::Texture2D*)>(&UnityEngine::TextCore::Text::FontAsset::RegisterAtlasTextureForApply)> {
  static const MethodInfo* get() {
    static auto* texture = &::il2cpp_utils::GetClassFromName("UnityEngine", "Texture2D")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::FontAsset*), "RegisterAtlasTextureForApply", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{texture});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::FontAsset::UpdateAtlasTexturesInQueue
// Il2CppName: UpdateAtlasTexturesInQueue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&UnityEngine::TextCore::Text::FontAsset::UpdateAtlasTexturesInQueue)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::FontAsset*), "UpdateAtlasTexturesInQueue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::FontAsset::UpdateFontAssetsInUpdateQueue
// Il2CppName: UpdateFontAssetsInUpdateQueue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&UnityEngine::TextCore::Text::FontAsset::UpdateFontAssetsInUpdateQueue)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::FontAsset*), "UpdateFontAssetsInUpdateQueue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::FontAsset::TryAddCharacters
// Il2CppName: TryAddCharacters
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::TextCore::Text::FontAsset::*)(::ArrayW<uint>, bool)>(&UnityEngine::TextCore::Text::FontAsset::TryAddCharacters)> {
  static const MethodInfo* get() {
    static auto* unicodes = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "UInt32"), 1)->byval_arg;
    static auto* includeFontFeatures = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::FontAsset*), "TryAddCharacters", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{unicodes, includeFontFeatures});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::FontAsset::TryAddCharacters
// Il2CppName: TryAddCharacters
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::TextCore::Text::FontAsset::*)(::ArrayW<uint>, ByRef<::ArrayW<uint>>, bool)>(&UnityEngine::TextCore::Text::FontAsset::TryAddCharacters)> {
  static const MethodInfo* get() {
    static auto* unicodes = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "UInt32"), 1)->byval_arg;
    static auto* missingUnicodes = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "UInt32"), 1)->this_arg;
    static auto* includeFontFeatures = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::FontAsset*), "TryAddCharacters", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{unicodes, missingUnicodes, includeFontFeatures});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::FontAsset::TryAddCharacters
// Il2CppName: TryAddCharacters
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::TextCore::Text::FontAsset::*)(::StringW, bool)>(&UnityEngine::TextCore::Text::FontAsset::TryAddCharacters)> {
  static const MethodInfo* get() {
    static auto* characters = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* includeFontFeatures = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::FontAsset*), "TryAddCharacters", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{characters, includeFontFeatures});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::FontAsset::TryAddCharacters
// Il2CppName: TryAddCharacters
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::TextCore::Text::FontAsset::*)(::StringW, ByRef<::StringW>, bool)>(&UnityEngine::TextCore::Text::FontAsset::TryAddCharacters)> {
  static const MethodInfo* get() {
    static auto* characters = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* missingCharacters = &::il2cpp_utils::GetClassFromName("System", "String")->this_arg;
    static auto* includeFontFeatures = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::FontAsset*), "TryAddCharacters", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{characters, missingCharacters, includeFontFeatures});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::FontAsset::TryAddGlyphInternal
// Il2CppName: TryAddGlyphInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::TextCore::Text::FontAsset::*)(uint, ByRef<::UnityEngine::TextCore::Glyph*>)>(&UnityEngine::TextCore::Text::FontAsset::TryAddGlyphInternal)> {
  static const MethodInfo* get() {
    static auto* glyphIndex = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    static auto* glyph = &::il2cpp_utils::GetClassFromName("UnityEngine.TextCore", "Glyph")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::FontAsset*), "TryAddGlyphInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{glyphIndex, glyph});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::FontAsset::TryAddCharacterInternal
// Il2CppName: TryAddCharacterInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::TextCore::Text::FontAsset::*)(uint, ByRef<::UnityEngine::TextCore::Text::Character*>, bool)>(&UnityEngine::TextCore::Text::FontAsset::TryAddCharacterInternal)> {
  static const MethodInfo* get() {
    static auto* unicode = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    static auto* character = &::il2cpp_utils::GetClassFromName("UnityEngine.TextCore.Text", "Character")->this_arg;
    static auto* shouldGetFontFeatures = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::FontAsset*), "TryAddCharacterInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{unicode, character, shouldGetFontFeatures});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::FontAsset::TryGetCharacter_and_QueueRenderToTexture
// Il2CppName: TryGetCharacter_and_QueueRenderToTexture
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::TextCore::Text::FontAsset::*)(uint, ByRef<::UnityEngine::TextCore::Text::Character*>, bool)>(&UnityEngine::TextCore::Text::FontAsset::TryGetCharacter_and_QueueRenderToTexture)> {
  static const MethodInfo* get() {
    static auto* unicode = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    static auto* character = &::il2cpp_utils::GetClassFromName("UnityEngine.TextCore.Text", "Character")->this_arg;
    static auto* shouldGetFontFeatures = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::FontAsset*), "TryGetCharacter_and_QueueRenderToTexture", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{unicode, character, shouldGetFontFeatures});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::FontAsset::TryAddGlyphsToAtlasTextures
// Il2CppName: TryAddGlyphsToAtlasTextures
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TextCore::Text::FontAsset::*)()>(&UnityEngine::TextCore::Text::FontAsset::TryAddGlyphsToAtlasTextures)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::FontAsset*), "TryAddGlyphsToAtlasTextures", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::FontAsset::TryAddGlyphsToNewAtlasTexture
// Il2CppName: TryAddGlyphsToNewAtlasTexture
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::TextCore::Text::FontAsset::*)()>(&UnityEngine::TextCore::Text::FontAsset::TryAddGlyphsToNewAtlasTexture)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::FontAsset*), "TryAddGlyphsToNewAtlasTexture", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::FontAsset::SetupNewAtlasTexture
// Il2CppName: SetupNewAtlasTexture
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TextCore::Text::FontAsset::*)()>(&UnityEngine::TextCore::Text::FontAsset::SetupNewAtlasTexture)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::FontAsset*), "SetupNewAtlasTexture", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::FontAsset::UpdateAllFontFeatures
// Il2CppName: UpdateAllFontFeatures
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TextCore::Text::FontAsset::*)()>(&UnityEngine::TextCore::Text::FontAsset::UpdateAllFontFeatures)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::FontAsset*), "UpdateAllFontFeatures", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::FontAsset::UpdateGlyphAdjustmentRecords
// Il2CppName: UpdateGlyphAdjustmentRecords
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TextCore::Text::FontAsset::*)()>(&UnityEngine::TextCore::Text::FontAsset::UpdateGlyphAdjustmentRecords)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::FontAsset*), "UpdateGlyphAdjustmentRecords", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::FontAsset::UpdateGlyphAdjustmentRecords
// Il2CppName: UpdateGlyphAdjustmentRecords
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TextCore::Text::FontAsset::*)(::ArrayW<uint>)>(&UnityEngine::TextCore::Text::FontAsset::UpdateGlyphAdjustmentRecords)> {
  static const MethodInfo* get() {
    static auto* glyphIndexes = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "UInt32"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::FontAsset*), "UpdateGlyphAdjustmentRecords", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{glyphIndexes});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::FontAsset::UpdateGlyphAdjustmentRecords
// Il2CppName: UpdateGlyphAdjustmentRecords
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TextCore::Text::FontAsset::*)(::System::Collections::Generic::List_1<uint>*)>(&UnityEngine::TextCore::Text::FontAsset::UpdateGlyphAdjustmentRecords)> {
  static const MethodInfo* get() {
    static auto* glyphIndexes = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "UInt32")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::FontAsset*), "UpdateGlyphAdjustmentRecords", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{glyphIndexes});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::FontAsset::UpdateGlyphAdjustmentRecords
// Il2CppName: UpdateGlyphAdjustmentRecords
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TextCore::Text::FontAsset::*)(::System::Collections::Generic::List_1<uint>*, ::System::Collections::Generic::List_1<uint>*)>(&UnityEngine::TextCore::Text::FontAsset::UpdateGlyphAdjustmentRecords)> {
  static const MethodInfo* get() {
    static auto* newGlyphIndexes = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "UInt32")})->byval_arg;
    static auto* allGlyphIndexes = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "UInt32")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::FontAsset*), "UpdateGlyphAdjustmentRecords", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{newGlyphIndexes, allGlyphIndexes});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::FontAsset::CopyListDataToArray
// Il2CppName: CopyListDataToArray
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::FontAsset::ClearFontAssetData
// Il2CppName: ClearFontAssetData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TextCore::Text::FontAsset::*)(bool)>(&UnityEngine::TextCore::Text::FontAsset::ClearFontAssetData)> {
  static const MethodInfo* get() {
    static auto* setAtlasSizeToZero = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::FontAsset*), "ClearFontAssetData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{setAtlasSizeToZero});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::FontAsset::ClearFontAssetDataInternal
// Il2CppName: ClearFontAssetDataInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TextCore::Text::FontAsset::*)(bool)>(&UnityEngine::TextCore::Text::FontAsset::ClearFontAssetDataInternal)> {
  static const MethodInfo* get() {
    static auto* clearFontFeatures = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::FontAsset*), "ClearFontAssetDataInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{clearFontFeatures});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::FontAsset::UpdateFontAssetData
// Il2CppName: UpdateFontAssetData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TextCore::Text::FontAsset::*)()>(&UnityEngine::TextCore::Text::FontAsset::UpdateFontAssetData)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::FontAsset*), "UpdateFontAssetData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::FontAsset::ClearFontAssetTables
// Il2CppName: ClearFontAssetTables
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TextCore::Text::FontAsset::*)(bool)>(&UnityEngine::TextCore::Text::FontAsset::ClearFontAssetTables)> {
  static const MethodInfo* get() {
    static auto* clearFontFeatures = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::FontAsset*), "ClearFontAssetTables", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{clearFontFeatures});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::FontAsset::ClearAtlasTextures
// Il2CppName: ClearAtlasTextures
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TextCore::Text::FontAsset::*)(bool)>(&UnityEngine::TextCore::Text::FontAsset::ClearAtlasTextures)> {
  static const MethodInfo* get() {
    static auto* setAtlasSizeToZero = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::FontAsset*), "ClearAtlasTextures", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{setAtlasSizeToZero});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::FontAsset::DestroyAtlasTextures
// Il2CppName: DestroyAtlasTextures
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TextCore::Text::FontAsset::*)()>(&UnityEngine::TextCore::Text::FontAsset::DestroyAtlasTextures)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::FontAsset*), "DestroyAtlasTextures", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::FontAsset::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&UnityEngine::TextCore::Text::FontAsset::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::FontAsset*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::FontAsset::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
