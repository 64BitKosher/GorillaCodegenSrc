// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Enum
#include "System/Enum.hpp"
// Completed includes
// Type namespace: UnityEngine.TextCore.Text
namespace UnityEngine::TextCore::Text {
  // Forward declaring type: TextFontWeight
  struct TextFontWeight;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::TextCore::Text::TextFontWeight, "UnityEngine.TextCore.Text", "TextFontWeight");
// Type namespace: UnityEngine.TextCore.Text
namespace UnityEngine::TextCore::Text {
  // Size: 0x4
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.TextCore.Text.TextFontWeight
  // [TokenAttribute] Offset: FFFFFFFF
  struct TextFontWeight/*, public ::System::Enum*/ {
    public:
    public:
    // public System.Int32 value__
    // Size: 0x4
    // Offset: 0x0
    int value;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Creating value type constructor for type: TextFontWeight
    constexpr TextFontWeight(int value_ = {}) noexcept : value{value_} {}
    // Creating interface conversion operator: operator ::System::Enum
    operator ::System::Enum() noexcept {
      return *reinterpret_cast<::System::Enum*>(this);
    }
    // Creating conversion operator: operator int
    constexpr operator int() const noexcept {
      return value;
    }
    // static field const value: static public UnityEngine.TextCore.Text.TextFontWeight Thin
    static constexpr const int Thin = 100;
    // Get static field: static public UnityEngine.TextCore.Text.TextFontWeight Thin
    static ::UnityEngine::TextCore::Text::TextFontWeight _get_Thin();
    // Set static field: static public UnityEngine.TextCore.Text.TextFontWeight Thin
    static void _set_Thin(::UnityEngine::TextCore::Text::TextFontWeight value);
    // static field const value: static public UnityEngine.TextCore.Text.TextFontWeight ExtraLight
    static constexpr const int ExtraLight = 200;
    // Get static field: static public UnityEngine.TextCore.Text.TextFontWeight ExtraLight
    static ::UnityEngine::TextCore::Text::TextFontWeight _get_ExtraLight();
    // Set static field: static public UnityEngine.TextCore.Text.TextFontWeight ExtraLight
    static void _set_ExtraLight(::UnityEngine::TextCore::Text::TextFontWeight value);
    // static field const value: static public UnityEngine.TextCore.Text.TextFontWeight Light
    static constexpr const int Light = 300;
    // Get static field: static public UnityEngine.TextCore.Text.TextFontWeight Light
    static ::UnityEngine::TextCore::Text::TextFontWeight _get_Light();
    // Set static field: static public UnityEngine.TextCore.Text.TextFontWeight Light
    static void _set_Light(::UnityEngine::TextCore::Text::TextFontWeight value);
    // static field const value: static public UnityEngine.TextCore.Text.TextFontWeight Regular
    static constexpr const int Regular = 400;
    // Get static field: static public UnityEngine.TextCore.Text.TextFontWeight Regular
    static ::UnityEngine::TextCore::Text::TextFontWeight _get_Regular();
    // Set static field: static public UnityEngine.TextCore.Text.TextFontWeight Regular
    static void _set_Regular(::UnityEngine::TextCore::Text::TextFontWeight value);
    // static field const value: static public UnityEngine.TextCore.Text.TextFontWeight Medium
    static constexpr const int Medium = 500;
    // Get static field: static public UnityEngine.TextCore.Text.TextFontWeight Medium
    static ::UnityEngine::TextCore::Text::TextFontWeight _get_Medium();
    // Set static field: static public UnityEngine.TextCore.Text.TextFontWeight Medium
    static void _set_Medium(::UnityEngine::TextCore::Text::TextFontWeight value);
    // static field const value: static public UnityEngine.TextCore.Text.TextFontWeight SemiBold
    static constexpr const int SemiBold = 600;
    // Get static field: static public UnityEngine.TextCore.Text.TextFontWeight SemiBold
    static ::UnityEngine::TextCore::Text::TextFontWeight _get_SemiBold();
    // Set static field: static public UnityEngine.TextCore.Text.TextFontWeight SemiBold
    static void _set_SemiBold(::UnityEngine::TextCore::Text::TextFontWeight value);
    // static field const value: static public UnityEngine.TextCore.Text.TextFontWeight Bold
    static constexpr const int Bold = 700;
    // Get static field: static public UnityEngine.TextCore.Text.TextFontWeight Bold
    static ::UnityEngine::TextCore::Text::TextFontWeight _get_Bold();
    // Set static field: static public UnityEngine.TextCore.Text.TextFontWeight Bold
    static void _set_Bold(::UnityEngine::TextCore::Text::TextFontWeight value);
    // static field const value: static public UnityEngine.TextCore.Text.TextFontWeight Heavy
    static constexpr const int Heavy = 800;
    // Get static field: static public UnityEngine.TextCore.Text.TextFontWeight Heavy
    static ::UnityEngine::TextCore::Text::TextFontWeight _get_Heavy();
    // Set static field: static public UnityEngine.TextCore.Text.TextFontWeight Heavy
    static void _set_Heavy(::UnityEngine::TextCore::Text::TextFontWeight value);
    // static field const value: static public UnityEngine.TextCore.Text.TextFontWeight Black
    static constexpr const int Black = 900;
    // Get static field: static public UnityEngine.TextCore.Text.TextFontWeight Black
    static ::UnityEngine::TextCore::Text::TextFontWeight _get_Black();
    // Set static field: static public UnityEngine.TextCore.Text.TextFontWeight Black
    static void _set_Black(::UnityEngine::TextCore::Text::TextFontWeight value);
    // Get instance field reference: public System.Int32 value__
    [[deprecated("Use field access instead!")]] int& dyn_value__();
  }; // UnityEngine.TextCore.Text.TextFontWeight
  #pragma pack(pop)
  static check_size<sizeof(TextFontWeight), 0 + sizeof(int)> __UnityEngine_TextCore_Text_TextFontWeightSizeCheck;
  static_assert(sizeof(TextFontWeight) == 0x4);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
