// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::TextCore::Text
namespace UnityEngine::TextCore::Text {
  // Forward declaring type: FontAsset
  class FontAsset;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: Dictionary`2<TKey, TValue>
  template<typename TKey, typename TValue>
  class Dictionary_2;
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Completed forward declares
// Type namespace: UnityEngine.TextCore.Text
namespace UnityEngine::TextCore::Text {
  // Forward declaring type: TextResourceManager
  class TextResourceManager;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::TextCore::Text::TextResourceManager);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::TextCore::Text::TextResourceManager*, "UnityEngine.TextCore.Text", "TextResourceManager");
// Type namespace: UnityEngine.TextCore.Text
namespace UnityEngine::TextCore::Text {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.TextCore.Text.TextResourceManager
  // [TokenAttribute] Offset: FFFFFFFF
  class TextResourceManager : public ::Il2CppObject {
    public:
    // Nested type: ::UnityEngine::TextCore::Text::TextResourceManager::FontAssetRef
    struct FontAssetRef;
    // Size: 0x20
    #pragma pack(push, 1)
    // WARNING Layout: Sequential may not be correctly taken into account!
    // Autogenerated type: UnityEngine.TextCore.Text.TextResourceManager/FontAssetRef
    // [TokenAttribute] Offset: FFFFFFFF
    struct FontAssetRef/*, public ::System::ValueType*/ {
      public:
      public:
      // public System.Int32 nameHashCode
      // Size: 0x4
      // Offset: 0x0
      int nameHashCode;
      // Field size check
      static_assert(sizeof(int) == 0x4);
      // public System.Int32 familyNameHashCode
      // Size: 0x4
      // Offset: 0x4
      int familyNameHashCode;
      // Field size check
      static_assert(sizeof(int) == 0x4);
      // public System.Int32 styleNameHashCode
      // Size: 0x4
      // Offset: 0x8
      int styleNameHashCode;
      // Field size check
      static_assert(sizeof(int) == 0x4);
      // Padding between fields: styleNameHashCode and: familyNameAndStyleHashCode
      char __padding2[0x4] = {};
      // public System.Int64 familyNameAndStyleHashCode
      // Size: 0x8
      // Offset: 0x10
      int64_t familyNameAndStyleHashCode;
      // Field size check
      static_assert(sizeof(int64_t) == 0x8);
      // public readonly UnityEngine.TextCore.Text.FontAsset fontAsset
      // Size: 0x8
      // Offset: 0x18
      ::UnityEngine::TextCore::Text::FontAsset* fontAsset;
      // Field size check
      static_assert(sizeof(::UnityEngine::TextCore::Text::FontAsset*) == 0x8);
      public:
      // Creating value type constructor for type: FontAssetRef
      constexpr FontAssetRef(int nameHashCode_ = {}, int familyNameHashCode_ = {}, int styleNameHashCode_ = {}, int64_t familyNameAndStyleHashCode_ = {}, ::UnityEngine::TextCore::Text::FontAsset* fontAsset_ = {}) noexcept : nameHashCode{nameHashCode_}, familyNameHashCode{familyNameHashCode_}, styleNameHashCode{styleNameHashCode_}, familyNameAndStyleHashCode{familyNameAndStyleHashCode_}, fontAsset{fontAsset_} {}
      // Creating interface conversion operator: operator ::System::ValueType
      operator ::System::ValueType() noexcept {
        return *reinterpret_cast<::System::ValueType*>(this);
      }
      // Get instance field reference: public System.Int32 nameHashCode
      [[deprecated("Use field access instead!")]] int& dyn_nameHashCode();
      // Get instance field reference: public System.Int32 familyNameHashCode
      [[deprecated("Use field access instead!")]] int& dyn_familyNameHashCode();
      // Get instance field reference: public System.Int32 styleNameHashCode
      [[deprecated("Use field access instead!")]] int& dyn_styleNameHashCode();
      // Get instance field reference: public System.Int64 familyNameAndStyleHashCode
      [[deprecated("Use field access instead!")]] int64_t& dyn_familyNameAndStyleHashCode();
      // Get instance field reference: public readonly UnityEngine.TextCore.Text.FontAsset fontAsset
      [[deprecated("Use field access instead!")]] ::UnityEngine::TextCore::Text::FontAsset*& dyn_fontAsset();
      // public System.Void .ctor(System.Int32 nameHashCode, System.Int32 familyNameHashCode, System.Int32 styleNameHashCode, UnityEngine.TextCore.Text.FontAsset fontAsset)
      // Offset: 0x5572B24
      FontAssetRef(int nameHashCode, int familyNameHashCode, int styleNameHashCode, ::UnityEngine::TextCore::Text::FontAsset* fontAsset);
    }; // UnityEngine.TextCore.Text.TextResourceManager/FontAssetRef
    #pragma pack(pop)
    static check_size<sizeof(TextResourceManager::FontAssetRef), 24 + sizeof(::UnityEngine::TextCore::Text::FontAsset*)> __UnityEngine_TextCore_Text_TextResourceManager_FontAssetRefSizeCheck;
    static_assert(sizeof(TextResourceManager::FontAssetRef) == 0x20);
    // Get static field: static private readonly System.Collections.Generic.Dictionary`2<System.Int32,UnityEngine.TextCore.Text.TextResourceManager/FontAssetRef> s_FontAssetReferences
    static ::System::Collections::Generic::Dictionary_2<int, ::UnityEngine::TextCore::Text::TextResourceManager::FontAssetRef>* _get_s_FontAssetReferences();
    // Set static field: static private readonly System.Collections.Generic.Dictionary`2<System.Int32,UnityEngine.TextCore.Text.TextResourceManager/FontAssetRef> s_FontAssetReferences
    static void _set_s_FontAssetReferences(::System::Collections::Generic::Dictionary_2<int, ::UnityEngine::TextCore::Text::TextResourceManager::FontAssetRef>* value);
    // Get static field: static private readonly System.Collections.Generic.Dictionary`2<System.Int32,UnityEngine.TextCore.Text.FontAsset> s_FontAssetNameReferenceLookup
    static ::System::Collections::Generic::Dictionary_2<int, ::UnityEngine::TextCore::Text::FontAsset*>* _get_s_FontAssetNameReferenceLookup();
    // Set static field: static private readonly System.Collections.Generic.Dictionary`2<System.Int32,UnityEngine.TextCore.Text.FontAsset> s_FontAssetNameReferenceLookup
    static void _set_s_FontAssetNameReferenceLookup(::System::Collections::Generic::Dictionary_2<int, ::UnityEngine::TextCore::Text::FontAsset*>* value);
    // Get static field: static private readonly System.Collections.Generic.Dictionary`2<System.Int64,UnityEngine.TextCore.Text.FontAsset> s_FontAssetFamilyNameAndStyleReferenceLookup
    static ::System::Collections::Generic::Dictionary_2<int64_t, ::UnityEngine::TextCore::Text::FontAsset*>* _get_s_FontAssetFamilyNameAndStyleReferenceLookup();
    // Set static field: static private readonly System.Collections.Generic.Dictionary`2<System.Int64,UnityEngine.TextCore.Text.FontAsset> s_FontAssetFamilyNameAndStyleReferenceLookup
    static void _set_s_FontAssetFamilyNameAndStyleReferenceLookup(::System::Collections::Generic::Dictionary_2<int64_t, ::UnityEngine::TextCore::Text::FontAsset*>* value);
    // Get static field: static private readonly System.Collections.Generic.List`1<System.Int32> s_FontAssetRemovalList
    static ::System::Collections::Generic::List_1<int>* _get_s_FontAssetRemovalList();
    // Set static field: static private readonly System.Collections.Generic.List`1<System.Int32> s_FontAssetRemovalList
    static void _set_s_FontAssetRemovalList(::System::Collections::Generic::List_1<int>* value);
    // Get static field: static private readonly System.Int32 k_RegularStyleHashCode
    static int _get_k_RegularStyleHashCode();
    // Set static field: static private readonly System.Int32 k_RegularStyleHashCode
    static void _set_k_RegularStyleHashCode(int value);
    // static System.Void AddFontAsset(UnityEngine.TextCore.Text.FontAsset fontAsset)
    // Offset: 0x55725F0
    static void AddFontAsset(::UnityEngine::TextCore::Text::FontAsset* fontAsset);
    // static private System.Void .cctor()
    // Offset: 0x5572B4C
    static void _cctor();
  }; // UnityEngine.TextCore.Text.TextResourceManager
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::TextCore::Text::TextResourceManager::FontAssetRef, "UnityEngine.TextCore.Text", "TextResourceManager/FontAssetRef");
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::TextResourceManager::AddFontAsset
// Il2CppName: AddFontAsset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::TextCore::Text::FontAsset*)>(&UnityEngine::TextCore::Text::TextResourceManager::AddFontAsset)> {
  static const MethodInfo* get() {
    static auto* fontAsset = &::il2cpp_utils::GetClassFromName("UnityEngine.TextCore.Text", "FontAsset")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::TextResourceManager*), "AddFontAsset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{fontAsset});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::TextResourceManager::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&UnityEngine::TextCore::Text::TextResourceManager::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::TextResourceManager*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
