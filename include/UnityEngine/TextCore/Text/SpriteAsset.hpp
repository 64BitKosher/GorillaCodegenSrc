// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.TextCore.Text.TextAsset
#include "UnityEngine/TextCore/Text/TextAsset.hpp"
// Including type: UnityEngine.TextCore.FaceInfo
#include "UnityEngine/TextCore/FaceInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::TextCore::Text
namespace UnityEngine::TextCore::Text {
  // Forward declaring type: SpriteCharacter
  class SpriteCharacter;
  // Forward declaring type: SpriteGlyph
  class SpriteGlyph;
  // Forward declaring type: TextSettings
  class TextSettings;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: Dictionary`2<TKey, TValue>
  template<typename TKey, typename TValue>
  class Dictionary_2;
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
  // Forward declaring type: HashSet`1<T>
  template<typename T>
  class HashSet_1;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Texture
  class Texture;
}
// Completed forward declares
// Type namespace: UnityEngine.TextCore.Text
namespace UnityEngine::TextCore::Text {
  // Forward declaring type: SpriteAsset
  class SpriteAsset;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::TextCore::Text::SpriteAsset);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::TextCore::Text::SpriteAsset*, "UnityEngine.TextCore.Text", "SpriteAsset");
// Type namespace: UnityEngine.TextCore.Text
namespace UnityEngine::TextCore::Text {
  // Size: 0xD9
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.TextCore.Text.SpriteAsset
  // [TokenAttribute] Offset: FFFFFFFF
  // [ExcludeFromPresetAttribute] Offset: FFFFFFFF
  class SpriteAsset : public ::UnityEngine::TextCore::Text::TextAsset {
    public:
    // Writing base type padding for base size: 0x34 to desired offset: 0x38
    char ___base_padding[0x4] = {};
    // Nested type: ::UnityEngine::TextCore::Text::SpriteAsset::$$c
    class $$c;
    public:
    // System.Collections.Generic.Dictionary`2<System.Int32,System.Int32> m_NameLookup
    // Size: 0x8
    // Offset: 0x38
    ::System::Collections::Generic::Dictionary_2<int, int>* m_NameLookup;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::Dictionary_2<int, int>*) == 0x8);
    // System.Collections.Generic.Dictionary`2<System.UInt32,System.Int32> m_GlyphIndexLookup
    // Size: 0x8
    // Offset: 0x40
    ::System::Collections::Generic::Dictionary_2<uint, int>* m_GlyphIndexLookup;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::Dictionary_2<uint, int>*) == 0x8);
    // UnityEngine.TextCore.FaceInfo m_FaceInfo
    // Size: 0x60
    // Offset: 0x48
    ::UnityEngine::TextCore::FaceInfo m_FaceInfo;
    // Field size check
    static_assert(sizeof(::UnityEngine::TextCore::FaceInfo) == 0x60);
    // UnityEngine.Texture m_SpriteAtlasTexture
    // Size: 0x8
    // Offset: 0xA8
    ::UnityEngine::Texture* m_SpriteAtlasTexture;
    // Field size check
    static_assert(sizeof(::UnityEngine::Texture*) == 0x8);
    // private System.Collections.Generic.List`1<UnityEngine.TextCore.Text.SpriteCharacter> m_SpriteCharacterTable
    // Size: 0x8
    // Offset: 0xB0
    ::System::Collections::Generic::List_1<::UnityEngine::TextCore::Text::SpriteCharacter*>* m_SpriteCharacterTable;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::UnityEngine::TextCore::Text::SpriteCharacter*>*) == 0x8);
    // System.Collections.Generic.Dictionary`2<System.UInt32,UnityEngine.TextCore.Text.SpriteCharacter> m_SpriteCharacterLookup
    // Size: 0x8
    // Offset: 0xB8
    ::System::Collections::Generic::Dictionary_2<uint, ::UnityEngine::TextCore::Text::SpriteCharacter*>* m_SpriteCharacterLookup;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::Dictionary_2<uint, ::UnityEngine::TextCore::Text::SpriteCharacter*>*) == 0x8);
    // private System.Collections.Generic.List`1<UnityEngine.TextCore.Text.SpriteGlyph> m_SpriteGlyphTable
    // Size: 0x8
    // Offset: 0xC0
    ::System::Collections::Generic::List_1<::UnityEngine::TextCore::Text::SpriteGlyph*>* m_SpriteGlyphTable;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::UnityEngine::TextCore::Text::SpriteGlyph*>*) == 0x8);
    // System.Collections.Generic.Dictionary`2<System.UInt32,UnityEngine.TextCore.Text.SpriteGlyph> m_SpriteGlyphLookup
    // Size: 0x8
    // Offset: 0xC8
    ::System::Collections::Generic::Dictionary_2<uint, ::UnityEngine::TextCore::Text::SpriteGlyph*>* m_SpriteGlyphLookup;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::Dictionary_2<uint, ::UnityEngine::TextCore::Text::SpriteGlyph*>*) == 0x8);
    // public System.Collections.Generic.List`1<UnityEngine.TextCore.Text.SpriteAsset> fallbackSpriteAssets
    // Size: 0x8
    // Offset: 0xD0
    ::System::Collections::Generic::List_1<::UnityEngine::TextCore::Text::SpriteAsset*>* fallbackSpriteAssets;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::UnityEngine::TextCore::Text::SpriteAsset*>*) == 0x8);
    // System.Boolean m_IsSpriteAssetLookupTablesDirty
    // Size: 0x1
    // Offset: 0xD8
    bool m_IsSpriteAssetLookupTablesDirty;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    public:
    // Get static field: static private System.Collections.Generic.HashSet`1<System.Int32> k_searchedSpriteAssets
    static ::System::Collections::Generic::HashSet_1<int>* _get_k_searchedSpriteAssets();
    // Set static field: static private System.Collections.Generic.HashSet`1<System.Int32> k_searchedSpriteAssets
    static void _set_k_searchedSpriteAssets(::System::Collections::Generic::HashSet_1<int>* value);
    // Get instance field reference: System.Collections.Generic.Dictionary`2<System.Int32,System.Int32> m_NameLookup
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<int, int>*& dyn_m_NameLookup();
    // Get instance field reference: System.Collections.Generic.Dictionary`2<System.UInt32,System.Int32> m_GlyphIndexLookup
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<uint, int>*& dyn_m_GlyphIndexLookup();
    // Get instance field reference: UnityEngine.TextCore.FaceInfo m_FaceInfo
    [[deprecated("Use field access instead!")]] ::UnityEngine::TextCore::FaceInfo& dyn_m_FaceInfo();
    // Get instance field reference: UnityEngine.Texture m_SpriteAtlasTexture
    [[deprecated("Use field access instead!")]] ::UnityEngine::Texture*& dyn_m_SpriteAtlasTexture();
    // Get instance field reference: private System.Collections.Generic.List`1<UnityEngine.TextCore.Text.SpriteCharacter> m_SpriteCharacterTable
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::TextCore::Text::SpriteCharacter*>*& dyn_m_SpriteCharacterTable();
    // Get instance field reference: System.Collections.Generic.Dictionary`2<System.UInt32,UnityEngine.TextCore.Text.SpriteCharacter> m_SpriteCharacterLookup
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<uint, ::UnityEngine::TextCore::Text::SpriteCharacter*>*& dyn_m_SpriteCharacterLookup();
    // Get instance field reference: private System.Collections.Generic.List`1<UnityEngine.TextCore.Text.SpriteGlyph> m_SpriteGlyphTable
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::TextCore::Text::SpriteGlyph*>*& dyn_m_SpriteGlyphTable();
    // Get instance field reference: System.Collections.Generic.Dictionary`2<System.UInt32,UnityEngine.TextCore.Text.SpriteGlyph> m_SpriteGlyphLookup
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<uint, ::UnityEngine::TextCore::Text::SpriteGlyph*>*& dyn_m_SpriteGlyphLookup();
    // Get instance field reference: public System.Collections.Generic.List`1<UnityEngine.TextCore.Text.SpriteAsset> fallbackSpriteAssets
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::TextCore::Text::SpriteAsset*>*& dyn_fallbackSpriteAssets();
    // Get instance field reference: System.Boolean m_IsSpriteAssetLookupTablesDirty
    [[deprecated("Use field access instead!")]] bool& dyn_m_IsSpriteAssetLookupTablesDirty();
    // public UnityEngine.TextCore.FaceInfo get_faceInfo()
    // Offset: 0x5550D20
    ::UnityEngine::TextCore::FaceInfo get_faceInfo();
    // System.Void set_faceInfo(UnityEngine.TextCore.FaceInfo value)
    // Offset: 0x5550D3C
    void set_faceInfo(::UnityEngine::TextCore::FaceInfo value);
    // public UnityEngine.Texture get_spriteSheet()
    // Offset: 0x5550D60
    ::UnityEngine::Texture* get_spriteSheet();
    // System.Void set_spriteSheet(UnityEngine.Texture value)
    // Offset: 0x5550D68
    void set_spriteSheet(::UnityEngine::Texture* value);
    // public System.Collections.Generic.List`1<UnityEngine.TextCore.Text.SpriteCharacter> get_spriteCharacterTable()
    // Offset: 0x5550D70
    ::System::Collections::Generic::List_1<::UnityEngine::TextCore::Text::SpriteCharacter*>* get_spriteCharacterTable();
    // System.Void set_spriteCharacterTable(System.Collections.Generic.List`1<UnityEngine.TextCore.Text.SpriteCharacter> value)
    // Offset: 0x55512A4
    void set_spriteCharacterTable(::System::Collections::Generic::List_1<::UnityEngine::TextCore::Text::SpriteCharacter*>* value);
    // public System.Collections.Generic.Dictionary`2<System.UInt32,UnityEngine.TextCore.Text.SpriteCharacter> get_spriteCharacterLookupTable()
    // Offset: 0x554E060
    ::System::Collections::Generic::Dictionary_2<uint, ::UnityEngine::TextCore::Text::SpriteCharacter*>* get_spriteCharacterLookupTable();
    // System.Void set_spriteCharacterLookupTable(System.Collections.Generic.Dictionary`2<System.UInt32,UnityEngine.TextCore.Text.SpriteCharacter> value)
    // Offset: 0x55512AC
    void set_spriteCharacterLookupTable(::System::Collections::Generic::Dictionary_2<uint, ::UnityEngine::TextCore::Text::SpriteCharacter*>* value);
    // public System.Collections.Generic.List`1<UnityEngine.TextCore.Text.SpriteGlyph> get_spriteGlyphTable()
    // Offset: 0x55512B4
    ::System::Collections::Generic::List_1<::UnityEngine::TextCore::Text::SpriteGlyph*>* get_spriteGlyphTable();
    // System.Void set_spriteGlyphTable(System.Collections.Generic.List`1<UnityEngine.TextCore.Text.SpriteGlyph> value)
    // Offset: 0x55512BC
    void set_spriteGlyphTable(::System::Collections::Generic::List_1<::UnityEngine::TextCore::Text::SpriteGlyph*>* value);
    // private System.Void Awake()
    // Offset: 0x55512C4
    void Awake();
    // public System.Void UpdateLookupTables()
    // Offset: 0x5550D94
    void UpdateLookupTables();
    // public System.Int32 GetSpriteIndexFromHashcode(System.Int32 hashCode)
    // Offset: 0x55512D0
    int GetSpriteIndexFromHashcode(int hashCode);
    // public System.Int32 GetSpriteIndexFromUnicode(System.UInt32 unicode)
    // Offset: 0x5551358
    int GetSpriteIndexFromUnicode(uint unicode);
    // public System.Int32 GetSpriteIndexFromName(System.String name)
    // Offset: 0x55513EC
    int GetSpriteIndexFromName(::StringW name);
    // static public UnityEngine.TextCore.Text.SpriteAsset SearchForSpriteByUnicode(UnityEngine.TextCore.Text.SpriteAsset spriteAsset, System.UInt32 unicode, System.Boolean includeFallbacks, out System.Int32 spriteIndex)
    // Offset: 0x555142C
    static ::UnityEngine::TextCore::Text::SpriteAsset* SearchForSpriteByUnicode(::UnityEngine::TextCore::Text::SpriteAsset* spriteAsset, uint unicode, bool includeFallbacks, ByRef<int> spriteIndex);
    // static private UnityEngine.TextCore.Text.SpriteAsset SearchForSpriteByUnicodeInternal(System.Collections.Generic.List`1<UnityEngine.TextCore.Text.SpriteAsset> spriteAssets, System.UInt32 unicode, System.Boolean includeFallbacks, out System.Int32 spriteIndex)
    // Offset: 0x5551600
    static ::UnityEngine::TextCore::Text::SpriteAsset* SearchForSpriteByUnicodeInternal(::System::Collections::Generic::List_1<::UnityEngine::TextCore::Text::SpriteAsset*>* spriteAssets, uint unicode, bool includeFallbacks, ByRef<int> spriteIndex);
    // static private UnityEngine.TextCore.Text.SpriteAsset SearchForSpriteByUnicodeInternal(UnityEngine.TextCore.Text.SpriteAsset spriteAsset, System.UInt32 unicode, System.Boolean includeFallbacks, out System.Int32 spriteIndex)
    // Offset: 0x55517A0
    static ::UnityEngine::TextCore::Text::SpriteAsset* SearchForSpriteByUnicodeInternal(::UnityEngine::TextCore::Text::SpriteAsset* spriteAsset, uint unicode, bool includeFallbacks, ByRef<int> spriteIndex);
    // static public UnityEngine.TextCore.Text.SpriteAsset SearchForSpriteByHashCode(UnityEngine.TextCore.Text.SpriteAsset spriteAsset, System.Int32 hashCode, System.Boolean includeFallbacks, out System.Int32 spriteIndex, UnityEngine.TextCore.Text.TextSettings textSettings)
    // Offset: 0x5551850
    static ::UnityEngine::TextCore::Text::SpriteAsset* SearchForSpriteByHashCode(::UnityEngine::TextCore::Text::SpriteAsset* spriteAsset, int hashCode, bool includeFallbacks, ByRef<int> spriteIndex, ::UnityEngine::TextCore::Text::TextSettings* textSettings);
    // static private UnityEngine.TextCore.Text.SpriteAsset SearchForSpriteByHashCodeInternal(System.Collections.Generic.List`1<UnityEngine.TextCore.Text.SpriteAsset> spriteAssets, System.Int32 hashCode, System.Boolean searchFallbacks, out System.Int32 spriteIndex)
    // Offset: 0x5551B98
    static ::UnityEngine::TextCore::Text::SpriteAsset* SearchForSpriteByHashCodeInternal(::System::Collections::Generic::List_1<::UnityEngine::TextCore::Text::SpriteAsset*>* spriteAssets, int hashCode, bool searchFallbacks, ByRef<int> spriteIndex);
    // static private UnityEngine.TextCore.Text.SpriteAsset SearchForSpriteByHashCodeInternal(UnityEngine.TextCore.Text.SpriteAsset spriteAsset, System.Int32 hashCode, System.Boolean searchFallbacks, out System.Int32 spriteIndex)
    // Offset: 0x5551D40
    static ::UnityEngine::TextCore::Text::SpriteAsset* SearchForSpriteByHashCodeInternal(::UnityEngine::TextCore::Text::SpriteAsset* spriteAsset, int hashCode, bool searchFallbacks, ByRef<int> spriteIndex);
    // public System.Void SortGlyphTable()
    // Offset: 0x5551DF0
    void SortGlyphTable();
    // System.Void SortCharacterTable()
    // Offset: 0x5551F40
    void SortCharacterTable();
    // System.Void SortGlyphAndCharacterTables()
    // Offset: 0x5552094
    void SortGlyphAndCharacterTables();
    // public System.Void .ctor()
    // Offset: 0x55520AC
    // Implemented from: UnityEngine.TextCore.Text.TextAsset
    // Base method: System.Void TextAsset::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static SpriteAsset* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::Text::SpriteAsset::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<SpriteAsset*, creationType>()));
    }
  }; // UnityEngine.TextCore.Text.SpriteAsset
  #pragma pack(pop)
  static check_size<sizeof(SpriteAsset), 216 + sizeof(bool)> __UnityEngine_TextCore_Text_SpriteAssetSizeCheck;
  static_assert(sizeof(SpriteAsset) == 0xD9);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::SpriteAsset::get_faceInfo
// Il2CppName: get_faceInfo
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::TextCore::FaceInfo (UnityEngine::TextCore::Text::SpriteAsset::*)()>(&UnityEngine::TextCore::Text::SpriteAsset::get_faceInfo)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::SpriteAsset*), "get_faceInfo", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::SpriteAsset::set_faceInfo
// Il2CppName: set_faceInfo
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TextCore::Text::SpriteAsset::*)(::UnityEngine::TextCore::FaceInfo)>(&UnityEngine::TextCore::Text::SpriteAsset::set_faceInfo)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.TextCore", "FaceInfo")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::SpriteAsset*), "set_faceInfo", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::SpriteAsset::get_spriteSheet
// Il2CppName: get_spriteSheet
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Texture* (UnityEngine::TextCore::Text::SpriteAsset::*)()>(&UnityEngine::TextCore::Text::SpriteAsset::get_spriteSheet)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::SpriteAsset*), "get_spriteSheet", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::SpriteAsset::set_spriteSheet
// Il2CppName: set_spriteSheet
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TextCore::Text::SpriteAsset::*)(::UnityEngine::Texture*)>(&UnityEngine::TextCore::Text::SpriteAsset::set_spriteSheet)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Texture")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::SpriteAsset*), "set_spriteSheet", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::SpriteAsset::get_spriteCharacterTable
// Il2CppName: get_spriteCharacterTable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::List_1<::UnityEngine::TextCore::Text::SpriteCharacter*>* (UnityEngine::TextCore::Text::SpriteAsset::*)()>(&UnityEngine::TextCore::Text::SpriteAsset::get_spriteCharacterTable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::SpriteAsset*), "get_spriteCharacterTable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::SpriteAsset::set_spriteCharacterTable
// Il2CppName: set_spriteCharacterTable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TextCore::Text::SpriteAsset::*)(::System::Collections::Generic::List_1<::UnityEngine::TextCore::Text::SpriteCharacter*>*)>(&UnityEngine::TextCore::Text::SpriteAsset::set_spriteCharacterTable)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.TextCore.Text", "SpriteCharacter")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::SpriteAsset*), "set_spriteCharacterTable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::SpriteAsset::get_spriteCharacterLookupTable
// Il2CppName: get_spriteCharacterLookupTable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::Dictionary_2<uint, ::UnityEngine::TextCore::Text::SpriteCharacter*>* (UnityEngine::TextCore::Text::SpriteAsset::*)()>(&UnityEngine::TextCore::Text::SpriteAsset::get_spriteCharacterLookupTable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::SpriteAsset*), "get_spriteCharacterLookupTable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::SpriteAsset::set_spriteCharacterLookupTable
// Il2CppName: set_spriteCharacterLookupTable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TextCore::Text::SpriteAsset::*)(::System::Collections::Generic::Dictionary_2<uint, ::UnityEngine::TextCore::Text::SpriteCharacter*>*)>(&UnityEngine::TextCore::Text::SpriteAsset::set_spriteCharacterLookupTable)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "Dictionary`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "UInt32"), ::il2cpp_utils::GetClassFromName("UnityEngine.TextCore.Text", "SpriteCharacter")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::SpriteAsset*), "set_spriteCharacterLookupTable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::SpriteAsset::get_spriteGlyphTable
// Il2CppName: get_spriteGlyphTable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::List_1<::UnityEngine::TextCore::Text::SpriteGlyph*>* (UnityEngine::TextCore::Text::SpriteAsset::*)()>(&UnityEngine::TextCore::Text::SpriteAsset::get_spriteGlyphTable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::SpriteAsset*), "get_spriteGlyphTable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::SpriteAsset::set_spriteGlyphTable
// Il2CppName: set_spriteGlyphTable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TextCore::Text::SpriteAsset::*)(::System::Collections::Generic::List_1<::UnityEngine::TextCore::Text::SpriteGlyph*>*)>(&UnityEngine::TextCore::Text::SpriteAsset::set_spriteGlyphTable)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.TextCore.Text", "SpriteGlyph")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::SpriteAsset*), "set_spriteGlyphTable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::SpriteAsset::Awake
// Il2CppName: Awake
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TextCore::Text::SpriteAsset::*)()>(&UnityEngine::TextCore::Text::SpriteAsset::Awake)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::SpriteAsset*), "Awake", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::SpriteAsset::UpdateLookupTables
// Il2CppName: UpdateLookupTables
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TextCore::Text::SpriteAsset::*)()>(&UnityEngine::TextCore::Text::SpriteAsset::UpdateLookupTables)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::SpriteAsset*), "UpdateLookupTables", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::SpriteAsset::GetSpriteIndexFromHashcode
// Il2CppName: GetSpriteIndexFromHashcode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::TextCore::Text::SpriteAsset::*)(int)>(&UnityEngine::TextCore::Text::SpriteAsset::GetSpriteIndexFromHashcode)> {
  static const MethodInfo* get() {
    static auto* hashCode = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::SpriteAsset*), "GetSpriteIndexFromHashcode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{hashCode});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::SpriteAsset::GetSpriteIndexFromUnicode
// Il2CppName: GetSpriteIndexFromUnicode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::TextCore::Text::SpriteAsset::*)(uint)>(&UnityEngine::TextCore::Text::SpriteAsset::GetSpriteIndexFromUnicode)> {
  static const MethodInfo* get() {
    static auto* unicode = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::SpriteAsset*), "GetSpriteIndexFromUnicode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{unicode});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::SpriteAsset::GetSpriteIndexFromName
// Il2CppName: GetSpriteIndexFromName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::TextCore::Text::SpriteAsset::*)(::StringW)>(&UnityEngine::TextCore::Text::SpriteAsset::GetSpriteIndexFromName)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::SpriteAsset*), "GetSpriteIndexFromName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::SpriteAsset::SearchForSpriteByUnicode
// Il2CppName: SearchForSpriteByUnicode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::TextCore::Text::SpriteAsset* (*)(::UnityEngine::TextCore::Text::SpriteAsset*, uint, bool, ByRef<int>)>(&UnityEngine::TextCore::Text::SpriteAsset::SearchForSpriteByUnicode)> {
  static const MethodInfo* get() {
    static auto* spriteAsset = &::il2cpp_utils::GetClassFromName("UnityEngine.TextCore.Text", "SpriteAsset")->byval_arg;
    static auto* unicode = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    static auto* includeFallbacks = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* spriteIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::SpriteAsset*), "SearchForSpriteByUnicode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{spriteAsset, unicode, includeFallbacks, spriteIndex});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::SpriteAsset::SearchForSpriteByUnicodeInternal
// Il2CppName: SearchForSpriteByUnicodeInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::TextCore::Text::SpriteAsset* (*)(::System::Collections::Generic::List_1<::UnityEngine::TextCore::Text::SpriteAsset*>*, uint, bool, ByRef<int>)>(&UnityEngine::TextCore::Text::SpriteAsset::SearchForSpriteByUnicodeInternal)> {
  static const MethodInfo* get() {
    static auto* spriteAssets = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.TextCore.Text", "SpriteAsset")})->byval_arg;
    static auto* unicode = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    static auto* includeFallbacks = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* spriteIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::SpriteAsset*), "SearchForSpriteByUnicodeInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{spriteAssets, unicode, includeFallbacks, spriteIndex});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::SpriteAsset::SearchForSpriteByUnicodeInternal
// Il2CppName: SearchForSpriteByUnicodeInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::TextCore::Text::SpriteAsset* (*)(::UnityEngine::TextCore::Text::SpriteAsset*, uint, bool, ByRef<int>)>(&UnityEngine::TextCore::Text::SpriteAsset::SearchForSpriteByUnicodeInternal)> {
  static const MethodInfo* get() {
    static auto* spriteAsset = &::il2cpp_utils::GetClassFromName("UnityEngine.TextCore.Text", "SpriteAsset")->byval_arg;
    static auto* unicode = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    static auto* includeFallbacks = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* spriteIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::SpriteAsset*), "SearchForSpriteByUnicodeInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{spriteAsset, unicode, includeFallbacks, spriteIndex});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::SpriteAsset::SearchForSpriteByHashCode
// Il2CppName: SearchForSpriteByHashCode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::TextCore::Text::SpriteAsset* (*)(::UnityEngine::TextCore::Text::SpriteAsset*, int, bool, ByRef<int>, ::UnityEngine::TextCore::Text::TextSettings*)>(&UnityEngine::TextCore::Text::SpriteAsset::SearchForSpriteByHashCode)> {
  static const MethodInfo* get() {
    static auto* spriteAsset = &::il2cpp_utils::GetClassFromName("UnityEngine.TextCore.Text", "SpriteAsset")->byval_arg;
    static auto* hashCode = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* includeFallbacks = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* spriteIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    static auto* textSettings = &::il2cpp_utils::GetClassFromName("UnityEngine.TextCore.Text", "TextSettings")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::SpriteAsset*), "SearchForSpriteByHashCode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{spriteAsset, hashCode, includeFallbacks, spriteIndex, textSettings});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::SpriteAsset::SearchForSpriteByHashCodeInternal
// Il2CppName: SearchForSpriteByHashCodeInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::TextCore::Text::SpriteAsset* (*)(::System::Collections::Generic::List_1<::UnityEngine::TextCore::Text::SpriteAsset*>*, int, bool, ByRef<int>)>(&UnityEngine::TextCore::Text::SpriteAsset::SearchForSpriteByHashCodeInternal)> {
  static const MethodInfo* get() {
    static auto* spriteAssets = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.TextCore.Text", "SpriteAsset")})->byval_arg;
    static auto* hashCode = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* searchFallbacks = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* spriteIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::SpriteAsset*), "SearchForSpriteByHashCodeInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{spriteAssets, hashCode, searchFallbacks, spriteIndex});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::SpriteAsset::SearchForSpriteByHashCodeInternal
// Il2CppName: SearchForSpriteByHashCodeInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::TextCore::Text::SpriteAsset* (*)(::UnityEngine::TextCore::Text::SpriteAsset*, int, bool, ByRef<int>)>(&UnityEngine::TextCore::Text::SpriteAsset::SearchForSpriteByHashCodeInternal)> {
  static const MethodInfo* get() {
    static auto* spriteAsset = &::il2cpp_utils::GetClassFromName("UnityEngine.TextCore.Text", "SpriteAsset")->byval_arg;
    static auto* hashCode = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* searchFallbacks = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* spriteIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::SpriteAsset*), "SearchForSpriteByHashCodeInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{spriteAsset, hashCode, searchFallbacks, spriteIndex});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::SpriteAsset::SortGlyphTable
// Il2CppName: SortGlyphTable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TextCore::Text::SpriteAsset::*)()>(&UnityEngine::TextCore::Text::SpriteAsset::SortGlyphTable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::SpriteAsset*), "SortGlyphTable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::SpriteAsset::SortCharacterTable
// Il2CppName: SortCharacterTable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TextCore::Text::SpriteAsset::*)()>(&UnityEngine::TextCore::Text::SpriteAsset::SortCharacterTable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::SpriteAsset*), "SortCharacterTable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::SpriteAsset::SortGlyphAndCharacterTables
// Il2CppName: SortGlyphAndCharacterTables
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TextCore::Text::SpriteAsset::*)()>(&UnityEngine::TextCore::Text::SpriteAsset::SortGlyphAndCharacterTables)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::SpriteAsset*), "SortGlyphAndCharacterTables", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::SpriteAsset::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
