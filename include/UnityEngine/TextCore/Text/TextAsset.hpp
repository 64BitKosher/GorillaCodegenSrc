// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.ScriptableObject
#include "UnityEngine/ScriptableObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Material
  class Material;
}
// Completed forward declares
// Type namespace: UnityEngine.TextCore.Text
namespace UnityEngine::TextCore::Text {
  // Forward declaring type: TextAsset
  class TextAsset;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::TextCore::Text::TextAsset);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::TextCore::Text::TextAsset*, "UnityEngine.TextCore.Text", "TextAsset");
// Type namespace: UnityEngine.TextCore.Text
namespace UnityEngine::TextCore::Text {
  // Size: 0x34
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.TextCore.Text.TextAsset
  // [TokenAttribute] Offset: FFFFFFFF
  // [ExcludeFromObjectFactoryAttribute] Offset: FFFFFFFF
  class TextAsset : public ::UnityEngine::ScriptableObject {
    public:
    public:
    // System.String m_Version
    // Size: 0x8
    // Offset: 0x18
    ::StringW m_Version;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // System.Int32 m_InstanceID
    // Size: 0x4
    // Offset: 0x20
    int m_InstanceID;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // System.Int32 m_HashCode
    // Size: 0x4
    // Offset: 0x24
    int m_HashCode;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // UnityEngine.Material m_Material
    // Size: 0x8
    // Offset: 0x28
    ::UnityEngine::Material* m_Material;
    // Field size check
    static_assert(sizeof(::UnityEngine::Material*) == 0x8);
    // System.Int32 m_MaterialHashCode
    // Size: 0x4
    // Offset: 0x30
    int m_MaterialHashCode;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: System.String m_Version
    [[deprecated("Use field access instead!")]] ::StringW& dyn_m_Version();
    // Get instance field reference: System.Int32 m_InstanceID
    [[deprecated("Use field access instead!")]] int& dyn_m_InstanceID();
    // Get instance field reference: System.Int32 m_HashCode
    [[deprecated("Use field access instead!")]] int& dyn_m_HashCode();
    // Get instance field reference: UnityEngine.Material m_Material
    [[deprecated("Use field access instead!")]] ::UnityEngine::Material*& dyn_m_Material();
    // Get instance field reference: System.Int32 m_MaterialHashCode
    [[deprecated("Use field access instead!")]] int& dyn_m_MaterialHashCode();
    // public System.String get_version()
    // Offset: 0x5552254
    ::StringW get_version();
    // System.Void set_version(System.String value)
    // Offset: 0x555225C
    void set_version(::StringW value);
    // public System.Int32 get_instanceID()
    // Offset: 0x5548758
    int get_instanceID();
    // public System.Int32 get_hashCode()
    // Offset: 0x554F8C0
    int get_hashCode();
    // public System.Void set_hashCode(System.Int32 value)
    // Offset: 0x5552264
    void set_hashCode(int value);
    // public UnityEngine.Material get_material()
    // Offset: 0x555226C
    ::UnityEngine::Material* get_material();
    // public System.Void set_material(UnityEngine.Material value)
    // Offset: 0x5552274
    void set_material(::UnityEngine::Material* value);
    // public System.Int32 get_materialHashCode()
    // Offset: 0x554F8F0
    int get_materialHashCode();
    // public System.Void set_materialHashCode(System.Int32 value)
    // Offset: 0x555227C
    void set_materialHashCode(int value);
    // protected System.Void .ctor()
    // Offset: 0x554D260
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static TextAsset* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::Text::TextAsset::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<TextAsset*, creationType>()));
    }
  }; // UnityEngine.TextCore.Text.TextAsset
  #pragma pack(pop)
  static check_size<sizeof(TextAsset), 48 + sizeof(int)> __UnityEngine_TextCore_Text_TextAssetSizeCheck;
  static_assert(sizeof(TextAsset) == 0x34);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::TextAsset::get_version
// Il2CppName: get_version
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (UnityEngine::TextCore::Text::TextAsset::*)()>(&UnityEngine::TextCore::Text::TextAsset::get_version)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::TextAsset*), "get_version", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::TextAsset::set_version
// Il2CppName: set_version
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TextCore::Text::TextAsset::*)(::StringW)>(&UnityEngine::TextCore::Text::TextAsset::set_version)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::TextAsset*), "set_version", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::TextAsset::get_instanceID
// Il2CppName: get_instanceID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::TextCore::Text::TextAsset::*)()>(&UnityEngine::TextCore::Text::TextAsset::get_instanceID)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::TextAsset*), "get_instanceID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::TextAsset::get_hashCode
// Il2CppName: get_hashCode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::TextCore::Text::TextAsset::*)()>(&UnityEngine::TextCore::Text::TextAsset::get_hashCode)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::TextAsset*), "get_hashCode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::TextAsset::set_hashCode
// Il2CppName: set_hashCode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TextCore::Text::TextAsset::*)(int)>(&UnityEngine::TextCore::Text::TextAsset::set_hashCode)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::TextAsset*), "set_hashCode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::TextAsset::get_material
// Il2CppName: get_material
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Material* (UnityEngine::TextCore::Text::TextAsset::*)()>(&UnityEngine::TextCore::Text::TextAsset::get_material)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::TextAsset*), "get_material", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::TextAsset::set_material
// Il2CppName: set_material
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TextCore::Text::TextAsset::*)(::UnityEngine::Material*)>(&UnityEngine::TextCore::Text::TextAsset::set_material)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Material")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::TextAsset*), "set_material", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::TextAsset::get_materialHashCode
// Il2CppName: get_materialHashCode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::TextCore::Text::TextAsset::*)()>(&UnityEngine::TextCore::Text::TextAsset::get_materialHashCode)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::TextAsset*), "get_materialHashCode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::TextAsset::set_materialHashCode
// Il2CppName: set_materialHashCode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TextCore::Text::TextAsset::*)(int)>(&UnityEngine::TextCore::Text::TextAsset::set_materialHashCode)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::Text::TextAsset*), "set_materialHashCode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::Text::TextAsset::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
