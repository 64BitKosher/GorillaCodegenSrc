// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Type namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: JNINativeMethod
  struct JNINativeMethod;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::JNINativeMethod, "UnityEngine", "JNINativeMethod");
// Type namespace: UnityEngine
namespace UnityEngine {
  // Size: 0x18
  #pragma pack(push, 1)
  // WARNING Layout: Sequential may not be correctly taken into account!
  // Autogenerated type: UnityEngine.JNINativeMethod
  // [TokenAttribute] Offset: FFFFFFFF
  // [NativeTypeAttribute] Offset: FFFFFFFF
  struct JNINativeMethod/*, public ::System::ValueType*/ {
    public:
    public:
    // public System.String name
    // Size: 0x8
    // Offset: 0x0
    ::StringW name;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public System.String signature
    // Size: 0x8
    // Offset: 0x8
    ::StringW signature;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public System.IntPtr fnPtr
    // Size: 0x8
    // Offset: 0x10
    ::System::IntPtr fnPtr;
    // Field size check
    static_assert(sizeof(::System::IntPtr) == 0x8);
    public:
    // Creating value type constructor for type: JNINativeMethod
    constexpr JNINativeMethod(::StringW name_ = {}, ::StringW signature_ = {}, ::System::IntPtr fnPtr_ = {}) noexcept : name{name_}, signature{signature_}, fnPtr{fnPtr_} {}
    // Creating interface conversion operator: operator ::System::ValueType
    operator ::System::ValueType() noexcept {
      return *reinterpret_cast<::System::ValueType*>(this);
    }
    // Get instance field reference: public System.String name
    [[deprecated("Use field access instead!")]] ::StringW& dyn_name();
    // Get instance field reference: public System.String signature
    [[deprecated("Use field access instead!")]] ::StringW& dyn_signature();
    // Get instance field reference: public System.IntPtr fnPtr
    [[deprecated("Use field access instead!")]] ::System::IntPtr& dyn_fnPtr();
  }; // UnityEngine.JNINativeMethod
  #pragma pack(pop)
  static check_size<sizeof(JNINativeMethod), 16 + sizeof(::System::IntPtr)> __UnityEngine_JNINativeMethodSizeCheck;
  static_assert(sizeof(JNINativeMethod) == 0x18);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
