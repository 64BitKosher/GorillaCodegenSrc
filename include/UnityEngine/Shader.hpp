// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
// Including type: UnityEngine.Rendering.GlobalKeyword
#include "UnityEngine/Rendering/GlobalKeyword.hpp"
// Including type: UnityEngine.Vector4
#include "UnityEngine/Vector4.hpp"
// Including type: UnityEngine.Matrix4x4
#include "UnityEngine/Matrix4x4.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::Rendering
namespace UnityEngine::Rendering {
  // Forward declaring type: ShaderHardwareTier
  struct ShaderHardwareTier;
  // Forward declaring type: LocalKeywordSpace
  struct LocalKeywordSpace;
  // Forward declaring type: ShaderTagId
  struct ShaderTagId;
  // Forward declaring type: RenderTextureSubElement
  struct RenderTextureSubElement;
  // Forward declaring type: ShaderPropertyType
  struct ShaderPropertyType;
  // Forward declaring type: ShaderPropertyFlags
  struct ShaderPropertyFlags;
  // Forward declaring type: TextureDimension
  struct TextureDimension;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: DisableBatchingType
  struct DisableBatchingType;
  // Forward declaring type: Color
  struct Color;
  // Forward declaring type: Texture
  class Texture;
  // Forward declaring type: RenderTexture
  class RenderTexture;
  // Forward declaring type: ComputeBuffer
  class ComputeBuffer;
  // Forward declaring type: GraphicsBuffer
  class GraphicsBuffer;
  // Forward declaring type: Vector2
  struct Vector2;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Completed forward declares
// Type namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Shader
  class Shader;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::Shader);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::Shader*, "UnityEngine", "Shader");
// Type namespace: UnityEngine
namespace UnityEngine {
  // Size: 0x18
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.Shader
  // [TokenAttribute] Offset: FFFFFFFF
  // [NativeHeaderAttribute] Offset: FFFFFFFF
  // [NativeHeaderAttribute] Offset: FFFFFFFF
  // [NativeHeaderAttribute] Offset: FFFFFFFF
  // [NativeHeaderAttribute] Offset: FFFFFFFF
  // [NativeHeaderAttribute] Offset: FFFFFFFF
  // [NativeHeaderAttribute] Offset: FFFFFFFF
  // [NativeHeaderAttribute] Offset: FFFFFFFF
  // [NativeHeaderAttribute] Offset: FFFFFFFF
  class Shader : public ::UnityEngine::Object {
    public:
    // static public UnityEngine.Rendering.ShaderHardwareTier get_globalShaderHardwareTier()
    // Offset: 0x5493338
    static ::UnityEngine::Rendering::ShaderHardwareTier get_globalShaderHardwareTier();
    // static public System.Void set_globalShaderHardwareTier(UnityEngine.Rendering.ShaderHardwareTier value)
    // Offset: 0x54933A0
    static void set_globalShaderHardwareTier(::UnityEngine::Rendering::ShaderHardwareTier value);
    // static public UnityEngine.Shader Find(System.String name)
    // Offset: 0x5493414
    static ::UnityEngine::Shader* Find(::StringW name);
    // static UnityEngine.Shader FindBuiltin(System.String name)
    // Offset: 0x5493480
    static ::UnityEngine::Shader* FindBuiltin(::StringW name);
    // static public System.Int32 get_maximumChunksOverride()
    // Offset: 0x54934BC
    static int get_maximumChunksOverride();
    // static public System.Void set_maximumChunksOverride(System.Int32 value)
    // Offset: 0x54934E4
    static void set_maximumChunksOverride(int value);
    // public System.Int32 get_maximumLOD()
    // Offset: 0x5493520
    int get_maximumLOD();
    // public System.Void set_maximumLOD(System.Int32 value)
    // Offset: 0x549355C
    void set_maximumLOD(int value);
    // static public System.Int32 get_globalMaximumLOD()
    // Offset: 0x54935A0
    static int get_globalMaximumLOD();
    // static public System.Void set_globalMaximumLOD(System.Int32 value)
    // Offset: 0x54935C8
    static void set_globalMaximumLOD(int value);
    // public System.Boolean get_isSupported()
    // Offset: 0x5493604
    bool get_isSupported();
    // static public System.String get_globalRenderPipeline()
    // Offset: 0x5493640
    static ::StringW get_globalRenderPipeline();
    // static public System.Void set_globalRenderPipeline(System.String value)
    // Offset: 0x5493668
    static void set_globalRenderPipeline(::StringW value);
    // static public UnityEngine.Rendering.GlobalKeyword[] get_enabledGlobalKeywords()
    // Offset: 0x54936A4
    static ::ArrayW<::UnityEngine::Rendering::GlobalKeyword> get_enabledGlobalKeywords();
    // static public UnityEngine.Rendering.GlobalKeyword[] get_globalKeywords()
    // Offset: 0x54936F4
    static ::ArrayW<::UnityEngine::Rendering::GlobalKeyword> get_globalKeywords();
    // public UnityEngine.Rendering.LocalKeywordSpace get_keywordSpace()
    // Offset: 0x5493744
    ::UnityEngine::Rendering::LocalKeywordSpace get_keywordSpace();
    // static UnityEngine.Rendering.GlobalKeyword[] GetEnabledGlobalKeywords()
    // Offset: 0x54936CC
    static ::ArrayW<::UnityEngine::Rendering::GlobalKeyword> GetEnabledGlobalKeywords();
    // static UnityEngine.Rendering.GlobalKeyword[] GetAllGlobalKeywords()
    // Offset: 0x549371C
    static ::ArrayW<::UnityEngine::Rendering::GlobalKeyword> GetAllGlobalKeywords();
    // static public System.Void EnableKeyword(System.String keyword)
    // Offset: 0x54937D4
    static void EnableKeyword(::StringW keyword);
    // static public System.Void DisableKeyword(System.String keyword)
    // Offset: 0x5493810
    static void DisableKeyword(::StringW keyword);
    // static public System.Boolean IsKeywordEnabled(System.String keyword)
    // Offset: 0x549384C
    static bool IsKeywordEnabled(::StringW keyword);
    // static System.Void EnableKeywordFast(UnityEngine.Rendering.GlobalKeyword keyword)
    // Offset: 0x5493888
    static void EnableKeywordFast(::UnityEngine::Rendering::GlobalKeyword keyword);
    // static System.Void DisableKeywordFast(UnityEngine.Rendering.GlobalKeyword keyword)
    // Offset: 0x5493904
    static void DisableKeywordFast(::UnityEngine::Rendering::GlobalKeyword keyword);
    // static System.Void SetKeywordFast(UnityEngine.Rendering.GlobalKeyword keyword, System.Boolean value)
    // Offset: 0x5493980
    static void SetKeywordFast(::UnityEngine::Rendering::GlobalKeyword keyword, bool value);
    // static System.Boolean IsKeywordEnabledFast(UnityEngine.Rendering.GlobalKeyword keyword)
    // Offset: 0x5493A14
    static bool IsKeywordEnabledFast(::UnityEngine::Rendering::GlobalKeyword keyword);
    // static public System.Void EnableKeyword(in UnityEngine.Rendering.GlobalKeyword keyword)
    // Offset: 0x5493A94
    static void EnableKeyword(ByRef<::UnityEngine::Rendering::GlobalKeyword> keyword);
    // static public System.Void DisableKeyword(in UnityEngine.Rendering.GlobalKeyword keyword)
    // Offset: 0x5493AA0
    static void DisableKeyword(ByRef<::UnityEngine::Rendering::GlobalKeyword> keyword);
    // static public System.Void SetKeyword(in UnityEngine.Rendering.GlobalKeyword keyword, System.Boolean value)
    // Offset: 0x5493AAC
    static void SetKeyword(ByRef<::UnityEngine::Rendering::GlobalKeyword> keyword, bool value);
    // static public System.Boolean IsKeywordEnabled(in UnityEngine.Rendering.GlobalKeyword keyword)
    // Offset: 0x5493AC0
    static bool IsKeywordEnabled(ByRef<::UnityEngine::Rendering::GlobalKeyword> keyword);
    // public System.Int32 get_renderQueue()
    // Offset: 0x5493ACC
    int get_renderQueue();
    // UnityEngine.DisableBatchingType get_disableBatching()
    // Offset: 0x5493B08
    ::UnityEngine::DisableBatchingType get_disableBatching();
    // static public System.Void WarmupAllShaders()
    // Offset: 0x5493B44
    static void WarmupAllShaders();
    // static System.Int32 TagToID(System.String name)
    // Offset: 0x5493B6C
    static int TagToID(::StringW name);
    // static System.String IDToTag(System.Int32 name)
    // Offset: 0x5493BA8
    static ::StringW IDToTag(int name);
    // static public System.Int32 PropertyToID(System.String name)
    // Offset: 0x54916C8
    static int PropertyToID(::StringW name);
    // public UnityEngine.Shader GetDependency(System.String name)
    // Offset: 0x5493BE4
    ::UnityEngine::Shader* GetDependency(::StringW name);
    // public System.Int32 get_passCount()
    // Offset: 0x5493C28
    int get_passCount();
    // public System.Int32 get_subshaderCount()
    // Offset: 0x5493C64
    int get_subshaderCount();
    // public System.Int32 GetPassCountInSubshader(System.Int32 subshaderIndex)
    // Offset: 0x5493CA0
    int GetPassCountInSubshader(int subshaderIndex);
    // public UnityEngine.Rendering.ShaderTagId FindPassTagValue(System.Int32 passIndex, UnityEngine.Rendering.ShaderTagId tagName)
    // Offset: 0x5493CE4
    ::UnityEngine::Rendering::ShaderTagId FindPassTagValue(int passIndex, ::UnityEngine::Rendering::ShaderTagId tagName);
    // public UnityEngine.Rendering.ShaderTagId FindPassTagValue(System.Int32 subshaderIndex, System.Int32 passIndex, UnityEngine.Rendering.ShaderTagId tagName)
    // Offset: 0x5493E40
    ::UnityEngine::Rendering::ShaderTagId FindPassTagValue(int subshaderIndex, int passIndex, ::UnityEngine::Rendering::ShaderTagId tagName);
    // public UnityEngine.Rendering.ShaderTagId FindSubshaderTagValue(System.Int32 subshaderIndex, UnityEngine.Rendering.ShaderTagId tagName)
    // Offset: 0x5494004
    ::UnityEngine::Rendering::ShaderTagId FindSubshaderTagValue(int subshaderIndex, ::UnityEngine::Rendering::ShaderTagId tagName);
    // private System.Int32 Internal_FindPassTagValue(System.Int32 passIndex, System.Int32 tagName)
    // Offset: 0x5493DEC
    int Internal_FindPassTagValue(int passIndex, int tagName);
    // private System.Int32 Internal_FindPassTagValueInSubShader(System.Int32 subShaderIndex, System.Int32 passIndex, System.Int32 tagName)
    // Offset: 0x5493FA8
    int Internal_FindPassTagValueInSubShader(int subShaderIndex, int passIndex, int tagName);
    // private System.Int32 Internal_FindSubshaderTagValue(System.Int32 subShaderIndex, System.Int32 tagName)
    // Offset: 0x549415C
    int Internal_FindSubshaderTagValue(int subShaderIndex, int tagName);
    // static private System.Void SetGlobalIntImpl(System.Int32 name, System.Int32 value)
    // Offset: 0x54941B0
    static void SetGlobalIntImpl(int name, int value);
    // static private System.Void SetGlobalFloatImpl(System.Int32 name, System.Single value)
    // Offset: 0x54941F4
    static void SetGlobalFloatImpl(int name, float value);
    // static private System.Void SetGlobalVectorImpl(System.Int32 name, UnityEngine.Vector4 value)
    // Offset: 0x5494240
    static void SetGlobalVectorImpl(int name, ::UnityEngine::Vector4 value);
    // static private System.Void SetGlobalMatrixImpl(System.Int32 name, UnityEngine.Matrix4x4 value)
    // Offset: 0x54942D8
    static void SetGlobalMatrixImpl(int name, ::UnityEngine::Matrix4x4 value);
    // static private System.Void SetGlobalTextureImpl(System.Int32 name, UnityEngine.Texture value)
    // Offset: 0x5494360
    static void SetGlobalTextureImpl(int name, ::UnityEngine::Texture* value);
    // static private System.Void SetGlobalRenderTextureImpl(System.Int32 name, UnityEngine.RenderTexture value, UnityEngine.Rendering.RenderTextureSubElement element)
    // Offset: 0x54943A4
    static void SetGlobalRenderTextureImpl(int name, ::UnityEngine::RenderTexture* value, ::UnityEngine::Rendering::RenderTextureSubElement element);
    // static private System.Void SetGlobalBufferImpl(System.Int32 name, UnityEngine.ComputeBuffer value)
    // Offset: 0x54943F8
    static void SetGlobalBufferImpl(int name, ::UnityEngine::ComputeBuffer* value);
    // static private System.Void SetGlobalGraphicsBufferImpl(System.Int32 name, UnityEngine.GraphicsBuffer value)
    // Offset: 0x549443C
    static void SetGlobalGraphicsBufferImpl(int name, ::UnityEngine::GraphicsBuffer* value);
    // static private System.Void SetGlobalConstantBufferImpl(System.Int32 name, UnityEngine.ComputeBuffer value, System.Int32 offset, System.Int32 size)
    // Offset: 0x5494480
    static void SetGlobalConstantBufferImpl(int name, ::UnityEngine::ComputeBuffer* value, int offset, int size);
    // static private System.Void SetGlobalConstantGraphicsBufferImpl(System.Int32 name, UnityEngine.GraphicsBuffer value, System.Int32 offset, System.Int32 size)
    // Offset: 0x54944DC
    static void SetGlobalConstantGraphicsBufferImpl(int name, ::UnityEngine::GraphicsBuffer* value, int offset, int size);
    // static private System.Int32 GetGlobalIntImpl(System.Int32 name)
    // Offset: 0x5494538
    static int GetGlobalIntImpl(int name);
    // static private System.Single GetGlobalFloatImpl(System.Int32 name)
    // Offset: 0x5494574
    static float GetGlobalFloatImpl(int name);
    // static private UnityEngine.Vector4 GetGlobalVectorImpl(System.Int32 name)
    // Offset: 0x54945B0
    static ::UnityEngine::Vector4 GetGlobalVectorImpl(int name);
    // static private UnityEngine.Matrix4x4 GetGlobalMatrixImpl(System.Int32 name)
    // Offset: 0x549464C
    static ::UnityEngine::Matrix4x4 GetGlobalMatrixImpl(int name);
    // static private UnityEngine.Texture GetGlobalTextureImpl(System.Int32 name)
    // Offset: 0x54946FC
    static ::UnityEngine::Texture* GetGlobalTextureImpl(int name);
    // static private System.Void SetGlobalFloatArrayImpl(System.Int32 name, System.Single[] values, System.Int32 count)
    // Offset: 0x5494738
    static void SetGlobalFloatArrayImpl(int name, ::ArrayW<float> values, int count);
    // static private System.Void SetGlobalVectorArrayImpl(System.Int32 name, UnityEngine.Vector4[] values, System.Int32 count)
    // Offset: 0x549478C
    static void SetGlobalVectorArrayImpl(int name, ::ArrayW<::UnityEngine::Vector4> values, int count);
    // static private System.Void SetGlobalMatrixArrayImpl(System.Int32 name, UnityEngine.Matrix4x4[] values, System.Int32 count)
    // Offset: 0x54947E0
    static void SetGlobalMatrixArrayImpl(int name, ::ArrayW<::UnityEngine::Matrix4x4> values, int count);
    // static private System.Single[] GetGlobalFloatArrayImpl(System.Int32 name)
    // Offset: 0x5494834
    static ::ArrayW<float> GetGlobalFloatArrayImpl(int name);
    // static private UnityEngine.Vector4[] GetGlobalVectorArrayImpl(System.Int32 name)
    // Offset: 0x5494870
    static ::ArrayW<::UnityEngine::Vector4> GetGlobalVectorArrayImpl(int name);
    // static private UnityEngine.Matrix4x4[] GetGlobalMatrixArrayImpl(System.Int32 name)
    // Offset: 0x54948AC
    static ::ArrayW<::UnityEngine::Matrix4x4> GetGlobalMatrixArrayImpl(int name);
    // static private System.Int32 GetGlobalFloatArrayCountImpl(System.Int32 name)
    // Offset: 0x54948E8
    static int GetGlobalFloatArrayCountImpl(int name);
    // static private System.Int32 GetGlobalVectorArrayCountImpl(System.Int32 name)
    // Offset: 0x5494924
    static int GetGlobalVectorArrayCountImpl(int name);
    // static private System.Int32 GetGlobalMatrixArrayCountImpl(System.Int32 name)
    // Offset: 0x5494960
    static int GetGlobalMatrixArrayCountImpl(int name);
    // static private System.Void ExtractGlobalFloatArrayImpl(System.Int32 name, out System.Single[] val)
    // Offset: 0x549499C
    static void ExtractGlobalFloatArrayImpl(int name, ByRef<::ArrayW<float>> val);
    // static private System.Void ExtractGlobalVectorArrayImpl(System.Int32 name, out UnityEngine.Vector4[] val)
    // Offset: 0x54949E0
    static void ExtractGlobalVectorArrayImpl(int name, ByRef<::ArrayW<::UnityEngine::Vector4>> val);
    // static private System.Void ExtractGlobalMatrixArrayImpl(System.Int32 name, out UnityEngine.Matrix4x4[] val)
    // Offset: 0x5494A24
    static void ExtractGlobalMatrixArrayImpl(int name, ByRef<::ArrayW<::UnityEngine::Matrix4x4>> val);
    // static private System.Void SetGlobalFloatArray(System.Int32 name, System.Single[] values, System.Int32 count)
    // Offset: 0x5494A68
    static void SetGlobalFloatArray(int name, ::ArrayW<float> values, int count);
    // static private System.Void SetGlobalVectorArray(System.Int32 name, UnityEngine.Vector4[] values, System.Int32 count)
    // Offset: 0x5494B6C
    static void SetGlobalVectorArray(int name, ::ArrayW<::UnityEngine::Vector4> values, int count);
    // static private System.Void SetGlobalMatrixArray(System.Int32 name, UnityEngine.Matrix4x4[] values, System.Int32 count)
    // Offset: 0x5494C70
    static void SetGlobalMatrixArray(int name, ::ArrayW<::UnityEngine::Matrix4x4> values, int count);
    // static private System.Void ExtractGlobalFloatArray(System.Int32 name, System.Collections.Generic.List`1<System.Single> values)
    // Offset: 0x5494D74
    static void ExtractGlobalFloatArray(int name, ::System::Collections::Generic::List_1<float>* values);
    // static private System.Void ExtractGlobalVectorArray(System.Int32 name, System.Collections.Generic.List`1<UnityEngine.Vector4> values)
    // Offset: 0x5494EE8
    static void ExtractGlobalVectorArray(int name, ::System::Collections::Generic::List_1<::UnityEngine::Vector4>* values);
    // static private System.Void ExtractGlobalMatrixArray(System.Int32 name, System.Collections.Generic.List`1<UnityEngine.Matrix4x4> values)
    // Offset: 0x549505C
    static void ExtractGlobalMatrixArray(int name, ::System::Collections::Generic::List_1<::UnityEngine::Matrix4x4>* values);
    // static public System.Void SetGlobalInt(System.String name, System.Int32 value)
    // Offset: 0x54951D0
    static void SetGlobalInt(::StringW name, int value);
    // static public System.Void SetGlobalInt(System.Int32 nameID, System.Int32 value)
    // Offset: 0x5495240
    static void SetGlobalInt(int nameID, int value);
    // static public System.Void SetGlobalFloat(System.String name, System.Single value)
    // Offset: 0x5495284
    static void SetGlobalFloat(::StringW name, float value);
    // static public System.Void SetGlobalFloat(System.Int32 nameID, System.Single value)
    // Offset: 0x54952FC
    static void SetGlobalFloat(int nameID, float value);
    // static public System.Void SetGlobalInteger(System.String name, System.Int32 value)
    // Offset: 0x5495348
    static void SetGlobalInteger(::StringW name, int value);
    // static public System.Void SetGlobalInteger(System.Int32 nameID, System.Int32 value)
    // Offset: 0x54953B8
    static void SetGlobalInteger(int nameID, int value);
    // static public System.Void SetGlobalVector(System.String name, UnityEngine.Vector4 value)
    // Offset: 0x54953FC
    static void SetGlobalVector(::StringW name, ::UnityEngine::Vector4 value);
    // static public System.Void SetGlobalVector(System.Int32 nameID, UnityEngine.Vector4 value)
    // Offset: 0x549546C
    static void SetGlobalVector(int nameID, ::UnityEngine::Vector4 value);
    // static public System.Void SetGlobalColor(System.String name, UnityEngine.Color value)
    // Offset: 0x5495470
    static void SetGlobalColor(::StringW name, ::UnityEngine::Color value);
    // static public System.Void SetGlobalColor(System.Int32 nameID, UnityEngine.Color value)
    // Offset: 0x54954E0
    static void SetGlobalColor(int nameID, ::UnityEngine::Color value);
    // static public System.Void SetGlobalMatrix(System.String name, UnityEngine.Matrix4x4 value)
    // Offset: 0x54954E4
    static void SetGlobalMatrix(::StringW name, ::UnityEngine::Matrix4x4 value);
    // static public System.Void SetGlobalMatrix(System.Int32 nameID, UnityEngine.Matrix4x4 value)
    // Offset: 0x5495570
    static void SetGlobalMatrix(int nameID, ::UnityEngine::Matrix4x4 value);
    // static public System.Void SetGlobalTexture(System.String name, UnityEngine.Texture value)
    // Offset: 0x54955CC
    static void SetGlobalTexture(::StringW name, ::UnityEngine::Texture* value);
    // static public System.Void SetGlobalTexture(System.Int32 nameID, UnityEngine.Texture value)
    // Offset: 0x549563C
    static void SetGlobalTexture(int nameID, ::UnityEngine::Texture* value);
    // static public System.Void SetGlobalTexture(System.String name, UnityEngine.RenderTexture value, UnityEngine.Rendering.RenderTextureSubElement element)
    // Offset: 0x5495680
    static void SetGlobalTexture(::StringW name, ::UnityEngine::RenderTexture* value, ::UnityEngine::Rendering::RenderTextureSubElement element);
    // static public System.Void SetGlobalTexture(System.Int32 nameID, UnityEngine.RenderTexture value, UnityEngine.Rendering.RenderTextureSubElement element)
    // Offset: 0x5495700
    static void SetGlobalTexture(int nameID, ::UnityEngine::RenderTexture* value, ::UnityEngine::Rendering::RenderTextureSubElement element);
    // static public System.Void SetGlobalBuffer(System.String name, UnityEngine.ComputeBuffer value)
    // Offset: 0x5495754
    static void SetGlobalBuffer(::StringW name, ::UnityEngine::ComputeBuffer* value);
    // static public System.Void SetGlobalBuffer(System.Int32 nameID, UnityEngine.ComputeBuffer value)
    // Offset: 0x54957C4
    static void SetGlobalBuffer(int nameID, ::UnityEngine::ComputeBuffer* value);
    // static public System.Void SetGlobalBuffer(System.String name, UnityEngine.GraphicsBuffer value)
    // Offset: 0x5495808
    static void SetGlobalBuffer(::StringW name, ::UnityEngine::GraphicsBuffer* value);
    // static public System.Void SetGlobalBuffer(System.Int32 nameID, UnityEngine.GraphicsBuffer value)
    // Offset: 0x5495878
    static void SetGlobalBuffer(int nameID, ::UnityEngine::GraphicsBuffer* value);
    // static public System.Void SetGlobalConstantBuffer(System.String name, UnityEngine.ComputeBuffer value, System.Int32 offset, System.Int32 size)
    // Offset: 0x54958BC
    static void SetGlobalConstantBuffer(::StringW name, ::UnityEngine::ComputeBuffer* value, int offset, int size);
    // static public System.Void SetGlobalConstantBuffer(System.Int32 nameID, UnityEngine.ComputeBuffer value, System.Int32 offset, System.Int32 size)
    // Offset: 0x5495944
    static void SetGlobalConstantBuffer(int nameID, ::UnityEngine::ComputeBuffer* value, int offset, int size);
    // static public System.Void SetGlobalConstantBuffer(System.String name, UnityEngine.GraphicsBuffer value, System.Int32 offset, System.Int32 size)
    // Offset: 0x54959A0
    static void SetGlobalConstantBuffer(::StringW name, ::UnityEngine::GraphicsBuffer* value, int offset, int size);
    // static public System.Void SetGlobalConstantBuffer(System.Int32 nameID, UnityEngine.GraphicsBuffer value, System.Int32 offset, System.Int32 size)
    // Offset: 0x5495A28
    static void SetGlobalConstantBuffer(int nameID, ::UnityEngine::GraphicsBuffer* value, int offset, int size);
    // static public System.Void SetGlobalFloatArray(System.String name, System.Collections.Generic.List`1<System.Single> values)
    // Offset: 0x5495A84
    static void SetGlobalFloatArray(::StringW name, ::System::Collections::Generic::List_1<float>* values);
    // static public System.Void SetGlobalFloatArray(System.Int32 nameID, System.Collections.Generic.List`1<System.Single> values)
    // Offset: 0x5495B28
    static void SetGlobalFloatArray(int nameID, ::System::Collections::Generic::List_1<float>* values);
    // static public System.Void SetGlobalFloatArray(System.String name, System.Single[] values)
    // Offset: 0x5495BA0
    static void SetGlobalFloatArray(::StringW name, ::ArrayW<float> values);
    // static public System.Void SetGlobalFloatArray(System.Int32 nameID, System.Single[] values)
    // Offset: 0x5495BF4
    static void SetGlobalFloatArray(int nameID, ::ArrayW<float> values);
    // static public System.Void SetGlobalVectorArray(System.String name, System.Collections.Generic.List`1<UnityEngine.Vector4> values)
    // Offset: 0x5495C0C
    static void SetGlobalVectorArray(::StringW name, ::System::Collections::Generic::List_1<::UnityEngine::Vector4>* values);
    // static public System.Void SetGlobalVectorArray(System.Int32 nameID, System.Collections.Generic.List`1<UnityEngine.Vector4> values)
    // Offset: 0x5495CB0
    static void SetGlobalVectorArray(int nameID, ::System::Collections::Generic::List_1<::UnityEngine::Vector4>* values);
    // static public System.Void SetGlobalVectorArray(System.String name, UnityEngine.Vector4[] values)
    // Offset: 0x5495D28
    static void SetGlobalVectorArray(::StringW name, ::ArrayW<::UnityEngine::Vector4> values);
    // static public System.Void SetGlobalVectorArray(System.Int32 nameID, UnityEngine.Vector4[] values)
    // Offset: 0x5495D7C
    static void SetGlobalVectorArray(int nameID, ::ArrayW<::UnityEngine::Vector4> values);
    // static public System.Void SetGlobalMatrixArray(System.String name, System.Collections.Generic.List`1<UnityEngine.Matrix4x4> values)
    // Offset: 0x5495D94
    static void SetGlobalMatrixArray(::StringW name, ::System::Collections::Generic::List_1<::UnityEngine::Matrix4x4>* values);
    // static public System.Void SetGlobalMatrixArray(System.Int32 nameID, System.Collections.Generic.List`1<UnityEngine.Matrix4x4> values)
    // Offset: 0x5495E38
    static void SetGlobalMatrixArray(int nameID, ::System::Collections::Generic::List_1<::UnityEngine::Matrix4x4>* values);
    // static public System.Void SetGlobalMatrixArray(System.String name, UnityEngine.Matrix4x4[] values)
    // Offset: 0x5495EB0
    static void SetGlobalMatrixArray(::StringW name, ::ArrayW<::UnityEngine::Matrix4x4> values);
    // static public System.Void SetGlobalMatrixArray(System.Int32 nameID, UnityEngine.Matrix4x4[] values)
    // Offset: 0x5495F04
    static void SetGlobalMatrixArray(int nameID, ::ArrayW<::UnityEngine::Matrix4x4> values);
    // static public System.Int32 GetGlobalInt(System.String name)
    // Offset: 0x5495F1C
    static int GetGlobalInt(::StringW name);
    // static public System.Int32 GetGlobalInt(System.Int32 nameID)
    // Offset: 0x5495FA0
    static int GetGlobalInt(int nameID);
    // static public System.Single GetGlobalFloat(System.String name)
    // Offset: 0x5495FF8
    static float GetGlobalFloat(::StringW name);
    // static public System.Single GetGlobalFloat(System.Int32 nameID)
    // Offset: 0x5496060
    static float GetGlobalFloat(int nameID);
    // static public System.Int32 GetGlobalInteger(System.String name)
    // Offset: 0x549609C
    static int GetGlobalInteger(::StringW name);
    // static public System.Int32 GetGlobalInteger(System.Int32 nameID)
    // Offset: 0x5496104
    static int GetGlobalInteger(int nameID);
    // static public UnityEngine.Vector4 GetGlobalVector(System.String name)
    // Offset: 0x5496140
    static ::UnityEngine::Vector4 GetGlobalVector(::StringW name);
    // static public UnityEngine.Vector4 GetGlobalVector(System.Int32 nameID)
    // Offset: 0x5496180
    static ::UnityEngine::Vector4 GetGlobalVector(int nameID);
    // static public UnityEngine.Color GetGlobalColor(System.String name)
    // Offset: 0x5496184
    static ::UnityEngine::Color GetGlobalColor(::StringW name);
    // static public UnityEngine.Color GetGlobalColor(System.Int32 nameID)
    // Offset: 0x54961C4
    static ::UnityEngine::Color GetGlobalColor(int nameID);
    // static public UnityEngine.Matrix4x4 GetGlobalMatrix(System.String name)
    // Offset: 0x54961C8
    static ::UnityEngine::Matrix4x4 GetGlobalMatrix(::StringW name);
    // static public UnityEngine.Matrix4x4 GetGlobalMatrix(System.Int32 nameID)
    // Offset: 0x5496268
    static ::UnityEngine::Matrix4x4 GetGlobalMatrix(int nameID);
    // static public UnityEngine.Texture GetGlobalTexture(System.String name)
    // Offset: 0x54962DC
    static ::UnityEngine::Texture* GetGlobalTexture(::StringW name);
    // static public UnityEngine.Texture GetGlobalTexture(System.Int32 nameID)
    // Offset: 0x5496344
    static ::UnityEngine::Texture* GetGlobalTexture(int nameID);
    // static public System.Single[] GetGlobalFloatArray(System.String name)
    // Offset: 0x5496380
    static ::ArrayW<float> GetGlobalFloatArray(::StringW name);
    // static public System.Single[] GetGlobalFloatArray(System.Int32 nameID)
    // Offset: 0x54963C0
    static ::ArrayW<float> GetGlobalFloatArray(int nameID);
    // static public UnityEngine.Vector4[] GetGlobalVectorArray(System.String name)
    // Offset: 0x5496438
    static ::ArrayW<::UnityEngine::Vector4> GetGlobalVectorArray(::StringW name);
    // static public UnityEngine.Vector4[] GetGlobalVectorArray(System.Int32 nameID)
    // Offset: 0x5496478
    static ::ArrayW<::UnityEngine::Vector4> GetGlobalVectorArray(int nameID);
    // static public UnityEngine.Matrix4x4[] GetGlobalMatrixArray(System.String name)
    // Offset: 0x54964F0
    static ::ArrayW<::UnityEngine::Matrix4x4> GetGlobalMatrixArray(::StringW name);
    // static public UnityEngine.Matrix4x4[] GetGlobalMatrixArray(System.Int32 nameID)
    // Offset: 0x5496530
    static ::ArrayW<::UnityEngine::Matrix4x4> GetGlobalMatrixArray(int nameID);
    // static public System.Void GetGlobalFloatArray(System.String name, System.Collections.Generic.List`1<System.Single> values)
    // Offset: 0x54965A8
    static void GetGlobalFloatArray(::StringW name, ::System::Collections::Generic::List_1<float>* values);
    // static public System.Void GetGlobalFloatArray(System.Int32 nameID, System.Collections.Generic.List`1<System.Single> values)
    // Offset: 0x54965F0
    static void GetGlobalFloatArray(int nameID, ::System::Collections::Generic::List_1<float>* values);
    // static public System.Void GetGlobalVectorArray(System.String name, System.Collections.Generic.List`1<UnityEngine.Vector4> values)
    // Offset: 0x54965F4
    static void GetGlobalVectorArray(::StringW name, ::System::Collections::Generic::List_1<::UnityEngine::Vector4>* values);
    // static public System.Void GetGlobalVectorArray(System.Int32 nameID, System.Collections.Generic.List`1<UnityEngine.Vector4> values)
    // Offset: 0x549663C
    static void GetGlobalVectorArray(int nameID, ::System::Collections::Generic::List_1<::UnityEngine::Vector4>* values);
    // static public System.Void GetGlobalMatrixArray(System.String name, System.Collections.Generic.List`1<UnityEngine.Matrix4x4> values)
    // Offset: 0x5496640
    static void GetGlobalMatrixArray(::StringW name, ::System::Collections::Generic::List_1<::UnityEngine::Matrix4x4>* values);
    // static public System.Void GetGlobalMatrixArray(System.Int32 nameID, System.Collections.Generic.List`1<UnityEngine.Matrix4x4> values)
    // Offset: 0x5496688
    static void GetGlobalMatrixArray(int nameID, ::System::Collections::Generic::List_1<::UnityEngine::Matrix4x4>* values);
    // static private System.String GetPropertyName(UnityEngine.Shader shader, System.Int32 propertyIndex)
    // Offset: 0x54966E4
    static ::StringW GetPropertyName(::UnityEngine::Shader* shader, int propertyIndex);
    // static private System.Int32 GetPropertyNameId(UnityEngine.Shader shader, System.Int32 propertyIndex)
    // Offset: 0x5496728
    static int GetPropertyNameId(::UnityEngine::Shader* shader, int propertyIndex);
    // static private UnityEngine.Rendering.ShaderPropertyType GetPropertyType(UnityEngine.Shader shader, System.Int32 propertyIndex)
    // Offset: 0x549676C
    static ::UnityEngine::Rendering::ShaderPropertyType GetPropertyType(::UnityEngine::Shader* shader, int propertyIndex);
    // static private System.String GetPropertyDescription(UnityEngine.Shader shader, System.Int32 propertyIndex)
    // Offset: 0x54967B0
    static ::StringW GetPropertyDescription(::UnityEngine::Shader* shader, int propertyIndex);
    // static private UnityEngine.Rendering.ShaderPropertyFlags GetPropertyFlags(UnityEngine.Shader shader, System.Int32 propertyIndex)
    // Offset: 0x54967F4
    static ::UnityEngine::Rendering::ShaderPropertyFlags GetPropertyFlags(::UnityEngine::Shader* shader, int propertyIndex);
    // static private System.String[] GetPropertyAttributes(UnityEngine.Shader shader, System.Int32 propertyIndex)
    // Offset: 0x5496838
    static ::ArrayW<::StringW> GetPropertyAttributes(::UnityEngine::Shader* shader, int propertyIndex);
    // static private System.Int32 GetPropertyDefaultIntValue(UnityEngine.Shader shader, System.Int32 propertyIndex)
    // Offset: 0x549687C
    static int GetPropertyDefaultIntValue(::UnityEngine::Shader* shader, int propertyIndex);
    // static private UnityEngine.Vector4 GetPropertyDefaultValue(UnityEngine.Shader shader, System.Int32 propertyIndex)
    // Offset: 0x54968C0
    static ::UnityEngine::Vector4 GetPropertyDefaultValue(::UnityEngine::Shader* shader, int propertyIndex);
    // static private UnityEngine.Rendering.TextureDimension GetPropertyTextureDimension(UnityEngine.Shader shader, System.Int32 propertyIndex)
    // Offset: 0x5496974
    static ::UnityEngine::Rendering::TextureDimension GetPropertyTextureDimension(::UnityEngine::Shader* shader, int propertyIndex);
    // static private System.String GetPropertyTextureDefaultName(UnityEngine.Shader shader, System.Int32 propertyIndex)
    // Offset: 0x54969B8
    static ::StringW GetPropertyTextureDefaultName(::UnityEngine::Shader* shader, int propertyIndex);
    // static private System.Boolean FindTextureStackImpl(UnityEngine.Shader s, System.Int32 propertyIdx, out System.String stackName, out System.Int32 layerIndex)
    // Offset: 0x54969FC
    static bool FindTextureStackImpl(::UnityEngine::Shader* s, int propertyIdx, ByRef<::StringW> stackName, ByRef<int> layerIndex);
    // static private System.Void CheckPropertyIndex(UnityEngine.Shader s, System.Int32 propertyIndex)
    // Offset: 0x5496A58
    static void CheckPropertyIndex(::UnityEngine::Shader* s, int propertyIndex);
    // public System.Int32 GetPropertyCount()
    // Offset: 0x5496AF8
    int GetPropertyCount();
    // public System.Int32 FindPropertyIndex(System.String propertyName)
    // Offset: 0x5496B34
    int FindPropertyIndex(::StringW propertyName);
    // public System.String GetPropertyName(System.Int32 propertyIndex)
    // Offset: 0x5496B78
    ::StringW GetPropertyName(int propertyIndex);
    // public System.Int32 GetPropertyNameId(System.Int32 propertyIndex)
    // Offset: 0x5496BC0
    int GetPropertyNameId(int propertyIndex);
    // public UnityEngine.Rendering.ShaderPropertyType GetPropertyType(System.Int32 propertyIndex)
    // Offset: 0x5496C08
    ::UnityEngine::Rendering::ShaderPropertyType GetPropertyType(int propertyIndex);
    // public System.String GetPropertyDescription(System.Int32 propertyIndex)
    // Offset: 0x5496C50
    ::StringW GetPropertyDescription(int propertyIndex);
    // public UnityEngine.Rendering.ShaderPropertyFlags GetPropertyFlags(System.Int32 propertyIndex)
    // Offset: 0x5496C98
    ::UnityEngine::Rendering::ShaderPropertyFlags GetPropertyFlags(int propertyIndex);
    // public System.String[] GetPropertyAttributes(System.Int32 propertyIndex)
    // Offset: 0x5496CE0
    ::ArrayW<::StringW> GetPropertyAttributes(int propertyIndex);
    // public System.Single GetPropertyDefaultFloatValue(System.Int32 propertyIndex)
    // Offset: 0x5496D28
    float GetPropertyDefaultFloatValue(int propertyIndex);
    // public UnityEngine.Vector4 GetPropertyDefaultVectorValue(System.Int32 propertyIndex)
    // Offset: 0x5496DB0
    ::UnityEngine::Vector4 GetPropertyDefaultVectorValue(int propertyIndex);
    // public UnityEngine.Vector2 GetPropertyRangeLimits(System.Int32 propertyIndex)
    // Offset: 0x5496E34
    ::UnityEngine::Vector2 GetPropertyRangeLimits(int propertyIndex);
    // public System.Int32 GetPropertyDefaultIntValue(System.Int32 propertyIndex)
    // Offset: 0x5496EC4
    int GetPropertyDefaultIntValue(int propertyIndex);
    // public UnityEngine.Rendering.TextureDimension GetPropertyTextureDimension(System.Int32 propertyIndex)
    // Offset: 0x5496F68
    ::UnityEngine::Rendering::TextureDimension GetPropertyTextureDimension(int propertyIndex);
    // public System.String GetPropertyTextureDefaultName(System.Int32 propertyIndex)
    // Offset: 0x549700C
    ::StringW GetPropertyTextureDefaultName(int propertyIndex);
    // public System.Boolean FindTextureStack(System.Int32 propertyIndex, out System.String stackName, out System.Int32 layerIndex)
    // Offset: 0x54970B0
    bool FindTextureStack(int propertyIndex, ByRef<::StringW> stackName, ByRef<int> layerIndex);
    // private System.Void get_keywordSpace_Injected(out UnityEngine.Rendering.LocalKeywordSpace ret)
    // Offset: 0x5493790
    void get_keywordSpace_Injected(ByRef<::UnityEngine::Rendering::LocalKeywordSpace> ret);
    // static private System.Void EnableKeywordFast_Injected(ref UnityEngine.Rendering.GlobalKeyword keyword)
    // Offset: 0x54938C8
    static void EnableKeywordFast_Injected(ByRef<::UnityEngine::Rendering::GlobalKeyword> keyword);
    // static private System.Void DisableKeywordFast_Injected(ref UnityEngine.Rendering.GlobalKeyword keyword)
    // Offset: 0x5493944
    static void DisableKeywordFast_Injected(ByRef<::UnityEngine::Rendering::GlobalKeyword> keyword);
    // static private System.Void SetKeywordFast_Injected(ref UnityEngine.Rendering.GlobalKeyword keyword, System.Boolean value)
    // Offset: 0x54939D0
    static void SetKeywordFast_Injected(ByRef<::UnityEngine::Rendering::GlobalKeyword> keyword, bool value);
    // static private System.Boolean IsKeywordEnabledFast_Injected(ref UnityEngine.Rendering.GlobalKeyword keyword)
    // Offset: 0x5493A58
    static bool IsKeywordEnabledFast_Injected(ByRef<::UnityEngine::Rendering::GlobalKeyword> keyword);
    // static private System.Void SetGlobalVectorImpl_Injected(System.Int32 name, ref UnityEngine.Vector4 value)
    // Offset: 0x5494294
    static void SetGlobalVectorImpl_Injected(int name, ByRef<::UnityEngine::Vector4> value);
    // static private System.Void SetGlobalMatrixImpl_Injected(System.Int32 name, ref UnityEngine.Matrix4x4 value)
    // Offset: 0x549431C
    static void SetGlobalMatrixImpl_Injected(int name, ByRef<::UnityEngine::Matrix4x4> value);
    // static private System.Void GetGlobalVectorImpl_Injected(System.Int32 name, out UnityEngine.Vector4 ret)
    // Offset: 0x5494608
    static void GetGlobalVectorImpl_Injected(int name, ByRef<::UnityEngine::Vector4> ret);
    // static private System.Void GetGlobalMatrixImpl_Injected(System.Int32 name, out UnityEngine.Matrix4x4 ret)
    // Offset: 0x54946B8
    static void GetGlobalMatrixImpl_Injected(int name, ByRef<::UnityEngine::Matrix4x4> ret);
    // static private System.Void GetPropertyDefaultValue_Injected(UnityEngine.Shader shader, System.Int32 propertyIndex, out UnityEngine.Vector4 ret)
    // Offset: 0x5496920
    static void GetPropertyDefaultValue_Injected(::UnityEngine::Shader* shader, int propertyIndex, ByRef<::UnityEngine::Vector4> ret);
    // private System.Void .ctor()
    // Offset: 0x549668C
    // Implemented from: UnityEngine.Object
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static Shader* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Shader::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<Shader*, creationType>()));
    }
  }; // UnityEngine.Shader
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::Shader::get_globalShaderHardwareTier
// Il2CppName: get_globalShaderHardwareTier
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Rendering::ShaderHardwareTier (*)()>(&UnityEngine::Shader::get_globalShaderHardwareTier)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Shader*), "get_globalShaderHardwareTier", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Shader::set_globalShaderHardwareTier
// Il2CppName: set_globalShaderHardwareTier
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::Rendering::ShaderHardwareTier)>(&UnityEngine::Shader::set_globalShaderHardwareTier)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "ShaderHardwareTier")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Shader*), "set_globalShaderHardwareTier", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Shader::Find
// Il2CppName: Find
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Shader* (*)(::StringW)>(&UnityEngine::Shader::Find)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Shader*), "Find", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name});
  }
};
// Writing MetadataGetter for method: UnityEngine::Shader::FindBuiltin
// Il2CppName: FindBuiltin
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Shader* (*)(::StringW)>(&UnityEngine::Shader::FindBuiltin)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Shader*), "FindBuiltin", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name});
  }
};
// Writing MetadataGetter for method: UnityEngine::Shader::get_maximumChunksOverride
// Il2CppName: get_maximumChunksOverride
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)()>(&UnityEngine::Shader::get_maximumChunksOverride)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Shader*), "get_maximumChunksOverride", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Shader::set_maximumChunksOverride
// Il2CppName: set_maximumChunksOverride
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int)>(&UnityEngine::Shader::set_maximumChunksOverride)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Shader*), "set_maximumChunksOverride", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Shader::get_maximumLOD
// Il2CppName: get_maximumLOD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::Shader::*)()>(&UnityEngine::Shader::get_maximumLOD)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Shader*), "get_maximumLOD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Shader::set_maximumLOD
// Il2CppName: set_maximumLOD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Shader::*)(int)>(&UnityEngine::Shader::set_maximumLOD)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Shader*), "set_maximumLOD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Shader::get_globalMaximumLOD
// Il2CppName: get_globalMaximumLOD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)()>(&UnityEngine::Shader::get_globalMaximumLOD)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Shader*), "get_globalMaximumLOD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Shader::set_globalMaximumLOD
// Il2CppName: set_globalMaximumLOD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int)>(&UnityEngine::Shader::set_globalMaximumLOD)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Shader*), "set_globalMaximumLOD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Shader::get_isSupported
// Il2CppName: get_isSupported
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::Shader::*)()>(&UnityEngine::Shader::get_isSupported)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Shader*), "get_isSupported", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Shader::get_globalRenderPipeline
// Il2CppName: get_globalRenderPipeline
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)()>(&UnityEngine::Shader::get_globalRenderPipeline)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Shader*), "get_globalRenderPipeline", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Shader::set_globalRenderPipeline
// Il2CppName: set_globalRenderPipeline
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::StringW)>(&UnityEngine::Shader::set_globalRenderPipeline)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Shader*), "set_globalRenderPipeline", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Shader::get_enabledGlobalKeywords
// Il2CppName: get_enabledGlobalKeywords
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::UnityEngine::Rendering::GlobalKeyword> (*)()>(&UnityEngine::Shader::get_enabledGlobalKeywords)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Shader*), "get_enabledGlobalKeywords", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Shader::get_globalKeywords
// Il2CppName: get_globalKeywords
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::UnityEngine::Rendering::GlobalKeyword> (*)()>(&UnityEngine::Shader::get_globalKeywords)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Shader*), "get_globalKeywords", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Shader::get_keywordSpace
// Il2CppName: get_keywordSpace
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Rendering::LocalKeywordSpace (UnityEngine::Shader::*)()>(&UnityEngine::Shader::get_keywordSpace)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Shader*), "get_keywordSpace", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Shader::GetEnabledGlobalKeywords
// Il2CppName: GetEnabledGlobalKeywords
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::UnityEngine::Rendering::GlobalKeyword> (*)()>(&UnityEngine::Shader::GetEnabledGlobalKeywords)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Shader*), "GetEnabledGlobalKeywords", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Shader::GetAllGlobalKeywords
// Il2CppName: GetAllGlobalKeywords
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::UnityEngine::Rendering::GlobalKeyword> (*)()>(&UnityEngine::Shader::GetAllGlobalKeywords)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Shader*), "GetAllGlobalKeywords", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Shader::EnableKeyword
// Il2CppName: EnableKeyword
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::StringW)>(&UnityEngine::Shader::EnableKeyword)> {
  static const MethodInfo* get() {
    static auto* keyword = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Shader*), "EnableKeyword", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{keyword});
  }
};
// Writing MetadataGetter for method: UnityEngine::Shader::DisableKeyword
// Il2CppName: DisableKeyword
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::StringW)>(&UnityEngine::Shader::DisableKeyword)> {
  static const MethodInfo* get() {
    static auto* keyword = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Shader*), "DisableKeyword", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{keyword});
  }
};
// Writing MetadataGetter for method: UnityEngine::Shader::IsKeywordEnabled
// Il2CppName: IsKeywordEnabled
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::StringW)>(&UnityEngine::Shader::IsKeywordEnabled)> {
  static const MethodInfo* get() {
    static auto* keyword = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Shader*), "IsKeywordEnabled", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{keyword});
  }
};
// Writing MetadataGetter for method: UnityEngine::Shader::EnableKeywordFast
// Il2CppName: EnableKeywordFast
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::Rendering::GlobalKeyword)>(&UnityEngine::Shader::EnableKeywordFast)> {
  static const MethodInfo* get() {
    static auto* keyword = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "GlobalKeyword")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Shader*), "EnableKeywordFast", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{keyword});
  }
};
// Writing MetadataGetter for method: UnityEngine::Shader::DisableKeywordFast
// Il2CppName: DisableKeywordFast
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::Rendering::GlobalKeyword)>(&UnityEngine::Shader::DisableKeywordFast)> {
  static const MethodInfo* get() {
    static auto* keyword = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "GlobalKeyword")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Shader*), "DisableKeywordFast", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{keyword});
  }
};
// Writing MetadataGetter for method: UnityEngine::Shader::SetKeywordFast
// Il2CppName: SetKeywordFast
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::Rendering::GlobalKeyword, bool)>(&UnityEngine::Shader::SetKeywordFast)> {
  static const MethodInfo* get() {
    static auto* keyword = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "GlobalKeyword")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Shader*), "SetKeywordFast", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{keyword, value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Shader::IsKeywordEnabledFast
// Il2CppName: IsKeywordEnabledFast
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::UnityEngine::Rendering::GlobalKeyword)>(&UnityEngine::Shader::IsKeywordEnabledFast)> {
  static const MethodInfo* get() {
    static auto* keyword = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "GlobalKeyword")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Shader*), "IsKeywordEnabledFast", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{keyword});
  }
};
// Writing MetadataGetter for method: UnityEngine::Shader::EnableKeyword
// Il2CppName: EnableKeyword
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(ByRef<::UnityEngine::Rendering::GlobalKeyword>)>(&UnityEngine::Shader::EnableKeyword)> {
  static const MethodInfo* get() {
    static auto* keyword = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "GlobalKeyword")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Shader*), "EnableKeyword", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{keyword});
  }
};
// Writing MetadataGetter for method: UnityEngine::Shader::DisableKeyword
// Il2CppName: DisableKeyword
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(ByRef<::UnityEngine::Rendering::GlobalKeyword>)>(&UnityEngine::Shader::DisableKeyword)> {
  static const MethodInfo* get() {
    static auto* keyword = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "GlobalKeyword")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Shader*), "DisableKeyword", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{keyword});
  }
};
// Writing MetadataGetter for method: UnityEngine::Shader::SetKeyword
// Il2CppName: SetKeyword
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(ByRef<::UnityEngine::Rendering::GlobalKeyword>, bool)>(&UnityEngine::Shader::SetKeyword)> {
  static const MethodInfo* get() {
    static auto* keyword = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "GlobalKeyword")->this_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Shader*), "SetKeyword", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{keyword, value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Shader::IsKeywordEnabled
// Il2CppName: IsKeywordEnabled
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(ByRef<::UnityEngine::Rendering::GlobalKeyword>)>(&UnityEngine::Shader::IsKeywordEnabled)> {
  static const MethodInfo* get() {
    static auto* keyword = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "GlobalKeyword")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Shader*), "IsKeywordEnabled", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{keyword});
  }
};
// Writing MetadataGetter for method: UnityEngine::Shader::get_renderQueue
// Il2CppName: get_renderQueue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::Shader::*)()>(&UnityEngine::Shader::get_renderQueue)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Shader*), "get_renderQueue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Shader::get_disableBatching
// Il2CppName: get_disableBatching
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::DisableBatchingType (UnityEngine::Shader::*)()>(&UnityEngine::Shader::get_disableBatching)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Shader*), "get_disableBatching", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Shader::WarmupAllShaders
// Il2CppName: WarmupAllShaders
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&UnityEngine::Shader::WarmupAllShaders)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Shader*), "WarmupAllShaders", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Shader::TagToID
// Il2CppName: TagToID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::StringW)>(&UnityEngine::Shader::TagToID)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Shader*), "TagToID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name});
  }
};
// Writing MetadataGetter for method: UnityEngine::Shader::IDToTag
// Il2CppName: IDToTag
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(int)>(&UnityEngine::Shader::IDToTag)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Shader*), "IDToTag", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name});
  }
};
// Writing MetadataGetter for method: UnityEngine::Shader::PropertyToID
// Il2CppName: PropertyToID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::StringW)>(&UnityEngine::Shader::PropertyToID)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Shader*), "PropertyToID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name});
  }
};
// Writing MetadataGetter for method: UnityEngine::Shader::GetDependency
// Il2CppName: GetDependency
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Shader* (UnityEngine::Shader::*)(::StringW)>(&UnityEngine::Shader::GetDependency)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Shader*), "GetDependency", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name});
  }
};
// Writing MetadataGetter for method: UnityEngine::Shader::get_passCount
// Il2CppName: get_passCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::Shader::*)()>(&UnityEngine::Shader::get_passCount)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Shader*), "get_passCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Shader::get_subshaderCount
// Il2CppName: get_subshaderCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::Shader::*)()>(&UnityEngine::Shader::get_subshaderCount)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Shader*), "get_subshaderCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Shader::GetPassCountInSubshader
// Il2CppName: GetPassCountInSubshader
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::Shader::*)(int)>(&UnityEngine::Shader::GetPassCountInSubshader)> {
  static const MethodInfo* get() {
    static auto* subshaderIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Shader*), "GetPassCountInSubshader", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{subshaderIndex});
  }
};
// Writing MetadataGetter for method: UnityEngine::Shader::FindPassTagValue
// Il2CppName: FindPassTagValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Rendering::ShaderTagId (UnityEngine::Shader::*)(int, ::UnityEngine::Rendering::ShaderTagId)>(&UnityEngine::Shader::FindPassTagValue)> {
  static const MethodInfo* get() {
    static auto* passIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* tagName = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "ShaderTagId")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Shader*), "FindPassTagValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{passIndex, tagName});
  }
};
// Writing MetadataGetter for method: UnityEngine::Shader::FindPassTagValue
// Il2CppName: FindPassTagValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Rendering::ShaderTagId (UnityEngine::Shader::*)(int, int, ::UnityEngine::Rendering::ShaderTagId)>(&UnityEngine::Shader::FindPassTagValue)> {
  static const MethodInfo* get() {
    static auto* subshaderIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* passIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* tagName = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "ShaderTagId")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Shader*), "FindPassTagValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{subshaderIndex, passIndex, tagName});
  }
};
// Writing MetadataGetter for method: UnityEngine::Shader::FindSubshaderTagValue
// Il2CppName: FindSubshaderTagValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Rendering::ShaderTagId (UnityEngine::Shader::*)(int, ::UnityEngine::Rendering::ShaderTagId)>(&UnityEngine::Shader::FindSubshaderTagValue)> {
  static const MethodInfo* get() {
    static auto* subshaderIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* tagName = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "ShaderTagId")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Shader*), "FindSubshaderTagValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{subshaderIndex, tagName});
  }
};
// Writing MetadataGetter for method: UnityEngine::Shader::Internal_FindPassTagValue
// Il2CppName: Internal_FindPassTagValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::Shader::*)(int, int)>(&UnityEngine::Shader::Internal_FindPassTagValue)> {
  static const MethodInfo* get() {
    static auto* passIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* tagName = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Shader*), "Internal_FindPassTagValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{passIndex, tagName});
  }
};
// Writing MetadataGetter for method: UnityEngine::Shader::Internal_FindPassTagValueInSubShader
// Il2CppName: Internal_FindPassTagValueInSubShader
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::Shader::*)(int, int, int)>(&UnityEngine::Shader::Internal_FindPassTagValueInSubShader)> {
  static const MethodInfo* get() {
    static auto* subShaderIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* passIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* tagName = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Shader*), "Internal_FindPassTagValueInSubShader", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{subShaderIndex, passIndex, tagName});
  }
};
// Writing MetadataGetter for method: UnityEngine::Shader::Internal_FindSubshaderTagValue
// Il2CppName: Internal_FindSubshaderTagValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::Shader::*)(int, int)>(&UnityEngine::Shader::Internal_FindSubshaderTagValue)> {
  static const MethodInfo* get() {
    static auto* subShaderIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* tagName = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Shader*), "Internal_FindSubshaderTagValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{subShaderIndex, tagName});
  }
};
// Writing MetadataGetter for method: UnityEngine::Shader::SetGlobalIntImpl
// Il2CppName: SetGlobalIntImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int, int)>(&UnityEngine::Shader::SetGlobalIntImpl)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Shader*), "SetGlobalIntImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name, value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Shader::SetGlobalFloatImpl
// Il2CppName: SetGlobalFloatImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int, float)>(&UnityEngine::Shader::SetGlobalFloatImpl)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Shader*), "SetGlobalFloatImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name, value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Shader::SetGlobalVectorImpl
// Il2CppName: SetGlobalVectorImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int, ::UnityEngine::Vector4)>(&UnityEngine::Shader::SetGlobalVectorImpl)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector4")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Shader*), "SetGlobalVectorImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name, value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Shader::SetGlobalMatrixImpl
// Il2CppName: SetGlobalMatrixImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int, ::UnityEngine::Matrix4x4)>(&UnityEngine::Shader::SetGlobalMatrixImpl)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Matrix4x4")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Shader*), "SetGlobalMatrixImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name, value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Shader::SetGlobalTextureImpl
// Il2CppName: SetGlobalTextureImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int, ::UnityEngine::Texture*)>(&UnityEngine::Shader::SetGlobalTextureImpl)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Texture")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Shader*), "SetGlobalTextureImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name, value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Shader::SetGlobalRenderTextureImpl
// Il2CppName: SetGlobalRenderTextureImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int, ::UnityEngine::RenderTexture*, ::UnityEngine::Rendering::RenderTextureSubElement)>(&UnityEngine::Shader::SetGlobalRenderTextureImpl)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "RenderTexture")->byval_arg;
    static auto* element = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "RenderTextureSubElement")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Shader*), "SetGlobalRenderTextureImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name, value, element});
  }
};
// Writing MetadataGetter for method: UnityEngine::Shader::SetGlobalBufferImpl
// Il2CppName: SetGlobalBufferImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int, ::UnityEngine::ComputeBuffer*)>(&UnityEngine::Shader::SetGlobalBufferImpl)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "ComputeBuffer")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Shader*), "SetGlobalBufferImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name, value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Shader::SetGlobalGraphicsBufferImpl
// Il2CppName: SetGlobalGraphicsBufferImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int, ::UnityEngine::GraphicsBuffer*)>(&UnityEngine::Shader::SetGlobalGraphicsBufferImpl)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "GraphicsBuffer")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Shader*), "SetGlobalGraphicsBufferImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name, value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Shader::SetGlobalConstantBufferImpl
// Il2CppName: SetGlobalConstantBufferImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int, ::UnityEngine::ComputeBuffer*, int, int)>(&UnityEngine::Shader::SetGlobalConstantBufferImpl)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "ComputeBuffer")->byval_arg;
    static auto* offset = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* size = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Shader*), "SetGlobalConstantBufferImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name, value, offset, size});
  }
};
// Writing MetadataGetter for method: UnityEngine::Shader::SetGlobalConstantGraphicsBufferImpl
// Il2CppName: SetGlobalConstantGraphicsBufferImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int, ::UnityEngine::GraphicsBuffer*, int, int)>(&UnityEngine::Shader::SetGlobalConstantGraphicsBufferImpl)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "GraphicsBuffer")->byval_arg;
    static auto* offset = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* size = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Shader*), "SetGlobalConstantGraphicsBufferImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name, value, offset, size});
  }
};
// Writing MetadataGetter for method: UnityEngine::Shader::GetGlobalIntImpl
// Il2CppName: GetGlobalIntImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(int)>(&UnityEngine::Shader::GetGlobalIntImpl)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Shader*), "GetGlobalIntImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name});
  }
};
// Writing MetadataGetter for method: UnityEngine::Shader::GetGlobalFloatImpl
// Il2CppName: GetGlobalFloatImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (*)(int)>(&UnityEngine::Shader::GetGlobalFloatImpl)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Shader*), "GetGlobalFloatImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name});
  }
};
// Writing MetadataGetter for method: UnityEngine::Shader::GetGlobalVectorImpl
// Il2CppName: GetGlobalVectorImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector4 (*)(int)>(&UnityEngine::Shader::GetGlobalVectorImpl)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Shader*), "GetGlobalVectorImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name});
  }
};
// Writing MetadataGetter for method: UnityEngine::Shader::GetGlobalMatrixImpl
// Il2CppName: GetGlobalMatrixImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Matrix4x4 (*)(int)>(&UnityEngine::Shader::GetGlobalMatrixImpl)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Shader*), "GetGlobalMatrixImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name});
  }
};
// Writing MetadataGetter for method: UnityEngine::Shader::GetGlobalTextureImpl
// Il2CppName: GetGlobalTextureImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Texture* (*)(int)>(&UnityEngine::Shader::GetGlobalTextureImpl)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Shader*), "GetGlobalTextureImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name});
  }
};
// Writing MetadataGetter for method: UnityEngine::Shader::SetGlobalFloatArrayImpl
// Il2CppName: SetGlobalFloatArrayImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int, ::ArrayW<float>, int)>(&UnityEngine::Shader::SetGlobalFloatArrayImpl)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* values = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Single"), 1)->byval_arg;
    static auto* count = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Shader*), "SetGlobalFloatArrayImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name, values, count});
  }
};
// Writing MetadataGetter for method: UnityEngine::Shader::SetGlobalVectorArrayImpl
// Il2CppName: SetGlobalVectorArrayImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int, ::ArrayW<::UnityEngine::Vector4>, int)>(&UnityEngine::Shader::SetGlobalVectorArrayImpl)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* values = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("UnityEngine", "Vector4"), 1)->byval_arg;
    static auto* count = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Shader*), "SetGlobalVectorArrayImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name, values, count});
  }
};
// Writing MetadataGetter for method: UnityEngine::Shader::SetGlobalMatrixArrayImpl
// Il2CppName: SetGlobalMatrixArrayImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int, ::ArrayW<::UnityEngine::Matrix4x4>, int)>(&UnityEngine::Shader::SetGlobalMatrixArrayImpl)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* values = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("UnityEngine", "Matrix4x4"), 1)->byval_arg;
    static auto* count = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Shader*), "SetGlobalMatrixArrayImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name, values, count});
  }
};
// Writing MetadataGetter for method: UnityEngine::Shader::GetGlobalFloatArrayImpl
// Il2CppName: GetGlobalFloatArrayImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<float> (*)(int)>(&UnityEngine::Shader::GetGlobalFloatArrayImpl)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Shader*), "GetGlobalFloatArrayImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name});
  }
};
// Writing MetadataGetter for method: UnityEngine::Shader::GetGlobalVectorArrayImpl
// Il2CppName: GetGlobalVectorArrayImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::UnityEngine::Vector4> (*)(int)>(&UnityEngine::Shader::GetGlobalVectorArrayImpl)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Shader*), "GetGlobalVectorArrayImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name});
  }
};
// Writing MetadataGetter for method: UnityEngine::Shader::GetGlobalMatrixArrayImpl
// Il2CppName: GetGlobalMatrixArrayImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::UnityEngine::Matrix4x4> (*)(int)>(&UnityEngine::Shader::GetGlobalMatrixArrayImpl)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Shader*), "GetGlobalMatrixArrayImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name});
  }
};
// Writing MetadataGetter for method: UnityEngine::Shader::GetGlobalFloatArrayCountImpl
// Il2CppName: GetGlobalFloatArrayCountImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(int)>(&UnityEngine::Shader::GetGlobalFloatArrayCountImpl)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Shader*), "GetGlobalFloatArrayCountImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name});
  }
};
// Writing MetadataGetter for method: UnityEngine::Shader::GetGlobalVectorArrayCountImpl
// Il2CppName: GetGlobalVectorArrayCountImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(int)>(&UnityEngine::Shader::GetGlobalVectorArrayCountImpl)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Shader*), "GetGlobalVectorArrayCountImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name});
  }
};
// Writing MetadataGetter for method: UnityEngine::Shader::GetGlobalMatrixArrayCountImpl
// Il2CppName: GetGlobalMatrixArrayCountImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(int)>(&UnityEngine::Shader::GetGlobalMatrixArrayCountImpl)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Shader*), "GetGlobalMatrixArrayCountImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name});
  }
};
// Writing MetadataGetter for method: UnityEngine::Shader::ExtractGlobalFloatArrayImpl
// Il2CppName: ExtractGlobalFloatArrayImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int, ByRef<::ArrayW<float>>)>(&UnityEngine::Shader::ExtractGlobalFloatArrayImpl)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* val = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Single"), 1)->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Shader*), "ExtractGlobalFloatArrayImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name, val});
  }
};
// Writing MetadataGetter for method: UnityEngine::Shader::ExtractGlobalVectorArrayImpl
// Il2CppName: ExtractGlobalVectorArrayImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int, ByRef<::ArrayW<::UnityEngine::Vector4>>)>(&UnityEngine::Shader::ExtractGlobalVectorArrayImpl)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* val = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("UnityEngine", "Vector4"), 1)->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Shader*), "ExtractGlobalVectorArrayImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name, val});
  }
};
// Writing MetadataGetter for method: UnityEngine::Shader::ExtractGlobalMatrixArrayImpl
// Il2CppName: ExtractGlobalMatrixArrayImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int, ByRef<::ArrayW<::UnityEngine::Matrix4x4>>)>(&UnityEngine::Shader::ExtractGlobalMatrixArrayImpl)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* val = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("UnityEngine", "Matrix4x4"), 1)->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Shader*), "ExtractGlobalMatrixArrayImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name, val});
  }
};
// Writing MetadataGetter for method: UnityEngine::Shader::SetGlobalFloatArray
// Il2CppName: SetGlobalFloatArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int, ::ArrayW<float>, int)>(&UnityEngine::Shader::SetGlobalFloatArray)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* values = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Single"), 1)->byval_arg;
    static auto* count = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Shader*), "SetGlobalFloatArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name, values, count});
  }
};
// Writing MetadataGetter for method: UnityEngine::Shader::SetGlobalVectorArray
// Il2CppName: SetGlobalVectorArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int, ::ArrayW<::UnityEngine::Vector4>, int)>(&UnityEngine::Shader::SetGlobalVectorArray)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* values = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("UnityEngine", "Vector4"), 1)->byval_arg;
    static auto* count = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Shader*), "SetGlobalVectorArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name, values, count});
  }
};
// Writing MetadataGetter for method: UnityEngine::Shader::SetGlobalMatrixArray
// Il2CppName: SetGlobalMatrixArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int, ::ArrayW<::UnityEngine::Matrix4x4>, int)>(&UnityEngine::Shader::SetGlobalMatrixArray)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* values = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("UnityEngine", "Matrix4x4"), 1)->byval_arg;
    static auto* count = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Shader*), "SetGlobalMatrixArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name, values, count});
  }
};
// Writing MetadataGetter for method: UnityEngine::Shader::ExtractGlobalFloatArray
// Il2CppName: ExtractGlobalFloatArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int, ::System::Collections::Generic::List_1<float>*)>(&UnityEngine::Shader::ExtractGlobalFloatArray)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* values = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Single")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Shader*), "ExtractGlobalFloatArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name, values});
  }
};
// Writing MetadataGetter for method: UnityEngine::Shader::ExtractGlobalVectorArray
// Il2CppName: ExtractGlobalVectorArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int, ::System::Collections::Generic::List_1<::UnityEngine::Vector4>*)>(&UnityEngine::Shader::ExtractGlobalVectorArray)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* values = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine", "Vector4")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Shader*), "ExtractGlobalVectorArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name, values});
  }
};
// Writing MetadataGetter for method: UnityEngine::Shader::ExtractGlobalMatrixArray
// Il2CppName: ExtractGlobalMatrixArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int, ::System::Collections::Generic::List_1<::UnityEngine::Matrix4x4>*)>(&UnityEngine::Shader::ExtractGlobalMatrixArray)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* values = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine", "Matrix4x4")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Shader*), "ExtractGlobalMatrixArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name, values});
  }
};
// Writing MetadataGetter for method: UnityEngine::Shader::SetGlobalInt
// Il2CppName: SetGlobalInt
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::StringW, int)>(&UnityEngine::Shader::SetGlobalInt)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Shader*), "SetGlobalInt", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name, value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Shader::SetGlobalInt
// Il2CppName: SetGlobalInt
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int, int)>(&UnityEngine::Shader::SetGlobalInt)> {
  static const MethodInfo* get() {
    static auto* nameID = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Shader*), "SetGlobalInt", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{nameID, value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Shader::SetGlobalFloat
// Il2CppName: SetGlobalFloat
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::StringW, float)>(&UnityEngine::Shader::SetGlobalFloat)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Shader*), "SetGlobalFloat", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name, value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Shader::SetGlobalFloat
// Il2CppName: SetGlobalFloat
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int, float)>(&UnityEngine::Shader::SetGlobalFloat)> {
  static const MethodInfo* get() {
    static auto* nameID = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Shader*), "SetGlobalFloat", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{nameID, value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Shader::SetGlobalInteger
// Il2CppName: SetGlobalInteger
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::StringW, int)>(&UnityEngine::Shader::SetGlobalInteger)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Shader*), "SetGlobalInteger", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name, value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Shader::SetGlobalInteger
// Il2CppName: SetGlobalInteger
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int, int)>(&UnityEngine::Shader::SetGlobalInteger)> {
  static const MethodInfo* get() {
    static auto* nameID = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Shader*), "SetGlobalInteger", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{nameID, value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Shader::SetGlobalVector
// Il2CppName: SetGlobalVector
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::StringW, ::UnityEngine::Vector4)>(&UnityEngine::Shader::SetGlobalVector)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector4")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Shader*), "SetGlobalVector", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name, value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Shader::SetGlobalVector
// Il2CppName: SetGlobalVector
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int, ::UnityEngine::Vector4)>(&UnityEngine::Shader::SetGlobalVector)> {
  static const MethodInfo* get() {
    static auto* nameID = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector4")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Shader*), "SetGlobalVector", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{nameID, value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Shader::SetGlobalColor
// Il2CppName: SetGlobalColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::StringW, ::UnityEngine::Color)>(&UnityEngine::Shader::SetGlobalColor)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Color")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Shader*), "SetGlobalColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name, value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Shader::SetGlobalColor
// Il2CppName: SetGlobalColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int, ::UnityEngine::Color)>(&UnityEngine::Shader::SetGlobalColor)> {
  static const MethodInfo* get() {
    static auto* nameID = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Color")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Shader*), "SetGlobalColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{nameID, value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Shader::SetGlobalMatrix
// Il2CppName: SetGlobalMatrix
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::StringW, ::UnityEngine::Matrix4x4)>(&UnityEngine::Shader::SetGlobalMatrix)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Matrix4x4")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Shader*), "SetGlobalMatrix", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name, value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Shader::SetGlobalMatrix
// Il2CppName: SetGlobalMatrix
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int, ::UnityEngine::Matrix4x4)>(&UnityEngine::Shader::SetGlobalMatrix)> {
  static const MethodInfo* get() {
    static auto* nameID = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Matrix4x4")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Shader*), "SetGlobalMatrix", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{nameID, value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Shader::SetGlobalTexture
// Il2CppName: SetGlobalTexture
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::StringW, ::UnityEngine::Texture*)>(&UnityEngine::Shader::SetGlobalTexture)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Texture")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Shader*), "SetGlobalTexture", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name, value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Shader::SetGlobalTexture
// Il2CppName: SetGlobalTexture
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int, ::UnityEngine::Texture*)>(&UnityEngine::Shader::SetGlobalTexture)> {
  static const MethodInfo* get() {
    static auto* nameID = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Texture")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Shader*), "SetGlobalTexture", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{nameID, value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Shader::SetGlobalTexture
// Il2CppName: SetGlobalTexture
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::StringW, ::UnityEngine::RenderTexture*, ::UnityEngine::Rendering::RenderTextureSubElement)>(&UnityEngine::Shader::SetGlobalTexture)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "RenderTexture")->byval_arg;
    static auto* element = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "RenderTextureSubElement")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Shader*), "SetGlobalTexture", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name, value, element});
  }
};
// Writing MetadataGetter for method: UnityEngine::Shader::SetGlobalTexture
// Il2CppName: SetGlobalTexture
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int, ::UnityEngine::RenderTexture*, ::UnityEngine::Rendering::RenderTextureSubElement)>(&UnityEngine::Shader::SetGlobalTexture)> {
  static const MethodInfo* get() {
    static auto* nameID = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "RenderTexture")->byval_arg;
    static auto* element = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "RenderTextureSubElement")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Shader*), "SetGlobalTexture", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{nameID, value, element});
  }
};
// Writing MetadataGetter for method: UnityEngine::Shader::SetGlobalBuffer
// Il2CppName: SetGlobalBuffer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::StringW, ::UnityEngine::ComputeBuffer*)>(&UnityEngine::Shader::SetGlobalBuffer)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "ComputeBuffer")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Shader*), "SetGlobalBuffer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name, value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Shader::SetGlobalBuffer
// Il2CppName: SetGlobalBuffer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int, ::UnityEngine::ComputeBuffer*)>(&UnityEngine::Shader::SetGlobalBuffer)> {
  static const MethodInfo* get() {
    static auto* nameID = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "ComputeBuffer")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Shader*), "SetGlobalBuffer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{nameID, value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Shader::SetGlobalBuffer
// Il2CppName: SetGlobalBuffer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::StringW, ::UnityEngine::GraphicsBuffer*)>(&UnityEngine::Shader::SetGlobalBuffer)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "GraphicsBuffer")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Shader*), "SetGlobalBuffer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name, value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Shader::SetGlobalBuffer
// Il2CppName: SetGlobalBuffer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int, ::UnityEngine::GraphicsBuffer*)>(&UnityEngine::Shader::SetGlobalBuffer)> {
  static const MethodInfo* get() {
    static auto* nameID = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "GraphicsBuffer")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Shader*), "SetGlobalBuffer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{nameID, value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Shader::SetGlobalConstantBuffer
// Il2CppName: SetGlobalConstantBuffer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::StringW, ::UnityEngine::ComputeBuffer*, int, int)>(&UnityEngine::Shader::SetGlobalConstantBuffer)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "ComputeBuffer")->byval_arg;
    static auto* offset = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* size = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Shader*), "SetGlobalConstantBuffer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name, value, offset, size});
  }
};
// Writing MetadataGetter for method: UnityEngine::Shader::SetGlobalConstantBuffer
// Il2CppName: SetGlobalConstantBuffer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int, ::UnityEngine::ComputeBuffer*, int, int)>(&UnityEngine::Shader::SetGlobalConstantBuffer)> {
  static const MethodInfo* get() {
    static auto* nameID = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "ComputeBuffer")->byval_arg;
    static auto* offset = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* size = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Shader*), "SetGlobalConstantBuffer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{nameID, value, offset, size});
  }
};
// Writing MetadataGetter for method: UnityEngine::Shader::SetGlobalConstantBuffer
// Il2CppName: SetGlobalConstantBuffer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::StringW, ::UnityEngine::GraphicsBuffer*, int, int)>(&UnityEngine::Shader::SetGlobalConstantBuffer)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "GraphicsBuffer")->byval_arg;
    static auto* offset = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* size = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Shader*), "SetGlobalConstantBuffer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name, value, offset, size});
  }
};
// Writing MetadataGetter for method: UnityEngine::Shader::SetGlobalConstantBuffer
// Il2CppName: SetGlobalConstantBuffer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int, ::UnityEngine::GraphicsBuffer*, int, int)>(&UnityEngine::Shader::SetGlobalConstantBuffer)> {
  static const MethodInfo* get() {
    static auto* nameID = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "GraphicsBuffer")->byval_arg;
    static auto* offset = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* size = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Shader*), "SetGlobalConstantBuffer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{nameID, value, offset, size});
  }
};
// Writing MetadataGetter for method: UnityEngine::Shader::SetGlobalFloatArray
// Il2CppName: SetGlobalFloatArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::StringW, ::System::Collections::Generic::List_1<float>*)>(&UnityEngine::Shader::SetGlobalFloatArray)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* values = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Single")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Shader*), "SetGlobalFloatArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name, values});
  }
};
// Writing MetadataGetter for method: UnityEngine::Shader::SetGlobalFloatArray
// Il2CppName: SetGlobalFloatArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int, ::System::Collections::Generic::List_1<float>*)>(&UnityEngine::Shader::SetGlobalFloatArray)> {
  static const MethodInfo* get() {
    static auto* nameID = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* values = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Single")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Shader*), "SetGlobalFloatArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{nameID, values});
  }
};
// Writing MetadataGetter for method: UnityEngine::Shader::SetGlobalFloatArray
// Il2CppName: SetGlobalFloatArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::StringW, ::ArrayW<float>)>(&UnityEngine::Shader::SetGlobalFloatArray)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* values = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Single"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Shader*), "SetGlobalFloatArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name, values});
  }
};
// Writing MetadataGetter for method: UnityEngine::Shader::SetGlobalFloatArray
// Il2CppName: SetGlobalFloatArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int, ::ArrayW<float>)>(&UnityEngine::Shader::SetGlobalFloatArray)> {
  static const MethodInfo* get() {
    static auto* nameID = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* values = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Single"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Shader*), "SetGlobalFloatArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{nameID, values});
  }
};
// Writing MetadataGetter for method: UnityEngine::Shader::SetGlobalVectorArray
// Il2CppName: SetGlobalVectorArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::StringW, ::System::Collections::Generic::List_1<::UnityEngine::Vector4>*)>(&UnityEngine::Shader::SetGlobalVectorArray)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* values = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine", "Vector4")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Shader*), "SetGlobalVectorArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name, values});
  }
};
// Writing MetadataGetter for method: UnityEngine::Shader::SetGlobalVectorArray
// Il2CppName: SetGlobalVectorArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int, ::System::Collections::Generic::List_1<::UnityEngine::Vector4>*)>(&UnityEngine::Shader::SetGlobalVectorArray)> {
  static const MethodInfo* get() {
    static auto* nameID = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* values = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine", "Vector4")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Shader*), "SetGlobalVectorArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{nameID, values});
  }
};
// Writing MetadataGetter for method: UnityEngine::Shader::SetGlobalVectorArray
// Il2CppName: SetGlobalVectorArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::StringW, ::ArrayW<::UnityEngine::Vector4>)>(&UnityEngine::Shader::SetGlobalVectorArray)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* values = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("UnityEngine", "Vector4"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Shader*), "SetGlobalVectorArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name, values});
  }
};
// Writing MetadataGetter for method: UnityEngine::Shader::SetGlobalVectorArray
// Il2CppName: SetGlobalVectorArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int, ::ArrayW<::UnityEngine::Vector4>)>(&UnityEngine::Shader::SetGlobalVectorArray)> {
  static const MethodInfo* get() {
    static auto* nameID = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* values = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("UnityEngine", "Vector4"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Shader*), "SetGlobalVectorArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{nameID, values});
  }
};
// Writing MetadataGetter for method: UnityEngine::Shader::SetGlobalMatrixArray
// Il2CppName: SetGlobalMatrixArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::StringW, ::System::Collections::Generic::List_1<::UnityEngine::Matrix4x4>*)>(&UnityEngine::Shader::SetGlobalMatrixArray)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* values = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine", "Matrix4x4")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Shader*), "SetGlobalMatrixArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name, values});
  }
};
// Writing MetadataGetter for method: UnityEngine::Shader::SetGlobalMatrixArray
// Il2CppName: SetGlobalMatrixArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int, ::System::Collections::Generic::List_1<::UnityEngine::Matrix4x4>*)>(&UnityEngine::Shader::SetGlobalMatrixArray)> {
  static const MethodInfo* get() {
    static auto* nameID = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* values = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine", "Matrix4x4")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Shader*), "SetGlobalMatrixArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{nameID, values});
  }
};
// Writing MetadataGetter for method: UnityEngine::Shader::SetGlobalMatrixArray
// Il2CppName: SetGlobalMatrixArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::StringW, ::ArrayW<::UnityEngine::Matrix4x4>)>(&UnityEngine::Shader::SetGlobalMatrixArray)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* values = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("UnityEngine", "Matrix4x4"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Shader*), "SetGlobalMatrixArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name, values});
  }
};
// Writing MetadataGetter for method: UnityEngine::Shader::SetGlobalMatrixArray
// Il2CppName: SetGlobalMatrixArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int, ::ArrayW<::UnityEngine::Matrix4x4>)>(&UnityEngine::Shader::SetGlobalMatrixArray)> {
  static const MethodInfo* get() {
    static auto* nameID = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* values = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("UnityEngine", "Matrix4x4"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Shader*), "SetGlobalMatrixArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{nameID, values});
  }
};
// Writing MetadataGetter for method: UnityEngine::Shader::GetGlobalInt
// Il2CppName: GetGlobalInt
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::StringW)>(&UnityEngine::Shader::GetGlobalInt)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Shader*), "GetGlobalInt", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name});
  }
};
// Writing MetadataGetter for method: UnityEngine::Shader::GetGlobalInt
// Il2CppName: GetGlobalInt
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(int)>(&UnityEngine::Shader::GetGlobalInt)> {
  static const MethodInfo* get() {
    static auto* nameID = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Shader*), "GetGlobalInt", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{nameID});
  }
};
// Writing MetadataGetter for method: UnityEngine::Shader::GetGlobalFloat
// Il2CppName: GetGlobalFloat
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (*)(::StringW)>(&UnityEngine::Shader::GetGlobalFloat)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Shader*), "GetGlobalFloat", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name});
  }
};
// Writing MetadataGetter for method: UnityEngine::Shader::GetGlobalFloat
// Il2CppName: GetGlobalFloat
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (*)(int)>(&UnityEngine::Shader::GetGlobalFloat)> {
  static const MethodInfo* get() {
    static auto* nameID = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Shader*), "GetGlobalFloat", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{nameID});
  }
};
// Writing MetadataGetter for method: UnityEngine::Shader::GetGlobalInteger
// Il2CppName: GetGlobalInteger
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::StringW)>(&UnityEngine::Shader::GetGlobalInteger)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Shader*), "GetGlobalInteger", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name});
  }
};
// Writing MetadataGetter for method: UnityEngine::Shader::GetGlobalInteger
// Il2CppName: GetGlobalInteger
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(int)>(&UnityEngine::Shader::GetGlobalInteger)> {
  static const MethodInfo* get() {
    static auto* nameID = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Shader*), "GetGlobalInteger", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{nameID});
  }
};
// Writing MetadataGetter for method: UnityEngine::Shader::GetGlobalVector
// Il2CppName: GetGlobalVector
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector4 (*)(::StringW)>(&UnityEngine::Shader::GetGlobalVector)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Shader*), "GetGlobalVector", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name});
  }
};
// Writing MetadataGetter for method: UnityEngine::Shader::GetGlobalVector
// Il2CppName: GetGlobalVector
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector4 (*)(int)>(&UnityEngine::Shader::GetGlobalVector)> {
  static const MethodInfo* get() {
    static auto* nameID = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Shader*), "GetGlobalVector", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{nameID});
  }
};
// Writing MetadataGetter for method: UnityEngine::Shader::GetGlobalColor
// Il2CppName: GetGlobalColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Color (*)(::StringW)>(&UnityEngine::Shader::GetGlobalColor)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Shader*), "GetGlobalColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name});
  }
};
// Writing MetadataGetter for method: UnityEngine::Shader::GetGlobalColor
// Il2CppName: GetGlobalColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Color (*)(int)>(&UnityEngine::Shader::GetGlobalColor)> {
  static const MethodInfo* get() {
    static auto* nameID = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Shader*), "GetGlobalColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{nameID});
  }
};
// Writing MetadataGetter for method: UnityEngine::Shader::GetGlobalMatrix
// Il2CppName: GetGlobalMatrix
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Matrix4x4 (*)(::StringW)>(&UnityEngine::Shader::GetGlobalMatrix)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Shader*), "GetGlobalMatrix", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name});
  }
};
// Writing MetadataGetter for method: UnityEngine::Shader::GetGlobalMatrix
// Il2CppName: GetGlobalMatrix
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Matrix4x4 (*)(int)>(&UnityEngine::Shader::GetGlobalMatrix)> {
  static const MethodInfo* get() {
    static auto* nameID = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Shader*), "GetGlobalMatrix", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{nameID});
  }
};
// Writing MetadataGetter for method: UnityEngine::Shader::GetGlobalTexture
// Il2CppName: GetGlobalTexture
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Texture* (*)(::StringW)>(&UnityEngine::Shader::GetGlobalTexture)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Shader*), "GetGlobalTexture", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name});
  }
};
// Writing MetadataGetter for method: UnityEngine::Shader::GetGlobalTexture
// Il2CppName: GetGlobalTexture
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Texture* (*)(int)>(&UnityEngine::Shader::GetGlobalTexture)> {
  static const MethodInfo* get() {
    static auto* nameID = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Shader*), "GetGlobalTexture", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{nameID});
  }
};
// Writing MetadataGetter for method: UnityEngine::Shader::GetGlobalFloatArray
// Il2CppName: GetGlobalFloatArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<float> (*)(::StringW)>(&UnityEngine::Shader::GetGlobalFloatArray)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Shader*), "GetGlobalFloatArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name});
  }
};
// Writing MetadataGetter for method: UnityEngine::Shader::GetGlobalFloatArray
// Il2CppName: GetGlobalFloatArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<float> (*)(int)>(&UnityEngine::Shader::GetGlobalFloatArray)> {
  static const MethodInfo* get() {
    static auto* nameID = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Shader*), "GetGlobalFloatArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{nameID});
  }
};
// Writing MetadataGetter for method: UnityEngine::Shader::GetGlobalVectorArray
// Il2CppName: GetGlobalVectorArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::UnityEngine::Vector4> (*)(::StringW)>(&UnityEngine::Shader::GetGlobalVectorArray)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Shader*), "GetGlobalVectorArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name});
  }
};
// Writing MetadataGetter for method: UnityEngine::Shader::GetGlobalVectorArray
// Il2CppName: GetGlobalVectorArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::UnityEngine::Vector4> (*)(int)>(&UnityEngine::Shader::GetGlobalVectorArray)> {
  static const MethodInfo* get() {
    static auto* nameID = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Shader*), "GetGlobalVectorArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{nameID});
  }
};
// Writing MetadataGetter for method: UnityEngine::Shader::GetGlobalMatrixArray
// Il2CppName: GetGlobalMatrixArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::UnityEngine::Matrix4x4> (*)(::StringW)>(&UnityEngine::Shader::GetGlobalMatrixArray)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Shader*), "GetGlobalMatrixArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name});
  }
};
// Writing MetadataGetter for method: UnityEngine::Shader::GetGlobalMatrixArray
// Il2CppName: GetGlobalMatrixArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::UnityEngine::Matrix4x4> (*)(int)>(&UnityEngine::Shader::GetGlobalMatrixArray)> {
  static const MethodInfo* get() {
    static auto* nameID = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Shader*), "GetGlobalMatrixArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{nameID});
  }
};
// Writing MetadataGetter for method: UnityEngine::Shader::GetGlobalFloatArray
// Il2CppName: GetGlobalFloatArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::StringW, ::System::Collections::Generic::List_1<float>*)>(&UnityEngine::Shader::GetGlobalFloatArray)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* values = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Single")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Shader*), "GetGlobalFloatArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name, values});
  }
};
// Writing MetadataGetter for method: UnityEngine::Shader::GetGlobalFloatArray
// Il2CppName: GetGlobalFloatArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int, ::System::Collections::Generic::List_1<float>*)>(&UnityEngine::Shader::GetGlobalFloatArray)> {
  static const MethodInfo* get() {
    static auto* nameID = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* values = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Single")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Shader*), "GetGlobalFloatArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{nameID, values});
  }
};
// Writing MetadataGetter for method: UnityEngine::Shader::GetGlobalVectorArray
// Il2CppName: GetGlobalVectorArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::StringW, ::System::Collections::Generic::List_1<::UnityEngine::Vector4>*)>(&UnityEngine::Shader::GetGlobalVectorArray)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* values = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine", "Vector4")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Shader*), "GetGlobalVectorArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name, values});
  }
};
// Writing MetadataGetter for method: UnityEngine::Shader::GetGlobalVectorArray
// Il2CppName: GetGlobalVectorArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int, ::System::Collections::Generic::List_1<::UnityEngine::Vector4>*)>(&UnityEngine::Shader::GetGlobalVectorArray)> {
  static const MethodInfo* get() {
    static auto* nameID = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* values = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine", "Vector4")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Shader*), "GetGlobalVectorArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{nameID, values});
  }
};
// Writing MetadataGetter for method: UnityEngine::Shader::GetGlobalMatrixArray
// Il2CppName: GetGlobalMatrixArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::StringW, ::System::Collections::Generic::List_1<::UnityEngine::Matrix4x4>*)>(&UnityEngine::Shader::GetGlobalMatrixArray)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* values = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine", "Matrix4x4")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Shader*), "GetGlobalMatrixArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name, values});
  }
};
// Writing MetadataGetter for method: UnityEngine::Shader::GetGlobalMatrixArray
// Il2CppName: GetGlobalMatrixArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int, ::System::Collections::Generic::List_1<::UnityEngine::Matrix4x4>*)>(&UnityEngine::Shader::GetGlobalMatrixArray)> {
  static const MethodInfo* get() {
    static auto* nameID = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* values = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine", "Matrix4x4")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Shader*), "GetGlobalMatrixArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{nameID, values});
  }
};
// Writing MetadataGetter for method: UnityEngine::Shader::GetPropertyName
// Il2CppName: GetPropertyName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::UnityEngine::Shader*, int)>(&UnityEngine::Shader::GetPropertyName)> {
  static const MethodInfo* get() {
    static auto* shader = &::il2cpp_utils::GetClassFromName("UnityEngine", "Shader")->byval_arg;
    static auto* propertyIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Shader*), "GetPropertyName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{shader, propertyIndex});
  }
};
// Writing MetadataGetter for method: UnityEngine::Shader::GetPropertyNameId
// Il2CppName: GetPropertyNameId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::UnityEngine::Shader*, int)>(&UnityEngine::Shader::GetPropertyNameId)> {
  static const MethodInfo* get() {
    static auto* shader = &::il2cpp_utils::GetClassFromName("UnityEngine", "Shader")->byval_arg;
    static auto* propertyIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Shader*), "GetPropertyNameId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{shader, propertyIndex});
  }
};
// Writing MetadataGetter for method: UnityEngine::Shader::GetPropertyType
// Il2CppName: GetPropertyType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Rendering::ShaderPropertyType (*)(::UnityEngine::Shader*, int)>(&UnityEngine::Shader::GetPropertyType)> {
  static const MethodInfo* get() {
    static auto* shader = &::il2cpp_utils::GetClassFromName("UnityEngine", "Shader")->byval_arg;
    static auto* propertyIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Shader*), "GetPropertyType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{shader, propertyIndex});
  }
};
// Writing MetadataGetter for method: UnityEngine::Shader::GetPropertyDescription
// Il2CppName: GetPropertyDescription
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::UnityEngine::Shader*, int)>(&UnityEngine::Shader::GetPropertyDescription)> {
  static const MethodInfo* get() {
    static auto* shader = &::il2cpp_utils::GetClassFromName("UnityEngine", "Shader")->byval_arg;
    static auto* propertyIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Shader*), "GetPropertyDescription", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{shader, propertyIndex});
  }
};
// Writing MetadataGetter for method: UnityEngine::Shader::GetPropertyFlags
// Il2CppName: GetPropertyFlags
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Rendering::ShaderPropertyFlags (*)(::UnityEngine::Shader*, int)>(&UnityEngine::Shader::GetPropertyFlags)> {
  static const MethodInfo* get() {
    static auto* shader = &::il2cpp_utils::GetClassFromName("UnityEngine", "Shader")->byval_arg;
    static auto* propertyIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Shader*), "GetPropertyFlags", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{shader, propertyIndex});
  }
};
// Writing MetadataGetter for method: UnityEngine::Shader::GetPropertyAttributes
// Il2CppName: GetPropertyAttributes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::StringW> (*)(::UnityEngine::Shader*, int)>(&UnityEngine::Shader::GetPropertyAttributes)> {
  static const MethodInfo* get() {
    static auto* shader = &::il2cpp_utils::GetClassFromName("UnityEngine", "Shader")->byval_arg;
    static auto* propertyIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Shader*), "GetPropertyAttributes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{shader, propertyIndex});
  }
};
// Writing MetadataGetter for method: UnityEngine::Shader::GetPropertyDefaultIntValue
// Il2CppName: GetPropertyDefaultIntValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::UnityEngine::Shader*, int)>(&UnityEngine::Shader::GetPropertyDefaultIntValue)> {
  static const MethodInfo* get() {
    static auto* shader = &::il2cpp_utils::GetClassFromName("UnityEngine", "Shader")->byval_arg;
    static auto* propertyIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Shader*), "GetPropertyDefaultIntValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{shader, propertyIndex});
  }
};
// Writing MetadataGetter for method: UnityEngine::Shader::GetPropertyDefaultValue
// Il2CppName: GetPropertyDefaultValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector4 (*)(::UnityEngine::Shader*, int)>(&UnityEngine::Shader::GetPropertyDefaultValue)> {
  static const MethodInfo* get() {
    static auto* shader = &::il2cpp_utils::GetClassFromName("UnityEngine", "Shader")->byval_arg;
    static auto* propertyIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Shader*), "GetPropertyDefaultValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{shader, propertyIndex});
  }
};
// Writing MetadataGetter for method: UnityEngine::Shader::GetPropertyTextureDimension
// Il2CppName: GetPropertyTextureDimension
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Rendering::TextureDimension (*)(::UnityEngine::Shader*, int)>(&UnityEngine::Shader::GetPropertyTextureDimension)> {
  static const MethodInfo* get() {
    static auto* shader = &::il2cpp_utils::GetClassFromName("UnityEngine", "Shader")->byval_arg;
    static auto* propertyIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Shader*), "GetPropertyTextureDimension", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{shader, propertyIndex});
  }
};
// Writing MetadataGetter for method: UnityEngine::Shader::GetPropertyTextureDefaultName
// Il2CppName: GetPropertyTextureDefaultName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::UnityEngine::Shader*, int)>(&UnityEngine::Shader::GetPropertyTextureDefaultName)> {
  static const MethodInfo* get() {
    static auto* shader = &::il2cpp_utils::GetClassFromName("UnityEngine", "Shader")->byval_arg;
    static auto* propertyIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Shader*), "GetPropertyTextureDefaultName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{shader, propertyIndex});
  }
};
// Writing MetadataGetter for method: UnityEngine::Shader::FindTextureStackImpl
// Il2CppName: FindTextureStackImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::UnityEngine::Shader*, int, ByRef<::StringW>, ByRef<int>)>(&UnityEngine::Shader::FindTextureStackImpl)> {
  static const MethodInfo* get() {
    static auto* s = &::il2cpp_utils::GetClassFromName("UnityEngine", "Shader")->byval_arg;
    static auto* propertyIdx = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* stackName = &::il2cpp_utils::GetClassFromName("System", "String")->this_arg;
    static auto* layerIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Shader*), "FindTextureStackImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{s, propertyIdx, stackName, layerIndex});
  }
};
// Writing MetadataGetter for method: UnityEngine::Shader::CheckPropertyIndex
// Il2CppName: CheckPropertyIndex
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::Shader*, int)>(&UnityEngine::Shader::CheckPropertyIndex)> {
  static const MethodInfo* get() {
    static auto* s = &::il2cpp_utils::GetClassFromName("UnityEngine", "Shader")->byval_arg;
    static auto* propertyIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Shader*), "CheckPropertyIndex", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{s, propertyIndex});
  }
};
// Writing MetadataGetter for method: UnityEngine::Shader::GetPropertyCount
// Il2CppName: GetPropertyCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::Shader::*)()>(&UnityEngine::Shader::GetPropertyCount)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Shader*), "GetPropertyCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Shader::FindPropertyIndex
// Il2CppName: FindPropertyIndex
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::Shader::*)(::StringW)>(&UnityEngine::Shader::FindPropertyIndex)> {
  static const MethodInfo* get() {
    static auto* propertyName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Shader*), "FindPropertyIndex", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{propertyName});
  }
};
// Writing MetadataGetter for method: UnityEngine::Shader::GetPropertyName
// Il2CppName: GetPropertyName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (UnityEngine::Shader::*)(int)>(&UnityEngine::Shader::GetPropertyName)> {
  static const MethodInfo* get() {
    static auto* propertyIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Shader*), "GetPropertyName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{propertyIndex});
  }
};
// Writing MetadataGetter for method: UnityEngine::Shader::GetPropertyNameId
// Il2CppName: GetPropertyNameId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::Shader::*)(int)>(&UnityEngine::Shader::GetPropertyNameId)> {
  static const MethodInfo* get() {
    static auto* propertyIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Shader*), "GetPropertyNameId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{propertyIndex});
  }
};
// Writing MetadataGetter for method: UnityEngine::Shader::GetPropertyType
// Il2CppName: GetPropertyType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Rendering::ShaderPropertyType (UnityEngine::Shader::*)(int)>(&UnityEngine::Shader::GetPropertyType)> {
  static const MethodInfo* get() {
    static auto* propertyIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Shader*), "GetPropertyType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{propertyIndex});
  }
};
// Writing MetadataGetter for method: UnityEngine::Shader::GetPropertyDescription
// Il2CppName: GetPropertyDescription
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (UnityEngine::Shader::*)(int)>(&UnityEngine::Shader::GetPropertyDescription)> {
  static const MethodInfo* get() {
    static auto* propertyIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Shader*), "GetPropertyDescription", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{propertyIndex});
  }
};
// Writing MetadataGetter for method: UnityEngine::Shader::GetPropertyFlags
// Il2CppName: GetPropertyFlags
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Rendering::ShaderPropertyFlags (UnityEngine::Shader::*)(int)>(&UnityEngine::Shader::GetPropertyFlags)> {
  static const MethodInfo* get() {
    static auto* propertyIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Shader*), "GetPropertyFlags", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{propertyIndex});
  }
};
// Writing MetadataGetter for method: UnityEngine::Shader::GetPropertyAttributes
// Il2CppName: GetPropertyAttributes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::StringW> (UnityEngine::Shader::*)(int)>(&UnityEngine::Shader::GetPropertyAttributes)> {
  static const MethodInfo* get() {
    static auto* propertyIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Shader*), "GetPropertyAttributes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{propertyIndex});
  }
};
// Writing MetadataGetter for method: UnityEngine::Shader::GetPropertyDefaultFloatValue
// Il2CppName: GetPropertyDefaultFloatValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::Shader::*)(int)>(&UnityEngine::Shader::GetPropertyDefaultFloatValue)> {
  static const MethodInfo* get() {
    static auto* propertyIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Shader*), "GetPropertyDefaultFloatValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{propertyIndex});
  }
};
// Writing MetadataGetter for method: UnityEngine::Shader::GetPropertyDefaultVectorValue
// Il2CppName: GetPropertyDefaultVectorValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector4 (UnityEngine::Shader::*)(int)>(&UnityEngine::Shader::GetPropertyDefaultVectorValue)> {
  static const MethodInfo* get() {
    static auto* propertyIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Shader*), "GetPropertyDefaultVectorValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{propertyIndex});
  }
};
// Writing MetadataGetter for method: UnityEngine::Shader::GetPropertyRangeLimits
// Il2CppName: GetPropertyRangeLimits
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector2 (UnityEngine::Shader::*)(int)>(&UnityEngine::Shader::GetPropertyRangeLimits)> {
  static const MethodInfo* get() {
    static auto* propertyIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Shader*), "GetPropertyRangeLimits", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{propertyIndex});
  }
};
// Writing MetadataGetter for method: UnityEngine::Shader::GetPropertyDefaultIntValue
// Il2CppName: GetPropertyDefaultIntValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::Shader::*)(int)>(&UnityEngine::Shader::GetPropertyDefaultIntValue)> {
  static const MethodInfo* get() {
    static auto* propertyIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Shader*), "GetPropertyDefaultIntValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{propertyIndex});
  }
};
// Writing MetadataGetter for method: UnityEngine::Shader::GetPropertyTextureDimension
// Il2CppName: GetPropertyTextureDimension
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Rendering::TextureDimension (UnityEngine::Shader::*)(int)>(&UnityEngine::Shader::GetPropertyTextureDimension)> {
  static const MethodInfo* get() {
    static auto* propertyIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Shader*), "GetPropertyTextureDimension", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{propertyIndex});
  }
};
// Writing MetadataGetter for method: UnityEngine::Shader::GetPropertyTextureDefaultName
// Il2CppName: GetPropertyTextureDefaultName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (UnityEngine::Shader::*)(int)>(&UnityEngine::Shader::GetPropertyTextureDefaultName)> {
  static const MethodInfo* get() {
    static auto* propertyIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Shader*), "GetPropertyTextureDefaultName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{propertyIndex});
  }
};
// Writing MetadataGetter for method: UnityEngine::Shader::FindTextureStack
// Il2CppName: FindTextureStack
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::Shader::*)(int, ByRef<::StringW>, ByRef<int>)>(&UnityEngine::Shader::FindTextureStack)> {
  static const MethodInfo* get() {
    static auto* propertyIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* stackName = &::il2cpp_utils::GetClassFromName("System", "String")->this_arg;
    static auto* layerIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Shader*), "FindTextureStack", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{propertyIndex, stackName, layerIndex});
  }
};
// Writing MetadataGetter for method: UnityEngine::Shader::get_keywordSpace_Injected
// Il2CppName: get_keywordSpace_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Shader::*)(ByRef<::UnityEngine::Rendering::LocalKeywordSpace>)>(&UnityEngine::Shader::get_keywordSpace_Injected)> {
  static const MethodInfo* get() {
    static auto* ret = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "LocalKeywordSpace")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Shader*), "get_keywordSpace_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ret});
  }
};
// Writing MetadataGetter for method: UnityEngine::Shader::EnableKeywordFast_Injected
// Il2CppName: EnableKeywordFast_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(ByRef<::UnityEngine::Rendering::GlobalKeyword>)>(&UnityEngine::Shader::EnableKeywordFast_Injected)> {
  static const MethodInfo* get() {
    static auto* keyword = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "GlobalKeyword")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Shader*), "EnableKeywordFast_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{keyword});
  }
};
// Writing MetadataGetter for method: UnityEngine::Shader::DisableKeywordFast_Injected
// Il2CppName: DisableKeywordFast_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(ByRef<::UnityEngine::Rendering::GlobalKeyword>)>(&UnityEngine::Shader::DisableKeywordFast_Injected)> {
  static const MethodInfo* get() {
    static auto* keyword = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "GlobalKeyword")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Shader*), "DisableKeywordFast_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{keyword});
  }
};
// Writing MetadataGetter for method: UnityEngine::Shader::SetKeywordFast_Injected
// Il2CppName: SetKeywordFast_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(ByRef<::UnityEngine::Rendering::GlobalKeyword>, bool)>(&UnityEngine::Shader::SetKeywordFast_Injected)> {
  static const MethodInfo* get() {
    static auto* keyword = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "GlobalKeyword")->this_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Shader*), "SetKeywordFast_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{keyword, value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Shader::IsKeywordEnabledFast_Injected
// Il2CppName: IsKeywordEnabledFast_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(ByRef<::UnityEngine::Rendering::GlobalKeyword>)>(&UnityEngine::Shader::IsKeywordEnabledFast_Injected)> {
  static const MethodInfo* get() {
    static auto* keyword = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "GlobalKeyword")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Shader*), "IsKeywordEnabledFast_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{keyword});
  }
};
// Writing MetadataGetter for method: UnityEngine::Shader::SetGlobalVectorImpl_Injected
// Il2CppName: SetGlobalVectorImpl_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int, ByRef<::UnityEngine::Vector4>)>(&UnityEngine::Shader::SetGlobalVectorImpl_Injected)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector4")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Shader*), "SetGlobalVectorImpl_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name, value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Shader::SetGlobalMatrixImpl_Injected
// Il2CppName: SetGlobalMatrixImpl_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int, ByRef<::UnityEngine::Matrix4x4>)>(&UnityEngine::Shader::SetGlobalMatrixImpl_Injected)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Matrix4x4")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Shader*), "SetGlobalMatrixImpl_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name, value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Shader::GetGlobalVectorImpl_Injected
// Il2CppName: GetGlobalVectorImpl_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int, ByRef<::UnityEngine::Vector4>)>(&UnityEngine::Shader::GetGlobalVectorImpl_Injected)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* ret = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector4")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Shader*), "GetGlobalVectorImpl_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name, ret});
  }
};
// Writing MetadataGetter for method: UnityEngine::Shader::GetGlobalMatrixImpl_Injected
// Il2CppName: GetGlobalMatrixImpl_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int, ByRef<::UnityEngine::Matrix4x4>)>(&UnityEngine::Shader::GetGlobalMatrixImpl_Injected)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* ret = &::il2cpp_utils::GetClassFromName("UnityEngine", "Matrix4x4")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Shader*), "GetGlobalMatrixImpl_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name, ret});
  }
};
// Writing MetadataGetter for method: UnityEngine::Shader::GetPropertyDefaultValue_Injected
// Il2CppName: GetPropertyDefaultValue_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::Shader*, int, ByRef<::UnityEngine::Vector4>)>(&UnityEngine::Shader::GetPropertyDefaultValue_Injected)> {
  static const MethodInfo* get() {
    static auto* shader = &::il2cpp_utils::GetClassFromName("UnityEngine", "Shader")->byval_arg;
    static auto* propertyIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* ret = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector4")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Shader*), "GetPropertyDefaultValue_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{shader, propertyIndex, ret});
  }
};
// Writing MetadataGetter for method: UnityEngine::Shader::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
