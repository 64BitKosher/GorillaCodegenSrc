// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.Networking.IMultipartFormSection
#include "UnityEngine/Networking/IMultipartFormSection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Type namespace: UnityEngine.Networking
namespace UnityEngine::Networking {
  // Forward declaring type: MultipartFormFileSection
  class MultipartFormFileSection;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::Networking::MultipartFormFileSection);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::Networking::MultipartFormFileSection*, "UnityEngine.Networking", "MultipartFormFileSection");
// Type namespace: UnityEngine.Networking
namespace UnityEngine::Networking {
  // Size: 0x30
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.Networking.MultipartFormFileSection
  // [TokenAttribute] Offset: FFFFFFFF
  class MultipartFormFileSection : public ::Il2CppObject/*, public ::UnityEngine::Networking::IMultipartFormSection*/ {
    public:
    public:
    // private System.String name
    // Size: 0x8
    // Offset: 0x10
    ::StringW name;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private System.Byte[] data
    // Size: 0x8
    // Offset: 0x18
    ::ArrayW<uint8_t> data;
    // Field size check
    static_assert(sizeof(::ArrayW<uint8_t>) == 0x8);
    // private System.String file
    // Size: 0x8
    // Offset: 0x20
    ::StringW file;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private System.String content
    // Size: 0x8
    // Offset: 0x28
    ::StringW content;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    public:
    // Creating interface conversion operator: operator ::UnityEngine::Networking::IMultipartFormSection
    operator ::UnityEngine::Networking::IMultipartFormSection() noexcept {
      return *reinterpret_cast<::UnityEngine::Networking::IMultipartFormSection*>(this);
    }
    // Get instance field reference: private System.String name
    [[deprecated("Use field access instead!")]] ::StringW& dyn_name();
    // Get instance field reference: private System.Byte[] data
    [[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& dyn_data();
    // Get instance field reference: private System.String file
    [[deprecated("Use field access instead!")]] ::StringW& dyn_file();
    // Get instance field reference: private System.String content
    [[deprecated("Use field access instead!")]] ::StringW& dyn_content();
    // private System.Void Init(System.String name, System.Byte[] data, System.String fileName, System.String contentType)
    // Offset: 0x570CE70
    void Init(::StringW name, ::ArrayW<uint8_t> data, ::StringW fileName, ::StringW contentType);
    // public System.Void .ctor(System.String name, System.Byte[] data, System.String fileName, System.String contentType)
    // Offset: 0x570CED0
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static MultipartFormFileSection* New_ctor(::StringW name, ::ArrayW<uint8_t> data, ::StringW fileName, ::StringW contentType) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::MultipartFormFileSection::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<MultipartFormFileSection*, creationType>(name, data, fileName, contentType)));
    }
    // public System.Void .ctor(System.String fileName, System.Byte[] data)
    // Offset: 0x570CFE8
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static MultipartFormFileSection* New_ctor(::StringW fileName, ::ArrayW<uint8_t> data) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::MultipartFormFileSection::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<MultipartFormFileSection*, creationType>(fileName, data)));
    }
    // public System.String get_sectionName()
    // Offset: 0x570CFF8
    ::StringW get_sectionName();
    // public System.Byte[] get_sectionData()
    // Offset: 0x570D000
    ::ArrayW<uint8_t> get_sectionData();
    // public System.String get_fileName()
    // Offset: 0x570D008
    ::StringW get_fileName();
    // public System.String get_contentType()
    // Offset: 0x570D010
    ::StringW get_contentType();
  }; // UnityEngine.Networking.MultipartFormFileSection
  #pragma pack(pop)
  static check_size<sizeof(MultipartFormFileSection), 40 + sizeof(::StringW)> __UnityEngine_Networking_MultipartFormFileSectionSizeCheck;
  static_assert(sizeof(MultipartFormFileSection) == 0x30);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::Networking::MultipartFormFileSection::Init
// Il2CppName: Init
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Networking::MultipartFormFileSection::*)(::StringW, ::ArrayW<uint8_t>, ::StringW, ::StringW)>(&UnityEngine::Networking::MultipartFormFileSection::Init)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* data = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    static auto* fileName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* contentType = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Networking::MultipartFormFileSection*), "Init", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name, data, fileName, contentType});
  }
};
// Writing MetadataGetter for method: UnityEngine::Networking::MultipartFormFileSection::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::Networking::MultipartFormFileSection::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::Networking::MultipartFormFileSection::get_sectionName
// Il2CppName: get_sectionName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (UnityEngine::Networking::MultipartFormFileSection::*)()>(&UnityEngine::Networking::MultipartFormFileSection::get_sectionName)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Networking::MultipartFormFileSection*), "get_sectionName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Networking::MultipartFormFileSection::get_sectionData
// Il2CppName: get_sectionData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<uint8_t> (UnityEngine::Networking::MultipartFormFileSection::*)()>(&UnityEngine::Networking::MultipartFormFileSection::get_sectionData)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Networking::MultipartFormFileSection*), "get_sectionData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Networking::MultipartFormFileSection::get_fileName
// Il2CppName: get_fileName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (UnityEngine::Networking::MultipartFormFileSection::*)()>(&UnityEngine::Networking::MultipartFormFileSection::get_fileName)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Networking::MultipartFormFileSection*), "get_fileName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Networking::MultipartFormFileSection::get_contentType
// Il2CppName: get_contentType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (UnityEngine::Networking::MultipartFormFileSection::*)()>(&UnityEngine::Networking::MultipartFormFileSection::get_contentType)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Networking::MultipartFormFileSection*), "get_contentType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
