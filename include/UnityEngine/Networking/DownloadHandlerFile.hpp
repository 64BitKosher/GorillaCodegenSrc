// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.Networking.DownloadHandler
#include "UnityEngine/Networking/DownloadHandler.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Skipping declaration: IntPtr because it is already included!
}
// Forward declaring namespace: Unity::Collections
namespace Unity::Collections {
  // Forward declaring type: NativeArray`1<T>
  template<typename T>
  struct NativeArray_1;
}
// Completed forward declares
// Type namespace: UnityEngine.Networking
namespace UnityEngine::Networking {
  // Forward declaring type: DownloadHandlerFile
  class DownloadHandlerFile;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::Networking::DownloadHandlerFile);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::Networking::DownloadHandlerFile*, "UnityEngine.Networking", "DownloadHandlerFile");
// Type namespace: UnityEngine.Networking
namespace UnityEngine::Networking {
  // Size: 0x18
  #pragma pack(push, 1)
  // WARNING Layout: Sequential may not be correctly taken into account!
  // Autogenerated type: UnityEngine.Networking.DownloadHandlerFile
  // [TokenAttribute] Offset: FFFFFFFF
  // [NativeHeaderAttribute] Offset: FFFFFFFF
  class DownloadHandlerFile : public ::UnityEngine::Networking::DownloadHandler {
    public:
    // static private System.IntPtr Create(UnityEngine.Networking.DownloadHandlerFile obj, System.String path, System.Boolean append)
    // Offset: 0x570C9F8
    static ::System::IntPtr Create(::UnityEngine::Networking::DownloadHandlerFile* obj, ::StringW path, bool append);
    // private System.Void InternalCreateVFS(System.String path, System.Boolean append)
    // Offset: 0x570CA4C
    void InternalCreateVFS(::StringW path, bool append);
    // public System.Void .ctor(System.String path, System.Boolean append)
    // Offset: 0x570CB08
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static DownloadHandlerFile* New_ctor(::StringW path, bool append) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::DownloadHandlerFile::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<DownloadHandlerFile*, creationType>(path, append)));
    }
    // protected override Unity.Collections.NativeArray`1<System.Byte> GetNativeData()
    // Offset: 0x570CB3C
    // Implemented from: UnityEngine.Networking.DownloadHandler
    // Base method: Unity.Collections.NativeArray`1<System.Byte> DownloadHandler::GetNativeData()
    ::Unity::Collections::NativeArray_1<uint8_t> GetNativeData();
    // protected override System.Byte[] GetData()
    // Offset: 0x570CB88
    // Implemented from: UnityEngine.Networking.DownloadHandler
    // Base method: System.Byte[] DownloadHandler::GetData()
    ::ArrayW<uint8_t> GetData();
    // protected override System.String GetText()
    // Offset: 0x570CBD4
    // Implemented from: UnityEngine.Networking.DownloadHandler
    // Base method: System.String DownloadHandler::GetText()
    ::StringW GetText();
  }; // UnityEngine.Networking.DownloadHandlerFile
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::Networking::DownloadHandlerFile::Create
// Il2CppName: Create
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::UnityEngine::Networking::DownloadHandlerFile*, ::StringW, bool)>(&UnityEngine::Networking::DownloadHandlerFile::Create)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("UnityEngine.Networking", "DownloadHandlerFile")->byval_arg;
    static auto* path = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* append = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Networking::DownloadHandlerFile*), "Create", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj, path, append});
  }
};
// Writing MetadataGetter for method: UnityEngine::Networking::DownloadHandlerFile::InternalCreateVFS
// Il2CppName: InternalCreateVFS
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Networking::DownloadHandlerFile::*)(::StringW, bool)>(&UnityEngine::Networking::DownloadHandlerFile::InternalCreateVFS)> {
  static const MethodInfo* get() {
    static auto* path = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* append = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Networking::DownloadHandlerFile*), "InternalCreateVFS", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{path, append});
  }
};
// Writing MetadataGetter for method: UnityEngine::Networking::DownloadHandlerFile::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::Networking::DownloadHandlerFile::GetNativeData
// Il2CppName: GetNativeData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Unity::Collections::NativeArray_1<uint8_t> (UnityEngine::Networking::DownloadHandlerFile::*)()>(&UnityEngine::Networking::DownloadHandlerFile::GetNativeData)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Networking::DownloadHandlerFile*), "GetNativeData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Networking::DownloadHandlerFile::GetData
// Il2CppName: GetData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<uint8_t> (UnityEngine::Networking::DownloadHandlerFile::*)()>(&UnityEngine::Networking::DownloadHandlerFile::GetData)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Networking::DownloadHandlerFile*), "GetData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Networking::DownloadHandlerFile::GetText
// Il2CppName: GetText
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (UnityEngine::Networking::DownloadHandlerFile::*)()>(&UnityEngine::Networking::DownloadHandlerFile::GetText)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Networking::DownloadHandlerFile*), "GetText", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
