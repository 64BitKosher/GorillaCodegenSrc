// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Type namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: SortingLayer
  struct SortingLayer;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::SortingLayer, "UnityEngine", "SortingLayer");
// Type namespace: UnityEngine
namespace UnityEngine {
  // Size: 0x4
  #pragma pack(push, 1)
  // WARNING Layout: Sequential may not be correctly taken into account!
  // Autogenerated type: UnityEngine.SortingLayer
  // [TokenAttribute] Offset: FFFFFFFF
  // [NativeHeaderAttribute] Offset: FFFFFFFF
  struct SortingLayer/*, public ::System::ValueType*/ {
    public:
    public:
    // private System.Int32 m_Id
    // Size: 0x4
    // Offset: 0x0
    int m_Id;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Creating value type constructor for type: SortingLayer
    constexpr SortingLayer(int m_Id_ = {}) noexcept : m_Id{m_Id_} {}
    // Creating interface conversion operator: operator ::System::ValueType
    operator ::System::ValueType() noexcept {
      return *reinterpret_cast<::System::ValueType*>(this);
    }
    // Creating conversion operator: operator int
    constexpr operator int() const noexcept {
      return m_Id;
    }
    // Get instance field reference: private System.Int32 m_Id
    [[deprecated("Use field access instead!")]] int& dyn_m_Id();
    // public System.Int32 get_id()
    // Offset: 0x5479FA8
    int get_id();
    // public System.Int32 get_value()
    // Offset: 0x5479FB0
    int get_value();
    // static public UnityEngine.SortingLayer[] get_layers()
    // Offset: 0x547A028
    static ::ArrayW<::UnityEngine::SortingLayer> get_layers();
    // static private System.Int32[] GetSortingLayerIDsInternal()
    // Offset: 0x547A0E8
    static ::ArrayW<int> GetSortingLayerIDsInternal();
    // static public System.Int32 GetLayerValueFromID(System.Int32 id)
    // Offset: 0x5479FEC
    static int GetLayerValueFromID(int id);
    // static public System.String IDToName(System.Int32 id)
    // Offset: 0x547A110
    static ::StringW IDToName(int id);
  }; // UnityEngine.SortingLayer
  #pragma pack(pop)
  static check_size<sizeof(SortingLayer), 0 + sizeof(int)> __UnityEngine_SortingLayerSizeCheck;
  static_assert(sizeof(SortingLayer) == 0x4);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::SortingLayer::get_id
// Il2CppName: get_id
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::SortingLayer::*)()>(&UnityEngine::SortingLayer::get_id)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::SortingLayer), "get_id", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::SortingLayer::get_value
// Il2CppName: get_value
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::SortingLayer::*)()>(&UnityEngine::SortingLayer::get_value)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::SortingLayer), "get_value", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::SortingLayer::get_layers
// Il2CppName: get_layers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::UnityEngine::SortingLayer> (*)()>(&UnityEngine::SortingLayer::get_layers)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::SortingLayer), "get_layers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::SortingLayer::GetSortingLayerIDsInternal
// Il2CppName: GetSortingLayerIDsInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<int> (*)()>(&UnityEngine::SortingLayer::GetSortingLayerIDsInternal)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::SortingLayer), "GetSortingLayerIDsInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::SortingLayer::GetLayerValueFromID
// Il2CppName: GetLayerValueFromID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(int)>(&UnityEngine::SortingLayer::GetLayerValueFromID)> {
  static const MethodInfo* get() {
    static auto* id = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::SortingLayer), "GetLayerValueFromID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{id});
  }
};
// Writing MetadataGetter for method: UnityEngine::SortingLayer::IDToName
// Il2CppName: IDToName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(int)>(&UnityEngine::SortingLayer::IDToName)> {
  static const MethodInfo* get() {
    static auto* id = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::SortingLayer), "IDToName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{id});
  }
};
