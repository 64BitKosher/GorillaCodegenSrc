// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Action`2<T1, T2>
  template<typename T1, typename T2>
  class Action_2;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: ShadowmaskMode
  struct ShadowmaskMode;
  // Forward declaring type: ScriptableObject
  class ScriptableObject;
  // Forward declaring type: ColorSpace
  struct ColorSpace;
}
// Forward declaring namespace: UnityEngine::Rendering
namespace UnityEngine::Rendering {
  // Forward declaring type: RenderPipelineAsset
  class RenderPipelineAsset;
}
// Completed forward declares
// Type namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: QualitySettings
  class QualitySettings;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::QualitySettings);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::QualitySettings*, "UnityEngine", "QualitySettings");
// Type namespace: UnityEngine
namespace UnityEngine {
  // Size: 0x18
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.QualitySettings
  // [TokenAttribute] Offset: FFFFFFFF
  // [NativeHeaderAttribute] Offset: FFFFFFFF
  // [NativeHeaderAttribute] Offset: FFFFFFFF
  // [StaticAccessorAttribute] Offset: FFFFFFFF
  class QualitySettings : public ::UnityEngine::Object {
    public:
    // Get static field: static private System.Action`2<System.Int32,System.Int32> activeQualityLevelChanged
    static ::System::Action_2<int, int>* _get_activeQualityLevelChanged();
    // Set static field: static private System.Action`2<System.Int32,System.Int32> activeQualityLevelChanged
    static void _set_activeQualityLevelChanged(::System::Action_2<int, int>* value);
    // static System.Void OnActiveQualityLevelChanged(System.Int32 previousQualityLevel, System.Int32 currentQualityLevel)
    // Offset: 0x548DBB0
    static void OnActiveQualityLevelChanged(int previousQualityLevel, int currentQualityLevel);
    // static public UnityEngine.ShadowmaskMode get_shadowmaskMode()
    // Offset: 0x548DC30
    static ::UnityEngine::ShadowmaskMode get_shadowmaskMode();
    // static public System.Void set_enableLODCrossFade(System.Boolean value)
    // Offset: 0x548DC58
    static void set_enableLODCrossFade(bool value);
    // static public System.Int32 get_antiAliasing()
    // Offset: 0x548DC94
    static int get_antiAliasing();
    // static public System.Void set_antiAliasing(System.Int32 value)
    // Offset: 0x548DCBC
    static void set_antiAliasing(int value);
    // static public System.Boolean get_billboardsFaceCameraPosition()
    // Offset: 0x548DCF8
    static bool get_billboardsFaceCameraPosition();
    // static private UnityEngine.ScriptableObject get_INTERNAL_renderPipeline()
    // Offset: 0x548DD20
    static ::UnityEngine::ScriptableObject* get_INTERNAL_renderPipeline();
    // static private System.Void set_INTERNAL_renderPipeline(UnityEngine.ScriptableObject value)
    // Offset: 0x548DD48
    static void set_INTERNAL_renderPipeline(::UnityEngine::ScriptableObject* value);
    // static public UnityEngine.Rendering.RenderPipelineAsset get_renderPipeline()
    // Offset: 0x548DD84
    static ::UnityEngine::Rendering::RenderPipelineAsset* get_renderPipeline();
    // static public System.Void set_renderPipeline(UnityEngine.Rendering.RenderPipelineAsset value)
    // Offset: 0x548DE14
    static void set_renderPipeline(::UnityEngine::Rendering::RenderPipelineAsset* value);
    // static public UnityEngine.ColorSpace get_desiredColorSpace()
    // Offset: 0x548DE50
    static ::UnityEngine::ColorSpace get_desiredColorSpace();
    // static public UnityEngine.ColorSpace get_activeColorSpace()
    // Offset: 0x548DE78
    static ::UnityEngine::ColorSpace get_activeColorSpace();
  }; // UnityEngine.QualitySettings
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::QualitySettings::OnActiveQualityLevelChanged
// Il2CppName: OnActiveQualityLevelChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int, int)>(&UnityEngine::QualitySettings::OnActiveQualityLevelChanged)> {
  static const MethodInfo* get() {
    static auto* previousQualityLevel = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* currentQualityLevel = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::QualitySettings*), "OnActiveQualityLevelChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{previousQualityLevel, currentQualityLevel});
  }
};
// Writing MetadataGetter for method: UnityEngine::QualitySettings::get_shadowmaskMode
// Il2CppName: get_shadowmaskMode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::ShadowmaskMode (*)()>(&UnityEngine::QualitySettings::get_shadowmaskMode)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::QualitySettings*), "get_shadowmaskMode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::QualitySettings::set_enableLODCrossFade
// Il2CppName: set_enableLODCrossFade
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(bool)>(&UnityEngine::QualitySettings::set_enableLODCrossFade)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::QualitySettings*), "set_enableLODCrossFade", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::QualitySettings::get_antiAliasing
// Il2CppName: get_antiAliasing
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)()>(&UnityEngine::QualitySettings::get_antiAliasing)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::QualitySettings*), "get_antiAliasing", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::QualitySettings::set_antiAliasing
// Il2CppName: set_antiAliasing
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int)>(&UnityEngine::QualitySettings::set_antiAliasing)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::QualitySettings*), "set_antiAliasing", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::QualitySettings::get_billboardsFaceCameraPosition
// Il2CppName: get_billboardsFaceCameraPosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&UnityEngine::QualitySettings::get_billboardsFaceCameraPosition)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::QualitySettings*), "get_billboardsFaceCameraPosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::QualitySettings::get_INTERNAL_renderPipeline
// Il2CppName: get_INTERNAL_renderPipeline
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::ScriptableObject* (*)()>(&UnityEngine::QualitySettings::get_INTERNAL_renderPipeline)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::QualitySettings*), "get_INTERNAL_renderPipeline", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::QualitySettings::set_INTERNAL_renderPipeline
// Il2CppName: set_INTERNAL_renderPipeline
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::ScriptableObject*)>(&UnityEngine::QualitySettings::set_INTERNAL_renderPipeline)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "ScriptableObject")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::QualitySettings*), "set_INTERNAL_renderPipeline", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::QualitySettings::get_renderPipeline
// Il2CppName: get_renderPipeline
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Rendering::RenderPipelineAsset* (*)()>(&UnityEngine::QualitySettings::get_renderPipeline)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::QualitySettings*), "get_renderPipeline", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::QualitySettings::set_renderPipeline
// Il2CppName: set_renderPipeline
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::Rendering::RenderPipelineAsset*)>(&UnityEngine::QualitySettings::set_renderPipeline)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "RenderPipelineAsset")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::QualitySettings*), "set_renderPipeline", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::QualitySettings::get_desiredColorSpace
// Il2CppName: get_desiredColorSpace
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::ColorSpace (*)()>(&UnityEngine::QualitySettings::get_desiredColorSpace)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::QualitySettings*), "get_desiredColorSpace", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::QualitySettings::get_activeColorSpace
// Il2CppName: get_activeColorSpace
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::ColorSpace (*)()>(&UnityEngine::QualitySettings::get_activeColorSpace)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::QualitySettings*), "get_activeColorSpace", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
