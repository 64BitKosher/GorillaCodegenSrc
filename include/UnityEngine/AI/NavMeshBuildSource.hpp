// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Including type: UnityEngine.Matrix4x4
#include "UnityEngine/Matrix4x4.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: UnityEngine.AI.NavMeshBuildSourceShape
#include "UnityEngine/AI/NavMeshBuildSourceShape.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Object
  class Object;
  // Forward declaring type: Component
  class Component;
}
// Completed forward declares
// Type namespace: UnityEngine.AI
namespace UnityEngine::AI {
  // Forward declaring type: NavMeshBuildSource
  struct NavMeshBuildSource;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::AI::NavMeshBuildSource, "UnityEngine.AI", "NavMeshBuildSource");
// Type namespace: UnityEngine.AI
namespace UnityEngine::AI {
  // Size: 0x60
  #pragma pack(push, 1)
  // WARNING Layout: Sequential may not be correctly taken into account!
  // Autogenerated type: UnityEngine.AI.NavMeshBuildSource
  // [TokenAttribute] Offset: FFFFFFFF
  // [NativeHeaderAttribute] Offset: FFFFFFFF
  // [UsedByNativeCodeAttribute] Offset: FFFFFFFF
  struct NavMeshBuildSource/*, public ::System::ValueType*/ {
    public:
    public:
    // private UnityEngine.Matrix4x4 m_Transform
    // Size: 0x40
    // Offset: 0x0
    ::UnityEngine::Matrix4x4 m_Transform;
    // Field size check
    static_assert(sizeof(::UnityEngine::Matrix4x4) == 0x40);
    // private UnityEngine.Vector3 m_Size
    // Size: 0xC
    // Offset: 0x40
    ::UnityEngine::Vector3 m_Size;
    // Field size check
    static_assert(sizeof(::UnityEngine::Vector3) == 0xC);
    // private UnityEngine.AI.NavMeshBuildSourceShape m_Shape
    // Size: 0x4
    // Offset: 0x4C
    ::UnityEngine::AI::NavMeshBuildSourceShape m_Shape;
    // Field size check
    static_assert(sizeof(::UnityEngine::AI::NavMeshBuildSourceShape) == 0x4);
    // private System.Int32 m_Area
    // Size: 0x4
    // Offset: 0x50
    int m_Area;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private System.Int32 m_InstanceID
    // Size: 0x4
    // Offset: 0x54
    int m_InstanceID;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private System.Int32 m_ComponentID
    // Size: 0x4
    // Offset: 0x58
    int m_ComponentID;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private System.Int32 m_GenerateLinks
    // Size: 0x4
    // Offset: 0x5C
    int m_GenerateLinks;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Creating value type constructor for type: NavMeshBuildSource
    constexpr NavMeshBuildSource(::UnityEngine::Matrix4x4 m_Transform_ = {}, ::UnityEngine::Vector3 m_Size_ = {}, ::UnityEngine::AI::NavMeshBuildSourceShape m_Shape_ = {}, int m_Area_ = {}, int m_InstanceID_ = {}, int m_ComponentID_ = {}, int m_GenerateLinks_ = {}) noexcept : m_Transform{m_Transform_}, m_Size{m_Size_}, m_Shape{m_Shape_}, m_Area{m_Area_}, m_InstanceID{m_InstanceID_}, m_ComponentID{m_ComponentID_}, m_GenerateLinks{m_GenerateLinks_} {}
    // Creating interface conversion operator: operator ::System::ValueType
    operator ::System::ValueType() noexcept {
      return *reinterpret_cast<::System::ValueType*>(this);
    }
    // Get instance field reference: private UnityEngine.Matrix4x4 m_Transform
    [[deprecated("Use field access instead!")]] ::UnityEngine::Matrix4x4& dyn_m_Transform();
    // Get instance field reference: private UnityEngine.Vector3 m_Size
    [[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& dyn_m_Size();
    // Get instance field reference: private UnityEngine.AI.NavMeshBuildSourceShape m_Shape
    [[deprecated("Use field access instead!")]] ::UnityEngine::AI::NavMeshBuildSourceShape& dyn_m_Shape();
    // Get instance field reference: private System.Int32 m_Area
    [[deprecated("Use field access instead!")]] int& dyn_m_Area();
    // Get instance field reference: private System.Int32 m_InstanceID
    [[deprecated("Use field access instead!")]] int& dyn_m_InstanceID();
    // Get instance field reference: private System.Int32 m_ComponentID
    [[deprecated("Use field access instead!")]] int& dyn_m_ComponentID();
    // Get instance field reference: private System.Int32 m_GenerateLinks
    [[deprecated("Use field access instead!")]] int& dyn_m_GenerateLinks();
    // public UnityEngine.Matrix4x4 get_transform()
    // Offset: 0x544FB8C
    ::UnityEngine::Matrix4x4 get_transform();
    // public System.Void set_transform(UnityEngine.Matrix4x4 value)
    // Offset: 0x544FBA0
    void set_transform(::UnityEngine::Matrix4x4 value);
    // public UnityEngine.Vector3 get_size()
    // Offset: 0x544FBB4
    ::UnityEngine::Vector3 get_size();
    // public System.Void set_size(UnityEngine.Vector3 value)
    // Offset: 0x544FBC0
    void set_size(::UnityEngine::Vector3 value);
    // public UnityEngine.AI.NavMeshBuildSourceShape get_shape()
    // Offset: 0x544FBCC
    ::UnityEngine::AI::NavMeshBuildSourceShape get_shape();
    // public System.Void set_shape(UnityEngine.AI.NavMeshBuildSourceShape value)
    // Offset: 0x544FBD4
    void set_shape(::UnityEngine::AI::NavMeshBuildSourceShape value);
    // public System.Void set_area(System.Int32 value)
    // Offset: 0x544FBDC
    void set_area(int value);
    // public UnityEngine.Object get_sourceObject()
    // Offset: 0x544FBE4
    ::UnityEngine::Object* get_sourceObject();
    // public UnityEngine.Component get_component()
    // Offset: 0x544FC5C
    ::UnityEngine::Component* get_component();
    // static private UnityEngine.Component InternalGetComponent(System.Int32 instanceID)
    // Offset: 0x544FC98
    static ::UnityEngine::Component* InternalGetComponent(int instanceID);
    // static private UnityEngine.Object InternalGetObject(System.Int32 instanceID)
    // Offset: 0x544FC20
    static ::UnityEngine::Object* InternalGetObject(int instanceID);
  }; // UnityEngine.AI.NavMeshBuildSource
  #pragma pack(pop)
  static check_size<sizeof(NavMeshBuildSource), 92 + sizeof(int)> __UnityEngine_AI_NavMeshBuildSourceSizeCheck;
  static_assert(sizeof(NavMeshBuildSource) == 0x60);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::AI::NavMeshBuildSource::get_transform
// Il2CppName: get_transform
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Matrix4x4 (UnityEngine::AI::NavMeshBuildSource::*)()>(&UnityEngine::AI::NavMeshBuildSource::get_transform)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::AI::NavMeshBuildSource), "get_transform", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::AI::NavMeshBuildSource::set_transform
// Il2CppName: set_transform
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::AI::NavMeshBuildSource::*)(::UnityEngine::Matrix4x4)>(&UnityEngine::AI::NavMeshBuildSource::set_transform)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Matrix4x4")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::AI::NavMeshBuildSource), "set_transform", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::AI::NavMeshBuildSource::get_size
// Il2CppName: get_size
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector3 (UnityEngine::AI::NavMeshBuildSource::*)()>(&UnityEngine::AI::NavMeshBuildSource::get_size)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::AI::NavMeshBuildSource), "get_size", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::AI::NavMeshBuildSource::set_size
// Il2CppName: set_size
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::AI::NavMeshBuildSource::*)(::UnityEngine::Vector3)>(&UnityEngine::AI::NavMeshBuildSource::set_size)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::AI::NavMeshBuildSource), "set_size", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::AI::NavMeshBuildSource::get_shape
// Il2CppName: get_shape
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::AI::NavMeshBuildSourceShape (UnityEngine::AI::NavMeshBuildSource::*)()>(&UnityEngine::AI::NavMeshBuildSource::get_shape)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::AI::NavMeshBuildSource), "get_shape", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::AI::NavMeshBuildSource::set_shape
// Il2CppName: set_shape
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::AI::NavMeshBuildSource::*)(::UnityEngine::AI::NavMeshBuildSourceShape)>(&UnityEngine::AI::NavMeshBuildSource::set_shape)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.AI", "NavMeshBuildSourceShape")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::AI::NavMeshBuildSource), "set_shape", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::AI::NavMeshBuildSource::set_area
// Il2CppName: set_area
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::AI::NavMeshBuildSource::*)(int)>(&UnityEngine::AI::NavMeshBuildSource::set_area)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::AI::NavMeshBuildSource), "set_area", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::AI::NavMeshBuildSource::get_sourceObject
// Il2CppName: get_sourceObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Object* (UnityEngine::AI::NavMeshBuildSource::*)()>(&UnityEngine::AI::NavMeshBuildSource::get_sourceObject)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::AI::NavMeshBuildSource), "get_sourceObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::AI::NavMeshBuildSource::get_component
// Il2CppName: get_component
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Component* (UnityEngine::AI::NavMeshBuildSource::*)()>(&UnityEngine::AI::NavMeshBuildSource::get_component)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::AI::NavMeshBuildSource), "get_component", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::AI::NavMeshBuildSource::InternalGetComponent
// Il2CppName: InternalGetComponent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Component* (*)(int)>(&UnityEngine::AI::NavMeshBuildSource::InternalGetComponent)> {
  static const MethodInfo* get() {
    static auto* instanceID = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::AI::NavMeshBuildSource), "InternalGetComponent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{instanceID});
  }
};
// Writing MetadataGetter for method: UnityEngine::AI::NavMeshBuildSource::InternalGetObject
// Il2CppName: InternalGetObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Object* (*)(int)>(&UnityEngine::AI::NavMeshBuildSource::InternalGetObject)> {
  static const MethodInfo* get() {
    static auto* instanceID = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::AI::NavMeshBuildSource), "InternalGetObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{instanceID});
  }
};
