// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Including type: UnityEngine.AI.NavMeshBuildDebugSettings
#include "UnityEngine/AI/NavMeshBuildDebugSettings.hpp"
// Completed includes
// Type namespace: UnityEngine.AI
namespace UnityEngine::AI {
  // Forward declaring type: NavMeshBuildSettings
  struct NavMeshBuildSettings;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::AI::NavMeshBuildSettings, "UnityEngine.AI", "NavMeshBuildSettings");
// Type namespace: UnityEngine.AI
namespace UnityEngine::AI {
  // Size: 0x3D
  #pragma pack(push, 1)
  // WARNING Layout: Sequential may not be correctly taken into account!
  // Autogenerated type: UnityEngine.AI.NavMeshBuildSettings
  // [TokenAttribute] Offset: FFFFFFFF
  // [NativeHeaderAttribute] Offset: FFFFFFFF
  struct NavMeshBuildSettings/*, public ::System::ValueType*/ {
    public:
    public:
    // private System.Int32 m_AgentTypeID
    // Size: 0x4
    // Offset: 0x0
    int m_AgentTypeID;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private System.Single m_AgentRadius
    // Size: 0x4
    // Offset: 0x4
    float m_AgentRadius;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Single m_AgentHeight
    // Size: 0x4
    // Offset: 0x8
    float m_AgentHeight;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Single m_AgentSlope
    // Size: 0x4
    // Offset: 0xC
    float m_AgentSlope;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Single m_AgentClimb
    // Size: 0x4
    // Offset: 0x10
    float m_AgentClimb;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Single m_LedgeDropHeight
    // Size: 0x4
    // Offset: 0x14
    float m_LedgeDropHeight;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Single m_MaxJumpAcrossDistance
    // Size: 0x4
    // Offset: 0x18
    float m_MaxJumpAcrossDistance;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Single m_MinRegionArea
    // Size: 0x4
    // Offset: 0x1C
    float m_MinRegionArea;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Int32 m_OverrideVoxelSize
    // Size: 0x4
    // Offset: 0x20
    int m_OverrideVoxelSize;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private System.Single m_VoxelSize
    // Size: 0x4
    // Offset: 0x24
    float m_VoxelSize;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Int32 m_OverrideTileSize
    // Size: 0x4
    // Offset: 0x28
    int m_OverrideTileSize;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private System.Int32 m_TileSize
    // Size: 0x4
    // Offset: 0x2C
    int m_TileSize;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private System.Int32 m_BuildHeightMesh
    // Size: 0x4
    // Offset: 0x30
    int m_BuildHeightMesh;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private System.UInt32 m_MaxJobWorkers
    // Size: 0x4
    // Offset: 0x34
    uint m_MaxJobWorkers;
    // Field size check
    static_assert(sizeof(uint) == 0x4);
    // private System.Int32 m_PreserveTilesOutsideBounds
    // Size: 0x4
    // Offset: 0x38
    int m_PreserveTilesOutsideBounds;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private UnityEngine.AI.NavMeshBuildDebugSettings m_Debug
    // Size: 0x1
    // Offset: 0x3C
    ::UnityEngine::AI::NavMeshBuildDebugSettings m_Debug;
    // Field size check
    static_assert(sizeof(::UnityEngine::AI::NavMeshBuildDebugSettings) == 0x1);
    public:
    // Creating value type constructor for type: NavMeshBuildSettings
    constexpr NavMeshBuildSettings(int m_AgentTypeID_ = {}, float m_AgentRadius_ = {}, float m_AgentHeight_ = {}, float m_AgentSlope_ = {}, float m_AgentClimb_ = {}, float m_LedgeDropHeight_ = {}, float m_MaxJumpAcrossDistance_ = {}, float m_MinRegionArea_ = {}, int m_OverrideVoxelSize_ = {}, float m_VoxelSize_ = {}, int m_OverrideTileSize_ = {}, int m_TileSize_ = {}, int m_BuildHeightMesh_ = {}, uint m_MaxJobWorkers_ = {}, int m_PreserveTilesOutsideBounds_ = {}, ::UnityEngine::AI::NavMeshBuildDebugSettings m_Debug_ = {}) noexcept : m_AgentTypeID{m_AgentTypeID_}, m_AgentRadius{m_AgentRadius_}, m_AgentHeight{m_AgentHeight_}, m_AgentSlope{m_AgentSlope_}, m_AgentClimb{m_AgentClimb_}, m_LedgeDropHeight{m_LedgeDropHeight_}, m_MaxJumpAcrossDistance{m_MaxJumpAcrossDistance_}, m_MinRegionArea{m_MinRegionArea_}, m_OverrideVoxelSize{m_OverrideVoxelSize_}, m_VoxelSize{m_VoxelSize_}, m_OverrideTileSize{m_OverrideTileSize_}, m_TileSize{m_TileSize_}, m_BuildHeightMesh{m_BuildHeightMesh_}, m_MaxJobWorkers{m_MaxJobWorkers_}, m_PreserveTilesOutsideBounds{m_PreserveTilesOutsideBounds_}, m_Debug{m_Debug_} {}
    // Creating interface conversion operator: operator ::System::ValueType
    operator ::System::ValueType() noexcept {
      return *reinterpret_cast<::System::ValueType*>(this);
    }
    // Get instance field reference: private System.Int32 m_AgentTypeID
    [[deprecated("Use field access instead!")]] int& dyn_m_AgentTypeID();
    // Get instance field reference: private System.Single m_AgentRadius
    [[deprecated("Use field access instead!")]] float& dyn_m_AgentRadius();
    // Get instance field reference: private System.Single m_AgentHeight
    [[deprecated("Use field access instead!")]] float& dyn_m_AgentHeight();
    // Get instance field reference: private System.Single m_AgentSlope
    [[deprecated("Use field access instead!")]] float& dyn_m_AgentSlope();
    // Get instance field reference: private System.Single m_AgentClimb
    [[deprecated("Use field access instead!")]] float& dyn_m_AgentClimb();
    // Get instance field reference: private System.Single m_LedgeDropHeight
    [[deprecated("Use field access instead!")]] float& dyn_m_LedgeDropHeight();
    // Get instance field reference: private System.Single m_MaxJumpAcrossDistance
    [[deprecated("Use field access instead!")]] float& dyn_m_MaxJumpAcrossDistance();
    // Get instance field reference: private System.Single m_MinRegionArea
    [[deprecated("Use field access instead!")]] float& dyn_m_MinRegionArea();
    // Get instance field reference: private System.Int32 m_OverrideVoxelSize
    [[deprecated("Use field access instead!")]] int& dyn_m_OverrideVoxelSize();
    // Get instance field reference: private System.Single m_VoxelSize
    [[deprecated("Use field access instead!")]] float& dyn_m_VoxelSize();
    // Get instance field reference: private System.Int32 m_OverrideTileSize
    [[deprecated("Use field access instead!")]] int& dyn_m_OverrideTileSize();
    // Get instance field reference: private System.Int32 m_TileSize
    [[deprecated("Use field access instead!")]] int& dyn_m_TileSize();
    // Get instance field reference: private System.Int32 m_BuildHeightMesh
    [[deprecated("Use field access instead!")]] int& dyn_m_BuildHeightMesh();
    // Get instance field reference: private System.UInt32 m_MaxJobWorkers
    [[deprecated("Use field access instead!")]] uint& dyn_m_MaxJobWorkers();
    // Get instance field reference: private System.Int32 m_PreserveTilesOutsideBounds
    [[deprecated("Use field access instead!")]] int& dyn_m_PreserveTilesOutsideBounds();
    // Get instance field reference: private UnityEngine.AI.NavMeshBuildDebugSettings m_Debug
    [[deprecated("Use field access instead!")]] ::UnityEngine::AI::NavMeshBuildDebugSettings& dyn_m_Debug();
    // public System.Int32 get_agentTypeID()
    // Offset: 0x544E690
    int get_agentTypeID();
    // public System.Void set_agentTypeID(System.Int32 value)
    // Offset: 0x544FD84
    void set_agentTypeID(int value);
    // public System.Void set_overrideVoxelSize(System.Boolean value)
    // Offset: 0x544FD8C
    void set_overrideVoxelSize(bool value);
    // public System.Void set_voxelSize(System.Single value)
    // Offset: 0x544FD98
    void set_voxelSize(float value);
    // public System.Void set_overrideTileSize(System.Boolean value)
    // Offset: 0x544FDA0
    void set_overrideTileSize(bool value);
    // public System.Void set_tileSize(System.Int32 value)
    // Offset: 0x544FDAC
    void set_tileSize(int value);
  }; // UnityEngine.AI.NavMeshBuildSettings
  #pragma pack(pop)
  static check_size<sizeof(NavMeshBuildSettings), 60 + sizeof(::UnityEngine::AI::NavMeshBuildDebugSettings)> __UnityEngine_AI_NavMeshBuildSettingsSizeCheck;
  static_assert(sizeof(NavMeshBuildSettings) == 0x3D);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::AI::NavMeshBuildSettings::get_agentTypeID
// Il2CppName: get_agentTypeID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::AI::NavMeshBuildSettings::*)()>(&UnityEngine::AI::NavMeshBuildSettings::get_agentTypeID)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::AI::NavMeshBuildSettings), "get_agentTypeID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::AI::NavMeshBuildSettings::set_agentTypeID
// Il2CppName: set_agentTypeID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::AI::NavMeshBuildSettings::*)(int)>(&UnityEngine::AI::NavMeshBuildSettings::set_agentTypeID)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::AI::NavMeshBuildSettings), "set_agentTypeID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::AI::NavMeshBuildSettings::set_overrideVoxelSize
// Il2CppName: set_overrideVoxelSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::AI::NavMeshBuildSettings::*)(bool)>(&UnityEngine::AI::NavMeshBuildSettings::set_overrideVoxelSize)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::AI::NavMeshBuildSettings), "set_overrideVoxelSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::AI::NavMeshBuildSettings::set_voxelSize
// Il2CppName: set_voxelSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::AI::NavMeshBuildSettings::*)(float)>(&UnityEngine::AI::NavMeshBuildSettings::set_voxelSize)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::AI::NavMeshBuildSettings), "set_voxelSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::AI::NavMeshBuildSettings::set_overrideTileSize
// Il2CppName: set_overrideTileSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::AI::NavMeshBuildSettings::*)(bool)>(&UnityEngine::AI::NavMeshBuildSettings::set_overrideTileSize)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::AI::NavMeshBuildSettings), "set_overrideTileSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::AI::NavMeshBuildSettings::set_tileSize
// Il2CppName: set_tileSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::AI::NavMeshBuildSettings::*)(int)>(&UnityEngine::AI::NavMeshBuildSettings::set_tileSize)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::AI::NavMeshBuildSettings), "set_tileSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
