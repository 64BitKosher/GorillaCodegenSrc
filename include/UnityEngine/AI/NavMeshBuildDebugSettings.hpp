// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include <stdint.h>
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Completed includes
// Type namespace: UnityEngine.AI
namespace UnityEngine::AI {
  // Forward declaring type: NavMeshBuildDebugSettings
  struct NavMeshBuildDebugSettings;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::AI::NavMeshBuildDebugSettings, "UnityEngine.AI", "NavMeshBuildDebugSettings");
// Type namespace: UnityEngine.AI
namespace UnityEngine::AI {
  // Size: 0x1
  #pragma pack(push, 1)
  // WARNING Layout: Sequential may not be correctly taken into account!
  // Autogenerated type: UnityEngine.AI.NavMeshBuildDebugSettings
  // [TokenAttribute] Offset: FFFFFFFF
  // [NativeHeaderAttribute] Offset: FFFFFFFF
  struct NavMeshBuildDebugSettings/*, public ::System::ValueType*/ {
    public:
    public:
    // private System.Byte m_Flags
    // Size: 0x1
    // Offset: 0x0
    uint8_t m_Flags;
    // Field size check
    static_assert(sizeof(uint8_t) == 0x1);
    public:
    // Creating value type constructor for type: NavMeshBuildDebugSettings
    constexpr NavMeshBuildDebugSettings(uint8_t m_Flags_ = {}) noexcept : m_Flags{m_Flags_} {}
    // Creating interface conversion operator: operator ::System::ValueType
    operator ::System::ValueType() noexcept {
      return *reinterpret_cast<::System::ValueType*>(this);
    }
    // Creating conversion operator: operator uint8_t
    constexpr operator uint8_t() const noexcept {
      return m_Flags;
    }
    // Get instance field reference: private System.Byte m_Flags
    [[deprecated("Use field access instead!")]] uint8_t& dyn_m_Flags();
  }; // UnityEngine.AI.NavMeshBuildDebugSettings
  #pragma pack(pop)
  static check_size<sizeof(NavMeshBuildDebugSettings), 0 + sizeof(uint8_t)> __UnityEngine_AI_NavMeshBuildDebugSettingsSizeCheck;
  static_assert(sizeof(NavMeshBuildDebugSettings) == 0x1);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
