// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.AI.NavMeshBuildMarkup
#include "UnityEngine/AI/NavMeshBuildMarkup.hpp"
// Including type: UnityEngine.AI.NavMeshBuildSource
#include "UnityEngine/AI/NavMeshBuildSource.hpp"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Bounds
  struct Bounds;
  // Forward declaring type: Transform
  class Transform;
  // Skipping declaration: Vector3 because it is already included!
  // Forward declaring type: Quaternion
  struct Quaternion;
  // Forward declaring type: AsyncOperation
  class AsyncOperation;
}
// Forward declaring namespace: UnityEngine::AI
namespace UnityEngine::AI {
  // Forward declaring type: NavMeshCollectGeometry
  struct NavMeshCollectGeometry;
  // Forward declaring type: NavMeshData
  class NavMeshData;
  // Forward declaring type: NavMeshBuildSettings
  struct NavMeshBuildSettings;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Completed forward declares
// Type namespace: UnityEngine.AI
namespace UnityEngine::AI {
  // Forward declaring type: NavMeshBuilder
  class NavMeshBuilder;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::AI::NavMeshBuilder);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::AI::NavMeshBuilder*, "UnityEngine.AI", "NavMeshBuilder");
// Type namespace: UnityEngine.AI
namespace UnityEngine::AI {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.AI.NavMeshBuilder
  // [TokenAttribute] Offset: FFFFFFFF
  // [NativeHeaderAttribute] Offset: FFFFFFFF
  // [StaticAccessorAttribute] Offset: FFFFFFFF
  class NavMeshBuilder : public ::Il2CppObject {
    public:
    // static public System.Void CollectSources(UnityEngine.Bounds includedWorldBounds, System.Int32 includedLayerMask, UnityEngine.AI.NavMeshCollectGeometry geometry, System.Int32 defaultArea, System.Boolean generateLinksByDefault, System.Collections.Generic.List`1<UnityEngine.AI.NavMeshBuildMarkup> markups, System.Boolean includeOnlyMarkedObjects, System.Collections.Generic.List`1<UnityEngine.AI.NavMeshBuildSource> results)
    // Offset: 0x544DFBC
    static void CollectSources(::UnityEngine::Bounds includedWorldBounds, int includedLayerMask, ::UnityEngine::AI::NavMeshCollectGeometry geometry, int defaultArea, bool generateLinksByDefault, ::System::Collections::Generic::List_1<::UnityEngine::AI::NavMeshBuildMarkup>* markups, bool includeOnlyMarkedObjects, ::System::Collections::Generic::List_1<::UnityEngine::AI::NavMeshBuildSource>* results);
    // static public System.Void CollectSources(UnityEngine.Bounds includedWorldBounds, System.Int32 includedLayerMask, UnityEngine.AI.NavMeshCollectGeometry geometry, System.Int32 defaultArea, System.Collections.Generic.List`1<UnityEngine.AI.NavMeshBuildMarkup> markups, System.Collections.Generic.List`1<UnityEngine.AI.NavMeshBuildSource> results)
    // Offset: 0x544E274
    static void CollectSources(::UnityEngine::Bounds includedWorldBounds, int includedLayerMask, ::UnityEngine::AI::NavMeshCollectGeometry geometry, int defaultArea, ::System::Collections::Generic::List_1<::UnityEngine::AI::NavMeshBuildMarkup>* markups, ::System::Collections::Generic::List_1<::UnityEngine::AI::NavMeshBuildSource>* results);
    // static public System.Void CollectSources(UnityEngine.Transform root, System.Int32 includedLayerMask, UnityEngine.AI.NavMeshCollectGeometry geometry, System.Int32 defaultArea, System.Boolean generateLinksByDefault, System.Collections.Generic.List`1<UnityEngine.AI.NavMeshBuildMarkup> markups, System.Boolean includeOnlyMarkedObjects, System.Collections.Generic.List`1<UnityEngine.AI.NavMeshBuildSource> results)
    // Offset: 0x544E2B0
    static void CollectSources(::UnityEngine::Transform* root, int includedLayerMask, ::UnityEngine::AI::NavMeshCollectGeometry geometry, int defaultArea, bool generateLinksByDefault, ::System::Collections::Generic::List_1<::UnityEngine::AI::NavMeshBuildMarkup>* markups, bool includeOnlyMarkedObjects, ::System::Collections::Generic::List_1<::UnityEngine::AI::NavMeshBuildSource>* results);
    // static public System.Void CollectSources(UnityEngine.Transform root, System.Int32 includedLayerMask, UnityEngine.AI.NavMeshCollectGeometry geometry, System.Int32 defaultArea, System.Collections.Generic.List`1<UnityEngine.AI.NavMeshBuildMarkup> markups, System.Collections.Generic.List`1<UnityEngine.AI.NavMeshBuildSource> results)
    // Offset: 0x544E444
    static void CollectSources(::UnityEngine::Transform* root, int includedLayerMask, ::UnityEngine::AI::NavMeshCollectGeometry geometry, int defaultArea, ::System::Collections::Generic::List_1<::UnityEngine::AI::NavMeshBuildMarkup>* markups, ::System::Collections::Generic::List_1<::UnityEngine::AI::NavMeshBuildSource>* results);
    // static private UnityEngine.AI.NavMeshBuildSource[] CollectSourcesInternal(System.Int32 includedLayerMask, UnityEngine.Bounds includedWorldBounds, UnityEngine.Transform root, System.Boolean useBounds, UnityEngine.AI.NavMeshCollectGeometry geometry, System.Int32 defaultArea, System.Boolean generateLinksByDefault, UnityEngine.AI.NavMeshBuildMarkup[] markups, System.Boolean includeOnlyMarkedObjects)
    // Offset: 0x544E1D4
    static ::ArrayW<::UnityEngine::AI::NavMeshBuildSource> CollectSourcesInternal(int includedLayerMask, ::UnityEngine::Bounds includedWorldBounds, ::UnityEngine::Transform* root, bool useBounds, ::UnityEngine::AI::NavMeshCollectGeometry geometry, int defaultArea, bool generateLinksByDefault, ::ArrayW<::UnityEngine::AI::NavMeshBuildMarkup> markups, bool includeOnlyMarkedObjects);
    // static public UnityEngine.AI.NavMeshData BuildNavMeshData(UnityEngine.AI.NavMeshBuildSettings buildSettings, System.Collections.Generic.List`1<UnityEngine.AI.NavMeshBuildSource> sources, UnityEngine.Bounds localBounds, UnityEngine.Vector3 position, UnityEngine.Quaternion rotation)
    // Offset: 0x544E50C
    static ::UnityEngine::AI::NavMeshData* BuildNavMeshData(::UnityEngine::AI::NavMeshBuildSettings buildSettings, ::System::Collections::Generic::List_1<::UnityEngine::AI::NavMeshBuildSource>* sources, ::UnityEngine::Bounds localBounds, ::UnityEngine::Vector3 position, ::UnityEngine::Quaternion rotation);
    // static private System.Boolean UpdateNavMeshDataListInternal(UnityEngine.AI.NavMeshData data, UnityEngine.AI.NavMeshBuildSettings buildSettings, System.Object sources, UnityEngine.Bounds localBounds)
    // Offset: 0x544E7D0
    static bool UpdateNavMeshDataListInternal(::UnityEngine::AI::NavMeshData* data, ::UnityEngine::AI::NavMeshBuildSettings buildSettings, ::Il2CppObject* sources, ::UnityEngine::Bounds localBounds);
    // static public UnityEngine.AsyncOperation UpdateNavMeshDataAsync(UnityEngine.AI.NavMeshData data, UnityEngine.AI.NavMeshBuildSettings buildSettings, System.Collections.Generic.List`1<UnityEngine.AI.NavMeshBuildSource> sources, UnityEngine.Bounds localBounds)
    // Offset: 0x544E888
    static ::UnityEngine::AsyncOperation* UpdateNavMeshDataAsync(::UnityEngine::AI::NavMeshData* data, ::UnityEngine::AI::NavMeshBuildSettings buildSettings, ::System::Collections::Generic::List_1<::UnityEngine::AI::NavMeshBuildSource>* sources, ::UnityEngine::Bounds localBounds);
    // static private UnityEngine.AsyncOperation UpdateNavMeshDataAsyncListInternal(UnityEngine.AI.NavMeshData data, UnityEngine.AI.NavMeshBuildSettings buildSettings, System.Object sources, UnityEngine.Bounds localBounds)
    // Offset: 0x544E9D0
    static ::UnityEngine::AsyncOperation* UpdateNavMeshDataAsyncListInternal(::UnityEngine::AI::NavMeshData* data, ::UnityEngine::AI::NavMeshBuildSettings buildSettings, ::Il2CppObject* sources, ::UnityEngine::Bounds localBounds);
    // static private UnityEngine.AI.NavMeshBuildSource[] CollectSourcesInternal_Injected(System.Int32 includedLayerMask, ref UnityEngine.Bounds includedWorldBounds, UnityEngine.Transform root, System.Boolean useBounds, UnityEngine.AI.NavMeshCollectGeometry geometry, System.Int32 defaultArea, System.Boolean generateLinksByDefault, UnityEngine.AI.NavMeshBuildMarkup[] markups, System.Boolean includeOnlyMarkedObjects)
    // Offset: 0x544E46C
    static ::ArrayW<::UnityEngine::AI::NavMeshBuildSource> CollectSourcesInternal_Injected(int includedLayerMask, ByRef<::UnityEngine::Bounds> includedWorldBounds, ::UnityEngine::Transform* root, bool useBounds, ::UnityEngine::AI::NavMeshCollectGeometry geometry, int defaultArea, bool generateLinksByDefault, ::ArrayW<::UnityEngine::AI::NavMeshBuildMarkup> markups, bool includeOnlyMarkedObjects);
    // static private System.Boolean UpdateNavMeshDataListInternal_Injected(UnityEngine.AI.NavMeshData data, ref UnityEngine.AI.NavMeshBuildSettings buildSettings, System.Object sources, ref UnityEngine.Bounds localBounds)
    // Offset: 0x544E82C
    static bool UpdateNavMeshDataListInternal_Injected(::UnityEngine::AI::NavMeshData* data, ByRef<::UnityEngine::AI::NavMeshBuildSettings> buildSettings, ::Il2CppObject* sources, ByRef<::UnityEngine::Bounds> localBounds);
    // static private UnityEngine.AsyncOperation UpdateNavMeshDataAsyncListInternal_Injected(UnityEngine.AI.NavMeshData data, ref UnityEngine.AI.NavMeshBuildSettings buildSettings, System.Object sources, ref UnityEngine.Bounds localBounds)
    // Offset: 0x544EA2C
    static ::UnityEngine::AsyncOperation* UpdateNavMeshDataAsyncListInternal_Injected(::UnityEngine::AI::NavMeshData* data, ByRef<::UnityEngine::AI::NavMeshBuildSettings> buildSettings, ::Il2CppObject* sources, ByRef<::UnityEngine::Bounds> localBounds);
  }; // UnityEngine.AI.NavMeshBuilder
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::AI::NavMeshBuilder::CollectSources
// Il2CppName: CollectSources
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::Bounds, int, ::UnityEngine::AI::NavMeshCollectGeometry, int, bool, ::System::Collections::Generic::List_1<::UnityEngine::AI::NavMeshBuildMarkup>*, bool, ::System::Collections::Generic::List_1<::UnityEngine::AI::NavMeshBuildSource>*)>(&UnityEngine::AI::NavMeshBuilder::CollectSources)> {
  static const MethodInfo* get() {
    static auto* includedWorldBounds = &::il2cpp_utils::GetClassFromName("UnityEngine", "Bounds")->byval_arg;
    static auto* includedLayerMask = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* geometry = &::il2cpp_utils::GetClassFromName("UnityEngine.AI", "NavMeshCollectGeometry")->byval_arg;
    static auto* defaultArea = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* generateLinksByDefault = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* markups = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.AI", "NavMeshBuildMarkup")})->byval_arg;
    static auto* includeOnlyMarkedObjects = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* results = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.AI", "NavMeshBuildSource")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::AI::NavMeshBuilder*), "CollectSources", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{includedWorldBounds, includedLayerMask, geometry, defaultArea, generateLinksByDefault, markups, includeOnlyMarkedObjects, results});
  }
};
// Writing MetadataGetter for method: UnityEngine::AI::NavMeshBuilder::CollectSources
// Il2CppName: CollectSources
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::Bounds, int, ::UnityEngine::AI::NavMeshCollectGeometry, int, ::System::Collections::Generic::List_1<::UnityEngine::AI::NavMeshBuildMarkup>*, ::System::Collections::Generic::List_1<::UnityEngine::AI::NavMeshBuildSource>*)>(&UnityEngine::AI::NavMeshBuilder::CollectSources)> {
  static const MethodInfo* get() {
    static auto* includedWorldBounds = &::il2cpp_utils::GetClassFromName("UnityEngine", "Bounds")->byval_arg;
    static auto* includedLayerMask = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* geometry = &::il2cpp_utils::GetClassFromName("UnityEngine.AI", "NavMeshCollectGeometry")->byval_arg;
    static auto* defaultArea = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* markups = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.AI", "NavMeshBuildMarkup")})->byval_arg;
    static auto* results = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.AI", "NavMeshBuildSource")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::AI::NavMeshBuilder*), "CollectSources", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{includedWorldBounds, includedLayerMask, geometry, defaultArea, markups, results});
  }
};
// Writing MetadataGetter for method: UnityEngine::AI::NavMeshBuilder::CollectSources
// Il2CppName: CollectSources
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::Transform*, int, ::UnityEngine::AI::NavMeshCollectGeometry, int, bool, ::System::Collections::Generic::List_1<::UnityEngine::AI::NavMeshBuildMarkup>*, bool, ::System::Collections::Generic::List_1<::UnityEngine::AI::NavMeshBuildSource>*)>(&UnityEngine::AI::NavMeshBuilder::CollectSources)> {
  static const MethodInfo* get() {
    static auto* root = &::il2cpp_utils::GetClassFromName("UnityEngine", "Transform")->byval_arg;
    static auto* includedLayerMask = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* geometry = &::il2cpp_utils::GetClassFromName("UnityEngine.AI", "NavMeshCollectGeometry")->byval_arg;
    static auto* defaultArea = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* generateLinksByDefault = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* markups = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.AI", "NavMeshBuildMarkup")})->byval_arg;
    static auto* includeOnlyMarkedObjects = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* results = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.AI", "NavMeshBuildSource")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::AI::NavMeshBuilder*), "CollectSources", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{root, includedLayerMask, geometry, defaultArea, generateLinksByDefault, markups, includeOnlyMarkedObjects, results});
  }
};
// Writing MetadataGetter for method: UnityEngine::AI::NavMeshBuilder::CollectSources
// Il2CppName: CollectSources
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::Transform*, int, ::UnityEngine::AI::NavMeshCollectGeometry, int, ::System::Collections::Generic::List_1<::UnityEngine::AI::NavMeshBuildMarkup>*, ::System::Collections::Generic::List_1<::UnityEngine::AI::NavMeshBuildSource>*)>(&UnityEngine::AI::NavMeshBuilder::CollectSources)> {
  static const MethodInfo* get() {
    static auto* root = &::il2cpp_utils::GetClassFromName("UnityEngine", "Transform")->byval_arg;
    static auto* includedLayerMask = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* geometry = &::il2cpp_utils::GetClassFromName("UnityEngine.AI", "NavMeshCollectGeometry")->byval_arg;
    static auto* defaultArea = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* markups = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.AI", "NavMeshBuildMarkup")})->byval_arg;
    static auto* results = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.AI", "NavMeshBuildSource")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::AI::NavMeshBuilder*), "CollectSources", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{root, includedLayerMask, geometry, defaultArea, markups, results});
  }
};
// Writing MetadataGetter for method: UnityEngine::AI::NavMeshBuilder::CollectSourcesInternal
// Il2CppName: CollectSourcesInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::UnityEngine::AI::NavMeshBuildSource> (*)(int, ::UnityEngine::Bounds, ::UnityEngine::Transform*, bool, ::UnityEngine::AI::NavMeshCollectGeometry, int, bool, ::ArrayW<::UnityEngine::AI::NavMeshBuildMarkup>, bool)>(&UnityEngine::AI::NavMeshBuilder::CollectSourcesInternal)> {
  static const MethodInfo* get() {
    static auto* includedLayerMask = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* includedWorldBounds = &::il2cpp_utils::GetClassFromName("UnityEngine", "Bounds")->byval_arg;
    static auto* root = &::il2cpp_utils::GetClassFromName("UnityEngine", "Transform")->byval_arg;
    static auto* useBounds = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* geometry = &::il2cpp_utils::GetClassFromName("UnityEngine.AI", "NavMeshCollectGeometry")->byval_arg;
    static auto* defaultArea = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* generateLinksByDefault = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* markups = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("UnityEngine.AI", "NavMeshBuildMarkup"), 1)->byval_arg;
    static auto* includeOnlyMarkedObjects = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::AI::NavMeshBuilder*), "CollectSourcesInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{includedLayerMask, includedWorldBounds, root, useBounds, geometry, defaultArea, generateLinksByDefault, markups, includeOnlyMarkedObjects});
  }
};
// Writing MetadataGetter for method: UnityEngine::AI::NavMeshBuilder::BuildNavMeshData
// Il2CppName: BuildNavMeshData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::AI::NavMeshData* (*)(::UnityEngine::AI::NavMeshBuildSettings, ::System::Collections::Generic::List_1<::UnityEngine::AI::NavMeshBuildSource>*, ::UnityEngine::Bounds, ::UnityEngine::Vector3, ::UnityEngine::Quaternion)>(&UnityEngine::AI::NavMeshBuilder::BuildNavMeshData)> {
  static const MethodInfo* get() {
    static auto* buildSettings = &::il2cpp_utils::GetClassFromName("UnityEngine.AI", "NavMeshBuildSettings")->byval_arg;
    static auto* sources = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.AI", "NavMeshBuildSource")})->byval_arg;
    static auto* localBounds = &::il2cpp_utils::GetClassFromName("UnityEngine", "Bounds")->byval_arg;
    static auto* position = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* rotation = &::il2cpp_utils::GetClassFromName("UnityEngine", "Quaternion")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::AI::NavMeshBuilder*), "BuildNavMeshData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{buildSettings, sources, localBounds, position, rotation});
  }
};
// Writing MetadataGetter for method: UnityEngine::AI::NavMeshBuilder::UpdateNavMeshDataListInternal
// Il2CppName: UpdateNavMeshDataListInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::UnityEngine::AI::NavMeshData*, ::UnityEngine::AI::NavMeshBuildSettings, ::Il2CppObject*, ::UnityEngine::Bounds)>(&UnityEngine::AI::NavMeshBuilder::UpdateNavMeshDataListInternal)> {
  static const MethodInfo* get() {
    static auto* data = &::il2cpp_utils::GetClassFromName("UnityEngine.AI", "NavMeshData")->byval_arg;
    static auto* buildSettings = &::il2cpp_utils::GetClassFromName("UnityEngine.AI", "NavMeshBuildSettings")->byval_arg;
    static auto* sources = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* localBounds = &::il2cpp_utils::GetClassFromName("UnityEngine", "Bounds")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::AI::NavMeshBuilder*), "UpdateNavMeshDataListInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{data, buildSettings, sources, localBounds});
  }
};
// Writing MetadataGetter for method: UnityEngine::AI::NavMeshBuilder::UpdateNavMeshDataAsync
// Il2CppName: UpdateNavMeshDataAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::AsyncOperation* (*)(::UnityEngine::AI::NavMeshData*, ::UnityEngine::AI::NavMeshBuildSettings, ::System::Collections::Generic::List_1<::UnityEngine::AI::NavMeshBuildSource>*, ::UnityEngine::Bounds)>(&UnityEngine::AI::NavMeshBuilder::UpdateNavMeshDataAsync)> {
  static const MethodInfo* get() {
    static auto* data = &::il2cpp_utils::GetClassFromName("UnityEngine.AI", "NavMeshData")->byval_arg;
    static auto* buildSettings = &::il2cpp_utils::GetClassFromName("UnityEngine.AI", "NavMeshBuildSettings")->byval_arg;
    static auto* sources = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.AI", "NavMeshBuildSource")})->byval_arg;
    static auto* localBounds = &::il2cpp_utils::GetClassFromName("UnityEngine", "Bounds")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::AI::NavMeshBuilder*), "UpdateNavMeshDataAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{data, buildSettings, sources, localBounds});
  }
};
// Writing MetadataGetter for method: UnityEngine::AI::NavMeshBuilder::UpdateNavMeshDataAsyncListInternal
// Il2CppName: UpdateNavMeshDataAsyncListInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::AsyncOperation* (*)(::UnityEngine::AI::NavMeshData*, ::UnityEngine::AI::NavMeshBuildSettings, ::Il2CppObject*, ::UnityEngine::Bounds)>(&UnityEngine::AI::NavMeshBuilder::UpdateNavMeshDataAsyncListInternal)> {
  static const MethodInfo* get() {
    static auto* data = &::il2cpp_utils::GetClassFromName("UnityEngine.AI", "NavMeshData")->byval_arg;
    static auto* buildSettings = &::il2cpp_utils::GetClassFromName("UnityEngine.AI", "NavMeshBuildSettings")->byval_arg;
    static auto* sources = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* localBounds = &::il2cpp_utils::GetClassFromName("UnityEngine", "Bounds")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::AI::NavMeshBuilder*), "UpdateNavMeshDataAsyncListInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{data, buildSettings, sources, localBounds});
  }
};
// Writing MetadataGetter for method: UnityEngine::AI::NavMeshBuilder::CollectSourcesInternal_Injected
// Il2CppName: CollectSourcesInternal_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::UnityEngine::AI::NavMeshBuildSource> (*)(int, ByRef<::UnityEngine::Bounds>, ::UnityEngine::Transform*, bool, ::UnityEngine::AI::NavMeshCollectGeometry, int, bool, ::ArrayW<::UnityEngine::AI::NavMeshBuildMarkup>, bool)>(&UnityEngine::AI::NavMeshBuilder::CollectSourcesInternal_Injected)> {
  static const MethodInfo* get() {
    static auto* includedLayerMask = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* includedWorldBounds = &::il2cpp_utils::GetClassFromName("UnityEngine", "Bounds")->this_arg;
    static auto* root = &::il2cpp_utils::GetClassFromName("UnityEngine", "Transform")->byval_arg;
    static auto* useBounds = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* geometry = &::il2cpp_utils::GetClassFromName("UnityEngine.AI", "NavMeshCollectGeometry")->byval_arg;
    static auto* defaultArea = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* generateLinksByDefault = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* markups = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("UnityEngine.AI", "NavMeshBuildMarkup"), 1)->byval_arg;
    static auto* includeOnlyMarkedObjects = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::AI::NavMeshBuilder*), "CollectSourcesInternal_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{includedLayerMask, includedWorldBounds, root, useBounds, geometry, defaultArea, generateLinksByDefault, markups, includeOnlyMarkedObjects});
  }
};
// Writing MetadataGetter for method: UnityEngine::AI::NavMeshBuilder::UpdateNavMeshDataListInternal_Injected
// Il2CppName: UpdateNavMeshDataListInternal_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::UnityEngine::AI::NavMeshData*, ByRef<::UnityEngine::AI::NavMeshBuildSettings>, ::Il2CppObject*, ByRef<::UnityEngine::Bounds>)>(&UnityEngine::AI::NavMeshBuilder::UpdateNavMeshDataListInternal_Injected)> {
  static const MethodInfo* get() {
    static auto* data = &::il2cpp_utils::GetClassFromName("UnityEngine.AI", "NavMeshData")->byval_arg;
    static auto* buildSettings = &::il2cpp_utils::GetClassFromName("UnityEngine.AI", "NavMeshBuildSettings")->this_arg;
    static auto* sources = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* localBounds = &::il2cpp_utils::GetClassFromName("UnityEngine", "Bounds")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::AI::NavMeshBuilder*), "UpdateNavMeshDataListInternal_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{data, buildSettings, sources, localBounds});
  }
};
// Writing MetadataGetter for method: UnityEngine::AI::NavMeshBuilder::UpdateNavMeshDataAsyncListInternal_Injected
// Il2CppName: UpdateNavMeshDataAsyncListInternal_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::AsyncOperation* (*)(::UnityEngine::AI::NavMeshData*, ByRef<::UnityEngine::AI::NavMeshBuildSettings>, ::Il2CppObject*, ByRef<::UnityEngine::Bounds>)>(&UnityEngine::AI::NavMeshBuilder::UpdateNavMeshDataAsyncListInternal_Injected)> {
  static const MethodInfo* get() {
    static auto* data = &::il2cpp_utils::GetClassFromName("UnityEngine.AI", "NavMeshData")->byval_arg;
    static auto* buildSettings = &::il2cpp_utils::GetClassFromName("UnityEngine.AI", "NavMeshBuildSettings")->this_arg;
    static auto* sources = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* localBounds = &::il2cpp_utils::GetClassFromName("UnityEngine", "Bounds")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::AI::NavMeshBuilder*), "UpdateNavMeshDataAsyncListInternal_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{data, buildSettings, sources, localBounds});
  }
};
