// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.IDisposable
#include "System/IDisposable.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
// Including type: UnityEngine.BoundingSphere
#include "UnityEngine/BoundingSphere.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Camera
  class Camera;
  // Forward declaring type: CullingQueryOptions
  struct CullingQueryOptions;
  // Skipping declaration: Vector3 because it is already included!
}
// Completed forward declares
// Type namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: CullingGroup
  class CullingGroup;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::CullingGroup);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::CullingGroup*, "UnityEngine", "CullingGroup");
// Type namespace: UnityEngine
namespace UnityEngine {
  // Size: 0x20
  #pragma pack(push, 1)
  // WARNING Layout: Sequential may not be correctly taken into account!
  // Autogenerated type: UnityEngine.CullingGroup
  // [TokenAttribute] Offset: FFFFFFFF
  // [NativeHeaderAttribute] Offset: FFFFFFFF
  class CullingGroup : public ::Il2CppObject/*, public ::System::IDisposable*/ {
    public:
    // Nested type: ::UnityEngine::CullingGroup::StateChanged
    class StateChanged;
    public:
    // System.IntPtr m_Ptr
    // Size: 0x8
    // Offset: 0x10
    ::System::IntPtr m_Ptr;
    // Field size check
    static_assert(sizeof(::System::IntPtr) == 0x8);
    // private UnityEngine.CullingGroup/StateChanged m_OnStateChanged
    // Size: 0x8
    // Offset: 0x18
    ::UnityEngine::CullingGroup::StateChanged* m_OnStateChanged;
    // Field size check
    static_assert(sizeof(::UnityEngine::CullingGroup::StateChanged*) == 0x8);
    public:
    // Creating interface conversion operator: operator ::System::IDisposable
    operator ::System::IDisposable() noexcept {
      return *reinterpret_cast<::System::IDisposable*>(this);
    }
    // Get instance field reference: System.IntPtr m_Ptr
    [[deprecated("Use field access instead!")]] ::System::IntPtr& dyn_m_Ptr();
    // Get instance field reference: private UnityEngine.CullingGroup/StateChanged m_OnStateChanged
    [[deprecated("Use field access instead!")]] ::UnityEngine::CullingGroup::StateChanged*& dyn_m_OnStateChanged();
    // public System.Void .ctor()
    // Offset: 0x54802F8
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static CullingGroup* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CullingGroup::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<CullingGroup*, creationType>()));
    }
    // private System.Void DisposeInternal()
    // Offset: 0x548049C
    void DisposeInternal();
    // public System.Void Dispose()
    // Offset: 0x54804D8
    void Dispose();
    // public System.Void set_targetCamera(UnityEngine.Camera value)
    // Offset: 0x548051C
    void set_targetCamera(::UnityEngine::Camera* value);
    // public System.Void SetBoundingSpheres(UnityEngine.BoundingSphere[] array)
    // Offset: 0x5480560
    void SetBoundingSpheres(::ArrayW<::UnityEngine::BoundingSphere> array);
    // public System.Void SetBoundingSphereCount(System.Int32 count)
    // Offset: 0x54805A4
    void SetBoundingSphereCount(int count);
    // public System.Int32 QueryIndices(System.Boolean visible, System.Int32[] result, System.Int32 firstIndex)
    // Offset: 0x54805E8
    int QueryIndices(bool visible, ::ArrayW<int> result, int firstIndex);
    // private System.Int32 QueryIndices(System.Boolean visible, System.Int32 distanceIndex, UnityEngine.CullingQueryOptions options, System.Int32[] result, System.Int32 firstIndex)
    // Offset: 0x548064C
    int QueryIndices(bool visible, int distanceIndex, ::UnityEngine::CullingQueryOptions options, ::ArrayW<int> result, int firstIndex);
    // public System.Void SetBoundingDistances(System.Single[] distances)
    // Offset: 0x54806C0
    void SetBoundingDistances(::ArrayW<float> distances);
    // private System.Void SetDistanceReferencePoint_InternalVector3(UnityEngine.Vector3 point)
    // Offset: 0x5480704
    void SetDistanceReferencePoint_InternalVector3(::UnityEngine::Vector3 point);
    // public System.Void SetDistanceReferencePoint(UnityEngine.Vector3 point)
    // Offset: 0x548079C
    void SetDistanceReferencePoint(::UnityEngine::Vector3 point);
    // static private System.Void SendEvents(UnityEngine.CullingGroup cullingGroup, System.IntPtr eventsPtr, System.Int32 count)
    // Offset: 0x54807A0
    static void SendEvents(::UnityEngine::CullingGroup* cullingGroup, ::System::IntPtr eventsPtr, int count);
    // static private System.IntPtr Init(System.Object scripting)
    // Offset: 0x5480354
    static ::System::IntPtr Init(::Il2CppObject* scripting);
    // private System.Void FinalizerFailure()
    // Offset: 0x5480460
    void FinalizerFailure();
    // private System.Void SetDistanceReferencePoint_InternalVector3_Injected(ref UnityEngine.Vector3 point)
    // Offset: 0x5480758
    void SetDistanceReferencePoint_InternalVector3_Injected(ByRef<::UnityEngine::Vector3> point);
    // protected override System.Void Finalize()
    // Offset: 0x5480390
    // Implemented from: System.Object
    // Base method: System.Void Object::Finalize()
    void Finalize();
  }; // UnityEngine.CullingGroup
  #pragma pack(pop)
  static check_size<sizeof(CullingGroup), 24 + sizeof(::UnityEngine::CullingGroup::StateChanged*)> __UnityEngine_CullingGroupSizeCheck;
  static_assert(sizeof(CullingGroup) == 0x20);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::CullingGroup::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::CullingGroup::DisposeInternal
// Il2CppName: DisposeInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::CullingGroup::*)()>(&UnityEngine::CullingGroup::DisposeInternal)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::CullingGroup*), "DisposeInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::CullingGroup::Dispose
// Il2CppName: Dispose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::CullingGroup::*)()>(&UnityEngine::CullingGroup::Dispose)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::CullingGroup*), "Dispose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::CullingGroup::set_targetCamera
// Il2CppName: set_targetCamera
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::CullingGroup::*)(::UnityEngine::Camera*)>(&UnityEngine::CullingGroup::set_targetCamera)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Camera")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::CullingGroup*), "set_targetCamera", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::CullingGroup::SetBoundingSpheres
// Il2CppName: SetBoundingSpheres
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::CullingGroup::*)(::ArrayW<::UnityEngine::BoundingSphere>)>(&UnityEngine::CullingGroup::SetBoundingSpheres)> {
  static const MethodInfo* get() {
    static auto* array = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("UnityEngine", "BoundingSphere"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::CullingGroup*), "SetBoundingSpheres", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{array});
  }
};
// Writing MetadataGetter for method: UnityEngine::CullingGroup::SetBoundingSphereCount
// Il2CppName: SetBoundingSphereCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::CullingGroup::*)(int)>(&UnityEngine::CullingGroup::SetBoundingSphereCount)> {
  static const MethodInfo* get() {
    static auto* count = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::CullingGroup*), "SetBoundingSphereCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{count});
  }
};
// Writing MetadataGetter for method: UnityEngine::CullingGroup::QueryIndices
// Il2CppName: QueryIndices
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::CullingGroup::*)(bool, ::ArrayW<int>, int)>(&UnityEngine::CullingGroup::QueryIndices)> {
  static const MethodInfo* get() {
    static auto* visible = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* result = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Int32"), 1)->byval_arg;
    static auto* firstIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::CullingGroup*), "QueryIndices", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{visible, result, firstIndex});
  }
};
// Writing MetadataGetter for method: UnityEngine::CullingGroup::QueryIndices
// Il2CppName: QueryIndices
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::CullingGroup::*)(bool, int, ::UnityEngine::CullingQueryOptions, ::ArrayW<int>, int)>(&UnityEngine::CullingGroup::QueryIndices)> {
  static const MethodInfo* get() {
    static auto* visible = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* distanceIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* options = &::il2cpp_utils::GetClassFromName("UnityEngine", "CullingQueryOptions")->byval_arg;
    static auto* result = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Int32"), 1)->byval_arg;
    static auto* firstIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::CullingGroup*), "QueryIndices", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{visible, distanceIndex, options, result, firstIndex});
  }
};
// Writing MetadataGetter for method: UnityEngine::CullingGroup::SetBoundingDistances
// Il2CppName: SetBoundingDistances
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::CullingGroup::*)(::ArrayW<float>)>(&UnityEngine::CullingGroup::SetBoundingDistances)> {
  static const MethodInfo* get() {
    static auto* distances = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Single"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::CullingGroup*), "SetBoundingDistances", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{distances});
  }
};
// Writing MetadataGetter for method: UnityEngine::CullingGroup::SetDistanceReferencePoint_InternalVector3
// Il2CppName: SetDistanceReferencePoint_InternalVector3
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::CullingGroup::*)(::UnityEngine::Vector3)>(&UnityEngine::CullingGroup::SetDistanceReferencePoint_InternalVector3)> {
  static const MethodInfo* get() {
    static auto* point = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::CullingGroup*), "SetDistanceReferencePoint_InternalVector3", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{point});
  }
};
// Writing MetadataGetter for method: UnityEngine::CullingGroup::SetDistanceReferencePoint
// Il2CppName: SetDistanceReferencePoint
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::CullingGroup::*)(::UnityEngine::Vector3)>(&UnityEngine::CullingGroup::SetDistanceReferencePoint)> {
  static const MethodInfo* get() {
    static auto* point = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::CullingGroup*), "SetDistanceReferencePoint", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{point});
  }
};
// Writing MetadataGetter for method: UnityEngine::CullingGroup::SendEvents
// Il2CppName: SendEvents
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::CullingGroup*, ::System::IntPtr, int)>(&UnityEngine::CullingGroup::SendEvents)> {
  static const MethodInfo* get() {
    static auto* cullingGroup = &::il2cpp_utils::GetClassFromName("UnityEngine", "CullingGroup")->byval_arg;
    static auto* eventsPtr = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* count = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::CullingGroup*), "SendEvents", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{cullingGroup, eventsPtr, count});
  }
};
// Writing MetadataGetter for method: UnityEngine::CullingGroup::Init
// Il2CppName: Init
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::Il2CppObject*)>(&UnityEngine::CullingGroup::Init)> {
  static const MethodInfo* get() {
    static auto* scripting = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::CullingGroup*), "Init", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{scripting});
  }
};
// Writing MetadataGetter for method: UnityEngine::CullingGroup::FinalizerFailure
// Il2CppName: FinalizerFailure
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::CullingGroup::*)()>(&UnityEngine::CullingGroup::FinalizerFailure)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::CullingGroup*), "FinalizerFailure", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::CullingGroup::SetDistanceReferencePoint_InternalVector3_Injected
// Il2CppName: SetDistanceReferencePoint_InternalVector3_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::CullingGroup::*)(ByRef<::UnityEngine::Vector3>)>(&UnityEngine::CullingGroup::SetDistanceReferencePoint_InternalVector3_Injected)> {
  static const MethodInfo* get() {
    static auto* point = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::CullingGroup*), "SetDistanceReferencePoint_InternalVector3_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{point});
  }
};
// Writing MetadataGetter for method: UnityEngine::CullingGroup::Finalize
// Il2CppName: Finalize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::CullingGroup::*)()>(&UnityEngine::CullingGroup::Finalize)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::CullingGroup*), "Finalize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
