// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Type namespace: UnityEngine.Experimental.Rendering.RenderGraphModule
namespace UnityEngine::Experimental::Rendering::RenderGraphModule {
  // Forward declaring type: RenderGraphDebugParams
  class RenderGraphDebugParams;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphDebugParams);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphDebugParams*, "UnityEngine.Experimental.Rendering.RenderGraphModule", "RenderGraphDebugParams");
// Type namespace: UnityEngine.Experimental.Rendering.RenderGraphModule
namespace UnityEngine::Experimental::Rendering::RenderGraphModule {
  // Size: 0x17
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.Experimental.Rendering.RenderGraphModule.RenderGraphDebugParams
  // [TokenAttribute] Offset: FFFFFFFF
  class RenderGraphDebugParams : public ::Il2CppObject {
    public:
    public:
    // public System.Boolean clearRenderTargetsAtCreation
    // Size: 0x1
    // Offset: 0x10
    bool clearRenderTargetsAtCreation;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // public System.Boolean clearRenderTargetsAtRelease
    // Size: 0x1
    // Offset: 0x11
    bool clearRenderTargetsAtRelease;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // public System.Boolean disablePassCulling
    // Size: 0x1
    // Offset: 0x12
    bool disablePassCulling;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // public System.Boolean immediateMode
    // Size: 0x1
    // Offset: 0x13
    bool immediateMode;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // public System.Boolean enableLogging
    // Size: 0x1
    // Offset: 0x14
    bool enableLogging;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // public System.Boolean logFrameInformation
    // Size: 0x1
    // Offset: 0x15
    bool logFrameInformation;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // public System.Boolean logResources
    // Size: 0x1
    // Offset: 0x16
    bool logResources;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    public:
    // Get instance field reference: public System.Boolean clearRenderTargetsAtCreation
    [[deprecated("Use field access instead!")]] bool& dyn_clearRenderTargetsAtCreation();
    // Get instance field reference: public System.Boolean clearRenderTargetsAtRelease
    [[deprecated("Use field access instead!")]] bool& dyn_clearRenderTargetsAtRelease();
    // Get instance field reference: public System.Boolean disablePassCulling
    [[deprecated("Use field access instead!")]] bool& dyn_disablePassCulling();
    // Get instance field reference: public System.Boolean immediateMode
    [[deprecated("Use field access instead!")]] bool& dyn_immediateMode();
    // Get instance field reference: public System.Boolean enableLogging
    [[deprecated("Use field access instead!")]] bool& dyn_enableLogging();
    // Get instance field reference: public System.Boolean logFrameInformation
    [[deprecated("Use field access instead!")]] bool& dyn_logFrameInformation();
    // Get instance field reference: public System.Boolean logResources
    [[deprecated("Use field access instead!")]] bool& dyn_logResources();
    // public System.Void .ctor()
    // Offset: 0x5230560
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static RenderGraphDebugParams* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphDebugParams::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<RenderGraphDebugParams*, creationType>()));
    }
  }; // UnityEngine.Experimental.Rendering.RenderGraphModule.RenderGraphDebugParams
  #pragma pack(pop)
  static check_size<sizeof(RenderGraphDebugParams), 22 + sizeof(bool)> __UnityEngine_Experimental_Rendering_RenderGraphModule_RenderGraphDebugParamsSizeCheck;
  static_assert(sizeof(RenderGraphDebugParams) == 0x17);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphDebugParams::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
