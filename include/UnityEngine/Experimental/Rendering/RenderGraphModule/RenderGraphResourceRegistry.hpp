// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.Experimental.Rendering.RenderGraphModule.RendererListResource
#include "UnityEngine/Experimental/Rendering/RenderGraphModule/RendererListResource.hpp"
// Including type: UnityEngine.Experimental.Rendering.RenderGraphModule.RendererListHandle
#include "UnityEngine/Experimental/Rendering/RenderGraphModule/RendererListHandle.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::Experimental::Rendering::RenderGraphModule
namespace UnityEngine::Experimental::Rendering::RenderGraphModule {
  // Forward declaring type: RenderGraphDebugParams
  class RenderGraphDebugParams;
  // Forward declaring type: RenderGraphLogger
  class RenderGraphLogger;
  // Forward declaring type: TextureHandle
  struct TextureHandle;
  // Forward declaring type: ResourceHandle
  struct ResourceHandle;
  // Forward declaring type: RenderGraphResourceType
  struct RenderGraphResourceType;
  // Forward declaring type: TextureDesc
  struct TextureDesc;
  // Forward declaring type: TextureResource
  class TextureResource;
  // Forward declaring type: RenderGraphContext
  class RenderGraphContext;
  // Forward declaring type: IRenderGraphResource
  class IRenderGraphResource;
}
// Forward declaring namespace: UnityEngine::Rendering
namespace UnityEngine::Rendering {
  // Forward declaring type: DynamicArray`1<T>
  template<typename T>
  class DynamicArray_1;
  // Forward declaring type: RTHandle
  class RTHandle;
  // Forward declaring type: ScriptableRenderContext
  struct ScriptableRenderContext;
  // Forward declaring type: RenderTargetIdentifier
  struct RenderTargetIdentifier;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Completed forward declares
// Type namespace: UnityEngine.Experimental.Rendering.RenderGraphModule
namespace UnityEngine::Experimental::Rendering::RenderGraphModule {
  // Forward declaring type: RenderGraphResourceRegistry
  class RenderGraphResourceRegistry;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphResourceRegistry);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphResourceRegistry*, "UnityEngine.Experimental.Rendering.RenderGraphModule", "RenderGraphResourceRegistry");
// Type namespace: UnityEngine.Experimental.Rendering.RenderGraphModule
namespace UnityEngine::Experimental::Rendering::RenderGraphModule {
  // Size: 0x50
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.Experimental.Rendering.RenderGraphModule.RenderGraphResourceRegistry
  // [TokenAttribute] Offset: FFFFFFFF
  class RenderGraphResourceRegistry : public ::Il2CppObject {
    public:
    // Nested type: ::UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphResourceRegistry::ResourceCallback
    class ResourceCallback;
    // Nested type: ::UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphResourceRegistry::RenderGraphResourcesData
    class RenderGraphResourcesData;
    public:
    // private UnityEngine.Experimental.Rendering.RenderGraphModule.RenderGraphResourceRegistry/RenderGraphResourcesData[] m_RenderGraphResources
    // Size: 0x8
    // Offset: 0x10
    ::ArrayW<::UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphResourceRegistry::RenderGraphResourcesData*> m_RenderGraphResources;
    // Field size check
    static_assert(sizeof(::ArrayW<::UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphResourceRegistry::RenderGraphResourcesData*>) == 0x8);
    // private UnityEngine.Rendering.DynamicArray`1<UnityEngine.Experimental.Rendering.RenderGraphModule.RendererListResource> m_RendererListResources
    // Size: 0x8
    // Offset: 0x18
    ::UnityEngine::Rendering::DynamicArray_1<::UnityEngine::Experimental::Rendering::RenderGraphModule::RendererListResource>* m_RendererListResources;
    // Field size check
    static_assert(sizeof(::UnityEngine::Rendering::DynamicArray_1<::UnityEngine::Experimental::Rendering::RenderGraphModule::RendererListResource>*) == 0x8);
    // private UnityEngine.Experimental.Rendering.RenderGraphModule.RenderGraphDebugParams m_RenderGraphDebug
    // Size: 0x8
    // Offset: 0x20
    ::UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphDebugParams* m_RenderGraphDebug;
    // Field size check
    static_assert(sizeof(::UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphDebugParams*) == 0x8);
    // private UnityEngine.Experimental.Rendering.RenderGraphModule.RenderGraphLogger m_ResourceLogger
    // Size: 0x8
    // Offset: 0x28
    ::UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphLogger* m_ResourceLogger;
    // Field size check
    static_assert(sizeof(::UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphLogger*) == 0x8);
    // private UnityEngine.Experimental.Rendering.RenderGraphModule.RenderGraphLogger m_FrameInformationLogger
    // Size: 0x8
    // Offset: 0x30
    ::UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphLogger* m_FrameInformationLogger;
    // Field size check
    static_assert(sizeof(::UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphLogger*) == 0x8);
    // private System.Int32 m_CurrentFrameIndex
    // Size: 0x4
    // Offset: 0x38
    int m_CurrentFrameIndex;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private System.Int32 m_ExecutionCount
    // Size: 0x4
    // Offset: 0x3C
    int m_ExecutionCount;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private UnityEngine.Rendering.RTHandle m_CurrentBackbuffer
    // Size: 0x8
    // Offset: 0x40
    ::UnityEngine::Rendering::RTHandle* m_CurrentBackbuffer;
    // Field size check
    static_assert(sizeof(::UnityEngine::Rendering::RTHandle*) == 0x8);
    // private System.Collections.Generic.List`1<UnityEngine.Rendering.RendererList> m_ActiveRendererLists
    // Size: 0x8
    // Offset: 0x48
    ::System::Collections::Generic::List_1<::UnityEngine::Rendering::RendererList>* m_ActiveRendererLists;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::UnityEngine::Rendering::RendererList>*) == 0x8);
    public:
    // Get static field: static private UnityEngine.Experimental.Rendering.RenderGraphModule.RenderGraphResourceRegistry m_CurrentRegistry
    static ::UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphResourceRegistry* _get_m_CurrentRegistry();
    // Set static field: static private UnityEngine.Experimental.Rendering.RenderGraphModule.RenderGraphResourceRegistry m_CurrentRegistry
    static void _set_m_CurrentRegistry(::UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphResourceRegistry* value);
    // Get instance field reference: private UnityEngine.Experimental.Rendering.RenderGraphModule.RenderGraphResourceRegistry/RenderGraphResourcesData[] m_RenderGraphResources
    [[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphResourceRegistry::RenderGraphResourcesData*>& dyn_m_RenderGraphResources();
    // Get instance field reference: private UnityEngine.Rendering.DynamicArray`1<UnityEngine.Experimental.Rendering.RenderGraphModule.RendererListResource> m_RendererListResources
    [[deprecated("Use field access instead!")]] ::UnityEngine::Rendering::DynamicArray_1<::UnityEngine::Experimental::Rendering::RenderGraphModule::RendererListResource>*& dyn_m_RendererListResources();
    // Get instance field reference: private UnityEngine.Experimental.Rendering.RenderGraphModule.RenderGraphDebugParams m_RenderGraphDebug
    [[deprecated("Use field access instead!")]] ::UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphDebugParams*& dyn_m_RenderGraphDebug();
    // Get instance field reference: private UnityEngine.Experimental.Rendering.RenderGraphModule.RenderGraphLogger m_ResourceLogger
    [[deprecated("Use field access instead!")]] ::UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphLogger*& dyn_m_ResourceLogger();
    // Get instance field reference: private UnityEngine.Experimental.Rendering.RenderGraphModule.RenderGraphLogger m_FrameInformationLogger
    [[deprecated("Use field access instead!")]] ::UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphLogger*& dyn_m_FrameInformationLogger();
    // Get instance field reference: private System.Int32 m_CurrentFrameIndex
    [[deprecated("Use field access instead!")]] int& dyn_m_CurrentFrameIndex();
    // Get instance field reference: private System.Int32 m_ExecutionCount
    [[deprecated("Use field access instead!")]] int& dyn_m_ExecutionCount();
    // Get instance field reference: private UnityEngine.Rendering.RTHandle m_CurrentBackbuffer
    [[deprecated("Use field access instead!")]] ::UnityEngine::Rendering::RTHandle*& dyn_m_CurrentBackbuffer();
    // Get instance field reference: private System.Collections.Generic.List`1<UnityEngine.Rendering.RendererList> m_ActiveRendererLists
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::Rendering::RendererList>*& dyn_m_ActiveRendererLists();
    // static UnityEngine.Experimental.Rendering.RenderGraphModule.RenderGraphResourceRegistry get_current()
    // Offset: 0x523B720
    static ::UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphResourceRegistry* get_current();
    // static System.Void set_current(UnityEngine.Experimental.Rendering.RenderGraphModule.RenderGraphResourceRegistry value)
    // Offset: 0x523B768
    static void set_current(::UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphResourceRegistry* value);
    // UnityEngine.Rendering.RTHandle GetTexture(in UnityEngine.Experimental.Rendering.RenderGraphModule.TextureHandle handle)
    // Offset: 0x5235668
    ::UnityEngine::Rendering::RTHandle* GetTexture(ByRef<::UnityEngine::Experimental::Rendering::RenderGraphModule::TextureHandle> handle);
    // System.Boolean TextureNeedsFallback(in UnityEngine.Experimental.Rendering.RenderGraphModule.TextureHandle handle)
    // Offset: 0x523A300
    bool TextureNeedsFallback(ByRef<::UnityEngine::Experimental::Rendering::RenderGraphModule::TextureHandle> handle);
    // UnityEngine.Rendering.RendererList GetRendererList(in UnityEngine.Experimental.Rendering.RenderGraphModule.RendererListHandle handle)
    // Offset: 0x5236304
    ::UnityEngine::Rendering::RendererList GetRendererList(ByRef<::UnityEngine::Experimental::Rendering::RenderGraphModule::RendererListHandle> handle);
    // System.Void .ctor(UnityEngine.Experimental.Rendering.RenderGraphModule.RenderGraphDebugParams renderGraphDebug, UnityEngine.Experimental.Rendering.RenderGraphModule.RenderGraphLogger frameInformationLogger)
    // Offset: 0x52310B8
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static RenderGraphResourceRegistry* New_ctor(::UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphDebugParams* renderGraphDebug, ::UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphLogger* frameInformationLogger) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphResourceRegistry::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<RenderGraphResourceRegistry*, creationType>(renderGraphDebug, frameInformationLogger)));
    }
    // System.Void BeginRenderGraph(System.Int32 executionCount)
    // Offset: 0x5232040
    void BeginRenderGraph(int executionCount);
    // System.Void BeginExecute(System.Int32 currentFrameIndex)
    // Offset: 0x52325A0
    void BeginExecute(int currentFrameIndex);
    // System.Void EndExecute()
    // Offset: 0x523BBC0
    void EndExecute();
    // private System.Void CheckHandleValidity(in UnityEngine.Experimental.Rendering.RenderGraphModule.ResourceHandle res)
    // Offset: 0x523BC0C
    void CheckHandleValidity(ByRef<::UnityEngine::Experimental::Rendering::RenderGraphModule::ResourceHandle> res);
    // private System.Void CheckHandleValidity(UnityEngine.Experimental.Rendering.RenderGraphModule.RenderGraphResourceType type, System.Int32 index)
    // Offset: 0x523BC24
    void CheckHandleValidity(::UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphResourceType type, int index);
    // System.Void IncrementWriteCount(in UnityEngine.Experimental.Rendering.RenderGraphModule.ResourceHandle res)
    // Offset: 0x523A118
    void IncrementWriteCount(ByRef<::UnityEngine::Experimental::Rendering::RenderGraphModule::ResourceHandle> res);
    // System.String GetRenderGraphResourceName(UnityEngine.Experimental.Rendering.RenderGraphModule.RenderGraphResourceType type, System.Int32 index)
    // Offset: 0x5239C8C
    ::StringW GetRenderGraphResourceName(::UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphResourceType type, int index);
    // System.Boolean IsRenderGraphResourceImported(in UnityEngine.Experimental.Rendering.RenderGraphModule.ResourceHandle res)
    // Offset: 0x523396C
    bool IsRenderGraphResourceImported(ByRef<::UnityEngine::Experimental::Rendering::RenderGraphModule::ResourceHandle> res);
    // System.Boolean IsRenderGraphResourceShared(UnityEngine.Experimental.Rendering.RenderGraphModule.RenderGraphResourceType type, System.Int32 index)
    // Offset: 0x5236028
    bool IsRenderGraphResourceShared(::UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphResourceType type, int index);
    // System.Boolean IsGraphicsResourceCreated(in UnityEngine.Experimental.Rendering.RenderGraphModule.ResourceHandle res)
    // Offset: 0x5237004
    bool IsGraphicsResourceCreated(ByRef<::UnityEngine::Experimental::Rendering::RenderGraphModule::ResourceHandle> res);
    // System.Boolean IsRendererListCreated(in UnityEngine.Experimental.Rendering.RenderGraphModule.RendererListHandle res)
    // Offset: 0x52370B0
    bool IsRendererListCreated(ByRef<::UnityEngine::Experimental::Rendering::RenderGraphModule::RendererListHandle> res);
    // System.Boolean IsRenderGraphResourceImported(UnityEngine.Experimental.Rendering.RenderGraphModule.RenderGraphResourceType type, System.Int32 index)
    // Offset: 0x5239D38
    bool IsRenderGraphResourceImported(::UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphResourceType type, int index);
    // UnityEngine.Experimental.Rendering.RenderGraphModule.TextureHandle ImportTexture(UnityEngine.Rendering.RTHandle rt)
    // Offset: 0x5231A14
    ::UnityEngine::Experimental::Rendering::RenderGraphModule::TextureHandle ImportTexture(::UnityEngine::Rendering::RTHandle* rt);
    // UnityEngine.Experimental.Rendering.RenderGraphModule.TextureHandle ImportBackbuffer(UnityEngine.Rendering.RenderTargetIdentifier rt)
    // Offset: 0x5231B24
    ::UnityEngine::Experimental::Rendering::RenderGraphModule::TextureHandle ImportBackbuffer(::UnityEngine::Rendering::RenderTargetIdentifier rt);
    // UnityEngine.Experimental.Rendering.RenderGraphModule.TextureHandle CreateTexture(in UnityEngine.Experimental.Rendering.RenderGraphModule.TextureDesc desc, System.Int32 transientPassIndex)
    // Offset: 0x5231CAC
    ::UnityEngine::Experimental::Rendering::RenderGraphModule::TextureHandle CreateTexture(ByRef<::UnityEngine::Experimental::Rendering::RenderGraphModule::TextureDesc> desc, int transientPassIndex);
    // System.Int32 GetResourceCount(UnityEngine.Experimental.Rendering.RenderGraphModule.RenderGraphResourceType type)
    // Offset: 0x523BD70
    int GetResourceCount(::UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphResourceType type);
    // System.Int32 GetTextureResourceCount()
    // Offset: 0x5232F94
    int GetTextureResourceCount();
    // UnityEngine.Experimental.Rendering.RenderGraphModule.TextureResource GetTextureResource(in UnityEngine.Experimental.Rendering.RenderGraphModule.ResourceHandle handle)
    // Offset: 0x5235574
    ::UnityEngine::Experimental::Rendering::RenderGraphModule::TextureResource* GetTextureResource(ByRef<::UnityEngine::Experimental::Rendering::RenderGraphModule::ResourceHandle> handle);
    // System.Int32 GetComputeBufferResourceCount()
    // Offset: 0x5232F9C
    int GetComputeBufferResourceCount();
    // System.Void UpdateSharedResourceLastFrameIndex(System.Int32 type, System.Int32 index)
    // Offset: 0x5236080
    void UpdateSharedResourceLastFrameIndex(int type, int index);
    // private System.Void ManageSharedRenderGraphResources()
    // Offset: 0x523BA64
    void ManageSharedRenderGraphResources();
    // System.Void CreatePooledResource(UnityEngine.Experimental.Rendering.RenderGraphModule.RenderGraphContext rgContext, System.Int32 type, System.Int32 index)
    // Offset: 0x5238070
    void CreatePooledResource(::UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphContext* rgContext, int type, int index);
    // private System.Void CreateTextureCallback(UnityEngine.Experimental.Rendering.RenderGraphModule.RenderGraphContext rgContext, UnityEngine.Experimental.Rendering.RenderGraphModule.IRenderGraphResource res)
    // Offset: 0x523BDE0
    void CreateTextureCallback(::UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphContext* rgContext, ::UnityEngine::Experimental::Rendering::RenderGraphModule::IRenderGraphResource* res);
    // System.Void ReleasePooledResource(UnityEngine.Experimental.Rendering.RenderGraphModule.RenderGraphContext rgContext, System.Int32 type, System.Int32 index)
    // Offset: 0x5238658
    void ReleasePooledResource(::UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphContext* rgContext, int type, int index);
    // private System.Void ReleaseTextureCallback(UnityEngine.Experimental.Rendering.RenderGraphModule.RenderGraphContext rgContext, UnityEngine.Experimental.Rendering.RenderGraphModule.IRenderGraphResource res)
    // Offset: 0x523C024
    void ReleaseTextureCallback(::UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphContext* rgContext, ::UnityEngine::Experimental::Rendering::RenderGraphModule::IRenderGraphResource* res);
    // private System.Void ValidateTextureDesc(in UnityEngine.Experimental.Rendering.RenderGraphModule.TextureDesc desc)
    // Offset: 0x523BD6C
    void ValidateTextureDesc(ByRef<::UnityEngine::Experimental::Rendering::RenderGraphModule::TextureDesc> desc);
    // System.Void CreateRendererLists(System.Collections.Generic.List`1<UnityEngine.Experimental.Rendering.RenderGraphModule.RendererListHandle> rendererLists, UnityEngine.Rendering.ScriptableRenderContext context, System.Boolean manualDispatch)
    // Offset: 0x5234D54
    void CreateRendererLists(::System::Collections::Generic::List_1<::UnityEngine::Experimental::Rendering::RenderGraphModule::RendererListHandle>* rendererLists, ::UnityEngine::Rendering::ScriptableRenderContext context, bool manualDispatch);
    // System.Void Clear(System.Boolean onException)
    // Offset: 0x5232AF0
    void Clear(bool onException);
    // System.Void PurgeUnusedGraphicsResources()
    // Offset: 0x5231774
    void PurgeUnusedGraphicsResources();
    // System.Void Cleanup()
    // Offset: 0x52314F0
    void Cleanup();
    // System.Void FlushLogs()
    // Offset: 0x523198C
    void FlushLogs();
    // private System.Void LogResources()
    // Offset: 0x523C1E8
    void LogResources();
  }; // UnityEngine.Experimental.Rendering.RenderGraphModule.RenderGraphResourceRegistry
  #pragma pack(pop)
  static check_size<sizeof(RenderGraphResourceRegistry), 72 + sizeof(::System::Collections::Generic::List_1<::UnityEngine::Rendering::RendererList>*)> __UnityEngine_Experimental_Rendering_RenderGraphModule_RenderGraphResourceRegistrySizeCheck;
  static_assert(sizeof(RenderGraphResourceRegistry) == 0x50);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphResourceRegistry::get_current
// Il2CppName: get_current
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphResourceRegistry* (*)()>(&UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphResourceRegistry::get_current)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphResourceRegistry*), "get_current", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphResourceRegistry::set_current
// Il2CppName: set_current
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphResourceRegistry*)>(&UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphResourceRegistry::set_current)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.Experimental.Rendering.RenderGraphModule", "RenderGraphResourceRegistry")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphResourceRegistry*), "set_current", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphResourceRegistry::GetTexture
// Il2CppName: GetTexture
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Rendering::RTHandle* (UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphResourceRegistry::*)(ByRef<::UnityEngine::Experimental::Rendering::RenderGraphModule::TextureHandle>)>(&UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphResourceRegistry::GetTexture)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("UnityEngine.Experimental.Rendering.RenderGraphModule", "TextureHandle")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphResourceRegistry*), "GetTexture", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle});
  }
};
// Writing MetadataGetter for method: UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphResourceRegistry::TextureNeedsFallback
// Il2CppName: TextureNeedsFallback
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphResourceRegistry::*)(ByRef<::UnityEngine::Experimental::Rendering::RenderGraphModule::TextureHandle>)>(&UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphResourceRegistry::TextureNeedsFallback)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("UnityEngine.Experimental.Rendering.RenderGraphModule", "TextureHandle")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphResourceRegistry*), "TextureNeedsFallback", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle});
  }
};
// Writing MetadataGetter for method: UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphResourceRegistry::GetRendererList
// Il2CppName: GetRendererList
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Rendering::RendererList (UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphResourceRegistry::*)(ByRef<::UnityEngine::Experimental::Rendering::RenderGraphModule::RendererListHandle>)>(&UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphResourceRegistry::GetRendererList)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("UnityEngine.Experimental.Rendering.RenderGraphModule", "RendererListHandle")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphResourceRegistry*), "GetRendererList", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle});
  }
};
// Writing MetadataGetter for method: UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphResourceRegistry::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphResourceRegistry::BeginRenderGraph
// Il2CppName: BeginRenderGraph
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphResourceRegistry::*)(int)>(&UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphResourceRegistry::BeginRenderGraph)> {
  static const MethodInfo* get() {
    static auto* executionCount = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphResourceRegistry*), "BeginRenderGraph", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{executionCount});
  }
};
// Writing MetadataGetter for method: UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphResourceRegistry::BeginExecute
// Il2CppName: BeginExecute
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphResourceRegistry::*)(int)>(&UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphResourceRegistry::BeginExecute)> {
  static const MethodInfo* get() {
    static auto* currentFrameIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphResourceRegistry*), "BeginExecute", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{currentFrameIndex});
  }
};
// Writing MetadataGetter for method: UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphResourceRegistry::EndExecute
// Il2CppName: EndExecute
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphResourceRegistry::*)()>(&UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphResourceRegistry::EndExecute)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphResourceRegistry*), "EndExecute", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphResourceRegistry::CheckHandleValidity
// Il2CppName: CheckHandleValidity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphResourceRegistry::*)(ByRef<::UnityEngine::Experimental::Rendering::RenderGraphModule::ResourceHandle>)>(&UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphResourceRegistry::CheckHandleValidity)> {
  static const MethodInfo* get() {
    static auto* res = &::il2cpp_utils::GetClassFromName("UnityEngine.Experimental.Rendering.RenderGraphModule", "ResourceHandle")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphResourceRegistry*), "CheckHandleValidity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{res});
  }
};
// Writing MetadataGetter for method: UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphResourceRegistry::CheckHandleValidity
// Il2CppName: CheckHandleValidity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphResourceRegistry::*)(::UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphResourceType, int)>(&UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphResourceRegistry::CheckHandleValidity)> {
  static const MethodInfo* get() {
    static auto* type = &::il2cpp_utils::GetClassFromName("UnityEngine.Experimental.Rendering.RenderGraphModule", "RenderGraphResourceType")->byval_arg;
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphResourceRegistry*), "CheckHandleValidity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{type, index});
  }
};
// Writing MetadataGetter for method: UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphResourceRegistry::IncrementWriteCount
// Il2CppName: IncrementWriteCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphResourceRegistry::*)(ByRef<::UnityEngine::Experimental::Rendering::RenderGraphModule::ResourceHandle>)>(&UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphResourceRegistry::IncrementWriteCount)> {
  static const MethodInfo* get() {
    static auto* res = &::il2cpp_utils::GetClassFromName("UnityEngine.Experimental.Rendering.RenderGraphModule", "ResourceHandle")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphResourceRegistry*), "IncrementWriteCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{res});
  }
};
// Writing MetadataGetter for method: UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphResourceRegistry::GetRenderGraphResourceName
// Il2CppName: GetRenderGraphResourceName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphResourceRegistry::*)(::UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphResourceType, int)>(&UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphResourceRegistry::GetRenderGraphResourceName)> {
  static const MethodInfo* get() {
    static auto* type = &::il2cpp_utils::GetClassFromName("UnityEngine.Experimental.Rendering.RenderGraphModule", "RenderGraphResourceType")->byval_arg;
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphResourceRegistry*), "GetRenderGraphResourceName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{type, index});
  }
};
// Writing MetadataGetter for method: UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphResourceRegistry::IsRenderGraphResourceImported
// Il2CppName: IsRenderGraphResourceImported
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphResourceRegistry::*)(ByRef<::UnityEngine::Experimental::Rendering::RenderGraphModule::ResourceHandle>)>(&UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphResourceRegistry::IsRenderGraphResourceImported)> {
  static const MethodInfo* get() {
    static auto* res = &::il2cpp_utils::GetClassFromName("UnityEngine.Experimental.Rendering.RenderGraphModule", "ResourceHandle")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphResourceRegistry*), "IsRenderGraphResourceImported", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{res});
  }
};
// Writing MetadataGetter for method: UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphResourceRegistry::IsRenderGraphResourceShared
// Il2CppName: IsRenderGraphResourceShared
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphResourceRegistry::*)(::UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphResourceType, int)>(&UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphResourceRegistry::IsRenderGraphResourceShared)> {
  static const MethodInfo* get() {
    static auto* type = &::il2cpp_utils::GetClassFromName("UnityEngine.Experimental.Rendering.RenderGraphModule", "RenderGraphResourceType")->byval_arg;
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphResourceRegistry*), "IsRenderGraphResourceShared", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{type, index});
  }
};
// Writing MetadataGetter for method: UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphResourceRegistry::IsGraphicsResourceCreated
// Il2CppName: IsGraphicsResourceCreated
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphResourceRegistry::*)(ByRef<::UnityEngine::Experimental::Rendering::RenderGraphModule::ResourceHandle>)>(&UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphResourceRegistry::IsGraphicsResourceCreated)> {
  static const MethodInfo* get() {
    static auto* res = &::il2cpp_utils::GetClassFromName("UnityEngine.Experimental.Rendering.RenderGraphModule", "ResourceHandle")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphResourceRegistry*), "IsGraphicsResourceCreated", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{res});
  }
};
// Writing MetadataGetter for method: UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphResourceRegistry::IsRendererListCreated
// Il2CppName: IsRendererListCreated
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphResourceRegistry::*)(ByRef<::UnityEngine::Experimental::Rendering::RenderGraphModule::RendererListHandle>)>(&UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphResourceRegistry::IsRendererListCreated)> {
  static const MethodInfo* get() {
    static auto* res = &::il2cpp_utils::GetClassFromName("UnityEngine.Experimental.Rendering.RenderGraphModule", "RendererListHandle")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphResourceRegistry*), "IsRendererListCreated", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{res});
  }
};
// Writing MetadataGetter for method: UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphResourceRegistry::IsRenderGraphResourceImported
// Il2CppName: IsRenderGraphResourceImported
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphResourceRegistry::*)(::UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphResourceType, int)>(&UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphResourceRegistry::IsRenderGraphResourceImported)> {
  static const MethodInfo* get() {
    static auto* type = &::il2cpp_utils::GetClassFromName("UnityEngine.Experimental.Rendering.RenderGraphModule", "RenderGraphResourceType")->byval_arg;
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphResourceRegistry*), "IsRenderGraphResourceImported", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{type, index});
  }
};
// Writing MetadataGetter for method: UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphResourceRegistry::ImportTexture
// Il2CppName: ImportTexture
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Experimental::Rendering::RenderGraphModule::TextureHandle (UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphResourceRegistry::*)(::UnityEngine::Rendering::RTHandle*)>(&UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphResourceRegistry::ImportTexture)> {
  static const MethodInfo* get() {
    static auto* rt = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "RTHandle")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphResourceRegistry*), "ImportTexture", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{rt});
  }
};
// Writing MetadataGetter for method: UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphResourceRegistry::ImportBackbuffer
// Il2CppName: ImportBackbuffer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Experimental::Rendering::RenderGraphModule::TextureHandle (UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphResourceRegistry::*)(::UnityEngine::Rendering::RenderTargetIdentifier)>(&UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphResourceRegistry::ImportBackbuffer)> {
  static const MethodInfo* get() {
    static auto* rt = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "RenderTargetIdentifier")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphResourceRegistry*), "ImportBackbuffer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{rt});
  }
};
// Writing MetadataGetter for method: UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphResourceRegistry::CreateTexture
// Il2CppName: CreateTexture
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Experimental::Rendering::RenderGraphModule::TextureHandle (UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphResourceRegistry::*)(ByRef<::UnityEngine::Experimental::Rendering::RenderGraphModule::TextureDesc>, int)>(&UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphResourceRegistry::CreateTexture)> {
  static const MethodInfo* get() {
    static auto* desc = &::il2cpp_utils::GetClassFromName("UnityEngine.Experimental.Rendering.RenderGraphModule", "TextureDesc")->this_arg;
    static auto* transientPassIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphResourceRegistry*), "CreateTexture", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{desc, transientPassIndex});
  }
};
// Writing MetadataGetter for method: UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphResourceRegistry::GetResourceCount
// Il2CppName: GetResourceCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphResourceRegistry::*)(::UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphResourceType)>(&UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphResourceRegistry::GetResourceCount)> {
  static const MethodInfo* get() {
    static auto* type = &::il2cpp_utils::GetClassFromName("UnityEngine.Experimental.Rendering.RenderGraphModule", "RenderGraphResourceType")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphResourceRegistry*), "GetResourceCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{type});
  }
};
// Writing MetadataGetter for method: UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphResourceRegistry::GetTextureResourceCount
// Il2CppName: GetTextureResourceCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphResourceRegistry::*)()>(&UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphResourceRegistry::GetTextureResourceCount)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphResourceRegistry*), "GetTextureResourceCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphResourceRegistry::GetTextureResource
// Il2CppName: GetTextureResource
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Experimental::Rendering::RenderGraphModule::TextureResource* (UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphResourceRegistry::*)(ByRef<::UnityEngine::Experimental::Rendering::RenderGraphModule::ResourceHandle>)>(&UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphResourceRegistry::GetTextureResource)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("UnityEngine.Experimental.Rendering.RenderGraphModule", "ResourceHandle")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphResourceRegistry*), "GetTextureResource", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle});
  }
};
// Writing MetadataGetter for method: UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphResourceRegistry::GetComputeBufferResourceCount
// Il2CppName: GetComputeBufferResourceCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphResourceRegistry::*)()>(&UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphResourceRegistry::GetComputeBufferResourceCount)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphResourceRegistry*), "GetComputeBufferResourceCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphResourceRegistry::UpdateSharedResourceLastFrameIndex
// Il2CppName: UpdateSharedResourceLastFrameIndex
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphResourceRegistry::*)(int, int)>(&UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphResourceRegistry::UpdateSharedResourceLastFrameIndex)> {
  static const MethodInfo* get() {
    static auto* type = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphResourceRegistry*), "UpdateSharedResourceLastFrameIndex", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{type, index});
  }
};
// Writing MetadataGetter for method: UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphResourceRegistry::ManageSharedRenderGraphResources
// Il2CppName: ManageSharedRenderGraphResources
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphResourceRegistry::*)()>(&UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphResourceRegistry::ManageSharedRenderGraphResources)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphResourceRegistry*), "ManageSharedRenderGraphResources", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphResourceRegistry::CreatePooledResource
// Il2CppName: CreatePooledResource
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphResourceRegistry::*)(::UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphContext*, int, int)>(&UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphResourceRegistry::CreatePooledResource)> {
  static const MethodInfo* get() {
    static auto* rgContext = &::il2cpp_utils::GetClassFromName("UnityEngine.Experimental.Rendering.RenderGraphModule", "RenderGraphContext")->byval_arg;
    static auto* type = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphResourceRegistry*), "CreatePooledResource", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{rgContext, type, index});
  }
};
// Writing MetadataGetter for method: UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphResourceRegistry::CreateTextureCallback
// Il2CppName: CreateTextureCallback
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphResourceRegistry::*)(::UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphContext*, ::UnityEngine::Experimental::Rendering::RenderGraphModule::IRenderGraphResource*)>(&UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphResourceRegistry::CreateTextureCallback)> {
  static const MethodInfo* get() {
    static auto* rgContext = &::il2cpp_utils::GetClassFromName("UnityEngine.Experimental.Rendering.RenderGraphModule", "RenderGraphContext")->byval_arg;
    static auto* res = &::il2cpp_utils::GetClassFromName("UnityEngine.Experimental.Rendering.RenderGraphModule", "IRenderGraphResource")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphResourceRegistry*), "CreateTextureCallback", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{rgContext, res});
  }
};
// Writing MetadataGetter for method: UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphResourceRegistry::ReleasePooledResource
// Il2CppName: ReleasePooledResource
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphResourceRegistry::*)(::UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphContext*, int, int)>(&UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphResourceRegistry::ReleasePooledResource)> {
  static const MethodInfo* get() {
    static auto* rgContext = &::il2cpp_utils::GetClassFromName("UnityEngine.Experimental.Rendering.RenderGraphModule", "RenderGraphContext")->byval_arg;
    static auto* type = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphResourceRegistry*), "ReleasePooledResource", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{rgContext, type, index});
  }
};
// Writing MetadataGetter for method: UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphResourceRegistry::ReleaseTextureCallback
// Il2CppName: ReleaseTextureCallback
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphResourceRegistry::*)(::UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphContext*, ::UnityEngine::Experimental::Rendering::RenderGraphModule::IRenderGraphResource*)>(&UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphResourceRegistry::ReleaseTextureCallback)> {
  static const MethodInfo* get() {
    static auto* rgContext = &::il2cpp_utils::GetClassFromName("UnityEngine.Experimental.Rendering.RenderGraphModule", "RenderGraphContext")->byval_arg;
    static auto* res = &::il2cpp_utils::GetClassFromName("UnityEngine.Experimental.Rendering.RenderGraphModule", "IRenderGraphResource")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphResourceRegistry*), "ReleaseTextureCallback", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{rgContext, res});
  }
};
// Writing MetadataGetter for method: UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphResourceRegistry::ValidateTextureDesc
// Il2CppName: ValidateTextureDesc
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphResourceRegistry::*)(ByRef<::UnityEngine::Experimental::Rendering::RenderGraphModule::TextureDesc>)>(&UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphResourceRegistry::ValidateTextureDesc)> {
  static const MethodInfo* get() {
    static auto* desc = &::il2cpp_utils::GetClassFromName("UnityEngine.Experimental.Rendering.RenderGraphModule", "TextureDesc")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphResourceRegistry*), "ValidateTextureDesc", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{desc});
  }
};
// Writing MetadataGetter for method: UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphResourceRegistry::CreateRendererLists
// Il2CppName: CreateRendererLists
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphResourceRegistry::*)(::System::Collections::Generic::List_1<::UnityEngine::Experimental::Rendering::RenderGraphModule::RendererListHandle>*, ::UnityEngine::Rendering::ScriptableRenderContext, bool)>(&UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphResourceRegistry::CreateRendererLists)> {
  static const MethodInfo* get() {
    static auto* rendererLists = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.Experimental.Rendering.RenderGraphModule", "RendererListHandle")})->byval_arg;
    static auto* context = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "ScriptableRenderContext")->byval_arg;
    static auto* manualDispatch = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphResourceRegistry*), "CreateRendererLists", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{rendererLists, context, manualDispatch});
  }
};
// Writing MetadataGetter for method: UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphResourceRegistry::Clear
// Il2CppName: Clear
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphResourceRegistry::*)(bool)>(&UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphResourceRegistry::Clear)> {
  static const MethodInfo* get() {
    static auto* onException = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphResourceRegistry*), "Clear", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{onException});
  }
};
// Writing MetadataGetter for method: UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphResourceRegistry::PurgeUnusedGraphicsResources
// Il2CppName: PurgeUnusedGraphicsResources
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphResourceRegistry::*)()>(&UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphResourceRegistry::PurgeUnusedGraphicsResources)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphResourceRegistry*), "PurgeUnusedGraphicsResources", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphResourceRegistry::Cleanup
// Il2CppName: Cleanup
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphResourceRegistry::*)()>(&UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphResourceRegistry::Cleanup)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphResourceRegistry*), "Cleanup", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphResourceRegistry::FlushLogs
// Il2CppName: FlushLogs
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphResourceRegistry::*)()>(&UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphResourceRegistry::FlushLogs)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphResourceRegistry*), "FlushLogs", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphResourceRegistry::LogResources
// Il2CppName: LogResources
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphResourceRegistry::*)()>(&UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphResourceRegistry::LogResources)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphResourceRegistry*), "LogResources", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
