// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.Experimental.Rendering.RenderGraphModule.IRenderGraphResource
#include "UnityEngine/Experimental/Rendering/RenderGraphModule/IRenderGraphResource.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: ValueType
  class ValueType;
}
// Forward declaring namespace: UnityEngine::Experimental::Rendering::RenderGraphModule
namespace UnityEngine::Experimental::Rendering::RenderGraphModule {
  // Forward declaring type: IRenderGraphResourcePool
  class IRenderGraphResourcePool;
}
// Completed forward declares
// Type namespace: UnityEngine.Experimental.Rendering.RenderGraphModule
namespace UnityEngine::Experimental::Rendering::RenderGraphModule {
  // Forward declaring type: RenderGraphResource`2<DescType, ResType>
  template<typename DescType, typename ResType>
  class RenderGraphResource_2;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE_GENERIC_CLASS(::UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphResource_2, "UnityEngine.Experimental.Rendering.RenderGraphModule", "RenderGraphResource`2");
// Type namespace: UnityEngine.Experimental.Rendering.RenderGraphModule
namespace UnityEngine::Experimental::Rendering::RenderGraphModule {
  // WARNING Size may be invalid!
  // Autogenerated type: UnityEngine.Experimental.Rendering.RenderGraphModule.RenderGraphResource`2
  // [TokenAttribute] Offset: FFFFFFFF
  // [DebuggerDisplayAttribute] Offset: FFFFFFFF
  template<typename DescType, typename ResType>
  class RenderGraphResource_2 : public ::UnityEngine::Experimental::Rendering::RenderGraphModule::IRenderGraphResource {
    public:
    public:
    // public DescType desc
    // Size: 0xFFFFFFFF
    // Offset: 0x0
    DescType desc;
    // public ResType graphicsResource
    // Size: 0xFFFFFFFF
    // Offset: 0x0
    ResType graphicsResource;
    public:
    // Autogenerated instance field getter
    // Get instance field: public DescType desc
    [[deprecated("Use field access instead!")]] DescType& dyn_desc() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphResource_2::dyn_desc");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "desc"))->offset;
      return *reinterpret_cast<DescType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: public ResType graphicsResource
    [[deprecated("Use field access instead!")]] ResType& dyn_graphicsResource() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphResource_2::dyn_graphicsResource");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "graphicsResource"))->offset;
      return *reinterpret_cast<ResType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // protected System.Void .ctor()
    // Offset: 0xFFFFFFFFFFFFFFFF
    // Implemented from: UnityEngine.Experimental.Rendering.RenderGraphModule.IRenderGraphResource
    // Base method: System.Void IRenderGraphResource::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static RenderGraphResource_2<DescType, ResType>* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphResource_2::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<RenderGraphResource_2<DescType, ResType>*, creationType>()));
    }
    // public override System.Void Reset(UnityEngine.Experimental.Rendering.RenderGraphModule.IRenderGraphResourcePool pool)
    // Offset: 0xFFFFFFFFFFFFFFFF
    // Implemented from: UnityEngine.Experimental.Rendering.RenderGraphModule.IRenderGraphResource
    // Base method: System.Void IRenderGraphResource::Reset(UnityEngine.Experimental.Rendering.RenderGraphModule.IRenderGraphResourcePool pool)
    void Reset(::UnityEngine::Experimental::Rendering::RenderGraphModule::IRenderGraphResourcePool* pool) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphResource_2::Reset");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Experimental::Rendering::RenderGraphModule::IRenderGraphResource*), -1));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pool);
    }
    // public override System.Boolean IsCreated()
    // Offset: 0xFFFFFFFFFFFFFFFF
    // Implemented from: UnityEngine.Experimental.Rendering.RenderGraphModule.IRenderGraphResource
    // Base method: System.Boolean IRenderGraphResource::IsCreated()
    bool IsCreated() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphResource_2::IsCreated");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Experimental::Rendering::RenderGraphModule::IRenderGraphResource*), -1));
      return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
    }
    // public override System.Void ReleaseGraphicsResource()
    // Offset: 0xFFFFFFFFFFFFFFFF
    // Implemented from: UnityEngine.Experimental.Rendering.RenderGraphModule.IRenderGraphResource
    // Base method: System.Void IRenderGraphResource::ReleaseGraphicsResource()
    void ReleaseGraphicsResource() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphResource_2::ReleaseGraphicsResource");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Experimental::Rendering::RenderGraphModule::IRenderGraphResource*), -1));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
    }
  }; // UnityEngine.Experimental.Rendering.RenderGraphModule.RenderGraphResource`2
  // Could not write size check! Type: UnityEngine.Experimental.Rendering.RenderGraphModule.RenderGraphResource`2 is generic, or has no fields that are valid for size checks!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
