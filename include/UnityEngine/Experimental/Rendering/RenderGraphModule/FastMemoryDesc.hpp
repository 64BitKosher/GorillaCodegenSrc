// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Including type: UnityEngine.Rendering.FastMemoryFlags
#include "UnityEngine/Rendering/FastMemoryFlags.hpp"
// Completed includes
// Type namespace: UnityEngine.Experimental.Rendering.RenderGraphModule
namespace UnityEngine::Experimental::Rendering::RenderGraphModule {
  // Forward declaring type: FastMemoryDesc
  struct FastMemoryDesc;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::Experimental::Rendering::RenderGraphModule::FastMemoryDesc, "UnityEngine.Experimental.Rendering.RenderGraphModule", "FastMemoryDesc");
// Type namespace: UnityEngine.Experimental.Rendering.RenderGraphModule
namespace UnityEngine::Experimental::Rendering::RenderGraphModule {
  // Size: 0xC
  #pragma pack(push, 1)
  // WARNING Layout: Sequential may not be correctly taken into account!
  // Autogenerated type: UnityEngine.Experimental.Rendering.RenderGraphModule.FastMemoryDesc
  // [TokenAttribute] Offset: FFFFFFFF
  struct FastMemoryDesc/*, public ::System::ValueType*/ {
    public:
    public:
    // public System.Boolean inFastMemory
    // Size: 0x1
    // Offset: 0x0
    bool inFastMemory;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: inFastMemory and: flags
    char __padding0[0x3] = {};
    // public UnityEngine.Rendering.FastMemoryFlags flags
    // Size: 0x4
    // Offset: 0x4
    ::UnityEngine::Rendering::FastMemoryFlags flags;
    // Field size check
    static_assert(sizeof(::UnityEngine::Rendering::FastMemoryFlags) == 0x4);
    // public System.Single residencyFraction
    // Size: 0x4
    // Offset: 0x8
    float residencyFraction;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    public:
    // Creating value type constructor for type: FastMemoryDesc
    constexpr FastMemoryDesc(bool inFastMemory_ = {}, ::UnityEngine::Rendering::FastMemoryFlags flags_ = {}, float residencyFraction_ = {}) noexcept : inFastMemory{inFastMemory_}, flags{flags_}, residencyFraction{residencyFraction_} {}
    // Creating interface conversion operator: operator ::System::ValueType
    operator ::System::ValueType() noexcept {
      return *reinterpret_cast<::System::ValueType*>(this);
    }
    // Get instance field reference: public System.Boolean inFastMemory
    [[deprecated("Use field access instead!")]] bool& dyn_inFastMemory();
    // Get instance field reference: public UnityEngine.Rendering.FastMemoryFlags flags
    [[deprecated("Use field access instead!")]] ::UnityEngine::Rendering::FastMemoryFlags& dyn_flags();
    // Get instance field reference: public System.Single residencyFraction
    [[deprecated("Use field access instead!")]] float& dyn_residencyFraction();
  }; // UnityEngine.Experimental.Rendering.RenderGraphModule.FastMemoryDesc
  #pragma pack(pop)
  static check_size<sizeof(FastMemoryDesc), 8 + sizeof(float)> __UnityEngine_Experimental_Rendering_RenderGraphModule_FastMemoryDescSizeCheck;
  static_assert(sizeof(FastMemoryDesc) == 0xC);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
