// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.Experimental.Rendering.RenderGraphModule.TextureHandle
#include "UnityEngine/Experimental/Rendering/RenderGraphModule/TextureHandle.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::Rendering
namespace UnityEngine::Rendering {
  // Forward declaring type: RTHandle
  class RTHandle;
}
// Forward declaring namespace: UnityEngine::Experimental::Rendering::RenderGraphModule
namespace UnityEngine::Experimental::Rendering::RenderGraphModule {
  // Forward declaring type: RenderGraph
  class RenderGraph;
}
// Completed forward declares
// Type namespace: UnityEngine.Experimental.Rendering.RenderGraphModule
namespace UnityEngine::Experimental::Rendering::RenderGraphModule {
  // Forward declaring type: RenderGraphDefaultResources
  class RenderGraphDefaultResources;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphDefaultResources);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphDefaultResources*, "UnityEngine.Experimental.Rendering.RenderGraphModule", "RenderGraphDefaultResources");
// Type namespace: UnityEngine.Experimental.Rendering.RenderGraphModule
namespace UnityEngine::Experimental::Rendering::RenderGraphModule {
  // Size: 0x78
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.Experimental.Rendering.RenderGraphModule.RenderGraphDefaultResources
  // [TokenAttribute] Offset: FFFFFFFF
  class RenderGraphDefaultResources : public ::Il2CppObject {
    public:
    public:
    // private UnityEngine.Rendering.RTHandle m_BlackTexture2D
    // Size: 0x8
    // Offset: 0x10
    ::UnityEngine::Rendering::RTHandle* m_BlackTexture2D;
    // Field size check
    static_assert(sizeof(::UnityEngine::Rendering::RTHandle*) == 0x8);
    // private UnityEngine.Rendering.RTHandle m_WhiteTexture2D
    // Size: 0x8
    // Offset: 0x18
    ::UnityEngine::Rendering::RTHandle* m_WhiteTexture2D;
    // Field size check
    static_assert(sizeof(::UnityEngine::Rendering::RTHandle*) == 0x8);
    // private UnityEngine.Rendering.RTHandle m_ShadowTexture2D
    // Size: 0x8
    // Offset: 0x20
    ::UnityEngine::Rendering::RTHandle* m_ShadowTexture2D;
    // Field size check
    static_assert(sizeof(::UnityEngine::Rendering::RTHandle*) == 0x8);
    // private UnityEngine.Experimental.Rendering.RenderGraphModule.TextureHandle <blackTexture>k__BackingField
    // Size: 0x8
    // Offset: 0x28
    ::UnityEngine::Experimental::Rendering::RenderGraphModule::TextureHandle blackTexture;
    // Field size check
    static_assert(sizeof(::UnityEngine::Experimental::Rendering::RenderGraphModule::TextureHandle) == 0x8);
    // private UnityEngine.Experimental.Rendering.RenderGraphModule.TextureHandle <whiteTexture>k__BackingField
    // Size: 0x8
    // Offset: 0x30
    ::UnityEngine::Experimental::Rendering::RenderGraphModule::TextureHandle whiteTexture;
    // Field size check
    static_assert(sizeof(::UnityEngine::Experimental::Rendering::RenderGraphModule::TextureHandle) == 0x8);
    // private UnityEngine.Experimental.Rendering.RenderGraphModule.TextureHandle <clearTextureXR>k__BackingField
    // Size: 0x8
    // Offset: 0x38
    ::UnityEngine::Experimental::Rendering::RenderGraphModule::TextureHandle clearTextureXR;
    // Field size check
    static_assert(sizeof(::UnityEngine::Experimental::Rendering::RenderGraphModule::TextureHandle) == 0x8);
    // private UnityEngine.Experimental.Rendering.RenderGraphModule.TextureHandle <magentaTextureXR>k__BackingField
    // Size: 0x8
    // Offset: 0x40
    ::UnityEngine::Experimental::Rendering::RenderGraphModule::TextureHandle magentaTextureXR;
    // Field size check
    static_assert(sizeof(::UnityEngine::Experimental::Rendering::RenderGraphModule::TextureHandle) == 0x8);
    // private UnityEngine.Experimental.Rendering.RenderGraphModule.TextureHandle <blackTextureXR>k__BackingField
    // Size: 0x8
    // Offset: 0x48
    ::UnityEngine::Experimental::Rendering::RenderGraphModule::TextureHandle blackTextureXR;
    // Field size check
    static_assert(sizeof(::UnityEngine::Experimental::Rendering::RenderGraphModule::TextureHandle) == 0x8);
    // private UnityEngine.Experimental.Rendering.RenderGraphModule.TextureHandle <blackTextureArrayXR>k__BackingField
    // Size: 0x8
    // Offset: 0x50
    ::UnityEngine::Experimental::Rendering::RenderGraphModule::TextureHandle blackTextureArrayXR;
    // Field size check
    static_assert(sizeof(::UnityEngine::Experimental::Rendering::RenderGraphModule::TextureHandle) == 0x8);
    // private UnityEngine.Experimental.Rendering.RenderGraphModule.TextureHandle <blackUIntTextureXR>k__BackingField
    // Size: 0x8
    // Offset: 0x58
    ::UnityEngine::Experimental::Rendering::RenderGraphModule::TextureHandle blackUIntTextureXR;
    // Field size check
    static_assert(sizeof(::UnityEngine::Experimental::Rendering::RenderGraphModule::TextureHandle) == 0x8);
    // private UnityEngine.Experimental.Rendering.RenderGraphModule.TextureHandle <blackTexture3DXR>k__BackingField
    // Size: 0x8
    // Offset: 0x60
    ::UnityEngine::Experimental::Rendering::RenderGraphModule::TextureHandle blackTexture3DXR;
    // Field size check
    static_assert(sizeof(::UnityEngine::Experimental::Rendering::RenderGraphModule::TextureHandle) == 0x8);
    // private UnityEngine.Experimental.Rendering.RenderGraphModule.TextureHandle <whiteTextureXR>k__BackingField
    // Size: 0x8
    // Offset: 0x68
    ::UnityEngine::Experimental::Rendering::RenderGraphModule::TextureHandle whiteTextureXR;
    // Field size check
    static_assert(sizeof(::UnityEngine::Experimental::Rendering::RenderGraphModule::TextureHandle) == 0x8);
    // private UnityEngine.Experimental.Rendering.RenderGraphModule.TextureHandle <defaultShadowTexture>k__BackingField
    // Size: 0x8
    // Offset: 0x70
    ::UnityEngine::Experimental::Rendering::RenderGraphModule::TextureHandle defaultShadowTexture;
    // Field size check
    static_assert(sizeof(::UnityEngine::Experimental::Rendering::RenderGraphModule::TextureHandle) == 0x8);
    public:
    // Get instance field reference: private UnityEngine.Rendering.RTHandle m_BlackTexture2D
    [[deprecated("Use field access instead!")]] ::UnityEngine::Rendering::RTHandle*& dyn_m_BlackTexture2D();
    // Get instance field reference: private UnityEngine.Rendering.RTHandle m_WhiteTexture2D
    [[deprecated("Use field access instead!")]] ::UnityEngine::Rendering::RTHandle*& dyn_m_WhiteTexture2D();
    // Get instance field reference: private UnityEngine.Rendering.RTHandle m_ShadowTexture2D
    [[deprecated("Use field access instead!")]] ::UnityEngine::Rendering::RTHandle*& dyn_m_ShadowTexture2D();
    // Get instance field reference: private UnityEngine.Experimental.Rendering.RenderGraphModule.TextureHandle <blackTexture>k__BackingField
    [[deprecated("Use field access instead!")]] ::UnityEngine::Experimental::Rendering::RenderGraphModule::TextureHandle& dyn_$blackTexture$k__BackingField();
    // Get instance field reference: private UnityEngine.Experimental.Rendering.RenderGraphModule.TextureHandle <whiteTexture>k__BackingField
    [[deprecated("Use field access instead!")]] ::UnityEngine::Experimental::Rendering::RenderGraphModule::TextureHandle& dyn_$whiteTexture$k__BackingField();
    // Get instance field reference: private UnityEngine.Experimental.Rendering.RenderGraphModule.TextureHandle <clearTextureXR>k__BackingField
    [[deprecated("Use field access instead!")]] ::UnityEngine::Experimental::Rendering::RenderGraphModule::TextureHandle& dyn_$clearTextureXR$k__BackingField();
    // Get instance field reference: private UnityEngine.Experimental.Rendering.RenderGraphModule.TextureHandle <magentaTextureXR>k__BackingField
    [[deprecated("Use field access instead!")]] ::UnityEngine::Experimental::Rendering::RenderGraphModule::TextureHandle& dyn_$magentaTextureXR$k__BackingField();
    // Get instance field reference: private UnityEngine.Experimental.Rendering.RenderGraphModule.TextureHandle <blackTextureXR>k__BackingField
    [[deprecated("Use field access instead!")]] ::UnityEngine::Experimental::Rendering::RenderGraphModule::TextureHandle& dyn_$blackTextureXR$k__BackingField();
    // Get instance field reference: private UnityEngine.Experimental.Rendering.RenderGraphModule.TextureHandle <blackTextureArrayXR>k__BackingField
    [[deprecated("Use field access instead!")]] ::UnityEngine::Experimental::Rendering::RenderGraphModule::TextureHandle& dyn_$blackTextureArrayXR$k__BackingField();
    // Get instance field reference: private UnityEngine.Experimental.Rendering.RenderGraphModule.TextureHandle <blackUIntTextureXR>k__BackingField
    [[deprecated("Use field access instead!")]] ::UnityEngine::Experimental::Rendering::RenderGraphModule::TextureHandle& dyn_$blackUIntTextureXR$k__BackingField();
    // Get instance field reference: private UnityEngine.Experimental.Rendering.RenderGraphModule.TextureHandle <blackTexture3DXR>k__BackingField
    [[deprecated("Use field access instead!")]] ::UnityEngine::Experimental::Rendering::RenderGraphModule::TextureHandle& dyn_$blackTexture3DXR$k__BackingField();
    // Get instance field reference: private UnityEngine.Experimental.Rendering.RenderGraphModule.TextureHandle <whiteTextureXR>k__BackingField
    [[deprecated("Use field access instead!")]] ::UnityEngine::Experimental::Rendering::RenderGraphModule::TextureHandle& dyn_$whiteTextureXR$k__BackingField();
    // Get instance field reference: private UnityEngine.Experimental.Rendering.RenderGraphModule.TextureHandle <defaultShadowTexture>k__BackingField
    [[deprecated("Use field access instead!")]] ::UnityEngine::Experimental::Rendering::RenderGraphModule::TextureHandle& dyn_$defaultShadowTexture$k__BackingField();
    // public UnityEngine.Experimental.Rendering.RenderGraphModule.TextureHandle get_blackTexture()
    // Offset: 0x523A708
    ::UnityEngine::Experimental::Rendering::RenderGraphModule::TextureHandle get_blackTexture();
    // private System.Void set_blackTexture(UnityEngine.Experimental.Rendering.RenderGraphModule.TextureHandle value)
    // Offset: 0x523A710
    void set_blackTexture(::UnityEngine::Experimental::Rendering::RenderGraphModule::TextureHandle value);
    // public UnityEngine.Experimental.Rendering.RenderGraphModule.TextureHandle get_whiteTexture()
    // Offset: 0x523A718
    ::UnityEngine::Experimental::Rendering::RenderGraphModule::TextureHandle get_whiteTexture();
    // private System.Void set_whiteTexture(UnityEngine.Experimental.Rendering.RenderGraphModule.TextureHandle value)
    // Offset: 0x523A720
    void set_whiteTexture(::UnityEngine::Experimental::Rendering::RenderGraphModule::TextureHandle value);
    // private System.Void set_clearTextureXR(UnityEngine.Experimental.Rendering.RenderGraphModule.TextureHandle value)
    // Offset: 0x523A728
    void set_clearTextureXR(::UnityEngine::Experimental::Rendering::RenderGraphModule::TextureHandle value);
    // private System.Void set_magentaTextureXR(UnityEngine.Experimental.Rendering.RenderGraphModule.TextureHandle value)
    // Offset: 0x523A730
    void set_magentaTextureXR(::UnityEngine::Experimental::Rendering::RenderGraphModule::TextureHandle value);
    // public UnityEngine.Experimental.Rendering.RenderGraphModule.TextureHandle get_blackTextureXR()
    // Offset: 0x523A738
    ::UnityEngine::Experimental::Rendering::RenderGraphModule::TextureHandle get_blackTextureXR();
    // private System.Void set_blackTextureXR(UnityEngine.Experimental.Rendering.RenderGraphModule.TextureHandle value)
    // Offset: 0x523A740
    void set_blackTextureXR(::UnityEngine::Experimental::Rendering::RenderGraphModule::TextureHandle value);
    // private System.Void set_blackTextureArrayXR(UnityEngine.Experimental.Rendering.RenderGraphModule.TextureHandle value)
    // Offset: 0x523A748
    void set_blackTextureArrayXR(::UnityEngine::Experimental::Rendering::RenderGraphModule::TextureHandle value);
    // private System.Void set_blackUIntTextureXR(UnityEngine.Experimental.Rendering.RenderGraphModule.TextureHandle value)
    // Offset: 0x523A750
    void set_blackUIntTextureXR(::UnityEngine::Experimental::Rendering::RenderGraphModule::TextureHandle value);
    // public UnityEngine.Experimental.Rendering.RenderGraphModule.TextureHandle get_blackTexture3DXR()
    // Offset: 0x523A758
    ::UnityEngine::Experimental::Rendering::RenderGraphModule::TextureHandle get_blackTexture3DXR();
    // private System.Void set_blackTexture3DXR(UnityEngine.Experimental.Rendering.RenderGraphModule.TextureHandle value)
    // Offset: 0x523A760
    void set_blackTexture3DXR(::UnityEngine::Experimental::Rendering::RenderGraphModule::TextureHandle value);
    // public UnityEngine.Experimental.Rendering.RenderGraphModule.TextureHandle get_whiteTextureXR()
    // Offset: 0x523A768
    ::UnityEngine::Experimental::Rendering::RenderGraphModule::TextureHandle get_whiteTextureXR();
    // private System.Void set_whiteTextureXR(UnityEngine.Experimental.Rendering.RenderGraphModule.TextureHandle value)
    // Offset: 0x523A770
    void set_whiteTextureXR(::UnityEngine::Experimental::Rendering::RenderGraphModule::TextureHandle value);
    // public UnityEngine.Experimental.Rendering.RenderGraphModule.TextureHandle get_defaultShadowTexture()
    // Offset: 0x523A778
    ::UnityEngine::Experimental::Rendering::RenderGraphModule::TextureHandle get_defaultShadowTexture();
    // private System.Void set_defaultShadowTexture(UnityEngine.Experimental.Rendering.RenderGraphModule.TextureHandle value)
    // Offset: 0x523A780
    void set_defaultShadowTexture(::UnityEngine::Experimental::Rendering::RenderGraphModule::TextureHandle value);
    // System.Void .ctor()
    // Offset: 0x5230F8C
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static RenderGraphDefaultResources* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphDefaultResources::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<RenderGraphDefaultResources*, creationType>()));
    }
    // System.Void Cleanup()
    // Offset: 0x5231590
    void Cleanup();
    // System.Void InitializeForRendering(UnityEngine.Experimental.Rendering.RenderGraphModule.RenderGraph renderGraph)
    // Offset: 0x52321DC
    void InitializeForRendering(::UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraph* renderGraph);
  }; // UnityEngine.Experimental.Rendering.RenderGraphModule.RenderGraphDefaultResources
  #pragma pack(pop)
  static check_size<sizeof(RenderGraphDefaultResources), 112 + sizeof(::UnityEngine::Experimental::Rendering::RenderGraphModule::TextureHandle)> __UnityEngine_Experimental_Rendering_RenderGraphModule_RenderGraphDefaultResourcesSizeCheck;
  static_assert(sizeof(RenderGraphDefaultResources) == 0x78);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphDefaultResources::get_blackTexture
// Il2CppName: get_blackTexture
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Experimental::Rendering::RenderGraphModule::TextureHandle (UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphDefaultResources::*)()>(&UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphDefaultResources::get_blackTexture)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphDefaultResources*), "get_blackTexture", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphDefaultResources::set_blackTexture
// Il2CppName: set_blackTexture
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphDefaultResources::*)(::UnityEngine::Experimental::Rendering::RenderGraphModule::TextureHandle)>(&UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphDefaultResources::set_blackTexture)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.Experimental.Rendering.RenderGraphModule", "TextureHandle")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphDefaultResources*), "set_blackTexture", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphDefaultResources::get_whiteTexture
// Il2CppName: get_whiteTexture
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Experimental::Rendering::RenderGraphModule::TextureHandle (UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphDefaultResources::*)()>(&UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphDefaultResources::get_whiteTexture)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphDefaultResources*), "get_whiteTexture", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphDefaultResources::set_whiteTexture
// Il2CppName: set_whiteTexture
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphDefaultResources::*)(::UnityEngine::Experimental::Rendering::RenderGraphModule::TextureHandle)>(&UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphDefaultResources::set_whiteTexture)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.Experimental.Rendering.RenderGraphModule", "TextureHandle")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphDefaultResources*), "set_whiteTexture", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphDefaultResources::set_clearTextureXR
// Il2CppName: set_clearTextureXR
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphDefaultResources::*)(::UnityEngine::Experimental::Rendering::RenderGraphModule::TextureHandle)>(&UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphDefaultResources::set_clearTextureXR)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.Experimental.Rendering.RenderGraphModule", "TextureHandle")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphDefaultResources*), "set_clearTextureXR", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphDefaultResources::set_magentaTextureXR
// Il2CppName: set_magentaTextureXR
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphDefaultResources::*)(::UnityEngine::Experimental::Rendering::RenderGraphModule::TextureHandle)>(&UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphDefaultResources::set_magentaTextureXR)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.Experimental.Rendering.RenderGraphModule", "TextureHandle")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphDefaultResources*), "set_magentaTextureXR", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphDefaultResources::get_blackTextureXR
// Il2CppName: get_blackTextureXR
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Experimental::Rendering::RenderGraphModule::TextureHandle (UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphDefaultResources::*)()>(&UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphDefaultResources::get_blackTextureXR)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphDefaultResources*), "get_blackTextureXR", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphDefaultResources::set_blackTextureXR
// Il2CppName: set_blackTextureXR
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphDefaultResources::*)(::UnityEngine::Experimental::Rendering::RenderGraphModule::TextureHandle)>(&UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphDefaultResources::set_blackTextureXR)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.Experimental.Rendering.RenderGraphModule", "TextureHandle")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphDefaultResources*), "set_blackTextureXR", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphDefaultResources::set_blackTextureArrayXR
// Il2CppName: set_blackTextureArrayXR
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphDefaultResources::*)(::UnityEngine::Experimental::Rendering::RenderGraphModule::TextureHandle)>(&UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphDefaultResources::set_blackTextureArrayXR)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.Experimental.Rendering.RenderGraphModule", "TextureHandle")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphDefaultResources*), "set_blackTextureArrayXR", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphDefaultResources::set_blackUIntTextureXR
// Il2CppName: set_blackUIntTextureXR
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphDefaultResources::*)(::UnityEngine::Experimental::Rendering::RenderGraphModule::TextureHandle)>(&UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphDefaultResources::set_blackUIntTextureXR)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.Experimental.Rendering.RenderGraphModule", "TextureHandle")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphDefaultResources*), "set_blackUIntTextureXR", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphDefaultResources::get_blackTexture3DXR
// Il2CppName: get_blackTexture3DXR
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Experimental::Rendering::RenderGraphModule::TextureHandle (UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphDefaultResources::*)()>(&UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphDefaultResources::get_blackTexture3DXR)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphDefaultResources*), "get_blackTexture3DXR", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphDefaultResources::set_blackTexture3DXR
// Il2CppName: set_blackTexture3DXR
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphDefaultResources::*)(::UnityEngine::Experimental::Rendering::RenderGraphModule::TextureHandle)>(&UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphDefaultResources::set_blackTexture3DXR)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.Experimental.Rendering.RenderGraphModule", "TextureHandle")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphDefaultResources*), "set_blackTexture3DXR", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphDefaultResources::get_whiteTextureXR
// Il2CppName: get_whiteTextureXR
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Experimental::Rendering::RenderGraphModule::TextureHandle (UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphDefaultResources::*)()>(&UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphDefaultResources::get_whiteTextureXR)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphDefaultResources*), "get_whiteTextureXR", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphDefaultResources::set_whiteTextureXR
// Il2CppName: set_whiteTextureXR
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphDefaultResources::*)(::UnityEngine::Experimental::Rendering::RenderGraphModule::TextureHandle)>(&UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphDefaultResources::set_whiteTextureXR)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.Experimental.Rendering.RenderGraphModule", "TextureHandle")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphDefaultResources*), "set_whiteTextureXR", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphDefaultResources::get_defaultShadowTexture
// Il2CppName: get_defaultShadowTexture
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Experimental::Rendering::RenderGraphModule::TextureHandle (UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphDefaultResources::*)()>(&UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphDefaultResources::get_defaultShadowTexture)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphDefaultResources*), "get_defaultShadowTexture", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphDefaultResources::set_defaultShadowTexture
// Il2CppName: set_defaultShadowTexture
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphDefaultResources::*)(::UnityEngine::Experimental::Rendering::RenderGraphModule::TextureHandle)>(&UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphDefaultResources::set_defaultShadowTexture)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.Experimental.Rendering.RenderGraphModule", "TextureHandle")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphDefaultResources*), "set_defaultShadowTexture", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphDefaultResources::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphDefaultResources::Cleanup
// Il2CppName: Cleanup
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphDefaultResources::*)()>(&UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphDefaultResources::Cleanup)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphDefaultResources*), "Cleanup", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphDefaultResources::InitializeForRendering
// Il2CppName: InitializeForRendering
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphDefaultResources::*)(::UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraph*)>(&UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphDefaultResources::InitializeForRendering)> {
  static const MethodInfo* get() {
    static auto* renderGraph = &::il2cpp_utils::GetClassFromName("UnityEngine.Experimental.Rendering.RenderGraphModule", "RenderGraph")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Experimental::Rendering::RenderGraphModule::RenderGraphDefaultResources*), "InitializeForRendering", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{renderGraph});
  }
};
