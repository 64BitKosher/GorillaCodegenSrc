// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
// Including type: UnityEngine.Rendering.Universal.IPixelPerfectCamera
#include "UnityEngine/Rendering/Universal/IPixelPerfectCamera.hpp"
// Including type: UnityEngine.ISerializationCallbackReceiver
#include "UnityEngine/ISerializationCallbackReceiver.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::Experimental::Rendering::Universal
namespace UnityEngine::Experimental::Rendering::Universal {
  // Skipping declaration: CropFrame because it is already included!
  // Skipping declaration: GridSnapping because it is already included!
}
// Forward declaring namespace: UnityEngine::Rendering::Universal
namespace UnityEngine::Rendering::Universal {
  // Forward declaring type: PixelPerfectCameraInternal
  class PixelPerfectCameraInternal;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Camera
  class Camera;
  // Skipping declaration: Vector3 because it is already included!
  // Forward declaring type: FilterMode
  struct FilterMode;
  // Forward declaring type: Vector2Int
  struct Vector2Int;
}
// Forward declaring namespace: UnityEngine::Rendering
namespace UnityEngine::Rendering {
  // Forward declaring type: ScriptableRenderContext
  struct ScriptableRenderContext;
}
// Completed forward declares
// Type namespace: UnityEngine.Experimental.Rendering.Universal
namespace UnityEngine::Experimental::Rendering::Universal {
  // Forward declaring type: PixelPerfectCamera
  class PixelPerfectCamera;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::Experimental::Rendering::Universal::PixelPerfectCamera);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::Experimental::Rendering::Universal::PixelPerfectCamera*, "UnityEngine.Experimental.Rendering.Universal", "PixelPerfectCamera");
// Type namespace: UnityEngine.Experimental.Rendering.Universal
namespace UnityEngine::Experimental::Rendering::Universal {
  // Size: 0x49
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.Experimental.Rendering.Universal.PixelPerfectCamera
  // [TokenAttribute] Offset: FFFFFFFF
  // [HelpURLAttribute] Offset: FFFFFFFF
  // [ExecuteInEditMode] Offset: FFFFFFFF
  // [AddComponentMenu] Offset: FFFFFFFF
  // [DisallowMultipleComponent] Offset: FFFFFFFF
  // [RequireComponent] Offset: FFFFFFFF
  // [MovedFromAttribute] Offset: FFFFFFFF
  class PixelPerfectCamera : public ::UnityEngine::MonoBehaviour/*, public ::UnityEngine::Rendering::Universal::IPixelPerfectCamera, public ::UnityEngine::ISerializationCallbackReceiver*/ {
    public:
    // Nested type: ::UnityEngine::Experimental::Rendering::Universal::PixelPerfectCamera::CropFrame
    struct CropFrame;
    // Nested type: ::UnityEngine::Experimental::Rendering::Universal::PixelPerfectCamera::GridSnapping
    struct GridSnapping;
    // Nested type: ::UnityEngine::Experimental::Rendering::Universal::PixelPerfectCamera::PixelPerfectFilterMode
    struct PixelPerfectFilterMode;
    // Nested type: ::UnityEngine::Experimental::Rendering::Universal::PixelPerfectCamera::ComponentVersions
    struct ComponentVersions;
    // Size: 0x4
    #pragma pack(push, 1)
    // Autogenerated type: UnityEngine.Experimental.Rendering.Universal.PixelPerfectCamera/CropFrame
    // [TokenAttribute] Offset: FFFFFFFF
    struct CropFrame/*, public ::System::Enum*/ {
      public:
      public:
      // public System.Int32 value__
      // Size: 0x4
      // Offset: 0x0
      int value;
      // Field size check
      static_assert(sizeof(int) == 0x4);
      public:
      // Creating value type constructor for type: CropFrame
      constexpr CropFrame(int value_ = {}) noexcept : value{value_} {}
      // Creating interface conversion operator: operator ::System::Enum
      operator ::System::Enum() noexcept {
        return *reinterpret_cast<::System::Enum*>(this);
      }
      // Creating conversion operator: operator int
      constexpr operator int() const noexcept {
        return value;
      }
      // static field const value: static public UnityEngine.Experimental.Rendering.Universal.PixelPerfectCamera/CropFrame None
      static constexpr const int None = 0;
      // Get static field: static public UnityEngine.Experimental.Rendering.Universal.PixelPerfectCamera/CropFrame None
      static ::UnityEngine::Experimental::Rendering::Universal::PixelPerfectCamera::CropFrame _get_None();
      // Set static field: static public UnityEngine.Experimental.Rendering.Universal.PixelPerfectCamera/CropFrame None
      static void _set_None(::UnityEngine::Experimental::Rendering::Universal::PixelPerfectCamera::CropFrame value);
      // static field const value: static public UnityEngine.Experimental.Rendering.Universal.PixelPerfectCamera/CropFrame Pillarbox
      static constexpr const int Pillarbox = 1;
      // Get static field: static public UnityEngine.Experimental.Rendering.Universal.PixelPerfectCamera/CropFrame Pillarbox
      static ::UnityEngine::Experimental::Rendering::Universal::PixelPerfectCamera::CropFrame _get_Pillarbox();
      // Set static field: static public UnityEngine.Experimental.Rendering.Universal.PixelPerfectCamera/CropFrame Pillarbox
      static void _set_Pillarbox(::UnityEngine::Experimental::Rendering::Universal::PixelPerfectCamera::CropFrame value);
      // static field const value: static public UnityEngine.Experimental.Rendering.Universal.PixelPerfectCamera/CropFrame Letterbox
      static constexpr const int Letterbox = 2;
      // Get static field: static public UnityEngine.Experimental.Rendering.Universal.PixelPerfectCamera/CropFrame Letterbox
      static ::UnityEngine::Experimental::Rendering::Universal::PixelPerfectCamera::CropFrame _get_Letterbox();
      // Set static field: static public UnityEngine.Experimental.Rendering.Universal.PixelPerfectCamera/CropFrame Letterbox
      static void _set_Letterbox(::UnityEngine::Experimental::Rendering::Universal::PixelPerfectCamera::CropFrame value);
      // static field const value: static public UnityEngine.Experimental.Rendering.Universal.PixelPerfectCamera/CropFrame Windowbox
      static constexpr const int Windowbox = 3;
      // Get static field: static public UnityEngine.Experimental.Rendering.Universal.PixelPerfectCamera/CropFrame Windowbox
      static ::UnityEngine::Experimental::Rendering::Universal::PixelPerfectCamera::CropFrame _get_Windowbox();
      // Set static field: static public UnityEngine.Experimental.Rendering.Universal.PixelPerfectCamera/CropFrame Windowbox
      static void _set_Windowbox(::UnityEngine::Experimental::Rendering::Universal::PixelPerfectCamera::CropFrame value);
      // static field const value: static public UnityEngine.Experimental.Rendering.Universal.PixelPerfectCamera/CropFrame StretchFill
      static constexpr const int StretchFill = 4;
      // Get static field: static public UnityEngine.Experimental.Rendering.Universal.PixelPerfectCamera/CropFrame StretchFill
      static ::UnityEngine::Experimental::Rendering::Universal::PixelPerfectCamera::CropFrame _get_StretchFill();
      // Set static field: static public UnityEngine.Experimental.Rendering.Universal.PixelPerfectCamera/CropFrame StretchFill
      static void _set_StretchFill(::UnityEngine::Experimental::Rendering::Universal::PixelPerfectCamera::CropFrame value);
      // Get instance field reference: public System.Int32 value__
      [[deprecated("Use field access instead!")]] int& dyn_value__();
    }; // UnityEngine.Experimental.Rendering.Universal.PixelPerfectCamera/CropFrame
    #pragma pack(pop)
    static check_size<sizeof(PixelPerfectCamera::CropFrame), 0 + sizeof(int)> __UnityEngine_Experimental_Rendering_Universal_PixelPerfectCamera_CropFrameSizeCheck;
    static_assert(sizeof(PixelPerfectCamera::CropFrame) == 0x4);
    // Size: 0x4
    #pragma pack(push, 1)
    // Autogenerated type: UnityEngine.Experimental.Rendering.Universal.PixelPerfectCamera/GridSnapping
    // [TokenAttribute] Offset: FFFFFFFF
    struct GridSnapping/*, public ::System::Enum*/ {
      public:
      public:
      // public System.Int32 value__
      // Size: 0x4
      // Offset: 0x0
      int value;
      // Field size check
      static_assert(sizeof(int) == 0x4);
      public:
      // Creating value type constructor for type: GridSnapping
      constexpr GridSnapping(int value_ = {}) noexcept : value{value_} {}
      // Creating interface conversion operator: operator ::System::Enum
      operator ::System::Enum() noexcept {
        return *reinterpret_cast<::System::Enum*>(this);
      }
      // Creating conversion operator: operator int
      constexpr operator int() const noexcept {
        return value;
      }
      // static field const value: static public UnityEngine.Experimental.Rendering.Universal.PixelPerfectCamera/GridSnapping None
      static constexpr const int None = 0;
      // Get static field: static public UnityEngine.Experimental.Rendering.Universal.PixelPerfectCamera/GridSnapping None
      static ::UnityEngine::Experimental::Rendering::Universal::PixelPerfectCamera::GridSnapping _get_None();
      // Set static field: static public UnityEngine.Experimental.Rendering.Universal.PixelPerfectCamera/GridSnapping None
      static void _set_None(::UnityEngine::Experimental::Rendering::Universal::PixelPerfectCamera::GridSnapping value);
      // static field const value: static public UnityEngine.Experimental.Rendering.Universal.PixelPerfectCamera/GridSnapping PixelSnapping
      static constexpr const int PixelSnapping = 1;
      // Get static field: static public UnityEngine.Experimental.Rendering.Universal.PixelPerfectCamera/GridSnapping PixelSnapping
      static ::UnityEngine::Experimental::Rendering::Universal::PixelPerfectCamera::GridSnapping _get_PixelSnapping();
      // Set static field: static public UnityEngine.Experimental.Rendering.Universal.PixelPerfectCamera/GridSnapping PixelSnapping
      static void _set_PixelSnapping(::UnityEngine::Experimental::Rendering::Universal::PixelPerfectCamera::GridSnapping value);
      // static field const value: static public UnityEngine.Experimental.Rendering.Universal.PixelPerfectCamera/GridSnapping UpscaleRenderTexture
      static constexpr const int UpscaleRenderTexture = 2;
      // Get static field: static public UnityEngine.Experimental.Rendering.Universal.PixelPerfectCamera/GridSnapping UpscaleRenderTexture
      static ::UnityEngine::Experimental::Rendering::Universal::PixelPerfectCamera::GridSnapping _get_UpscaleRenderTexture();
      // Set static field: static public UnityEngine.Experimental.Rendering.Universal.PixelPerfectCamera/GridSnapping UpscaleRenderTexture
      static void _set_UpscaleRenderTexture(::UnityEngine::Experimental::Rendering::Universal::PixelPerfectCamera::GridSnapping value);
      // Get instance field reference: public System.Int32 value__
      [[deprecated("Use field access instead!")]] int& dyn_value__();
    }; // UnityEngine.Experimental.Rendering.Universal.PixelPerfectCamera/GridSnapping
    #pragma pack(pop)
    static check_size<sizeof(PixelPerfectCamera::GridSnapping), 0 + sizeof(int)> __UnityEngine_Experimental_Rendering_Universal_PixelPerfectCamera_GridSnappingSizeCheck;
    static_assert(sizeof(PixelPerfectCamera::GridSnapping) == 0x4);
    // Size: 0x4
    #pragma pack(push, 1)
    // Autogenerated type: UnityEngine.Experimental.Rendering.Universal.PixelPerfectCamera/PixelPerfectFilterMode
    // [TokenAttribute] Offset: FFFFFFFF
    struct PixelPerfectFilterMode/*, public ::System::Enum*/ {
      public:
      public:
      // public System.Int32 value__
      // Size: 0x4
      // Offset: 0x0
      int value;
      // Field size check
      static_assert(sizeof(int) == 0x4);
      public:
      // Creating value type constructor for type: PixelPerfectFilterMode
      constexpr PixelPerfectFilterMode(int value_ = {}) noexcept : value{value_} {}
      // Creating interface conversion operator: operator ::System::Enum
      operator ::System::Enum() noexcept {
        return *reinterpret_cast<::System::Enum*>(this);
      }
      // Creating conversion operator: operator int
      constexpr operator int() const noexcept {
        return value;
      }
      // static field const value: static public UnityEngine.Experimental.Rendering.Universal.PixelPerfectCamera/PixelPerfectFilterMode RetroAA
      static constexpr const int RetroAA = 0;
      // Get static field: static public UnityEngine.Experimental.Rendering.Universal.PixelPerfectCamera/PixelPerfectFilterMode RetroAA
      static ::UnityEngine::Experimental::Rendering::Universal::PixelPerfectCamera::PixelPerfectFilterMode _get_RetroAA();
      // Set static field: static public UnityEngine.Experimental.Rendering.Universal.PixelPerfectCamera/PixelPerfectFilterMode RetroAA
      static void _set_RetroAA(::UnityEngine::Experimental::Rendering::Universal::PixelPerfectCamera::PixelPerfectFilterMode value);
      // static field const value: static public UnityEngine.Experimental.Rendering.Universal.PixelPerfectCamera/PixelPerfectFilterMode Point
      static constexpr const int Point = 1;
      // Get static field: static public UnityEngine.Experimental.Rendering.Universal.PixelPerfectCamera/PixelPerfectFilterMode Point
      static ::UnityEngine::Experimental::Rendering::Universal::PixelPerfectCamera::PixelPerfectFilterMode _get_Point();
      // Set static field: static public UnityEngine.Experimental.Rendering.Universal.PixelPerfectCamera/PixelPerfectFilterMode Point
      static void _set_Point(::UnityEngine::Experimental::Rendering::Universal::PixelPerfectCamera::PixelPerfectFilterMode value);
      // Get instance field reference: public System.Int32 value__
      [[deprecated("Use field access instead!")]] int& dyn_value__();
    }; // UnityEngine.Experimental.Rendering.Universal.PixelPerfectCamera/PixelPerfectFilterMode
    #pragma pack(pop)
    static check_size<sizeof(PixelPerfectCamera::PixelPerfectFilterMode), 0 + sizeof(int)> __UnityEngine_Experimental_Rendering_Universal_PixelPerfectCamera_PixelPerfectFilterModeSizeCheck;
    static_assert(sizeof(PixelPerfectCamera::PixelPerfectFilterMode) == 0x4);
    public:
    // private System.Int32 m_AssetsPPU
    // Size: 0x4
    // Offset: 0x20
    int m_AssetsPPU;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private System.Int32 m_RefResolutionX
    // Size: 0x4
    // Offset: 0x24
    int m_RefResolutionX;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private System.Int32 m_RefResolutionY
    // Size: 0x4
    // Offset: 0x28
    int m_RefResolutionY;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private UnityEngine.Experimental.Rendering.Universal.PixelPerfectCamera/CropFrame m_CropFrame
    // Size: 0x4
    // Offset: 0x2C
    ::UnityEngine::Experimental::Rendering::Universal::PixelPerfectCamera::CropFrame m_CropFrame;
    // Field size check
    static_assert(sizeof(::UnityEngine::Experimental::Rendering::Universal::PixelPerfectCamera::CropFrame) == 0x4);
    // private UnityEngine.Experimental.Rendering.Universal.PixelPerfectCamera/GridSnapping m_GridSnapping
    // Size: 0x4
    // Offset: 0x30
    ::UnityEngine::Experimental::Rendering::Universal::PixelPerfectCamera::GridSnapping m_GridSnapping;
    // Field size check
    static_assert(sizeof(::UnityEngine::Experimental::Rendering::Universal::PixelPerfectCamera::GridSnapping) == 0x4);
    // private UnityEngine.Experimental.Rendering.Universal.PixelPerfectCamera/PixelPerfectFilterMode m_FilterMode
    // Size: 0x4
    // Offset: 0x34
    ::UnityEngine::Experimental::Rendering::Universal::PixelPerfectCamera::PixelPerfectFilterMode m_FilterMode;
    // Field size check
    static_assert(sizeof(::UnityEngine::Experimental::Rendering::Universal::PixelPerfectCamera::PixelPerfectFilterMode) == 0x4);
    // private UnityEngine.Camera m_Camera
    // Size: 0x8
    // Offset: 0x38
    ::UnityEngine::Camera* m_Camera;
    // Field size check
    static_assert(sizeof(::UnityEngine::Camera*) == 0x8);
    // private UnityEngine.Rendering.Universal.PixelPerfectCameraInternal m_Internal
    // Size: 0x8
    // Offset: 0x40
    ::UnityEngine::Rendering::Universal::PixelPerfectCameraInternal* m_Internal;
    // Field size check
    static_assert(sizeof(::UnityEngine::Rendering::Universal::PixelPerfectCameraInternal*) == 0x8);
    // private System.Boolean m_CinemachineCompatibilityMode
    // Size: 0x1
    // Offset: 0x48
    bool m_CinemachineCompatibilityMode;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    public:
    // Creating interface conversion operator: operator ::UnityEngine::Rendering::Universal::IPixelPerfectCamera
    operator ::UnityEngine::Rendering::Universal::IPixelPerfectCamera() noexcept {
      return *reinterpret_cast<::UnityEngine::Rendering::Universal::IPixelPerfectCamera*>(this);
    }
    // Creating interface conversion operator: operator ::UnityEngine::ISerializationCallbackReceiver
    operator ::UnityEngine::ISerializationCallbackReceiver() noexcept {
      return *reinterpret_cast<::UnityEngine::ISerializationCallbackReceiver*>(this);
    }
    // Get instance field reference: private System.Int32 m_AssetsPPU
    [[deprecated("Use field access instead!")]] int& dyn_m_AssetsPPU();
    // Get instance field reference: private System.Int32 m_RefResolutionX
    [[deprecated("Use field access instead!")]] int& dyn_m_RefResolutionX();
    // Get instance field reference: private System.Int32 m_RefResolutionY
    [[deprecated("Use field access instead!")]] int& dyn_m_RefResolutionY();
    // Get instance field reference: private UnityEngine.Experimental.Rendering.Universal.PixelPerfectCamera/CropFrame m_CropFrame
    [[deprecated("Use field access instead!")]] ::UnityEngine::Experimental::Rendering::Universal::PixelPerfectCamera::CropFrame& dyn_m_CropFrame();
    // Get instance field reference: private UnityEngine.Experimental.Rendering.Universal.PixelPerfectCamera/GridSnapping m_GridSnapping
    [[deprecated("Use field access instead!")]] ::UnityEngine::Experimental::Rendering::Universal::PixelPerfectCamera::GridSnapping& dyn_m_GridSnapping();
    // Get instance field reference: private UnityEngine.Experimental.Rendering.Universal.PixelPerfectCamera/PixelPerfectFilterMode m_FilterMode
    [[deprecated("Use field access instead!")]] ::UnityEngine::Experimental::Rendering::Universal::PixelPerfectCamera::PixelPerfectFilterMode& dyn_m_FilterMode();
    // Get instance field reference: private UnityEngine.Camera m_Camera
    [[deprecated("Use field access instead!")]] ::UnityEngine::Camera*& dyn_m_Camera();
    // Get instance field reference: private UnityEngine.Rendering.Universal.PixelPerfectCameraInternal m_Internal
    [[deprecated("Use field access instead!")]] ::UnityEngine::Rendering::Universal::PixelPerfectCameraInternal*& dyn_m_Internal();
    // Get instance field reference: private System.Boolean m_CinemachineCompatibilityMode
    [[deprecated("Use field access instead!")]] bool& dyn_m_CinemachineCompatibilityMode();
    // public UnityEngine.Experimental.Rendering.Universal.PixelPerfectCamera/CropFrame get_cropFrame()
    // Offset: 0x526A0E4
    ::UnityEngine::Experimental::Rendering::Universal::PixelPerfectCamera::CropFrame get_cropFrame();
    // public System.Void set_cropFrame(UnityEngine.Experimental.Rendering.Universal.PixelPerfectCamera/CropFrame value)
    // Offset: 0x526A0EC
    void set_cropFrame(::UnityEngine::Experimental::Rendering::Universal::PixelPerfectCamera::CropFrame value);
    // public UnityEngine.Experimental.Rendering.Universal.PixelPerfectCamera/GridSnapping get_gridSnapping()
    // Offset: 0x526A0F4
    ::UnityEngine::Experimental::Rendering::Universal::PixelPerfectCamera::GridSnapping get_gridSnapping();
    // public System.Void set_gridSnapping(UnityEngine.Experimental.Rendering.Universal.PixelPerfectCamera/GridSnapping value)
    // Offset: 0x526A0FC
    void set_gridSnapping(::UnityEngine::Experimental::Rendering::Universal::PixelPerfectCamera::GridSnapping value);
    // public System.Single get_orthographicSize()
    // Offset: 0x526A104
    float get_orthographicSize();
    // public System.Int32 get_assetsPPU()
    // Offset: 0x526A120
    int get_assetsPPU();
    // public System.Void set_assetsPPU(System.Int32 value)
    // Offset: 0x526A128
    void set_assetsPPU(int value);
    // public System.Int32 get_refResolutionX()
    // Offset: 0x526A148
    int get_refResolutionX();
    // public System.Void set_refResolutionX(System.Int32 value)
    // Offset: 0x526A150
    void set_refResolutionX(int value);
    // public System.Int32 get_refResolutionY()
    // Offset: 0x526A170
    int get_refResolutionY();
    // public System.Void set_refResolutionY(System.Int32 value)
    // Offset: 0x526A178
    void set_refResolutionY(int value);
    // public System.Boolean get_upscaleRT()
    // Offset: 0x526A198
    bool get_upscaleRT();
    // public System.Void set_upscaleRT(System.Boolean value)
    // Offset: 0x526A1A8
    void set_upscaleRT(bool value);
    // public System.Boolean get_pixelSnapping()
    // Offset: 0x526A1CC
    bool get_pixelSnapping();
    // public System.Void set_pixelSnapping(System.Boolean value)
    // Offset: 0x526A1DC
    void set_pixelSnapping(bool value);
    // public System.Boolean get_cropFrameX()
    // Offset: 0x526A1F8
    bool get_cropFrameX();
    // public System.Void set_cropFrameX(System.Boolean value)
    // Offset: 0x526A224
    void set_cropFrameX(bool value);
    // public System.Boolean get_cropFrameY()
    // Offset: 0x526A270
    bool get_cropFrameY();
    // public System.Void set_cropFrameY(System.Boolean value)
    // Offset: 0x526A284
    void set_cropFrameY(bool value);
    // public System.Boolean get_stretchFill()
    // Offset: 0x526A2D0
    bool get_stretchFill();
    // public System.Void set_stretchFill(System.Boolean value)
    // Offset: 0x526A2E0
    void set_stretchFill(bool value);
    // public System.Int32 get_pixelRatio()
    // Offset: 0x526A2F4
    int get_pixelRatio();
    // public System.Boolean get_requiresUpscalePass()
    // Offset: 0x526A340
    bool get_requiresUpscalePass();
    // public UnityEngine.Vector3 RoundToPixel(UnityEngine.Vector3 position)
    // Offset: 0x526A35C
    ::UnityEngine::Vector3 RoundToPixel(::UnityEngine::Vector3 position);
    // public System.Single CorrectCinemachineOrthoSize(System.Single targetOrthoSize)
    // Offset: 0x526A514
    float CorrectCinemachineOrthoSize(float targetOrthoSize);
    // UnityEngine.FilterMode get_finalBlitFilterMode()
    // Offset: 0x526A534
    ::UnityEngine::FilterMode get_finalBlitFilterMode();
    // UnityEngine.Vector2Int get_offscreenRTSize()
    // Offset: 0x526A544
    ::UnityEngine::Vector2Int get_offscreenRTSize();
    // private UnityEngine.Vector2Int get_cameraRTSize()
    // Offset: 0x526A560
    ::UnityEngine::Vector2Int get_cameraRTSize();
    // private System.Void PixelSnap()
    // Offset: 0x526A62C
    void PixelSnap();
    // private System.Void Awake()
    // Offset: 0x526A794
    void Awake();
    // private System.Void UpdateCameraProperties()
    // Offset: 0x526A838
    void UpdateCameraProperties();
    // private System.Void OnBeginCameraRendering(UnityEngine.Rendering.ScriptableRenderContext context, UnityEngine.Camera camera)
    // Offset: 0x526A8D4
    void OnBeginCameraRendering(::UnityEngine::Rendering::ScriptableRenderContext context, ::UnityEngine::Camera* camera);
    // private System.Void OnEndCameraRendering(UnityEngine.Rendering.ScriptableRenderContext context, UnityEngine.Camera camera)
    // Offset: 0x526A9A0
    void OnEndCameraRendering(::UnityEngine::Rendering::ScriptableRenderContext context, ::UnityEngine::Camera* camera);
    // private System.Void OnEnable()
    // Offset: 0x526AA2C
    void OnEnable();
    // System.Void OnDisable()
    // Offset: 0x526AB10
    void OnDisable();
    // public System.Void OnBeforeSerialize()
    // Offset: 0x526AC24
    void OnBeforeSerialize();
    // public System.Void OnAfterDeserialize()
    // Offset: 0x526AC28
    void OnAfterDeserialize();
    // public System.Void .ctor()
    // Offset: 0x526AC2C
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static PixelPerfectCamera* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::Rendering::Universal::PixelPerfectCamera::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<PixelPerfectCamera*, creationType>()));
    }
  }; // UnityEngine.Experimental.Rendering.Universal.PixelPerfectCamera
  #pragma pack(pop)
  static check_size<sizeof(PixelPerfectCamera), 72 + sizeof(bool)> __UnityEngine_Experimental_Rendering_Universal_PixelPerfectCameraSizeCheck;
  static_assert(sizeof(PixelPerfectCamera) == 0x49);
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::Experimental::Rendering::Universal::PixelPerfectCamera::PixelPerfectFilterMode, "UnityEngine.Experimental.Rendering.Universal", "PixelPerfectCamera/PixelPerfectFilterMode");
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::Experimental::Rendering::Universal::PixelPerfectCamera::GridSnapping, "UnityEngine.Experimental.Rendering.Universal", "PixelPerfectCamera/GridSnapping");
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::Experimental::Rendering::Universal::PixelPerfectCamera::CropFrame, "UnityEngine.Experimental.Rendering.Universal", "PixelPerfectCamera/CropFrame");
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::Experimental::Rendering::Universal::PixelPerfectCamera::get_cropFrame
// Il2CppName: get_cropFrame
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Experimental::Rendering::Universal::PixelPerfectCamera::CropFrame (UnityEngine::Experimental::Rendering::Universal::PixelPerfectCamera::*)()>(&UnityEngine::Experimental::Rendering::Universal::PixelPerfectCamera::get_cropFrame)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Experimental::Rendering::Universal::PixelPerfectCamera*), "get_cropFrame", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Experimental::Rendering::Universal::PixelPerfectCamera::set_cropFrame
// Il2CppName: set_cropFrame
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Experimental::Rendering::Universal::PixelPerfectCamera::*)(::UnityEngine::Experimental::Rendering::Universal::PixelPerfectCamera::CropFrame)>(&UnityEngine::Experimental::Rendering::Universal::PixelPerfectCamera::set_cropFrame)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.Experimental.Rendering.Universal", "PixelPerfectCamera/CropFrame")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Experimental::Rendering::Universal::PixelPerfectCamera*), "set_cropFrame", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Experimental::Rendering::Universal::PixelPerfectCamera::get_gridSnapping
// Il2CppName: get_gridSnapping
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Experimental::Rendering::Universal::PixelPerfectCamera::GridSnapping (UnityEngine::Experimental::Rendering::Universal::PixelPerfectCamera::*)()>(&UnityEngine::Experimental::Rendering::Universal::PixelPerfectCamera::get_gridSnapping)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Experimental::Rendering::Universal::PixelPerfectCamera*), "get_gridSnapping", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Experimental::Rendering::Universal::PixelPerfectCamera::set_gridSnapping
// Il2CppName: set_gridSnapping
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Experimental::Rendering::Universal::PixelPerfectCamera::*)(::UnityEngine::Experimental::Rendering::Universal::PixelPerfectCamera::GridSnapping)>(&UnityEngine::Experimental::Rendering::Universal::PixelPerfectCamera::set_gridSnapping)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.Experimental.Rendering.Universal", "PixelPerfectCamera/GridSnapping")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Experimental::Rendering::Universal::PixelPerfectCamera*), "set_gridSnapping", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Experimental::Rendering::Universal::PixelPerfectCamera::get_orthographicSize
// Il2CppName: get_orthographicSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::Experimental::Rendering::Universal::PixelPerfectCamera::*)()>(&UnityEngine::Experimental::Rendering::Universal::PixelPerfectCamera::get_orthographicSize)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Experimental::Rendering::Universal::PixelPerfectCamera*), "get_orthographicSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Experimental::Rendering::Universal::PixelPerfectCamera::get_assetsPPU
// Il2CppName: get_assetsPPU
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::Experimental::Rendering::Universal::PixelPerfectCamera::*)()>(&UnityEngine::Experimental::Rendering::Universal::PixelPerfectCamera::get_assetsPPU)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Experimental::Rendering::Universal::PixelPerfectCamera*), "get_assetsPPU", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Experimental::Rendering::Universal::PixelPerfectCamera::set_assetsPPU
// Il2CppName: set_assetsPPU
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Experimental::Rendering::Universal::PixelPerfectCamera::*)(int)>(&UnityEngine::Experimental::Rendering::Universal::PixelPerfectCamera::set_assetsPPU)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Experimental::Rendering::Universal::PixelPerfectCamera*), "set_assetsPPU", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Experimental::Rendering::Universal::PixelPerfectCamera::get_refResolutionX
// Il2CppName: get_refResolutionX
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::Experimental::Rendering::Universal::PixelPerfectCamera::*)()>(&UnityEngine::Experimental::Rendering::Universal::PixelPerfectCamera::get_refResolutionX)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Experimental::Rendering::Universal::PixelPerfectCamera*), "get_refResolutionX", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Experimental::Rendering::Universal::PixelPerfectCamera::set_refResolutionX
// Il2CppName: set_refResolutionX
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Experimental::Rendering::Universal::PixelPerfectCamera::*)(int)>(&UnityEngine::Experimental::Rendering::Universal::PixelPerfectCamera::set_refResolutionX)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Experimental::Rendering::Universal::PixelPerfectCamera*), "set_refResolutionX", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Experimental::Rendering::Universal::PixelPerfectCamera::get_refResolutionY
// Il2CppName: get_refResolutionY
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::Experimental::Rendering::Universal::PixelPerfectCamera::*)()>(&UnityEngine::Experimental::Rendering::Universal::PixelPerfectCamera::get_refResolutionY)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Experimental::Rendering::Universal::PixelPerfectCamera*), "get_refResolutionY", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Experimental::Rendering::Universal::PixelPerfectCamera::set_refResolutionY
// Il2CppName: set_refResolutionY
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Experimental::Rendering::Universal::PixelPerfectCamera::*)(int)>(&UnityEngine::Experimental::Rendering::Universal::PixelPerfectCamera::set_refResolutionY)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Experimental::Rendering::Universal::PixelPerfectCamera*), "set_refResolutionY", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Experimental::Rendering::Universal::PixelPerfectCamera::get_upscaleRT
// Il2CppName: get_upscaleRT
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::Experimental::Rendering::Universal::PixelPerfectCamera::*)()>(&UnityEngine::Experimental::Rendering::Universal::PixelPerfectCamera::get_upscaleRT)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Experimental::Rendering::Universal::PixelPerfectCamera*), "get_upscaleRT", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Experimental::Rendering::Universal::PixelPerfectCamera::set_upscaleRT
// Il2CppName: set_upscaleRT
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Experimental::Rendering::Universal::PixelPerfectCamera::*)(bool)>(&UnityEngine::Experimental::Rendering::Universal::PixelPerfectCamera::set_upscaleRT)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Experimental::Rendering::Universal::PixelPerfectCamera*), "set_upscaleRT", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Experimental::Rendering::Universal::PixelPerfectCamera::get_pixelSnapping
// Il2CppName: get_pixelSnapping
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::Experimental::Rendering::Universal::PixelPerfectCamera::*)()>(&UnityEngine::Experimental::Rendering::Universal::PixelPerfectCamera::get_pixelSnapping)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Experimental::Rendering::Universal::PixelPerfectCamera*), "get_pixelSnapping", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Experimental::Rendering::Universal::PixelPerfectCamera::set_pixelSnapping
// Il2CppName: set_pixelSnapping
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Experimental::Rendering::Universal::PixelPerfectCamera::*)(bool)>(&UnityEngine::Experimental::Rendering::Universal::PixelPerfectCamera::set_pixelSnapping)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Experimental::Rendering::Universal::PixelPerfectCamera*), "set_pixelSnapping", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Experimental::Rendering::Universal::PixelPerfectCamera::get_cropFrameX
// Il2CppName: get_cropFrameX
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::Experimental::Rendering::Universal::PixelPerfectCamera::*)()>(&UnityEngine::Experimental::Rendering::Universal::PixelPerfectCamera::get_cropFrameX)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Experimental::Rendering::Universal::PixelPerfectCamera*), "get_cropFrameX", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Experimental::Rendering::Universal::PixelPerfectCamera::set_cropFrameX
// Il2CppName: set_cropFrameX
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Experimental::Rendering::Universal::PixelPerfectCamera::*)(bool)>(&UnityEngine::Experimental::Rendering::Universal::PixelPerfectCamera::set_cropFrameX)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Experimental::Rendering::Universal::PixelPerfectCamera*), "set_cropFrameX", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Experimental::Rendering::Universal::PixelPerfectCamera::get_cropFrameY
// Il2CppName: get_cropFrameY
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::Experimental::Rendering::Universal::PixelPerfectCamera::*)()>(&UnityEngine::Experimental::Rendering::Universal::PixelPerfectCamera::get_cropFrameY)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Experimental::Rendering::Universal::PixelPerfectCamera*), "get_cropFrameY", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Experimental::Rendering::Universal::PixelPerfectCamera::set_cropFrameY
// Il2CppName: set_cropFrameY
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Experimental::Rendering::Universal::PixelPerfectCamera::*)(bool)>(&UnityEngine::Experimental::Rendering::Universal::PixelPerfectCamera::set_cropFrameY)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Experimental::Rendering::Universal::PixelPerfectCamera*), "set_cropFrameY", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Experimental::Rendering::Universal::PixelPerfectCamera::get_stretchFill
// Il2CppName: get_stretchFill
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::Experimental::Rendering::Universal::PixelPerfectCamera::*)()>(&UnityEngine::Experimental::Rendering::Universal::PixelPerfectCamera::get_stretchFill)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Experimental::Rendering::Universal::PixelPerfectCamera*), "get_stretchFill", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Experimental::Rendering::Universal::PixelPerfectCamera::set_stretchFill
// Il2CppName: set_stretchFill
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Experimental::Rendering::Universal::PixelPerfectCamera::*)(bool)>(&UnityEngine::Experimental::Rendering::Universal::PixelPerfectCamera::set_stretchFill)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Experimental::Rendering::Universal::PixelPerfectCamera*), "set_stretchFill", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Experimental::Rendering::Universal::PixelPerfectCamera::get_pixelRatio
// Il2CppName: get_pixelRatio
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::Experimental::Rendering::Universal::PixelPerfectCamera::*)()>(&UnityEngine::Experimental::Rendering::Universal::PixelPerfectCamera::get_pixelRatio)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Experimental::Rendering::Universal::PixelPerfectCamera*), "get_pixelRatio", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Experimental::Rendering::Universal::PixelPerfectCamera::get_requiresUpscalePass
// Il2CppName: get_requiresUpscalePass
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::Experimental::Rendering::Universal::PixelPerfectCamera::*)()>(&UnityEngine::Experimental::Rendering::Universal::PixelPerfectCamera::get_requiresUpscalePass)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Experimental::Rendering::Universal::PixelPerfectCamera*), "get_requiresUpscalePass", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Experimental::Rendering::Universal::PixelPerfectCamera::RoundToPixel
// Il2CppName: RoundToPixel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector3 (UnityEngine::Experimental::Rendering::Universal::PixelPerfectCamera::*)(::UnityEngine::Vector3)>(&UnityEngine::Experimental::Rendering::Universal::PixelPerfectCamera::RoundToPixel)> {
  static const MethodInfo* get() {
    static auto* position = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Experimental::Rendering::Universal::PixelPerfectCamera*), "RoundToPixel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{position});
  }
};
// Writing MetadataGetter for method: UnityEngine::Experimental::Rendering::Universal::PixelPerfectCamera::CorrectCinemachineOrthoSize
// Il2CppName: CorrectCinemachineOrthoSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::Experimental::Rendering::Universal::PixelPerfectCamera::*)(float)>(&UnityEngine::Experimental::Rendering::Universal::PixelPerfectCamera::CorrectCinemachineOrthoSize)> {
  static const MethodInfo* get() {
    static auto* targetOrthoSize = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Experimental::Rendering::Universal::PixelPerfectCamera*), "CorrectCinemachineOrthoSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{targetOrthoSize});
  }
};
// Writing MetadataGetter for method: UnityEngine::Experimental::Rendering::Universal::PixelPerfectCamera::get_finalBlitFilterMode
// Il2CppName: get_finalBlitFilterMode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::FilterMode (UnityEngine::Experimental::Rendering::Universal::PixelPerfectCamera::*)()>(&UnityEngine::Experimental::Rendering::Universal::PixelPerfectCamera::get_finalBlitFilterMode)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Experimental::Rendering::Universal::PixelPerfectCamera*), "get_finalBlitFilterMode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Experimental::Rendering::Universal::PixelPerfectCamera::get_offscreenRTSize
// Il2CppName: get_offscreenRTSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector2Int (UnityEngine::Experimental::Rendering::Universal::PixelPerfectCamera::*)()>(&UnityEngine::Experimental::Rendering::Universal::PixelPerfectCamera::get_offscreenRTSize)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Experimental::Rendering::Universal::PixelPerfectCamera*), "get_offscreenRTSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Experimental::Rendering::Universal::PixelPerfectCamera::get_cameraRTSize
// Il2CppName: get_cameraRTSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector2Int (UnityEngine::Experimental::Rendering::Universal::PixelPerfectCamera::*)()>(&UnityEngine::Experimental::Rendering::Universal::PixelPerfectCamera::get_cameraRTSize)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Experimental::Rendering::Universal::PixelPerfectCamera*), "get_cameraRTSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Experimental::Rendering::Universal::PixelPerfectCamera::PixelSnap
// Il2CppName: PixelSnap
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Experimental::Rendering::Universal::PixelPerfectCamera::*)()>(&UnityEngine::Experimental::Rendering::Universal::PixelPerfectCamera::PixelSnap)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Experimental::Rendering::Universal::PixelPerfectCamera*), "PixelSnap", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Experimental::Rendering::Universal::PixelPerfectCamera::Awake
// Il2CppName: Awake
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Experimental::Rendering::Universal::PixelPerfectCamera::*)()>(&UnityEngine::Experimental::Rendering::Universal::PixelPerfectCamera::Awake)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Experimental::Rendering::Universal::PixelPerfectCamera*), "Awake", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Experimental::Rendering::Universal::PixelPerfectCamera::UpdateCameraProperties
// Il2CppName: UpdateCameraProperties
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Experimental::Rendering::Universal::PixelPerfectCamera::*)()>(&UnityEngine::Experimental::Rendering::Universal::PixelPerfectCamera::UpdateCameraProperties)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Experimental::Rendering::Universal::PixelPerfectCamera*), "UpdateCameraProperties", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Experimental::Rendering::Universal::PixelPerfectCamera::OnBeginCameraRendering
// Il2CppName: OnBeginCameraRendering
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Experimental::Rendering::Universal::PixelPerfectCamera::*)(::UnityEngine::Rendering::ScriptableRenderContext, ::UnityEngine::Camera*)>(&UnityEngine::Experimental::Rendering::Universal::PixelPerfectCamera::OnBeginCameraRendering)> {
  static const MethodInfo* get() {
    static auto* context = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "ScriptableRenderContext")->byval_arg;
    static auto* camera = &::il2cpp_utils::GetClassFromName("UnityEngine", "Camera")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Experimental::Rendering::Universal::PixelPerfectCamera*), "OnBeginCameraRendering", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{context, camera});
  }
};
// Writing MetadataGetter for method: UnityEngine::Experimental::Rendering::Universal::PixelPerfectCamera::OnEndCameraRendering
// Il2CppName: OnEndCameraRendering
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Experimental::Rendering::Universal::PixelPerfectCamera::*)(::UnityEngine::Rendering::ScriptableRenderContext, ::UnityEngine::Camera*)>(&UnityEngine::Experimental::Rendering::Universal::PixelPerfectCamera::OnEndCameraRendering)> {
  static const MethodInfo* get() {
    static auto* context = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "ScriptableRenderContext")->byval_arg;
    static auto* camera = &::il2cpp_utils::GetClassFromName("UnityEngine", "Camera")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Experimental::Rendering::Universal::PixelPerfectCamera*), "OnEndCameraRendering", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{context, camera});
  }
};
// Writing MetadataGetter for method: UnityEngine::Experimental::Rendering::Universal::PixelPerfectCamera::OnEnable
// Il2CppName: OnEnable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Experimental::Rendering::Universal::PixelPerfectCamera::*)()>(&UnityEngine::Experimental::Rendering::Universal::PixelPerfectCamera::OnEnable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Experimental::Rendering::Universal::PixelPerfectCamera*), "OnEnable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Experimental::Rendering::Universal::PixelPerfectCamera::OnDisable
// Il2CppName: OnDisable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Experimental::Rendering::Universal::PixelPerfectCamera::*)()>(&UnityEngine::Experimental::Rendering::Universal::PixelPerfectCamera::OnDisable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Experimental::Rendering::Universal::PixelPerfectCamera*), "OnDisable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Experimental::Rendering::Universal::PixelPerfectCamera::OnBeforeSerialize
// Il2CppName: OnBeforeSerialize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Experimental::Rendering::Universal::PixelPerfectCamera::*)()>(&UnityEngine::Experimental::Rendering::Universal::PixelPerfectCamera::OnBeforeSerialize)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Experimental::Rendering::Universal::PixelPerfectCamera*), "OnBeforeSerialize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Experimental::Rendering::Universal::PixelPerfectCamera::OnAfterDeserialize
// Il2CppName: OnAfterDeserialize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Experimental::Rendering::Universal::PixelPerfectCamera::*)()>(&UnityEngine::Experimental::Rendering::Universal::PixelPerfectCamera::OnAfterDeserialize)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Experimental::Rendering::Universal::PixelPerfectCamera*), "OnAfterDeserialize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Experimental::Rendering::Universal::PixelPerfectCamera::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
