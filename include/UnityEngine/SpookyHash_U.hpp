// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.SpookyHash
#include "UnityEngine/SpookyHash.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Completed includes
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::SpookyHash::U, "UnityEngine", "SpookyHash/U");
// Type namespace: UnityEngine
namespace UnityEngine {
  // WARNING Size may be invalid!
  // WARNING Layout: Explicit may not be correctly taken into account!
  // Autogenerated type: UnityEngine.SpookyHash/U
  // [TokenAttribute] Offset: FFFFFFFF
  struct SpookyHash::U/*, public ::System::ValueType*/ {
    public:
    public:
    // public System.Byte* p8
    // Size: 0x8
    // Offset: 0x0
    uint8_t* p8;
    // Field size check
    static_assert(sizeof(uint8_t*) == 0x8);
    // public System.UInt32* p32
    // Size: 0x8
    // Offset: 0x0
    uint* p32;
    // Field size check
    static_assert(sizeof(uint*) == 0x8);
    // public System.UInt64* p64
    // Size: 0x8
    // Offset: 0x0
    uint64_t* p64;
    // Field size check
    static_assert(sizeof(uint64_t*) == 0x8);
    // public System.UInt64 i
    // Size: 0x8
    // Offset: 0x0
    uint64_t i;
    // Field size check
    static_assert(sizeof(uint64_t) == 0x8);
    public:
    // Creating value type constructor for type: U
    constexpr U(uint8_t* p8_ = {}, uint* p32_ = {}, uint64_t* p64_ = {}, uint64_t i_ = {}) noexcept : p8{p8_}, p32{p32_}, p64{p64_}, i{i_} {}
    // Creating interface conversion operator: operator ::System::ValueType
    operator ::System::ValueType() noexcept {
      return *reinterpret_cast<::System::ValueType*>(this);
    }
    // Get instance field reference: public System.Byte* p8
    [[deprecated("Use field access instead!")]] uint8_t*& dyn_p8();
    // Get instance field reference: public System.UInt32* p32
    [[deprecated("Use field access instead!")]] uint*& dyn_p32();
    // Get instance field reference: public System.UInt64* p64
    [[deprecated("Use field access instead!")]] uint64_t*& dyn_p64();
    // Get instance field reference: public System.UInt64 i
    [[deprecated("Use field access instead!")]] uint64_t& dyn_i();
    // public System.Void .ctor(System.UInt16* p8)
    // Offset: 0x54B2920
    U(uint16_t* p8);
  }; // UnityEngine.SpookyHash/U
  // WARNING Not writing size check since size may be invalid!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::SpookyHash::U::U
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
