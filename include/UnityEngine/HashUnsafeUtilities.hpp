// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Hash128
  struct Hash128;
}
// Completed forward declares
// Type namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: HashUnsafeUtilities
  class HashUnsafeUtilities;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::HashUnsafeUtilities);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::HashUnsafeUtilities*, "UnityEngine", "HashUnsafeUtilities");
// Type namespace: UnityEngine
namespace UnityEngine {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.HashUnsafeUtilities
  // [TokenAttribute] Offset: FFFFFFFF
  class HashUnsafeUtilities : public ::Il2CppObject {
    public:
    // static public System.Void ComputeHash128(System.Void* data, System.UInt64 dataSize, System.UInt64* hash1, System.UInt64* hash2)
    // Offset: 0x54B2184
    static void ComputeHash128(void* data, uint64_t dataSize, uint64_t* hash1, uint64_t* hash2);
    // static public System.Void ComputeHash128(System.Void* data, System.UInt64 dataSize, UnityEngine.Hash128* hash)
    // Offset: 0x54B1E7C
    static void ComputeHash128(void* data, uint64_t dataSize, ::UnityEngine::Hash128* hash);
  }; // UnityEngine.HashUnsafeUtilities
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::HashUnsafeUtilities::ComputeHash128
// Il2CppName: ComputeHash128
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(void*, uint64_t, uint64_t*, uint64_t*)>(&UnityEngine::HashUnsafeUtilities::ComputeHash128)> {
  static const MethodInfo* get() {
    static auto* data = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Void"))->byval_arg;
    static auto* dataSize = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    static auto* hash1 = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "UInt64"))->byval_arg;
    static auto* hash2 = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "UInt64"))->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::HashUnsafeUtilities*), "ComputeHash128", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{data, dataSize, hash1, hash2});
  }
};
// Writing MetadataGetter for method: UnityEngine::HashUnsafeUtilities::ComputeHash128
// Il2CppName: ComputeHash128
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(void*, uint64_t, ::UnityEngine::Hash128*)>(&UnityEngine::HashUnsafeUtilities::ComputeHash128)> {
  static const MethodInfo* get() {
    static auto* data = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Void"))->byval_arg;
    static auto* dataSize = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    static auto* hash = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("UnityEngine", "Hash128"))->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::HashUnsafeUtilities*), "ComputeHash128", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{data, dataSize, hash});
  }
};
