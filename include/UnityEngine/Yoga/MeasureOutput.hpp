// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::Yoga
namespace UnityEngine::Yoga {
  // Forward declaring type: YogaSize
  struct YogaSize;
}
// Completed forward declares
// Type namespace: UnityEngine.Yoga
namespace UnityEngine::Yoga {
  // Forward declaring type: MeasureOutput
  class MeasureOutput;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::Yoga::MeasureOutput);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::Yoga::MeasureOutput*, "UnityEngine.Yoga", "MeasureOutput");
// Type namespace: UnityEngine.Yoga
namespace UnityEngine::Yoga {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.Yoga.MeasureOutput
  // [TokenAttribute] Offset: FFFFFFFF
  class MeasureOutput : public ::Il2CppObject {
    public:
    // static public UnityEngine.Yoga.YogaSize Make(System.Single width, System.Single height)
    // Offset: 0x558E584
    static ::UnityEngine::Yoga::YogaSize Make(float width, float height);
  }; // UnityEngine.Yoga.MeasureOutput
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::Yoga::MeasureOutput::Make
// Il2CppName: Make
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Yoga::YogaSize (*)(float, float)>(&UnityEngine::Yoga::MeasureOutput::Make)> {
  static const MethodInfo* get() {
    static auto* width = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* height = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Yoga::MeasureOutput*), "Make", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{width, height});
  }
};
