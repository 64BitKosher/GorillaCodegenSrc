// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Including type: UnityEngine.Yoga.YogaUnit
#include "UnityEngine/Yoga/YogaUnit.hpp"
// Completed includes
// Type namespace: UnityEngine.Yoga
namespace UnityEngine::Yoga {
  // Forward declaring type: YogaValue
  struct YogaValue;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::Yoga::YogaValue, "UnityEngine.Yoga", "YogaValue");
// Type namespace: UnityEngine.Yoga
namespace UnityEngine::Yoga {
  // Size: 0x8
  #pragma pack(push, 1)
  // WARNING Layout: Sequential may not be correctly taken into account!
  // Autogenerated type: UnityEngine.Yoga.YogaValue
  // [TokenAttribute] Offset: FFFFFFFF
  struct YogaValue/*, public ::System::ValueType*/ {
    public:
    public:
    // private System.Single value
    // Size: 0x4
    // Offset: 0x0
    float value;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private UnityEngine.Yoga.YogaUnit unit
    // Size: 0x4
    // Offset: 0x4
    ::UnityEngine::Yoga::YogaUnit unit;
    // Field size check
    static_assert(sizeof(::UnityEngine::Yoga::YogaUnit) == 0x4);
    public:
    // Creating value type constructor for type: YogaValue
    constexpr YogaValue(float value_ = {}, ::UnityEngine::Yoga::YogaUnit unit_ = {}) noexcept : value{value_}, unit{unit_} {}
    // Creating interface conversion operator: operator ::System::ValueType
    operator ::System::ValueType() noexcept {
      return *reinterpret_cast<::System::ValueType*>(this);
    }
    // Get instance field reference: private System.Single value
    [[deprecated("Use field access instead!")]] float& dyn_value();
    // Get instance field reference: private UnityEngine.Yoga.YogaUnit unit
    [[deprecated("Use field access instead!")]] ::UnityEngine::Yoga::YogaUnit& dyn_unit();
    // public UnityEngine.Yoga.YogaUnit get_Unit()
    // Offset: 0x558FDF8
    ::UnityEngine::Yoga::YogaUnit get_Unit();
    // public System.Single get_Value()
    // Offset: 0x558FE00
    float get_Value();
    // static public UnityEngine.Yoga.YogaValue Point(System.Single value)
    // Offset: 0x5591734
    static ::UnityEngine::Yoga::YogaValue Point(float value);
    // public System.Boolean Equals(UnityEngine.Yoga.YogaValue other)
    // Offset: 0x5591754
    bool Equals(::UnityEngine::Yoga::YogaValue other);
    // static public UnityEngine.Yoga.YogaValue Auto()
    // Offset: 0x5591868
    static ::UnityEngine::Yoga::YogaValue Auto();
    // static public UnityEngine.Yoga.YogaValue Percent(System.Single value)
    // Offset: 0x5591874
    static ::UnityEngine::Yoga::YogaValue Percent(float value);
    // public override System.Boolean Equals(System.Object obj)
    // Offset: 0x55917B4
    // Implemented from: System.ValueType
    // Base method: System.Boolean ValueType::Equals(System.Object obj)
    bool Equals(::Il2CppObject* obj);
    // public override System.Int32 GetHashCode()
    // Offset: 0x559182C
    // Implemented from: System.ValueType
    // Base method: System.Int32 ValueType::GetHashCode()
    int GetHashCode();
  }; // UnityEngine.Yoga.YogaValue
  #pragma pack(pop)
  static check_size<sizeof(YogaValue), 4 + sizeof(::UnityEngine::Yoga::YogaUnit)> __UnityEngine_Yoga_YogaValueSizeCheck;
  static_assert(sizeof(YogaValue) == 0x8);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::Yoga::YogaValue::get_Unit
// Il2CppName: get_Unit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Yoga::YogaUnit (UnityEngine::Yoga::YogaValue::*)()>(&UnityEngine::Yoga::YogaValue::get_Unit)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Yoga::YogaValue), "get_Unit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Yoga::YogaValue::get_Value
// Il2CppName: get_Value
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::Yoga::YogaValue::*)()>(&UnityEngine::Yoga::YogaValue::get_Value)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Yoga::YogaValue), "get_Value", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Yoga::YogaValue::Point
// Il2CppName: Point
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Yoga::YogaValue (*)(float)>(&UnityEngine::Yoga::YogaValue::Point)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Yoga::YogaValue), "Point", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Yoga::YogaValue::Equals
// Il2CppName: Equals
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::Yoga::YogaValue::*)(::UnityEngine::Yoga::YogaValue)>(&UnityEngine::Yoga::YogaValue::Equals)> {
  static const MethodInfo* get() {
    static auto* other = &::il2cpp_utils::GetClassFromName("UnityEngine.Yoga", "YogaValue")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Yoga::YogaValue), "Equals", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{other});
  }
};
// Writing MetadataGetter for method: UnityEngine::Yoga::YogaValue::Auto
// Il2CppName: Auto
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Yoga::YogaValue (*)()>(&UnityEngine::Yoga::YogaValue::Auto)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Yoga::YogaValue), "Auto", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Yoga::YogaValue::Percent
// Il2CppName: Percent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Yoga::YogaValue (*)(float)>(&UnityEngine::Yoga::YogaValue::Percent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Yoga::YogaValue), "Percent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Yoga::YogaValue::Equals
// Il2CppName: Equals
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::Yoga::YogaValue::*)(::Il2CppObject*)>(&UnityEngine::Yoga::YogaValue::Equals)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Yoga::YogaValue), "Equals", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: UnityEngine::Yoga::YogaValue::GetHashCode
// Il2CppName: GetHashCode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::Yoga::YogaValue::*)()>(&UnityEngine::Yoga::YogaValue::GetHashCode)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Yoga::YogaValue), "GetHashCode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
