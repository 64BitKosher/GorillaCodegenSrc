// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Enum
#include "System/Enum.hpp"
// Completed includes
// Type namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: MaterialPropertyType
  struct MaterialPropertyType;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::MaterialPropertyType, "UnityEngine", "MaterialPropertyType");
// Type namespace: UnityEngine
namespace UnityEngine {
  // Size: 0x4
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.MaterialPropertyType
  // [TokenAttribute] Offset: FFFFFFFF
  struct MaterialPropertyType/*, public ::System::Enum*/ {
    public:
    public:
    // public System.Int32 value__
    // Size: 0x4
    // Offset: 0x0
    int value;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Creating value type constructor for type: MaterialPropertyType
    constexpr MaterialPropertyType(int value_ = {}) noexcept : value{value_} {}
    // Creating interface conversion operator: operator ::System::Enum
    operator ::System::Enum() noexcept {
      return *reinterpret_cast<::System::Enum*>(this);
    }
    // Creating conversion operator: operator int
    constexpr operator int() const noexcept {
      return value;
    }
    // static field const value: static public UnityEngine.MaterialPropertyType Float
    static constexpr const int Float = 0;
    // Get static field: static public UnityEngine.MaterialPropertyType Float
    static ::UnityEngine::MaterialPropertyType _get_Float();
    // Set static field: static public UnityEngine.MaterialPropertyType Float
    static void _set_Float(::UnityEngine::MaterialPropertyType value);
    // static field const value: static public UnityEngine.MaterialPropertyType Int
    static constexpr const int Int = 1;
    // Get static field: static public UnityEngine.MaterialPropertyType Int
    static ::UnityEngine::MaterialPropertyType _get_Int();
    // Set static field: static public UnityEngine.MaterialPropertyType Int
    static void _set_Int(::UnityEngine::MaterialPropertyType value);
    // static field const value: static public UnityEngine.MaterialPropertyType Vector
    static constexpr const int Vector = 2;
    // Get static field: static public UnityEngine.MaterialPropertyType Vector
    static ::UnityEngine::MaterialPropertyType _get_Vector();
    // Set static field: static public UnityEngine.MaterialPropertyType Vector
    static void _set_Vector(::UnityEngine::MaterialPropertyType value);
    // static field const value: static public UnityEngine.MaterialPropertyType Matrix
    static constexpr const int Matrix = 3;
    // Get static field: static public UnityEngine.MaterialPropertyType Matrix
    static ::UnityEngine::MaterialPropertyType _get_Matrix();
    // Set static field: static public UnityEngine.MaterialPropertyType Matrix
    static void _set_Matrix(::UnityEngine::MaterialPropertyType value);
    // static field const value: static public UnityEngine.MaterialPropertyType Texture
    static constexpr const int Texture = 4;
    // Get static field: static public UnityEngine.MaterialPropertyType Texture
    static ::UnityEngine::MaterialPropertyType _get_Texture();
    // Set static field: static public UnityEngine.MaterialPropertyType Texture
    static void _set_Texture(::UnityEngine::MaterialPropertyType value);
    // static field const value: static public UnityEngine.MaterialPropertyType ConstantBuffer
    static constexpr const int ConstantBuffer = 5;
    // Get static field: static public UnityEngine.MaterialPropertyType ConstantBuffer
    static ::UnityEngine::MaterialPropertyType _get_ConstantBuffer();
    // Set static field: static public UnityEngine.MaterialPropertyType ConstantBuffer
    static void _set_ConstantBuffer(::UnityEngine::MaterialPropertyType value);
    // static field const value: static public UnityEngine.MaterialPropertyType ComputeBuffer
    static constexpr const int ComputeBuffer = 6;
    // Get static field: static public UnityEngine.MaterialPropertyType ComputeBuffer
    static ::UnityEngine::MaterialPropertyType _get_ComputeBuffer();
    // Set static field: static public UnityEngine.MaterialPropertyType ComputeBuffer
    static void _set_ComputeBuffer(::UnityEngine::MaterialPropertyType value);
    // Get instance field reference: public System.Int32 value__
    [[deprecated("Use field access instead!")]] int& dyn_value__();
  }; // UnityEngine.MaterialPropertyType
  #pragma pack(pop)
  static check_size<sizeof(MaterialPropertyType), 0 + sizeof(int)> __UnityEngine_MaterialPropertyTypeSizeCheck;
  static_assert(sizeof(MaterialPropertyType) == 0x4);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
