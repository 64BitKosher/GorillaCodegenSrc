// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/byref.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::Jobs
namespace UnityEngine::Jobs {
  // Forward declaring type: TransformAccess
  struct TransformAccess;
}
// Completed forward declares
// Type namespace: UnityEngine.Jobs
namespace UnityEngine::Jobs {
  // Forward declaring type: IJobParallelForTransform
  class IJobParallelForTransform;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::Jobs::IJobParallelForTransform);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::Jobs::IJobParallelForTransform*, "UnityEngine.Jobs", "IJobParallelForTransform");
// Type namespace: UnityEngine.Jobs
namespace UnityEngine::Jobs {
  // Size: 0x0
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.Jobs.IJobParallelForTransform
  // [TokenAttribute] Offset: FFFFFFFF
  // [JobProducerTypeAttribute] Offset: FFFFFFFF
  class IJobParallelForTransform {
    public:
    // public System.Void Execute(System.Int32 index, UnityEngine.Jobs.TransformAccess transform)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void Execute(int index, ::UnityEngine::Jobs::TransformAccess transform);
  }; // UnityEngine.Jobs.IJobParallelForTransform
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::Jobs::IJobParallelForTransform::Execute
// Il2CppName: Execute
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Jobs::IJobParallelForTransform::*)(int, ::UnityEngine::Jobs::TransformAccess)>(&UnityEngine::Jobs::IJobParallelForTransform::Execute)> {
  static const MethodInfo* get() {
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* transform = &::il2cpp_utils::GetClassFromName("UnityEngine.Jobs", "TransformAccess")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Jobs::IJobParallelForTransform*), "Execute", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{index, transform});
  }
};
