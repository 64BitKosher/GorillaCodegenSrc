// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.ParticleSystem
#include "UnityEngine/ParticleSystem.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: MeshRenderer
  class MeshRenderer;
  // Forward declaring type: Vector3
  struct Vector3;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::ParticleSystem::ShapeModule, "UnityEngine", "ParticleSystem/ShapeModule");
// Type namespace: UnityEngine
namespace UnityEngine {
  // Size: 0x8
  #pragma pack(push, 1)
  // WARNING Layout: Sequential may not be correctly taken into account!
  // Autogenerated type: UnityEngine.ParticleSystem/ShapeModule
  // [TokenAttribute] Offset: FFFFFFFF
  struct ParticleSystem::ShapeModule/*, public ::System::ValueType*/ {
    public:
    public:
    // UnityEngine.ParticleSystem m_ParticleSystem
    // Size: 0x8
    // Offset: 0x0
    ::UnityEngine::ParticleSystem* m_ParticleSystem;
    // Field size check
    static_assert(sizeof(::UnityEngine::ParticleSystem*) == 0x8);
    public:
    // Creating value type constructor for type: ShapeModule
    constexpr ShapeModule(::UnityEngine::ParticleSystem* m_ParticleSystem_ = {}) noexcept : m_ParticleSystem{m_ParticleSystem_} {}
    // Creating interface conversion operator: operator ::System::ValueType
    operator ::System::ValueType() noexcept {
      return *reinterpret_cast<::System::ValueType*>(this);
    }
    // Creating conversion operator: operator ::UnityEngine::ParticleSystem*
    constexpr operator ::UnityEngine::ParticleSystem*() const noexcept {
      return m_ParticleSystem;
    }
    // Get instance field reference: UnityEngine.ParticleSystem m_ParticleSystem
    [[deprecated("Use field access instead!")]] ::UnityEngine::ParticleSystem*& dyn_m_ParticleSystem();
    // System.Void .ctor(UnityEngine.ParticleSystem particleSystem)
    // Offset: 0x551F16C
    // ABORTED: conflicts with another method.  ShapeModule(::UnityEngine::ParticleSystem* particleSystem);
    // public System.Void set_enabled(System.Boolean value)
    // Offset: 0x55205C8
    void set_enabled(bool value);
    // public System.Void set_randomPositionAmount(System.Single value)
    // Offset: 0x5520650
    void set_randomPositionAmount(float value);
    // public System.Single get_radius()
    // Offset: 0x55206E8
    float get_radius();
    // public System.Void set_radius(System.Single value)
    // Offset: 0x5520760
    void set_radius(float value);
    // public UnityEngine.MeshRenderer get_meshRenderer()
    // Offset: 0x55207F8
    ::UnityEngine::MeshRenderer* get_meshRenderer();
    // public System.Void set_meshRenderer(UnityEngine.MeshRenderer value)
    // Offset: 0x5520870
    void set_meshRenderer(::UnityEngine::MeshRenderer* value);
    // public System.Void set_position(UnityEngine.Vector3 value)
    // Offset: 0x55208F8
    void set_position(::UnityEngine::Vector3 value);
    // static private System.Void set_enabled_Injected(ref UnityEngine.ParticleSystem/ShapeModule _unity_self, System.Boolean value)
    // Offset: 0x552060C
    static void set_enabled_Injected(ByRef<::UnityEngine::ParticleSystem::ShapeModule> _unity_self, bool value);
    // static private System.Void set_randomPositionAmount_Injected(ref UnityEngine.ParticleSystem/ShapeModule _unity_self, System.Single value)
    // Offset: 0x552069C
    static void set_randomPositionAmount_Injected(ByRef<::UnityEngine::ParticleSystem::ShapeModule> _unity_self, float value);
    // static private System.Single get_radius_Injected(ref UnityEngine.ParticleSystem/ShapeModule _unity_self)
    // Offset: 0x5520724
    static float get_radius_Injected(ByRef<::UnityEngine::ParticleSystem::ShapeModule> _unity_self);
    // static private System.Void set_radius_Injected(ref UnityEngine.ParticleSystem/ShapeModule _unity_self, System.Single value)
    // Offset: 0x55207AC
    static void set_radius_Injected(ByRef<::UnityEngine::ParticleSystem::ShapeModule> _unity_self, float value);
    // static private UnityEngine.MeshRenderer get_meshRenderer_Injected(ref UnityEngine.ParticleSystem/ShapeModule _unity_self)
    // Offset: 0x5520834
    static ::UnityEngine::MeshRenderer* get_meshRenderer_Injected(ByRef<::UnityEngine::ParticleSystem::ShapeModule> _unity_self);
    // static private System.Void set_meshRenderer_Injected(ref UnityEngine.ParticleSystem/ShapeModule _unity_self, UnityEngine.MeshRenderer value)
    // Offset: 0x55208B4
    static void set_meshRenderer_Injected(ByRef<::UnityEngine::ParticleSystem::ShapeModule> _unity_self, ::UnityEngine::MeshRenderer* value);
    // static private System.Void set_position_Injected(ref UnityEngine.ParticleSystem/ShapeModule _unity_self, ref UnityEngine.Vector3 value)
    // Offset: 0x552094C
    static void set_position_Injected(ByRef<::UnityEngine::ParticleSystem::ShapeModule> _unity_self, ByRef<::UnityEngine::Vector3> value);
  }; // UnityEngine.ParticleSystem/ShapeModule
  #pragma pack(pop)
  static check_size<sizeof(ParticleSystem::ShapeModule), 0 + sizeof(::UnityEngine::ParticleSystem*)> __UnityEngine_ParticleSystem_ShapeModuleSizeCheck;
  static_assert(sizeof(ParticleSystem::ShapeModule) == 0x8);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::ParticleSystem::ShapeModule::ShapeModule
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::ParticleSystem::ShapeModule::set_enabled
// Il2CppName: set_enabled
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::ParticleSystem::ShapeModule::*)(bool)>(&UnityEngine::ParticleSystem::ShapeModule::set_enabled)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ParticleSystem::ShapeModule), "set_enabled", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::ParticleSystem::ShapeModule::set_randomPositionAmount
// Il2CppName: set_randomPositionAmount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::ParticleSystem::ShapeModule::*)(float)>(&UnityEngine::ParticleSystem::ShapeModule::set_randomPositionAmount)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ParticleSystem::ShapeModule), "set_randomPositionAmount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::ParticleSystem::ShapeModule::get_radius
// Il2CppName: get_radius
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::ParticleSystem::ShapeModule::*)()>(&UnityEngine::ParticleSystem::ShapeModule::get_radius)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ParticleSystem::ShapeModule), "get_radius", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::ParticleSystem::ShapeModule::set_radius
// Il2CppName: set_radius
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::ParticleSystem::ShapeModule::*)(float)>(&UnityEngine::ParticleSystem::ShapeModule::set_radius)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ParticleSystem::ShapeModule), "set_radius", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::ParticleSystem::ShapeModule::get_meshRenderer
// Il2CppName: get_meshRenderer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::MeshRenderer* (UnityEngine::ParticleSystem::ShapeModule::*)()>(&UnityEngine::ParticleSystem::ShapeModule::get_meshRenderer)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ParticleSystem::ShapeModule), "get_meshRenderer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::ParticleSystem::ShapeModule::set_meshRenderer
// Il2CppName: set_meshRenderer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::ParticleSystem::ShapeModule::*)(::UnityEngine::MeshRenderer*)>(&UnityEngine::ParticleSystem::ShapeModule::set_meshRenderer)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "MeshRenderer")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ParticleSystem::ShapeModule), "set_meshRenderer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::ParticleSystem::ShapeModule::set_position
// Il2CppName: set_position
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::ParticleSystem::ShapeModule::*)(::UnityEngine::Vector3)>(&UnityEngine::ParticleSystem::ShapeModule::set_position)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ParticleSystem::ShapeModule), "set_position", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::ParticleSystem::ShapeModule::set_enabled_Injected
// Il2CppName: set_enabled_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(ByRef<::UnityEngine::ParticleSystem::ShapeModule>, bool)>(&UnityEngine::ParticleSystem::ShapeModule::set_enabled_Injected)> {
  static const MethodInfo* get() {
    static auto* _unity_self = &::il2cpp_utils::GetClassFromName("UnityEngine", "ParticleSystem/ShapeModule")->this_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ParticleSystem::ShapeModule), "set_enabled_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{_unity_self, value});
  }
};
// Writing MetadataGetter for method: UnityEngine::ParticleSystem::ShapeModule::set_randomPositionAmount_Injected
// Il2CppName: set_randomPositionAmount_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(ByRef<::UnityEngine::ParticleSystem::ShapeModule>, float)>(&UnityEngine::ParticleSystem::ShapeModule::set_randomPositionAmount_Injected)> {
  static const MethodInfo* get() {
    static auto* _unity_self = &::il2cpp_utils::GetClassFromName("UnityEngine", "ParticleSystem/ShapeModule")->this_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ParticleSystem::ShapeModule), "set_randomPositionAmount_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{_unity_self, value});
  }
};
// Writing MetadataGetter for method: UnityEngine::ParticleSystem::ShapeModule::get_radius_Injected
// Il2CppName: get_radius_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (*)(ByRef<::UnityEngine::ParticleSystem::ShapeModule>)>(&UnityEngine::ParticleSystem::ShapeModule::get_radius_Injected)> {
  static const MethodInfo* get() {
    static auto* _unity_self = &::il2cpp_utils::GetClassFromName("UnityEngine", "ParticleSystem/ShapeModule")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ParticleSystem::ShapeModule), "get_radius_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{_unity_self});
  }
};
// Writing MetadataGetter for method: UnityEngine::ParticleSystem::ShapeModule::set_radius_Injected
// Il2CppName: set_radius_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(ByRef<::UnityEngine::ParticleSystem::ShapeModule>, float)>(&UnityEngine::ParticleSystem::ShapeModule::set_radius_Injected)> {
  static const MethodInfo* get() {
    static auto* _unity_self = &::il2cpp_utils::GetClassFromName("UnityEngine", "ParticleSystem/ShapeModule")->this_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ParticleSystem::ShapeModule), "set_radius_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{_unity_self, value});
  }
};
// Writing MetadataGetter for method: UnityEngine::ParticleSystem::ShapeModule::get_meshRenderer_Injected
// Il2CppName: get_meshRenderer_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::MeshRenderer* (*)(ByRef<::UnityEngine::ParticleSystem::ShapeModule>)>(&UnityEngine::ParticleSystem::ShapeModule::get_meshRenderer_Injected)> {
  static const MethodInfo* get() {
    static auto* _unity_self = &::il2cpp_utils::GetClassFromName("UnityEngine", "ParticleSystem/ShapeModule")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ParticleSystem::ShapeModule), "get_meshRenderer_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{_unity_self});
  }
};
// Writing MetadataGetter for method: UnityEngine::ParticleSystem::ShapeModule::set_meshRenderer_Injected
// Il2CppName: set_meshRenderer_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(ByRef<::UnityEngine::ParticleSystem::ShapeModule>, ::UnityEngine::MeshRenderer*)>(&UnityEngine::ParticleSystem::ShapeModule::set_meshRenderer_Injected)> {
  static const MethodInfo* get() {
    static auto* _unity_self = &::il2cpp_utils::GetClassFromName("UnityEngine", "ParticleSystem/ShapeModule")->this_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "MeshRenderer")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ParticleSystem::ShapeModule), "set_meshRenderer_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{_unity_self, value});
  }
};
// Writing MetadataGetter for method: UnityEngine::ParticleSystem::ShapeModule::set_position_Injected
// Il2CppName: set_position_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(ByRef<::UnityEngine::ParticleSystem::ShapeModule>, ByRef<::UnityEngine::Vector3>)>(&UnityEngine::ParticleSystem::ShapeModule::set_position_Injected)> {
  static const MethodInfo* get() {
    static auto* _unity_self = &::il2cpp_utils::GetClassFromName("UnityEngine", "ParticleSystem/ShapeModule")->this_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ParticleSystem::ShapeModule), "set_position_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{_unity_self, value});
  }
};
