// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.Behaviour
#include "UnityEngine/Behaviour.hpp"
// Including type: System.Int32
#include "System/Int32.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: RenderingPath
  struct RenderingPath;
  // Forward declaring type: CameraType
  struct CameraType;
  // Forward declaring type: Color
  struct Color;
  // Forward declaring type: CameraClearFlags
  struct CameraClearFlags;
  // Forward declaring type: DepthTextureMode
  struct DepthTextureMode;
  // Forward declaring type: Vector2
  struct Vector2;
  // Forward declaring type: Rect
  struct Rect;
  // Forward declaring type: RenderTexture
  class RenderTexture;
  // Forward declaring type: Matrix4x4
  struct Matrix4x4;
  // Forward declaring type: Vector4
  struct Vector4;
  // Forward declaring type: Ray
  struct Ray;
  // Forward declaring type: StereoTargetEyeMask
  struct StereoTargetEyeMask;
  // Forward declaring type: Shader
  class Shader;
}
// Forward declaring namespace: UnityEngine::Rendering
namespace UnityEngine::Rendering {
  // Forward declaring type: OpaqueSortMode
  struct OpaqueSortMode;
  // Forward declaring type: ScriptableCullingParameters
  struct ScriptableCullingParameters;
}
// Completed forward declares
// Type namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Camera
  class Camera;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::Camera);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::Camera*, "UnityEngine", "Camera");
// Type namespace: UnityEngine
namespace UnityEngine {
  // Size: 0x18
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.Camera
  // [TokenAttribute] Offset: FFFFFFFF
  // [NativeHeaderAttribute] Offset: FFFFFFFF
  // [NativeHeaderAttribute] Offset: FFFFFFFF
  // [NativeHeaderAttribute] Offset: FFFFFFFF
  // [NativeHeaderAttribute] Offset: FFFFFFFF
  // [UsedByNativeCodeAttribute] Offset: FFFFFFFF
  // [NativeHeaderAttribute] Offset: FFFFFFFF
  // [NativeHeaderAttribute] Offset: FFFFFFFF
  // [RequireComponent] Offset: FFFFFFFF
  // [NativeHeaderAttribute] Offset: FFFFFFFF
  class Camera : public ::UnityEngine::Behaviour {
    public:
    // Nested type: ::UnityEngine::Camera::GateFitMode
    struct GateFitMode;
    // Nested type: ::UnityEngine::Camera::StereoscopicEye
    struct StereoscopicEye;
    // Nested type: ::UnityEngine::Camera::MonoOrStereoscopicEye
    struct MonoOrStereoscopicEye;
    // Nested type: ::UnityEngine::Camera::SceneViewFilterMode
    struct SceneViewFilterMode;
    // Nested type: ::UnityEngine::Camera::CameraCallback
    class CameraCallback;
    // static field const value: static public System.Single kMinAperture
    static constexpr const float kMinAperture = 0.7;
    // Get static field: static public System.Single kMinAperture
    static float _get_kMinAperture();
    // Set static field: static public System.Single kMinAperture
    static void _set_kMinAperture(float value);
    // static field const value: static public System.Single kMaxAperture
    static constexpr const float kMaxAperture = 32;
    // Get static field: static public System.Single kMaxAperture
    static float _get_kMaxAperture();
    // Set static field: static public System.Single kMaxAperture
    static void _set_kMaxAperture(float value);
    // static field const value: static public System.Int32 kMinBladeCount
    static constexpr const int kMinBladeCount = 3;
    // Get static field: static public System.Int32 kMinBladeCount
    static int _get_kMinBladeCount();
    // Set static field: static public System.Int32 kMinBladeCount
    static void _set_kMinBladeCount(int value);
    // static field const value: static public System.Int32 kMaxBladeCount
    static constexpr const int kMaxBladeCount = 11;
    // Get static field: static public System.Int32 kMaxBladeCount
    static int _get_kMaxBladeCount();
    // Set static field: static public System.Int32 kMaxBladeCount
    static void _set_kMaxBladeCount(int value);
    // Get static field: static public UnityEngine.Camera/CameraCallback onPreCull
    static ::UnityEngine::Camera::CameraCallback* _get_onPreCull();
    // Set static field: static public UnityEngine.Camera/CameraCallback onPreCull
    static void _set_onPreCull(::UnityEngine::Camera::CameraCallback* value);
    // Get static field: static public UnityEngine.Camera/CameraCallback onPreRender
    static ::UnityEngine::Camera::CameraCallback* _get_onPreRender();
    // Set static field: static public UnityEngine.Camera/CameraCallback onPreRender
    static void _set_onPreRender(::UnityEngine::Camera::CameraCallback* value);
    // Get static field: static public UnityEngine.Camera/CameraCallback onPostRender
    static ::UnityEngine::Camera::CameraCallback* _get_onPostRender();
    // Set static field: static public UnityEngine.Camera/CameraCallback onPostRender
    static void _set_onPostRender(::UnityEngine::Camera::CameraCallback* value);
    // public System.Single get_nearClipPlane()
    // Offset: 0x547DE68
    float get_nearClipPlane();
    // public System.Void set_nearClipPlane(System.Single value)
    // Offset: 0x547DEA4
    void set_nearClipPlane(float value);
    // public System.Single get_farClipPlane()
    // Offset: 0x547DEF0
    float get_farClipPlane();
    // public System.Void set_farClipPlane(System.Single value)
    // Offset: 0x547DF2C
    void set_farClipPlane(float value);
    // public System.Single get_fieldOfView()
    // Offset: 0x547DF78
    float get_fieldOfView();
    // public System.Void set_fieldOfView(System.Single value)
    // Offset: 0x547DFB4
    void set_fieldOfView(float value);
    // public System.Void set_renderingPath(UnityEngine.RenderingPath value)
    // Offset: 0x547E000
    void set_renderingPath(::UnityEngine::RenderingPath value);
    // public System.Boolean get_allowHDR()
    // Offset: 0x547E044
    bool get_allowHDR();
    // public System.Void set_allowHDR(System.Boolean value)
    // Offset: 0x547E080
    void set_allowHDR(bool value);
    // public System.Boolean get_allowMSAA()
    // Offset: 0x547E0C4
    bool get_allowMSAA();
    // public System.Void set_allowMSAA(System.Boolean value)
    // Offset: 0x547E100
    void set_allowMSAA(bool value);
    // public System.Boolean get_allowDynamicResolution()
    // Offset: 0x547E144
    bool get_allowDynamicResolution();
    // public System.Void set_forceIntoRenderTexture(System.Boolean value)
    // Offset: 0x547E180
    void set_forceIntoRenderTexture(bool value);
    // public System.Single get_orthographicSize()
    // Offset: 0x547E1C4
    float get_orthographicSize();
    // public System.Void set_orthographicSize(System.Single value)
    // Offset: 0x547E200
    void set_orthographicSize(float value);
    // public System.Boolean get_orthographic()
    // Offset: 0x547E24C
    bool get_orthographic();
    // public System.Void set_orthographic(System.Boolean value)
    // Offset: 0x547E288
    void set_orthographic(bool value);
    // public UnityEngine.Rendering.OpaqueSortMode get_opaqueSortMode()
    // Offset: 0x547E2CC
    ::UnityEngine::Rendering::OpaqueSortMode get_opaqueSortMode();
    // public System.Single get_depth()
    // Offset: 0x547E308
    float get_depth();
    // public System.Void set_depth(System.Single value)
    // Offset: 0x547E344
    void set_depth(float value);
    // public System.Single get_aspect()
    // Offset: 0x547E390
    float get_aspect();
    // public System.Void set_aspect(System.Single value)
    // Offset: 0x547E3CC
    void set_aspect(float value);
    // public System.Int32 get_cullingMask()
    // Offset: 0x547E418
    int get_cullingMask();
    // public System.Void set_cullingMask(System.Int32 value)
    // Offset: 0x547E454
    void set_cullingMask(int value);
    // public System.Int32 get_eventMask()
    // Offset: 0x547E498
    int get_eventMask();
    // public UnityEngine.CameraType get_cameraType()
    // Offset: 0x547E4D4
    ::UnityEngine::CameraType get_cameraType();
    // public UnityEngine.Color get_backgroundColor()
    // Offset: 0x547E510
    ::UnityEngine::Color get_backgroundColor();
    // public System.Void set_backgroundColor(UnityEngine.Color value)
    // Offset: 0x547E5AC
    void set_backgroundColor(::UnityEngine::Color value);
    // public UnityEngine.CameraClearFlags get_clearFlags()
    // Offset: 0x547E644
    ::UnityEngine::CameraClearFlags get_clearFlags();
    // public System.Void set_clearFlags(UnityEngine.CameraClearFlags value)
    // Offset: 0x547E680
    void set_clearFlags(::UnityEngine::CameraClearFlags value);
    // public UnityEngine.DepthTextureMode get_depthTextureMode()
    // Offset: 0x547E6C4
    ::UnityEngine::DepthTextureMode get_depthTextureMode();
    // public System.Void set_depthTextureMode(UnityEngine.DepthTextureMode value)
    // Offset: 0x547E700
    void set_depthTextureMode(::UnityEngine::DepthTextureMode value);
    // public System.Boolean get_usePhysicalProperties()
    // Offset: 0x547E744
    bool get_usePhysicalProperties();
    // public System.Void set_usePhysicalProperties(System.Boolean value)
    // Offset: 0x547E780
    void set_usePhysicalProperties(bool value);
    // public System.Single get_focusDistance()
    // Offset: 0x547E7C4
    float get_focusDistance();
    // public System.Void set_focusDistance(System.Single value)
    // Offset: 0x547E800
    void set_focusDistance(float value);
    // public System.Void set_focalLength(System.Single value)
    // Offset: 0x547E84C
    void set_focalLength(float value);
    // public UnityEngine.Vector2 get_sensorSize()
    // Offset: 0x547E898
    ::UnityEngine::Vector2 get_sensorSize();
    // public System.Void set_sensorSize(UnityEngine.Vector2 value)
    // Offset: 0x547E928
    void set_sensorSize(::UnityEngine::Vector2 value);
    // public UnityEngine.Vector2 get_lensShift()
    // Offset: 0x547E9B4
    ::UnityEngine::Vector2 get_lensShift();
    // public System.Void set_lensShift(UnityEngine.Vector2 value)
    // Offset: 0x547EA44
    void set_lensShift(::UnityEngine::Vector2 value);
    // public UnityEngine.Camera/GateFitMode get_gateFit()
    // Offset: 0x547EAD0
    ::UnityEngine::Camera::GateFitMode get_gateFit();
    // public System.Void set_gateFit(UnityEngine.Camera/GateFitMode value)
    // Offset: 0x547EB0C
    void set_gateFit(::UnityEngine::Camera::GateFitMode value);
    // public UnityEngine.Rect get_rect()
    // Offset: 0x547EB50
    ::UnityEngine::Rect get_rect();
    // public System.Void set_rect(UnityEngine.Rect value)
    // Offset: 0x547EBEC
    void set_rect(::UnityEngine::Rect value);
    // public UnityEngine.Rect get_pixelRect()
    // Offset: 0x547EC84
    ::UnityEngine::Rect get_pixelRect();
    // public System.Void set_pixelRect(UnityEngine.Rect value)
    // Offset: 0x547ED20
    void set_pixelRect(::UnityEngine::Rect value);
    // public System.Int32 get_pixelWidth()
    // Offset: 0x547EDB8
    int get_pixelWidth();
    // public System.Int32 get_pixelHeight()
    // Offset: 0x547EDF4
    int get_pixelHeight();
    // public UnityEngine.RenderTexture get_targetTexture()
    // Offset: 0x547EE30
    ::UnityEngine::RenderTexture* get_targetTexture();
    // public System.Void set_targetTexture(UnityEngine.RenderTexture value)
    // Offset: 0x547EE6C
    void set_targetTexture(::UnityEngine::RenderTexture* value);
    // public System.Int32 get_targetDisplay()
    // Offset: 0x547EEB0
    int get_targetDisplay();
    // public UnityEngine.Matrix4x4 get_worldToCameraMatrix()
    // Offset: 0x547EEEC
    ::UnityEngine::Matrix4x4 get_worldToCameraMatrix();
    // public System.Void set_worldToCameraMatrix(UnityEngine.Matrix4x4 value)
    // Offset: 0x547EF9C
    void set_worldToCameraMatrix(::UnityEngine::Matrix4x4 value);
    // public UnityEngine.Matrix4x4 get_projectionMatrix()
    // Offset: 0x547F024
    ::UnityEngine::Matrix4x4 get_projectionMatrix();
    // public System.Void set_projectionMatrix(UnityEngine.Matrix4x4 value)
    // Offset: 0x547F0D4
    void set_projectionMatrix(::UnityEngine::Matrix4x4 value);
    // public System.Void ResetWorldToCameraMatrix()
    // Offset: 0x547F15C
    void ResetWorldToCameraMatrix();
    // public System.Void ResetProjectionMatrix()
    // Offset: 0x547F198
    void ResetProjectionMatrix();
    // public UnityEngine.Matrix4x4 CalculateObliqueMatrix(UnityEngine.Vector4 clipPlane)
    // Offset: 0x547F1D4
    ::UnityEngine::Matrix4x4 CalculateObliqueMatrix(::UnityEngine::Vector4 clipPlane);
    // public UnityEngine.Vector3 WorldToScreenPoint(UnityEngine.Vector3 position, UnityEngine.Camera/MonoOrStereoscopicEye eye)
    // Offset: 0x547F2A0
    ::UnityEngine::Vector3 WorldToScreenPoint(::UnityEngine::Vector3 position, ::UnityEngine::Camera::MonoOrStereoscopicEye eye);
    // public UnityEngine.Vector3 ScreenToWorldPoint(UnityEngine.Vector3 position, UnityEngine.Camera/MonoOrStereoscopicEye eye)
    // Offset: 0x547F36C
    ::UnityEngine::Vector3 ScreenToWorldPoint(::UnityEngine::Vector3 position, ::UnityEngine::Camera::MonoOrStereoscopicEye eye);
    // public UnityEngine.Vector3 WorldToScreenPoint(UnityEngine.Vector3 position)
    // Offset: 0x547F438
    ::UnityEngine::Vector3 WorldToScreenPoint(::UnityEngine::Vector3 position);
    // public UnityEngine.Vector3 ScreenToWorldPoint(UnityEngine.Vector3 position)
    // Offset: 0x547F440
    ::UnityEngine::Vector3 ScreenToWorldPoint(::UnityEngine::Vector3 position);
    // public UnityEngine.Vector3 ScreenToViewportPoint(UnityEngine.Vector3 position)
    // Offset: 0x547F448
    ::UnityEngine::Vector3 ScreenToViewportPoint(::UnityEngine::Vector3 position);
    // private UnityEngine.Ray ScreenPointToRay(UnityEngine.Vector2 pos, UnityEngine.Camera/MonoOrStereoscopicEye eye)
    // Offset: 0x547F504
    ::UnityEngine::Ray ScreenPointToRay(::UnityEngine::Vector2 pos, ::UnityEngine::Camera::MonoOrStereoscopicEye eye);
    // public UnityEngine.Ray ScreenPointToRay(UnityEngine.Vector3 pos, UnityEngine.Camera/MonoOrStereoscopicEye eye)
    // Offset: 0x547F5D8
    ::UnityEngine::Ray ScreenPointToRay(::UnityEngine::Vector3 pos, ::UnityEngine::Camera::MonoOrStereoscopicEye eye);
    // public UnityEngine.Ray ScreenPointToRay(UnityEngine.Vector3 pos)
    // Offset: 0x547F610
    ::UnityEngine::Ray ScreenPointToRay(::UnityEngine::Vector3 pos);
    // private System.Void CalculateFrustumCornersInternal(UnityEngine.Rect viewport, System.Single z, UnityEngine.Camera/MonoOrStereoscopicEye eye, out UnityEngine.Vector3[] outCorners)
    // Offset: 0x547F654
    void CalculateFrustumCornersInternal(::UnityEngine::Rect viewport, float z, ::UnityEngine::Camera::MonoOrStereoscopicEye eye, ByRef<::ArrayW<::UnityEngine::Vector3>> outCorners);
    // public System.Void CalculateFrustumCorners(UnityEngine.Rect viewport, System.Single z, UnityEngine.Camera/MonoOrStereoscopicEye eye, UnityEngine.Vector3[] outCorners)
    // Offset: 0x547F73C
    void CalculateFrustumCorners(::UnityEngine::Rect viewport, float z, ::UnityEngine::Camera::MonoOrStereoscopicEye eye, ::ArrayW<::UnityEngine::Vector3> outCorners);
    // static public System.Single FieldOfViewToFocalLength(System.Single fieldOfView, System.Single sensorSize)
    // Offset: 0x547F7F0
    static float FieldOfViewToFocalLength(float fieldOfView, float sensorSize);
    // static public UnityEngine.Camera get_main()
    // Offset: 0x547F830
    static ::UnityEngine::Camera* get_main();
    // static public UnityEngine.Camera get_current()
    // Offset: 0x547F858
    static ::UnityEngine::Camera* get_current();
    // public System.Boolean get_stereoEnabled()
    // Offset: 0x547F880
    bool get_stereoEnabled();
    // public UnityEngine.StereoTargetEyeMask get_stereoTargetEye()
    // Offset: 0x547F8BC
    ::UnityEngine::StereoTargetEyeMask get_stereoTargetEye();
    // public System.Void set_stereoTargetEye(UnityEngine.StereoTargetEyeMask value)
    // Offset: 0x547F8F8
    void set_stereoTargetEye(::UnityEngine::StereoTargetEyeMask value);
    // public UnityEngine.Matrix4x4 GetStereoViewMatrix(UnityEngine.Camera/StereoscopicEye eye)
    // Offset: 0x547F93C
    ::UnityEngine::Matrix4x4 GetStereoViewMatrix(::UnityEngine::Camera::StereoscopicEye eye);
    // public UnityEngine.Matrix4x4 GetStereoProjectionMatrix(UnityEngine.Camera/StereoscopicEye eye)
    // Offset: 0x547FA0C
    ::UnityEngine::Matrix4x4 GetStereoProjectionMatrix(::UnityEngine::Camera::StereoscopicEye eye);
    // public System.Void SetStereoProjectionMatrix(UnityEngine.Camera/StereoscopicEye eye, UnityEngine.Matrix4x4 matrix)
    // Offset: 0x547FADC
    void SetStereoProjectionMatrix(::UnityEngine::Camera::StereoscopicEye eye, ::UnityEngine::Matrix4x4 matrix);
    // public System.Void ResetStereoProjectionMatrices()
    // Offset: 0x547FB84
    void ResetStereoProjectionMatrices();
    // public System.Void SetStereoViewMatrix(UnityEngine.Camera/StereoscopicEye eye, UnityEngine.Matrix4x4 matrix)
    // Offset: 0x547FBC0
    void SetStereoViewMatrix(::UnityEngine::Camera::StereoscopicEye eye, ::UnityEngine::Matrix4x4 matrix);
    // public System.Void ResetStereoViewMatrices()
    // Offset: 0x547FC68
    void ResetStereoViewMatrices();
    // static private System.Int32 GetAllCamerasCount()
    // Offset: 0x547FCA4
    static int GetAllCamerasCount();
    // static private System.Int32 GetAllCamerasImpl(out UnityEngine.Camera[] cam)
    // Offset: 0x547FCCC
    static int GetAllCamerasImpl(ByRef<::ArrayW<::UnityEngine::Camera*>> cam);
    // static public System.Int32 get_allCamerasCount()
    // Offset: 0x547FD08
    static int get_allCamerasCount();
    // static public UnityEngine.Camera[] get_allCameras()
    // Offset: 0x547FD30
    static ::ArrayW<::UnityEngine::Camera*> get_allCameras();
    // static public System.Int32 GetAllCameras(UnityEngine.Camera[] cameras)
    // Offset: 0x547FDD0
    static int GetAllCameras(::ArrayW<::UnityEngine::Camera*> cameras);
    // private System.Int32 GetFilterMode()
    // Offset: 0x547FEA8
    int GetFilterMode();
    // public UnityEngine.Camera/SceneViewFilterMode get_sceneViewFilterMode()
    // Offset: 0x547FEE4
    ::UnityEngine::Camera::SceneViewFilterMode get_sceneViewFilterMode();
    // public System.Void Render()
    // Offset: 0x547FF20
    void Render();
    // public System.Void RenderWithShader(UnityEngine.Shader shader, System.String replacementTag)
    // Offset: 0x547FF5C
    void RenderWithShader(::UnityEngine::Shader* shader, ::StringW replacementTag);
    // static public System.Void SetupCurrent(UnityEngine.Camera cur)
    // Offset: 0x547FFB0
    static void SetupCurrent(::UnityEngine::Camera* cur);
    // public System.Void CopyFrom(UnityEngine.Camera other)
    // Offset: 0x547FFEC
    void CopyFrom(::UnityEngine::Camera* other);
    // static private System.Void FireOnPreCull(UnityEngine.Camera cam)
    // Offset: 0x5480030
    static void FireOnPreCull(::UnityEngine::Camera* cam);
    // static private System.Void FireOnPreRender(UnityEngine.Camera cam)
    // Offset: 0x548009C
    static void FireOnPreRender(::UnityEngine::Camera* cam);
    // static private System.Void FireOnPostRender(UnityEngine.Camera cam)
    // Offset: 0x5480108
    static void FireOnPostRender(::UnityEngine::Camera* cam);
    // public System.Boolean TryGetCullingParameters(System.Boolean stereoAware, out UnityEngine.Rendering.ScriptableCullingParameters cullingParameters)
    // Offset: 0x5480174
    bool TryGetCullingParameters(bool stereoAware, ByRef<::UnityEngine::Rendering::ScriptableCullingParameters> cullingParameters);
    // static private System.Boolean GetCullingParameters_Internal(UnityEngine.Camera camera, System.Boolean stereoAware, out UnityEngine.Rendering.ScriptableCullingParameters cullingParameters, System.Int32 managedCullingParametersSize)
    // Offset: 0x54801CC
    static bool GetCullingParameters_Internal(::UnityEngine::Camera* camera, bool stereoAware, ByRef<::UnityEngine::Rendering::ScriptableCullingParameters> cullingParameters, int managedCullingParametersSize);
    // private System.Void get_backgroundColor_Injected(out UnityEngine.Color ret)
    // Offset: 0x547E568
    void get_backgroundColor_Injected(ByRef<::UnityEngine::Color> ret);
    // private System.Void set_backgroundColor_Injected(ref UnityEngine.Color value)
    // Offset: 0x547E600
    void set_backgroundColor_Injected(ByRef<::UnityEngine::Color> value);
    // private System.Void get_sensorSize_Injected(out UnityEngine.Vector2 ret)
    // Offset: 0x547E8E4
    void get_sensorSize_Injected(ByRef<::UnityEngine::Vector2> ret);
    // private System.Void set_sensorSize_Injected(ref UnityEngine.Vector2 value)
    // Offset: 0x547E970
    void set_sensorSize_Injected(ByRef<::UnityEngine::Vector2> value);
    // private System.Void get_lensShift_Injected(out UnityEngine.Vector2 ret)
    // Offset: 0x547EA00
    void get_lensShift_Injected(ByRef<::UnityEngine::Vector2> ret);
    // private System.Void set_lensShift_Injected(ref UnityEngine.Vector2 value)
    // Offset: 0x547EA8C
    void set_lensShift_Injected(ByRef<::UnityEngine::Vector2> value);
    // private System.Void get_rect_Injected(out UnityEngine.Rect ret)
    // Offset: 0x547EBA8
    void get_rect_Injected(ByRef<::UnityEngine::Rect> ret);
    // private System.Void set_rect_Injected(ref UnityEngine.Rect value)
    // Offset: 0x547EC40
    void set_rect_Injected(ByRef<::UnityEngine::Rect> value);
    // private System.Void get_pixelRect_Injected(out UnityEngine.Rect ret)
    // Offset: 0x547ECDC
    void get_pixelRect_Injected(ByRef<::UnityEngine::Rect> ret);
    // private System.Void set_pixelRect_Injected(ref UnityEngine.Rect value)
    // Offset: 0x547ED74
    void set_pixelRect_Injected(ByRef<::UnityEngine::Rect> value);
    // private System.Void get_worldToCameraMatrix_Injected(out UnityEngine.Matrix4x4 ret)
    // Offset: 0x547EF58
    void get_worldToCameraMatrix_Injected(ByRef<::UnityEngine::Matrix4x4> ret);
    // private System.Void set_worldToCameraMatrix_Injected(ref UnityEngine.Matrix4x4 value)
    // Offset: 0x547EFE0
    void set_worldToCameraMatrix_Injected(ByRef<::UnityEngine::Matrix4x4> value);
    // private System.Void get_projectionMatrix_Injected(out UnityEngine.Matrix4x4 ret)
    // Offset: 0x547F090
    void get_projectionMatrix_Injected(ByRef<::UnityEngine::Matrix4x4> ret);
    // private System.Void set_projectionMatrix_Injected(ref UnityEngine.Matrix4x4 value)
    // Offset: 0x547F118
    void set_projectionMatrix_Injected(ByRef<::UnityEngine::Matrix4x4> value);
    // private System.Void CalculateObliqueMatrix_Injected(ref UnityEngine.Vector4 clipPlane, out UnityEngine.Matrix4x4 ret)
    // Offset: 0x547F24C
    void CalculateObliqueMatrix_Injected(ByRef<::UnityEngine::Vector4> clipPlane, ByRef<::UnityEngine::Matrix4x4> ret);
    // private System.Void WorldToScreenPoint_Injected(ref UnityEngine.Vector3 position, UnityEngine.Camera/MonoOrStereoscopicEye eye, out UnityEngine.Vector3 ret)
    // Offset: 0x547F310
    void WorldToScreenPoint_Injected(ByRef<::UnityEngine::Vector3> position, ::UnityEngine::Camera::MonoOrStereoscopicEye eye, ByRef<::UnityEngine::Vector3> ret);
    // private System.Void ScreenToWorldPoint_Injected(ref UnityEngine.Vector3 position, UnityEngine.Camera/MonoOrStereoscopicEye eye, out UnityEngine.Vector3 ret)
    // Offset: 0x547F3DC
    void ScreenToWorldPoint_Injected(ByRef<::UnityEngine::Vector3> position, ::UnityEngine::Camera::MonoOrStereoscopicEye eye, ByRef<::UnityEngine::Vector3> ret);
    // private System.Void ScreenToViewportPoint_Injected(ref UnityEngine.Vector3 position, out UnityEngine.Vector3 ret)
    // Offset: 0x547F4B0
    void ScreenToViewportPoint_Injected(ByRef<::UnityEngine::Vector3> position, ByRef<::UnityEngine::Vector3> ret);
    // private System.Void ScreenPointToRay_Injected(ref UnityEngine.Vector2 pos, UnityEngine.Camera/MonoOrStereoscopicEye eye, out UnityEngine.Ray ret)
    // Offset: 0x547F57C
    void ScreenPointToRay_Injected(ByRef<::UnityEngine::Vector2> pos, ::UnityEngine::Camera::MonoOrStereoscopicEye eye, ByRef<::UnityEngine::Ray> ret);
    // private System.Void CalculateFrustumCornersInternal_Injected(ref UnityEngine.Rect viewport, System.Single z, UnityEngine.Camera/MonoOrStereoscopicEye eye, out UnityEngine.Vector3[] outCorners)
    // Offset: 0x547F6D0
    void CalculateFrustumCornersInternal_Injected(ByRef<::UnityEngine::Rect> viewport, float z, ::UnityEngine::Camera::MonoOrStereoscopicEye eye, ByRef<::ArrayW<::UnityEngine::Vector3>> outCorners);
    // private System.Void GetStereoViewMatrix_Injected(UnityEngine.Camera/StereoscopicEye eye, out UnityEngine.Matrix4x4 ret)
    // Offset: 0x547F9B8
    void GetStereoViewMatrix_Injected(::UnityEngine::Camera::StereoscopicEye eye, ByRef<::UnityEngine::Matrix4x4> ret);
    // private System.Void GetStereoProjectionMatrix_Injected(UnityEngine.Camera/StereoscopicEye eye, out UnityEngine.Matrix4x4 ret)
    // Offset: 0x547FA88
    void GetStereoProjectionMatrix_Injected(::UnityEngine::Camera::StereoscopicEye eye, ByRef<::UnityEngine::Matrix4x4> ret);
    // private System.Void SetStereoProjectionMatrix_Injected(UnityEngine.Camera/StereoscopicEye eye, ref UnityEngine.Matrix4x4 matrix)
    // Offset: 0x547FB30
    void SetStereoProjectionMatrix_Injected(::UnityEngine::Camera::StereoscopicEye eye, ByRef<::UnityEngine::Matrix4x4> matrix);
    // private System.Void SetStereoViewMatrix_Injected(UnityEngine.Camera/StereoscopicEye eye, ref UnityEngine.Matrix4x4 matrix)
    // Offset: 0x547FC14
    void SetStereoViewMatrix_Injected(::UnityEngine::Camera::StereoscopicEye eye, ByRef<::UnityEngine::Matrix4x4> matrix);
    // public System.Void .ctor()
    // Offset: 0x547DE60
    // Implemented from: UnityEngine.Behaviour
    // Base method: System.Void Behaviour::.ctor()
    // Base method: System.Void Component::.ctor()
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static Camera* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Camera::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<Camera*, creationType>()));
    }
  }; // UnityEngine.Camera
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::Camera::get_nearClipPlane
// Il2CppName: get_nearClipPlane
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::Camera::*)()>(&UnityEngine::Camera::get_nearClipPlane)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Camera*), "get_nearClipPlane", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Camera::set_nearClipPlane
// Il2CppName: set_nearClipPlane
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Camera::*)(float)>(&UnityEngine::Camera::set_nearClipPlane)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Camera*), "set_nearClipPlane", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Camera::get_farClipPlane
// Il2CppName: get_farClipPlane
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::Camera::*)()>(&UnityEngine::Camera::get_farClipPlane)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Camera*), "get_farClipPlane", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Camera::set_farClipPlane
// Il2CppName: set_farClipPlane
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Camera::*)(float)>(&UnityEngine::Camera::set_farClipPlane)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Camera*), "set_farClipPlane", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Camera::get_fieldOfView
// Il2CppName: get_fieldOfView
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::Camera::*)()>(&UnityEngine::Camera::get_fieldOfView)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Camera*), "get_fieldOfView", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Camera::set_fieldOfView
// Il2CppName: set_fieldOfView
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Camera::*)(float)>(&UnityEngine::Camera::set_fieldOfView)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Camera*), "set_fieldOfView", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Camera::set_renderingPath
// Il2CppName: set_renderingPath
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Camera::*)(::UnityEngine::RenderingPath)>(&UnityEngine::Camera::set_renderingPath)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "RenderingPath")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Camera*), "set_renderingPath", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Camera::get_allowHDR
// Il2CppName: get_allowHDR
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::Camera::*)()>(&UnityEngine::Camera::get_allowHDR)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Camera*), "get_allowHDR", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Camera::set_allowHDR
// Il2CppName: set_allowHDR
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Camera::*)(bool)>(&UnityEngine::Camera::set_allowHDR)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Camera*), "set_allowHDR", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Camera::get_allowMSAA
// Il2CppName: get_allowMSAA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::Camera::*)()>(&UnityEngine::Camera::get_allowMSAA)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Camera*), "get_allowMSAA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Camera::set_allowMSAA
// Il2CppName: set_allowMSAA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Camera::*)(bool)>(&UnityEngine::Camera::set_allowMSAA)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Camera*), "set_allowMSAA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Camera::get_allowDynamicResolution
// Il2CppName: get_allowDynamicResolution
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::Camera::*)()>(&UnityEngine::Camera::get_allowDynamicResolution)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Camera*), "get_allowDynamicResolution", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Camera::set_forceIntoRenderTexture
// Il2CppName: set_forceIntoRenderTexture
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Camera::*)(bool)>(&UnityEngine::Camera::set_forceIntoRenderTexture)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Camera*), "set_forceIntoRenderTexture", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Camera::get_orthographicSize
// Il2CppName: get_orthographicSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::Camera::*)()>(&UnityEngine::Camera::get_orthographicSize)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Camera*), "get_orthographicSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Camera::set_orthographicSize
// Il2CppName: set_orthographicSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Camera::*)(float)>(&UnityEngine::Camera::set_orthographicSize)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Camera*), "set_orthographicSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Camera::get_orthographic
// Il2CppName: get_orthographic
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::Camera::*)()>(&UnityEngine::Camera::get_orthographic)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Camera*), "get_orthographic", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Camera::set_orthographic
// Il2CppName: set_orthographic
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Camera::*)(bool)>(&UnityEngine::Camera::set_orthographic)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Camera*), "set_orthographic", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Camera::get_opaqueSortMode
// Il2CppName: get_opaqueSortMode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Rendering::OpaqueSortMode (UnityEngine::Camera::*)()>(&UnityEngine::Camera::get_opaqueSortMode)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Camera*), "get_opaqueSortMode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Camera::get_depth
// Il2CppName: get_depth
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::Camera::*)()>(&UnityEngine::Camera::get_depth)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Camera*), "get_depth", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Camera::set_depth
// Il2CppName: set_depth
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Camera::*)(float)>(&UnityEngine::Camera::set_depth)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Camera*), "set_depth", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Camera::get_aspect
// Il2CppName: get_aspect
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::Camera::*)()>(&UnityEngine::Camera::get_aspect)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Camera*), "get_aspect", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Camera::set_aspect
// Il2CppName: set_aspect
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Camera::*)(float)>(&UnityEngine::Camera::set_aspect)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Camera*), "set_aspect", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Camera::get_cullingMask
// Il2CppName: get_cullingMask
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::Camera::*)()>(&UnityEngine::Camera::get_cullingMask)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Camera*), "get_cullingMask", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Camera::set_cullingMask
// Il2CppName: set_cullingMask
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Camera::*)(int)>(&UnityEngine::Camera::set_cullingMask)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Camera*), "set_cullingMask", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Camera::get_eventMask
// Il2CppName: get_eventMask
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::Camera::*)()>(&UnityEngine::Camera::get_eventMask)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Camera*), "get_eventMask", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Camera::get_cameraType
// Il2CppName: get_cameraType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::CameraType (UnityEngine::Camera::*)()>(&UnityEngine::Camera::get_cameraType)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Camera*), "get_cameraType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Camera::get_backgroundColor
// Il2CppName: get_backgroundColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Color (UnityEngine::Camera::*)()>(&UnityEngine::Camera::get_backgroundColor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Camera*), "get_backgroundColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Camera::set_backgroundColor
// Il2CppName: set_backgroundColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Camera::*)(::UnityEngine::Color)>(&UnityEngine::Camera::set_backgroundColor)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Color")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Camera*), "set_backgroundColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Camera::get_clearFlags
// Il2CppName: get_clearFlags
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::CameraClearFlags (UnityEngine::Camera::*)()>(&UnityEngine::Camera::get_clearFlags)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Camera*), "get_clearFlags", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Camera::set_clearFlags
// Il2CppName: set_clearFlags
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Camera::*)(::UnityEngine::CameraClearFlags)>(&UnityEngine::Camera::set_clearFlags)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "CameraClearFlags")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Camera*), "set_clearFlags", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Camera::get_depthTextureMode
// Il2CppName: get_depthTextureMode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::DepthTextureMode (UnityEngine::Camera::*)()>(&UnityEngine::Camera::get_depthTextureMode)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Camera*), "get_depthTextureMode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Camera::set_depthTextureMode
// Il2CppName: set_depthTextureMode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Camera::*)(::UnityEngine::DepthTextureMode)>(&UnityEngine::Camera::set_depthTextureMode)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "DepthTextureMode")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Camera*), "set_depthTextureMode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Camera::get_usePhysicalProperties
// Il2CppName: get_usePhysicalProperties
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::Camera::*)()>(&UnityEngine::Camera::get_usePhysicalProperties)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Camera*), "get_usePhysicalProperties", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Camera::set_usePhysicalProperties
// Il2CppName: set_usePhysicalProperties
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Camera::*)(bool)>(&UnityEngine::Camera::set_usePhysicalProperties)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Camera*), "set_usePhysicalProperties", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Camera::get_focusDistance
// Il2CppName: get_focusDistance
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::Camera::*)()>(&UnityEngine::Camera::get_focusDistance)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Camera*), "get_focusDistance", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Camera::set_focusDistance
// Il2CppName: set_focusDistance
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Camera::*)(float)>(&UnityEngine::Camera::set_focusDistance)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Camera*), "set_focusDistance", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Camera::set_focalLength
// Il2CppName: set_focalLength
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Camera::*)(float)>(&UnityEngine::Camera::set_focalLength)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Camera*), "set_focalLength", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Camera::get_sensorSize
// Il2CppName: get_sensorSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector2 (UnityEngine::Camera::*)()>(&UnityEngine::Camera::get_sensorSize)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Camera*), "get_sensorSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Camera::set_sensorSize
// Il2CppName: set_sensorSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Camera::*)(::UnityEngine::Vector2)>(&UnityEngine::Camera::set_sensorSize)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector2")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Camera*), "set_sensorSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Camera::get_lensShift
// Il2CppName: get_lensShift
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector2 (UnityEngine::Camera::*)()>(&UnityEngine::Camera::get_lensShift)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Camera*), "get_lensShift", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Camera::set_lensShift
// Il2CppName: set_lensShift
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Camera::*)(::UnityEngine::Vector2)>(&UnityEngine::Camera::set_lensShift)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector2")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Camera*), "set_lensShift", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Camera::get_gateFit
// Il2CppName: get_gateFit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Camera::GateFitMode (UnityEngine::Camera::*)()>(&UnityEngine::Camera::get_gateFit)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Camera*), "get_gateFit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Camera::set_gateFit
// Il2CppName: set_gateFit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Camera::*)(::UnityEngine::Camera::GateFitMode)>(&UnityEngine::Camera::set_gateFit)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Camera/GateFitMode")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Camera*), "set_gateFit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Camera::get_rect
// Il2CppName: get_rect
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Rect (UnityEngine::Camera::*)()>(&UnityEngine::Camera::get_rect)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Camera*), "get_rect", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Camera::set_rect
// Il2CppName: set_rect
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Camera::*)(::UnityEngine::Rect)>(&UnityEngine::Camera::set_rect)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Rect")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Camera*), "set_rect", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Camera::get_pixelRect
// Il2CppName: get_pixelRect
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Rect (UnityEngine::Camera::*)()>(&UnityEngine::Camera::get_pixelRect)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Camera*), "get_pixelRect", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Camera::set_pixelRect
// Il2CppName: set_pixelRect
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Camera::*)(::UnityEngine::Rect)>(&UnityEngine::Camera::set_pixelRect)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Rect")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Camera*), "set_pixelRect", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Camera::get_pixelWidth
// Il2CppName: get_pixelWidth
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::Camera::*)()>(&UnityEngine::Camera::get_pixelWidth)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Camera*), "get_pixelWidth", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Camera::get_pixelHeight
// Il2CppName: get_pixelHeight
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::Camera::*)()>(&UnityEngine::Camera::get_pixelHeight)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Camera*), "get_pixelHeight", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Camera::get_targetTexture
// Il2CppName: get_targetTexture
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::RenderTexture* (UnityEngine::Camera::*)()>(&UnityEngine::Camera::get_targetTexture)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Camera*), "get_targetTexture", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Camera::set_targetTexture
// Il2CppName: set_targetTexture
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Camera::*)(::UnityEngine::RenderTexture*)>(&UnityEngine::Camera::set_targetTexture)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "RenderTexture")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Camera*), "set_targetTexture", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Camera::get_targetDisplay
// Il2CppName: get_targetDisplay
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::Camera::*)()>(&UnityEngine::Camera::get_targetDisplay)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Camera*), "get_targetDisplay", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Camera::get_worldToCameraMatrix
// Il2CppName: get_worldToCameraMatrix
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Matrix4x4 (UnityEngine::Camera::*)()>(&UnityEngine::Camera::get_worldToCameraMatrix)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Camera*), "get_worldToCameraMatrix", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Camera::set_worldToCameraMatrix
// Il2CppName: set_worldToCameraMatrix
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Camera::*)(::UnityEngine::Matrix4x4)>(&UnityEngine::Camera::set_worldToCameraMatrix)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Matrix4x4")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Camera*), "set_worldToCameraMatrix", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Camera::get_projectionMatrix
// Il2CppName: get_projectionMatrix
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Matrix4x4 (UnityEngine::Camera::*)()>(&UnityEngine::Camera::get_projectionMatrix)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Camera*), "get_projectionMatrix", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Camera::set_projectionMatrix
// Il2CppName: set_projectionMatrix
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Camera::*)(::UnityEngine::Matrix4x4)>(&UnityEngine::Camera::set_projectionMatrix)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Matrix4x4")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Camera*), "set_projectionMatrix", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Camera::ResetWorldToCameraMatrix
// Il2CppName: ResetWorldToCameraMatrix
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Camera::*)()>(&UnityEngine::Camera::ResetWorldToCameraMatrix)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Camera*), "ResetWorldToCameraMatrix", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Camera::ResetProjectionMatrix
// Il2CppName: ResetProjectionMatrix
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Camera::*)()>(&UnityEngine::Camera::ResetProjectionMatrix)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Camera*), "ResetProjectionMatrix", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Camera::CalculateObliqueMatrix
// Il2CppName: CalculateObliqueMatrix
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Matrix4x4 (UnityEngine::Camera::*)(::UnityEngine::Vector4)>(&UnityEngine::Camera::CalculateObliqueMatrix)> {
  static const MethodInfo* get() {
    static auto* clipPlane = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector4")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Camera*), "CalculateObliqueMatrix", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{clipPlane});
  }
};
// Writing MetadataGetter for method: UnityEngine::Camera::WorldToScreenPoint
// Il2CppName: WorldToScreenPoint
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector3 (UnityEngine::Camera::*)(::UnityEngine::Vector3, ::UnityEngine::Camera::MonoOrStereoscopicEye)>(&UnityEngine::Camera::WorldToScreenPoint)> {
  static const MethodInfo* get() {
    static auto* position = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* eye = &::il2cpp_utils::GetClassFromName("UnityEngine", "Camera/MonoOrStereoscopicEye")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Camera*), "WorldToScreenPoint", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{position, eye});
  }
};
// Writing MetadataGetter for method: UnityEngine::Camera::ScreenToWorldPoint
// Il2CppName: ScreenToWorldPoint
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector3 (UnityEngine::Camera::*)(::UnityEngine::Vector3, ::UnityEngine::Camera::MonoOrStereoscopicEye)>(&UnityEngine::Camera::ScreenToWorldPoint)> {
  static const MethodInfo* get() {
    static auto* position = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* eye = &::il2cpp_utils::GetClassFromName("UnityEngine", "Camera/MonoOrStereoscopicEye")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Camera*), "ScreenToWorldPoint", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{position, eye});
  }
};
// Writing MetadataGetter for method: UnityEngine::Camera::WorldToScreenPoint
// Il2CppName: WorldToScreenPoint
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector3 (UnityEngine::Camera::*)(::UnityEngine::Vector3)>(&UnityEngine::Camera::WorldToScreenPoint)> {
  static const MethodInfo* get() {
    static auto* position = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Camera*), "WorldToScreenPoint", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{position});
  }
};
// Writing MetadataGetter for method: UnityEngine::Camera::ScreenToWorldPoint
// Il2CppName: ScreenToWorldPoint
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector3 (UnityEngine::Camera::*)(::UnityEngine::Vector3)>(&UnityEngine::Camera::ScreenToWorldPoint)> {
  static const MethodInfo* get() {
    static auto* position = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Camera*), "ScreenToWorldPoint", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{position});
  }
};
// Writing MetadataGetter for method: UnityEngine::Camera::ScreenToViewportPoint
// Il2CppName: ScreenToViewportPoint
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector3 (UnityEngine::Camera::*)(::UnityEngine::Vector3)>(&UnityEngine::Camera::ScreenToViewportPoint)> {
  static const MethodInfo* get() {
    static auto* position = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Camera*), "ScreenToViewportPoint", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{position});
  }
};
// Writing MetadataGetter for method: UnityEngine::Camera::ScreenPointToRay
// Il2CppName: ScreenPointToRay
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Ray (UnityEngine::Camera::*)(::UnityEngine::Vector2, ::UnityEngine::Camera::MonoOrStereoscopicEye)>(&UnityEngine::Camera::ScreenPointToRay)> {
  static const MethodInfo* get() {
    static auto* pos = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector2")->byval_arg;
    static auto* eye = &::il2cpp_utils::GetClassFromName("UnityEngine", "Camera/MonoOrStereoscopicEye")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Camera*), "ScreenPointToRay", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{pos, eye});
  }
};
// Writing MetadataGetter for method: UnityEngine::Camera::ScreenPointToRay
// Il2CppName: ScreenPointToRay
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Ray (UnityEngine::Camera::*)(::UnityEngine::Vector3, ::UnityEngine::Camera::MonoOrStereoscopicEye)>(&UnityEngine::Camera::ScreenPointToRay)> {
  static const MethodInfo* get() {
    static auto* pos = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* eye = &::il2cpp_utils::GetClassFromName("UnityEngine", "Camera/MonoOrStereoscopicEye")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Camera*), "ScreenPointToRay", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{pos, eye});
  }
};
// Writing MetadataGetter for method: UnityEngine::Camera::ScreenPointToRay
// Il2CppName: ScreenPointToRay
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Ray (UnityEngine::Camera::*)(::UnityEngine::Vector3)>(&UnityEngine::Camera::ScreenPointToRay)> {
  static const MethodInfo* get() {
    static auto* pos = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Camera*), "ScreenPointToRay", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{pos});
  }
};
// Writing MetadataGetter for method: UnityEngine::Camera::CalculateFrustumCornersInternal
// Il2CppName: CalculateFrustumCornersInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Camera::*)(::UnityEngine::Rect, float, ::UnityEngine::Camera::MonoOrStereoscopicEye, ByRef<::ArrayW<::UnityEngine::Vector3>>)>(&UnityEngine::Camera::CalculateFrustumCornersInternal)> {
  static const MethodInfo* get() {
    static auto* viewport = &::il2cpp_utils::GetClassFromName("UnityEngine", "Rect")->byval_arg;
    static auto* z = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* eye = &::il2cpp_utils::GetClassFromName("UnityEngine", "Camera/MonoOrStereoscopicEye")->byval_arg;
    static auto* outCorners = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3"), 1)->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Camera*), "CalculateFrustumCornersInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{viewport, z, eye, outCorners});
  }
};
// Writing MetadataGetter for method: UnityEngine::Camera::CalculateFrustumCorners
// Il2CppName: CalculateFrustumCorners
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Camera::*)(::UnityEngine::Rect, float, ::UnityEngine::Camera::MonoOrStereoscopicEye, ::ArrayW<::UnityEngine::Vector3>)>(&UnityEngine::Camera::CalculateFrustumCorners)> {
  static const MethodInfo* get() {
    static auto* viewport = &::il2cpp_utils::GetClassFromName("UnityEngine", "Rect")->byval_arg;
    static auto* z = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* eye = &::il2cpp_utils::GetClassFromName("UnityEngine", "Camera/MonoOrStereoscopicEye")->byval_arg;
    static auto* outCorners = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Camera*), "CalculateFrustumCorners", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{viewport, z, eye, outCorners});
  }
};
// Writing MetadataGetter for method: UnityEngine::Camera::FieldOfViewToFocalLength
// Il2CppName: FieldOfViewToFocalLength
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (*)(float, float)>(&UnityEngine::Camera::FieldOfViewToFocalLength)> {
  static const MethodInfo* get() {
    static auto* fieldOfView = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* sensorSize = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Camera*), "FieldOfViewToFocalLength", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{fieldOfView, sensorSize});
  }
};
// Writing MetadataGetter for method: UnityEngine::Camera::get_main
// Il2CppName: get_main
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Camera* (*)()>(&UnityEngine::Camera::get_main)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Camera*), "get_main", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Camera::get_current
// Il2CppName: get_current
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Camera* (*)()>(&UnityEngine::Camera::get_current)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Camera*), "get_current", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Camera::get_stereoEnabled
// Il2CppName: get_stereoEnabled
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::Camera::*)()>(&UnityEngine::Camera::get_stereoEnabled)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Camera*), "get_stereoEnabled", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Camera::get_stereoTargetEye
// Il2CppName: get_stereoTargetEye
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::StereoTargetEyeMask (UnityEngine::Camera::*)()>(&UnityEngine::Camera::get_stereoTargetEye)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Camera*), "get_stereoTargetEye", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Camera::set_stereoTargetEye
// Il2CppName: set_stereoTargetEye
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Camera::*)(::UnityEngine::StereoTargetEyeMask)>(&UnityEngine::Camera::set_stereoTargetEye)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "StereoTargetEyeMask")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Camera*), "set_stereoTargetEye", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Camera::GetStereoViewMatrix
// Il2CppName: GetStereoViewMatrix
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Matrix4x4 (UnityEngine::Camera::*)(::UnityEngine::Camera::StereoscopicEye)>(&UnityEngine::Camera::GetStereoViewMatrix)> {
  static const MethodInfo* get() {
    static auto* eye = &::il2cpp_utils::GetClassFromName("UnityEngine", "Camera/StereoscopicEye")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Camera*), "GetStereoViewMatrix", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{eye});
  }
};
// Writing MetadataGetter for method: UnityEngine::Camera::GetStereoProjectionMatrix
// Il2CppName: GetStereoProjectionMatrix
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Matrix4x4 (UnityEngine::Camera::*)(::UnityEngine::Camera::StereoscopicEye)>(&UnityEngine::Camera::GetStereoProjectionMatrix)> {
  static const MethodInfo* get() {
    static auto* eye = &::il2cpp_utils::GetClassFromName("UnityEngine", "Camera/StereoscopicEye")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Camera*), "GetStereoProjectionMatrix", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{eye});
  }
};
// Writing MetadataGetter for method: UnityEngine::Camera::SetStereoProjectionMatrix
// Il2CppName: SetStereoProjectionMatrix
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Camera::*)(::UnityEngine::Camera::StereoscopicEye, ::UnityEngine::Matrix4x4)>(&UnityEngine::Camera::SetStereoProjectionMatrix)> {
  static const MethodInfo* get() {
    static auto* eye = &::il2cpp_utils::GetClassFromName("UnityEngine", "Camera/StereoscopicEye")->byval_arg;
    static auto* matrix = &::il2cpp_utils::GetClassFromName("UnityEngine", "Matrix4x4")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Camera*), "SetStereoProjectionMatrix", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{eye, matrix});
  }
};
// Writing MetadataGetter for method: UnityEngine::Camera::ResetStereoProjectionMatrices
// Il2CppName: ResetStereoProjectionMatrices
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Camera::*)()>(&UnityEngine::Camera::ResetStereoProjectionMatrices)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Camera*), "ResetStereoProjectionMatrices", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Camera::SetStereoViewMatrix
// Il2CppName: SetStereoViewMatrix
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Camera::*)(::UnityEngine::Camera::StereoscopicEye, ::UnityEngine::Matrix4x4)>(&UnityEngine::Camera::SetStereoViewMatrix)> {
  static const MethodInfo* get() {
    static auto* eye = &::il2cpp_utils::GetClassFromName("UnityEngine", "Camera/StereoscopicEye")->byval_arg;
    static auto* matrix = &::il2cpp_utils::GetClassFromName("UnityEngine", "Matrix4x4")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Camera*), "SetStereoViewMatrix", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{eye, matrix});
  }
};
// Writing MetadataGetter for method: UnityEngine::Camera::ResetStereoViewMatrices
// Il2CppName: ResetStereoViewMatrices
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Camera::*)()>(&UnityEngine::Camera::ResetStereoViewMatrices)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Camera*), "ResetStereoViewMatrices", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Camera::GetAllCamerasCount
// Il2CppName: GetAllCamerasCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)()>(&UnityEngine::Camera::GetAllCamerasCount)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Camera*), "GetAllCamerasCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Camera::GetAllCamerasImpl
// Il2CppName: GetAllCamerasImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(ByRef<::ArrayW<::UnityEngine::Camera*>>)>(&UnityEngine::Camera::GetAllCamerasImpl)> {
  static const MethodInfo* get() {
    static auto* cam = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("UnityEngine", "Camera"), 1)->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Camera*), "GetAllCamerasImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{cam});
  }
};
// Writing MetadataGetter for method: UnityEngine::Camera::get_allCamerasCount
// Il2CppName: get_allCamerasCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)()>(&UnityEngine::Camera::get_allCamerasCount)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Camera*), "get_allCamerasCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Camera::get_allCameras
// Il2CppName: get_allCameras
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::UnityEngine::Camera*> (*)()>(&UnityEngine::Camera::get_allCameras)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Camera*), "get_allCameras", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Camera::GetAllCameras
// Il2CppName: GetAllCameras
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::ArrayW<::UnityEngine::Camera*>)>(&UnityEngine::Camera::GetAllCameras)> {
  static const MethodInfo* get() {
    static auto* cameras = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("UnityEngine", "Camera"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Camera*), "GetAllCameras", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{cameras});
  }
};
// Writing MetadataGetter for method: UnityEngine::Camera::GetFilterMode
// Il2CppName: GetFilterMode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::Camera::*)()>(&UnityEngine::Camera::GetFilterMode)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Camera*), "GetFilterMode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Camera::get_sceneViewFilterMode
// Il2CppName: get_sceneViewFilterMode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Camera::SceneViewFilterMode (UnityEngine::Camera::*)()>(&UnityEngine::Camera::get_sceneViewFilterMode)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Camera*), "get_sceneViewFilterMode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Camera::Render
// Il2CppName: Render
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Camera::*)()>(&UnityEngine::Camera::Render)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Camera*), "Render", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Camera::RenderWithShader
// Il2CppName: RenderWithShader
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Camera::*)(::UnityEngine::Shader*, ::StringW)>(&UnityEngine::Camera::RenderWithShader)> {
  static const MethodInfo* get() {
    static auto* shader = &::il2cpp_utils::GetClassFromName("UnityEngine", "Shader")->byval_arg;
    static auto* replacementTag = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Camera*), "RenderWithShader", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{shader, replacementTag});
  }
};
// Writing MetadataGetter for method: UnityEngine::Camera::SetupCurrent
// Il2CppName: SetupCurrent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::Camera*)>(&UnityEngine::Camera::SetupCurrent)> {
  static const MethodInfo* get() {
    static auto* cur = &::il2cpp_utils::GetClassFromName("UnityEngine", "Camera")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Camera*), "SetupCurrent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{cur});
  }
};
// Writing MetadataGetter for method: UnityEngine::Camera::CopyFrom
// Il2CppName: CopyFrom
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Camera::*)(::UnityEngine::Camera*)>(&UnityEngine::Camera::CopyFrom)> {
  static const MethodInfo* get() {
    static auto* other = &::il2cpp_utils::GetClassFromName("UnityEngine", "Camera")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Camera*), "CopyFrom", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{other});
  }
};
// Writing MetadataGetter for method: UnityEngine::Camera::FireOnPreCull
// Il2CppName: FireOnPreCull
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::Camera*)>(&UnityEngine::Camera::FireOnPreCull)> {
  static const MethodInfo* get() {
    static auto* cam = &::il2cpp_utils::GetClassFromName("UnityEngine", "Camera")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Camera*), "FireOnPreCull", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{cam});
  }
};
// Writing MetadataGetter for method: UnityEngine::Camera::FireOnPreRender
// Il2CppName: FireOnPreRender
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::Camera*)>(&UnityEngine::Camera::FireOnPreRender)> {
  static const MethodInfo* get() {
    static auto* cam = &::il2cpp_utils::GetClassFromName("UnityEngine", "Camera")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Camera*), "FireOnPreRender", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{cam});
  }
};
// Writing MetadataGetter for method: UnityEngine::Camera::FireOnPostRender
// Il2CppName: FireOnPostRender
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::Camera*)>(&UnityEngine::Camera::FireOnPostRender)> {
  static const MethodInfo* get() {
    static auto* cam = &::il2cpp_utils::GetClassFromName("UnityEngine", "Camera")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Camera*), "FireOnPostRender", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{cam});
  }
};
// Writing MetadataGetter for method: UnityEngine::Camera::TryGetCullingParameters
// Il2CppName: TryGetCullingParameters
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::Camera::*)(bool, ByRef<::UnityEngine::Rendering::ScriptableCullingParameters>)>(&UnityEngine::Camera::TryGetCullingParameters)> {
  static const MethodInfo* get() {
    static auto* stereoAware = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* cullingParameters = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "ScriptableCullingParameters")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Camera*), "TryGetCullingParameters", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stereoAware, cullingParameters});
  }
};
// Writing MetadataGetter for method: UnityEngine::Camera::GetCullingParameters_Internal
// Il2CppName: GetCullingParameters_Internal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::UnityEngine::Camera*, bool, ByRef<::UnityEngine::Rendering::ScriptableCullingParameters>, int)>(&UnityEngine::Camera::GetCullingParameters_Internal)> {
  static const MethodInfo* get() {
    static auto* camera = &::il2cpp_utils::GetClassFromName("UnityEngine", "Camera")->byval_arg;
    static auto* stereoAware = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* cullingParameters = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "ScriptableCullingParameters")->this_arg;
    static auto* managedCullingParametersSize = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Camera*), "GetCullingParameters_Internal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{camera, stereoAware, cullingParameters, managedCullingParametersSize});
  }
};
// Writing MetadataGetter for method: UnityEngine::Camera::get_backgroundColor_Injected
// Il2CppName: get_backgroundColor_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Camera::*)(ByRef<::UnityEngine::Color>)>(&UnityEngine::Camera::get_backgroundColor_Injected)> {
  static const MethodInfo* get() {
    static auto* ret = &::il2cpp_utils::GetClassFromName("UnityEngine", "Color")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Camera*), "get_backgroundColor_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ret});
  }
};
// Writing MetadataGetter for method: UnityEngine::Camera::set_backgroundColor_Injected
// Il2CppName: set_backgroundColor_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Camera::*)(ByRef<::UnityEngine::Color>)>(&UnityEngine::Camera::set_backgroundColor_Injected)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Color")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Camera*), "set_backgroundColor_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Camera::get_sensorSize_Injected
// Il2CppName: get_sensorSize_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Camera::*)(ByRef<::UnityEngine::Vector2>)>(&UnityEngine::Camera::get_sensorSize_Injected)> {
  static const MethodInfo* get() {
    static auto* ret = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector2")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Camera*), "get_sensorSize_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ret});
  }
};
// Writing MetadataGetter for method: UnityEngine::Camera::set_sensorSize_Injected
// Il2CppName: set_sensorSize_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Camera::*)(ByRef<::UnityEngine::Vector2>)>(&UnityEngine::Camera::set_sensorSize_Injected)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector2")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Camera*), "set_sensorSize_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Camera::get_lensShift_Injected
// Il2CppName: get_lensShift_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Camera::*)(ByRef<::UnityEngine::Vector2>)>(&UnityEngine::Camera::get_lensShift_Injected)> {
  static const MethodInfo* get() {
    static auto* ret = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector2")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Camera*), "get_lensShift_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ret});
  }
};
// Writing MetadataGetter for method: UnityEngine::Camera::set_lensShift_Injected
// Il2CppName: set_lensShift_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Camera::*)(ByRef<::UnityEngine::Vector2>)>(&UnityEngine::Camera::set_lensShift_Injected)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector2")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Camera*), "set_lensShift_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Camera::get_rect_Injected
// Il2CppName: get_rect_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Camera::*)(ByRef<::UnityEngine::Rect>)>(&UnityEngine::Camera::get_rect_Injected)> {
  static const MethodInfo* get() {
    static auto* ret = &::il2cpp_utils::GetClassFromName("UnityEngine", "Rect")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Camera*), "get_rect_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ret});
  }
};
// Writing MetadataGetter for method: UnityEngine::Camera::set_rect_Injected
// Il2CppName: set_rect_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Camera::*)(ByRef<::UnityEngine::Rect>)>(&UnityEngine::Camera::set_rect_Injected)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Rect")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Camera*), "set_rect_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Camera::get_pixelRect_Injected
// Il2CppName: get_pixelRect_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Camera::*)(ByRef<::UnityEngine::Rect>)>(&UnityEngine::Camera::get_pixelRect_Injected)> {
  static const MethodInfo* get() {
    static auto* ret = &::il2cpp_utils::GetClassFromName("UnityEngine", "Rect")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Camera*), "get_pixelRect_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ret});
  }
};
// Writing MetadataGetter for method: UnityEngine::Camera::set_pixelRect_Injected
// Il2CppName: set_pixelRect_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Camera::*)(ByRef<::UnityEngine::Rect>)>(&UnityEngine::Camera::set_pixelRect_Injected)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Rect")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Camera*), "set_pixelRect_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Camera::get_worldToCameraMatrix_Injected
// Il2CppName: get_worldToCameraMatrix_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Camera::*)(ByRef<::UnityEngine::Matrix4x4>)>(&UnityEngine::Camera::get_worldToCameraMatrix_Injected)> {
  static const MethodInfo* get() {
    static auto* ret = &::il2cpp_utils::GetClassFromName("UnityEngine", "Matrix4x4")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Camera*), "get_worldToCameraMatrix_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ret});
  }
};
// Writing MetadataGetter for method: UnityEngine::Camera::set_worldToCameraMatrix_Injected
// Il2CppName: set_worldToCameraMatrix_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Camera::*)(ByRef<::UnityEngine::Matrix4x4>)>(&UnityEngine::Camera::set_worldToCameraMatrix_Injected)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Matrix4x4")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Camera*), "set_worldToCameraMatrix_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Camera::get_projectionMatrix_Injected
// Il2CppName: get_projectionMatrix_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Camera::*)(ByRef<::UnityEngine::Matrix4x4>)>(&UnityEngine::Camera::get_projectionMatrix_Injected)> {
  static const MethodInfo* get() {
    static auto* ret = &::il2cpp_utils::GetClassFromName("UnityEngine", "Matrix4x4")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Camera*), "get_projectionMatrix_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ret});
  }
};
// Writing MetadataGetter for method: UnityEngine::Camera::set_projectionMatrix_Injected
// Il2CppName: set_projectionMatrix_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Camera::*)(ByRef<::UnityEngine::Matrix4x4>)>(&UnityEngine::Camera::set_projectionMatrix_Injected)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Matrix4x4")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Camera*), "set_projectionMatrix_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Camera::CalculateObliqueMatrix_Injected
// Il2CppName: CalculateObliqueMatrix_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Camera::*)(ByRef<::UnityEngine::Vector4>, ByRef<::UnityEngine::Matrix4x4>)>(&UnityEngine::Camera::CalculateObliqueMatrix_Injected)> {
  static const MethodInfo* get() {
    static auto* clipPlane = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector4")->this_arg;
    static auto* ret = &::il2cpp_utils::GetClassFromName("UnityEngine", "Matrix4x4")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Camera*), "CalculateObliqueMatrix_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{clipPlane, ret});
  }
};
// Writing MetadataGetter for method: UnityEngine::Camera::WorldToScreenPoint_Injected
// Il2CppName: WorldToScreenPoint_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Camera::*)(ByRef<::UnityEngine::Vector3>, ::UnityEngine::Camera::MonoOrStereoscopicEye, ByRef<::UnityEngine::Vector3>)>(&UnityEngine::Camera::WorldToScreenPoint_Injected)> {
  static const MethodInfo* get() {
    static auto* position = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->this_arg;
    static auto* eye = &::il2cpp_utils::GetClassFromName("UnityEngine", "Camera/MonoOrStereoscopicEye")->byval_arg;
    static auto* ret = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Camera*), "WorldToScreenPoint_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{position, eye, ret});
  }
};
// Writing MetadataGetter for method: UnityEngine::Camera::ScreenToWorldPoint_Injected
// Il2CppName: ScreenToWorldPoint_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Camera::*)(ByRef<::UnityEngine::Vector3>, ::UnityEngine::Camera::MonoOrStereoscopicEye, ByRef<::UnityEngine::Vector3>)>(&UnityEngine::Camera::ScreenToWorldPoint_Injected)> {
  static const MethodInfo* get() {
    static auto* position = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->this_arg;
    static auto* eye = &::il2cpp_utils::GetClassFromName("UnityEngine", "Camera/MonoOrStereoscopicEye")->byval_arg;
    static auto* ret = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Camera*), "ScreenToWorldPoint_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{position, eye, ret});
  }
};
// Writing MetadataGetter for method: UnityEngine::Camera::ScreenToViewportPoint_Injected
// Il2CppName: ScreenToViewportPoint_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Camera::*)(ByRef<::UnityEngine::Vector3>, ByRef<::UnityEngine::Vector3>)>(&UnityEngine::Camera::ScreenToViewportPoint_Injected)> {
  static const MethodInfo* get() {
    static auto* position = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->this_arg;
    static auto* ret = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Camera*), "ScreenToViewportPoint_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{position, ret});
  }
};
// Writing MetadataGetter for method: UnityEngine::Camera::ScreenPointToRay_Injected
// Il2CppName: ScreenPointToRay_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Camera::*)(ByRef<::UnityEngine::Vector2>, ::UnityEngine::Camera::MonoOrStereoscopicEye, ByRef<::UnityEngine::Ray>)>(&UnityEngine::Camera::ScreenPointToRay_Injected)> {
  static const MethodInfo* get() {
    static auto* pos = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector2")->this_arg;
    static auto* eye = &::il2cpp_utils::GetClassFromName("UnityEngine", "Camera/MonoOrStereoscopicEye")->byval_arg;
    static auto* ret = &::il2cpp_utils::GetClassFromName("UnityEngine", "Ray")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Camera*), "ScreenPointToRay_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{pos, eye, ret});
  }
};
// Writing MetadataGetter for method: UnityEngine::Camera::CalculateFrustumCornersInternal_Injected
// Il2CppName: CalculateFrustumCornersInternal_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Camera::*)(ByRef<::UnityEngine::Rect>, float, ::UnityEngine::Camera::MonoOrStereoscopicEye, ByRef<::ArrayW<::UnityEngine::Vector3>>)>(&UnityEngine::Camera::CalculateFrustumCornersInternal_Injected)> {
  static const MethodInfo* get() {
    static auto* viewport = &::il2cpp_utils::GetClassFromName("UnityEngine", "Rect")->this_arg;
    static auto* z = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* eye = &::il2cpp_utils::GetClassFromName("UnityEngine", "Camera/MonoOrStereoscopicEye")->byval_arg;
    static auto* outCorners = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3"), 1)->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Camera*), "CalculateFrustumCornersInternal_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{viewport, z, eye, outCorners});
  }
};
// Writing MetadataGetter for method: UnityEngine::Camera::GetStereoViewMatrix_Injected
// Il2CppName: GetStereoViewMatrix_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Camera::*)(::UnityEngine::Camera::StereoscopicEye, ByRef<::UnityEngine::Matrix4x4>)>(&UnityEngine::Camera::GetStereoViewMatrix_Injected)> {
  static const MethodInfo* get() {
    static auto* eye = &::il2cpp_utils::GetClassFromName("UnityEngine", "Camera/StereoscopicEye")->byval_arg;
    static auto* ret = &::il2cpp_utils::GetClassFromName("UnityEngine", "Matrix4x4")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Camera*), "GetStereoViewMatrix_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{eye, ret});
  }
};
// Writing MetadataGetter for method: UnityEngine::Camera::GetStereoProjectionMatrix_Injected
// Il2CppName: GetStereoProjectionMatrix_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Camera::*)(::UnityEngine::Camera::StereoscopicEye, ByRef<::UnityEngine::Matrix4x4>)>(&UnityEngine::Camera::GetStereoProjectionMatrix_Injected)> {
  static const MethodInfo* get() {
    static auto* eye = &::il2cpp_utils::GetClassFromName("UnityEngine", "Camera/StereoscopicEye")->byval_arg;
    static auto* ret = &::il2cpp_utils::GetClassFromName("UnityEngine", "Matrix4x4")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Camera*), "GetStereoProjectionMatrix_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{eye, ret});
  }
};
// Writing MetadataGetter for method: UnityEngine::Camera::SetStereoProjectionMatrix_Injected
// Il2CppName: SetStereoProjectionMatrix_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Camera::*)(::UnityEngine::Camera::StereoscopicEye, ByRef<::UnityEngine::Matrix4x4>)>(&UnityEngine::Camera::SetStereoProjectionMatrix_Injected)> {
  static const MethodInfo* get() {
    static auto* eye = &::il2cpp_utils::GetClassFromName("UnityEngine", "Camera/StereoscopicEye")->byval_arg;
    static auto* matrix = &::il2cpp_utils::GetClassFromName("UnityEngine", "Matrix4x4")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Camera*), "SetStereoProjectionMatrix_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{eye, matrix});
  }
};
// Writing MetadataGetter for method: UnityEngine::Camera::SetStereoViewMatrix_Injected
// Il2CppName: SetStereoViewMatrix_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Camera::*)(::UnityEngine::Camera::StereoscopicEye, ByRef<::UnityEngine::Matrix4x4>)>(&UnityEngine::Camera::SetStereoViewMatrix_Injected)> {
  static const MethodInfo* get() {
    static auto* eye = &::il2cpp_utils::GetClassFromName("UnityEngine", "Camera/StereoscopicEye")->byval_arg;
    static auto* matrix = &::il2cpp_utils::GetClassFromName("UnityEngine", "Matrix4x4")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Camera*), "SetStereoViewMatrix_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{eye, matrix});
  }
};
// Writing MetadataGetter for method: UnityEngine::Camera::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
