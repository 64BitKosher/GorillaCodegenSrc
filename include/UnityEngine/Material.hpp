// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
// Including type: UnityEngine.Rendering.LocalKeyword
#include "UnityEngine/Rendering/LocalKeyword.hpp"
// Including type: UnityEngine.Vector4
#include "UnityEngine/Vector4.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
// Including type: UnityEngine.Matrix4x4
#include "UnityEngine/Matrix4x4.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Shader
  class Shader;
  // Forward declaring type: Texture
  class Texture;
  // Forward declaring type: Vector2
  struct Vector2;
  // Forward declaring type: MaterialGlobalIlluminationFlags
  struct MaterialGlobalIlluminationFlags;
  // Forward declaring type: MaterialPropertyType
  struct MaterialPropertyType;
  // Forward declaring type: RenderTexture
  class RenderTexture;
  // Forward declaring type: ComputeBuffer
  class ComputeBuffer;
  // Forward declaring type: GraphicsBuffer
  class GraphicsBuffer;
  // Forward declaring type: GraphicsBufferHandle
  struct GraphicsBufferHandle;
}
// Forward declaring namespace: UnityEngine::Rendering
namespace UnityEngine::Rendering {
  // Forward declaring type: ShaderPropertyFlags
  struct ShaderPropertyFlags;
  // Forward declaring type: RenderTextureSubElement
  struct RenderTextureSubElement;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Completed forward declares
// Type namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Material
  class Material;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::Material);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::Material*, "UnityEngine", "Material");
// Type namespace: UnityEngine
namespace UnityEngine {
  // Size: 0x18
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.Material
  // [TokenAttribute] Offset: FFFFFFFF
  // [NativeHeaderAttribute] Offset: FFFFFFFF
  // [NativeHeaderAttribute] Offset: FFFFFFFF
  class Material : public ::UnityEngine::Object {
    public:
    // static public UnityEngine.Material Create(System.String scriptContents)
    // Offset: 0x549716C
    static ::UnityEngine::Material* Create(::StringW scriptContents);
    // static private System.Void CreateWithShader(UnityEngine.Material self, UnityEngine.Shader shader)
    // Offset: 0x549723C
    static void CreateWithShader(::UnityEngine::Material* self, ::UnityEngine::Shader* shader);
    // static private System.Void CreateWithMaterial(UnityEngine.Material self, UnityEngine.Material source)
    // Offset: 0x5497280
    static void CreateWithMaterial(::UnityEngine::Material* self, ::UnityEngine::Material* source);
    // static private System.Void CreateWithString(UnityEngine.Material self)
    // Offset: 0x54972C4
    static void CreateWithString(::UnityEngine::Material* self);
    // public System.Void .ctor(UnityEngine.Shader shader)
    // Offset: 0x5497300
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static Material* New_ctor(::UnityEngine::Shader* shader) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Material::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<Material*, creationType>(shader)));
    }
    // public System.Void .ctor(UnityEngine.Material source)
    // Offset: 0x5497390
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static Material* New_ctor(::UnityEngine::Material* source) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Material::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<Material*, creationType>(source)));
    }
    // public System.Void .ctor(System.String contents)
    // Offset: 0x54971BC
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static Material* New_ctor(::StringW contents) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Material::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<Material*, creationType>(contents)));
    }
    // static UnityEngine.Material GetDefaultMaterial()
    // Offset: 0x5497420
    static ::UnityEngine::Material* GetDefaultMaterial();
    // static UnityEngine.Material GetDefaultParticleMaterial()
    // Offset: 0x5497448
    static ::UnityEngine::Material* GetDefaultParticleMaterial();
    // static UnityEngine.Material GetDefaultLineMaterial()
    // Offset: 0x5497470
    static ::UnityEngine::Material* GetDefaultLineMaterial();
    // public UnityEngine.Shader get_shader()
    // Offset: 0x5497498
    ::UnityEngine::Shader* get_shader();
    // public System.Void set_shader(UnityEngine.Shader value)
    // Offset: 0x54974D4
    void set_shader(::UnityEngine::Shader* value);
    // public UnityEngine.Color get_color()
    // Offset: 0x5497518
    ::UnityEngine::Color get_color();
    // public System.Void set_color(UnityEngine.Color value)
    // Offset: 0x5497638
    void set_color(::UnityEngine::Color value);
    // public UnityEngine.Texture get_mainTexture()
    // Offset: 0x549778C
    ::UnityEngine::Texture* get_mainTexture();
    // public System.Void set_mainTexture(UnityEngine.Texture value)
    // Offset: 0x54978F0
    void set_mainTexture(::UnityEngine::Texture* value);
    // public UnityEngine.Vector2 get_mainTextureOffset()
    // Offset: 0x5497A8C
    ::UnityEngine::Vector2 get_mainTextureOffset();
    // public System.Void set_mainTextureOffset(UnityEngine.Vector2 value)
    // Offset: 0x5497B94
    void set_mainTextureOffset(::UnityEngine::Vector2 value);
    // public UnityEngine.Vector2 get_mainTextureScale()
    // Offset: 0x5497CAC
    ::UnityEngine::Vector2 get_mainTextureScale();
    // public System.Void set_mainTextureScale(UnityEngine.Vector2 value)
    // Offset: 0x5497D88
    void set_mainTextureScale(::UnityEngine::Vector2 value);
    // private System.Int32 GetFirstPropertyNameIdByAttribute(UnityEngine.Rendering.ShaderPropertyFlags attributeFlag)
    // Offset: 0x54975A4
    int GetFirstPropertyNameIdByAttribute(::UnityEngine::Rendering::ShaderPropertyFlags attributeFlag);
    // public System.Boolean HasProperty(System.Int32 nameID)
    // Offset: 0x5497EA0
    bool HasProperty(int nameID);
    // public System.Boolean HasProperty(System.String name)
    // Offset: 0x5497EE4
    bool HasProperty(::StringW name);
    // private System.Boolean HasFloatImpl(System.Int32 name)
    // Offset: 0x5497F54
    bool HasFloatImpl(int name);
    // public System.Boolean HasFloat(System.String name)
    // Offset: 0x5497F98
    bool HasFloat(::StringW name);
    // public System.Boolean HasFloat(System.Int32 nameID)
    // Offset: 0x5498008
    bool HasFloat(int nameID);
    // public System.Boolean HasInt(System.String name)
    // Offset: 0x549804C
    bool HasInt(::StringW name);
    // public System.Boolean HasInt(System.Int32 nameID)
    // Offset: 0x54980BC
    bool HasInt(int nameID);
    // private System.Boolean HasIntImpl(System.Int32 name)
    // Offset: 0x5498100
    bool HasIntImpl(int name);
    // public System.Boolean HasInteger(System.String name)
    // Offset: 0x5498144
    bool HasInteger(::StringW name);
    // public System.Boolean HasInteger(System.Int32 nameID)
    // Offset: 0x54981B4
    bool HasInteger(int nameID);
    // private System.Boolean HasTextureImpl(System.Int32 name)
    // Offset: 0x54981F8
    bool HasTextureImpl(int name);
    // public System.Boolean HasTexture(System.String name)
    // Offset: 0x549823C
    bool HasTexture(::StringW name);
    // public System.Boolean HasTexture(System.Int32 nameID)
    // Offset: 0x54982AC
    bool HasTexture(int nameID);
    // private System.Boolean HasMatrixImpl(System.Int32 name)
    // Offset: 0x54982F0
    bool HasMatrixImpl(int name);
    // public System.Boolean HasMatrix(System.String name)
    // Offset: 0x5498334
    bool HasMatrix(::StringW name);
    // public System.Boolean HasMatrix(System.Int32 nameID)
    // Offset: 0x54983A4
    bool HasMatrix(int nameID);
    // private System.Boolean HasVectorImpl(System.Int32 name)
    // Offset: 0x54983E8
    bool HasVectorImpl(int name);
    // public System.Boolean HasVector(System.String name)
    // Offset: 0x549842C
    bool HasVector(::StringW name);
    // public System.Boolean HasVector(System.Int32 nameID)
    // Offset: 0x549849C
    bool HasVector(int nameID);
    // public System.Boolean HasColor(System.String name)
    // Offset: 0x54984E0
    bool HasColor(::StringW name);
    // public System.Boolean HasColor(System.Int32 nameID)
    // Offset: 0x5498550
    bool HasColor(int nameID);
    // private System.Boolean HasBufferImpl(System.Int32 name)
    // Offset: 0x5498594
    bool HasBufferImpl(int name);
    // public System.Boolean HasBuffer(System.String name)
    // Offset: 0x54985D8
    bool HasBuffer(::StringW name);
    // public System.Boolean HasBuffer(System.Int32 nameID)
    // Offset: 0x5498648
    bool HasBuffer(int nameID);
    // private System.Boolean HasConstantBufferImpl(System.Int32 name)
    // Offset: 0x549868C
    bool HasConstantBufferImpl(int name);
    // public System.Boolean HasConstantBuffer(System.String name)
    // Offset: 0x54986D0
    bool HasConstantBuffer(::StringW name);
    // public System.Boolean HasConstantBuffer(System.Int32 nameID)
    // Offset: 0x5498740
    bool HasConstantBuffer(int nameID);
    // public System.Int32 get_renderQueue()
    // Offset: 0x5498784
    int get_renderQueue();
    // public System.Void set_renderQueue(System.Int32 value)
    // Offset: 0x54987C0
    void set_renderQueue(int value);
    // System.Int32 get_rawRenderQueue()
    // Offset: 0x5498804
    int get_rawRenderQueue();
    // public System.Void EnableKeyword(System.String keyword)
    // Offset: 0x5498840
    void EnableKeyword(::StringW keyword);
    // public System.Void DisableKeyword(System.String keyword)
    // Offset: 0x5498884
    void DisableKeyword(::StringW keyword);
    // public System.Boolean IsKeywordEnabled(System.String keyword)
    // Offset: 0x54988C8
    bool IsKeywordEnabled(::StringW keyword);
    // private System.Void EnableLocalKeyword(UnityEngine.Rendering.LocalKeyword keyword)
    // Offset: 0x549890C
    void EnableLocalKeyword(::UnityEngine::Rendering::LocalKeyword keyword);
    // private System.Void DisableLocalKeyword(UnityEngine.Rendering.LocalKeyword keyword)
    // Offset: 0x5498994
    void DisableLocalKeyword(::UnityEngine::Rendering::LocalKeyword keyword);
    // private System.Void SetLocalKeyword(UnityEngine.Rendering.LocalKeyword keyword, System.Boolean value)
    // Offset: 0x5498A1C
    void SetLocalKeyword(::UnityEngine::Rendering::LocalKeyword keyword, bool value);
    // private System.Boolean IsLocalKeywordEnabled(UnityEngine.Rendering.LocalKeyword keyword)
    // Offset: 0x5498AC4
    bool IsLocalKeywordEnabled(::UnityEngine::Rendering::LocalKeyword keyword);
    // public System.Void EnableKeyword(in UnityEngine.Rendering.LocalKeyword keyword)
    // Offset: 0x5498B4C
    void EnableKeyword(ByRef<::UnityEngine::Rendering::LocalKeyword> keyword);
    // public System.Void DisableKeyword(in UnityEngine.Rendering.LocalKeyword keyword)
    // Offset: 0x5498BA8
    void DisableKeyword(ByRef<::UnityEngine::Rendering::LocalKeyword> keyword);
    // public System.Void SetKeyword(in UnityEngine.Rendering.LocalKeyword keyword, System.Boolean value)
    // Offset: 0x5498C04
    void SetKeyword(ByRef<::UnityEngine::Rendering::LocalKeyword> keyword, bool value);
    // public System.Boolean IsKeywordEnabled(in UnityEngine.Rendering.LocalKeyword keyword)
    // Offset: 0x5498C68
    bool IsKeywordEnabled(ByRef<::UnityEngine::Rendering::LocalKeyword> keyword);
    // private UnityEngine.Rendering.LocalKeyword[] GetEnabledKeywords()
    // Offset: 0x5498CC8
    ::ArrayW<::UnityEngine::Rendering::LocalKeyword> GetEnabledKeywords();
    // private System.Void SetEnabledKeywords(UnityEngine.Rendering.LocalKeyword[] keywords)
    // Offset: 0x5498D04
    void SetEnabledKeywords(::ArrayW<::UnityEngine::Rendering::LocalKeyword> keywords);
    // public UnityEngine.Rendering.LocalKeyword[] get_enabledKeywords()
    // Offset: 0x5498D48
    ::ArrayW<::UnityEngine::Rendering::LocalKeyword> get_enabledKeywords();
    // public System.Void set_enabledKeywords(UnityEngine.Rendering.LocalKeyword[] value)
    // Offset: 0x5498D84
    void set_enabledKeywords(::ArrayW<::UnityEngine::Rendering::LocalKeyword> value);
    // public UnityEngine.MaterialGlobalIlluminationFlags get_globalIlluminationFlags()
    // Offset: 0x5498DC8
    ::UnityEngine::MaterialGlobalIlluminationFlags get_globalIlluminationFlags();
    // public System.Void set_globalIlluminationFlags(UnityEngine.MaterialGlobalIlluminationFlags value)
    // Offset: 0x5498E04
    void set_globalIlluminationFlags(::UnityEngine::MaterialGlobalIlluminationFlags value);
    // public System.Boolean get_doubleSidedGI()
    // Offset: 0x5498E48
    bool get_doubleSidedGI();
    // public System.Void set_doubleSidedGI(System.Boolean value)
    // Offset: 0x5498E84
    void set_doubleSidedGI(bool value);
    // public System.Boolean get_enableInstancing()
    // Offset: 0x548B968
    bool get_enableInstancing();
    // public System.Void set_enableInstancing(System.Boolean value)
    // Offset: 0x5498EC8
    void set_enableInstancing(bool value);
    // public System.Int32 get_passCount()
    // Offset: 0x5498F0C
    int get_passCount();
    // public System.Void SetShaderPassEnabled(System.String passName, System.Boolean enabled)
    // Offset: 0x5498F48
    void SetShaderPassEnabled(::StringW passName, bool enabled);
    // public System.Boolean GetShaderPassEnabled(System.String passName)
    // Offset: 0x5498F9C
    bool GetShaderPassEnabled(::StringW passName);
    // public System.String GetPassName(System.Int32 pass)
    // Offset: 0x5498FE0
    ::StringW GetPassName(int pass);
    // public System.Int32 FindPass(System.String passName)
    // Offset: 0x5499024
    int FindPass(::StringW passName);
    // public System.Void SetOverrideTag(System.String tag, System.String val)
    // Offset: 0x5499068
    void SetOverrideTag(::StringW tag, ::StringW val);
    // private System.String GetTagImpl(System.String tag, System.Boolean currentSubShaderOnly, System.String defaultValue)
    // Offset: 0x54990BC
    ::StringW GetTagImpl(::StringW tag, bool currentSubShaderOnly, ::StringW defaultValue);
    // public System.String GetTag(System.String tag, System.Boolean searchFallbacks, System.String defaultValue)
    // Offset: 0x5499118
    ::StringW GetTag(::StringW tag, bool searchFallbacks, ::StringW defaultValue);
    // public System.String GetTag(System.String tag, System.Boolean searchFallbacks)
    // Offset: 0x5499178
    ::StringW GetTag(::StringW tag, bool searchFallbacks);
    // public System.Void Lerp(UnityEngine.Material start, UnityEngine.Material end, System.Single t)
    // Offset: 0x5499200
    void Lerp(::UnityEngine::Material* start, ::UnityEngine::Material* end, float t);
    // public System.Boolean SetPass(System.Int32 pass)
    // Offset: 0x5499264
    bool SetPass(int pass);
    // public System.Void CopyPropertiesFromMaterial(UnityEngine.Material mat)
    // Offset: 0x54992A8
    void CopyPropertiesFromMaterial(::UnityEngine::Material* mat);
    // public System.Void CopyMatchingPropertiesFromMaterial(UnityEngine.Material mat)
    // Offset: 0x54992EC
    void CopyMatchingPropertiesFromMaterial(::UnityEngine::Material* mat);
    // private System.String[] GetShaderKeywords()
    // Offset: 0x5499330
    ::ArrayW<::StringW> GetShaderKeywords();
    // private System.Void SetShaderKeywords(System.String[] names)
    // Offset: 0x549936C
    void SetShaderKeywords(::ArrayW<::StringW> names);
    // public System.String[] get_shaderKeywords()
    // Offset: 0x54993B0
    ::ArrayW<::StringW> get_shaderKeywords();
    // public System.Void set_shaderKeywords(System.String[] value)
    // Offset: 0x54993EC
    void set_shaderKeywords(::ArrayW<::StringW> value);
    // private System.String[] GetPropertyNamesImpl(System.Int32 propertyType)
    // Offset: 0x5499430
    ::ArrayW<::StringW> GetPropertyNamesImpl(int propertyType);
    // public System.Int32 ComputeCRC()
    // Offset: 0x5499474
    int ComputeCRC();
    // public System.String[] GetTexturePropertyNames()
    // Offset: 0x54994B0
    ::ArrayW<::StringW> GetTexturePropertyNames();
    // public System.Int32[] GetTexturePropertyNameIDs()
    // Offset: 0x54994EC
    ::ArrayW<int> GetTexturePropertyNameIDs();
    // private System.Void GetTexturePropertyNamesInternal(System.Object outNames)
    // Offset: 0x5499528
    void GetTexturePropertyNamesInternal(::Il2CppObject* outNames);
    // private System.Void GetTexturePropertyNameIDsInternal(System.Object outNames)
    // Offset: 0x549956C
    void GetTexturePropertyNameIDsInternal(::Il2CppObject* outNames);
    // public System.Void GetTexturePropertyNames(System.Collections.Generic.List`1<System.String> outNames)
    // Offset: 0x54995B0
    void GetTexturePropertyNames(::System::Collections::Generic::List_1<::StringW>* outNames);
    // public System.Void GetTexturePropertyNameIDs(System.Collections.Generic.List`1<System.Int32> outNames)
    // Offset: 0x5499640
    void GetTexturePropertyNameIDs(::System::Collections::Generic::List_1<int>* outNames);
    // private System.Void SetIntImpl(System.Int32 name, System.Int32 value)
    // Offset: 0x54996D0
    void SetIntImpl(int name, int value);
    // private System.Void SetFloatImpl(System.Int32 name, System.Single value)
    // Offset: 0x5499724
    void SetFloatImpl(int name, float value);
    // private System.Void SetColorImpl(System.Int32 name, UnityEngine.Color value)
    // Offset: 0x5499778
    void SetColorImpl(int name, ::UnityEngine::Color value);
    // private System.Void SetMatrixImpl(System.Int32 name, UnityEngine.Matrix4x4 value)
    // Offset: 0x5499828
    void SetMatrixImpl(int name, ::UnityEngine::Matrix4x4 value);
    // private System.Void SetTextureImpl(System.Int32 name, UnityEngine.Texture value)
    // Offset: 0x54998D0
    void SetTextureImpl(int name, ::UnityEngine::Texture* value);
    // private System.Void SetRenderTextureImpl(System.Int32 name, UnityEngine.RenderTexture value, UnityEngine.Rendering.RenderTextureSubElement element)
    // Offset: 0x5499924
    void SetRenderTextureImpl(int name, ::UnityEngine::RenderTexture* value, ::UnityEngine::Rendering::RenderTextureSubElement element);
    // private System.Void SetBufferImpl(System.Int32 name, UnityEngine.ComputeBuffer value)
    // Offset: 0x5499980
    void SetBufferImpl(int name, ::UnityEngine::ComputeBuffer* value);
    // private System.Void SetGraphicsBufferImpl(System.Int32 name, UnityEngine.GraphicsBuffer value)
    // Offset: 0x54999D4
    void SetGraphicsBufferImpl(int name, ::UnityEngine::GraphicsBuffer* value);
    // private System.Void SetConstantBufferImpl(System.Int32 name, UnityEngine.ComputeBuffer value, System.Int32 offset, System.Int32 size)
    // Offset: 0x5499A28
    void SetConstantBufferImpl(int name, ::UnityEngine::ComputeBuffer* value, int offset, int size);
    // private System.Void SetConstantGraphicsBufferImpl(System.Int32 name, UnityEngine.GraphicsBuffer value, System.Int32 offset, System.Int32 size)
    // Offset: 0x5499A94
    void SetConstantGraphicsBufferImpl(int name, ::UnityEngine::GraphicsBuffer* value, int offset, int size);
    // private System.Int32 GetIntImpl(System.Int32 name)
    // Offset: 0x5499B00
    int GetIntImpl(int name);
    // private System.Single GetFloatImpl(System.Int32 name)
    // Offset: 0x5499B44
    float GetFloatImpl(int name);
    // private UnityEngine.Color GetColorImpl(System.Int32 name)
    // Offset: 0x5499B88
    ::UnityEngine::Color GetColorImpl(int name);
    // private UnityEngine.Matrix4x4 GetMatrixImpl(System.Int32 name)
    // Offset: 0x5499C3C
    ::UnityEngine::Matrix4x4 GetMatrixImpl(int name);
    // private UnityEngine.Texture GetTextureImpl(System.Int32 name)
    // Offset: 0x5499D0C
    ::UnityEngine::Texture* GetTextureImpl(int name);
    // private UnityEngine.GraphicsBufferHandle GetBufferImpl(System.Int32 name)
    // Offset: 0x5499D50
    ::UnityEngine::GraphicsBufferHandle GetBufferImpl(int name);
    // private UnityEngine.GraphicsBufferHandle GetConstantBufferImpl(System.Int32 name)
    // Offset: 0x5499E00
    ::UnityEngine::GraphicsBufferHandle GetConstantBufferImpl(int name);
    // private System.Void SetFloatArrayImpl(System.Int32 name, System.Single[] values, System.Int32 count)
    // Offset: 0x5499EB0
    void SetFloatArrayImpl(int name, ::ArrayW<float> values, int count);
    // private System.Void SetVectorArrayImpl(System.Int32 name, UnityEngine.Vector4[] values, System.Int32 count)
    // Offset: 0x5499F0C
    void SetVectorArrayImpl(int name, ::ArrayW<::UnityEngine::Vector4> values, int count);
    // private System.Void SetColorArrayImpl(System.Int32 name, UnityEngine.Color[] values, System.Int32 count)
    // Offset: 0x5499F68
    void SetColorArrayImpl(int name, ::ArrayW<::UnityEngine::Color> values, int count);
    // private System.Void SetMatrixArrayImpl(System.Int32 name, UnityEngine.Matrix4x4[] values, System.Int32 count)
    // Offset: 0x5499FC4
    void SetMatrixArrayImpl(int name, ::ArrayW<::UnityEngine::Matrix4x4> values, int count);
    // private System.Single[] GetFloatArrayImpl(System.Int32 name)
    // Offset: 0x549A020
    ::ArrayW<float> GetFloatArrayImpl(int name);
    // private UnityEngine.Vector4[] GetVectorArrayImpl(System.Int32 name)
    // Offset: 0x549A064
    ::ArrayW<::UnityEngine::Vector4> GetVectorArrayImpl(int name);
    // private UnityEngine.Color[] GetColorArrayImpl(System.Int32 name)
    // Offset: 0x549A0A8
    ::ArrayW<::UnityEngine::Color> GetColorArrayImpl(int name);
    // private UnityEngine.Matrix4x4[] GetMatrixArrayImpl(System.Int32 name)
    // Offset: 0x549A0EC
    ::ArrayW<::UnityEngine::Matrix4x4> GetMatrixArrayImpl(int name);
    // private System.Int32 GetFloatArrayCountImpl(System.Int32 name)
    // Offset: 0x549A130
    int GetFloatArrayCountImpl(int name);
    // private System.Int32 GetVectorArrayCountImpl(System.Int32 name)
    // Offset: 0x549A174
    int GetVectorArrayCountImpl(int name);
    // private System.Int32 GetColorArrayCountImpl(System.Int32 name)
    // Offset: 0x549A1B8
    int GetColorArrayCountImpl(int name);
    // private System.Int32 GetMatrixArrayCountImpl(System.Int32 name)
    // Offset: 0x549A1FC
    int GetMatrixArrayCountImpl(int name);
    // private System.Void ExtractFloatArrayImpl(System.Int32 name, out System.Single[] val)
    // Offset: 0x549A240
    void ExtractFloatArrayImpl(int name, ByRef<::ArrayW<float>> val);
    // private System.Void ExtractVectorArrayImpl(System.Int32 name, out UnityEngine.Vector4[] val)
    // Offset: 0x549A294
    void ExtractVectorArrayImpl(int name, ByRef<::ArrayW<::UnityEngine::Vector4>> val);
    // private System.Void ExtractColorArrayImpl(System.Int32 name, out UnityEngine.Color[] val)
    // Offset: 0x549A2E8
    void ExtractColorArrayImpl(int name, ByRef<::ArrayW<::UnityEngine::Color>> val);
    // private System.Void ExtractMatrixArrayImpl(System.Int32 name, out UnityEngine.Matrix4x4[] val)
    // Offset: 0x549A33C
    void ExtractMatrixArrayImpl(int name, ByRef<::ArrayW<::UnityEngine::Matrix4x4>> val);
    // private UnityEngine.Vector4 GetTextureScaleAndOffsetImpl(System.Int32 name)
    // Offset: 0x549A390
    ::UnityEngine::Vector4 GetTextureScaleAndOffsetImpl(int name);
    // private System.Void SetTextureOffsetImpl(System.Int32 name, UnityEngine.Vector2 offset)
    // Offset: 0x549A444
    void SetTextureOffsetImpl(int name, ::UnityEngine::Vector2 offset);
    // private System.Void SetTextureScaleImpl(System.Int32 name, UnityEngine.Vector2 scale)
    // Offset: 0x549A4F0
    void SetTextureScaleImpl(int name, ::UnityEngine::Vector2 scale);
    // private System.Void SetFloatArray(System.Int32 name, System.Single[] values, System.Int32 count)
    // Offset: 0x549A59C
    void SetFloatArray(int name, ::ArrayW<float> values, int count);
    // private System.Void SetVectorArray(System.Int32 name, UnityEngine.Vector4[] values, System.Int32 count)
    // Offset: 0x549A6A8
    void SetVectorArray(int name, ::ArrayW<::UnityEngine::Vector4> values, int count);
    // private System.Void SetColorArray(System.Int32 name, UnityEngine.Color[] values, System.Int32 count)
    // Offset: 0x549A7B4
    void SetColorArray(int name, ::ArrayW<::UnityEngine::Color> values, int count);
    // private System.Void SetMatrixArray(System.Int32 name, UnityEngine.Matrix4x4[] values, System.Int32 count)
    // Offset: 0x549A8C0
    void SetMatrixArray(int name, ::ArrayW<::UnityEngine::Matrix4x4> values, int count);
    // private System.Void ExtractFloatArray(System.Int32 name, System.Collections.Generic.List`1<System.Single> values)
    // Offset: 0x549A9CC
    void ExtractFloatArray(int name, ::System::Collections::Generic::List_1<float>* values);
    // private System.Void ExtractVectorArray(System.Int32 name, System.Collections.Generic.List`1<UnityEngine.Vector4> values)
    // Offset: 0x549AB4C
    void ExtractVectorArray(int name, ::System::Collections::Generic::List_1<::UnityEngine::Vector4>* values);
    // private System.Void ExtractColorArray(System.Int32 name, System.Collections.Generic.List`1<UnityEngine.Color> values)
    // Offset: 0x549ACCC
    void ExtractColorArray(int name, ::System::Collections::Generic::List_1<::UnityEngine::Color>* values);
    // private System.Void ExtractMatrixArray(System.Int32 name, System.Collections.Generic.List`1<UnityEngine.Matrix4x4> values)
    // Offset: 0x549AE4C
    void ExtractMatrixArray(int name, ::System::Collections::Generic::List_1<::UnityEngine::Matrix4x4>* values);
    // public System.Void SetInt(System.String name, System.Int32 value)
    // Offset: 0x549AFCC
    void SetInt(::StringW name, int value);
    // public System.Void SetInt(System.Int32 nameID, System.Int32 value)
    // Offset: 0x549B04C
    void SetInt(int nameID, int value);
    // public System.Void SetFloat(System.String name, System.Single value)
    // Offset: 0x549B0A0
    void SetFloat(::StringW name, float value);
    // public System.Void SetFloat(System.Int32 nameID, System.Single value)
    // Offset: 0x549B120
    void SetFloat(int nameID, float value);
    // public System.Void SetInteger(System.String name, System.Int32 value)
    // Offset: 0x549B174
    void SetInteger(::StringW name, int value);
    // public System.Void SetInteger(System.Int32 nameID, System.Int32 value)
    // Offset: 0x549B1F4
    void SetInteger(int nameID, int value);
    // public System.Void SetColor(System.String name, UnityEngine.Color value)
    // Offset: 0x5497710
    void SetColor(::StringW name, ::UnityEngine::Color value);
    // public System.Void SetColor(System.Int32 nameID, UnityEngine.Color value)
    // Offset: 0x549770C
    void SetColor(int nameID, ::UnityEngine::Color value);
    // public System.Void SetVector(System.String name, UnityEngine.Vector4 value)
    // Offset: 0x549B248
    void SetVector(::StringW name, ::UnityEngine::Vector4 value);
    // public System.Void SetVector(System.Int32 nameID, UnityEngine.Vector4 value)
    // Offset: 0x549B2C4
    void SetVector(int nameID, ::UnityEngine::Vector4 value);
    // public System.Void SetMatrix(System.String name, UnityEngine.Matrix4x4 value)
    // Offset: 0x549B2C8
    void SetMatrix(::StringW name, ::UnityEngine::Matrix4x4 value);
    // public System.Void SetMatrix(System.Int32 nameID, UnityEngine.Matrix4x4 value)
    // Offset: 0x549B364
    void SetMatrix(int nameID, ::UnityEngine::Matrix4x4 value);
    // public System.Void SetTexture(System.String name, UnityEngine.Texture value)
    // Offset: 0x5497A0C
    void SetTexture(::StringW name, ::UnityEngine::Texture* value);
    // public System.Void SetTexture(System.Int32 nameID, UnityEngine.Texture value)
    // Offset: 0x54979B8
    void SetTexture(int nameID, ::UnityEngine::Texture* value);
    // public System.Void SetTexture(System.String name, UnityEngine.RenderTexture value, UnityEngine.Rendering.RenderTextureSubElement element)
    // Offset: 0x549B3C8
    void SetTexture(::StringW name, ::UnityEngine::RenderTexture* value, ::UnityEngine::Rendering::RenderTextureSubElement element);
    // public System.Void SetTexture(System.Int32 nameID, UnityEngine.RenderTexture value, UnityEngine.Rendering.RenderTextureSubElement element)
    // Offset: 0x549B450
    void SetTexture(int nameID, ::UnityEngine::RenderTexture* value, ::UnityEngine::Rendering::RenderTextureSubElement element);
    // public System.Void SetBuffer(System.String name, UnityEngine.ComputeBuffer value)
    // Offset: 0x549B4AC
    void SetBuffer(::StringW name, ::UnityEngine::ComputeBuffer* value);
    // public System.Void SetBuffer(System.Int32 nameID, UnityEngine.ComputeBuffer value)
    // Offset: 0x549B52C
    void SetBuffer(int nameID, ::UnityEngine::ComputeBuffer* value);
    // public System.Void SetBuffer(System.String name, UnityEngine.GraphicsBuffer value)
    // Offset: 0x549B580
    void SetBuffer(::StringW name, ::UnityEngine::GraphicsBuffer* value);
    // public System.Void SetBuffer(System.Int32 nameID, UnityEngine.GraphicsBuffer value)
    // Offset: 0x549B600
    void SetBuffer(int nameID, ::UnityEngine::GraphicsBuffer* value);
    // public System.Void SetConstantBuffer(System.String name, UnityEngine.ComputeBuffer value, System.Int32 offset, System.Int32 size)
    // Offset: 0x549B654
    void SetConstantBuffer(::StringW name, ::UnityEngine::ComputeBuffer* value, int offset, int size);
    // public System.Void SetConstantBuffer(System.Int32 nameID, UnityEngine.ComputeBuffer value, System.Int32 offset, System.Int32 size)
    // Offset: 0x549B6EC
    void SetConstantBuffer(int nameID, ::UnityEngine::ComputeBuffer* value, int offset, int size);
    // public System.Void SetConstantBuffer(System.String name, UnityEngine.GraphicsBuffer value, System.Int32 offset, System.Int32 size)
    // Offset: 0x549B758
    void SetConstantBuffer(::StringW name, ::UnityEngine::GraphicsBuffer* value, int offset, int size);
    // public System.Void SetConstantBuffer(System.Int32 nameID, UnityEngine.GraphicsBuffer value, System.Int32 offset, System.Int32 size)
    // Offset: 0x549B7F0
    void SetConstantBuffer(int nameID, ::UnityEngine::GraphicsBuffer* value, int offset, int size);
    // public System.Void SetFloatArray(System.String name, System.Collections.Generic.List`1<System.Single> values)
    // Offset: 0x549B85C
    void SetFloatArray(::StringW name, ::System::Collections::Generic::List_1<float>* values);
    // public System.Void SetFloatArray(System.Int32 nameID, System.Collections.Generic.List`1<System.Single> values)
    // Offset: 0x549B908
    void SetFloatArray(int nameID, ::System::Collections::Generic::List_1<float>* values);
    // public System.Void SetFloatArray(System.String name, System.Single[] values)
    // Offset: 0x549B988
    void SetFloatArray(::StringW name, ::ArrayW<float> values);
    // public System.Void SetFloatArray(System.Int32 nameID, System.Single[] values)
    // Offset: 0x549B9F0
    void SetFloatArray(int nameID, ::ArrayW<float> values);
    // public System.Void SetColorArray(System.String name, System.Collections.Generic.List`1<UnityEngine.Color> values)
    // Offset: 0x549BA08
    void SetColorArray(::StringW name, ::System::Collections::Generic::List_1<::UnityEngine::Color>* values);
    // public System.Void SetColorArray(System.Int32 nameID, System.Collections.Generic.List`1<UnityEngine.Color> values)
    // Offset: 0x549BAB4
    void SetColorArray(int nameID, ::System::Collections::Generic::List_1<::UnityEngine::Color>* values);
    // public System.Void SetColorArray(System.String name, UnityEngine.Color[] values)
    // Offset: 0x549BB34
    void SetColorArray(::StringW name, ::ArrayW<::UnityEngine::Color> values);
    // public System.Void SetColorArray(System.Int32 nameID, UnityEngine.Color[] values)
    // Offset: 0x549BB9C
    void SetColorArray(int nameID, ::ArrayW<::UnityEngine::Color> values);
    // public System.Void SetVectorArray(System.String name, System.Collections.Generic.List`1<UnityEngine.Vector4> values)
    // Offset: 0x549BBB4
    void SetVectorArray(::StringW name, ::System::Collections::Generic::List_1<::UnityEngine::Vector4>* values);
    // public System.Void SetVectorArray(System.Int32 nameID, System.Collections.Generic.List`1<UnityEngine.Vector4> values)
    // Offset: 0x549BC60
    void SetVectorArray(int nameID, ::System::Collections::Generic::List_1<::UnityEngine::Vector4>* values);
    // public System.Void SetVectorArray(System.String name, UnityEngine.Vector4[] values)
    // Offset: 0x549BCE0
    void SetVectorArray(::StringW name, ::ArrayW<::UnityEngine::Vector4> values);
    // public System.Void SetVectorArray(System.Int32 nameID, UnityEngine.Vector4[] values)
    // Offset: 0x549BD48
    void SetVectorArray(int nameID, ::ArrayW<::UnityEngine::Vector4> values);
    // public System.Void SetMatrixArray(System.String name, System.Collections.Generic.List`1<UnityEngine.Matrix4x4> values)
    // Offset: 0x549BD60
    void SetMatrixArray(::StringW name, ::System::Collections::Generic::List_1<::UnityEngine::Matrix4x4>* values);
    // public System.Void SetMatrixArray(System.Int32 nameID, System.Collections.Generic.List`1<UnityEngine.Matrix4x4> values)
    // Offset: 0x549BE0C
    void SetMatrixArray(int nameID, ::System::Collections::Generic::List_1<::UnityEngine::Matrix4x4>* values);
    // public System.Void SetMatrixArray(System.String name, UnityEngine.Matrix4x4[] values)
    // Offset: 0x549BE8C
    void SetMatrixArray(::StringW name, ::ArrayW<::UnityEngine::Matrix4x4> values);
    // public System.Void SetMatrixArray(System.Int32 nameID, UnityEngine.Matrix4x4[] values)
    // Offset: 0x549BEF4
    void SetMatrixArray(int nameID, ::ArrayW<::UnityEngine::Matrix4x4> values);
    // public System.Int32 GetInt(System.String name)
    // Offset: 0x549BF0C
    int GetInt(::StringW name);
    // public System.Int32 GetInt(System.Int32 nameID)
    // Offset: 0x549BF98
    int GetInt(int nameID);
    // public System.Single GetFloat(System.String name)
    // Offset: 0x549BFF8
    float GetFloat(::StringW name);
    // public System.Single GetFloat(System.Int32 nameID)
    // Offset: 0x549C068
    float GetFloat(int nameID);
    // public System.Int32 GetInteger(System.String name)
    // Offset: 0x549C0AC
    int GetInteger(::StringW name);
    // public System.Int32 GetInteger(System.Int32 nameID)
    // Offset: 0x549C11C
    int GetInteger(int nameID);
    // public UnityEngine.Color GetColor(System.String name)
    // Offset: 0x54975EC
    ::UnityEngine::Color GetColor(::StringW name);
    // public UnityEngine.Color GetColor(System.Int32 nameID)
    // Offset: 0x54975E8
    ::UnityEngine::Color GetColor(int nameID);
    // public UnityEngine.Vector4 GetVector(System.String name)
    // Offset: 0x549C160
    ::UnityEngine::Vector4 GetVector(::StringW name);
    // public UnityEngine.Vector4 GetVector(System.Int32 nameID)
    // Offset: 0x549C1AC
    ::UnityEngine::Vector4 GetVector(int nameID);
    // public UnityEngine.Matrix4x4 GetMatrix(System.String name)
    // Offset: 0x549C1B0
    ::UnityEngine::Matrix4x4 GetMatrix(::StringW name);
    // public UnityEngine.Matrix4x4 GetMatrix(System.Int32 nameID)
    // Offset: 0x549C260
    ::UnityEngine::Matrix4x4 GetMatrix(int nameID);
    // public UnityEngine.Texture GetTexture(System.String name)
    // Offset: 0x5497880
    ::UnityEngine::Texture* GetTexture(::StringW name);
    // public UnityEngine.Texture GetTexture(System.Int32 nameID)
    // Offset: 0x549783C
    ::UnityEngine::Texture* GetTexture(int nameID);
    // public UnityEngine.GraphicsBufferHandle GetBuffer(System.String name)
    // Offset: 0x549C2E4
    ::UnityEngine::GraphicsBufferHandle GetBuffer(::StringW name);
    // public UnityEngine.GraphicsBufferHandle GetConstantBuffer(System.String name)
    // Offset: 0x549C36C
    ::UnityEngine::GraphicsBufferHandle GetConstantBuffer(::StringW name);
    // public System.Single[] GetFloatArray(System.String name)
    // Offset: 0x549C3F4
    ::ArrayW<float> GetFloatArray(::StringW name);
    // public System.Single[] GetFloatArray(System.Int32 nameID)
    // Offset: 0x549C440
    ::ArrayW<float> GetFloatArray(int nameID);
    // public UnityEngine.Color[] GetColorArray(System.String name)
    // Offset: 0x549C4C4
    ::ArrayW<::UnityEngine::Color> GetColorArray(::StringW name);
    // public UnityEngine.Color[] GetColorArray(System.Int32 nameID)
    // Offset: 0x549C510
    ::ArrayW<::UnityEngine::Color> GetColorArray(int nameID);
    // public UnityEngine.Vector4[] GetVectorArray(System.String name)
    // Offset: 0x549C594
    ::ArrayW<::UnityEngine::Vector4> GetVectorArray(::StringW name);
    // public UnityEngine.Vector4[] GetVectorArray(System.Int32 nameID)
    // Offset: 0x549C5E0
    ::ArrayW<::UnityEngine::Vector4> GetVectorArray(int nameID);
    // public UnityEngine.Matrix4x4[] GetMatrixArray(System.String name)
    // Offset: 0x549C664
    ::ArrayW<::UnityEngine::Matrix4x4> GetMatrixArray(::StringW name);
    // public UnityEngine.Matrix4x4[] GetMatrixArray(System.Int32 nameID)
    // Offset: 0x549C6B0
    ::ArrayW<::UnityEngine::Matrix4x4> GetMatrixArray(int nameID);
    // public System.Void GetFloatArray(System.String name, System.Collections.Generic.List`1<System.Single> values)
    // Offset: 0x549C734
    void GetFloatArray(::StringW name, ::System::Collections::Generic::List_1<float>* values);
    // public System.Void GetFloatArray(System.Int32 nameID, System.Collections.Generic.List`1<System.Single> values)
    // Offset: 0x549C790
    void GetFloatArray(int nameID, ::System::Collections::Generic::List_1<float>* values);
    // public System.Void GetColorArray(System.String name, System.Collections.Generic.List`1<UnityEngine.Color> values)
    // Offset: 0x549C794
    void GetColorArray(::StringW name, ::System::Collections::Generic::List_1<::UnityEngine::Color>* values);
    // public System.Void GetColorArray(System.Int32 nameID, System.Collections.Generic.List`1<UnityEngine.Color> values)
    // Offset: 0x549C7F0
    void GetColorArray(int nameID, ::System::Collections::Generic::List_1<::UnityEngine::Color>* values);
    // public System.Void GetVectorArray(System.String name, System.Collections.Generic.List`1<UnityEngine.Vector4> values)
    // Offset: 0x549C7F4
    void GetVectorArray(::StringW name, ::System::Collections::Generic::List_1<::UnityEngine::Vector4>* values);
    // public System.Void GetVectorArray(System.Int32 nameID, System.Collections.Generic.List`1<UnityEngine.Vector4> values)
    // Offset: 0x549C850
    void GetVectorArray(int nameID, ::System::Collections::Generic::List_1<::UnityEngine::Vector4>* values);
    // public System.Void GetMatrixArray(System.String name, System.Collections.Generic.List`1<UnityEngine.Matrix4x4> values)
    // Offset: 0x549C854
    void GetMatrixArray(::StringW name, ::System::Collections::Generic::List_1<::UnityEngine::Matrix4x4>* values);
    // public System.Void GetMatrixArray(System.Int32 nameID, System.Collections.Generic.List`1<UnityEngine.Matrix4x4> values)
    // Offset: 0x549C8B0
    void GetMatrixArray(int nameID, ::System::Collections::Generic::List_1<::UnityEngine::Matrix4x4>* values);
    // public System.Void SetTextureOffset(System.String name, UnityEngine.Vector2 value)
    // Offset: 0x5497C48
    void SetTextureOffset(::StringW name, ::UnityEngine::Vector2 value);
    // public System.Void SetTextureOffset(System.Int32 nameID, UnityEngine.Vector2 value)
    // Offset: 0x5497C44
    void SetTextureOffset(int nameID, ::UnityEngine::Vector2 value);
    // public System.Void SetTextureScale(System.String name, UnityEngine.Vector2 value)
    // Offset: 0x5497E3C
    void SetTextureScale(::StringW name, ::UnityEngine::Vector2 value);
    // public System.Void SetTextureScale(System.Int32 nameID, UnityEngine.Vector2 value)
    // Offset: 0x5497E38
    void SetTextureScale(int nameID, ::UnityEngine::Vector2 value);
    // public UnityEngine.Vector2 GetTextureOffset(System.String name)
    // Offset: 0x5497B3C
    ::UnityEngine::Vector2 GetTextureOffset(::StringW name);
    // public UnityEngine.Vector2 GetTextureOffset(System.Int32 nameID)
    // Offset: 0x5497B24
    ::UnityEngine::Vector2 GetTextureOffset(int nameID);
    // public UnityEngine.Vector2 GetTextureScale(System.String name)
    // Offset: 0x5497D3C
    ::UnityEngine::Vector2 GetTextureScale(::StringW name);
    // public UnityEngine.Vector2 GetTextureScale(System.Int32 nameID)
    // Offset: 0x5497D38
    ::UnityEngine::Vector2 GetTextureScale(int nameID);
    // public System.String[] GetPropertyNames(UnityEngine.MaterialPropertyType type)
    // Offset: 0x549C8B4
    ::ArrayW<::StringW> GetPropertyNames(::UnityEngine::MaterialPropertyType type);
    // private System.Void EnableLocalKeyword_Injected(ref UnityEngine.Rendering.LocalKeyword keyword)
    // Offset: 0x5498950
    void EnableLocalKeyword_Injected(ByRef<::UnityEngine::Rendering::LocalKeyword> keyword);
    // private System.Void DisableLocalKeyword_Injected(ref UnityEngine.Rendering.LocalKeyword keyword)
    // Offset: 0x54989D8
    void DisableLocalKeyword_Injected(ByRef<::UnityEngine::Rendering::LocalKeyword> keyword);
    // private System.Void SetLocalKeyword_Injected(ref UnityEngine.Rendering.LocalKeyword keyword, System.Boolean value)
    // Offset: 0x5498A70
    void SetLocalKeyword_Injected(ByRef<::UnityEngine::Rendering::LocalKeyword> keyword, bool value);
    // private System.Boolean IsLocalKeywordEnabled_Injected(ref UnityEngine.Rendering.LocalKeyword keyword)
    // Offset: 0x5498B08
    bool IsLocalKeywordEnabled_Injected(ByRef<::UnityEngine::Rendering::LocalKeyword> keyword);
    // private System.Void SetColorImpl_Injected(System.Int32 name, ref UnityEngine.Color value)
    // Offset: 0x54997D4
    void SetColorImpl_Injected(int name, ByRef<::UnityEngine::Color> value);
    // private System.Void SetMatrixImpl_Injected(System.Int32 name, ref UnityEngine.Matrix4x4 value)
    // Offset: 0x549987C
    void SetMatrixImpl_Injected(int name, ByRef<::UnityEngine::Matrix4x4> value);
    // private System.Void GetColorImpl_Injected(System.Int32 name, out UnityEngine.Color ret)
    // Offset: 0x5499BE8
    void GetColorImpl_Injected(int name, ByRef<::UnityEngine::Color> ret);
    // private System.Void GetMatrixImpl_Injected(System.Int32 name, out UnityEngine.Matrix4x4 ret)
    // Offset: 0x5499CB8
    void GetMatrixImpl_Injected(int name, ByRef<::UnityEngine::Matrix4x4> ret);
    // private System.Void GetBufferImpl_Injected(System.Int32 name, out UnityEngine.GraphicsBufferHandle ret)
    // Offset: 0x5499DAC
    void GetBufferImpl_Injected(int name, ByRef<::UnityEngine::GraphicsBufferHandle> ret);
    // private System.Void GetConstantBufferImpl_Injected(System.Int32 name, out UnityEngine.GraphicsBufferHandle ret)
    // Offset: 0x5499E5C
    void GetConstantBufferImpl_Injected(int name, ByRef<::UnityEngine::GraphicsBufferHandle> ret);
    // private System.Void GetTextureScaleAndOffsetImpl_Injected(System.Int32 name, out UnityEngine.Vector4 ret)
    // Offset: 0x549A3F0
    void GetTextureScaleAndOffsetImpl_Injected(int name, ByRef<::UnityEngine::Vector4> ret);
    // private System.Void SetTextureOffsetImpl_Injected(System.Int32 name, ref UnityEngine.Vector2 offset)
    // Offset: 0x549A49C
    void SetTextureOffsetImpl_Injected(int name, ByRef<::UnityEngine::Vector2> offset);
    // private System.Void SetTextureScaleImpl_Injected(System.Int32 name, ref UnityEngine.Vector2 scale)
    // Offset: 0x549A548
    void SetTextureScaleImpl_Injected(int name, ByRef<::UnityEngine::Vector2> scale);
  }; // UnityEngine.Material
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::Material::Create
// Il2CppName: Create
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Material* (*)(::StringW)>(&UnityEngine::Material::Create)> {
  static const MethodInfo* get() {
    static auto* scriptContents = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "Create", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{scriptContents});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::CreateWithShader
// Il2CppName: CreateWithShader
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::Material*, ::UnityEngine::Shader*)>(&UnityEngine::Material::CreateWithShader)> {
  static const MethodInfo* get() {
    static auto* self = &::il2cpp_utils::GetClassFromName("UnityEngine", "Material")->byval_arg;
    static auto* shader = &::il2cpp_utils::GetClassFromName("UnityEngine", "Shader")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "CreateWithShader", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{self, shader});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::CreateWithMaterial
// Il2CppName: CreateWithMaterial
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::Material*, ::UnityEngine::Material*)>(&UnityEngine::Material::CreateWithMaterial)> {
  static const MethodInfo* get() {
    static auto* self = &::il2cpp_utils::GetClassFromName("UnityEngine", "Material")->byval_arg;
    static auto* source = &::il2cpp_utils::GetClassFromName("UnityEngine", "Material")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "CreateWithMaterial", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{self, source});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::CreateWithString
// Il2CppName: CreateWithString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::Material*)>(&UnityEngine::Material::CreateWithString)> {
  static const MethodInfo* get() {
    static auto* self = &::il2cpp_utils::GetClassFromName("UnityEngine", "Material")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "CreateWithString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{self});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::Material::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::Material::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::Material::GetDefaultMaterial
// Il2CppName: GetDefaultMaterial
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Material* (*)()>(&UnityEngine::Material::GetDefaultMaterial)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "GetDefaultMaterial", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::GetDefaultParticleMaterial
// Il2CppName: GetDefaultParticleMaterial
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Material* (*)()>(&UnityEngine::Material::GetDefaultParticleMaterial)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "GetDefaultParticleMaterial", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::GetDefaultLineMaterial
// Il2CppName: GetDefaultLineMaterial
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Material* (*)()>(&UnityEngine::Material::GetDefaultLineMaterial)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "GetDefaultLineMaterial", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::get_shader
// Il2CppName: get_shader
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Shader* (UnityEngine::Material::*)()>(&UnityEngine::Material::get_shader)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "get_shader", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::set_shader
// Il2CppName: set_shader
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Material::*)(::UnityEngine::Shader*)>(&UnityEngine::Material::set_shader)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Shader")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "set_shader", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::get_color
// Il2CppName: get_color
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Color (UnityEngine::Material::*)()>(&UnityEngine::Material::get_color)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "get_color", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::set_color
// Il2CppName: set_color
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Material::*)(::UnityEngine::Color)>(&UnityEngine::Material::set_color)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Color")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "set_color", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::get_mainTexture
// Il2CppName: get_mainTexture
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Texture* (UnityEngine::Material::*)()>(&UnityEngine::Material::get_mainTexture)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "get_mainTexture", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::set_mainTexture
// Il2CppName: set_mainTexture
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Material::*)(::UnityEngine::Texture*)>(&UnityEngine::Material::set_mainTexture)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Texture")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "set_mainTexture", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::get_mainTextureOffset
// Il2CppName: get_mainTextureOffset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector2 (UnityEngine::Material::*)()>(&UnityEngine::Material::get_mainTextureOffset)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "get_mainTextureOffset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::set_mainTextureOffset
// Il2CppName: set_mainTextureOffset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Material::*)(::UnityEngine::Vector2)>(&UnityEngine::Material::set_mainTextureOffset)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector2")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "set_mainTextureOffset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::get_mainTextureScale
// Il2CppName: get_mainTextureScale
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector2 (UnityEngine::Material::*)()>(&UnityEngine::Material::get_mainTextureScale)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "get_mainTextureScale", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::set_mainTextureScale
// Il2CppName: set_mainTextureScale
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Material::*)(::UnityEngine::Vector2)>(&UnityEngine::Material::set_mainTextureScale)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector2")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "set_mainTextureScale", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::GetFirstPropertyNameIdByAttribute
// Il2CppName: GetFirstPropertyNameIdByAttribute
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::Material::*)(::UnityEngine::Rendering::ShaderPropertyFlags)>(&UnityEngine::Material::GetFirstPropertyNameIdByAttribute)> {
  static const MethodInfo* get() {
    static auto* attributeFlag = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "ShaderPropertyFlags")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "GetFirstPropertyNameIdByAttribute", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{attributeFlag});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::HasProperty
// Il2CppName: HasProperty
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::Material::*)(int)>(&UnityEngine::Material::HasProperty)> {
  static const MethodInfo* get() {
    static auto* nameID = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "HasProperty", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{nameID});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::HasProperty
// Il2CppName: HasProperty
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::Material::*)(::StringW)>(&UnityEngine::Material::HasProperty)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "HasProperty", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::HasFloatImpl
// Il2CppName: HasFloatImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::Material::*)(int)>(&UnityEngine::Material::HasFloatImpl)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "HasFloatImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::HasFloat
// Il2CppName: HasFloat
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::Material::*)(::StringW)>(&UnityEngine::Material::HasFloat)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "HasFloat", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::HasFloat
// Il2CppName: HasFloat
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::Material::*)(int)>(&UnityEngine::Material::HasFloat)> {
  static const MethodInfo* get() {
    static auto* nameID = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "HasFloat", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{nameID});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::HasInt
// Il2CppName: HasInt
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::Material::*)(::StringW)>(&UnityEngine::Material::HasInt)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "HasInt", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::HasInt
// Il2CppName: HasInt
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::Material::*)(int)>(&UnityEngine::Material::HasInt)> {
  static const MethodInfo* get() {
    static auto* nameID = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "HasInt", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{nameID});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::HasIntImpl
// Il2CppName: HasIntImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::Material::*)(int)>(&UnityEngine::Material::HasIntImpl)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "HasIntImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::HasInteger
// Il2CppName: HasInteger
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::Material::*)(::StringW)>(&UnityEngine::Material::HasInteger)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "HasInteger", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::HasInteger
// Il2CppName: HasInteger
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::Material::*)(int)>(&UnityEngine::Material::HasInteger)> {
  static const MethodInfo* get() {
    static auto* nameID = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "HasInteger", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{nameID});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::HasTextureImpl
// Il2CppName: HasTextureImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::Material::*)(int)>(&UnityEngine::Material::HasTextureImpl)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "HasTextureImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::HasTexture
// Il2CppName: HasTexture
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::Material::*)(::StringW)>(&UnityEngine::Material::HasTexture)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "HasTexture", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::HasTexture
// Il2CppName: HasTexture
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::Material::*)(int)>(&UnityEngine::Material::HasTexture)> {
  static const MethodInfo* get() {
    static auto* nameID = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "HasTexture", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{nameID});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::HasMatrixImpl
// Il2CppName: HasMatrixImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::Material::*)(int)>(&UnityEngine::Material::HasMatrixImpl)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "HasMatrixImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::HasMatrix
// Il2CppName: HasMatrix
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::Material::*)(::StringW)>(&UnityEngine::Material::HasMatrix)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "HasMatrix", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::HasMatrix
// Il2CppName: HasMatrix
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::Material::*)(int)>(&UnityEngine::Material::HasMatrix)> {
  static const MethodInfo* get() {
    static auto* nameID = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "HasMatrix", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{nameID});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::HasVectorImpl
// Il2CppName: HasVectorImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::Material::*)(int)>(&UnityEngine::Material::HasVectorImpl)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "HasVectorImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::HasVector
// Il2CppName: HasVector
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::Material::*)(::StringW)>(&UnityEngine::Material::HasVector)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "HasVector", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::HasVector
// Il2CppName: HasVector
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::Material::*)(int)>(&UnityEngine::Material::HasVector)> {
  static const MethodInfo* get() {
    static auto* nameID = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "HasVector", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{nameID});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::HasColor
// Il2CppName: HasColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::Material::*)(::StringW)>(&UnityEngine::Material::HasColor)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "HasColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::HasColor
// Il2CppName: HasColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::Material::*)(int)>(&UnityEngine::Material::HasColor)> {
  static const MethodInfo* get() {
    static auto* nameID = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "HasColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{nameID});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::HasBufferImpl
// Il2CppName: HasBufferImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::Material::*)(int)>(&UnityEngine::Material::HasBufferImpl)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "HasBufferImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::HasBuffer
// Il2CppName: HasBuffer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::Material::*)(::StringW)>(&UnityEngine::Material::HasBuffer)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "HasBuffer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::HasBuffer
// Il2CppName: HasBuffer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::Material::*)(int)>(&UnityEngine::Material::HasBuffer)> {
  static const MethodInfo* get() {
    static auto* nameID = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "HasBuffer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{nameID});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::HasConstantBufferImpl
// Il2CppName: HasConstantBufferImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::Material::*)(int)>(&UnityEngine::Material::HasConstantBufferImpl)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "HasConstantBufferImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::HasConstantBuffer
// Il2CppName: HasConstantBuffer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::Material::*)(::StringW)>(&UnityEngine::Material::HasConstantBuffer)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "HasConstantBuffer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::HasConstantBuffer
// Il2CppName: HasConstantBuffer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::Material::*)(int)>(&UnityEngine::Material::HasConstantBuffer)> {
  static const MethodInfo* get() {
    static auto* nameID = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "HasConstantBuffer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{nameID});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::get_renderQueue
// Il2CppName: get_renderQueue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::Material::*)()>(&UnityEngine::Material::get_renderQueue)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "get_renderQueue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::set_renderQueue
// Il2CppName: set_renderQueue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Material::*)(int)>(&UnityEngine::Material::set_renderQueue)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "set_renderQueue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::get_rawRenderQueue
// Il2CppName: get_rawRenderQueue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::Material::*)()>(&UnityEngine::Material::get_rawRenderQueue)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "get_rawRenderQueue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::EnableKeyword
// Il2CppName: EnableKeyword
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Material::*)(::StringW)>(&UnityEngine::Material::EnableKeyword)> {
  static const MethodInfo* get() {
    static auto* keyword = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "EnableKeyword", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{keyword});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::DisableKeyword
// Il2CppName: DisableKeyword
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Material::*)(::StringW)>(&UnityEngine::Material::DisableKeyword)> {
  static const MethodInfo* get() {
    static auto* keyword = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "DisableKeyword", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{keyword});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::IsKeywordEnabled
// Il2CppName: IsKeywordEnabled
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::Material::*)(::StringW)>(&UnityEngine::Material::IsKeywordEnabled)> {
  static const MethodInfo* get() {
    static auto* keyword = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "IsKeywordEnabled", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{keyword});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::EnableLocalKeyword
// Il2CppName: EnableLocalKeyword
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Material::*)(::UnityEngine::Rendering::LocalKeyword)>(&UnityEngine::Material::EnableLocalKeyword)> {
  static const MethodInfo* get() {
    static auto* keyword = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "LocalKeyword")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "EnableLocalKeyword", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{keyword});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::DisableLocalKeyword
// Il2CppName: DisableLocalKeyword
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Material::*)(::UnityEngine::Rendering::LocalKeyword)>(&UnityEngine::Material::DisableLocalKeyword)> {
  static const MethodInfo* get() {
    static auto* keyword = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "LocalKeyword")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "DisableLocalKeyword", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{keyword});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::SetLocalKeyword
// Il2CppName: SetLocalKeyword
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Material::*)(::UnityEngine::Rendering::LocalKeyword, bool)>(&UnityEngine::Material::SetLocalKeyword)> {
  static const MethodInfo* get() {
    static auto* keyword = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "LocalKeyword")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "SetLocalKeyword", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{keyword, value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::IsLocalKeywordEnabled
// Il2CppName: IsLocalKeywordEnabled
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::Material::*)(::UnityEngine::Rendering::LocalKeyword)>(&UnityEngine::Material::IsLocalKeywordEnabled)> {
  static const MethodInfo* get() {
    static auto* keyword = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "LocalKeyword")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "IsLocalKeywordEnabled", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{keyword});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::EnableKeyword
// Il2CppName: EnableKeyword
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Material::*)(ByRef<::UnityEngine::Rendering::LocalKeyword>)>(&UnityEngine::Material::EnableKeyword)> {
  static const MethodInfo* get() {
    static auto* keyword = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "LocalKeyword")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "EnableKeyword", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{keyword});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::DisableKeyword
// Il2CppName: DisableKeyword
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Material::*)(ByRef<::UnityEngine::Rendering::LocalKeyword>)>(&UnityEngine::Material::DisableKeyword)> {
  static const MethodInfo* get() {
    static auto* keyword = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "LocalKeyword")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "DisableKeyword", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{keyword});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::SetKeyword
// Il2CppName: SetKeyword
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Material::*)(ByRef<::UnityEngine::Rendering::LocalKeyword>, bool)>(&UnityEngine::Material::SetKeyword)> {
  static const MethodInfo* get() {
    static auto* keyword = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "LocalKeyword")->this_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "SetKeyword", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{keyword, value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::IsKeywordEnabled
// Il2CppName: IsKeywordEnabled
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::Material::*)(ByRef<::UnityEngine::Rendering::LocalKeyword>)>(&UnityEngine::Material::IsKeywordEnabled)> {
  static const MethodInfo* get() {
    static auto* keyword = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "LocalKeyword")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "IsKeywordEnabled", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{keyword});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::GetEnabledKeywords
// Il2CppName: GetEnabledKeywords
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::UnityEngine::Rendering::LocalKeyword> (UnityEngine::Material::*)()>(&UnityEngine::Material::GetEnabledKeywords)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "GetEnabledKeywords", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::SetEnabledKeywords
// Il2CppName: SetEnabledKeywords
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Material::*)(::ArrayW<::UnityEngine::Rendering::LocalKeyword>)>(&UnityEngine::Material::SetEnabledKeywords)> {
  static const MethodInfo* get() {
    static auto* keywords = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "LocalKeyword"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "SetEnabledKeywords", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{keywords});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::get_enabledKeywords
// Il2CppName: get_enabledKeywords
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::UnityEngine::Rendering::LocalKeyword> (UnityEngine::Material::*)()>(&UnityEngine::Material::get_enabledKeywords)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "get_enabledKeywords", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::set_enabledKeywords
// Il2CppName: set_enabledKeywords
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Material::*)(::ArrayW<::UnityEngine::Rendering::LocalKeyword>)>(&UnityEngine::Material::set_enabledKeywords)> {
  static const MethodInfo* get() {
    static auto* value = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "LocalKeyword"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "set_enabledKeywords", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::get_globalIlluminationFlags
// Il2CppName: get_globalIlluminationFlags
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::MaterialGlobalIlluminationFlags (UnityEngine::Material::*)()>(&UnityEngine::Material::get_globalIlluminationFlags)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "get_globalIlluminationFlags", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::set_globalIlluminationFlags
// Il2CppName: set_globalIlluminationFlags
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Material::*)(::UnityEngine::MaterialGlobalIlluminationFlags)>(&UnityEngine::Material::set_globalIlluminationFlags)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "MaterialGlobalIlluminationFlags")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "set_globalIlluminationFlags", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::get_doubleSidedGI
// Il2CppName: get_doubleSidedGI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::Material::*)()>(&UnityEngine::Material::get_doubleSidedGI)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "get_doubleSidedGI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::set_doubleSidedGI
// Il2CppName: set_doubleSidedGI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Material::*)(bool)>(&UnityEngine::Material::set_doubleSidedGI)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "set_doubleSidedGI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::get_enableInstancing
// Il2CppName: get_enableInstancing
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::Material::*)()>(&UnityEngine::Material::get_enableInstancing)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "get_enableInstancing", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::set_enableInstancing
// Il2CppName: set_enableInstancing
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Material::*)(bool)>(&UnityEngine::Material::set_enableInstancing)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "set_enableInstancing", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::get_passCount
// Il2CppName: get_passCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::Material::*)()>(&UnityEngine::Material::get_passCount)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "get_passCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::SetShaderPassEnabled
// Il2CppName: SetShaderPassEnabled
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Material::*)(::StringW, bool)>(&UnityEngine::Material::SetShaderPassEnabled)> {
  static const MethodInfo* get() {
    static auto* passName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* enabled = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "SetShaderPassEnabled", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{passName, enabled});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::GetShaderPassEnabled
// Il2CppName: GetShaderPassEnabled
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::Material::*)(::StringW)>(&UnityEngine::Material::GetShaderPassEnabled)> {
  static const MethodInfo* get() {
    static auto* passName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "GetShaderPassEnabled", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{passName});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::GetPassName
// Il2CppName: GetPassName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (UnityEngine::Material::*)(int)>(&UnityEngine::Material::GetPassName)> {
  static const MethodInfo* get() {
    static auto* pass = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "GetPassName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{pass});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::FindPass
// Il2CppName: FindPass
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::Material::*)(::StringW)>(&UnityEngine::Material::FindPass)> {
  static const MethodInfo* get() {
    static auto* passName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "FindPass", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{passName});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::SetOverrideTag
// Il2CppName: SetOverrideTag
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Material::*)(::StringW, ::StringW)>(&UnityEngine::Material::SetOverrideTag)> {
  static const MethodInfo* get() {
    static auto* tag = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* val = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "SetOverrideTag", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{tag, val});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::GetTagImpl
// Il2CppName: GetTagImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (UnityEngine::Material::*)(::StringW, bool, ::StringW)>(&UnityEngine::Material::GetTagImpl)> {
  static const MethodInfo* get() {
    static auto* tag = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* currentSubShaderOnly = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* defaultValue = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "GetTagImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{tag, currentSubShaderOnly, defaultValue});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::GetTag
// Il2CppName: GetTag
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (UnityEngine::Material::*)(::StringW, bool, ::StringW)>(&UnityEngine::Material::GetTag)> {
  static const MethodInfo* get() {
    static auto* tag = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* searchFallbacks = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* defaultValue = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "GetTag", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{tag, searchFallbacks, defaultValue});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::GetTag
// Il2CppName: GetTag
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (UnityEngine::Material::*)(::StringW, bool)>(&UnityEngine::Material::GetTag)> {
  static const MethodInfo* get() {
    static auto* tag = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* searchFallbacks = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "GetTag", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{tag, searchFallbacks});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::Lerp
// Il2CppName: Lerp
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Material::*)(::UnityEngine::Material*, ::UnityEngine::Material*, float)>(&UnityEngine::Material::Lerp)> {
  static const MethodInfo* get() {
    static auto* start = &::il2cpp_utils::GetClassFromName("UnityEngine", "Material")->byval_arg;
    static auto* end = &::il2cpp_utils::GetClassFromName("UnityEngine", "Material")->byval_arg;
    static auto* t = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "Lerp", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{start, end, t});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::SetPass
// Il2CppName: SetPass
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::Material::*)(int)>(&UnityEngine::Material::SetPass)> {
  static const MethodInfo* get() {
    static auto* pass = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "SetPass", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{pass});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::CopyPropertiesFromMaterial
// Il2CppName: CopyPropertiesFromMaterial
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Material::*)(::UnityEngine::Material*)>(&UnityEngine::Material::CopyPropertiesFromMaterial)> {
  static const MethodInfo* get() {
    static auto* mat = &::il2cpp_utils::GetClassFromName("UnityEngine", "Material")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "CopyPropertiesFromMaterial", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{mat});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::CopyMatchingPropertiesFromMaterial
// Il2CppName: CopyMatchingPropertiesFromMaterial
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Material::*)(::UnityEngine::Material*)>(&UnityEngine::Material::CopyMatchingPropertiesFromMaterial)> {
  static const MethodInfo* get() {
    static auto* mat = &::il2cpp_utils::GetClassFromName("UnityEngine", "Material")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "CopyMatchingPropertiesFromMaterial", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{mat});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::GetShaderKeywords
// Il2CppName: GetShaderKeywords
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::StringW> (UnityEngine::Material::*)()>(&UnityEngine::Material::GetShaderKeywords)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "GetShaderKeywords", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::SetShaderKeywords
// Il2CppName: SetShaderKeywords
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Material::*)(::ArrayW<::StringW>)>(&UnityEngine::Material::SetShaderKeywords)> {
  static const MethodInfo* get() {
    static auto* names = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "String"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "SetShaderKeywords", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{names});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::get_shaderKeywords
// Il2CppName: get_shaderKeywords
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::StringW> (UnityEngine::Material::*)()>(&UnityEngine::Material::get_shaderKeywords)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "get_shaderKeywords", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::set_shaderKeywords
// Il2CppName: set_shaderKeywords
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Material::*)(::ArrayW<::StringW>)>(&UnityEngine::Material::set_shaderKeywords)> {
  static const MethodInfo* get() {
    static auto* value = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "String"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "set_shaderKeywords", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::GetPropertyNamesImpl
// Il2CppName: GetPropertyNamesImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::StringW> (UnityEngine::Material::*)(int)>(&UnityEngine::Material::GetPropertyNamesImpl)> {
  static const MethodInfo* get() {
    static auto* propertyType = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "GetPropertyNamesImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{propertyType});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::ComputeCRC
// Il2CppName: ComputeCRC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::Material::*)()>(&UnityEngine::Material::ComputeCRC)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "ComputeCRC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::GetTexturePropertyNames
// Il2CppName: GetTexturePropertyNames
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::StringW> (UnityEngine::Material::*)()>(&UnityEngine::Material::GetTexturePropertyNames)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "GetTexturePropertyNames", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::GetTexturePropertyNameIDs
// Il2CppName: GetTexturePropertyNameIDs
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<int> (UnityEngine::Material::*)()>(&UnityEngine::Material::GetTexturePropertyNameIDs)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "GetTexturePropertyNameIDs", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::GetTexturePropertyNamesInternal
// Il2CppName: GetTexturePropertyNamesInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Material::*)(::Il2CppObject*)>(&UnityEngine::Material::GetTexturePropertyNamesInternal)> {
  static const MethodInfo* get() {
    static auto* outNames = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "GetTexturePropertyNamesInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{outNames});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::GetTexturePropertyNameIDsInternal
// Il2CppName: GetTexturePropertyNameIDsInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Material::*)(::Il2CppObject*)>(&UnityEngine::Material::GetTexturePropertyNameIDsInternal)> {
  static const MethodInfo* get() {
    static auto* outNames = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "GetTexturePropertyNameIDsInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{outNames});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::GetTexturePropertyNames
// Il2CppName: GetTexturePropertyNames
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Material::*)(::System::Collections::Generic::List_1<::StringW>*)>(&UnityEngine::Material::GetTexturePropertyNames)> {
  static const MethodInfo* get() {
    static auto* outNames = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "GetTexturePropertyNames", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{outNames});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::GetTexturePropertyNameIDs
// Il2CppName: GetTexturePropertyNameIDs
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Material::*)(::System::Collections::Generic::List_1<int>*)>(&UnityEngine::Material::GetTexturePropertyNameIDs)> {
  static const MethodInfo* get() {
    static auto* outNames = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Int32")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "GetTexturePropertyNameIDs", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{outNames});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::SetIntImpl
// Il2CppName: SetIntImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Material::*)(int, int)>(&UnityEngine::Material::SetIntImpl)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "SetIntImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name, value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::SetFloatImpl
// Il2CppName: SetFloatImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Material::*)(int, float)>(&UnityEngine::Material::SetFloatImpl)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "SetFloatImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name, value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::SetColorImpl
// Il2CppName: SetColorImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Material::*)(int, ::UnityEngine::Color)>(&UnityEngine::Material::SetColorImpl)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Color")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "SetColorImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name, value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::SetMatrixImpl
// Il2CppName: SetMatrixImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Material::*)(int, ::UnityEngine::Matrix4x4)>(&UnityEngine::Material::SetMatrixImpl)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Matrix4x4")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "SetMatrixImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name, value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::SetTextureImpl
// Il2CppName: SetTextureImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Material::*)(int, ::UnityEngine::Texture*)>(&UnityEngine::Material::SetTextureImpl)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Texture")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "SetTextureImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name, value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::SetRenderTextureImpl
// Il2CppName: SetRenderTextureImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Material::*)(int, ::UnityEngine::RenderTexture*, ::UnityEngine::Rendering::RenderTextureSubElement)>(&UnityEngine::Material::SetRenderTextureImpl)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "RenderTexture")->byval_arg;
    static auto* element = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "RenderTextureSubElement")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "SetRenderTextureImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name, value, element});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::SetBufferImpl
// Il2CppName: SetBufferImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Material::*)(int, ::UnityEngine::ComputeBuffer*)>(&UnityEngine::Material::SetBufferImpl)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "ComputeBuffer")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "SetBufferImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name, value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::SetGraphicsBufferImpl
// Il2CppName: SetGraphicsBufferImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Material::*)(int, ::UnityEngine::GraphicsBuffer*)>(&UnityEngine::Material::SetGraphicsBufferImpl)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "GraphicsBuffer")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "SetGraphicsBufferImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name, value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::SetConstantBufferImpl
// Il2CppName: SetConstantBufferImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Material::*)(int, ::UnityEngine::ComputeBuffer*, int, int)>(&UnityEngine::Material::SetConstantBufferImpl)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "ComputeBuffer")->byval_arg;
    static auto* offset = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* size = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "SetConstantBufferImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name, value, offset, size});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::SetConstantGraphicsBufferImpl
// Il2CppName: SetConstantGraphicsBufferImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Material::*)(int, ::UnityEngine::GraphicsBuffer*, int, int)>(&UnityEngine::Material::SetConstantGraphicsBufferImpl)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "GraphicsBuffer")->byval_arg;
    static auto* offset = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* size = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "SetConstantGraphicsBufferImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name, value, offset, size});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::GetIntImpl
// Il2CppName: GetIntImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::Material::*)(int)>(&UnityEngine::Material::GetIntImpl)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "GetIntImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::GetFloatImpl
// Il2CppName: GetFloatImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::Material::*)(int)>(&UnityEngine::Material::GetFloatImpl)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "GetFloatImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::GetColorImpl
// Il2CppName: GetColorImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Color (UnityEngine::Material::*)(int)>(&UnityEngine::Material::GetColorImpl)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "GetColorImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::GetMatrixImpl
// Il2CppName: GetMatrixImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Matrix4x4 (UnityEngine::Material::*)(int)>(&UnityEngine::Material::GetMatrixImpl)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "GetMatrixImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::GetTextureImpl
// Il2CppName: GetTextureImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Texture* (UnityEngine::Material::*)(int)>(&UnityEngine::Material::GetTextureImpl)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "GetTextureImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::GetBufferImpl
// Il2CppName: GetBufferImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::GraphicsBufferHandle (UnityEngine::Material::*)(int)>(&UnityEngine::Material::GetBufferImpl)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "GetBufferImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::GetConstantBufferImpl
// Il2CppName: GetConstantBufferImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::GraphicsBufferHandle (UnityEngine::Material::*)(int)>(&UnityEngine::Material::GetConstantBufferImpl)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "GetConstantBufferImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::SetFloatArrayImpl
// Il2CppName: SetFloatArrayImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Material::*)(int, ::ArrayW<float>, int)>(&UnityEngine::Material::SetFloatArrayImpl)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* values = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Single"), 1)->byval_arg;
    static auto* count = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "SetFloatArrayImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name, values, count});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::SetVectorArrayImpl
// Il2CppName: SetVectorArrayImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Material::*)(int, ::ArrayW<::UnityEngine::Vector4>, int)>(&UnityEngine::Material::SetVectorArrayImpl)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* values = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("UnityEngine", "Vector4"), 1)->byval_arg;
    static auto* count = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "SetVectorArrayImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name, values, count});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::SetColorArrayImpl
// Il2CppName: SetColorArrayImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Material::*)(int, ::ArrayW<::UnityEngine::Color>, int)>(&UnityEngine::Material::SetColorArrayImpl)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* values = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("UnityEngine", "Color"), 1)->byval_arg;
    static auto* count = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "SetColorArrayImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name, values, count});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::SetMatrixArrayImpl
// Il2CppName: SetMatrixArrayImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Material::*)(int, ::ArrayW<::UnityEngine::Matrix4x4>, int)>(&UnityEngine::Material::SetMatrixArrayImpl)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* values = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("UnityEngine", "Matrix4x4"), 1)->byval_arg;
    static auto* count = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "SetMatrixArrayImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name, values, count});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::GetFloatArrayImpl
// Il2CppName: GetFloatArrayImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<float> (UnityEngine::Material::*)(int)>(&UnityEngine::Material::GetFloatArrayImpl)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "GetFloatArrayImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::GetVectorArrayImpl
// Il2CppName: GetVectorArrayImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::UnityEngine::Vector4> (UnityEngine::Material::*)(int)>(&UnityEngine::Material::GetVectorArrayImpl)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "GetVectorArrayImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::GetColorArrayImpl
// Il2CppName: GetColorArrayImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::UnityEngine::Color> (UnityEngine::Material::*)(int)>(&UnityEngine::Material::GetColorArrayImpl)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "GetColorArrayImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::GetMatrixArrayImpl
// Il2CppName: GetMatrixArrayImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::UnityEngine::Matrix4x4> (UnityEngine::Material::*)(int)>(&UnityEngine::Material::GetMatrixArrayImpl)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "GetMatrixArrayImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::GetFloatArrayCountImpl
// Il2CppName: GetFloatArrayCountImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::Material::*)(int)>(&UnityEngine::Material::GetFloatArrayCountImpl)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "GetFloatArrayCountImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::GetVectorArrayCountImpl
// Il2CppName: GetVectorArrayCountImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::Material::*)(int)>(&UnityEngine::Material::GetVectorArrayCountImpl)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "GetVectorArrayCountImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::GetColorArrayCountImpl
// Il2CppName: GetColorArrayCountImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::Material::*)(int)>(&UnityEngine::Material::GetColorArrayCountImpl)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "GetColorArrayCountImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::GetMatrixArrayCountImpl
// Il2CppName: GetMatrixArrayCountImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::Material::*)(int)>(&UnityEngine::Material::GetMatrixArrayCountImpl)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "GetMatrixArrayCountImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::ExtractFloatArrayImpl
// Il2CppName: ExtractFloatArrayImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Material::*)(int, ByRef<::ArrayW<float>>)>(&UnityEngine::Material::ExtractFloatArrayImpl)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* val = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Single"), 1)->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "ExtractFloatArrayImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name, val});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::ExtractVectorArrayImpl
// Il2CppName: ExtractVectorArrayImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Material::*)(int, ByRef<::ArrayW<::UnityEngine::Vector4>>)>(&UnityEngine::Material::ExtractVectorArrayImpl)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* val = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("UnityEngine", "Vector4"), 1)->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "ExtractVectorArrayImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name, val});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::ExtractColorArrayImpl
// Il2CppName: ExtractColorArrayImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Material::*)(int, ByRef<::ArrayW<::UnityEngine::Color>>)>(&UnityEngine::Material::ExtractColorArrayImpl)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* val = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("UnityEngine", "Color"), 1)->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "ExtractColorArrayImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name, val});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::ExtractMatrixArrayImpl
// Il2CppName: ExtractMatrixArrayImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Material::*)(int, ByRef<::ArrayW<::UnityEngine::Matrix4x4>>)>(&UnityEngine::Material::ExtractMatrixArrayImpl)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* val = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("UnityEngine", "Matrix4x4"), 1)->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "ExtractMatrixArrayImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name, val});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::GetTextureScaleAndOffsetImpl
// Il2CppName: GetTextureScaleAndOffsetImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector4 (UnityEngine::Material::*)(int)>(&UnityEngine::Material::GetTextureScaleAndOffsetImpl)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "GetTextureScaleAndOffsetImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::SetTextureOffsetImpl
// Il2CppName: SetTextureOffsetImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Material::*)(int, ::UnityEngine::Vector2)>(&UnityEngine::Material::SetTextureOffsetImpl)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* offset = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector2")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "SetTextureOffsetImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name, offset});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::SetTextureScaleImpl
// Il2CppName: SetTextureScaleImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Material::*)(int, ::UnityEngine::Vector2)>(&UnityEngine::Material::SetTextureScaleImpl)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* scale = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector2")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "SetTextureScaleImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name, scale});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::SetFloatArray
// Il2CppName: SetFloatArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Material::*)(int, ::ArrayW<float>, int)>(&UnityEngine::Material::SetFloatArray)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* values = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Single"), 1)->byval_arg;
    static auto* count = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "SetFloatArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name, values, count});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::SetVectorArray
// Il2CppName: SetVectorArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Material::*)(int, ::ArrayW<::UnityEngine::Vector4>, int)>(&UnityEngine::Material::SetVectorArray)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* values = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("UnityEngine", "Vector4"), 1)->byval_arg;
    static auto* count = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "SetVectorArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name, values, count});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::SetColorArray
// Il2CppName: SetColorArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Material::*)(int, ::ArrayW<::UnityEngine::Color>, int)>(&UnityEngine::Material::SetColorArray)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* values = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("UnityEngine", "Color"), 1)->byval_arg;
    static auto* count = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "SetColorArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name, values, count});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::SetMatrixArray
// Il2CppName: SetMatrixArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Material::*)(int, ::ArrayW<::UnityEngine::Matrix4x4>, int)>(&UnityEngine::Material::SetMatrixArray)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* values = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("UnityEngine", "Matrix4x4"), 1)->byval_arg;
    static auto* count = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "SetMatrixArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name, values, count});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::ExtractFloatArray
// Il2CppName: ExtractFloatArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Material::*)(int, ::System::Collections::Generic::List_1<float>*)>(&UnityEngine::Material::ExtractFloatArray)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* values = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Single")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "ExtractFloatArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name, values});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::ExtractVectorArray
// Il2CppName: ExtractVectorArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Material::*)(int, ::System::Collections::Generic::List_1<::UnityEngine::Vector4>*)>(&UnityEngine::Material::ExtractVectorArray)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* values = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine", "Vector4")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "ExtractVectorArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name, values});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::ExtractColorArray
// Il2CppName: ExtractColorArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Material::*)(int, ::System::Collections::Generic::List_1<::UnityEngine::Color>*)>(&UnityEngine::Material::ExtractColorArray)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* values = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine", "Color")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "ExtractColorArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name, values});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::ExtractMatrixArray
// Il2CppName: ExtractMatrixArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Material::*)(int, ::System::Collections::Generic::List_1<::UnityEngine::Matrix4x4>*)>(&UnityEngine::Material::ExtractMatrixArray)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* values = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine", "Matrix4x4")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "ExtractMatrixArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name, values});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::SetInt
// Il2CppName: SetInt
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Material::*)(::StringW, int)>(&UnityEngine::Material::SetInt)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "SetInt", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name, value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::SetInt
// Il2CppName: SetInt
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Material::*)(int, int)>(&UnityEngine::Material::SetInt)> {
  static const MethodInfo* get() {
    static auto* nameID = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "SetInt", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{nameID, value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::SetFloat
// Il2CppName: SetFloat
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Material::*)(::StringW, float)>(&UnityEngine::Material::SetFloat)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "SetFloat", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name, value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::SetFloat
// Il2CppName: SetFloat
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Material::*)(int, float)>(&UnityEngine::Material::SetFloat)> {
  static const MethodInfo* get() {
    static auto* nameID = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "SetFloat", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{nameID, value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::SetInteger
// Il2CppName: SetInteger
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Material::*)(::StringW, int)>(&UnityEngine::Material::SetInteger)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "SetInteger", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name, value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::SetInteger
// Il2CppName: SetInteger
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Material::*)(int, int)>(&UnityEngine::Material::SetInteger)> {
  static const MethodInfo* get() {
    static auto* nameID = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "SetInteger", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{nameID, value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::SetColor
// Il2CppName: SetColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Material::*)(::StringW, ::UnityEngine::Color)>(&UnityEngine::Material::SetColor)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Color")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "SetColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name, value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::SetColor
// Il2CppName: SetColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Material::*)(int, ::UnityEngine::Color)>(&UnityEngine::Material::SetColor)> {
  static const MethodInfo* get() {
    static auto* nameID = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Color")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "SetColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{nameID, value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::SetVector
// Il2CppName: SetVector
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Material::*)(::StringW, ::UnityEngine::Vector4)>(&UnityEngine::Material::SetVector)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector4")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "SetVector", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name, value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::SetVector
// Il2CppName: SetVector
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Material::*)(int, ::UnityEngine::Vector4)>(&UnityEngine::Material::SetVector)> {
  static const MethodInfo* get() {
    static auto* nameID = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector4")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "SetVector", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{nameID, value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::SetMatrix
// Il2CppName: SetMatrix
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Material::*)(::StringW, ::UnityEngine::Matrix4x4)>(&UnityEngine::Material::SetMatrix)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Matrix4x4")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "SetMatrix", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name, value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::SetMatrix
// Il2CppName: SetMatrix
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Material::*)(int, ::UnityEngine::Matrix4x4)>(&UnityEngine::Material::SetMatrix)> {
  static const MethodInfo* get() {
    static auto* nameID = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Matrix4x4")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "SetMatrix", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{nameID, value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::SetTexture
// Il2CppName: SetTexture
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Material::*)(::StringW, ::UnityEngine::Texture*)>(&UnityEngine::Material::SetTexture)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Texture")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "SetTexture", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name, value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::SetTexture
// Il2CppName: SetTexture
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Material::*)(int, ::UnityEngine::Texture*)>(&UnityEngine::Material::SetTexture)> {
  static const MethodInfo* get() {
    static auto* nameID = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Texture")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "SetTexture", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{nameID, value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::SetTexture
// Il2CppName: SetTexture
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Material::*)(::StringW, ::UnityEngine::RenderTexture*, ::UnityEngine::Rendering::RenderTextureSubElement)>(&UnityEngine::Material::SetTexture)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "RenderTexture")->byval_arg;
    static auto* element = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "RenderTextureSubElement")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "SetTexture", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name, value, element});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::SetTexture
// Il2CppName: SetTexture
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Material::*)(int, ::UnityEngine::RenderTexture*, ::UnityEngine::Rendering::RenderTextureSubElement)>(&UnityEngine::Material::SetTexture)> {
  static const MethodInfo* get() {
    static auto* nameID = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "RenderTexture")->byval_arg;
    static auto* element = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "RenderTextureSubElement")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "SetTexture", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{nameID, value, element});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::SetBuffer
// Il2CppName: SetBuffer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Material::*)(::StringW, ::UnityEngine::ComputeBuffer*)>(&UnityEngine::Material::SetBuffer)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "ComputeBuffer")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "SetBuffer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name, value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::SetBuffer
// Il2CppName: SetBuffer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Material::*)(int, ::UnityEngine::ComputeBuffer*)>(&UnityEngine::Material::SetBuffer)> {
  static const MethodInfo* get() {
    static auto* nameID = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "ComputeBuffer")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "SetBuffer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{nameID, value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::SetBuffer
// Il2CppName: SetBuffer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Material::*)(::StringW, ::UnityEngine::GraphicsBuffer*)>(&UnityEngine::Material::SetBuffer)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "GraphicsBuffer")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "SetBuffer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name, value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::SetBuffer
// Il2CppName: SetBuffer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Material::*)(int, ::UnityEngine::GraphicsBuffer*)>(&UnityEngine::Material::SetBuffer)> {
  static const MethodInfo* get() {
    static auto* nameID = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "GraphicsBuffer")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "SetBuffer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{nameID, value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::SetConstantBuffer
// Il2CppName: SetConstantBuffer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Material::*)(::StringW, ::UnityEngine::ComputeBuffer*, int, int)>(&UnityEngine::Material::SetConstantBuffer)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "ComputeBuffer")->byval_arg;
    static auto* offset = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* size = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "SetConstantBuffer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name, value, offset, size});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::SetConstantBuffer
// Il2CppName: SetConstantBuffer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Material::*)(int, ::UnityEngine::ComputeBuffer*, int, int)>(&UnityEngine::Material::SetConstantBuffer)> {
  static const MethodInfo* get() {
    static auto* nameID = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "ComputeBuffer")->byval_arg;
    static auto* offset = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* size = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "SetConstantBuffer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{nameID, value, offset, size});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::SetConstantBuffer
// Il2CppName: SetConstantBuffer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Material::*)(::StringW, ::UnityEngine::GraphicsBuffer*, int, int)>(&UnityEngine::Material::SetConstantBuffer)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "GraphicsBuffer")->byval_arg;
    static auto* offset = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* size = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "SetConstantBuffer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name, value, offset, size});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::SetConstantBuffer
// Il2CppName: SetConstantBuffer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Material::*)(int, ::UnityEngine::GraphicsBuffer*, int, int)>(&UnityEngine::Material::SetConstantBuffer)> {
  static const MethodInfo* get() {
    static auto* nameID = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "GraphicsBuffer")->byval_arg;
    static auto* offset = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* size = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "SetConstantBuffer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{nameID, value, offset, size});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::SetFloatArray
// Il2CppName: SetFloatArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Material::*)(::StringW, ::System::Collections::Generic::List_1<float>*)>(&UnityEngine::Material::SetFloatArray)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* values = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Single")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "SetFloatArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name, values});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::SetFloatArray
// Il2CppName: SetFloatArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Material::*)(int, ::System::Collections::Generic::List_1<float>*)>(&UnityEngine::Material::SetFloatArray)> {
  static const MethodInfo* get() {
    static auto* nameID = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* values = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Single")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "SetFloatArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{nameID, values});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::SetFloatArray
// Il2CppName: SetFloatArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Material::*)(::StringW, ::ArrayW<float>)>(&UnityEngine::Material::SetFloatArray)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* values = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Single"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "SetFloatArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name, values});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::SetFloatArray
// Il2CppName: SetFloatArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Material::*)(int, ::ArrayW<float>)>(&UnityEngine::Material::SetFloatArray)> {
  static const MethodInfo* get() {
    static auto* nameID = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* values = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Single"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "SetFloatArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{nameID, values});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::SetColorArray
// Il2CppName: SetColorArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Material::*)(::StringW, ::System::Collections::Generic::List_1<::UnityEngine::Color>*)>(&UnityEngine::Material::SetColorArray)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* values = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine", "Color")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "SetColorArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name, values});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::SetColorArray
// Il2CppName: SetColorArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Material::*)(int, ::System::Collections::Generic::List_1<::UnityEngine::Color>*)>(&UnityEngine::Material::SetColorArray)> {
  static const MethodInfo* get() {
    static auto* nameID = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* values = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine", "Color")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "SetColorArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{nameID, values});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::SetColorArray
// Il2CppName: SetColorArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Material::*)(::StringW, ::ArrayW<::UnityEngine::Color>)>(&UnityEngine::Material::SetColorArray)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* values = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("UnityEngine", "Color"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "SetColorArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name, values});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::SetColorArray
// Il2CppName: SetColorArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Material::*)(int, ::ArrayW<::UnityEngine::Color>)>(&UnityEngine::Material::SetColorArray)> {
  static const MethodInfo* get() {
    static auto* nameID = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* values = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("UnityEngine", "Color"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "SetColorArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{nameID, values});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::SetVectorArray
// Il2CppName: SetVectorArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Material::*)(::StringW, ::System::Collections::Generic::List_1<::UnityEngine::Vector4>*)>(&UnityEngine::Material::SetVectorArray)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* values = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine", "Vector4")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "SetVectorArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name, values});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::SetVectorArray
// Il2CppName: SetVectorArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Material::*)(int, ::System::Collections::Generic::List_1<::UnityEngine::Vector4>*)>(&UnityEngine::Material::SetVectorArray)> {
  static const MethodInfo* get() {
    static auto* nameID = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* values = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine", "Vector4")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "SetVectorArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{nameID, values});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::SetVectorArray
// Il2CppName: SetVectorArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Material::*)(::StringW, ::ArrayW<::UnityEngine::Vector4>)>(&UnityEngine::Material::SetVectorArray)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* values = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("UnityEngine", "Vector4"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "SetVectorArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name, values});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::SetVectorArray
// Il2CppName: SetVectorArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Material::*)(int, ::ArrayW<::UnityEngine::Vector4>)>(&UnityEngine::Material::SetVectorArray)> {
  static const MethodInfo* get() {
    static auto* nameID = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* values = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("UnityEngine", "Vector4"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "SetVectorArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{nameID, values});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::SetMatrixArray
// Il2CppName: SetMatrixArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Material::*)(::StringW, ::System::Collections::Generic::List_1<::UnityEngine::Matrix4x4>*)>(&UnityEngine::Material::SetMatrixArray)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* values = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine", "Matrix4x4")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "SetMatrixArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name, values});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::SetMatrixArray
// Il2CppName: SetMatrixArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Material::*)(int, ::System::Collections::Generic::List_1<::UnityEngine::Matrix4x4>*)>(&UnityEngine::Material::SetMatrixArray)> {
  static const MethodInfo* get() {
    static auto* nameID = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* values = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine", "Matrix4x4")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "SetMatrixArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{nameID, values});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::SetMatrixArray
// Il2CppName: SetMatrixArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Material::*)(::StringW, ::ArrayW<::UnityEngine::Matrix4x4>)>(&UnityEngine::Material::SetMatrixArray)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* values = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("UnityEngine", "Matrix4x4"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "SetMatrixArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name, values});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::SetMatrixArray
// Il2CppName: SetMatrixArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Material::*)(int, ::ArrayW<::UnityEngine::Matrix4x4>)>(&UnityEngine::Material::SetMatrixArray)> {
  static const MethodInfo* get() {
    static auto* nameID = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* values = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("UnityEngine", "Matrix4x4"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "SetMatrixArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{nameID, values});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::GetInt
// Il2CppName: GetInt
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::Material::*)(::StringW)>(&UnityEngine::Material::GetInt)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "GetInt", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::GetInt
// Il2CppName: GetInt
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::Material::*)(int)>(&UnityEngine::Material::GetInt)> {
  static const MethodInfo* get() {
    static auto* nameID = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "GetInt", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{nameID});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::GetFloat
// Il2CppName: GetFloat
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::Material::*)(::StringW)>(&UnityEngine::Material::GetFloat)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "GetFloat", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::GetFloat
// Il2CppName: GetFloat
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::Material::*)(int)>(&UnityEngine::Material::GetFloat)> {
  static const MethodInfo* get() {
    static auto* nameID = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "GetFloat", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{nameID});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::GetInteger
// Il2CppName: GetInteger
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::Material::*)(::StringW)>(&UnityEngine::Material::GetInteger)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "GetInteger", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::GetInteger
// Il2CppName: GetInteger
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::Material::*)(int)>(&UnityEngine::Material::GetInteger)> {
  static const MethodInfo* get() {
    static auto* nameID = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "GetInteger", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{nameID});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::GetColor
// Il2CppName: GetColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Color (UnityEngine::Material::*)(::StringW)>(&UnityEngine::Material::GetColor)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "GetColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::GetColor
// Il2CppName: GetColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Color (UnityEngine::Material::*)(int)>(&UnityEngine::Material::GetColor)> {
  static const MethodInfo* get() {
    static auto* nameID = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "GetColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{nameID});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::GetVector
// Il2CppName: GetVector
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector4 (UnityEngine::Material::*)(::StringW)>(&UnityEngine::Material::GetVector)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "GetVector", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::GetVector
// Il2CppName: GetVector
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector4 (UnityEngine::Material::*)(int)>(&UnityEngine::Material::GetVector)> {
  static const MethodInfo* get() {
    static auto* nameID = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "GetVector", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{nameID});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::GetMatrix
// Il2CppName: GetMatrix
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Matrix4x4 (UnityEngine::Material::*)(::StringW)>(&UnityEngine::Material::GetMatrix)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "GetMatrix", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::GetMatrix
// Il2CppName: GetMatrix
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Matrix4x4 (UnityEngine::Material::*)(int)>(&UnityEngine::Material::GetMatrix)> {
  static const MethodInfo* get() {
    static auto* nameID = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "GetMatrix", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{nameID});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::GetTexture
// Il2CppName: GetTexture
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Texture* (UnityEngine::Material::*)(::StringW)>(&UnityEngine::Material::GetTexture)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "GetTexture", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::GetTexture
// Il2CppName: GetTexture
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Texture* (UnityEngine::Material::*)(int)>(&UnityEngine::Material::GetTexture)> {
  static const MethodInfo* get() {
    static auto* nameID = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "GetTexture", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{nameID});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::GetBuffer
// Il2CppName: GetBuffer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::GraphicsBufferHandle (UnityEngine::Material::*)(::StringW)>(&UnityEngine::Material::GetBuffer)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "GetBuffer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::GetConstantBuffer
// Il2CppName: GetConstantBuffer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::GraphicsBufferHandle (UnityEngine::Material::*)(::StringW)>(&UnityEngine::Material::GetConstantBuffer)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "GetConstantBuffer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::GetFloatArray
// Il2CppName: GetFloatArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<float> (UnityEngine::Material::*)(::StringW)>(&UnityEngine::Material::GetFloatArray)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "GetFloatArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::GetFloatArray
// Il2CppName: GetFloatArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<float> (UnityEngine::Material::*)(int)>(&UnityEngine::Material::GetFloatArray)> {
  static const MethodInfo* get() {
    static auto* nameID = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "GetFloatArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{nameID});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::GetColorArray
// Il2CppName: GetColorArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::UnityEngine::Color> (UnityEngine::Material::*)(::StringW)>(&UnityEngine::Material::GetColorArray)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "GetColorArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::GetColorArray
// Il2CppName: GetColorArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::UnityEngine::Color> (UnityEngine::Material::*)(int)>(&UnityEngine::Material::GetColorArray)> {
  static const MethodInfo* get() {
    static auto* nameID = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "GetColorArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{nameID});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::GetVectorArray
// Il2CppName: GetVectorArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::UnityEngine::Vector4> (UnityEngine::Material::*)(::StringW)>(&UnityEngine::Material::GetVectorArray)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "GetVectorArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::GetVectorArray
// Il2CppName: GetVectorArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::UnityEngine::Vector4> (UnityEngine::Material::*)(int)>(&UnityEngine::Material::GetVectorArray)> {
  static const MethodInfo* get() {
    static auto* nameID = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "GetVectorArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{nameID});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::GetMatrixArray
// Il2CppName: GetMatrixArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::UnityEngine::Matrix4x4> (UnityEngine::Material::*)(::StringW)>(&UnityEngine::Material::GetMatrixArray)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "GetMatrixArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::GetMatrixArray
// Il2CppName: GetMatrixArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::UnityEngine::Matrix4x4> (UnityEngine::Material::*)(int)>(&UnityEngine::Material::GetMatrixArray)> {
  static const MethodInfo* get() {
    static auto* nameID = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "GetMatrixArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{nameID});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::GetFloatArray
// Il2CppName: GetFloatArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Material::*)(::StringW, ::System::Collections::Generic::List_1<float>*)>(&UnityEngine::Material::GetFloatArray)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* values = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Single")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "GetFloatArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name, values});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::GetFloatArray
// Il2CppName: GetFloatArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Material::*)(int, ::System::Collections::Generic::List_1<float>*)>(&UnityEngine::Material::GetFloatArray)> {
  static const MethodInfo* get() {
    static auto* nameID = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* values = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Single")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "GetFloatArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{nameID, values});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::GetColorArray
// Il2CppName: GetColorArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Material::*)(::StringW, ::System::Collections::Generic::List_1<::UnityEngine::Color>*)>(&UnityEngine::Material::GetColorArray)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* values = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine", "Color")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "GetColorArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name, values});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::GetColorArray
// Il2CppName: GetColorArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Material::*)(int, ::System::Collections::Generic::List_1<::UnityEngine::Color>*)>(&UnityEngine::Material::GetColorArray)> {
  static const MethodInfo* get() {
    static auto* nameID = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* values = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine", "Color")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "GetColorArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{nameID, values});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::GetVectorArray
// Il2CppName: GetVectorArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Material::*)(::StringW, ::System::Collections::Generic::List_1<::UnityEngine::Vector4>*)>(&UnityEngine::Material::GetVectorArray)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* values = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine", "Vector4")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "GetVectorArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name, values});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::GetVectorArray
// Il2CppName: GetVectorArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Material::*)(int, ::System::Collections::Generic::List_1<::UnityEngine::Vector4>*)>(&UnityEngine::Material::GetVectorArray)> {
  static const MethodInfo* get() {
    static auto* nameID = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* values = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine", "Vector4")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "GetVectorArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{nameID, values});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::GetMatrixArray
// Il2CppName: GetMatrixArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Material::*)(::StringW, ::System::Collections::Generic::List_1<::UnityEngine::Matrix4x4>*)>(&UnityEngine::Material::GetMatrixArray)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* values = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine", "Matrix4x4")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "GetMatrixArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name, values});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::GetMatrixArray
// Il2CppName: GetMatrixArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Material::*)(int, ::System::Collections::Generic::List_1<::UnityEngine::Matrix4x4>*)>(&UnityEngine::Material::GetMatrixArray)> {
  static const MethodInfo* get() {
    static auto* nameID = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* values = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine", "Matrix4x4")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "GetMatrixArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{nameID, values});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::SetTextureOffset
// Il2CppName: SetTextureOffset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Material::*)(::StringW, ::UnityEngine::Vector2)>(&UnityEngine::Material::SetTextureOffset)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector2")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "SetTextureOffset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name, value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::SetTextureOffset
// Il2CppName: SetTextureOffset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Material::*)(int, ::UnityEngine::Vector2)>(&UnityEngine::Material::SetTextureOffset)> {
  static const MethodInfo* get() {
    static auto* nameID = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector2")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "SetTextureOffset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{nameID, value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::SetTextureScale
// Il2CppName: SetTextureScale
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Material::*)(::StringW, ::UnityEngine::Vector2)>(&UnityEngine::Material::SetTextureScale)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector2")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "SetTextureScale", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name, value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::SetTextureScale
// Il2CppName: SetTextureScale
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Material::*)(int, ::UnityEngine::Vector2)>(&UnityEngine::Material::SetTextureScale)> {
  static const MethodInfo* get() {
    static auto* nameID = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector2")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "SetTextureScale", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{nameID, value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::GetTextureOffset
// Il2CppName: GetTextureOffset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector2 (UnityEngine::Material::*)(::StringW)>(&UnityEngine::Material::GetTextureOffset)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "GetTextureOffset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::GetTextureOffset
// Il2CppName: GetTextureOffset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector2 (UnityEngine::Material::*)(int)>(&UnityEngine::Material::GetTextureOffset)> {
  static const MethodInfo* get() {
    static auto* nameID = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "GetTextureOffset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{nameID});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::GetTextureScale
// Il2CppName: GetTextureScale
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector2 (UnityEngine::Material::*)(::StringW)>(&UnityEngine::Material::GetTextureScale)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "GetTextureScale", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::GetTextureScale
// Il2CppName: GetTextureScale
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector2 (UnityEngine::Material::*)(int)>(&UnityEngine::Material::GetTextureScale)> {
  static const MethodInfo* get() {
    static auto* nameID = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "GetTextureScale", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{nameID});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::GetPropertyNames
// Il2CppName: GetPropertyNames
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::StringW> (UnityEngine::Material::*)(::UnityEngine::MaterialPropertyType)>(&UnityEngine::Material::GetPropertyNames)> {
  static const MethodInfo* get() {
    static auto* type = &::il2cpp_utils::GetClassFromName("UnityEngine", "MaterialPropertyType")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "GetPropertyNames", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{type});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::EnableLocalKeyword_Injected
// Il2CppName: EnableLocalKeyword_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Material::*)(ByRef<::UnityEngine::Rendering::LocalKeyword>)>(&UnityEngine::Material::EnableLocalKeyword_Injected)> {
  static const MethodInfo* get() {
    static auto* keyword = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "LocalKeyword")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "EnableLocalKeyword_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{keyword});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::DisableLocalKeyword_Injected
// Il2CppName: DisableLocalKeyword_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Material::*)(ByRef<::UnityEngine::Rendering::LocalKeyword>)>(&UnityEngine::Material::DisableLocalKeyword_Injected)> {
  static const MethodInfo* get() {
    static auto* keyword = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "LocalKeyword")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "DisableLocalKeyword_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{keyword});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::SetLocalKeyword_Injected
// Il2CppName: SetLocalKeyword_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Material::*)(ByRef<::UnityEngine::Rendering::LocalKeyword>, bool)>(&UnityEngine::Material::SetLocalKeyword_Injected)> {
  static const MethodInfo* get() {
    static auto* keyword = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "LocalKeyword")->this_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "SetLocalKeyword_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{keyword, value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::IsLocalKeywordEnabled_Injected
// Il2CppName: IsLocalKeywordEnabled_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::Material::*)(ByRef<::UnityEngine::Rendering::LocalKeyword>)>(&UnityEngine::Material::IsLocalKeywordEnabled_Injected)> {
  static const MethodInfo* get() {
    static auto* keyword = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "LocalKeyword")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "IsLocalKeywordEnabled_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{keyword});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::SetColorImpl_Injected
// Il2CppName: SetColorImpl_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Material::*)(int, ByRef<::UnityEngine::Color>)>(&UnityEngine::Material::SetColorImpl_Injected)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Color")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "SetColorImpl_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name, value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::SetMatrixImpl_Injected
// Il2CppName: SetMatrixImpl_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Material::*)(int, ByRef<::UnityEngine::Matrix4x4>)>(&UnityEngine::Material::SetMatrixImpl_Injected)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Matrix4x4")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "SetMatrixImpl_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name, value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::GetColorImpl_Injected
// Il2CppName: GetColorImpl_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Material::*)(int, ByRef<::UnityEngine::Color>)>(&UnityEngine::Material::GetColorImpl_Injected)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* ret = &::il2cpp_utils::GetClassFromName("UnityEngine", "Color")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "GetColorImpl_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name, ret});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::GetMatrixImpl_Injected
// Il2CppName: GetMatrixImpl_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Material::*)(int, ByRef<::UnityEngine::Matrix4x4>)>(&UnityEngine::Material::GetMatrixImpl_Injected)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* ret = &::il2cpp_utils::GetClassFromName("UnityEngine", "Matrix4x4")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "GetMatrixImpl_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name, ret});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::GetBufferImpl_Injected
// Il2CppName: GetBufferImpl_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Material::*)(int, ByRef<::UnityEngine::GraphicsBufferHandle>)>(&UnityEngine::Material::GetBufferImpl_Injected)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* ret = &::il2cpp_utils::GetClassFromName("UnityEngine", "GraphicsBufferHandle")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "GetBufferImpl_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name, ret});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::GetConstantBufferImpl_Injected
// Il2CppName: GetConstantBufferImpl_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Material::*)(int, ByRef<::UnityEngine::GraphicsBufferHandle>)>(&UnityEngine::Material::GetConstantBufferImpl_Injected)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* ret = &::il2cpp_utils::GetClassFromName("UnityEngine", "GraphicsBufferHandle")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "GetConstantBufferImpl_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name, ret});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::GetTextureScaleAndOffsetImpl_Injected
// Il2CppName: GetTextureScaleAndOffsetImpl_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Material::*)(int, ByRef<::UnityEngine::Vector4>)>(&UnityEngine::Material::GetTextureScaleAndOffsetImpl_Injected)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* ret = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector4")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "GetTextureScaleAndOffsetImpl_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name, ret});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::SetTextureOffsetImpl_Injected
// Il2CppName: SetTextureOffsetImpl_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Material::*)(int, ByRef<::UnityEngine::Vector2>)>(&UnityEngine::Material::SetTextureOffsetImpl_Injected)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* offset = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector2")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "SetTextureOffsetImpl_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name, offset});
  }
};
// Writing MetadataGetter for method: UnityEngine::Material::SetTextureScaleImpl_Injected
// Il2CppName: SetTextureScaleImpl_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Material::*)(int, ByRef<::UnityEngine::Vector2>)>(&UnityEngine::Material::SetTextureScaleImpl_Injected)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* scale = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector2")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Material*), "SetTextureScaleImpl_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name, scale});
  }
};
