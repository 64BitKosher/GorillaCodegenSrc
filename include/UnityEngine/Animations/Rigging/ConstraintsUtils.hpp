// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::Animations::Rigging
namespace UnityEngine::Animations::Rigging {
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Transform
  class Transform;
  // Forward declaring type: Component
  class Component;
}
// Completed forward declares
// Type namespace: UnityEngine.Animations.Rigging
namespace UnityEngine::Animations::Rigging {
  // Forward declaring type: ConstraintsUtils
  class ConstraintsUtils;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::Animations::Rigging::ConstraintsUtils);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::Animations::Rigging::ConstraintsUtils*, "UnityEngine.Animations.Rigging", "ConstraintsUtils");
// Type namespace: UnityEngine.Animations.Rigging
namespace UnityEngine::Animations::Rigging {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.Animations.Rigging.ConstraintsUtils
  // [TokenAttribute] Offset: FFFFFFFF
  class ConstraintsUtils : public ::Il2CppObject {
    public:
    // Nested type: ::UnityEngine::Animations::Rigging::ConstraintsUtils::$$c__DisplayClass2_0
    class $$c__DisplayClass2_0;
    // static public UnityEngine.Transform[] ExtractChain(UnityEngine.Transform root, UnityEngine.Transform tip)
    // Offset: 0x507FF90
    static ::ArrayW<::UnityEngine::Transform*> ExtractChain(::UnityEngine::Transform* root, ::UnityEngine::Transform* tip);
    // static public System.Single[] ExtractLengths(UnityEngine.Transform[] chain)
    // Offset: 0x50801A4
    static ::ArrayW<float> ExtractLengths(::ArrayW<::UnityEngine::Transform*> chain);
    // static public System.Single[] ExtractSteps(UnityEngine.Transform[] chain)
    // Offset: 0x50802EC
    static ::ArrayW<float> ExtractSteps(::ArrayW<::UnityEngine::Transform*> chain);
    // static public System.String ConstructConstraintDataPropertyName(System.String property)
    // Offset: 0x5073664
    static ::StringW ConstructConstraintDataPropertyName(::StringW property);
    // static public System.String ConstructCustomPropertyName(UnityEngine.Component component, System.String property)
    // Offset: 0x507F470
    static ::StringW ConstructCustomPropertyName(::UnityEngine::Component* component, ::StringW property);
  }; // UnityEngine.Animations.Rigging.ConstraintsUtils
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::Animations::Rigging::ConstraintsUtils::ExtractChain
// Il2CppName: ExtractChain
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::UnityEngine::Transform*> (*)(::UnityEngine::Transform*, ::UnityEngine::Transform*)>(&UnityEngine::Animations::Rigging::ConstraintsUtils::ExtractChain)> {
  static const MethodInfo* get() {
    static auto* root = &::il2cpp_utils::GetClassFromName("UnityEngine", "Transform")->byval_arg;
    static auto* tip = &::il2cpp_utils::GetClassFromName("UnityEngine", "Transform")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::Rigging::ConstraintsUtils*), "ExtractChain", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{root, tip});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::Rigging::ConstraintsUtils::ExtractLengths
// Il2CppName: ExtractLengths
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<float> (*)(::ArrayW<::UnityEngine::Transform*>)>(&UnityEngine::Animations::Rigging::ConstraintsUtils::ExtractLengths)> {
  static const MethodInfo* get() {
    static auto* chain = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("UnityEngine", "Transform"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::Rigging::ConstraintsUtils*), "ExtractLengths", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{chain});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::Rigging::ConstraintsUtils::ExtractSteps
// Il2CppName: ExtractSteps
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<float> (*)(::ArrayW<::UnityEngine::Transform*>)>(&UnityEngine::Animations::Rigging::ConstraintsUtils::ExtractSteps)> {
  static const MethodInfo* get() {
    static auto* chain = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("UnityEngine", "Transform"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::Rigging::ConstraintsUtils*), "ExtractSteps", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{chain});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::Rigging::ConstraintsUtils::ConstructConstraintDataPropertyName
// Il2CppName: ConstructConstraintDataPropertyName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::StringW)>(&UnityEngine::Animations::Rigging::ConstraintsUtils::ConstructConstraintDataPropertyName)> {
  static const MethodInfo* get() {
    static auto* property = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::Rigging::ConstraintsUtils*), "ConstructConstraintDataPropertyName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{property});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::Rigging::ConstraintsUtils::ConstructCustomPropertyName
// Il2CppName: ConstructCustomPropertyName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::UnityEngine::Component*, ::StringW)>(&UnityEngine::Animations::Rigging::ConstraintsUtils::ConstructCustomPropertyName)> {
  static const MethodInfo* get() {
    static auto* component = &::il2cpp_utils::GetClassFromName("UnityEngine", "Component")->byval_arg;
    static auto* property = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::Rigging::ConstraintsUtils*), "ConstructCustomPropertyName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{component, property});
  }
};
