// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.Animations.Rigging.ConstraintsUtils
#include "UnityEngine/Animations/Rigging/ConstraintsUtils.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::Animations::Rigging::ConstraintsUtils::$$c__DisplayClass2_0);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::Animations::Rigging::ConstraintsUtils::$$c__DisplayClass2_0*, "UnityEngine.Animations.Rigging", "ConstraintsUtils/<>c__DisplayClass2_0");
// Type namespace: UnityEngine.Animations.Rigging
namespace UnityEngine::Animations::Rigging {
  // Size: 0x14
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.Animations.Rigging.ConstraintsUtils/<>c__DisplayClass2_0
  // [TokenAttribute] Offset: FFFFFFFF
  // [CompilerGeneratedAttribute] Offset: FFFFFFFF
  class ConstraintsUtils::$$c__DisplayClass2_0 : public ::Il2CppObject {
    public:
    public:
    // public System.Single totalLength
    // Size: 0x4
    // Offset: 0x10
    float totalLength;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    public:
    // Creating conversion operator: operator float
    constexpr operator float() const noexcept {
      return totalLength;
    }
    // Get instance field reference: public System.Single totalLength
    [[deprecated("Use field access instead!")]] float& dyn_totalLength();
    // public System.Void .ctor()
    // Offset: 0x508044C
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static ConstraintsUtils::$$c__DisplayClass2_0* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::ConstraintsUtils::$$c__DisplayClass2_0::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<ConstraintsUtils::$$c__DisplayClass2_0*, creationType>()));
    }
    // System.Void <ExtractSteps>b__0(System.Single length)
    // Offset: 0x5080454
    void $ExtractSteps$b__0(float length);
  }; // UnityEngine.Animations.Rigging.ConstraintsUtils/<>c__DisplayClass2_0
  #pragma pack(pop)
  static check_size<sizeof(ConstraintsUtils::$$c__DisplayClass2_0), 16 + sizeof(float)> __UnityEngine_Animations_Rigging_ConstraintsUtils_$$c__DisplayClass2_0SizeCheck;
  static_assert(sizeof(ConstraintsUtils::$$c__DisplayClass2_0) == 0x14);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::Animations::Rigging::ConstraintsUtils::$$c__DisplayClass2_0::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::Animations::Rigging::ConstraintsUtils::$$c__DisplayClass2_0::$ExtractSteps$b__0
// Il2CppName: <ExtractSteps>b__0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animations::Rigging::ConstraintsUtils::$$c__DisplayClass2_0::*)(float)>(&UnityEngine::Animations::Rigging::ConstraintsUtils::$$c__DisplayClass2_0::$ExtractSteps$b__0)> {
  static const MethodInfo* get() {
    static auto* length = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::Rigging::ConstraintsUtils::$$c__DisplayClass2_0*), "<ExtractSteps>b__0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{length});
  }
};
