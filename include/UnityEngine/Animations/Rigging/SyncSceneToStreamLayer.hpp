// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::Animations
namespace UnityEngine::Animations {
  // Forward declaring type: IAnimationJob
  class IAnimationJob;
}
// Forward declaring namespace: UnityEngine::Animations::Rigging
namespace UnityEngine::Animations::Rigging {
  // Forward declaring type: IAnimationJobData
  class IAnimationJobData;
  // Forward declaring type: IRigLayer
  class IRigLayer;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
  // Forward declaring type: IList`1<T>
  template<typename T>
  class IList_1;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Animator
  class Animator;
}
// Completed forward declares
// Type namespace: UnityEngine.Animations.Rigging
namespace UnityEngine::Animations::Rigging {
  // Forward declaring type: SyncSceneToStreamLayer
  class SyncSceneToStreamLayer;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::Animations::Rigging::SyncSceneToStreamLayer);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::Animations::Rigging::SyncSceneToStreamLayer*, "UnityEngine.Animations.Rigging", "SyncSceneToStreamLayer");
// Type namespace: UnityEngine.Animations.Rigging
namespace UnityEngine::Animations::Rigging {
  // Size: 0x30
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.Animations.Rigging.SyncSceneToStreamLayer
  // [TokenAttribute] Offset: FFFFFFFF
  class SyncSceneToStreamLayer : public ::Il2CppObject {
    public:
    public:
    // private System.Boolean <isInitialized>k__BackingField
    // Size: 0x1
    // Offset: 0x10
    bool isInitialized;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: isInitialized and: job
    char __padding0[0x7] = {};
    // public UnityEngine.Animations.IAnimationJob job
    // Size: 0x8
    // Offset: 0x18
    ::UnityEngine::Animations::IAnimationJob* job;
    // Field size check
    static_assert(sizeof(::UnityEngine::Animations::IAnimationJob*) == 0x8);
    // private UnityEngine.Animations.Rigging.IAnimationJobData m_Data
    // Size: 0x8
    // Offset: 0x20
    ::UnityEngine::Animations::Rigging::IAnimationJobData* m_Data;
    // Field size check
    static_assert(sizeof(::UnityEngine::Animations::Rigging::IAnimationJobData*) == 0x8);
    // private System.Collections.Generic.List`1<System.Int32> m_RigIndices
    // Size: 0x8
    // Offset: 0x28
    ::System::Collections::Generic::List_1<int>* m_RigIndices;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<int>*) == 0x8);
    public:
    // Get instance field reference: private System.Boolean <isInitialized>k__BackingField
    [[deprecated("Use field access instead!")]] bool& dyn_$isInitialized$k__BackingField();
    // Get instance field reference: public UnityEngine.Animations.IAnimationJob job
    [[deprecated("Use field access instead!")]] ::UnityEngine::Animations::IAnimationJob*& dyn_job();
    // Get instance field reference: private UnityEngine.Animations.Rigging.IAnimationJobData m_Data
    [[deprecated("Use field access instead!")]] ::UnityEngine::Animations::Rigging::IAnimationJobData*& dyn_m_Data();
    // Get instance field reference: private System.Collections.Generic.List`1<System.Int32> m_RigIndices
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<int>*& dyn_m_RigIndices();
    // public System.Boolean Initialize(UnityEngine.Animator animator, System.Collections.Generic.IList`1<UnityEngine.Animations.Rigging.IRigLayer> layers)
    // Offset: 0x507A0E0
    bool Initialize(::UnityEngine::Animator* animator, ::System::Collections::Generic::IList_1<::UnityEngine::Animations::Rigging::IRigLayer*>* layers);
    // public System.Void Update(System.Collections.Generic.IList`1<UnityEngine.Animations.Rigging.IRigLayer> layers)
    // Offset: 0x5077D1C
    void Update(::System::Collections::Generic::IList_1<::UnityEngine::Animations::Rigging::IRigLayer*>* layers);
    // public System.Void Reset()
    // Offset: 0x5078800
    void Reset();
    // public System.Boolean IsValid()
    // Offset: 0x507A580
    bool IsValid();
    // public System.Boolean get_isInitialized()
    // Offset: 0x507E0E4
    bool get_isInitialized();
    // private System.Void set_isInitialized(System.Boolean value)
    // Offset: 0x507E0EC
    void set_isInitialized(bool value);
    // public System.Void .ctor()
    // Offset: 0x5079928
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static SyncSceneToStreamLayer* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::SyncSceneToStreamLayer::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<SyncSceneToStreamLayer*, creationType>()));
    }
  }; // UnityEngine.Animations.Rigging.SyncSceneToStreamLayer
  #pragma pack(pop)
  static check_size<sizeof(SyncSceneToStreamLayer), 40 + sizeof(::System::Collections::Generic::List_1<int>*)> __UnityEngine_Animations_Rigging_SyncSceneToStreamLayerSizeCheck;
  static_assert(sizeof(SyncSceneToStreamLayer) == 0x30);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::Animations::Rigging::SyncSceneToStreamLayer::Initialize
// Il2CppName: Initialize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::Animations::Rigging::SyncSceneToStreamLayer::*)(::UnityEngine::Animator*, ::System::Collections::Generic::IList_1<::UnityEngine::Animations::Rigging::IRigLayer*>*)>(&UnityEngine::Animations::Rigging::SyncSceneToStreamLayer::Initialize)> {
  static const MethodInfo* get() {
    static auto* animator = &::il2cpp_utils::GetClassFromName("UnityEngine", "Animator")->byval_arg;
    static auto* layers = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "IList`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.Animations.Rigging", "IRigLayer")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::Rigging::SyncSceneToStreamLayer*), "Initialize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{animator, layers});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::Rigging::SyncSceneToStreamLayer::Update
// Il2CppName: Update
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animations::Rigging::SyncSceneToStreamLayer::*)(::System::Collections::Generic::IList_1<::UnityEngine::Animations::Rigging::IRigLayer*>*)>(&UnityEngine::Animations::Rigging::SyncSceneToStreamLayer::Update)> {
  static const MethodInfo* get() {
    static auto* layers = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "IList`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.Animations.Rigging", "IRigLayer")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::Rigging::SyncSceneToStreamLayer*), "Update", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{layers});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::Rigging::SyncSceneToStreamLayer::Reset
// Il2CppName: Reset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animations::Rigging::SyncSceneToStreamLayer::*)()>(&UnityEngine::Animations::Rigging::SyncSceneToStreamLayer::Reset)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::Rigging::SyncSceneToStreamLayer*), "Reset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::Rigging::SyncSceneToStreamLayer::IsValid
// Il2CppName: IsValid
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::Animations::Rigging::SyncSceneToStreamLayer::*)()>(&UnityEngine::Animations::Rigging::SyncSceneToStreamLayer::IsValid)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::Rigging::SyncSceneToStreamLayer*), "IsValid", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::Rigging::SyncSceneToStreamLayer::get_isInitialized
// Il2CppName: get_isInitialized
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::Animations::Rigging::SyncSceneToStreamLayer::*)()>(&UnityEngine::Animations::Rigging::SyncSceneToStreamLayer::get_isInitialized)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::Rigging::SyncSceneToStreamLayer*), "get_isInitialized", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::Rigging::SyncSceneToStreamLayer::set_isInitialized
// Il2CppName: set_isInitialized
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animations::Rigging::SyncSceneToStreamLayer::*)(bool)>(&UnityEngine::Animations::Rigging::SyncSceneToStreamLayer::set_isInitialized)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::Rigging::SyncSceneToStreamLayer*), "set_isInitialized", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::Rigging::SyncSceneToStreamLayer::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
