// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.Animations.Rigging.IRigConstraint
#include "UnityEngine/Animations/Rigging/IRigConstraint.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: MonoBehaviour
  class MonoBehaviour;
  // Forward declaring type: Animator
  class Animator;
  // Forward declaring type: Component
  class Component;
}
// Forward declaring namespace: UnityEngine::Animations::Rigging
namespace UnityEngine::Animations::Rigging {
  // Forward declaring type: IWeightedAnimationJob
  class IWeightedAnimationJob;
  // Forward declaring type: IAnimationJobData
  class IAnimationJobData;
  // Forward declaring type: AnimationJobBinder`2<TJob, TData>
  template<typename TJob, typename TData>
  class AnimationJobBinder_2;
  // Forward declaring type: IAnimationJobBinder
  class IAnimationJobBinder;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: ValueType
  class ValueType;
}
// Forward declaring namespace: UnityEngine::Animations
namespace UnityEngine::Animations {
  // Forward declaring type: IAnimationJob
  class IAnimationJob;
}
// Completed forward declares
// Type namespace: UnityEngine.Animations.Rigging
namespace UnityEngine::Animations::Rigging {
  // Forward declaring type: OverrideRigConstraint`4<TConstraint, TJob, TData, TBinder>
  template<typename TConstraint, typename TJob, typename TData, typename TBinder>
  class OverrideRigConstraint_4;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE_GENERIC_CLASS(::UnityEngine::Animations::Rigging::OverrideRigConstraint_4, "UnityEngine.Animations.Rigging", "OverrideRigConstraint`4");
// Type namespace: UnityEngine.Animations.Rigging
namespace UnityEngine::Animations::Rigging {
  // WARNING Size may be invalid!
  // Autogenerated type: UnityEngine.Animations.Rigging.OverrideRigConstraint`4
  // [TokenAttribute] Offset: FFFFFFFF
  template<typename TConstraint, typename TJob, typename TData, typename TBinder>
  class OverrideRigConstraint_4 : public ::Il2CppObject/*, public ::UnityEngine::Animations::Rigging::IRigConstraint*/ {
    public:
    public:
    // protected TConstraint m_Constraint
    // Size: 0xFFFFFFFF
    // Offset: 0x0
    TConstraint m_Constraint;
    public:
    // Creating interface conversion operator: operator ::UnityEngine::Animations::Rigging::IRigConstraint
    operator ::UnityEngine::Animations::Rigging::IRigConstraint() noexcept {
      return *reinterpret_cast<::UnityEngine::Animations::Rigging::IRigConstraint*>(this);
    }
    // Autogenerated static field getter
    // Get static field: static private readonly TBinder s_Binder
    static TBinder _get_s_Binder() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::OverrideRigConstraint_4::_get_s_Binder");
      return THROW_UNLESS((il2cpp_utils::GetFieldValue<TBinder>(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<OverrideRigConstraint_4<TConstraint, TJob, TData, TBinder>*>::get(), "s_Binder")));
    }
    // Autogenerated static field setter
    // Set static field: static private readonly TBinder s_Binder
    static void _set_s_Binder(TBinder value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::OverrideRigConstraint_4::_set_s_Binder");
      THROW_UNLESS((il2cpp_utils::SetFieldValue(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<OverrideRigConstraint_4<TConstraint, TJob, TData, TBinder>*>::get(), "s_Binder", value)));
    }
    // Autogenerated instance field getter
    // Get instance field: protected TConstraint m_Constraint
    [[deprecated("Use field access instead!")]] TConstraint& dyn_m_Constraint() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::OverrideRigConstraint_4::dyn_m_Constraint");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Constraint"))->offset;
      return *reinterpret_cast<TConstraint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // public System.Void .ctor(TConstraint baseConstraint)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static OverrideRigConstraint_4<TConstraint, TJob, TData, TBinder>* New_ctor(TConstraint baseConstraint) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::OverrideRigConstraint_4::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<OverrideRigConstraint_4<TConstraint, TJob, TData, TBinder>*, creationType>(baseConstraint)));
    }
    // public UnityEngine.Animations.IAnimationJob CreateJob(UnityEngine.Animator animator)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::UnityEngine::Animations::IAnimationJob* CreateJob(::UnityEngine::Animator* animator) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::OverrideRigConstraint_4::CreateJob");
      auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::Rigging::OverrideRigConstraint_4<TConstraint, TJob, TData, TBinder>*), -1)));
      return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Animations::IAnimationJob*, false>(this, ___internal__method, animator);
    }
    // public System.Void DestroyJob(UnityEngine.Animations.IAnimationJob job)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void DestroyJob(::UnityEngine::Animations::IAnimationJob* job) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::OverrideRigConstraint_4::DestroyJob");
      auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::Rigging::OverrideRigConstraint_4<TConstraint, TJob, TData, TBinder>*), -1)));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, job);
    }
    // public System.Void UpdateJob(UnityEngine.Animations.IAnimationJob job)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void UpdateJob(::UnityEngine::Animations::IAnimationJob* job) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::OverrideRigConstraint_4::UpdateJob");
      auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::Rigging::OverrideRigConstraint_4<TConstraint, TJob, TData, TBinder>*), -1)));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, job);
    }
    // public System.Boolean IsValid()
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool IsValid() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::OverrideRigConstraint_4::IsValid");
      auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::Rigging::OverrideRigConstraint_4<TConstraint, TJob, TData, TBinder>*), -1)));
      return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
    }
    // private UnityEngine.Animations.Rigging.IAnimationJobBinder UnityEngine.Animations.Rigging.IRigConstraint.get_binder()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::UnityEngine::Animations::Rigging::IAnimationJobBinder* UnityEngine_Animations_Rigging_IRigConstraint_get_binder() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::OverrideRigConstraint_4::UnityEngine.Animations.Rigging.IRigConstraint.get_binder");
      auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::Rigging::OverrideRigConstraint_4<TConstraint, TJob, TData, TBinder>*), -1)));
      return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Animations::Rigging::IAnimationJobBinder*, false>(this, ___internal__method);
    }
    // private UnityEngine.Animations.Rigging.IAnimationJobData UnityEngine.Animations.Rigging.IRigConstraint.get_data()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::UnityEngine::Animations::Rigging::IAnimationJobData* UnityEngine_Animations_Rigging_IRigConstraint_get_data() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::OverrideRigConstraint_4::UnityEngine.Animations.Rigging.IRigConstraint.get_data");
      auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::Rigging::OverrideRigConstraint_4<TConstraint, TJob, TData, TBinder>*), -1)));
      return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Animations::Rigging::IAnimationJobData*, false>(this, ___internal__method);
    }
    // private UnityEngine.Component UnityEngine.Animations.Rigging.IRigConstraint.get_component()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::UnityEngine::Component* UnityEngine_Animations_Rigging_IRigConstraint_get_component() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::OverrideRigConstraint_4::UnityEngine.Animations.Rigging.IRigConstraint.get_component");
      auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::Rigging::OverrideRigConstraint_4<TConstraint, TJob, TData, TBinder>*), -1)));
      return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Component*, false>(this, ___internal__method);
    }
    // public System.Single get_weight()
    // Offset: 0xFFFFFFFFFFFFFFFF
    float get_weight() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::OverrideRigConstraint_4::get_weight");
      auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::Rigging::OverrideRigConstraint_4<TConstraint, TJob, TData, TBinder>*), -1)));
      return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
    }
    // public System.Void set_weight(System.Single value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void set_weight(float value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::OverrideRigConstraint_4::set_weight");
      auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::Rigging::OverrideRigConstraint_4<TConstraint, TJob, TData, TBinder>*), -1)));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
    }
    // static private System.Void .cctor()
    // Offset: 0xFFFFFFFFFFFFFFFF
    static void _cctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::OverrideRigConstraint_4::.cctor");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<OverrideRigConstraint_4<TConstraint, TJob, TData, TBinder>*>::get(), ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
    }
  }; // UnityEngine.Animations.Rigging.OverrideRigConstraint`4
  // Could not write size check! Type: UnityEngine.Animations.Rigging.OverrideRigConstraint`4 is generic, or has no fields that are valid for size checks!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
