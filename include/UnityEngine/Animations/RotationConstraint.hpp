// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.Behaviour
#include "UnityEngine/Behaviour.hpp"
// Including type: UnityEngine.Animations.IConstraint
#include "UnityEngine/Animations/IConstraint.hpp"
// Including type: UnityEngine.Animations.IConstraintInternal
#include "UnityEngine/Animations/IConstraintInternal.hpp"
// Including type: UnityEngine.Animations.ConstraintSource
#include "UnityEngine/Animations/ConstraintSource.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Skipping declaration: Vector3 because it is already included!
}
// Forward declaring namespace: UnityEngine::Animations
namespace UnityEngine::Animations {
  // Forward declaring type: Axis
  struct Axis;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Completed forward declares
// Type namespace: UnityEngine.Animations
namespace UnityEngine::Animations {
  // Forward declaring type: RotationConstraint
  class RotationConstraint;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::Animations::RotationConstraint);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::Animations::RotationConstraint*, "UnityEngine.Animations", "RotationConstraint");
// Type namespace: UnityEngine.Animations
namespace UnityEngine::Animations {
  // Size: 0x18
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.Animations.RotationConstraint
  // [TokenAttribute] Offset: FFFFFFFF
  // [NativeHeaderAttribute] Offset: FFFFFFFF
  // [UsedByNativeCodeAttribute] Offset: FFFFFFFF
  // [RequireComponent] Offset: FFFFFFFF
  // [NativeHeaderAttribute] Offset: FFFFFFFF
  class RotationConstraint : public ::UnityEngine::Behaviour/*, public ::UnityEngine::Animations::IConstraint, public ::UnityEngine::Animations::IConstraintInternal*/ {
    public:
    // Creating interface conversion operator: operator ::UnityEngine::Animations::IConstraint
    operator ::UnityEngine::Animations::IConstraint() noexcept {
      return *reinterpret_cast<::UnityEngine::Animations::IConstraint*>(this);
    }
    // Creating interface conversion operator: operator ::UnityEngine::Animations::IConstraintInternal
    operator ::UnityEngine::Animations::IConstraintInternal() noexcept {
      return *reinterpret_cast<::UnityEngine::Animations::IConstraintInternal*>(this);
    }
    // private System.Void .ctor()
    // Offset: 0x54706C4
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static RotationConstraint* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::RotationConstraint::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<RotationConstraint*, creationType>()));
    }
    // static private System.Void Internal_Create(UnityEngine.Animations.RotationConstraint self)
    // Offset: 0x5470708
    static void Internal_Create(::UnityEngine::Animations::RotationConstraint* self);
    // public System.Single get_weight()
    // Offset: 0x5470744
    float get_weight();
    // public System.Void set_weight(System.Single value)
    // Offset: 0x5470780
    void set_weight(float value);
    // public UnityEngine.Vector3 get_rotationAtRest()
    // Offset: 0x54707CC
    ::UnityEngine::Vector3 get_rotationAtRest();
    // public System.Void set_rotationAtRest(UnityEngine.Vector3 value)
    // Offset: 0x547086C
    void set_rotationAtRest(::UnityEngine::Vector3 value);
    // public UnityEngine.Vector3 get_rotationOffset()
    // Offset: 0x5470904
    ::UnityEngine::Vector3 get_rotationOffset();
    // public System.Void set_rotationOffset(UnityEngine.Vector3 value)
    // Offset: 0x54709A4
    void set_rotationOffset(::UnityEngine::Vector3 value);
    // public UnityEngine.Animations.Axis get_rotationAxis()
    // Offset: 0x5470A3C
    ::UnityEngine::Animations::Axis get_rotationAxis();
    // public System.Void set_rotationAxis(UnityEngine.Animations.Axis value)
    // Offset: 0x5470A78
    void set_rotationAxis(::UnityEngine::Animations::Axis value);
    // public System.Boolean get_constraintActive()
    // Offset: 0x5470ABC
    bool get_constraintActive();
    // public System.Void set_constraintActive(System.Boolean value)
    // Offset: 0x5470AF8
    void set_constraintActive(bool value);
    // public System.Boolean get_locked()
    // Offset: 0x5470B3C
    bool get_locked();
    // public System.Void set_locked(System.Boolean value)
    // Offset: 0x5470B78
    void set_locked(bool value);
    // public System.Int32 get_sourceCount()
    // Offset: 0x5470BBC
    int get_sourceCount();
    // static private System.Int32 GetSourceCountInternal(UnityEngine.Animations.RotationConstraint self)
    // Offset: 0x5470BF8
    static int GetSourceCountInternal(::UnityEngine::Animations::RotationConstraint* self);
    // public System.Void GetSources(System.Collections.Generic.List`1<UnityEngine.Animations.ConstraintSource> sources)
    // Offset: 0x5470C34
    void GetSources(::System::Collections::Generic::List_1<::UnityEngine::Animations::ConstraintSource>* sources);
    // public System.Void SetSources(System.Collections.Generic.List`1<UnityEngine.Animations.ConstraintSource> sources)
    // Offset: 0x5470C78
    void SetSources(::System::Collections::Generic::List_1<::UnityEngine::Animations::ConstraintSource>* sources);
    // static private System.Void SetSourcesInternal(UnityEngine.Animations.RotationConstraint self, System.Collections.Generic.List`1<UnityEngine.Animations.ConstraintSource> sources)
    // Offset: 0x5470D08
    static void SetSourcesInternal(::UnityEngine::Animations::RotationConstraint* self, ::System::Collections::Generic::List_1<::UnityEngine::Animations::ConstraintSource>* sources);
    // public System.Int32 AddSource(UnityEngine.Animations.ConstraintSource source)
    // Offset: 0x5470D4C
    int AddSource(::UnityEngine::Animations::ConstraintSource source);
    // public System.Void RemoveSource(System.Int32 index)
    // Offset: 0x5470DE0
    void RemoveSource(int index);
    // private System.Void RemoveSourceInternal(System.Int32 index)
    // Offset: 0x5470F9C
    void RemoveSourceInternal(int index);
    // public UnityEngine.Animations.ConstraintSource GetSource(System.Int32 index)
    // Offset: 0x5470FE0
    ::UnityEngine::Animations::ConstraintSource GetSource(int index);
    // private UnityEngine.Animations.ConstraintSource GetSourceInternal(System.Int32 index)
    // Offset: 0x5471008
    ::UnityEngine::Animations::ConstraintSource GetSourceInternal(int index);
    // public System.Void SetSource(System.Int32 index, UnityEngine.Animations.ConstraintSource source)
    // Offset: 0x54710B8
    void SetSource(int index, ::UnityEngine::Animations::ConstraintSource source);
    // private System.Void SetSourceInternal(System.Int32 index, UnityEngine.Animations.ConstraintSource source)
    // Offset: 0x54710F8
    void SetSourceInternal(int index, ::UnityEngine::Animations::ConstraintSource source);
    // private System.Void ValidateSourceIndex(System.Int32 index)
    // Offset: 0x5470E28
    void ValidateSourceIndex(int index);
    // private System.Void get_rotationAtRest_Injected(out UnityEngine.Vector3 ret)
    // Offset: 0x5470828
    void get_rotationAtRest_Injected(ByRef<::UnityEngine::Vector3> ret);
    // private System.Void set_rotationAtRest_Injected(ref UnityEngine.Vector3 value)
    // Offset: 0x54708C0
    void set_rotationAtRest_Injected(ByRef<::UnityEngine::Vector3> value);
    // private System.Void get_rotationOffset_Injected(out UnityEngine.Vector3 ret)
    // Offset: 0x5470960
    void get_rotationOffset_Injected(ByRef<::UnityEngine::Vector3> ret);
    // private System.Void set_rotationOffset_Injected(ref UnityEngine.Vector3 value)
    // Offset: 0x54709F8
    void set_rotationOffset_Injected(ByRef<::UnityEngine::Vector3> value);
    // private System.Int32 AddSource_Injected(ref UnityEngine.Animations.ConstraintSource source)
    // Offset: 0x5470D9C
    int AddSource_Injected(ByRef<::UnityEngine::Animations::ConstraintSource> source);
    // private System.Void GetSourceInternal_Injected(System.Int32 index, out UnityEngine.Animations.ConstraintSource ret)
    // Offset: 0x5471064
    void GetSourceInternal_Injected(int index, ByRef<::UnityEngine::Animations::ConstraintSource> ret);
    // private System.Void SetSourceInternal_Injected(System.Int32 index, ref UnityEngine.Animations.ConstraintSource source)
    // Offset: 0x5471150
    void SetSourceInternal_Injected(int index, ByRef<::UnityEngine::Animations::ConstraintSource> source);
  }; // UnityEngine.Animations.RotationConstraint
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::Animations::RotationConstraint::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::Animations::RotationConstraint::Internal_Create
// Il2CppName: Internal_Create
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::Animations::RotationConstraint*)>(&UnityEngine::Animations::RotationConstraint::Internal_Create)> {
  static const MethodInfo* get() {
    static auto* self = &::il2cpp_utils::GetClassFromName("UnityEngine.Animations", "RotationConstraint")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::RotationConstraint*), "Internal_Create", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{self});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::RotationConstraint::get_weight
// Il2CppName: get_weight
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::Animations::RotationConstraint::*)()>(&UnityEngine::Animations::RotationConstraint::get_weight)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::RotationConstraint*), "get_weight", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::RotationConstraint::set_weight
// Il2CppName: set_weight
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animations::RotationConstraint::*)(float)>(&UnityEngine::Animations::RotationConstraint::set_weight)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::RotationConstraint*), "set_weight", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::RotationConstraint::get_rotationAtRest
// Il2CppName: get_rotationAtRest
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector3 (UnityEngine::Animations::RotationConstraint::*)()>(&UnityEngine::Animations::RotationConstraint::get_rotationAtRest)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::RotationConstraint*), "get_rotationAtRest", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::RotationConstraint::set_rotationAtRest
// Il2CppName: set_rotationAtRest
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animations::RotationConstraint::*)(::UnityEngine::Vector3)>(&UnityEngine::Animations::RotationConstraint::set_rotationAtRest)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::RotationConstraint*), "set_rotationAtRest", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::RotationConstraint::get_rotationOffset
// Il2CppName: get_rotationOffset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector3 (UnityEngine::Animations::RotationConstraint::*)()>(&UnityEngine::Animations::RotationConstraint::get_rotationOffset)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::RotationConstraint*), "get_rotationOffset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::RotationConstraint::set_rotationOffset
// Il2CppName: set_rotationOffset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animations::RotationConstraint::*)(::UnityEngine::Vector3)>(&UnityEngine::Animations::RotationConstraint::set_rotationOffset)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::RotationConstraint*), "set_rotationOffset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::RotationConstraint::get_rotationAxis
// Il2CppName: get_rotationAxis
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Animations::Axis (UnityEngine::Animations::RotationConstraint::*)()>(&UnityEngine::Animations::RotationConstraint::get_rotationAxis)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::RotationConstraint*), "get_rotationAxis", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::RotationConstraint::set_rotationAxis
// Il2CppName: set_rotationAxis
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animations::RotationConstraint::*)(::UnityEngine::Animations::Axis)>(&UnityEngine::Animations::RotationConstraint::set_rotationAxis)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.Animations", "Axis")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::RotationConstraint*), "set_rotationAxis", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::RotationConstraint::get_constraintActive
// Il2CppName: get_constraintActive
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::Animations::RotationConstraint::*)()>(&UnityEngine::Animations::RotationConstraint::get_constraintActive)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::RotationConstraint*), "get_constraintActive", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::RotationConstraint::set_constraintActive
// Il2CppName: set_constraintActive
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animations::RotationConstraint::*)(bool)>(&UnityEngine::Animations::RotationConstraint::set_constraintActive)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::RotationConstraint*), "set_constraintActive", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::RotationConstraint::get_locked
// Il2CppName: get_locked
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::Animations::RotationConstraint::*)()>(&UnityEngine::Animations::RotationConstraint::get_locked)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::RotationConstraint*), "get_locked", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::RotationConstraint::set_locked
// Il2CppName: set_locked
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animations::RotationConstraint::*)(bool)>(&UnityEngine::Animations::RotationConstraint::set_locked)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::RotationConstraint*), "set_locked", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::RotationConstraint::get_sourceCount
// Il2CppName: get_sourceCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::Animations::RotationConstraint::*)()>(&UnityEngine::Animations::RotationConstraint::get_sourceCount)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::RotationConstraint*), "get_sourceCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::RotationConstraint::GetSourceCountInternal
// Il2CppName: GetSourceCountInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::UnityEngine::Animations::RotationConstraint*)>(&UnityEngine::Animations::RotationConstraint::GetSourceCountInternal)> {
  static const MethodInfo* get() {
    static auto* self = &::il2cpp_utils::GetClassFromName("UnityEngine.Animations", "RotationConstraint")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::RotationConstraint*), "GetSourceCountInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{self});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::RotationConstraint::GetSources
// Il2CppName: GetSources
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animations::RotationConstraint::*)(::System::Collections::Generic::List_1<::UnityEngine::Animations::ConstraintSource>*)>(&UnityEngine::Animations::RotationConstraint::GetSources)> {
  static const MethodInfo* get() {
    static auto* sources = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.Animations", "ConstraintSource")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::RotationConstraint*), "GetSources", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sources});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::RotationConstraint::SetSources
// Il2CppName: SetSources
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animations::RotationConstraint::*)(::System::Collections::Generic::List_1<::UnityEngine::Animations::ConstraintSource>*)>(&UnityEngine::Animations::RotationConstraint::SetSources)> {
  static const MethodInfo* get() {
    static auto* sources = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.Animations", "ConstraintSource")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::RotationConstraint*), "SetSources", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sources});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::RotationConstraint::SetSourcesInternal
// Il2CppName: SetSourcesInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::Animations::RotationConstraint*, ::System::Collections::Generic::List_1<::UnityEngine::Animations::ConstraintSource>*)>(&UnityEngine::Animations::RotationConstraint::SetSourcesInternal)> {
  static const MethodInfo* get() {
    static auto* self = &::il2cpp_utils::GetClassFromName("UnityEngine.Animations", "RotationConstraint")->byval_arg;
    static auto* sources = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.Animations", "ConstraintSource")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::RotationConstraint*), "SetSourcesInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{self, sources});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::RotationConstraint::AddSource
// Il2CppName: AddSource
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::Animations::RotationConstraint::*)(::UnityEngine::Animations::ConstraintSource)>(&UnityEngine::Animations::RotationConstraint::AddSource)> {
  static const MethodInfo* get() {
    static auto* source = &::il2cpp_utils::GetClassFromName("UnityEngine.Animations", "ConstraintSource")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::RotationConstraint*), "AddSource", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{source});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::RotationConstraint::RemoveSource
// Il2CppName: RemoveSource
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animations::RotationConstraint::*)(int)>(&UnityEngine::Animations::RotationConstraint::RemoveSource)> {
  static const MethodInfo* get() {
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::RotationConstraint*), "RemoveSource", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{index});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::RotationConstraint::RemoveSourceInternal
// Il2CppName: RemoveSourceInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animations::RotationConstraint::*)(int)>(&UnityEngine::Animations::RotationConstraint::RemoveSourceInternal)> {
  static const MethodInfo* get() {
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::RotationConstraint*), "RemoveSourceInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{index});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::RotationConstraint::GetSource
// Il2CppName: GetSource
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Animations::ConstraintSource (UnityEngine::Animations::RotationConstraint::*)(int)>(&UnityEngine::Animations::RotationConstraint::GetSource)> {
  static const MethodInfo* get() {
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::RotationConstraint*), "GetSource", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{index});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::RotationConstraint::GetSourceInternal
// Il2CppName: GetSourceInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Animations::ConstraintSource (UnityEngine::Animations::RotationConstraint::*)(int)>(&UnityEngine::Animations::RotationConstraint::GetSourceInternal)> {
  static const MethodInfo* get() {
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::RotationConstraint*), "GetSourceInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{index});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::RotationConstraint::SetSource
// Il2CppName: SetSource
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animations::RotationConstraint::*)(int, ::UnityEngine::Animations::ConstraintSource)>(&UnityEngine::Animations::RotationConstraint::SetSource)> {
  static const MethodInfo* get() {
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* source = &::il2cpp_utils::GetClassFromName("UnityEngine.Animations", "ConstraintSource")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::RotationConstraint*), "SetSource", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{index, source});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::RotationConstraint::SetSourceInternal
// Il2CppName: SetSourceInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animations::RotationConstraint::*)(int, ::UnityEngine::Animations::ConstraintSource)>(&UnityEngine::Animations::RotationConstraint::SetSourceInternal)> {
  static const MethodInfo* get() {
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* source = &::il2cpp_utils::GetClassFromName("UnityEngine.Animations", "ConstraintSource")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::RotationConstraint*), "SetSourceInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{index, source});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::RotationConstraint::ValidateSourceIndex
// Il2CppName: ValidateSourceIndex
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animations::RotationConstraint::*)(int)>(&UnityEngine::Animations::RotationConstraint::ValidateSourceIndex)> {
  static const MethodInfo* get() {
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::RotationConstraint*), "ValidateSourceIndex", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{index});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::RotationConstraint::get_rotationAtRest_Injected
// Il2CppName: get_rotationAtRest_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animations::RotationConstraint::*)(ByRef<::UnityEngine::Vector3>)>(&UnityEngine::Animations::RotationConstraint::get_rotationAtRest_Injected)> {
  static const MethodInfo* get() {
    static auto* ret = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::RotationConstraint*), "get_rotationAtRest_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ret});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::RotationConstraint::set_rotationAtRest_Injected
// Il2CppName: set_rotationAtRest_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animations::RotationConstraint::*)(ByRef<::UnityEngine::Vector3>)>(&UnityEngine::Animations::RotationConstraint::set_rotationAtRest_Injected)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::RotationConstraint*), "set_rotationAtRest_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::RotationConstraint::get_rotationOffset_Injected
// Il2CppName: get_rotationOffset_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animations::RotationConstraint::*)(ByRef<::UnityEngine::Vector3>)>(&UnityEngine::Animations::RotationConstraint::get_rotationOffset_Injected)> {
  static const MethodInfo* get() {
    static auto* ret = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::RotationConstraint*), "get_rotationOffset_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ret});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::RotationConstraint::set_rotationOffset_Injected
// Il2CppName: set_rotationOffset_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animations::RotationConstraint::*)(ByRef<::UnityEngine::Vector3>)>(&UnityEngine::Animations::RotationConstraint::set_rotationOffset_Injected)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::RotationConstraint*), "set_rotationOffset_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::RotationConstraint::AddSource_Injected
// Il2CppName: AddSource_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::Animations::RotationConstraint::*)(ByRef<::UnityEngine::Animations::ConstraintSource>)>(&UnityEngine::Animations::RotationConstraint::AddSource_Injected)> {
  static const MethodInfo* get() {
    static auto* source = &::il2cpp_utils::GetClassFromName("UnityEngine.Animations", "ConstraintSource")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::RotationConstraint*), "AddSource_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{source});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::RotationConstraint::GetSourceInternal_Injected
// Il2CppName: GetSourceInternal_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animations::RotationConstraint::*)(int, ByRef<::UnityEngine::Animations::ConstraintSource>)>(&UnityEngine::Animations::RotationConstraint::GetSourceInternal_Injected)> {
  static const MethodInfo* get() {
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* ret = &::il2cpp_utils::GetClassFromName("UnityEngine.Animations", "ConstraintSource")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::RotationConstraint*), "GetSourceInternal_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{index, ret});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::RotationConstraint::SetSourceInternal_Injected
// Il2CppName: SetSourceInternal_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animations::RotationConstraint::*)(int, ByRef<::UnityEngine::Animations::ConstraintSource>)>(&UnityEngine::Animations::RotationConstraint::SetSourceInternal_Injected)> {
  static const MethodInfo* get() {
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* source = &::il2cpp_utils::GetClassFromName("UnityEngine.Animations", "ConstraintSource")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::RotationConstraint*), "SetSourceInternal_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{index, source});
  }
};
