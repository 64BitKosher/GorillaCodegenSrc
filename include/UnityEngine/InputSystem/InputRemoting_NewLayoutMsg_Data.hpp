// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.InputSystem.InputRemoting/NewLayoutMsg
#include "UnityEngine/InputSystem/InputRemoting_NewLayoutMsg.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::InputSystem::InputRemoting::NewLayoutMsg::Data, "UnityEngine.InputSystem", "InputRemoting/NewLayoutMsg/Data");
// Type namespace: UnityEngine.InputSystem
namespace UnityEngine::InputSystem {
  // Size: 0x11
  #pragma pack(push, 1)
  // WARNING Layout: Sequential may not be correctly taken into account!
  // Autogenerated type: UnityEngine.InputSystem.InputRemoting/NewLayoutMsg/Data
  // [TokenAttribute] Offset: FFFFFFFF
  struct InputRemoting::NewLayoutMsg::Data/*, public ::System::ValueType*/ {
    public:
    public:
    // public System.String name
    // Size: 0x8
    // Offset: 0x0
    ::StringW name;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public System.String layoutJson
    // Size: 0x8
    // Offset: 0x8
    ::StringW layoutJson;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public System.Boolean isOverride
    // Size: 0x1
    // Offset: 0x10
    bool isOverride;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    public:
    // Creating value type constructor for type: Data
    constexpr Data(::StringW name_ = {}, ::StringW layoutJson_ = {}, bool isOverride_ = {}) noexcept : name{name_}, layoutJson{layoutJson_}, isOverride{isOverride_} {}
    // Creating interface conversion operator: operator ::System::ValueType
    operator ::System::ValueType() noexcept {
      return *reinterpret_cast<::System::ValueType*>(this);
    }
    // Get instance field reference: public System.String name
    [[deprecated("Use field access instead!")]] ::StringW& dyn_name();
    // Get instance field reference: public System.String layoutJson
    [[deprecated("Use field access instead!")]] ::StringW& dyn_layoutJson();
    // Get instance field reference: public System.Boolean isOverride
    [[deprecated("Use field access instead!")]] bool& dyn_isOverride();
  }; // UnityEngine.InputSystem.InputRemoting/NewLayoutMsg/Data
  #pragma pack(pop)
  static check_size<sizeof(InputRemoting::NewLayoutMsg::Data), 16 + sizeof(bool)> __UnityEngine_InputSystem_InputRemoting_NewLayoutMsg_DataSizeCheck;
  static_assert(sizeof(InputRemoting::NewLayoutMsg::Data) == 0x11);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
