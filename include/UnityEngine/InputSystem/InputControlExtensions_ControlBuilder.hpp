// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.InputSystem.InputControlExtensions
#include "UnityEngine/InputSystem/InputControlExtensions.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::InputSystem
namespace UnityEngine::InputSystem {
  // Forward declaring type: InputControl
  class InputControl;
  // Forward declaring type: InputDevice
  class InputDevice;
  // Forward declaring type: InputProcessor`1<TValue>
  template<typename TValue>
  class InputProcessor_1;
}
// Forward declaring namespace: UnityEngine::InputSystem::Utilities
namespace UnityEngine::InputSystem::Utilities {
  // Forward declaring type: InternedString
  struct InternedString;
  // Forward declaring type: PrimitiveValue
  struct PrimitiveValue;
}
// Forward declaring namespace: UnityEngine::InputSystem::LowLevel
namespace UnityEngine::InputSystem::LowLevel {
  // Forward declaring type: InputStateBlock
  struct InputStateBlock;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::InputSystem::InputControlExtensions::ControlBuilder, "UnityEngine.InputSystem", "InputControlExtensions/ControlBuilder");
// Type namespace: UnityEngine.InputSystem
namespace UnityEngine::InputSystem {
  // Size: 0x8
  #pragma pack(push, 1)
  // WARNING Layout: Sequential may not be correctly taken into account!
  // Autogenerated type: UnityEngine.InputSystem.InputControlExtensions/ControlBuilder
  // [TokenAttribute] Offset: FFFFFFFF
  struct InputControlExtensions::ControlBuilder/*, public ::System::ValueType*/ {
    public:
    public:
    // private UnityEngine.InputSystem.InputControl <control>k__BackingField
    // Size: 0x8
    // Offset: 0x0
    ::UnityEngine::InputSystem::InputControl* control;
    // Field size check
    static_assert(sizeof(::UnityEngine::InputSystem::InputControl*) == 0x8);
    public:
    // Creating value type constructor for type: ControlBuilder
    constexpr ControlBuilder(::UnityEngine::InputSystem::InputControl* control_ = {}) noexcept : control{control_} {}
    // Creating interface conversion operator: operator ::System::ValueType
    operator ::System::ValueType() noexcept {
      return *reinterpret_cast<::System::ValueType*>(this);
    }
    // Creating conversion operator: operator ::UnityEngine::InputSystem::InputControl*
    constexpr operator ::UnityEngine::InputSystem::InputControl*() const noexcept {
      return control;
    }
    // Get instance field reference: private UnityEngine.InputSystem.InputControl <control>k__BackingField
    [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::InputControl*& dyn_$control$k__BackingField();
    // public UnityEngine.InputSystem.InputControl get_control()
    // Offset: 0x50C08F8
    ::UnityEngine::InputSystem::InputControl* get_control();
    // System.Void set_control(UnityEngine.InputSystem.InputControl value)
    // Offset: 0x50C0900
    void set_control(::UnityEngine::InputSystem::InputControl* value);
    // public UnityEngine.InputSystem.InputControlExtensions/ControlBuilder At(UnityEngine.InputSystem.InputDevice device, System.Int32 index)
    // Offset: 0x50C0908
    ::UnityEngine::InputSystem::InputControlExtensions::ControlBuilder At(::UnityEngine::InputSystem::InputDevice* device, int index);
    // public UnityEngine.InputSystem.InputControlExtensions/ControlBuilder WithParent(UnityEngine.InputSystem.InputControl parent)
    // Offset: 0x50C09A0
    ::UnityEngine::InputSystem::InputControlExtensions::ControlBuilder WithParent(::UnityEngine::InputSystem::InputControl* parent);
    // public UnityEngine.InputSystem.InputControlExtensions/ControlBuilder WithName(System.String name)
    // Offset: 0x50C09C8
    ::UnityEngine::InputSystem::InputControlExtensions::ControlBuilder WithName(::StringW name);
    // public UnityEngine.InputSystem.InputControlExtensions/ControlBuilder WithDisplayName(System.String displayName)
    // Offset: 0x50C0A1C
    ::UnityEngine::InputSystem::InputControlExtensions::ControlBuilder WithDisplayName(::StringW displayName);
    // public UnityEngine.InputSystem.InputControlExtensions/ControlBuilder WithShortDisplayName(System.String shortDisplayName)
    // Offset: 0x50C0A78
    ::UnityEngine::InputSystem::InputControlExtensions::ControlBuilder WithShortDisplayName(::StringW shortDisplayName);
    // public UnityEngine.InputSystem.InputControlExtensions/ControlBuilder WithLayout(UnityEngine.InputSystem.Utilities.InternedString layout)
    // Offset: 0x50C0AD4
    ::UnityEngine::InputSystem::InputControlExtensions::ControlBuilder WithLayout(::UnityEngine::InputSystem::Utilities::InternedString layout);
    // public UnityEngine.InputSystem.InputControlExtensions/ControlBuilder WithUsages(System.Int32 startIndex, System.Int32 count)
    // Offset: 0x50C0B04
    ::UnityEngine::InputSystem::InputControlExtensions::ControlBuilder WithUsages(int startIndex, int count);
    // public UnityEngine.InputSystem.InputControlExtensions/ControlBuilder WithAliases(System.Int32 startIndex, System.Int32 count)
    // Offset: 0x50C0B24
    ::UnityEngine::InputSystem::InputControlExtensions::ControlBuilder WithAliases(int startIndex, int count);
    // public UnityEngine.InputSystem.InputControlExtensions/ControlBuilder WithChildren(System.Int32 startIndex, System.Int32 count)
    // Offset: 0x50C0B44
    ::UnityEngine::InputSystem::InputControlExtensions::ControlBuilder WithChildren(int startIndex, int count);
    // public UnityEngine.InputSystem.InputControlExtensions/ControlBuilder WithStateBlock(UnityEngine.InputSystem.LowLevel.InputStateBlock stateBlock)
    // Offset: 0x50C0B64
    ::UnityEngine::InputSystem::InputControlExtensions::ControlBuilder WithStateBlock(::UnityEngine::InputSystem::LowLevel::InputStateBlock stateBlock);
    // public UnityEngine.InputSystem.InputControlExtensions/ControlBuilder WithDefaultState(UnityEngine.InputSystem.Utilities.PrimitiveValue value)
    // Offset: 0x50C0B84
    ::UnityEngine::InputSystem::InputControlExtensions::ControlBuilder WithDefaultState(::UnityEngine::InputSystem::Utilities::PrimitiveValue value);
    // public UnityEngine.InputSystem.InputControlExtensions/ControlBuilder WithMinAndMax(UnityEngine.InputSystem.Utilities.PrimitiveValue min, UnityEngine.InputSystem.Utilities.PrimitiveValue max)
    // Offset: 0x50C0BE0
    ::UnityEngine::InputSystem::InputControlExtensions::ControlBuilder WithMinAndMax(::UnityEngine::InputSystem::Utilities::PrimitiveValue min, ::UnityEngine::InputSystem::Utilities::PrimitiveValue max);
    // public UnityEngine.InputSystem.InputControlExtensions/ControlBuilder WithProcessor(TProcessor processor)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class TProcessor, class TValue>
    ::UnityEngine::InputSystem::InputControlExtensions::ControlBuilder WithProcessor(TProcessor processor) {
      static_assert(std::is_convertible_v<TProcessor, ::UnityEngine::InputSystem::InputProcessor_1<TValue>*>);
      static_assert(std::is_convertible_v<TValue, ::System::ValueType*>);
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::InputControlExtensions::ControlBuilder::WithProcessor");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "WithProcessor", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TProcessor>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TValue>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(processor)})));
      static auto* ___generic__method = THROW_UNLESS((::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TProcessor>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TValue>::get()})));
      return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::InputSystem::InputControlExtensions::ControlBuilder, false>(this, ___generic__method, processor);
    }
    // public UnityEngine.InputSystem.InputControlExtensions/ControlBuilder IsNoisy(System.Boolean value)
    // Offset: 0x50C0C0C
    ::UnityEngine::InputSystem::InputControlExtensions::ControlBuilder IsNoisy(bool value);
    // public UnityEngine.InputSystem.InputControlExtensions/ControlBuilder IsSynthetic(System.Boolean value)
    // Offset: 0x50C0C34
    ::UnityEngine::InputSystem::InputControlExtensions::ControlBuilder IsSynthetic(bool value);
    // public UnityEngine.InputSystem.InputControlExtensions/ControlBuilder DontReset(System.Boolean value)
    // Offset: 0x50C0C6C
    ::UnityEngine::InputSystem::InputControlExtensions::ControlBuilder DontReset(bool value);
    // public UnityEngine.InputSystem.InputControlExtensions/ControlBuilder IsButton(System.Boolean value)
    // Offset: 0x50C0CDC
    ::UnityEngine::InputSystem::InputControlExtensions::ControlBuilder IsButton(bool value);
    // public System.Void Finish()
    // Offset: 0x50C0D14
    void Finish();
  }; // UnityEngine.InputSystem.InputControlExtensions/ControlBuilder
  #pragma pack(pop)
  static check_size<sizeof(InputControlExtensions::ControlBuilder), 0 + sizeof(::UnityEngine::InputSystem::InputControl*)> __UnityEngine_InputSystem_InputControlExtensions_ControlBuilderSizeCheck;
  static_assert(sizeof(InputControlExtensions::ControlBuilder) == 0x8);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputControlExtensions::ControlBuilder::get_control
// Il2CppName: get_control
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::InputControl* (UnityEngine::InputSystem::InputControlExtensions::ControlBuilder::*)()>(&UnityEngine::InputSystem::InputControlExtensions::ControlBuilder::get_control)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputControlExtensions::ControlBuilder), "get_control", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputControlExtensions::ControlBuilder::set_control
// Il2CppName: set_control
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::InputControlExtensions::ControlBuilder::*)(::UnityEngine::InputSystem::InputControl*)>(&UnityEngine::InputSystem::InputControlExtensions::ControlBuilder::set_control)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputControl")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputControlExtensions::ControlBuilder), "set_control", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputControlExtensions::ControlBuilder::At
// Il2CppName: At
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::InputControlExtensions::ControlBuilder (UnityEngine::InputSystem::InputControlExtensions::ControlBuilder::*)(::UnityEngine::InputSystem::InputDevice*, int)>(&UnityEngine::InputSystem::InputControlExtensions::ControlBuilder::At)> {
  static const MethodInfo* get() {
    static auto* device = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputDevice")->byval_arg;
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputControlExtensions::ControlBuilder), "At", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{device, index});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputControlExtensions::ControlBuilder::WithParent
// Il2CppName: WithParent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::InputControlExtensions::ControlBuilder (UnityEngine::InputSystem::InputControlExtensions::ControlBuilder::*)(::UnityEngine::InputSystem::InputControl*)>(&UnityEngine::InputSystem::InputControlExtensions::ControlBuilder::WithParent)> {
  static const MethodInfo* get() {
    static auto* parent = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputControl")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputControlExtensions::ControlBuilder), "WithParent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{parent});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputControlExtensions::ControlBuilder::WithName
// Il2CppName: WithName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::InputControlExtensions::ControlBuilder (UnityEngine::InputSystem::InputControlExtensions::ControlBuilder::*)(::StringW)>(&UnityEngine::InputSystem::InputControlExtensions::ControlBuilder::WithName)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputControlExtensions::ControlBuilder), "WithName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputControlExtensions::ControlBuilder::WithDisplayName
// Il2CppName: WithDisplayName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::InputControlExtensions::ControlBuilder (UnityEngine::InputSystem::InputControlExtensions::ControlBuilder::*)(::StringW)>(&UnityEngine::InputSystem::InputControlExtensions::ControlBuilder::WithDisplayName)> {
  static const MethodInfo* get() {
    static auto* displayName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputControlExtensions::ControlBuilder), "WithDisplayName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{displayName});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputControlExtensions::ControlBuilder::WithShortDisplayName
// Il2CppName: WithShortDisplayName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::InputControlExtensions::ControlBuilder (UnityEngine::InputSystem::InputControlExtensions::ControlBuilder::*)(::StringW)>(&UnityEngine::InputSystem::InputControlExtensions::ControlBuilder::WithShortDisplayName)> {
  static const MethodInfo* get() {
    static auto* shortDisplayName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputControlExtensions::ControlBuilder), "WithShortDisplayName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{shortDisplayName});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputControlExtensions::ControlBuilder::WithLayout
// Il2CppName: WithLayout
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::InputControlExtensions::ControlBuilder (UnityEngine::InputSystem::InputControlExtensions::ControlBuilder::*)(::UnityEngine::InputSystem::Utilities::InternedString)>(&UnityEngine::InputSystem::InputControlExtensions::ControlBuilder::WithLayout)> {
  static const MethodInfo* get() {
    static auto* layout = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem.Utilities", "InternedString")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputControlExtensions::ControlBuilder), "WithLayout", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{layout});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputControlExtensions::ControlBuilder::WithUsages
// Il2CppName: WithUsages
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::InputControlExtensions::ControlBuilder (UnityEngine::InputSystem::InputControlExtensions::ControlBuilder::*)(int, int)>(&UnityEngine::InputSystem::InputControlExtensions::ControlBuilder::WithUsages)> {
  static const MethodInfo* get() {
    static auto* startIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* count = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputControlExtensions::ControlBuilder), "WithUsages", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{startIndex, count});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputControlExtensions::ControlBuilder::WithAliases
// Il2CppName: WithAliases
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::InputControlExtensions::ControlBuilder (UnityEngine::InputSystem::InputControlExtensions::ControlBuilder::*)(int, int)>(&UnityEngine::InputSystem::InputControlExtensions::ControlBuilder::WithAliases)> {
  static const MethodInfo* get() {
    static auto* startIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* count = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputControlExtensions::ControlBuilder), "WithAliases", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{startIndex, count});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputControlExtensions::ControlBuilder::WithChildren
// Il2CppName: WithChildren
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::InputControlExtensions::ControlBuilder (UnityEngine::InputSystem::InputControlExtensions::ControlBuilder::*)(int, int)>(&UnityEngine::InputSystem::InputControlExtensions::ControlBuilder::WithChildren)> {
  static const MethodInfo* get() {
    static auto* startIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* count = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputControlExtensions::ControlBuilder), "WithChildren", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{startIndex, count});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputControlExtensions::ControlBuilder::WithStateBlock
// Il2CppName: WithStateBlock
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::InputControlExtensions::ControlBuilder (UnityEngine::InputSystem::InputControlExtensions::ControlBuilder::*)(::UnityEngine::InputSystem::LowLevel::InputStateBlock)>(&UnityEngine::InputSystem::InputControlExtensions::ControlBuilder::WithStateBlock)> {
  static const MethodInfo* get() {
    static auto* stateBlock = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem.LowLevel", "InputStateBlock")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputControlExtensions::ControlBuilder), "WithStateBlock", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stateBlock});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputControlExtensions::ControlBuilder::WithDefaultState
// Il2CppName: WithDefaultState
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::InputControlExtensions::ControlBuilder (UnityEngine::InputSystem::InputControlExtensions::ControlBuilder::*)(::UnityEngine::InputSystem::Utilities::PrimitiveValue)>(&UnityEngine::InputSystem::InputControlExtensions::ControlBuilder::WithDefaultState)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem.Utilities", "PrimitiveValue")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputControlExtensions::ControlBuilder), "WithDefaultState", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputControlExtensions::ControlBuilder::WithMinAndMax
// Il2CppName: WithMinAndMax
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::InputControlExtensions::ControlBuilder (UnityEngine::InputSystem::InputControlExtensions::ControlBuilder::*)(::UnityEngine::InputSystem::Utilities::PrimitiveValue, ::UnityEngine::InputSystem::Utilities::PrimitiveValue)>(&UnityEngine::InputSystem::InputControlExtensions::ControlBuilder::WithMinAndMax)> {
  static const MethodInfo* get() {
    static auto* min = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem.Utilities", "PrimitiveValue")->byval_arg;
    static auto* max = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem.Utilities", "PrimitiveValue")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputControlExtensions::ControlBuilder), "WithMinAndMax", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{min, max});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputControlExtensions::ControlBuilder::WithProcessor
// Il2CppName: WithProcessor
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputControlExtensions::ControlBuilder::IsNoisy
// Il2CppName: IsNoisy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::InputControlExtensions::ControlBuilder (UnityEngine::InputSystem::InputControlExtensions::ControlBuilder::*)(bool)>(&UnityEngine::InputSystem::InputControlExtensions::ControlBuilder::IsNoisy)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputControlExtensions::ControlBuilder), "IsNoisy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputControlExtensions::ControlBuilder::IsSynthetic
// Il2CppName: IsSynthetic
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::InputControlExtensions::ControlBuilder (UnityEngine::InputSystem::InputControlExtensions::ControlBuilder::*)(bool)>(&UnityEngine::InputSystem::InputControlExtensions::ControlBuilder::IsSynthetic)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputControlExtensions::ControlBuilder), "IsSynthetic", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputControlExtensions::ControlBuilder::DontReset
// Il2CppName: DontReset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::InputControlExtensions::ControlBuilder (UnityEngine::InputSystem::InputControlExtensions::ControlBuilder::*)(bool)>(&UnityEngine::InputSystem::InputControlExtensions::ControlBuilder::DontReset)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputControlExtensions::ControlBuilder), "DontReset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputControlExtensions::ControlBuilder::IsButton
// Il2CppName: IsButton
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::InputControlExtensions::ControlBuilder (UnityEngine::InputSystem::InputControlExtensions::ControlBuilder::*)(bool)>(&UnityEngine::InputSystem::InputControlExtensions::ControlBuilder::IsButton)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputControlExtensions::ControlBuilder), "IsButton", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputControlExtensions::ControlBuilder::Finish
// Il2CppName: Finish
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::InputControlExtensions::ControlBuilder::*)()>(&UnityEngine::InputSystem::InputControlExtensions::ControlBuilder::Finish)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputControlExtensions::ControlBuilder), "Finish", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
