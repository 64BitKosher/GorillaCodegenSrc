// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.InputSystem.Utilities.InternedString
#include "UnityEngine/InputSystem/Utilities/InternedString.hpp"
// Including type: UnityEngine.InputSystem.Utilities.FourCC
#include "UnityEngine/InputSystem/Utilities/FourCC.hpp"
// Including type: System.Nullable`1
#include "System/Nullable_1.hpp"
// Including type: UnityEngine.InputSystem.Utilities.InlinedArray`1
#include "UnityEngine/InputSystem/Utilities/InlinedArray_1.hpp"
// Including type: UnityEngine.InputSystem.Utilities.ReadOnlyArray`1
#include "UnityEngine/InputSystem/Utilities/ReadOnlyArray_1.hpp"
// Including type: UnityEngine.InputSystem.Utilities.NamedValue
#include "UnityEngine/InputSystem/Utilities/NamedValue.hpp"
// Including type: UnityEngine.InputSystem.Utilities.NameAndParameters
#include "UnityEngine/InputSystem/Utilities/NameAndParameters.hpp"
// Including type: System.Single
#include "System/Single.hpp"
// Including type: UnityEngine.InputSystem.Layouts.InputDeviceMatcher
#include "UnityEngine/InputSystem/Layouts/InputDeviceMatcher.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::InputSystem::Layouts
namespace UnityEngine::InputSystem::Layouts {
  // Skipping declaration: ControlItem because it is already included!
  // Forward declaring type: InputDeviceDescription
  struct InputDeviceDescription;
  // Forward declaring type: InputControlAttribute
  class InputControlAttribute;
  // Skipping declaration: Cache because it is already included!
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: String
  class String;
  // Forward declaring type: Type
  class Type;
  // Forward declaring type: Func`1<TResult>
  template<typename TResult>
  class Func_1;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Skipping declaration: IEnumerable`1 because it is already included!
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
  // Forward declaring type: Dictionary`2<TKey, TValue>
  template<typename TKey, typename TValue>
  class Dictionary_2;
  // Forward declaring type: HashSet`1<T>
  template<typename T>
  class HashSet_1;
}
// Forward declaring namespace: System::Reflection
namespace System::Reflection {
  // Forward declaring type: MemberInfo
  class MemberInfo;
}
// Forward declaring namespace: UnityEngine::InputSystem
namespace UnityEngine::InputSystem {
  // Forward declaring type: InputControl
  class InputControl;
  // Forward declaring type: InputDevice
  class InputDevice;
}
// Completed forward declares
// Type namespace: UnityEngine.InputSystem.Layouts
namespace UnityEngine::InputSystem::Layouts {
  // Forward declaring type: InputControlLayout
  class InputControlLayout;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::InputSystem::Layouts::InputControlLayout);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::InputSystem::Layouts::InputControlLayout*, "UnityEngine.InputSystem.Layouts", "InputControlLayout");
// Type namespace: UnityEngine.InputSystem.Layouts
namespace UnityEngine::InputSystem::Layouts {
  // WARNING Size may be invalid!
  // Autogenerated type: UnityEngine.InputSystem.Layouts.InputControlLayout
  // [TokenAttribute] Offset: FFFFFFFF
  // [DefaultMemberAttribute] Offset: FFFFFFFF
  class InputControlLayout : public ::Il2CppObject {
    public:
    // Nested type: ::UnityEngine::InputSystem::Layouts::InputControlLayout::ControlItem
    struct ControlItem;
    // Nested type: ::UnityEngine::InputSystem::Layouts::InputControlLayout::Builder
    class Builder;
    // Nested type: ::UnityEngine::InputSystem::Layouts::InputControlLayout::Flags
    struct Flags;
    // Nested type: ::UnityEngine::InputSystem::Layouts::InputControlLayout::LayoutJsonNameAndDescriptorOnly
    struct LayoutJsonNameAndDescriptorOnly;
    // Nested type: ::UnityEngine::InputSystem::Layouts::InputControlLayout::LayoutJson
    struct LayoutJson;
    // Nested type: ::UnityEngine::InputSystem::Layouts::InputControlLayout::ControlItemJson
    class ControlItemJson;
    // Nested type: ::UnityEngine::InputSystem::Layouts::InputControlLayout::Collection
    struct Collection;
    // Nested type: ::UnityEngine::InputSystem::Layouts::InputControlLayout::LayoutNotFoundException
    class LayoutNotFoundException;
    // Nested type: ::UnityEngine::InputSystem::Layouts::InputControlLayout::Cache
    struct Cache;
    // Nested type: ::UnityEngine::InputSystem::Layouts::InputControlLayout::CacheRefInstance
    struct CacheRefInstance;
    // Nested type: ::UnityEngine::InputSystem::Layouts::InputControlLayout::$$c
    class $$c;
    // WARNING Size may be invalid!
    // WARNING Layout: Sequential may not be correctly taken into account!
    // Autogenerated type: UnityEngine.InputSystem.Layouts.InputControlLayout/ControlItem
    // [TokenAttribute] Offset: FFFFFFFF
    struct ControlItem/*, public ::System::ValueType*/ {
      public:
      // Nested type: ::UnityEngine::InputSystem::Layouts::InputControlLayout::ControlItem::Flags
      struct Flags;
      // Size: 0x4
      #pragma pack(push, 1)
      // Autogenerated type: UnityEngine.InputSystem.Layouts.InputControlLayout/ControlItem/Flags
      // [TokenAttribute] Offset: FFFFFFFF
      // [FlagsAttribute] Offset: FFFFFFFF
      struct Flags/*, public ::System::Enum*/ {
        public:
        public:
        // public System.Int32 value__
        // Size: 0x4
        // Offset: 0x0
        int value;
        // Field size check
        static_assert(sizeof(int) == 0x4);
        public:
        // Creating value type constructor for type: Flags
        constexpr Flags(int value_ = {}) noexcept : value{value_} {}
        // Creating interface conversion operator: operator ::System::Enum
        operator ::System::Enum() noexcept {
          return *reinterpret_cast<::System::Enum*>(this);
        }
        // Creating conversion operator: operator int
        constexpr operator int() const noexcept {
          return value;
        }
        // static field const value: static public UnityEngine.InputSystem.Layouts.InputControlLayout/ControlItem/Flags isModifyingExistingControl
        static constexpr const int isModifyingExistingControl = 1;
        // Get static field: static public UnityEngine.InputSystem.Layouts.InputControlLayout/ControlItem/Flags isModifyingExistingControl
        static ::UnityEngine::InputSystem::Layouts::InputControlLayout::ControlItem::Flags _get_isModifyingExistingControl();
        // Set static field: static public UnityEngine.InputSystem.Layouts.InputControlLayout/ControlItem/Flags isModifyingExistingControl
        static void _set_isModifyingExistingControl(::UnityEngine::InputSystem::Layouts::InputControlLayout::ControlItem::Flags value);
        // static field const value: static public UnityEngine.InputSystem.Layouts.InputControlLayout/ControlItem/Flags IsNoisy
        static constexpr const int IsNoisy = 2;
        // Get static field: static public UnityEngine.InputSystem.Layouts.InputControlLayout/ControlItem/Flags IsNoisy
        static ::UnityEngine::InputSystem::Layouts::InputControlLayout::ControlItem::Flags _get_IsNoisy();
        // Set static field: static public UnityEngine.InputSystem.Layouts.InputControlLayout/ControlItem/Flags IsNoisy
        static void _set_IsNoisy(::UnityEngine::InputSystem::Layouts::InputControlLayout::ControlItem::Flags value);
        // static field const value: static public UnityEngine.InputSystem.Layouts.InputControlLayout/ControlItem/Flags IsSynthetic
        static constexpr const int IsSynthetic = 4;
        // Get static field: static public UnityEngine.InputSystem.Layouts.InputControlLayout/ControlItem/Flags IsSynthetic
        static ::UnityEngine::InputSystem::Layouts::InputControlLayout::ControlItem::Flags _get_IsSynthetic();
        // Set static field: static public UnityEngine.InputSystem.Layouts.InputControlLayout/ControlItem/Flags IsSynthetic
        static void _set_IsSynthetic(::UnityEngine::InputSystem::Layouts::InputControlLayout::ControlItem::Flags value);
        // static field const value: static public UnityEngine.InputSystem.Layouts.InputControlLayout/ControlItem/Flags IsFirstDefinedInThisLayout
        static constexpr const int IsFirstDefinedInThisLayout = 8;
        // Get static field: static public UnityEngine.InputSystem.Layouts.InputControlLayout/ControlItem/Flags IsFirstDefinedInThisLayout
        static ::UnityEngine::InputSystem::Layouts::InputControlLayout::ControlItem::Flags _get_IsFirstDefinedInThisLayout();
        // Set static field: static public UnityEngine.InputSystem.Layouts.InputControlLayout/ControlItem/Flags IsFirstDefinedInThisLayout
        static void _set_IsFirstDefinedInThisLayout(::UnityEngine::InputSystem::Layouts::InputControlLayout::ControlItem::Flags value);
        // static field const value: static public UnityEngine.InputSystem.Layouts.InputControlLayout/ControlItem/Flags DontReset
        static constexpr const int DontReset = 16;
        // Get static field: static public UnityEngine.InputSystem.Layouts.InputControlLayout/ControlItem/Flags DontReset
        static ::UnityEngine::InputSystem::Layouts::InputControlLayout::ControlItem::Flags _get_DontReset();
        // Set static field: static public UnityEngine.InputSystem.Layouts.InputControlLayout/ControlItem/Flags DontReset
        static void _set_DontReset(::UnityEngine::InputSystem::Layouts::InputControlLayout::ControlItem::Flags value);
        // Get instance field reference: public System.Int32 value__
        [[deprecated("Use field access instead!")]] int& dyn_value__();
      }; // UnityEngine.InputSystem.Layouts.InputControlLayout/ControlItem/Flags
      #pragma pack(pop)
      static check_size<sizeof(InputControlLayout::ControlItem::Flags), 0 + sizeof(int)> __UnityEngine_InputSystem_Layouts_InputControlLayout_ControlItem_FlagsSizeCheck;
      static_assert(sizeof(InputControlLayout::ControlItem::Flags) == 0x4);
      public:
      // private UnityEngine.InputSystem.Utilities.InternedString <name>k__BackingField
      // Size: 0x10
      // Offset: 0x0
      ::UnityEngine::InputSystem::Utilities::InternedString name;
      // Field size check
      static_assert(sizeof(::UnityEngine::InputSystem::Utilities::InternedString) == 0x10);
      // private UnityEngine.InputSystem.Utilities.InternedString <layout>k__BackingField
      // Size: 0x10
      // Offset: 0x10
      ::UnityEngine::InputSystem::Utilities::InternedString layout;
      // Field size check
      static_assert(sizeof(::UnityEngine::InputSystem::Utilities::InternedString) == 0x10);
      // private UnityEngine.InputSystem.Utilities.InternedString <variants>k__BackingField
      // Size: 0x10
      // Offset: 0x20
      ::UnityEngine::InputSystem::Utilities::InternedString variants;
      // Field size check
      static_assert(sizeof(::UnityEngine::InputSystem::Utilities::InternedString) == 0x10);
      // private System.String <useStateFrom>k__BackingField
      // Size: 0x8
      // Offset: 0x30
      ::StringW useStateFrom;
      // Field size check
      static_assert(sizeof(::StringW) == 0x8);
      // private System.String <displayName>k__BackingField
      // Size: 0x8
      // Offset: 0x38
      ::StringW displayName;
      // Field size check
      static_assert(sizeof(::StringW) == 0x8);
      // private System.String <shortDisplayName>k__BackingField
      // Size: 0x8
      // Offset: 0x40
      ::StringW shortDisplayName;
      // Field size check
      static_assert(sizeof(::StringW) == 0x8);
      // private UnityEngine.InputSystem.Utilities.ReadOnlyArray`1<UnityEngine.InputSystem.Utilities.InternedString> <usages>k__BackingField
      // Size: 0xFFFFFFFF
      // Offset: 0x48
      ::UnityEngine::InputSystem::Utilities::ReadOnlyArray_1<::UnityEngine::InputSystem::Utilities::InternedString> usages;
      // private UnityEngine.InputSystem.Utilities.ReadOnlyArray`1<UnityEngine.InputSystem.Utilities.InternedString> <aliases>k__BackingField
      // Size: 0xFFFFFFFF
      // Offset: 0x58
      ::UnityEngine::InputSystem::Utilities::ReadOnlyArray_1<::UnityEngine::InputSystem::Utilities::InternedString> aliases;
      // private UnityEngine.InputSystem.Utilities.ReadOnlyArray`1<UnityEngine.InputSystem.Utilities.NamedValue> <parameters>k__BackingField
      // Size: 0xFFFFFFFF
      // Offset: 0x68
      ::UnityEngine::InputSystem::Utilities::ReadOnlyArray_1<::UnityEngine::InputSystem::Utilities::NamedValue> parameters;
      // private UnityEngine.InputSystem.Utilities.ReadOnlyArray`1<UnityEngine.InputSystem.Utilities.NameAndParameters> <processors>k__BackingField
      // Size: 0xFFFFFFFF
      // Offset: 0x78
      ::UnityEngine::InputSystem::Utilities::ReadOnlyArray_1<::UnityEngine::InputSystem::Utilities::NameAndParameters> processors;
      // private System.UInt32 <offset>k__BackingField
      // Size: 0x4
      // Offset: 0x88
      uint offset;
      // Field size check
      static_assert(sizeof(uint) == 0x4);
      // private System.UInt32 <bit>k__BackingField
      // Size: 0x4
      // Offset: 0x8C
      uint bit;
      // Field size check
      static_assert(sizeof(uint) == 0x4);
      // private System.UInt32 <sizeInBits>k__BackingField
      // Size: 0x4
      // Offset: 0x90
      uint sizeInBits;
      // Field size check
      static_assert(sizeof(uint) == 0x4);
      // private UnityEngine.InputSystem.Utilities.FourCC <format>k__BackingField
      // Size: 0x4
      // Offset: 0x94
      ::UnityEngine::InputSystem::Utilities::FourCC format;
      // Field size check
      static_assert(sizeof(::UnityEngine::InputSystem::Utilities::FourCC) == 0x4);
      // private UnityEngine.InputSystem.Layouts.InputControlLayout/ControlItem/Flags <flags>k__BackingField
      // Size: 0x4
      // Offset: 0x98
      ::UnityEngine::InputSystem::Layouts::InputControlLayout::ControlItem::Flags flags;
      // Field size check
      static_assert(sizeof(::UnityEngine::InputSystem::Layouts::InputControlLayout::ControlItem::Flags) == 0x4);
      // private System.Int32 <arraySize>k__BackingField
      // Size: 0x4
      // Offset: 0x9C
      int arraySize;
      // Field size check
      static_assert(sizeof(int) == 0x4);
      // private UnityEngine.InputSystem.Utilities.PrimitiveValue <defaultState>k__BackingField
      // Size: 0xC
      // Offset: 0xA0
      ::UnityEngine::InputSystem::Utilities::PrimitiveValue defaultState;
      // Field size check
      static_assert(sizeof(::UnityEngine::InputSystem::Utilities::PrimitiveValue) == 0xC);
      // private UnityEngine.InputSystem.Utilities.PrimitiveValue <minValue>k__BackingField
      // Size: 0xC
      // Offset: 0xB0
      ::UnityEngine::InputSystem::Utilities::PrimitiveValue minValue;
      // Field size check
      static_assert(sizeof(::UnityEngine::InputSystem::Utilities::PrimitiveValue) == 0xC);
      // private UnityEngine.InputSystem.Utilities.PrimitiveValue <maxValue>k__BackingField
      // Size: 0xC
      // Offset: 0xC0
      ::UnityEngine::InputSystem::Utilities::PrimitiveValue maxValue;
      // Field size check
      static_assert(sizeof(::UnityEngine::InputSystem::Utilities::PrimitiveValue) == 0xC);
      public:
      // Creating value type constructor for type: ControlItem
      constexpr ControlItem(::UnityEngine::InputSystem::Utilities::InternedString name_ = {}, ::UnityEngine::InputSystem::Utilities::InternedString layout_ = {}, ::UnityEngine::InputSystem::Utilities::InternedString variants_ = {}, ::StringW useStateFrom_ = {}, ::StringW displayName_ = {}, ::StringW shortDisplayName_ = {}, ::UnityEngine::InputSystem::Utilities::ReadOnlyArray_1<::UnityEngine::InputSystem::Utilities::InternedString> usages_ = {}, ::UnityEngine::InputSystem::Utilities::ReadOnlyArray_1<::UnityEngine::InputSystem::Utilities::InternedString> aliases_ = {}, ::UnityEngine::InputSystem::Utilities::ReadOnlyArray_1<::UnityEngine::InputSystem::Utilities::NamedValue> parameters_ = {}, ::UnityEngine::InputSystem::Utilities::ReadOnlyArray_1<::UnityEngine::InputSystem::Utilities::NameAndParameters> processors_ = {}, uint offset_ = {}, uint bit_ = {}, uint sizeInBits_ = {}, ::UnityEngine::InputSystem::Utilities::FourCC format_ = {}, ::UnityEngine::InputSystem::Layouts::InputControlLayout::ControlItem::Flags flags_ = {}, int arraySize_ = {}, ::UnityEngine::InputSystem::Utilities::PrimitiveValue defaultState_ = {}, ::UnityEngine::InputSystem::Utilities::PrimitiveValue minValue_ = {}, ::UnityEngine::InputSystem::Utilities::PrimitiveValue maxValue_ = {}) noexcept : name{name_}, layout{layout_}, variants{variants_}, useStateFrom{useStateFrom_}, displayName{displayName_}, shortDisplayName{shortDisplayName_}, usages{usages_}, aliases{aliases_}, parameters{parameters_}, processors{processors_}, offset{offset_}, bit{bit_}, sizeInBits{sizeInBits_}, format{format_}, flags{flags_}, arraySize{arraySize_}, defaultState{defaultState_}, minValue{minValue_}, maxValue{maxValue_} {}
      // Creating interface conversion operator: operator ::System::ValueType
      operator ::System::ValueType() noexcept {
        return *reinterpret_cast<::System::ValueType*>(this);
      }
      // Get instance field reference: private UnityEngine.InputSystem.Utilities.InternedString <name>k__BackingField
      [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Utilities::InternedString& dyn_$name$k__BackingField();
      // Get instance field reference: private UnityEngine.InputSystem.Utilities.InternedString <layout>k__BackingField
      [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Utilities::InternedString& dyn_$layout$k__BackingField();
      // Get instance field reference: private UnityEngine.InputSystem.Utilities.InternedString <variants>k__BackingField
      [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Utilities::InternedString& dyn_$variants$k__BackingField();
      // Get instance field reference: private System.String <useStateFrom>k__BackingField
      [[deprecated("Use field access instead!")]] ::StringW& dyn_$useStateFrom$k__BackingField();
      // Get instance field reference: private System.String <displayName>k__BackingField
      [[deprecated("Use field access instead!")]] ::StringW& dyn_$displayName$k__BackingField();
      // Get instance field reference: private System.String <shortDisplayName>k__BackingField
      [[deprecated("Use field access instead!")]] ::StringW& dyn_$shortDisplayName$k__BackingField();
      // Get instance field reference: private UnityEngine.InputSystem.Utilities.ReadOnlyArray`1<UnityEngine.InputSystem.Utilities.InternedString> <usages>k__BackingField
      [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Utilities::ReadOnlyArray_1<::UnityEngine::InputSystem::Utilities::InternedString>& dyn_$usages$k__BackingField();
      // Get instance field reference: private UnityEngine.InputSystem.Utilities.ReadOnlyArray`1<UnityEngine.InputSystem.Utilities.InternedString> <aliases>k__BackingField
      [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Utilities::ReadOnlyArray_1<::UnityEngine::InputSystem::Utilities::InternedString>& dyn_$aliases$k__BackingField();
      // Get instance field reference: private UnityEngine.InputSystem.Utilities.ReadOnlyArray`1<UnityEngine.InputSystem.Utilities.NamedValue> <parameters>k__BackingField
      [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Utilities::ReadOnlyArray_1<::UnityEngine::InputSystem::Utilities::NamedValue>& dyn_$parameters$k__BackingField();
      // Get instance field reference: private UnityEngine.InputSystem.Utilities.ReadOnlyArray`1<UnityEngine.InputSystem.Utilities.NameAndParameters> <processors>k__BackingField
      [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Utilities::ReadOnlyArray_1<::UnityEngine::InputSystem::Utilities::NameAndParameters>& dyn_$processors$k__BackingField();
      // Get instance field reference: private System.UInt32 <offset>k__BackingField
      [[deprecated("Use field access instead!")]] uint& dyn_$offset$k__BackingField();
      // Get instance field reference: private System.UInt32 <bit>k__BackingField
      [[deprecated("Use field access instead!")]] uint& dyn_$bit$k__BackingField();
      // Get instance field reference: private System.UInt32 <sizeInBits>k__BackingField
      [[deprecated("Use field access instead!")]] uint& dyn_$sizeInBits$k__BackingField();
      // Get instance field reference: private UnityEngine.InputSystem.Utilities.FourCC <format>k__BackingField
      [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Utilities::FourCC& dyn_$format$k__BackingField();
      // Get instance field reference: private UnityEngine.InputSystem.Layouts.InputControlLayout/ControlItem/Flags <flags>k__BackingField
      [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Layouts::InputControlLayout::ControlItem::Flags& dyn_$flags$k__BackingField();
      // Get instance field reference: private System.Int32 <arraySize>k__BackingField
      [[deprecated("Use field access instead!")]] int& dyn_$arraySize$k__BackingField();
      // Get instance field reference: private UnityEngine.InputSystem.Utilities.PrimitiveValue <defaultState>k__BackingField
      [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Utilities::PrimitiveValue& dyn_$defaultState$k__BackingField();
      // Get instance field reference: private UnityEngine.InputSystem.Utilities.PrimitiveValue <minValue>k__BackingField
      [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Utilities::PrimitiveValue& dyn_$minValue$k__BackingField();
      // Get instance field reference: private UnityEngine.InputSystem.Utilities.PrimitiveValue <maxValue>k__BackingField
      [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Utilities::PrimitiveValue& dyn_$maxValue$k__BackingField();
      // public UnityEngine.InputSystem.Utilities.InternedString get_name()
      // Offset: 0x51610E0
      ::UnityEngine::InputSystem::Utilities::InternedString get_name();
      // System.Void set_name(UnityEngine.InputSystem.Utilities.InternedString value)
      // Offset: 0x51610EC
      void set_name(::UnityEngine::InputSystem::Utilities::InternedString value);
      // public UnityEngine.InputSystem.Utilities.InternedString get_layout()
      // Offset: 0x51610F8
      ::UnityEngine::InputSystem::Utilities::InternedString get_layout();
      // System.Void set_layout(UnityEngine.InputSystem.Utilities.InternedString value)
      // Offset: 0x5161104
      void set_layout(::UnityEngine::InputSystem::Utilities::InternedString value);
      // public UnityEngine.InputSystem.Utilities.InternedString get_variants()
      // Offset: 0x5161114
      ::UnityEngine::InputSystem::Utilities::InternedString get_variants();
      // System.Void set_variants(UnityEngine.InputSystem.Utilities.InternedString value)
      // Offset: 0x5161120
      void set_variants(::UnityEngine::InputSystem::Utilities::InternedString value);
      // public System.String get_useStateFrom()
      // Offset: 0x5161130
      ::StringW get_useStateFrom();
      // System.Void set_useStateFrom(System.String value)
      // Offset: 0x5161138
      void set_useStateFrom(::StringW value);
      // public System.String get_displayName()
      // Offset: 0x5161140
      ::StringW get_displayName();
      // System.Void set_displayName(System.String value)
      // Offset: 0x5161148
      void set_displayName(::StringW value);
      // public System.String get_shortDisplayName()
      // Offset: 0x5161150
      ::StringW get_shortDisplayName();
      // System.Void set_shortDisplayName(System.String value)
      // Offset: 0x5161158
      void set_shortDisplayName(::StringW value);
      // public UnityEngine.InputSystem.Utilities.ReadOnlyArray`1<UnityEngine.InputSystem.Utilities.InternedString> get_usages()
      // Offset: 0x5161160
      ::UnityEngine::InputSystem::Utilities::ReadOnlyArray_1<::UnityEngine::InputSystem::Utilities::InternedString> get_usages();
      // System.Void set_usages(UnityEngine.InputSystem.Utilities.ReadOnlyArray`1<UnityEngine.InputSystem.Utilities.InternedString> value)
      // Offset: 0x516116C
      void set_usages(::UnityEngine::InputSystem::Utilities::ReadOnlyArray_1<::UnityEngine::InputSystem::Utilities::InternedString> value);
      // public UnityEngine.InputSystem.Utilities.ReadOnlyArray`1<UnityEngine.InputSystem.Utilities.InternedString> get_aliases()
      // Offset: 0x516117C
      ::UnityEngine::InputSystem::Utilities::ReadOnlyArray_1<::UnityEngine::InputSystem::Utilities::InternedString> get_aliases();
      // System.Void set_aliases(UnityEngine.InputSystem.Utilities.ReadOnlyArray`1<UnityEngine.InputSystem.Utilities.InternedString> value)
      // Offset: 0x5161188
      void set_aliases(::UnityEngine::InputSystem::Utilities::ReadOnlyArray_1<::UnityEngine::InputSystem::Utilities::InternedString> value);
      // public UnityEngine.InputSystem.Utilities.ReadOnlyArray`1<UnityEngine.InputSystem.Utilities.NamedValue> get_parameters()
      // Offset: 0x5161198
      ::UnityEngine::InputSystem::Utilities::ReadOnlyArray_1<::UnityEngine::InputSystem::Utilities::NamedValue> get_parameters();
      // System.Void set_parameters(UnityEngine.InputSystem.Utilities.ReadOnlyArray`1<UnityEngine.InputSystem.Utilities.NamedValue> value)
      // Offset: 0x51611A4
      void set_parameters(::UnityEngine::InputSystem::Utilities::ReadOnlyArray_1<::UnityEngine::InputSystem::Utilities::NamedValue> value);
      // public UnityEngine.InputSystem.Utilities.ReadOnlyArray`1<UnityEngine.InputSystem.Utilities.NameAndParameters> get_processors()
      // Offset: 0x51611B4
      ::UnityEngine::InputSystem::Utilities::ReadOnlyArray_1<::UnityEngine::InputSystem::Utilities::NameAndParameters> get_processors();
      // System.Void set_processors(UnityEngine.InputSystem.Utilities.ReadOnlyArray`1<UnityEngine.InputSystem.Utilities.NameAndParameters> value)
      // Offset: 0x51611C0
      void set_processors(::UnityEngine::InputSystem::Utilities::ReadOnlyArray_1<::UnityEngine::InputSystem::Utilities::NameAndParameters> value);
      // public System.UInt32 get_offset()
      // Offset: 0x51611D0
      uint get_offset();
      // System.Void set_offset(System.UInt32 value)
      // Offset: 0x51611D8
      void set_offset(uint value);
      // public System.UInt32 get_bit()
      // Offset: 0x51611E0
      uint get_bit();
      // System.Void set_bit(System.UInt32 value)
      // Offset: 0x51611E8
      void set_bit(uint value);
      // public System.UInt32 get_sizeInBits()
      // Offset: 0x51611F0
      uint get_sizeInBits();
      // System.Void set_sizeInBits(System.UInt32 value)
      // Offset: 0x51611F8
      void set_sizeInBits(uint value);
      // public UnityEngine.InputSystem.Utilities.FourCC get_format()
      // Offset: 0x5161200
      ::UnityEngine::InputSystem::Utilities::FourCC get_format();
      // System.Void set_format(UnityEngine.InputSystem.Utilities.FourCC value)
      // Offset: 0x5161208
      void set_format(::UnityEngine::InputSystem::Utilities::FourCC value);
      // private UnityEngine.InputSystem.Layouts.InputControlLayout/ControlItem/Flags get_flags()
      // Offset: 0x5161210
      ::UnityEngine::InputSystem::Layouts::InputControlLayout::ControlItem::Flags get_flags();
      // private System.Void set_flags(UnityEngine.InputSystem.Layouts.InputControlLayout/ControlItem/Flags value)
      // Offset: 0x5161218
      void set_flags(::UnityEngine::InputSystem::Layouts::InputControlLayout::ControlItem::Flags value);
      // public System.Int32 get_arraySize()
      // Offset: 0x5161220
      int get_arraySize();
      // System.Void set_arraySize(System.Int32 value)
      // Offset: 0x5161228
      void set_arraySize(int value);
      // public UnityEngine.InputSystem.Utilities.PrimitiveValue get_defaultState()
      // Offset: 0x5161230
      ::UnityEngine::InputSystem::Utilities::PrimitiveValue get_defaultState();
      // System.Void set_defaultState(UnityEngine.InputSystem.Utilities.PrimitiveValue value)
      // Offset: 0x516123C
      void set_defaultState(::UnityEngine::InputSystem::Utilities::PrimitiveValue value);
      // public UnityEngine.InputSystem.Utilities.PrimitiveValue get_minValue()
      // Offset: 0x5161244
      ::UnityEngine::InputSystem::Utilities::PrimitiveValue get_minValue();
      // System.Void set_minValue(UnityEngine.InputSystem.Utilities.PrimitiveValue value)
      // Offset: 0x5161250
      void set_minValue(::UnityEngine::InputSystem::Utilities::PrimitiveValue value);
      // public UnityEngine.InputSystem.Utilities.PrimitiveValue get_maxValue()
      // Offset: 0x5161258
      ::UnityEngine::InputSystem::Utilities::PrimitiveValue get_maxValue();
      // System.Void set_maxValue(UnityEngine.InputSystem.Utilities.PrimitiveValue value)
      // Offset: 0x5161264
      void set_maxValue(::UnityEngine::InputSystem::Utilities::PrimitiveValue value);
      // public System.Boolean get_isModifyingExistingControl()
      // Offset: 0x516126C
      bool get_isModifyingExistingControl();
      // System.Void set_isModifyingExistingControl(System.Boolean value)
      // Offset: 0x515EDEC
      void set_isModifyingExistingControl(bool value);
      // public System.Boolean get_isNoisy()
      // Offset: 0x5161278
      bool get_isNoisy();
      // System.Void set_isNoisy(System.Boolean value)
      // Offset: 0x515EE1C
      void set_isNoisy(bool value);
      // public System.Boolean get_isSynthetic()
      // Offset: 0x5161284
      bool get_isSynthetic();
      // System.Void set_isSynthetic(System.Boolean value)
      // Offset: 0x515EE5C
      void set_isSynthetic(bool value);
      // public System.Boolean get_dontReset()
      // Offset: 0x5161290
      bool get_dontReset();
      // System.Void set_dontReset(System.Boolean value)
      // Offset: 0x515EE3C
      void set_dontReset(bool value);
      // public System.Boolean get_isFirstDefinedInThisLayout()
      // Offset: 0x516129C
      bool get_isFirstDefinedInThisLayout();
      // System.Void set_isFirstDefinedInThisLayout(System.Boolean value)
      // Offset: 0x515EDFC
      void set_isFirstDefinedInThisLayout(bool value);
      // public System.Boolean get_isArray()
      // Offset: 0x515C5FC
      bool get_isArray();
      // public UnityEngine.InputSystem.Layouts.InputControlLayout/ControlItem Merge(UnityEngine.InputSystem.Layouts.InputControlLayout/ControlItem other)
      // Offset: 0x51607C8
      ::UnityEngine::InputSystem::Layouts::InputControlLayout::ControlItem Merge(::UnityEngine::InputSystem::Layouts::InputControlLayout::ControlItem other);
    }; // UnityEngine.InputSystem.Layouts.InputControlLayout/ControlItem
    // WARNING Not writing size check since size may be invalid!
    // Size: 0x4
    #pragma pack(push, 1)
    // Autogenerated type: UnityEngine.InputSystem.Layouts.InputControlLayout/Flags
    // [TokenAttribute] Offset: FFFFFFFF
    // [FlagsAttribute] Offset: FFFFFFFF
    struct Flags/*, public ::System::Enum*/ {
      public:
      public:
      // public System.Int32 value__
      // Size: 0x4
      // Offset: 0x0
      int value;
      // Field size check
      static_assert(sizeof(int) == 0x4);
      public:
      // Creating value type constructor for type: Flags
      constexpr Flags(int value_ = {}) noexcept : value{value_} {}
      // Creating interface conversion operator: operator ::System::Enum
      operator ::System::Enum() noexcept {
        return *reinterpret_cast<::System::Enum*>(this);
      }
      // Creating conversion operator: operator int
      constexpr operator int() const noexcept {
        return value;
      }
      // static field const value: static public UnityEngine.InputSystem.Layouts.InputControlLayout/Flags IsGenericTypeOfDevice
      static constexpr const int IsGenericTypeOfDevice = 1;
      // Get static field: static public UnityEngine.InputSystem.Layouts.InputControlLayout/Flags IsGenericTypeOfDevice
      static ::UnityEngine::InputSystem::Layouts::InputControlLayout::Flags _get_IsGenericTypeOfDevice();
      // Set static field: static public UnityEngine.InputSystem.Layouts.InputControlLayout/Flags IsGenericTypeOfDevice
      static void _set_IsGenericTypeOfDevice(::UnityEngine::InputSystem::Layouts::InputControlLayout::Flags value);
      // static field const value: static public UnityEngine.InputSystem.Layouts.InputControlLayout/Flags HideInUI
      static constexpr const int HideInUI = 2;
      // Get static field: static public UnityEngine.InputSystem.Layouts.InputControlLayout/Flags HideInUI
      static ::UnityEngine::InputSystem::Layouts::InputControlLayout::Flags _get_HideInUI();
      // Set static field: static public UnityEngine.InputSystem.Layouts.InputControlLayout/Flags HideInUI
      static void _set_HideInUI(::UnityEngine::InputSystem::Layouts::InputControlLayout::Flags value);
      // static field const value: static public UnityEngine.InputSystem.Layouts.InputControlLayout/Flags IsOverride
      static constexpr const int IsOverride = 4;
      // Get static field: static public UnityEngine.InputSystem.Layouts.InputControlLayout/Flags IsOverride
      static ::UnityEngine::InputSystem::Layouts::InputControlLayout::Flags _get_IsOverride();
      // Set static field: static public UnityEngine.InputSystem.Layouts.InputControlLayout/Flags IsOverride
      static void _set_IsOverride(::UnityEngine::InputSystem::Layouts::InputControlLayout::Flags value);
      // static field const value: static public UnityEngine.InputSystem.Layouts.InputControlLayout/Flags CanRunInBackground
      static constexpr const int CanRunInBackground = 8;
      // Get static field: static public UnityEngine.InputSystem.Layouts.InputControlLayout/Flags CanRunInBackground
      static ::UnityEngine::InputSystem::Layouts::InputControlLayout::Flags _get_CanRunInBackground();
      // Set static field: static public UnityEngine.InputSystem.Layouts.InputControlLayout/Flags CanRunInBackground
      static void _set_CanRunInBackground(::UnityEngine::InputSystem::Layouts::InputControlLayout::Flags value);
      // static field const value: static public UnityEngine.InputSystem.Layouts.InputControlLayout/Flags CanRunInBackgroundIsSet
      static constexpr const int CanRunInBackgroundIsSet = 16;
      // Get static field: static public UnityEngine.InputSystem.Layouts.InputControlLayout/Flags CanRunInBackgroundIsSet
      static ::UnityEngine::InputSystem::Layouts::InputControlLayout::Flags _get_CanRunInBackgroundIsSet();
      // Set static field: static public UnityEngine.InputSystem.Layouts.InputControlLayout/Flags CanRunInBackgroundIsSet
      static void _set_CanRunInBackgroundIsSet(::UnityEngine::InputSystem::Layouts::InputControlLayout::Flags value);
      // static field const value: static public UnityEngine.InputSystem.Layouts.InputControlLayout/Flags IsNoisy
      static constexpr const int IsNoisy = 32;
      // Get static field: static public UnityEngine.InputSystem.Layouts.InputControlLayout/Flags IsNoisy
      static ::UnityEngine::InputSystem::Layouts::InputControlLayout::Flags _get_IsNoisy();
      // Set static field: static public UnityEngine.InputSystem.Layouts.InputControlLayout/Flags IsNoisy
      static void _set_IsNoisy(::UnityEngine::InputSystem::Layouts::InputControlLayout::Flags value);
      // Get instance field reference: public System.Int32 value__
      [[deprecated("Use field access instead!")]] int& dyn_value__();
    }; // UnityEngine.InputSystem.Layouts.InputControlLayout/Flags
    #pragma pack(pop)
    static check_size<sizeof(InputControlLayout::Flags), 0 + sizeof(int)> __UnityEngine_InputSystem_Layouts_InputControlLayout_FlagsSizeCheck;
    static_assert(sizeof(InputControlLayout::Flags) == 0x4);
    // Size: 0x40
    #pragma pack(push, 1)
    // WARNING Layout: Sequential may not be correctly taken into account!
    // Autogenerated type: UnityEngine.InputSystem.Layouts.InputControlLayout/Collection
    // [TokenAttribute] Offset: FFFFFFFF
    struct Collection/*, public ::System::ValueType*/ {
      public:
      // Nested type: ::UnityEngine::InputSystem::Layouts::InputControlLayout::Collection::LayoutMatcher
      struct LayoutMatcher;
      // Nested type: ::UnityEngine::InputSystem::Layouts::InputControlLayout::Collection::PrecompiledLayout
      struct PrecompiledLayout;
      // Nested type: ::UnityEngine::InputSystem::Layouts::InputControlLayout::Collection::$GetBaseLayouts$d__24
      class $GetBaseLayouts$d__24;
      // Size: 0x18
      #pragma pack(push, 1)
      // WARNING Layout: Sequential may not be correctly taken into account!
      // Autogenerated type: UnityEngine.InputSystem.Layouts.InputControlLayout/Collection/LayoutMatcher
      // [TokenAttribute] Offset: FFFFFFFF
      struct LayoutMatcher/*, public ::System::ValueType*/ {
        public:
        public:
        // public UnityEngine.InputSystem.Utilities.InternedString layoutName
        // Size: 0x10
        // Offset: 0x0
        ::UnityEngine::InputSystem::Utilities::InternedString layoutName;
        // Field size check
        static_assert(sizeof(::UnityEngine::InputSystem::Utilities::InternedString) == 0x10);
        // public UnityEngine.InputSystem.Layouts.InputDeviceMatcher deviceMatcher
        // Size: 0x8
        // Offset: 0x10
        ::UnityEngine::InputSystem::Layouts::InputDeviceMatcher deviceMatcher;
        // Field size check
        static_assert(sizeof(::UnityEngine::InputSystem::Layouts::InputDeviceMatcher) == 0x8);
        public:
        // Creating value type constructor for type: LayoutMatcher
        constexpr LayoutMatcher(::UnityEngine::InputSystem::Utilities::InternedString layoutName_ = {}, ::UnityEngine::InputSystem::Layouts::InputDeviceMatcher deviceMatcher_ = {}) noexcept : layoutName{layoutName_}, deviceMatcher{deviceMatcher_} {}
        // Creating interface conversion operator: operator ::System::ValueType
        operator ::System::ValueType() noexcept {
          return *reinterpret_cast<::System::ValueType*>(this);
        }
        // Get instance field reference: public UnityEngine.InputSystem.Utilities.InternedString layoutName
        [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Utilities::InternedString& dyn_layoutName();
        // Get instance field reference: public UnityEngine.InputSystem.Layouts.InputDeviceMatcher deviceMatcher
        [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Layouts::InputDeviceMatcher& dyn_deviceMatcher();
      }; // UnityEngine.InputSystem.Layouts.InputControlLayout/Collection/LayoutMatcher
      #pragma pack(pop)
      static check_size<sizeof(InputControlLayout::Collection::LayoutMatcher), 16 + sizeof(::UnityEngine::InputSystem::Layouts::InputDeviceMatcher)> __UnityEngine_InputSystem_Layouts_InputControlLayout_Collection_LayoutMatcherSizeCheck;
      static_assert(sizeof(InputControlLayout::Collection::LayoutMatcher) == 0x18);
      // Size: 0x10
      #pragma pack(push, 1)
      // WARNING Layout: Sequential may not be correctly taken into account!
      // Autogenerated type: UnityEngine.InputSystem.Layouts.InputControlLayout/Collection/PrecompiledLayout
      // [TokenAttribute] Offset: FFFFFFFF
      struct PrecompiledLayout/*, public ::System::ValueType*/ {
        public:
        public:
        // public System.Func`1<UnityEngine.InputSystem.InputDevice> factoryMethod
        // Size: 0x8
        // Offset: 0x0
        ::System::Func_1<::UnityEngine::InputSystem::InputDevice*>* factoryMethod;
        // Field size check
        static_assert(sizeof(::System::Func_1<::UnityEngine::InputSystem::InputDevice*>*) == 0x8);
        // public System.String metadata
        // Size: 0x8
        // Offset: 0x8
        ::StringW metadata;
        // Field size check
        static_assert(sizeof(::StringW) == 0x8);
        public:
        // Creating value type constructor for type: PrecompiledLayout
        constexpr PrecompiledLayout(::System::Func_1<::UnityEngine::InputSystem::InputDevice*>* factoryMethod_ = {}, ::StringW metadata_ = {}) noexcept : factoryMethod{factoryMethod_}, metadata{metadata_} {}
        // Creating interface conversion operator: operator ::System::ValueType
        operator ::System::ValueType() noexcept {
          return *reinterpret_cast<::System::ValueType*>(this);
        }
        // Get instance field reference: public System.Func`1<UnityEngine.InputSystem.InputDevice> factoryMethod
        [[deprecated("Use field access instead!")]] ::System::Func_1<::UnityEngine::InputSystem::InputDevice*>*& dyn_factoryMethod();
        // Get instance field reference: public System.String metadata
        [[deprecated("Use field access instead!")]] ::StringW& dyn_metadata();
      }; // UnityEngine.InputSystem.Layouts.InputControlLayout/Collection/PrecompiledLayout
      #pragma pack(pop)
      static check_size<sizeof(InputControlLayout::Collection::PrecompiledLayout), 8 + sizeof(::StringW)> __UnityEngine_InputSystem_Layouts_InputControlLayout_Collection_PrecompiledLayoutSizeCheck;
      static_assert(sizeof(InputControlLayout::Collection::PrecompiledLayout) == 0x10);
      public:
      // public System.Collections.Generic.Dictionary`2<UnityEngine.InputSystem.Utilities.InternedString,System.Type> layoutTypes
      // Size: 0x8
      // Offset: 0x0
      ::System::Collections::Generic::Dictionary_2<::UnityEngine::InputSystem::Utilities::InternedString, ::System::Type*>* layoutTypes;
      // Field size check
      static_assert(sizeof(::System::Collections::Generic::Dictionary_2<::UnityEngine::InputSystem::Utilities::InternedString, ::System::Type*>*) == 0x8);
      // public System.Collections.Generic.Dictionary`2<UnityEngine.InputSystem.Utilities.InternedString,System.String> layoutStrings
      // Size: 0x8
      // Offset: 0x8
      ::System::Collections::Generic::Dictionary_2<::UnityEngine::InputSystem::Utilities::InternedString, ::StringW>* layoutStrings;
      // Field size check
      static_assert(sizeof(::System::Collections::Generic::Dictionary_2<::UnityEngine::InputSystem::Utilities::InternedString, ::StringW>*) == 0x8);
      // public System.Collections.Generic.Dictionary`2<UnityEngine.InputSystem.Utilities.InternedString,System.Func`1<UnityEngine.InputSystem.Layouts.InputControlLayout>> layoutBuilders
      // Size: 0x8
      // Offset: 0x10
      ::System::Collections::Generic::Dictionary_2<::UnityEngine::InputSystem::Utilities::InternedString, ::System::Func_1<::UnityEngine::InputSystem::Layouts::InputControlLayout*>*>* layoutBuilders;
      // Field size check
      static_assert(sizeof(::System::Collections::Generic::Dictionary_2<::UnityEngine::InputSystem::Utilities::InternedString, ::System::Func_1<::UnityEngine::InputSystem::Layouts::InputControlLayout*>*>*) == 0x8);
      // public System.Collections.Generic.Dictionary`2<UnityEngine.InputSystem.Utilities.InternedString,UnityEngine.InputSystem.Utilities.InternedString> baseLayoutTable
      // Size: 0x8
      // Offset: 0x18
      ::System::Collections::Generic::Dictionary_2<::UnityEngine::InputSystem::Utilities::InternedString, ::UnityEngine::InputSystem::Utilities::InternedString>* baseLayoutTable;
      // Field size check
      static_assert(sizeof(::System::Collections::Generic::Dictionary_2<::UnityEngine::InputSystem::Utilities::InternedString, ::UnityEngine::InputSystem::Utilities::InternedString>*) == 0x8);
      // public System.Collections.Generic.Dictionary`2<UnityEngine.InputSystem.Utilities.InternedString,UnityEngine.InputSystem.Utilities.InternedString[]> layoutOverrides
      // Size: 0x8
      // Offset: 0x20
      ::System::Collections::Generic::Dictionary_2<::UnityEngine::InputSystem::Utilities::InternedString, ::ArrayW<::UnityEngine::InputSystem::Utilities::InternedString>>* layoutOverrides;
      // Field size check
      static_assert(sizeof(::System::Collections::Generic::Dictionary_2<::UnityEngine::InputSystem::Utilities::InternedString, ::ArrayW<::UnityEngine::InputSystem::Utilities::InternedString>>*) == 0x8);
      // public System.Collections.Generic.HashSet`1<UnityEngine.InputSystem.Utilities.InternedString> layoutOverrideNames
      // Size: 0x8
      // Offset: 0x28
      ::System::Collections::Generic::HashSet_1<::UnityEngine::InputSystem::Utilities::InternedString>* layoutOverrideNames;
      // Field size check
      static_assert(sizeof(::System::Collections::Generic::HashSet_1<::UnityEngine::InputSystem::Utilities::InternedString>*) == 0x8);
      // public System.Collections.Generic.Dictionary`2<UnityEngine.InputSystem.Utilities.InternedString,UnityEngine.InputSystem.Layouts.InputControlLayout/Collection/PrecompiledLayout> precompiledLayouts
      // Size: 0x8
      // Offset: 0x30
      ::System::Collections::Generic::Dictionary_2<::UnityEngine::InputSystem::Utilities::InternedString, ::UnityEngine::InputSystem::Layouts::InputControlLayout::Collection::PrecompiledLayout>* precompiledLayouts;
      // Field size check
      static_assert(sizeof(::System::Collections::Generic::Dictionary_2<::UnityEngine::InputSystem::Utilities::InternedString, ::UnityEngine::InputSystem::Layouts::InputControlLayout::Collection::PrecompiledLayout>*) == 0x8);
      // public System.Collections.Generic.List`1<UnityEngine.InputSystem.Layouts.InputControlLayout/Collection/LayoutMatcher> layoutMatchers
      // Size: 0x8
      // Offset: 0x38
      ::System::Collections::Generic::List_1<::UnityEngine::InputSystem::Layouts::InputControlLayout::Collection::LayoutMatcher>* layoutMatchers;
      // Field size check
      static_assert(sizeof(::System::Collections::Generic::List_1<::UnityEngine::InputSystem::Layouts::InputControlLayout::Collection::LayoutMatcher>*) == 0x8);
      public:
      // Creating value type constructor for type: Collection
      constexpr Collection(::System::Collections::Generic::Dictionary_2<::UnityEngine::InputSystem::Utilities::InternedString, ::System::Type*>* layoutTypes_ = {}, ::System::Collections::Generic::Dictionary_2<::UnityEngine::InputSystem::Utilities::InternedString, ::StringW>* layoutStrings_ = {}, ::System::Collections::Generic::Dictionary_2<::UnityEngine::InputSystem::Utilities::InternedString, ::System::Func_1<::UnityEngine::InputSystem::Layouts::InputControlLayout*>*>* layoutBuilders_ = {}, ::System::Collections::Generic::Dictionary_2<::UnityEngine::InputSystem::Utilities::InternedString, ::UnityEngine::InputSystem::Utilities::InternedString>* baseLayoutTable_ = {}, ::System::Collections::Generic::Dictionary_2<::UnityEngine::InputSystem::Utilities::InternedString, ::ArrayW<::UnityEngine::InputSystem::Utilities::InternedString>>* layoutOverrides_ = {}, ::System::Collections::Generic::HashSet_1<::UnityEngine::InputSystem::Utilities::InternedString>* layoutOverrideNames_ = {}, ::System::Collections::Generic::Dictionary_2<::UnityEngine::InputSystem::Utilities::InternedString, ::UnityEngine::InputSystem::Layouts::InputControlLayout::Collection::PrecompiledLayout>* precompiledLayouts_ = {}, ::System::Collections::Generic::List_1<::UnityEngine::InputSystem::Layouts::InputControlLayout::Collection::LayoutMatcher>* layoutMatchers_ = {}) noexcept : layoutTypes{layoutTypes_}, layoutStrings{layoutStrings_}, layoutBuilders{layoutBuilders_}, baseLayoutTable{baseLayoutTable_}, layoutOverrides{layoutOverrides_}, layoutOverrideNames{layoutOverrideNames_}, precompiledLayouts{precompiledLayouts_}, layoutMatchers{layoutMatchers_} {}
      // Creating interface conversion operator: operator ::System::ValueType
      operator ::System::ValueType() noexcept {
        return *reinterpret_cast<::System::ValueType*>(this);
      }
      // static field const value: static public System.Single kBaseScoreForNonGeneratedLayouts
      static constexpr const float kBaseScoreForNonGeneratedLayouts = 1;
      // Get static field: static public System.Single kBaseScoreForNonGeneratedLayouts
      static float _get_kBaseScoreForNonGeneratedLayouts();
      // Set static field: static public System.Single kBaseScoreForNonGeneratedLayouts
      static void _set_kBaseScoreForNonGeneratedLayouts(float value);
      // Get instance field reference: public System.Collections.Generic.Dictionary`2<UnityEngine.InputSystem.Utilities.InternedString,System.Type> layoutTypes
      [[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::UnityEngine::InputSystem::Utilities::InternedString, ::System::Type*>*& dyn_layoutTypes();
      // Get instance field reference: public System.Collections.Generic.Dictionary`2<UnityEngine.InputSystem.Utilities.InternedString,System.String> layoutStrings
      [[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::UnityEngine::InputSystem::Utilities::InternedString, ::StringW>*& dyn_layoutStrings();
      // Get instance field reference: public System.Collections.Generic.Dictionary`2<UnityEngine.InputSystem.Utilities.InternedString,System.Func`1<UnityEngine.InputSystem.Layouts.InputControlLayout>> layoutBuilders
      [[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::UnityEngine::InputSystem::Utilities::InternedString, ::System::Func_1<::UnityEngine::InputSystem::Layouts::InputControlLayout*>*>*& dyn_layoutBuilders();
      // Get instance field reference: public System.Collections.Generic.Dictionary`2<UnityEngine.InputSystem.Utilities.InternedString,UnityEngine.InputSystem.Utilities.InternedString> baseLayoutTable
      [[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::UnityEngine::InputSystem::Utilities::InternedString, ::UnityEngine::InputSystem::Utilities::InternedString>*& dyn_baseLayoutTable();
      // Get instance field reference: public System.Collections.Generic.Dictionary`2<UnityEngine.InputSystem.Utilities.InternedString,UnityEngine.InputSystem.Utilities.InternedString[]> layoutOverrides
      [[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::UnityEngine::InputSystem::Utilities::InternedString, ::ArrayW<::UnityEngine::InputSystem::Utilities::InternedString>>*& dyn_layoutOverrides();
      // Get instance field reference: public System.Collections.Generic.HashSet`1<UnityEngine.InputSystem.Utilities.InternedString> layoutOverrideNames
      [[deprecated("Use field access instead!")]] ::System::Collections::Generic::HashSet_1<::UnityEngine::InputSystem::Utilities::InternedString>*& dyn_layoutOverrideNames();
      // Get instance field reference: public System.Collections.Generic.Dictionary`2<UnityEngine.InputSystem.Utilities.InternedString,UnityEngine.InputSystem.Layouts.InputControlLayout/Collection/PrecompiledLayout> precompiledLayouts
      [[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::UnityEngine::InputSystem::Utilities::InternedString, ::UnityEngine::InputSystem::Layouts::InputControlLayout::Collection::PrecompiledLayout>*& dyn_precompiledLayouts();
      // Get instance field reference: public System.Collections.Generic.List`1<UnityEngine.InputSystem.Layouts.InputControlLayout/Collection/LayoutMatcher> layoutMatchers
      [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::InputSystem::Layouts::InputControlLayout::Collection::LayoutMatcher>*& dyn_layoutMatchers();
      // public System.Void Allocate()
      // Offset: 0x51632E4
      void Allocate();
      // public UnityEngine.InputSystem.Utilities.InternedString TryFindLayoutForType(System.Type layoutType)
      // Offset: 0x515EE7C
      ::UnityEngine::InputSystem::Utilities::InternedString TryFindLayoutForType(::System::Type* layoutType);
      // public UnityEngine.InputSystem.Utilities.InternedString TryFindMatchingLayout(UnityEngine.InputSystem.Layouts.InputDeviceDescription deviceDescription)
      // Offset: 0x516358C
      ::UnityEngine::InputSystem::Utilities::InternedString TryFindMatchingLayout(::UnityEngine::InputSystem::Layouts::InputDeviceDescription deviceDescription);
      // public System.Boolean HasLayout(UnityEngine.InputSystem.Utilities.InternedString name)
      // Offset: 0x515F02C
      bool HasLayout(::UnityEngine::InputSystem::Utilities::InternedString name);
      // private UnityEngine.InputSystem.Layouts.InputControlLayout TryLoadLayoutInternal(UnityEngine.InputSystem.Utilities.InternedString name)
      // Offset: 0x516371C
      ::UnityEngine::InputSystem::Layouts::InputControlLayout* TryLoadLayoutInternal(::UnityEngine::InputSystem::Utilities::InternedString name);
      // public UnityEngine.InputSystem.Layouts.InputControlLayout TryLoadLayout(UnityEngine.InputSystem.Utilities.InternedString name, System.Collections.Generic.Dictionary`2<UnityEngine.InputSystem.Utilities.InternedString,UnityEngine.InputSystem.Layouts.InputControlLayout> table)
      // Offset: 0x5163910
      ::UnityEngine::InputSystem::Layouts::InputControlLayout* TryLoadLayout(::UnityEngine::InputSystem::Utilities::InternedString name, ::System::Collections::Generic::Dictionary_2<::UnityEngine::InputSystem::Utilities::InternedString, ::UnityEngine::InputSystem::Layouts::InputControlLayout*>* table);
      // public UnityEngine.InputSystem.Utilities.InternedString GetBaseLayoutName(UnityEngine.InputSystem.Utilities.InternedString layoutName)
      // Offset: 0x5163D84
      ::UnityEngine::InputSystem::Utilities::InternedString GetBaseLayoutName(::UnityEngine::InputSystem::Utilities::InternedString layoutName);
      // public UnityEngine.InputSystem.Utilities.InternedString GetRootLayoutName(UnityEngine.InputSystem.Utilities.InternedString layoutName)
      // Offset: 0x5163E10
      ::UnityEngine::InputSystem::Utilities::InternedString GetRootLayoutName(::UnityEngine::InputSystem::Utilities::InternedString layoutName);
      // public System.Boolean ComputeDistanceInInheritanceHierarchy(UnityEngine.InputSystem.Utilities.InternedString firstLayout, UnityEngine.InputSystem.Utilities.InternedString secondLayout, out System.Int32 distance)
      // Offset: 0x5163EA4
      bool ComputeDistanceInInheritanceHierarchy(::UnityEngine::InputSystem::Utilities::InternedString firstLayout, ::UnityEngine::InputSystem::Utilities::InternedString secondLayout, ByRef<int> distance);
      // public UnityEngine.InputSystem.Utilities.InternedString FindLayoutThatIntroducesControl(UnityEngine.InputSystem.InputControl control, UnityEngine.InputSystem.Layouts.InputControlLayout/Cache cache)
      // Offset: 0x5163FD8
      ::UnityEngine::InputSystem::Utilities::InternedString FindLayoutThatIntroducesControl(::UnityEngine::InputSystem::InputControl* control, ::UnityEngine::InputSystem::Layouts::InputControlLayout::Cache cache);
      // public System.Type GetControlTypeForLayout(UnityEngine.InputSystem.Utilities.InternedString layoutName)
      // Offset: 0x51641F4
      ::System::Type* GetControlTypeForLayout(::UnityEngine::InputSystem::Utilities::InternedString layoutName);
      // public System.Boolean ValueTypeIsAssignableFrom(UnityEngine.InputSystem.Utilities.InternedString layoutName, System.Type valueType)
      // Offset: 0x5164340
      bool ValueTypeIsAssignableFrom(::UnityEngine::InputSystem::Utilities::InternedString layoutName, ::System::Type* valueType);
      // public System.Boolean IsGeneratedLayout(UnityEngine.InputSystem.Utilities.InternedString layout)
      // Offset: 0x5164468
      bool IsGeneratedLayout(::UnityEngine::InputSystem::Utilities::InternedString layout);
      // public System.Collections.Generic.IEnumerable`1<UnityEngine.InputSystem.Utilities.InternedString> GetBaseLayouts(UnityEngine.InputSystem.Utilities.InternedString layout, System.Boolean includeSelf)
      // Offset: 0x51644D0
      ::System::Collections::Generic::IEnumerable_1<::UnityEngine::InputSystem::Utilities::InternedString>* GetBaseLayouts(::UnityEngine::InputSystem::Utilities::InternedString layout, bool includeSelf);
      // public System.Boolean IsBasedOn(UnityEngine.InputSystem.Utilities.InternedString parentLayout, UnityEngine.InputSystem.Utilities.InternedString childLayout)
      // Offset: 0x51645C4
      bool IsBasedOn(::UnityEngine::InputSystem::Utilities::InternedString parentLayout, ::UnityEngine::InputSystem::Utilities::InternedString childLayout);
      // public System.Void AddMatcher(UnityEngine.InputSystem.Utilities.InternedString layout, UnityEngine.InputSystem.Layouts.InputDeviceMatcher matcher)
      // Offset: 0x5164670
      void AddMatcher(::UnityEngine::InputSystem::Utilities::InternedString layout, ::UnityEngine::InputSystem::Layouts::InputDeviceMatcher matcher);
    }; // UnityEngine.InputSystem.Layouts.InputControlLayout/Collection
    #pragma pack(pop)
    static check_size<sizeof(InputControlLayout::Collection), 56 + sizeof(::System::Collections::Generic::List_1<::UnityEngine::InputSystem::Layouts::InputControlLayout::Collection::LayoutMatcher>*)> __UnityEngine_InputSystem_Layouts_InputControlLayout_CollectionSizeCheck;
    static_assert(sizeof(InputControlLayout::Collection) == 0x40);
    // Size: 0x8
    #pragma pack(push, 1)
    // WARNING Layout: Sequential may not be correctly taken into account!
    // Autogenerated type: UnityEngine.InputSystem.Layouts.InputControlLayout/Cache
    // [TokenAttribute] Offset: FFFFFFFF
    struct Cache/*, public ::System::ValueType*/ {
      public:
      public:
      // public System.Collections.Generic.Dictionary`2<UnityEngine.InputSystem.Utilities.InternedString,UnityEngine.InputSystem.Layouts.InputControlLayout> table
      // Size: 0x8
      // Offset: 0x0
      ::System::Collections::Generic::Dictionary_2<::UnityEngine::InputSystem::Utilities::InternedString, ::UnityEngine::InputSystem::Layouts::InputControlLayout*>* table;
      // Field size check
      static_assert(sizeof(::System::Collections::Generic::Dictionary_2<::UnityEngine::InputSystem::Utilities::InternedString, ::UnityEngine::InputSystem::Layouts::InputControlLayout*>*) == 0x8);
      public:
      // Creating value type constructor for type: Cache
      constexpr Cache(::System::Collections::Generic::Dictionary_2<::UnityEngine::InputSystem::Utilities::InternedString, ::UnityEngine::InputSystem::Layouts::InputControlLayout*>* table_ = {}) noexcept : table{table_} {}
      // Creating interface conversion operator: operator ::System::ValueType
      operator ::System::ValueType() noexcept {
        return *reinterpret_cast<::System::ValueType*>(this);
      }
      // Creating conversion operator: operator ::System::Collections::Generic::Dictionary_2<::UnityEngine::InputSystem::Utilities::InternedString, ::UnityEngine::InputSystem::Layouts::InputControlLayout*>*
      constexpr operator ::System::Collections::Generic::Dictionary_2<::UnityEngine::InputSystem::Utilities::InternedString, ::UnityEngine::InputSystem::Layouts::InputControlLayout*>*() const noexcept {
        return table;
      }
      // Get instance field reference: public System.Collections.Generic.Dictionary`2<UnityEngine.InputSystem.Utilities.InternedString,UnityEngine.InputSystem.Layouts.InputControlLayout> table
      [[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::UnityEngine::InputSystem::Utilities::InternedString, ::UnityEngine::InputSystem::Layouts::InputControlLayout*>*& dyn_table();
      // public System.Void Clear()
      // Offset: 0x5164C7C
      void Clear();
      // public UnityEngine.InputSystem.Layouts.InputControlLayout FindOrLoadLayout(System.String name, System.Boolean throwIfNotFound)
      // Offset: 0x51640D0
      ::UnityEngine::InputSystem::Layouts::InputControlLayout* FindOrLoadLayout(::StringW name, bool throwIfNotFound);
    }; // UnityEngine.InputSystem.Layouts.InputControlLayout/Cache
    #pragma pack(pop)
    static check_size<sizeof(InputControlLayout::Cache), 0 + sizeof(::System::Collections::Generic::Dictionary_2<::UnityEngine::InputSystem::Utilities::InternedString, ::UnityEngine::InputSystem::Layouts::InputControlLayout*>*)> __UnityEngine_InputSystem_Layouts_InputControlLayout_CacheSizeCheck;
    static_assert(sizeof(InputControlLayout::Cache) == 0x8);
    public:
    // private UnityEngine.InputSystem.Utilities.InternedString m_Name
    // Size: 0x10
    // Offset: 0x10
    ::UnityEngine::InputSystem::Utilities::InternedString m_Name;
    // Field size check
    static_assert(sizeof(::UnityEngine::InputSystem::Utilities::InternedString) == 0x10);
    // private System.Type m_Type
    // Size: 0x8
    // Offset: 0x20
    ::System::Type* m_Type;
    // Field size check
    static_assert(sizeof(::System::Type*) == 0x8);
    // private UnityEngine.InputSystem.Utilities.InternedString m_Variants
    // Size: 0x10
    // Offset: 0x28
    ::UnityEngine::InputSystem::Utilities::InternedString m_Variants;
    // Field size check
    static_assert(sizeof(::UnityEngine::InputSystem::Utilities::InternedString) == 0x10);
    // private UnityEngine.InputSystem.Utilities.FourCC m_StateFormat
    // Size: 0x4
    // Offset: 0x38
    ::UnityEngine::InputSystem::Utilities::FourCC m_StateFormat;
    // Field size check
    static_assert(sizeof(::UnityEngine::InputSystem::Utilities::FourCC) == 0x4);
    // System.Int32 m_StateSizeInBytes
    // Size: 0x4
    // Offset: 0x3C
    int m_StateSizeInBytes;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // System.Nullable`1<System.Boolean> m_UpdateBeforeRender
    // Size: 0xFFFFFFFF
    // Offset: 0x40
    ::System::Nullable_1<bool> m_UpdateBeforeRender;
    // UnityEngine.InputSystem.Utilities.InlinedArray`1<UnityEngine.InputSystem.Utilities.InternedString> m_BaseLayouts
    // Size: 0xFFFFFFFF
    // Offset: 0x48
    ::UnityEngine::InputSystem::Utilities::InlinedArray_1<::UnityEngine::InputSystem::Utilities::InternedString> m_BaseLayouts;
    // private UnityEngine.InputSystem.Utilities.InlinedArray`1<UnityEngine.InputSystem.Utilities.InternedString> m_AppliedOverrides
    // Size: 0xFFFFFFFF
    // Offset: 0x68
    ::UnityEngine::InputSystem::Utilities::InlinedArray_1<::UnityEngine::InputSystem::Utilities::InternedString> m_AppliedOverrides;
    // private UnityEngine.InputSystem.Utilities.InternedString[] m_CommonUsages
    // Size: 0x8
    // Offset: 0x88
    ::ArrayW<::UnityEngine::InputSystem::Utilities::InternedString> m_CommonUsages;
    // Field size check
    static_assert(sizeof(::ArrayW<::UnityEngine::InputSystem::Utilities::InternedString>) == 0x8);
    // UnityEngine.InputSystem.Layouts.InputControlLayout/ControlItem[] m_Controls
    // Size: 0x8
    // Offset: 0x90
    ::ArrayW<::UnityEngine::InputSystem::Layouts::InputControlLayout::ControlItem> m_Controls;
    // Field size check
    static_assert(sizeof(::ArrayW<::UnityEngine::InputSystem::Layouts::InputControlLayout::ControlItem>) == 0x8);
    // System.String m_DisplayName
    // Size: 0x8
    // Offset: 0x98
    ::StringW m_DisplayName;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private System.String m_Description
    // Size: 0x8
    // Offset: 0xA0
    ::StringW m_Description;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private UnityEngine.InputSystem.Layouts.InputControlLayout/Flags m_Flags
    // Size: 0x4
    // Offset: 0xA8
    ::UnityEngine::InputSystem::Layouts::InputControlLayout::Flags m_Flags;
    // Field size check
    static_assert(sizeof(::UnityEngine::InputSystem::Layouts::InputControlLayout::Flags) == 0x4);
    public:
    // Get static field: static private UnityEngine.InputSystem.Utilities.InternedString s_DefaultVariant
    static ::UnityEngine::InputSystem::Utilities::InternedString _get_s_DefaultVariant();
    // Set static field: static private UnityEngine.InputSystem.Utilities.InternedString s_DefaultVariant
    static void _set_s_DefaultVariant(::UnityEngine::InputSystem::Utilities::InternedString value);
    // static field const value: static public System.String VariantSeparator
    static constexpr const char* VariantSeparator = ";";
    // Get static field: static public System.String VariantSeparator
    static ::StringW _get_VariantSeparator();
    // Set static field: static public System.String VariantSeparator
    static void _set_VariantSeparator(::StringW value);
    // Get static field: static UnityEngine.InputSystem.Layouts.InputControlLayout/Collection s_Layouts
    static ::UnityEngine::InputSystem::Layouts::InputControlLayout::Collection _get_s_Layouts();
    // Set static field: static UnityEngine.InputSystem.Layouts.InputControlLayout/Collection s_Layouts
    static void _set_s_Layouts(::UnityEngine::InputSystem::Layouts::InputControlLayout::Collection value);
    // Get static field: static UnityEngine.InputSystem.Layouts.InputControlLayout/Cache s_CacheInstance
    static ::UnityEngine::InputSystem::Layouts::InputControlLayout::Cache _get_s_CacheInstance();
    // Set static field: static UnityEngine.InputSystem.Layouts.InputControlLayout/Cache s_CacheInstance
    static void _set_s_CacheInstance(::UnityEngine::InputSystem::Layouts::InputControlLayout::Cache value);
    // Get static field: static System.Int32 s_CacheInstanceRef
    static int _get_s_CacheInstanceRef();
    // Set static field: static System.Int32 s_CacheInstanceRef
    static void _set_s_CacheInstanceRef(int value);
    // Get instance field reference: private UnityEngine.InputSystem.Utilities.InternedString m_Name
    [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Utilities::InternedString& dyn_m_Name();
    // Get instance field reference: private System.Type m_Type
    [[deprecated("Use field access instead!")]] ::System::Type*& dyn_m_Type();
    // Get instance field reference: private UnityEngine.InputSystem.Utilities.InternedString m_Variants
    [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Utilities::InternedString& dyn_m_Variants();
    // Get instance field reference: private UnityEngine.InputSystem.Utilities.FourCC m_StateFormat
    [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Utilities::FourCC& dyn_m_StateFormat();
    // Get instance field reference: System.Int32 m_StateSizeInBytes
    [[deprecated("Use field access instead!")]] int& dyn_m_StateSizeInBytes();
    // Get instance field reference: System.Nullable`1<System.Boolean> m_UpdateBeforeRender
    [[deprecated("Use field access instead!")]] ::System::Nullable_1<bool>& dyn_m_UpdateBeforeRender();
    // Get instance field reference: UnityEngine.InputSystem.Utilities.InlinedArray`1<UnityEngine.InputSystem.Utilities.InternedString> m_BaseLayouts
    [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Utilities::InlinedArray_1<::UnityEngine::InputSystem::Utilities::InternedString>& dyn_m_BaseLayouts();
    // Get instance field reference: private UnityEngine.InputSystem.Utilities.InlinedArray`1<UnityEngine.InputSystem.Utilities.InternedString> m_AppliedOverrides
    [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Utilities::InlinedArray_1<::UnityEngine::InputSystem::Utilities::InternedString>& dyn_m_AppliedOverrides();
    // Get instance field reference: private UnityEngine.InputSystem.Utilities.InternedString[] m_CommonUsages
    [[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::InputSystem::Utilities::InternedString>& dyn_m_CommonUsages();
    // Get instance field reference: UnityEngine.InputSystem.Layouts.InputControlLayout/ControlItem[] m_Controls
    [[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::InputSystem::Layouts::InputControlLayout::ControlItem>& dyn_m_Controls();
    // Get instance field reference: System.String m_DisplayName
    [[deprecated("Use field access instead!")]] ::StringW& dyn_m_DisplayName();
    // Get instance field reference: private System.String m_Description
    [[deprecated("Use field access instead!")]] ::StringW& dyn_m_Description();
    // Get instance field reference: private UnityEngine.InputSystem.Layouts.InputControlLayout/Flags m_Flags
    [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Layouts::InputControlLayout::Flags& dyn_m_Flags();
    // static public UnityEngine.InputSystem.Utilities.InternedString get_DefaultVariant()
    // Offset: 0x515BB58
    static ::UnityEngine::InputSystem::Utilities::InternedString get_DefaultVariant();
    // public UnityEngine.InputSystem.Utilities.InternedString get_name()
    // Offset: 0x515BBB0
    ::UnityEngine::InputSystem::Utilities::InternedString get_name();
    // public System.String get_displayName()
    // Offset: 0x515BBBC
    ::StringW get_displayName();
    // public System.Type get_type()
    // Offset: 0x515BBDC
    ::System::Type* get_type();
    // public UnityEngine.InputSystem.Utilities.InternedString get_variants()
    // Offset: 0x515BBE4
    ::UnityEngine::InputSystem::Utilities::InternedString get_variants();
    // public UnityEngine.InputSystem.Utilities.FourCC get_stateFormat()
    // Offset: 0x515BBF0
    ::UnityEngine::InputSystem::Utilities::FourCC get_stateFormat();
    // public System.Int32 get_stateSizeInBytes()
    // Offset: 0x515BBF8
    int get_stateSizeInBytes();
    // public System.Collections.Generic.IEnumerable`1<UnityEngine.InputSystem.Utilities.InternedString> get_baseLayouts()
    // Offset: 0x515BC00
    ::System::Collections::Generic::IEnumerable_1<::UnityEngine::InputSystem::Utilities::InternedString>* get_baseLayouts();
    // public System.Collections.Generic.IEnumerable`1<UnityEngine.InputSystem.Utilities.InternedString> get_appliedOverrides()
    // Offset: 0x515BC60
    ::System::Collections::Generic::IEnumerable_1<::UnityEngine::InputSystem::Utilities::InternedString>* get_appliedOverrides();
    // public UnityEngine.InputSystem.Utilities.ReadOnlyArray`1<UnityEngine.InputSystem.Utilities.InternedString> get_commonUsages()
    // Offset: 0x515BCC0
    ::UnityEngine::InputSystem::Utilities::ReadOnlyArray_1<::UnityEngine::InputSystem::Utilities::InternedString> get_commonUsages();
    // public UnityEngine.InputSystem.Utilities.ReadOnlyArray`1<UnityEngine.InputSystem.Layouts.InputControlLayout/ControlItem> get_controls()
    // Offset: 0x515BD20
    ::UnityEngine::InputSystem::Utilities::ReadOnlyArray_1<::UnityEngine::InputSystem::Layouts::InputControlLayout::ControlItem> get_controls();
    // public System.Boolean get_updateBeforeRender()
    // Offset: 0x515BD80
    bool get_updateBeforeRender();
    // public System.Boolean get_isDeviceLayout()
    // Offset: 0x515BDBC
    bool get_isDeviceLayout();
    // public System.Boolean get_isControlLayout()
    // Offset: 0x515BE50
    bool get_isControlLayout();
    // public System.Boolean get_isOverride()
    // Offset: 0x515BE68
    bool get_isOverride();
    // System.Void set_isOverride(System.Boolean value)
    // Offset: 0x515BE74
    void set_isOverride(bool value);
    // public System.Boolean get_isGenericTypeOfDevice()
    // Offset: 0x515BE94
    bool get_isGenericTypeOfDevice();
    // System.Void set_isGenericTypeOfDevice(System.Boolean value)
    // Offset: 0x515BEA0
    void set_isGenericTypeOfDevice(bool value);
    // public System.Boolean get_hideInUI()
    // Offset: 0x515BEB0
    bool get_hideInUI();
    // System.Void set_hideInUI(System.Boolean value)
    // Offset: 0x515BEBC
    void set_hideInUI(bool value);
    // public System.Boolean get_isNoisy()
    // Offset: 0x515BEDC
    bool get_isNoisy();
    // System.Void set_isNoisy(System.Boolean value)
    // Offset: 0x515BEE8
    void set_isNoisy(bool value);
    // public System.Nullable`1<System.Boolean> get_canRunInBackground()
    // Offset: 0x515BF08
    ::System::Nullable_1<bool> get_canRunInBackground();
    // System.Void set_canRunInBackground(System.Nullable`1<System.Boolean> value)
    // Offset: 0x515BF70
    void set_canRunInBackground(::System::Nullable_1<bool> value);
    // public UnityEngine.InputSystem.Layouts.InputControlLayout/ControlItem get_Item(System.String path)
    // Offset: 0x515C00C
    ::UnityEngine::InputSystem::Layouts::InputControlLayout::ControlItem get_Item(::StringW path);
    // public System.Nullable`1<UnityEngine.InputSystem.Layouts.InputControlLayout/ControlItem> FindControl(UnityEngine.InputSystem.Utilities.InternedString path)
    // Offset: 0x515C184
    ::System::Nullable_1<::UnityEngine::InputSystem::Layouts::InputControlLayout::ControlItem> FindControl(::UnityEngine::InputSystem::Utilities::InternedString path);
    // public System.Nullable`1<UnityEngine.InputSystem.Layouts.InputControlLayout/ControlItem> FindControlIncludingArrayElements(System.String path, out System.Int32 arrayIndex)
    // Offset: 0x515C314
    ::System::Nullable_1<::UnityEngine::InputSystem::Layouts::InputControlLayout::ControlItem> FindControlIncludingArrayElements(::StringW path, ByRef<int> arrayIndex);
    // public System.Type GetValueType()
    // Offset: 0x515C60C
    ::System::Type* GetValueType();
    // static public UnityEngine.InputSystem.Layouts.InputControlLayout FromType(System.String name, System.Type type)
    // Offset: 0x515C69C
    static ::UnityEngine::InputSystem::Layouts::InputControlLayout* FromType(::StringW name, ::System::Type* type);
    // public System.String ToJson()
    // Offset: 0x515CC50
    ::StringW ToJson();
    // static public UnityEngine.InputSystem.Layouts.InputControlLayout FromJson(System.String json)
    // Offset: 0x515D0A8
    static ::UnityEngine::InputSystem::Layouts::InputControlLayout* FromJson(::StringW json);
    // private System.Void .ctor(System.String name, System.Type type)
    // Offset: 0x515CBE8
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static InputControlLayout* New_ctor(::StringW name, ::System::Type* type) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::Layouts::InputControlLayout::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<InputControlLayout*, creationType>(name, type)));
    }
    // static private System.Void AddControlItems(System.Type type, System.Collections.Generic.List`1<UnityEngine.InputSystem.Layouts.InputControlLayout/ControlItem> controlLayouts, System.String layoutName)
    // Offset: 0x515CB6C
    static void AddControlItems(::System::Type* type, ::System::Collections::Generic::List_1<::UnityEngine::InputSystem::Layouts::InputControlLayout::ControlItem>* controlLayouts, ::StringW layoutName);
    // static private System.Void AddControlItemsFromFields(System.Type type, System.Collections.Generic.List`1<UnityEngine.InputSystem.Layouts.InputControlLayout/ControlItem> controlLayouts, System.String layoutName)
    // Offset: 0x515DAF0
    static void AddControlItemsFromFields(::System::Type* type, ::System::Collections::Generic::List_1<::UnityEngine::InputSystem::Layouts::InputControlLayout::ControlItem>* controlLayouts, ::StringW layoutName);
    // static private System.Void AddControlItemsFromProperties(System.Type type, System.Collections.Generic.List`1<UnityEngine.InputSystem.Layouts.InputControlLayout/ControlItem> controlLayouts, System.String layoutName)
    // Offset: 0x515DB84
    static void AddControlItemsFromProperties(::System::Type* type, ::System::Collections::Generic::List_1<::UnityEngine::InputSystem::Layouts::InputControlLayout::ControlItem>* controlLayouts, ::StringW layoutName);
    // static private System.Void AddControlItemsFromMembers(System.Reflection.MemberInfo[] members, System.Collections.Generic.List`1<UnityEngine.InputSystem.Layouts.InputControlLayout/ControlItem> controlItems, System.String layoutName)
    // Offset: 0x515DC18
    static void AddControlItemsFromMembers(::ArrayW<::System::Reflection::MemberInfo*> members, ::System::Collections::Generic::List_1<::UnityEngine::InputSystem::Layouts::InputControlLayout::ControlItem>* controlItems, ::StringW layoutName);
    // static private System.Void AddControlItemsFromMember(System.Reflection.MemberInfo member, UnityEngine.InputSystem.Layouts.InputControlAttribute[] attributes, System.Collections.Generic.List`1<UnityEngine.InputSystem.Layouts.InputControlLayout/ControlItem> controlItems)
    // Offset: 0x515E134
    static void AddControlItemsFromMember(::System::Reflection::MemberInfo* member, ::ArrayW<::UnityEngine::InputSystem::Layouts::InputControlAttribute*> attributes, ::System::Collections::Generic::List_1<::UnityEngine::InputSystem::Layouts::InputControlLayout::ControlItem>* controlItems);
    // static private UnityEngine.InputSystem.Layouts.InputControlLayout/ControlItem CreateControlItemFromMember(System.Reflection.MemberInfo member, UnityEngine.InputSystem.Layouts.InputControlAttribute attribute)
    // Offset: 0x515E3C4
    static ::UnityEngine::InputSystem::Layouts::InputControlLayout::ControlItem CreateControlItemFromMember(::System::Reflection::MemberInfo* member, ::UnityEngine::InputSystem::Layouts::InputControlAttribute* attribute);
    // static private System.String InferLayoutFromValueType(System.Type type)
    // Offset: 0x515EC38
    static ::StringW InferLayoutFromValueType(::System::Type* type);
    // public System.Void MergeLayout(UnityEngine.InputSystem.Layouts.InputControlLayout other)
    // Offset: 0x515F108
    void MergeLayout(::UnityEngine::InputSystem::Layouts::InputControlLayout* other);
    // static private System.Collections.Generic.Dictionary`2<System.String,UnityEngine.InputSystem.Layouts.InputControlLayout/ControlItem> CreateLookupTableForControls(UnityEngine.InputSystem.Layouts.InputControlLayout/ControlItem[] controlItems, System.Collections.Generic.List`1<System.String> variants)
    // Offset: 0x51603B4
    static ::System::Collections::Generic::Dictionary_2<::StringW, ::UnityEngine::InputSystem::Layouts::InputControlLayout::ControlItem>* CreateLookupTableForControls(::ArrayW<::UnityEngine::InputSystem::Layouts::InputControlLayout::ControlItem> controlItems, ::System::Collections::Generic::List_1<::StringW>* variants);
    // static System.Boolean VariantsMatch(UnityEngine.InputSystem.Utilities.InternedString expected, UnityEngine.InputSystem.Utilities.InternedString actual)
    // Offset: 0x5160D24
    static bool VariantsMatch(::UnityEngine::InputSystem::Utilities::InternedString expected, ::UnityEngine::InputSystem::Utilities::InternedString actual);
    // static System.Boolean VariantsMatch(System.String expected, System.String actual)
    // Offset: 0x5160BF8
    static bool VariantsMatch(::StringW expected, ::StringW actual);
    // static System.Void ParseHeaderFieldsFromJson(System.String json, out UnityEngine.InputSystem.Utilities.InternedString name, out UnityEngine.InputSystem.Utilities.InlinedArray`1<UnityEngine.InputSystem.Utilities.InternedString> baseLayouts, out UnityEngine.InputSystem.Layouts.InputDeviceMatcher deviceMatcher)
    // Offset: 0x5160D88
    static void ParseHeaderFieldsFromJson(::StringW json, ByRef<::UnityEngine::InputSystem::Utilities::InternedString> name, ByRef<::UnityEngine::InputSystem::Utilities::InlinedArray_1<::UnityEngine::InputSystem::Utilities::InternedString>> baseLayouts, ByRef<::UnityEngine::InputSystem::Layouts::InputDeviceMatcher> deviceMatcher);
    // static UnityEngine.InputSystem.Layouts.InputControlLayout/Cache get_cache()
    // Offset: 0x5160F24
    static ::UnityEngine::InputSystem::Layouts::InputControlLayout::Cache get_cache();
    // static UnityEngine.InputSystem.Layouts.InputControlLayout/CacheRefInstance CacheRef()
    // Offset: 0x5160F7C
    static ::UnityEngine::InputSystem::Layouts::InputControlLayout::CacheRefInstance CacheRef();
    // static private System.Void .cctor()
    // Offset: 0x5160FE0
    static void _cctor();
    // private System.Boolean <MergeLayout>b__77_0(UnityEngine.InputSystem.Layouts.InputControlLayout/ControlItem x)
    // Offset: 0x516106C
    bool $MergeLayout$b__77_0(::UnityEngine::InputSystem::Layouts::InputControlLayout::ControlItem x);
  }; // UnityEngine.InputSystem.Layouts.InputControlLayout
  // WARNING Not writing size check since size may be invalid!
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::InputSystem::Layouts::InputControlLayout::Cache, "UnityEngine.InputSystem.Layouts", "InputControlLayout/Cache");
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::InputSystem::Layouts::InputControlLayout::Collection, "UnityEngine.InputSystem.Layouts", "InputControlLayout/Collection");
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::InputSystem::Layouts::InputControlLayout::Collection::PrecompiledLayout, "UnityEngine.InputSystem.Layouts", "InputControlLayout/Collection/PrecompiledLayout");
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::InputSystem::Layouts::InputControlLayout::Collection::LayoutMatcher, "UnityEngine.InputSystem.Layouts", "InputControlLayout/Collection/LayoutMatcher");
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::InputSystem::Layouts::InputControlLayout::Flags, "UnityEngine.InputSystem.Layouts", "InputControlLayout/Flags");
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::InputSystem::Layouts::InputControlLayout::ControlItem, "UnityEngine.InputSystem.Layouts", "InputControlLayout/ControlItem");
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::InputSystem::Layouts::InputControlLayout::ControlItem::Flags, "UnityEngine.InputSystem.Layouts", "InputControlLayout/ControlItem/Flags");
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::InputSystem::Layouts::InputControlLayout::get_DefaultVariant
// Il2CppName: get_DefaultVariant
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::Utilities::InternedString (*)()>(&UnityEngine::InputSystem::Layouts::InputControlLayout::get_DefaultVariant)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Layouts::InputControlLayout*), "get_DefaultVariant", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Layouts::InputControlLayout::get_name
// Il2CppName: get_name
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::Utilities::InternedString (UnityEngine::InputSystem::Layouts::InputControlLayout::*)()>(&UnityEngine::InputSystem::Layouts::InputControlLayout::get_name)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Layouts::InputControlLayout*), "get_name", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Layouts::InputControlLayout::get_displayName
// Il2CppName: get_displayName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (UnityEngine::InputSystem::Layouts::InputControlLayout::*)()>(&UnityEngine::InputSystem::Layouts::InputControlLayout::get_displayName)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Layouts::InputControlLayout*), "get_displayName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Layouts::InputControlLayout::get_type
// Il2CppName: get_type
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Type* (UnityEngine::InputSystem::Layouts::InputControlLayout::*)()>(&UnityEngine::InputSystem::Layouts::InputControlLayout::get_type)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Layouts::InputControlLayout*), "get_type", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Layouts::InputControlLayout::get_variants
// Il2CppName: get_variants
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::Utilities::InternedString (UnityEngine::InputSystem::Layouts::InputControlLayout::*)()>(&UnityEngine::InputSystem::Layouts::InputControlLayout::get_variants)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Layouts::InputControlLayout*), "get_variants", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Layouts::InputControlLayout::get_stateFormat
// Il2CppName: get_stateFormat
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::Utilities::FourCC (UnityEngine::InputSystem::Layouts::InputControlLayout::*)()>(&UnityEngine::InputSystem::Layouts::InputControlLayout::get_stateFormat)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Layouts::InputControlLayout*), "get_stateFormat", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Layouts::InputControlLayout::get_stateSizeInBytes
// Il2CppName: get_stateSizeInBytes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::InputSystem::Layouts::InputControlLayout::*)()>(&UnityEngine::InputSystem::Layouts::InputControlLayout::get_stateSizeInBytes)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Layouts::InputControlLayout*), "get_stateSizeInBytes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Layouts::InputControlLayout::get_baseLayouts
// Il2CppName: get_baseLayouts
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::IEnumerable_1<::UnityEngine::InputSystem::Utilities::InternedString>* (UnityEngine::InputSystem::Layouts::InputControlLayout::*)()>(&UnityEngine::InputSystem::Layouts::InputControlLayout::get_baseLayouts)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Layouts::InputControlLayout*), "get_baseLayouts", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Layouts::InputControlLayout::get_appliedOverrides
// Il2CppName: get_appliedOverrides
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::IEnumerable_1<::UnityEngine::InputSystem::Utilities::InternedString>* (UnityEngine::InputSystem::Layouts::InputControlLayout::*)()>(&UnityEngine::InputSystem::Layouts::InputControlLayout::get_appliedOverrides)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Layouts::InputControlLayout*), "get_appliedOverrides", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Layouts::InputControlLayout::get_commonUsages
// Il2CppName: get_commonUsages
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::Utilities::ReadOnlyArray_1<::UnityEngine::InputSystem::Utilities::InternedString> (UnityEngine::InputSystem::Layouts::InputControlLayout::*)()>(&UnityEngine::InputSystem::Layouts::InputControlLayout::get_commonUsages)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Layouts::InputControlLayout*), "get_commonUsages", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Layouts::InputControlLayout::get_controls
// Il2CppName: get_controls
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::Utilities::ReadOnlyArray_1<::UnityEngine::InputSystem::Layouts::InputControlLayout::ControlItem> (UnityEngine::InputSystem::Layouts::InputControlLayout::*)()>(&UnityEngine::InputSystem::Layouts::InputControlLayout::get_controls)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Layouts::InputControlLayout*), "get_controls", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Layouts::InputControlLayout::get_updateBeforeRender
// Il2CppName: get_updateBeforeRender
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::InputSystem::Layouts::InputControlLayout::*)()>(&UnityEngine::InputSystem::Layouts::InputControlLayout::get_updateBeforeRender)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Layouts::InputControlLayout*), "get_updateBeforeRender", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Layouts::InputControlLayout::get_isDeviceLayout
// Il2CppName: get_isDeviceLayout
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::InputSystem::Layouts::InputControlLayout::*)()>(&UnityEngine::InputSystem::Layouts::InputControlLayout::get_isDeviceLayout)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Layouts::InputControlLayout*), "get_isDeviceLayout", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Layouts::InputControlLayout::get_isControlLayout
// Il2CppName: get_isControlLayout
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::InputSystem::Layouts::InputControlLayout::*)()>(&UnityEngine::InputSystem::Layouts::InputControlLayout::get_isControlLayout)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Layouts::InputControlLayout*), "get_isControlLayout", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Layouts::InputControlLayout::get_isOverride
// Il2CppName: get_isOverride
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::InputSystem::Layouts::InputControlLayout::*)()>(&UnityEngine::InputSystem::Layouts::InputControlLayout::get_isOverride)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Layouts::InputControlLayout*), "get_isOverride", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Layouts::InputControlLayout::set_isOverride
// Il2CppName: set_isOverride
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::Layouts::InputControlLayout::*)(bool)>(&UnityEngine::InputSystem::Layouts::InputControlLayout::set_isOverride)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Layouts::InputControlLayout*), "set_isOverride", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Layouts::InputControlLayout::get_isGenericTypeOfDevice
// Il2CppName: get_isGenericTypeOfDevice
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::InputSystem::Layouts::InputControlLayout::*)()>(&UnityEngine::InputSystem::Layouts::InputControlLayout::get_isGenericTypeOfDevice)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Layouts::InputControlLayout*), "get_isGenericTypeOfDevice", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Layouts::InputControlLayout::set_isGenericTypeOfDevice
// Il2CppName: set_isGenericTypeOfDevice
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::Layouts::InputControlLayout::*)(bool)>(&UnityEngine::InputSystem::Layouts::InputControlLayout::set_isGenericTypeOfDevice)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Layouts::InputControlLayout*), "set_isGenericTypeOfDevice", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Layouts::InputControlLayout::get_hideInUI
// Il2CppName: get_hideInUI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::InputSystem::Layouts::InputControlLayout::*)()>(&UnityEngine::InputSystem::Layouts::InputControlLayout::get_hideInUI)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Layouts::InputControlLayout*), "get_hideInUI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Layouts::InputControlLayout::set_hideInUI
// Il2CppName: set_hideInUI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::Layouts::InputControlLayout::*)(bool)>(&UnityEngine::InputSystem::Layouts::InputControlLayout::set_hideInUI)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Layouts::InputControlLayout*), "set_hideInUI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Layouts::InputControlLayout::get_isNoisy
// Il2CppName: get_isNoisy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::InputSystem::Layouts::InputControlLayout::*)()>(&UnityEngine::InputSystem::Layouts::InputControlLayout::get_isNoisy)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Layouts::InputControlLayout*), "get_isNoisy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Layouts::InputControlLayout::set_isNoisy
// Il2CppName: set_isNoisy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::Layouts::InputControlLayout::*)(bool)>(&UnityEngine::InputSystem::Layouts::InputControlLayout::set_isNoisy)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Layouts::InputControlLayout*), "set_isNoisy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Layouts::InputControlLayout::get_canRunInBackground
// Il2CppName: get_canRunInBackground
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Nullable_1<bool> (UnityEngine::InputSystem::Layouts::InputControlLayout::*)()>(&UnityEngine::InputSystem::Layouts::InputControlLayout::get_canRunInBackground)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Layouts::InputControlLayout*), "get_canRunInBackground", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Layouts::InputControlLayout::set_canRunInBackground
// Il2CppName: set_canRunInBackground
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::Layouts::InputControlLayout::*)(::System::Nullable_1<bool>)>(&UnityEngine::InputSystem::Layouts::InputControlLayout::set_canRunInBackground)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Nullable`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Boolean")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Layouts::InputControlLayout*), "set_canRunInBackground", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Layouts::InputControlLayout::get_Item
// Il2CppName: get_Item
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::Layouts::InputControlLayout::ControlItem (UnityEngine::InputSystem::Layouts::InputControlLayout::*)(::StringW)>(&UnityEngine::InputSystem::Layouts::InputControlLayout::get_Item)> {
  static const MethodInfo* get() {
    static auto* path = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Layouts::InputControlLayout*), "get_Item", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{path});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Layouts::InputControlLayout::FindControl
// Il2CppName: FindControl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Nullable_1<::UnityEngine::InputSystem::Layouts::InputControlLayout::ControlItem> (UnityEngine::InputSystem::Layouts::InputControlLayout::*)(::UnityEngine::InputSystem::Utilities::InternedString)>(&UnityEngine::InputSystem::Layouts::InputControlLayout::FindControl)> {
  static const MethodInfo* get() {
    static auto* path = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem.Utilities", "InternedString")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Layouts::InputControlLayout*), "FindControl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{path});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Layouts::InputControlLayout::FindControlIncludingArrayElements
// Il2CppName: FindControlIncludingArrayElements
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Nullable_1<::UnityEngine::InputSystem::Layouts::InputControlLayout::ControlItem> (UnityEngine::InputSystem::Layouts::InputControlLayout::*)(::StringW, ByRef<int>)>(&UnityEngine::InputSystem::Layouts::InputControlLayout::FindControlIncludingArrayElements)> {
  static const MethodInfo* get() {
    static auto* path = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* arrayIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Layouts::InputControlLayout*), "FindControlIncludingArrayElements", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{path, arrayIndex});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Layouts::InputControlLayout::GetValueType
// Il2CppName: GetValueType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Type* (UnityEngine::InputSystem::Layouts::InputControlLayout::*)()>(&UnityEngine::InputSystem::Layouts::InputControlLayout::GetValueType)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Layouts::InputControlLayout*), "GetValueType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Layouts::InputControlLayout::FromType
// Il2CppName: FromType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::Layouts::InputControlLayout* (*)(::StringW, ::System::Type*)>(&UnityEngine::InputSystem::Layouts::InputControlLayout::FromType)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* type = &::il2cpp_utils::GetClassFromName("System", "Type")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Layouts::InputControlLayout*), "FromType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name, type});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Layouts::InputControlLayout::ToJson
// Il2CppName: ToJson
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (UnityEngine::InputSystem::Layouts::InputControlLayout::*)()>(&UnityEngine::InputSystem::Layouts::InputControlLayout::ToJson)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Layouts::InputControlLayout*), "ToJson", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Layouts::InputControlLayout::FromJson
// Il2CppName: FromJson
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::Layouts::InputControlLayout* (*)(::StringW)>(&UnityEngine::InputSystem::Layouts::InputControlLayout::FromJson)> {
  static const MethodInfo* get() {
    static auto* json = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Layouts::InputControlLayout*), "FromJson", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{json});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Layouts::InputControlLayout::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::InputSystem::Layouts::InputControlLayout::AddControlItems
// Il2CppName: AddControlItems
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::Type*, ::System::Collections::Generic::List_1<::UnityEngine::InputSystem::Layouts::InputControlLayout::ControlItem>*, ::StringW)>(&UnityEngine::InputSystem::Layouts::InputControlLayout::AddControlItems)> {
  static const MethodInfo* get() {
    static auto* type = &::il2cpp_utils::GetClassFromName("System", "Type")->byval_arg;
    static auto* controlLayouts = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem.Layouts", "InputControlLayout/ControlItem")})->byval_arg;
    static auto* layoutName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Layouts::InputControlLayout*), "AddControlItems", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{type, controlLayouts, layoutName});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Layouts::InputControlLayout::AddControlItemsFromFields
// Il2CppName: AddControlItemsFromFields
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::Type*, ::System::Collections::Generic::List_1<::UnityEngine::InputSystem::Layouts::InputControlLayout::ControlItem>*, ::StringW)>(&UnityEngine::InputSystem::Layouts::InputControlLayout::AddControlItemsFromFields)> {
  static const MethodInfo* get() {
    static auto* type = &::il2cpp_utils::GetClassFromName("System", "Type")->byval_arg;
    static auto* controlLayouts = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem.Layouts", "InputControlLayout/ControlItem")})->byval_arg;
    static auto* layoutName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Layouts::InputControlLayout*), "AddControlItemsFromFields", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{type, controlLayouts, layoutName});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Layouts::InputControlLayout::AddControlItemsFromProperties
// Il2CppName: AddControlItemsFromProperties
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::Type*, ::System::Collections::Generic::List_1<::UnityEngine::InputSystem::Layouts::InputControlLayout::ControlItem>*, ::StringW)>(&UnityEngine::InputSystem::Layouts::InputControlLayout::AddControlItemsFromProperties)> {
  static const MethodInfo* get() {
    static auto* type = &::il2cpp_utils::GetClassFromName("System", "Type")->byval_arg;
    static auto* controlLayouts = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem.Layouts", "InputControlLayout/ControlItem")})->byval_arg;
    static auto* layoutName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Layouts::InputControlLayout*), "AddControlItemsFromProperties", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{type, controlLayouts, layoutName});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Layouts::InputControlLayout::AddControlItemsFromMembers
// Il2CppName: AddControlItemsFromMembers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::ArrayW<::System::Reflection::MemberInfo*>, ::System::Collections::Generic::List_1<::UnityEngine::InputSystem::Layouts::InputControlLayout::ControlItem>*, ::StringW)>(&UnityEngine::InputSystem::Layouts::InputControlLayout::AddControlItemsFromMembers)> {
  static const MethodInfo* get() {
    static auto* members = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System.Reflection", "MemberInfo"), 1)->byval_arg;
    static auto* controlItems = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem.Layouts", "InputControlLayout/ControlItem")})->byval_arg;
    static auto* layoutName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Layouts::InputControlLayout*), "AddControlItemsFromMembers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{members, controlItems, layoutName});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Layouts::InputControlLayout::AddControlItemsFromMember
// Il2CppName: AddControlItemsFromMember
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::Reflection::MemberInfo*, ::ArrayW<::UnityEngine::InputSystem::Layouts::InputControlAttribute*>, ::System::Collections::Generic::List_1<::UnityEngine::InputSystem::Layouts::InputControlLayout::ControlItem>*)>(&UnityEngine::InputSystem::Layouts::InputControlLayout::AddControlItemsFromMember)> {
  static const MethodInfo* get() {
    static auto* member = &::il2cpp_utils::GetClassFromName("System.Reflection", "MemberInfo")->byval_arg;
    static auto* attributes = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem.Layouts", "InputControlAttribute"), 1)->byval_arg;
    static auto* controlItems = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem.Layouts", "InputControlLayout/ControlItem")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Layouts::InputControlLayout*), "AddControlItemsFromMember", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{member, attributes, controlItems});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Layouts::InputControlLayout::CreateControlItemFromMember
// Il2CppName: CreateControlItemFromMember
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::Layouts::InputControlLayout::ControlItem (*)(::System::Reflection::MemberInfo*, ::UnityEngine::InputSystem::Layouts::InputControlAttribute*)>(&UnityEngine::InputSystem::Layouts::InputControlLayout::CreateControlItemFromMember)> {
  static const MethodInfo* get() {
    static auto* member = &::il2cpp_utils::GetClassFromName("System.Reflection", "MemberInfo")->byval_arg;
    static auto* attribute = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem.Layouts", "InputControlAttribute")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Layouts::InputControlLayout*), "CreateControlItemFromMember", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{member, attribute});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Layouts::InputControlLayout::InferLayoutFromValueType
// Il2CppName: InferLayoutFromValueType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::Type*)>(&UnityEngine::InputSystem::Layouts::InputControlLayout::InferLayoutFromValueType)> {
  static const MethodInfo* get() {
    static auto* type = &::il2cpp_utils::GetClassFromName("System", "Type")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Layouts::InputControlLayout*), "InferLayoutFromValueType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{type});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Layouts::InputControlLayout::MergeLayout
// Il2CppName: MergeLayout
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::Layouts::InputControlLayout::*)(::UnityEngine::InputSystem::Layouts::InputControlLayout*)>(&UnityEngine::InputSystem::Layouts::InputControlLayout::MergeLayout)> {
  static const MethodInfo* get() {
    static auto* other = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem.Layouts", "InputControlLayout")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Layouts::InputControlLayout*), "MergeLayout", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{other});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Layouts::InputControlLayout::CreateLookupTableForControls
// Il2CppName: CreateLookupTableForControls
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::Dictionary_2<::StringW, ::UnityEngine::InputSystem::Layouts::InputControlLayout::ControlItem>* (*)(::ArrayW<::UnityEngine::InputSystem::Layouts::InputControlLayout::ControlItem>, ::System::Collections::Generic::List_1<::StringW>*)>(&UnityEngine::InputSystem::Layouts::InputControlLayout::CreateLookupTableForControls)> {
  static const MethodInfo* get() {
    static auto* controlItems = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem.Layouts", "InputControlLayout/ControlItem"), 1)->byval_arg;
    static auto* variants = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Layouts::InputControlLayout*), "CreateLookupTableForControls", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{controlItems, variants});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Layouts::InputControlLayout::VariantsMatch
// Il2CppName: VariantsMatch
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::UnityEngine::InputSystem::Utilities::InternedString, ::UnityEngine::InputSystem::Utilities::InternedString)>(&UnityEngine::InputSystem::Layouts::InputControlLayout::VariantsMatch)> {
  static const MethodInfo* get() {
    static auto* expected = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem.Utilities", "InternedString")->byval_arg;
    static auto* actual = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem.Utilities", "InternedString")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Layouts::InputControlLayout*), "VariantsMatch", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{expected, actual});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Layouts::InputControlLayout::VariantsMatch
// Il2CppName: VariantsMatch
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::StringW, ::StringW)>(&UnityEngine::InputSystem::Layouts::InputControlLayout::VariantsMatch)> {
  static const MethodInfo* get() {
    static auto* expected = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* actual = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Layouts::InputControlLayout*), "VariantsMatch", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{expected, actual});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Layouts::InputControlLayout::ParseHeaderFieldsFromJson
// Il2CppName: ParseHeaderFieldsFromJson
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::StringW, ByRef<::UnityEngine::InputSystem::Utilities::InternedString>, ByRef<::UnityEngine::InputSystem::Utilities::InlinedArray_1<::UnityEngine::InputSystem::Utilities::InternedString>>, ByRef<::UnityEngine::InputSystem::Layouts::InputDeviceMatcher>)>(&UnityEngine::InputSystem::Layouts::InputControlLayout::ParseHeaderFieldsFromJson)> {
  static const MethodInfo* get() {
    static auto* json = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* name = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem.Utilities", "InternedString")->this_arg;
    static auto* baseLayouts = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem.Utilities", "InlinedArray`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem.Utilities", "InternedString")})->this_arg;
    static auto* deviceMatcher = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem.Layouts", "InputDeviceMatcher")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Layouts::InputControlLayout*), "ParseHeaderFieldsFromJson", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{json, name, baseLayouts, deviceMatcher});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Layouts::InputControlLayout::get_cache
// Il2CppName: get_cache
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::Layouts::InputControlLayout::Cache (*)()>(&UnityEngine::InputSystem::Layouts::InputControlLayout::get_cache)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Layouts::InputControlLayout*), "get_cache", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Layouts::InputControlLayout::CacheRef
// Il2CppName: CacheRef
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::Layouts::InputControlLayout::CacheRefInstance (*)()>(&UnityEngine::InputSystem::Layouts::InputControlLayout::CacheRef)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Layouts::InputControlLayout*), "CacheRef", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Layouts::InputControlLayout::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&UnityEngine::InputSystem::Layouts::InputControlLayout::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Layouts::InputControlLayout*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Layouts::InputControlLayout::$MergeLayout$b__77_0
// Il2CppName: <MergeLayout>b__77_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::InputSystem::Layouts::InputControlLayout::*)(::UnityEngine::InputSystem::Layouts::InputControlLayout::ControlItem)>(&UnityEngine::InputSystem::Layouts::InputControlLayout::$MergeLayout$b__77_0)> {
  static const MethodInfo* get() {
    static auto* x = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem.Layouts", "InputControlLayout/ControlItem")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Layouts::InputControlLayout*), "<MergeLayout>b__77_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{x});
  }
};
