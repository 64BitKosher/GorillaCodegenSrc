// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Including type: System.IDisposable
#include "System/IDisposable.hpp"
// Including type: UnityEngine.InputSystem.Layouts.InputControlLayout/CacheRefInstance
#include "UnityEngine/InputSystem/Layouts/InputControlLayout_CacheRefInstance.hpp"
// Including type: System.UInt32
#include "System/UInt32.hpp"
// Including type: UnityEngine.InputSystem.InputDevice
#include "UnityEngine/InputSystem/InputDevice.hpp"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::InputSystem::Layouts
namespace UnityEngine::InputSystem::Layouts {
  // Skipping declaration: InputDeviceDescription because it is already included!
  // Skipping declaration: InputControlLayout because it is already included!
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: Dictionary`2<TKey, TValue>
  template<typename TKey, typename TValue>
  class Dictionary_2;
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Forward declaring namespace: System::Text
namespace System::Text {
  // Forward declaring type: StringBuilder
  class StringBuilder;
}
// Forward declaring namespace: UnityEngine::InputSystem::Utilities
namespace UnityEngine::InputSystem::Utilities {
  // Skipping declaration: InternedString because it is already included!
}
// Forward declaring namespace: UnityEngine::InputSystem
namespace UnityEngine::InputSystem {
  // Skipping declaration: InputControl because it is already included!
}
// Completed forward declares
// Type namespace: UnityEngine.InputSystem.Layouts
namespace UnityEngine::InputSystem::Layouts {
  // Forward declaring type: InputDeviceBuilder
  struct InputDeviceBuilder;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::InputSystem::Layouts::InputDeviceBuilder, "UnityEngine.InputSystem.Layouts", "InputDeviceBuilder");
// Type namespace: UnityEngine.InputSystem.Layouts
namespace UnityEngine::InputSystem::Layouts {
  // Size: 0x28
  #pragma pack(push, 1)
  // WARNING Layout: Sequential may not be correctly taken into account!
  // Autogenerated type: UnityEngine.InputSystem.Layouts.InputDeviceBuilder
  // [TokenAttribute] Offset: FFFFFFFF
  struct InputDeviceBuilder/*, public ::System::ValueType, public ::System::IDisposable*/ {
    public:
    // Nested type: ::UnityEngine::InputSystem::Layouts::InputDeviceBuilder::RefInstance
    struct RefInstance;
    public:
    // private UnityEngine.InputSystem.InputDevice m_Device
    // Size: 0x8
    // Offset: 0x0
    ::UnityEngine::InputSystem::InputDevice* m_Device;
    // Field size check
    static_assert(sizeof(::UnityEngine::InputSystem::InputDevice*) == 0x8);
    // private UnityEngine.InputSystem.Layouts.InputControlLayout/CacheRefInstance m_LayoutCacheRef
    // Size: 0x1
    // Offset: 0x8
    ::UnityEngine::InputSystem::Layouts::InputControlLayout::CacheRefInstance m_LayoutCacheRef;
    // Field size check
    static_assert(sizeof(::UnityEngine::InputSystem::Layouts::InputControlLayout::CacheRefInstance) == 0x1);
    // Padding between fields: m_LayoutCacheRef and: m_ChildControlOverrides
    char __padding1[0x7] = {};
    // private System.Collections.Generic.Dictionary`2<System.String,UnityEngine.InputSystem.Layouts.InputControlLayout/ControlItem> m_ChildControlOverrides
    // Size: 0x8
    // Offset: 0x10
    ::System::Collections::Generic::Dictionary_2<::StringW, ::UnityEngine::InputSystem::Layouts::InputControlLayout::ControlItem>* m_ChildControlOverrides;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::Dictionary_2<::StringW, ::UnityEngine::InputSystem::Layouts::InputControlLayout::ControlItem>*) == 0x8);
    // private System.Collections.Generic.List`1<System.UInt32> m_StateOffsetToControlMap
    // Size: 0x8
    // Offset: 0x18
    ::System::Collections::Generic::List_1<uint>* m_StateOffsetToControlMap;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<uint>*) == 0x8);
    // private System.Text.StringBuilder m_StringBuilder
    // Size: 0x8
    // Offset: 0x20
    ::System::Text::StringBuilder* m_StringBuilder;
    // Field size check
    static_assert(sizeof(::System::Text::StringBuilder*) == 0x8);
    public:
    // Creating value type constructor for type: InputDeviceBuilder
    constexpr InputDeviceBuilder(::UnityEngine::InputSystem::InputDevice* m_Device_ = {}, ::UnityEngine::InputSystem::Layouts::InputControlLayout::CacheRefInstance m_LayoutCacheRef_ = {}, ::System::Collections::Generic::Dictionary_2<::StringW, ::UnityEngine::InputSystem::Layouts::InputControlLayout::ControlItem>* m_ChildControlOverrides_ = {}, ::System::Collections::Generic::List_1<uint>* m_StateOffsetToControlMap_ = {}, ::System::Text::StringBuilder* m_StringBuilder_ = {}) noexcept : m_Device{m_Device_}, m_LayoutCacheRef{m_LayoutCacheRef_}, m_ChildControlOverrides{m_ChildControlOverrides_}, m_StateOffsetToControlMap{m_StateOffsetToControlMap_}, m_StringBuilder{m_StringBuilder_} {}
    // Creating interface conversion operator: operator ::System::ValueType
    operator ::System::ValueType() noexcept {
      return *reinterpret_cast<::System::ValueType*>(this);
    }
    // Creating interface conversion operator: operator ::System::IDisposable
    operator ::System::IDisposable() noexcept {
      return *reinterpret_cast<::System::IDisposable*>(this);
    }
    // static field const value: static private System.UInt32 kSizeForControlUsingStateFromOtherControl
    static constexpr const uint kSizeForControlUsingStateFromOtherControl = 4294967295u;
    // Get static field: static private System.UInt32 kSizeForControlUsingStateFromOtherControl
    static uint _get_kSizeForControlUsingStateFromOtherControl();
    // Set static field: static private System.UInt32 kSizeForControlUsingStateFromOtherControl
    static void _set_kSizeForControlUsingStateFromOtherControl(uint value);
    // Get static field: static private UnityEngine.InputSystem.Layouts.InputDeviceBuilder s_Instance
    static ::UnityEngine::InputSystem::Layouts::InputDeviceBuilder _get_s_Instance();
    // Set static field: static private UnityEngine.InputSystem.Layouts.InputDeviceBuilder s_Instance
    static void _set_s_Instance(::UnityEngine::InputSystem::Layouts::InputDeviceBuilder value);
    // Get static field: static private System.Int32 s_InstanceRef
    static int _get_s_InstanceRef();
    // Set static field: static private System.Int32 s_InstanceRef
    static void _set_s_InstanceRef(int value);
    // Get instance field reference: private UnityEngine.InputSystem.InputDevice m_Device
    [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::InputDevice*& dyn_m_Device();
    // Get instance field reference: private UnityEngine.InputSystem.Layouts.InputControlLayout/CacheRefInstance m_LayoutCacheRef
    [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Layouts::InputControlLayout::CacheRefInstance& dyn_m_LayoutCacheRef();
    // Get instance field reference: private System.Collections.Generic.Dictionary`2<System.String,UnityEngine.InputSystem.Layouts.InputControlLayout/ControlItem> m_ChildControlOverrides
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::StringW, ::UnityEngine::InputSystem::Layouts::InputControlLayout::ControlItem>*& dyn_m_ChildControlOverrides();
    // Get instance field reference: private System.Collections.Generic.List`1<System.UInt32> m_StateOffsetToControlMap
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<uint>*& dyn_m_StateOffsetToControlMap();
    // Get instance field reference: private System.Text.StringBuilder m_StringBuilder
    [[deprecated("Use field access instead!")]] ::System::Text::StringBuilder*& dyn_m_StringBuilder();
    // public System.Void Setup(UnityEngine.InputSystem.Utilities.InternedString layout, UnityEngine.InputSystem.Utilities.InternedString variants, UnityEngine.InputSystem.Layouts.InputDeviceDescription deviceDescription)
    // Offset: 0x516500C
    void Setup(::UnityEngine::InputSystem::Utilities::InternedString layout, ::UnityEngine::InputSystem::Utilities::InternedString variants, ::UnityEngine::InputSystem::Layouts::InputDeviceDescription deviceDescription);
    // public UnityEngine.InputSystem.InputDevice Finish()
    // Offset: 0x516542C
    ::UnityEngine::InputSystem::InputDevice* Finish();
    // public System.Void Dispose()
    // Offset: 0x51654C4
    void Dispose();
    // private System.Void Reset()
    // Offset: 0x5165444
    void Reset();
    // private UnityEngine.InputSystem.InputControl InstantiateLayout(UnityEngine.InputSystem.Utilities.InternedString layout, UnityEngine.InputSystem.Utilities.InternedString variants, UnityEngine.InputSystem.Utilities.InternedString name, UnityEngine.InputSystem.InputControl parent)
    // Offset: 0x5165178
    ::UnityEngine::InputSystem::InputControl* InstantiateLayout(::UnityEngine::InputSystem::Utilities::InternedString layout, ::UnityEngine::InputSystem::Utilities::InternedString variants, ::UnityEngine::InputSystem::Utilities::InternedString name, ::UnityEngine::InputSystem::InputControl* parent);
    // private UnityEngine.InputSystem.InputControl InstantiateLayout(UnityEngine.InputSystem.Layouts.InputControlLayout layout, UnityEngine.InputSystem.Utilities.InternedString variants, UnityEngine.InputSystem.Utilities.InternedString name, UnityEngine.InputSystem.InputControl parent)
    // Offset: 0x5165528
    ::UnityEngine::InputSystem::InputControl* InstantiateLayout(::UnityEngine::InputSystem::Layouts::InputControlLayout* layout, ::UnityEngine::InputSystem::Utilities::InternedString variants, ::UnityEngine::InputSystem::Utilities::InternedString name, ::UnityEngine::InputSystem::InputControl* parent);
    // private System.Void AddChildControls(UnityEngine.InputSystem.Layouts.InputControlLayout layout, UnityEngine.InputSystem.Utilities.InternedString variants, UnityEngine.InputSystem.InputControl parent, ref System.Boolean haveChildrenUsingStateFromOtherControls)
    // Offset: 0x5165B68
    void AddChildControls(::UnityEngine::InputSystem::Layouts::InputControlLayout* layout, ::UnityEngine::InputSystem::Utilities::InternedString variants, ::UnityEngine::InputSystem::InputControl* parent, ByRef<bool> haveChildrenUsingStateFromOtherControls);
    // private UnityEngine.InputSystem.InputControl AddChildControl(UnityEngine.InputSystem.Layouts.InputControlLayout layout, UnityEngine.InputSystem.Utilities.InternedString variants, UnityEngine.InputSystem.InputControl parent, ref System.Boolean haveChildrenUsingStateFromOtherControls, UnityEngine.InputSystem.Layouts.InputControlLayout/ControlItem controlItem, System.Int32 childIndex, System.String nameOverride)
    // Offset: 0x5166BD0
    ::UnityEngine::InputSystem::InputControl* AddChildControl(::UnityEngine::InputSystem::Layouts::InputControlLayout* layout, ::UnityEngine::InputSystem::Utilities::InternedString variants, ::UnityEngine::InputSystem::InputControl* parent, ByRef<bool> haveChildrenUsingStateFromOtherControls, ::UnityEngine::InputSystem::Layouts::InputControlLayout::ControlItem controlItem, int childIndex, ::StringW nameOverride);
    // private System.Void InsertChildControlOverride(UnityEngine.InputSystem.InputControl parent, ref UnityEngine.InputSystem.Layouts.InputControlLayout/ControlItem controlItem)
    // Offset: 0x5166A04
    void InsertChildControlOverride(::UnityEngine::InputSystem::InputControl* parent, ByRef<::UnityEngine::InputSystem::Layouts::InputControlLayout::ControlItem> controlItem);
    // private System.String ChildControlOverridePath(UnityEngine.InputSystem.InputControl parent, UnityEngine.InputSystem.Utilities.InternedString controlName)
    // Offset: 0x516739C
    ::StringW ChildControlOverridePath(::UnityEngine::InputSystem::InputControl* parent, ::UnityEngine::InputSystem::Utilities::InternedString controlName);
    // private System.Void AddChildControlIfMissing(UnityEngine.InputSystem.Layouts.InputControlLayout layout, UnityEngine.InputSystem.Utilities.InternedString variants, UnityEngine.InputSystem.InputControl parent, ref System.Boolean haveChildrenUsingStateFromOtherControls, ref UnityEngine.InputSystem.Layouts.InputControlLayout/ControlItem controlItem)
    // Offset: 0x51672EC
    void AddChildControlIfMissing(::UnityEngine::InputSystem::Layouts::InputControlLayout* layout, ::UnityEngine::InputSystem::Utilities::InternedString variants, ::UnityEngine::InputSystem::InputControl* parent, ByRef<bool> haveChildrenUsingStateFromOtherControls, ByRef<::UnityEngine::InputSystem::Layouts::InputControlLayout::ControlItem> controlItem);
    // private UnityEngine.InputSystem.InputControl InsertChildControl(UnityEngine.InputSystem.Layouts.InputControlLayout layout, UnityEngine.InputSystem.Utilities.InternedString variant, UnityEngine.InputSystem.InputControl parent, ref System.Boolean haveChildrenUsingStateFromOtherControls, ref UnityEngine.InputSystem.Layouts.InputControlLayout/ControlItem controlItem)
    // Offset: 0x51676E8
    ::UnityEngine::InputSystem::InputControl* InsertChildControl(::UnityEngine::InputSystem::Layouts::InputControlLayout* layout, ::UnityEngine::InputSystem::Utilities::InternedString variant, ::UnityEngine::InputSystem::InputControl* parent, ByRef<bool> haveChildrenUsingStateFromOtherControls, ByRef<::UnityEngine::InputSystem::Layouts::InputControlLayout::ControlItem> controlItem);
    // static private System.Void ApplyUseStateFrom(UnityEngine.InputSystem.InputControl parent, ref UnityEngine.InputSystem.Layouts.InputControlLayout/ControlItem controlItem, UnityEngine.InputSystem.Layouts.InputControlLayout layout)
    // Offset: 0x5166870
    static void ApplyUseStateFrom(::UnityEngine::InputSystem::InputControl* parent, ByRef<::UnityEngine::InputSystem::Layouts::InputControlLayout::ControlItem> controlItem, ::UnityEngine::InputSystem::Layouts::InputControlLayout* layout);
    // static private System.Void ShiftChildIndicesInHierarchyOneUp(UnityEngine.InputSystem.InputDevice device, System.Int32 startIndex, UnityEngine.InputSystem.InputControl exceptControl)
    // Offset: 0x5167A04
    static void ShiftChildIndicesInHierarchyOneUp(::UnityEngine::InputSystem::InputDevice* device, int startIndex, ::UnityEngine::InputSystem::InputControl* exceptControl);
    // private System.Void SetDisplayName(UnityEngine.InputSystem.InputControl control, System.String longDisplayNameFromLayout, System.String shortDisplayNameFromLayout, System.Boolean shortName)
    // Offset: 0x5167A64
    void SetDisplayName(::UnityEngine::InputSystem::InputControl* control, ::StringW longDisplayNameFromLayout, ::StringW shortDisplayNameFromLayout, bool shortName);
    // static private System.Void AddParentDisplayNameRecursive(UnityEngine.InputSystem.InputControl control, System.Text.StringBuilder stringBuilder, System.Boolean shortName)
    // Offset: 0x5167C9C
    static void AddParentDisplayNameRecursive(::UnityEngine::InputSystem::InputControl* control, ::System::Text::StringBuilder* stringBuilder, bool shortName);
    // static private System.Void AddProcessors(UnityEngine.InputSystem.InputControl control, ref UnityEngine.InputSystem.Layouts.InputControlLayout/ControlItem controlItem, System.String layoutName)
    // Offset: 0x51674B4
    static void AddProcessors(::UnityEngine::InputSystem::InputControl* control, ByRef<::UnityEngine::InputSystem::Layouts::InputControlLayout::ControlItem> controlItem, ::StringW layoutName);
    // static private System.Void SetFormat(UnityEngine.InputSystem.InputControl control, UnityEngine.InputSystem.Layouts.InputControlLayout/ControlItem controlItem)
    // Offset: 0x516742C
    static void SetFormat(::UnityEngine::InputSystem::InputControl* control, ::UnityEngine::InputSystem::Layouts::InputControlLayout::ControlItem controlItem);
    // static private UnityEngine.InputSystem.Layouts.InputControlLayout FindOrLoadLayout(System.String name)
    // Offset: 0x51654CC
    static ::UnityEngine::InputSystem::Layouts::InputControlLayout* FindOrLoadLayout(::StringW name);
    // static private System.Void ComputeStateLayout(UnityEngine.InputSystem.InputControl control)
    // Offset: 0x51661BC
    static void ComputeStateLayout(::UnityEngine::InputSystem::InputControl* control);
    // private System.Void FinalizeControlHierarchy()
    // Offset: 0x51651E4
    void FinalizeControlHierarchy();
    // private System.Void FinalizeControlHierarchyRecursive(UnityEngine.InputSystem.InputControl control, System.Int32 controlIndex, UnityEngine.InputSystem.InputControl[] allControls, System.Boolean noisy, System.Boolean dontReset, ref System.Int32 controlIndiciesNextFreeIndex)
    // Offset: 0x5167D4C
    void FinalizeControlHierarchyRecursive(::UnityEngine::InputSystem::InputControl* control, int controlIndex, ::ArrayW<::UnityEngine::InputSystem::InputControl*> allControls, bool noisy, bool dontReset, ByRef<int> controlIndiciesNextFreeIndex);
    // private System.Void InsertControlBitRangeNode(ref UnityEngine.InputSystem.InputDevice/ControlBitRangeNode parent, UnityEngine.InputSystem.InputControl control, ref System.Int32 controlIndiciesNextFreeIndex, System.UInt16 startOffset)
    // Offset: 0x51680DC
    void InsertControlBitRangeNode(ByRef<::UnityEngine::InputSystem::InputDevice::ControlBitRangeNode> parent, ::UnityEngine::InputSystem::InputControl* control, ByRef<int> controlIndiciesNextFreeIndex, uint16_t startOffset);
    // private System.UInt16 GetBestMidPoint(UnityEngine.InputSystem.InputDevice/ControlBitRangeNode parent, System.UInt16 startOffset)
    // Offset: 0x51683B0
    uint16_t GetBestMidPoint(::UnityEngine::InputSystem::InputDevice::ControlBitRangeNode parent, uint16_t startOffset);
    // private System.Void AddControlToNode(UnityEngine.InputSystem.InputControl control, ref System.Int32 controlIndiciesNextFreeIndex, System.Int32 nodeIndex)
    // Offset: 0x51688B4
    void AddControlToNode(::UnityEngine::InputSystem::InputControl* control, ByRef<int> controlIndiciesNextFreeIndex, int nodeIndex);
    // private System.Void AddChildren(ref UnityEngine.InputSystem.InputDevice/ControlBitRangeNode parent, UnityEngine.InputSystem.InputDevice/ControlBitRangeNode left, UnityEngine.InputSystem.InputDevice/ControlBitRangeNode right)
    // Offset: 0x51687A4
    void AddChildren(ByRef<::UnityEngine::InputSystem::InputDevice::ControlBitRangeNode> parent, ::UnityEngine::InputSystem::InputDevice::ControlBitRangeNode left, ::UnityEngine::InputSystem::InputDevice::ControlBitRangeNode right);
    // private System.UInt16 GetControlIndex(UnityEngine.InputSystem.InputControl control)
    // Offset: 0x51689F4
    uint16_t GetControlIndex(::UnityEngine::InputSystem::InputControl* control);
    // static UnityEngine.InputSystem.Layouts.InputDeviceBuilder get_instance()
    // Offset: 0x5168AA4
    static ::UnityEngine::InputSystem::Layouts::InputDeviceBuilder get_instance();
    // static UnityEngine.InputSystem.Layouts.InputDeviceBuilder/RefInstance Ref()
    // Offset: 0x5168AE8
    static ::UnityEngine::InputSystem::Layouts::InputDeviceBuilder::RefInstance Ref();
  }; // UnityEngine.InputSystem.Layouts.InputDeviceBuilder
  #pragma pack(pop)
  static check_size<sizeof(InputDeviceBuilder), 32 + sizeof(::System::Text::StringBuilder*)> __UnityEngine_InputSystem_Layouts_InputDeviceBuilderSizeCheck;
  static_assert(sizeof(InputDeviceBuilder) == 0x28);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::InputSystem::Layouts::InputDeviceBuilder::Setup
// Il2CppName: Setup
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::Layouts::InputDeviceBuilder::*)(::UnityEngine::InputSystem::Utilities::InternedString, ::UnityEngine::InputSystem::Utilities::InternedString, ::UnityEngine::InputSystem::Layouts::InputDeviceDescription)>(&UnityEngine::InputSystem::Layouts::InputDeviceBuilder::Setup)> {
  static const MethodInfo* get() {
    static auto* layout = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem.Utilities", "InternedString")->byval_arg;
    static auto* variants = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem.Utilities", "InternedString")->byval_arg;
    static auto* deviceDescription = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem.Layouts", "InputDeviceDescription")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Layouts::InputDeviceBuilder), "Setup", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{layout, variants, deviceDescription});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Layouts::InputDeviceBuilder::Finish
// Il2CppName: Finish
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::InputDevice* (UnityEngine::InputSystem::Layouts::InputDeviceBuilder::*)()>(&UnityEngine::InputSystem::Layouts::InputDeviceBuilder::Finish)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Layouts::InputDeviceBuilder), "Finish", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Layouts::InputDeviceBuilder::Dispose
// Il2CppName: Dispose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::Layouts::InputDeviceBuilder::*)()>(&UnityEngine::InputSystem::Layouts::InputDeviceBuilder::Dispose)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Layouts::InputDeviceBuilder), "Dispose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Layouts::InputDeviceBuilder::Reset
// Il2CppName: Reset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::Layouts::InputDeviceBuilder::*)()>(&UnityEngine::InputSystem::Layouts::InputDeviceBuilder::Reset)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Layouts::InputDeviceBuilder), "Reset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Layouts::InputDeviceBuilder::InstantiateLayout
// Il2CppName: InstantiateLayout
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::InputControl* (UnityEngine::InputSystem::Layouts::InputDeviceBuilder::*)(::UnityEngine::InputSystem::Utilities::InternedString, ::UnityEngine::InputSystem::Utilities::InternedString, ::UnityEngine::InputSystem::Utilities::InternedString, ::UnityEngine::InputSystem::InputControl*)>(&UnityEngine::InputSystem::Layouts::InputDeviceBuilder::InstantiateLayout)> {
  static const MethodInfo* get() {
    static auto* layout = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem.Utilities", "InternedString")->byval_arg;
    static auto* variants = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem.Utilities", "InternedString")->byval_arg;
    static auto* name = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem.Utilities", "InternedString")->byval_arg;
    static auto* parent = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputControl")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Layouts::InputDeviceBuilder), "InstantiateLayout", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{layout, variants, name, parent});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Layouts::InputDeviceBuilder::InstantiateLayout
// Il2CppName: InstantiateLayout
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::InputControl* (UnityEngine::InputSystem::Layouts::InputDeviceBuilder::*)(::UnityEngine::InputSystem::Layouts::InputControlLayout*, ::UnityEngine::InputSystem::Utilities::InternedString, ::UnityEngine::InputSystem::Utilities::InternedString, ::UnityEngine::InputSystem::InputControl*)>(&UnityEngine::InputSystem::Layouts::InputDeviceBuilder::InstantiateLayout)> {
  static const MethodInfo* get() {
    static auto* layout = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem.Layouts", "InputControlLayout")->byval_arg;
    static auto* variants = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem.Utilities", "InternedString")->byval_arg;
    static auto* name = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem.Utilities", "InternedString")->byval_arg;
    static auto* parent = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputControl")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Layouts::InputDeviceBuilder), "InstantiateLayout", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{layout, variants, name, parent});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Layouts::InputDeviceBuilder::AddChildControls
// Il2CppName: AddChildControls
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::Layouts::InputDeviceBuilder::*)(::UnityEngine::InputSystem::Layouts::InputControlLayout*, ::UnityEngine::InputSystem::Utilities::InternedString, ::UnityEngine::InputSystem::InputControl*, ByRef<bool>)>(&UnityEngine::InputSystem::Layouts::InputDeviceBuilder::AddChildControls)> {
  static const MethodInfo* get() {
    static auto* layout = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem.Layouts", "InputControlLayout")->byval_arg;
    static auto* variants = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem.Utilities", "InternedString")->byval_arg;
    static auto* parent = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputControl")->byval_arg;
    static auto* haveChildrenUsingStateFromOtherControls = &::il2cpp_utils::GetClassFromName("System", "Boolean")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Layouts::InputDeviceBuilder), "AddChildControls", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{layout, variants, parent, haveChildrenUsingStateFromOtherControls});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Layouts::InputDeviceBuilder::AddChildControl
// Il2CppName: AddChildControl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::InputControl* (UnityEngine::InputSystem::Layouts::InputDeviceBuilder::*)(::UnityEngine::InputSystem::Layouts::InputControlLayout*, ::UnityEngine::InputSystem::Utilities::InternedString, ::UnityEngine::InputSystem::InputControl*, ByRef<bool>, ::UnityEngine::InputSystem::Layouts::InputControlLayout::ControlItem, int, ::StringW)>(&UnityEngine::InputSystem::Layouts::InputDeviceBuilder::AddChildControl)> {
  static const MethodInfo* get() {
    static auto* layout = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem.Layouts", "InputControlLayout")->byval_arg;
    static auto* variants = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem.Utilities", "InternedString")->byval_arg;
    static auto* parent = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputControl")->byval_arg;
    static auto* haveChildrenUsingStateFromOtherControls = &::il2cpp_utils::GetClassFromName("System", "Boolean")->this_arg;
    static auto* controlItem = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem.Layouts", "InputControlLayout/ControlItem")->byval_arg;
    static auto* childIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* nameOverride = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Layouts::InputDeviceBuilder), "AddChildControl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{layout, variants, parent, haveChildrenUsingStateFromOtherControls, controlItem, childIndex, nameOverride});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Layouts::InputDeviceBuilder::InsertChildControlOverride
// Il2CppName: InsertChildControlOverride
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::Layouts::InputDeviceBuilder::*)(::UnityEngine::InputSystem::InputControl*, ByRef<::UnityEngine::InputSystem::Layouts::InputControlLayout::ControlItem>)>(&UnityEngine::InputSystem::Layouts::InputDeviceBuilder::InsertChildControlOverride)> {
  static const MethodInfo* get() {
    static auto* parent = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputControl")->byval_arg;
    static auto* controlItem = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem.Layouts", "InputControlLayout/ControlItem")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Layouts::InputDeviceBuilder), "InsertChildControlOverride", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{parent, controlItem});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Layouts::InputDeviceBuilder::ChildControlOverridePath
// Il2CppName: ChildControlOverridePath
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (UnityEngine::InputSystem::Layouts::InputDeviceBuilder::*)(::UnityEngine::InputSystem::InputControl*, ::UnityEngine::InputSystem::Utilities::InternedString)>(&UnityEngine::InputSystem::Layouts::InputDeviceBuilder::ChildControlOverridePath)> {
  static const MethodInfo* get() {
    static auto* parent = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputControl")->byval_arg;
    static auto* controlName = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem.Utilities", "InternedString")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Layouts::InputDeviceBuilder), "ChildControlOverridePath", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{parent, controlName});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Layouts::InputDeviceBuilder::AddChildControlIfMissing
// Il2CppName: AddChildControlIfMissing
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::Layouts::InputDeviceBuilder::*)(::UnityEngine::InputSystem::Layouts::InputControlLayout*, ::UnityEngine::InputSystem::Utilities::InternedString, ::UnityEngine::InputSystem::InputControl*, ByRef<bool>, ByRef<::UnityEngine::InputSystem::Layouts::InputControlLayout::ControlItem>)>(&UnityEngine::InputSystem::Layouts::InputDeviceBuilder::AddChildControlIfMissing)> {
  static const MethodInfo* get() {
    static auto* layout = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem.Layouts", "InputControlLayout")->byval_arg;
    static auto* variants = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem.Utilities", "InternedString")->byval_arg;
    static auto* parent = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputControl")->byval_arg;
    static auto* haveChildrenUsingStateFromOtherControls = &::il2cpp_utils::GetClassFromName("System", "Boolean")->this_arg;
    static auto* controlItem = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem.Layouts", "InputControlLayout/ControlItem")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Layouts::InputDeviceBuilder), "AddChildControlIfMissing", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{layout, variants, parent, haveChildrenUsingStateFromOtherControls, controlItem});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Layouts::InputDeviceBuilder::InsertChildControl
// Il2CppName: InsertChildControl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::InputControl* (UnityEngine::InputSystem::Layouts::InputDeviceBuilder::*)(::UnityEngine::InputSystem::Layouts::InputControlLayout*, ::UnityEngine::InputSystem::Utilities::InternedString, ::UnityEngine::InputSystem::InputControl*, ByRef<bool>, ByRef<::UnityEngine::InputSystem::Layouts::InputControlLayout::ControlItem>)>(&UnityEngine::InputSystem::Layouts::InputDeviceBuilder::InsertChildControl)> {
  static const MethodInfo* get() {
    static auto* layout = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem.Layouts", "InputControlLayout")->byval_arg;
    static auto* variant = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem.Utilities", "InternedString")->byval_arg;
    static auto* parent = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputControl")->byval_arg;
    static auto* haveChildrenUsingStateFromOtherControls = &::il2cpp_utils::GetClassFromName("System", "Boolean")->this_arg;
    static auto* controlItem = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem.Layouts", "InputControlLayout/ControlItem")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Layouts::InputDeviceBuilder), "InsertChildControl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{layout, variant, parent, haveChildrenUsingStateFromOtherControls, controlItem});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Layouts::InputDeviceBuilder::ApplyUseStateFrom
// Il2CppName: ApplyUseStateFrom
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::InputSystem::InputControl*, ByRef<::UnityEngine::InputSystem::Layouts::InputControlLayout::ControlItem>, ::UnityEngine::InputSystem::Layouts::InputControlLayout*)>(&UnityEngine::InputSystem::Layouts::InputDeviceBuilder::ApplyUseStateFrom)> {
  static const MethodInfo* get() {
    static auto* parent = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputControl")->byval_arg;
    static auto* controlItem = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem.Layouts", "InputControlLayout/ControlItem")->this_arg;
    static auto* layout = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem.Layouts", "InputControlLayout")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Layouts::InputDeviceBuilder), "ApplyUseStateFrom", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{parent, controlItem, layout});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Layouts::InputDeviceBuilder::ShiftChildIndicesInHierarchyOneUp
// Il2CppName: ShiftChildIndicesInHierarchyOneUp
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::InputSystem::InputDevice*, int, ::UnityEngine::InputSystem::InputControl*)>(&UnityEngine::InputSystem::Layouts::InputDeviceBuilder::ShiftChildIndicesInHierarchyOneUp)> {
  static const MethodInfo* get() {
    static auto* device = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputDevice")->byval_arg;
    static auto* startIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* exceptControl = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputControl")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Layouts::InputDeviceBuilder), "ShiftChildIndicesInHierarchyOneUp", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{device, startIndex, exceptControl});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Layouts::InputDeviceBuilder::SetDisplayName
// Il2CppName: SetDisplayName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::Layouts::InputDeviceBuilder::*)(::UnityEngine::InputSystem::InputControl*, ::StringW, ::StringW, bool)>(&UnityEngine::InputSystem::Layouts::InputDeviceBuilder::SetDisplayName)> {
  static const MethodInfo* get() {
    static auto* control = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputControl")->byval_arg;
    static auto* longDisplayNameFromLayout = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* shortDisplayNameFromLayout = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* shortName = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Layouts::InputDeviceBuilder), "SetDisplayName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{control, longDisplayNameFromLayout, shortDisplayNameFromLayout, shortName});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Layouts::InputDeviceBuilder::AddParentDisplayNameRecursive
// Il2CppName: AddParentDisplayNameRecursive
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::InputSystem::InputControl*, ::System::Text::StringBuilder*, bool)>(&UnityEngine::InputSystem::Layouts::InputDeviceBuilder::AddParentDisplayNameRecursive)> {
  static const MethodInfo* get() {
    static auto* control = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputControl")->byval_arg;
    static auto* stringBuilder = &::il2cpp_utils::GetClassFromName("System.Text", "StringBuilder")->byval_arg;
    static auto* shortName = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Layouts::InputDeviceBuilder), "AddParentDisplayNameRecursive", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{control, stringBuilder, shortName});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Layouts::InputDeviceBuilder::AddProcessors
// Il2CppName: AddProcessors
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::InputSystem::InputControl*, ByRef<::UnityEngine::InputSystem::Layouts::InputControlLayout::ControlItem>, ::StringW)>(&UnityEngine::InputSystem::Layouts::InputDeviceBuilder::AddProcessors)> {
  static const MethodInfo* get() {
    static auto* control = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputControl")->byval_arg;
    static auto* controlItem = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem.Layouts", "InputControlLayout/ControlItem")->this_arg;
    static auto* layoutName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Layouts::InputDeviceBuilder), "AddProcessors", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{control, controlItem, layoutName});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Layouts::InputDeviceBuilder::SetFormat
// Il2CppName: SetFormat
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::InputSystem::InputControl*, ::UnityEngine::InputSystem::Layouts::InputControlLayout::ControlItem)>(&UnityEngine::InputSystem::Layouts::InputDeviceBuilder::SetFormat)> {
  static const MethodInfo* get() {
    static auto* control = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputControl")->byval_arg;
    static auto* controlItem = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem.Layouts", "InputControlLayout/ControlItem")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Layouts::InputDeviceBuilder), "SetFormat", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{control, controlItem});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Layouts::InputDeviceBuilder::FindOrLoadLayout
// Il2CppName: FindOrLoadLayout
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::Layouts::InputControlLayout* (*)(::StringW)>(&UnityEngine::InputSystem::Layouts::InputDeviceBuilder::FindOrLoadLayout)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Layouts::InputDeviceBuilder), "FindOrLoadLayout", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Layouts::InputDeviceBuilder::ComputeStateLayout
// Il2CppName: ComputeStateLayout
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::InputSystem::InputControl*)>(&UnityEngine::InputSystem::Layouts::InputDeviceBuilder::ComputeStateLayout)> {
  static const MethodInfo* get() {
    static auto* control = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputControl")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Layouts::InputDeviceBuilder), "ComputeStateLayout", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{control});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Layouts::InputDeviceBuilder::FinalizeControlHierarchy
// Il2CppName: FinalizeControlHierarchy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::Layouts::InputDeviceBuilder::*)()>(&UnityEngine::InputSystem::Layouts::InputDeviceBuilder::FinalizeControlHierarchy)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Layouts::InputDeviceBuilder), "FinalizeControlHierarchy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Layouts::InputDeviceBuilder::FinalizeControlHierarchyRecursive
// Il2CppName: FinalizeControlHierarchyRecursive
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::Layouts::InputDeviceBuilder::*)(::UnityEngine::InputSystem::InputControl*, int, ::ArrayW<::UnityEngine::InputSystem::InputControl*>, bool, bool, ByRef<int>)>(&UnityEngine::InputSystem::Layouts::InputDeviceBuilder::FinalizeControlHierarchyRecursive)> {
  static const MethodInfo* get() {
    static auto* control = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputControl")->byval_arg;
    static auto* controlIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* allControls = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputControl"), 1)->byval_arg;
    static auto* noisy = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* dontReset = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* controlIndiciesNextFreeIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Layouts::InputDeviceBuilder), "FinalizeControlHierarchyRecursive", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{control, controlIndex, allControls, noisy, dontReset, controlIndiciesNextFreeIndex});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Layouts::InputDeviceBuilder::InsertControlBitRangeNode
// Il2CppName: InsertControlBitRangeNode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::Layouts::InputDeviceBuilder::*)(ByRef<::UnityEngine::InputSystem::InputDevice::ControlBitRangeNode>, ::UnityEngine::InputSystem::InputControl*, ByRef<int>, uint16_t)>(&UnityEngine::InputSystem::Layouts::InputDeviceBuilder::InsertControlBitRangeNode)> {
  static const MethodInfo* get() {
    static auto* parent = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputDevice/ControlBitRangeNode")->this_arg;
    static auto* control = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputControl")->byval_arg;
    static auto* controlIndiciesNextFreeIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    static auto* startOffset = &::il2cpp_utils::GetClassFromName("System", "UInt16")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Layouts::InputDeviceBuilder), "InsertControlBitRangeNode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{parent, control, controlIndiciesNextFreeIndex, startOffset});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Layouts::InputDeviceBuilder::GetBestMidPoint
// Il2CppName: GetBestMidPoint
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint16_t (UnityEngine::InputSystem::Layouts::InputDeviceBuilder::*)(::UnityEngine::InputSystem::InputDevice::ControlBitRangeNode, uint16_t)>(&UnityEngine::InputSystem::Layouts::InputDeviceBuilder::GetBestMidPoint)> {
  static const MethodInfo* get() {
    static auto* parent = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputDevice/ControlBitRangeNode")->byval_arg;
    static auto* startOffset = &::il2cpp_utils::GetClassFromName("System", "UInt16")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Layouts::InputDeviceBuilder), "GetBestMidPoint", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{parent, startOffset});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Layouts::InputDeviceBuilder::AddControlToNode
// Il2CppName: AddControlToNode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::Layouts::InputDeviceBuilder::*)(::UnityEngine::InputSystem::InputControl*, ByRef<int>, int)>(&UnityEngine::InputSystem::Layouts::InputDeviceBuilder::AddControlToNode)> {
  static const MethodInfo* get() {
    static auto* control = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputControl")->byval_arg;
    static auto* controlIndiciesNextFreeIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    static auto* nodeIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Layouts::InputDeviceBuilder), "AddControlToNode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{control, controlIndiciesNextFreeIndex, nodeIndex});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Layouts::InputDeviceBuilder::AddChildren
// Il2CppName: AddChildren
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::Layouts::InputDeviceBuilder::*)(ByRef<::UnityEngine::InputSystem::InputDevice::ControlBitRangeNode>, ::UnityEngine::InputSystem::InputDevice::ControlBitRangeNode, ::UnityEngine::InputSystem::InputDevice::ControlBitRangeNode)>(&UnityEngine::InputSystem::Layouts::InputDeviceBuilder::AddChildren)> {
  static const MethodInfo* get() {
    static auto* parent = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputDevice/ControlBitRangeNode")->this_arg;
    static auto* left = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputDevice/ControlBitRangeNode")->byval_arg;
    static auto* right = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputDevice/ControlBitRangeNode")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Layouts::InputDeviceBuilder), "AddChildren", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{parent, left, right});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Layouts::InputDeviceBuilder::GetControlIndex
// Il2CppName: GetControlIndex
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint16_t (UnityEngine::InputSystem::Layouts::InputDeviceBuilder::*)(::UnityEngine::InputSystem::InputControl*)>(&UnityEngine::InputSystem::Layouts::InputDeviceBuilder::GetControlIndex)> {
  static const MethodInfo* get() {
    static auto* control = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputControl")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Layouts::InputDeviceBuilder), "GetControlIndex", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{control});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Layouts::InputDeviceBuilder::get_instance
// Il2CppName: get_instance
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::Layouts::InputDeviceBuilder (*)()>(&UnityEngine::InputSystem::Layouts::InputDeviceBuilder::get_instance)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Layouts::InputDeviceBuilder), "get_instance", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Layouts::InputDeviceBuilder::Ref
// Il2CppName: Ref
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::Layouts::InputDeviceBuilder::RefInstance (*)()>(&UnityEngine::InputSystem::Layouts::InputDeviceBuilder::Ref)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Layouts::InputDeviceBuilder), "Ref", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
