// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.InputSystem.InputActionAsset
#include "UnityEngine/InputSystem/InputActionAsset.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: UnityEngine.InputSystem.InputBinding
#include "UnityEngine/InputSystem/InputBinding.hpp"
// Including type: System.Collections.Generic.IEnumerator`1
#include "System/Collections/Generic/IEnumerator_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Collections
namespace System::Collections {
  // Skipping declaration: IEnumerator because it is already included!
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::InputSystem::InputActionAsset::$get_bindings$d__8);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::InputSystem::InputActionAsset::$get_bindings$d__8*, "UnityEngine.InputSystem", "InputActionAsset/<get_bindings>d__8");
// Type namespace: UnityEngine.InputSystem
namespace UnityEngine::InputSystem {
  // Size: 0x98
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.InputSystem.InputActionAsset/<get_bindings>d__8
  // [TokenAttribute] Offset: FFFFFFFF
  // [CompilerGeneratedAttribute] Offset: FFFFFFFF
  class InputActionAsset::$get_bindings$d__8 : public ::Il2CppObject/*, public ::System::Collections::Generic::IEnumerable_1<::UnityEngine::InputSystem::InputBinding>, public ::System::Collections::Generic::IEnumerator_1<::UnityEngine::InputSystem::InputBinding>*/ {
    public:
    public:
    // private System.Int32 <>1__state
    // Size: 0x4
    // Offset: 0x10
    int $$1__state;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // Padding between fields: $$1__state and: $$2__current
    char __padding0[0x4] = {};
    // private UnityEngine.InputSystem.InputBinding <>2__current
    // Size: 0x58
    // Offset: 0x18
    ::UnityEngine::InputSystem::InputBinding $$2__current;
    // Field size check
    static_assert(sizeof(::UnityEngine::InputSystem::InputBinding) == 0x58);
    // private System.Int32 <>l__initialThreadId
    // Size: 0x4
    // Offset: 0x70
    int $$l__initialThreadId;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // Padding between fields: $$l__initialThreadId and: $$4__this
    char __padding2[0x4] = {};
    // public UnityEngine.InputSystem.InputActionAsset <>4__this
    // Size: 0x8
    // Offset: 0x78
    ::UnityEngine::InputSystem::InputActionAsset* $$4__this;
    // Field size check
    static_assert(sizeof(::UnityEngine::InputSystem::InputActionAsset*) == 0x8);
    // private System.Int32 <numActionMaps>5__2
    // Size: 0x4
    // Offset: 0x80
    int $numActionMaps$5__2;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private System.Int32 <i>5__3
    // Size: 0x4
    // Offset: 0x84
    int $i$5__3;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private UnityEngine.InputSystem.InputBinding[] <bindings>5__4
    // Size: 0x8
    // Offset: 0x88
    ::ArrayW<::UnityEngine::InputSystem::InputBinding> $bindings$5__4;
    // Field size check
    static_assert(sizeof(::ArrayW<::UnityEngine::InputSystem::InputBinding>) == 0x8);
    // private System.Int32 <numBindings>5__5
    // Size: 0x4
    // Offset: 0x90
    int $numBindings$5__5;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private System.Int32 <n>5__6
    // Size: 0x4
    // Offset: 0x94
    int $n$5__6;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Creating interface conversion operator: operator ::System::Collections::Generic::IEnumerable_1<::UnityEngine::InputSystem::InputBinding>
    operator ::System::Collections::Generic::IEnumerable_1<::UnityEngine::InputSystem::InputBinding>() noexcept {
      return *reinterpret_cast<::System::Collections::Generic::IEnumerable_1<::UnityEngine::InputSystem::InputBinding>*>(this);
    }
    // Creating interface conversion operator: operator ::System::Collections::Generic::IEnumerator_1<::UnityEngine::InputSystem::InputBinding>
    operator ::System::Collections::Generic::IEnumerator_1<::UnityEngine::InputSystem::InputBinding>() noexcept {
      return *reinterpret_cast<::System::Collections::Generic::IEnumerator_1<::UnityEngine::InputSystem::InputBinding>*>(this);
    }
    // Get instance field reference: private System.Int32 <>1__state
    [[deprecated("Use field access instead!")]] int& dyn_$$1__state();
    // Get instance field reference: private UnityEngine.InputSystem.InputBinding <>2__current
    [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::InputBinding& dyn_$$2__current();
    // Get instance field reference: private System.Int32 <>l__initialThreadId
    [[deprecated("Use field access instead!")]] int& dyn_$$l__initialThreadId();
    // Get instance field reference: public UnityEngine.InputSystem.InputActionAsset <>4__this
    [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::InputActionAsset*& dyn_$$4__this();
    // Get instance field reference: private System.Int32 <numActionMaps>5__2
    [[deprecated("Use field access instead!")]] int& dyn_$numActionMaps$5__2();
    // Get instance field reference: private System.Int32 <i>5__3
    [[deprecated("Use field access instead!")]] int& dyn_$i$5__3();
    // Get instance field reference: private UnityEngine.InputSystem.InputBinding[] <bindings>5__4
    [[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::InputSystem::InputBinding>& dyn_$bindings$5__4();
    // Get instance field reference: private System.Int32 <numBindings>5__5
    [[deprecated("Use field access instead!")]] int& dyn_$numBindings$5__5();
    // Get instance field reference: private System.Int32 <n>5__6
    [[deprecated("Use field access instead!")]] int& dyn_$n$5__6();
    // public System.Void .ctor(System.Int32 <>1__state)
    // Offset: 0x5090360
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static InputActionAsset::$get_bindings$d__8* New_ctor(int $$1__state) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::InputActionAsset::$get_bindings$d__8::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<InputActionAsset::$get_bindings$d__8*, creationType>($$1__state)));
    }
    // private System.Void System.IDisposable.Dispose()
    // Offset: 0x50939EC
    void System_IDisposable_Dispose();
    // private System.Boolean MoveNext()
    // Offset: 0x50939F0
    bool MoveNext();
    // private UnityEngine.InputSystem.InputBinding System.Collections.Generic.IEnumerator<UnityEngine.InputSystem.InputBinding>.get_Current()
    // Offset: 0x5093B70
    ::UnityEngine::InputSystem::InputBinding System_Collections_Generic_IEnumerator$UnityEngine_InputSystem_InputBinding$_get_Current();
    // private System.Void System.Collections.IEnumerator.Reset()
    // Offset: 0x5093B80
    void System_Collections_IEnumerator_Reset();
    // private System.Object System.Collections.IEnumerator.get_Current()
    // Offset: 0x5093BB8
    ::Il2CppObject* System_Collections_IEnumerator_get_Current();
    // private System.Collections.Generic.IEnumerator`1<UnityEngine.InputSystem.InputBinding> System.Collections.Generic.IEnumerable<UnityEngine.InputSystem.InputBinding>.GetEnumerator()
    // Offset: 0x5093C1C
    ::System::Collections::Generic::IEnumerator_1<::UnityEngine::InputSystem::InputBinding>* System_Collections_Generic_IEnumerable$UnityEngine_InputSystem_InputBinding$_GetEnumerator();
    // private System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()
    // Offset: 0x5093CC0
    ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator();
  }; // UnityEngine.InputSystem.InputActionAsset/<get_bindings>d__8
  #pragma pack(pop)
  static check_size<sizeof(InputActionAsset::$get_bindings$d__8), 148 + sizeof(int)> __UnityEngine_InputSystem_InputActionAsset_$get_bindings$d__8SizeCheck;
  static_assert(sizeof(InputActionAsset::$get_bindings$d__8) == 0x98);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionAsset::$get_bindings$d__8::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionAsset::$get_bindings$d__8::System_IDisposable_Dispose
// Il2CppName: System.IDisposable.Dispose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::InputActionAsset::$get_bindings$d__8::*)()>(&UnityEngine::InputSystem::InputActionAsset::$get_bindings$d__8::System_IDisposable_Dispose)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionAsset::$get_bindings$d__8*), "System.IDisposable.Dispose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionAsset::$get_bindings$d__8::MoveNext
// Il2CppName: MoveNext
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::InputSystem::InputActionAsset::$get_bindings$d__8::*)()>(&UnityEngine::InputSystem::InputActionAsset::$get_bindings$d__8::MoveNext)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionAsset::$get_bindings$d__8*), "MoveNext", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionAsset::$get_bindings$d__8::System_Collections_Generic_IEnumerator$UnityEngine_InputSystem_InputBinding$_get_Current
// Il2CppName: System.Collections.Generic.IEnumerator<UnityEngine.InputSystem.InputBinding>.get_Current
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::InputBinding (UnityEngine::InputSystem::InputActionAsset::$get_bindings$d__8::*)()>(&UnityEngine::InputSystem::InputActionAsset::$get_bindings$d__8::System_Collections_Generic_IEnumerator$UnityEngine_InputSystem_InputBinding$_get_Current)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionAsset::$get_bindings$d__8*), "System.Collections.Generic.IEnumerator<UnityEngine.InputSystem.InputBinding>.get_Current", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionAsset::$get_bindings$d__8::System_Collections_IEnumerator_Reset
// Il2CppName: System.Collections.IEnumerator.Reset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::InputActionAsset::$get_bindings$d__8::*)()>(&UnityEngine::InputSystem::InputActionAsset::$get_bindings$d__8::System_Collections_IEnumerator_Reset)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionAsset::$get_bindings$d__8*), "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionAsset::$get_bindings$d__8::System_Collections_IEnumerator_get_Current
// Il2CppName: System.Collections.IEnumerator.get_Current
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (UnityEngine::InputSystem::InputActionAsset::$get_bindings$d__8::*)()>(&UnityEngine::InputSystem::InputActionAsset::$get_bindings$d__8::System_Collections_IEnumerator_get_Current)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionAsset::$get_bindings$d__8*), "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionAsset::$get_bindings$d__8::System_Collections_Generic_IEnumerable$UnityEngine_InputSystem_InputBinding$_GetEnumerator
// Il2CppName: System.Collections.Generic.IEnumerable<UnityEngine.InputSystem.InputBinding>.GetEnumerator
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::IEnumerator_1<::UnityEngine::InputSystem::InputBinding>* (UnityEngine::InputSystem::InputActionAsset::$get_bindings$d__8::*)()>(&UnityEngine::InputSystem::InputActionAsset::$get_bindings$d__8::System_Collections_Generic_IEnumerable$UnityEngine_InputSystem_InputBinding$_GetEnumerator)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionAsset::$get_bindings$d__8*), "System.Collections.Generic.IEnumerable<UnityEngine.InputSystem.InputBinding>.GetEnumerator", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionAsset::$get_bindings$d__8::System_Collections_IEnumerable_GetEnumerator
// Il2CppName: System.Collections.IEnumerable.GetEnumerator
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::IEnumerator* (UnityEngine::InputSystem::InputActionAsset::$get_bindings$d__8::*)()>(&UnityEngine::InputSystem::InputActionAsset::$get_bindings$d__8::System_Collections_IEnumerable_GetEnumerator)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionAsset::$get_bindings$d__8*), "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
