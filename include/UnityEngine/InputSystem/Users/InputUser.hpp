// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Including type: System.IEquatable`1
#include "System/IEquatable_1.hpp"
// Including type: System.UInt32
#include "System/UInt32.hpp"
// Including type: UnityEngine.InputSystem.Users.InputUserAccountHandle
#include "UnityEngine/InputSystem/Users/InputUserAccountHandle.hpp"
// Including type: UnityEngine.InputSystem.InputControlScheme
#include "UnityEngine/InputSystem/InputControlScheme.hpp"
// Including type: UnityEngine.InputSystem.Users.InputUserChange
#include "UnityEngine/InputSystem/Users/InputUserChange.hpp"
// Including type: UnityEngine.InputSystem.LowLevel.InputEventPtr
#include "UnityEngine/InputSystem/LowLevel/InputEventPtr.hpp"
// Including type: UnityEngine.InputSystem.Utilities.InlinedArray`1
#include "UnityEngine/InputSystem/Utilities/InlinedArray_1.hpp"
// Including type: UnityEngine.InputSystem.Utilities.CallbackArray`1
#include "UnityEngine/InputSystem/Utilities/CallbackArray_1.hpp"
// Including type: UnityEngine.InputSystem.InputActionChange
#include "UnityEngine/InputSystem/InputActionChange.hpp"
// Including type: UnityEngine.InputSystem.InputDeviceChange
#include "UnityEngine/InputSystem/InputDeviceChange.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::InputSystem::Users
namespace UnityEngine::InputSystem::Users {
  // Skipping declaration: UserData because it is already included!
  // Skipping declaration: OngoingAccountSelection because it is already included!
  // Forward declaring type: InputUserPairingOptions
  struct InputUserPairingOptions;
}
// Forward declaring namespace: UnityEngine::InputSystem::Utilities
namespace UnityEngine::InputSystem::Utilities {
  // Forward declaring type: ReadOnlyArray`1<TValue>
  template<typename TValue>
  struct ReadOnlyArray_1;
  // Forward declaring type: ISavedState
  class ISavedState;
}
// Forward declaring namespace: UnityEngine::InputSystem
namespace UnityEngine::InputSystem {
  // Forward declaring type: InputDevice
  class InputDevice;
  // Forward declaring type: IInputActionCollection
  class IInputActionCollection;
  // Forward declaring type: InputControl
  class InputControl;
  // Skipping declaration: InputControlList`1 because it is already included!
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Action`3<T1, T2, T3>
  template<typename T1, typename T2, typename T3>
  class Action_3;
  // Forward declaring type: Action`2<T1, T2>
  template<typename T1, typename T2>
  class Action_2;
  // Forward declaring type: Func`3<T1, T2, TResult>
  template<typename T1, typename T2, typename TResult>
  class Func_3;
}
// Completed forward declares
// Type namespace: UnityEngine.InputSystem.Users
namespace UnityEngine::InputSystem::Users {
  // Forward declaring type: InputUser
  struct InputUser;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::InputSystem::Users::InputUser, "UnityEngine.InputSystem.Users", "InputUser");
// Type namespace: UnityEngine.InputSystem.Users
namespace UnityEngine::InputSystem::Users {
  // Size: 0x4
  #pragma pack(push, 1)
  // WARNING Layout: Sequential may not be correctly taken into account!
  // Autogenerated type: UnityEngine.InputSystem.Users.InputUser
  // [TokenAttribute] Offset: FFFFFFFF
  struct InputUser/*, public ::System::ValueType, public ::System::IEquatable_1<::UnityEngine::InputSystem::Users::InputUser>*/ {
    public:
    // Nested type: ::UnityEngine::InputSystem::Users::InputUser::ControlSchemeChangeSyntax
    struct ControlSchemeChangeSyntax;
    // Nested type: ::UnityEngine::InputSystem::Users::InputUser::UserFlags
    struct UserFlags;
    // Nested type: ::UnityEngine::InputSystem::Users::InputUser::UserData
    struct UserData;
    // Nested type: ::UnityEngine::InputSystem::Users::InputUser::CompareDevicesByUserAccount
    struct CompareDevicesByUserAccount;
    // Nested type: ::UnityEngine::InputSystem::Users::InputUser::OngoingAccountSelection
    struct OngoingAccountSelection;
    // Nested type: ::UnityEngine::InputSystem::Users::InputUser::GlobalState
    struct GlobalState;
    // Nested type: ::UnityEngine::InputSystem::Users::InputUser::$$c
    class $$c;
    // Size: 0x4
    #pragma pack(push, 1)
    // Autogenerated type: UnityEngine.InputSystem.Users.InputUser/UserFlags
    // [TokenAttribute] Offset: FFFFFFFF
    // [FlagsAttribute] Offset: FFFFFFFF
    struct UserFlags/*, public ::System::Enum*/ {
      public:
      public:
      // public System.Int32 value__
      // Size: 0x4
      // Offset: 0x0
      int value;
      // Field size check
      static_assert(sizeof(int) == 0x4);
      public:
      // Creating value type constructor for type: UserFlags
      constexpr UserFlags(int value_ = {}) noexcept : value{value_} {}
      // Creating interface conversion operator: operator ::System::Enum
      operator ::System::Enum() noexcept {
        return *reinterpret_cast<::System::Enum*>(this);
      }
      // Creating conversion operator: operator int
      constexpr operator int() const noexcept {
        return value;
      }
      // static field const value: static public UnityEngine.InputSystem.Users.InputUser/UserFlags BindToAllDevices
      static constexpr const int BindToAllDevices = 1;
      // Get static field: static public UnityEngine.InputSystem.Users.InputUser/UserFlags BindToAllDevices
      static ::UnityEngine::InputSystem::Users::InputUser::UserFlags _get_BindToAllDevices();
      // Set static field: static public UnityEngine.InputSystem.Users.InputUser/UserFlags BindToAllDevices
      static void _set_BindToAllDevices(::UnityEngine::InputSystem::Users::InputUser::UserFlags value);
      // static field const value: static public UnityEngine.InputSystem.Users.InputUser/UserFlags UserAccountSelectionInProgress
      static constexpr const int UserAccountSelectionInProgress = 2;
      // Get static field: static public UnityEngine.InputSystem.Users.InputUser/UserFlags UserAccountSelectionInProgress
      static ::UnityEngine::InputSystem::Users::InputUser::UserFlags _get_UserAccountSelectionInProgress();
      // Set static field: static public UnityEngine.InputSystem.Users.InputUser/UserFlags UserAccountSelectionInProgress
      static void _set_UserAccountSelectionInProgress(::UnityEngine::InputSystem::Users::InputUser::UserFlags value);
      // Get instance field reference: public System.Int32 value__
      [[deprecated("Use field access instead!")]] int& dyn_value__();
    }; // UnityEngine.InputSystem.Users.InputUser/UserFlags
    #pragma pack(pop)
    static check_size<sizeof(InputUser::UserFlags), 0 + sizeof(int)> __UnityEngine_InputSystem_Users_InputUser_UserFlagsSizeCheck;
    static_assert(sizeof(InputUser::UserFlags) == 0x4);
    // WARNING Size may be invalid!
    // WARNING Layout: Sequential may not be correctly taken into account!
    // Autogenerated type: UnityEngine.InputSystem.Users.InputUser/UserData
    // [TokenAttribute] Offset: FFFFFFFF
    struct UserData/*, public ::System::ValueType*/ {
      public:
      public:
      // public System.Nullable`1<UnityEngine.InputSystem.Users.InputUserAccountHandle> platformUserAccountHandle
      // Size: 0xFFFFFFFF
      // Offset: 0x0
      ::System::Nullable_1<::UnityEngine::InputSystem::Users::InputUserAccountHandle> platformUserAccountHandle;
      // public System.String platformUserAccountName
      // Size: 0x8
      // Offset: 0x18
      ::StringW platformUserAccountName;
      // Field size check
      static_assert(sizeof(::StringW) == 0x8);
      // public System.String platformUserAccountId
      // Size: 0x8
      // Offset: 0x20
      ::StringW platformUserAccountId;
      // Field size check
      static_assert(sizeof(::StringW) == 0x8);
      // public System.Int32 deviceCount
      // Size: 0x4
      // Offset: 0x28
      int deviceCount;
      // Field size check
      static_assert(sizeof(int) == 0x4);
      // public System.Int32 deviceStartIndex
      // Size: 0x4
      // Offset: 0x2C
      int deviceStartIndex;
      // Field size check
      static_assert(sizeof(int) == 0x4);
      // public UnityEngine.InputSystem.IInputActionCollection actions
      // Size: 0x8
      // Offset: 0x30
      ::UnityEngine::InputSystem::IInputActionCollection* actions;
      // Field size check
      static_assert(sizeof(::UnityEngine::InputSystem::IInputActionCollection*) == 0x8);
      // public System.Nullable`1<UnityEngine.InputSystem.InputControlScheme> controlScheme
      // Size: 0xFFFFFFFF
      // Offset: 0x38
      ::System::Nullable_1<::UnityEngine::InputSystem::InputControlScheme> controlScheme;
      // public UnityEngine.InputSystem.InputControlScheme/MatchResult controlSchemeMatch
      // Size: 0xFFFFFFFF
      // Offset: 0x58
      ::UnityEngine::InputSystem::InputControlScheme::MatchResult controlSchemeMatch;
      // public System.Int32 lostDeviceCount
      // Size: 0x4
      // Offset: 0xA8
      int lostDeviceCount;
      // Field size check
      static_assert(sizeof(int) == 0x4);
      // public System.Int32 lostDeviceStartIndex
      // Size: 0x4
      // Offset: 0xAC
      int lostDeviceStartIndex;
      // Field size check
      static_assert(sizeof(int) == 0x4);
      // public UnityEngine.InputSystem.Users.InputUser/UserFlags flags
      // Size: 0x4
      // Offset: 0xB0
      ::UnityEngine::InputSystem::Users::InputUser::UserFlags flags;
      // Field size check
      static_assert(sizeof(::UnityEngine::InputSystem::Users::InputUser::UserFlags) == 0x4);
      public:
      // Creating value type constructor for type: UserData
      constexpr UserData(::System::Nullable_1<::UnityEngine::InputSystem::Users::InputUserAccountHandle> platformUserAccountHandle_ = {}, ::StringW platformUserAccountName_ = {}, ::StringW platformUserAccountId_ = {}, int deviceCount_ = {}, int deviceStartIndex_ = {}, ::UnityEngine::InputSystem::IInputActionCollection* actions_ = {}, ::System::Nullable_1<::UnityEngine::InputSystem::InputControlScheme> controlScheme_ = {}, ::UnityEngine::InputSystem::InputControlScheme::MatchResult controlSchemeMatch_ = {}, int lostDeviceCount_ = {}, int lostDeviceStartIndex_ = {}, ::UnityEngine::InputSystem::Users::InputUser::UserFlags flags_ = {}) noexcept : platformUserAccountHandle{platformUserAccountHandle_}, platformUserAccountName{platformUserAccountName_}, platformUserAccountId{platformUserAccountId_}, deviceCount{deviceCount_}, deviceStartIndex{deviceStartIndex_}, actions{actions_}, controlScheme{controlScheme_}, controlSchemeMatch{controlSchemeMatch_}, lostDeviceCount{lostDeviceCount_}, lostDeviceStartIndex{lostDeviceStartIndex_}, flags{flags_} {}
      // Creating interface conversion operator: operator ::System::ValueType
      operator ::System::ValueType() noexcept {
        return *reinterpret_cast<::System::ValueType*>(this);
      }
      // Get instance field reference: public System.Nullable`1<UnityEngine.InputSystem.Users.InputUserAccountHandle> platformUserAccountHandle
      [[deprecated("Use field access instead!")]] ::System::Nullable_1<::UnityEngine::InputSystem::Users::InputUserAccountHandle>& dyn_platformUserAccountHandle();
      // Get instance field reference: public System.String platformUserAccountName
      [[deprecated("Use field access instead!")]] ::StringW& dyn_platformUserAccountName();
      // Get instance field reference: public System.String platformUserAccountId
      [[deprecated("Use field access instead!")]] ::StringW& dyn_platformUserAccountId();
      // Get instance field reference: public System.Int32 deviceCount
      [[deprecated("Use field access instead!")]] int& dyn_deviceCount();
      // Get instance field reference: public System.Int32 deviceStartIndex
      [[deprecated("Use field access instead!")]] int& dyn_deviceStartIndex();
      // Get instance field reference: public UnityEngine.InputSystem.IInputActionCollection actions
      [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::IInputActionCollection*& dyn_actions();
      // Get instance field reference: public System.Nullable`1<UnityEngine.InputSystem.InputControlScheme> controlScheme
      [[deprecated("Use field access instead!")]] ::System::Nullable_1<::UnityEngine::InputSystem::InputControlScheme>& dyn_controlScheme();
      // Get instance field reference: public UnityEngine.InputSystem.InputControlScheme/MatchResult controlSchemeMatch
      [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::InputControlScheme::MatchResult& dyn_controlSchemeMatch();
      // Get instance field reference: public System.Int32 lostDeviceCount
      [[deprecated("Use field access instead!")]] int& dyn_lostDeviceCount();
      // Get instance field reference: public System.Int32 lostDeviceStartIndex
      [[deprecated("Use field access instead!")]] int& dyn_lostDeviceStartIndex();
      // Get instance field reference: public UnityEngine.InputSystem.Users.InputUser/UserFlags flags
      [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Users::InputUser::UserFlags& dyn_flags();
    }; // UnityEngine.InputSystem.Users.InputUser/UserData
    // WARNING Not writing size check since size may be invalid!
    // Size: 0xC
    #pragma pack(push, 1)
    // WARNING Layout: Sequential may not be correctly taken into account!
    // Autogenerated type: UnityEngine.InputSystem.Users.InputUser/OngoingAccountSelection
    // [TokenAttribute] Offset: FFFFFFFF
    struct OngoingAccountSelection/*, public ::System::ValueType*/ {
      public:
      public:
      // public UnityEngine.InputSystem.InputDevice device
      // Size: 0x8
      // Offset: 0x0
      ::UnityEngine::InputSystem::InputDevice* device;
      // Field size check
      static_assert(sizeof(::UnityEngine::InputSystem::InputDevice*) == 0x8);
      // public System.UInt32 userId
      // Size: 0x4
      // Offset: 0x8
      uint userId;
      // Field size check
      static_assert(sizeof(uint) == 0x4);
      public:
      // Creating value type constructor for type: OngoingAccountSelection
      constexpr OngoingAccountSelection(::UnityEngine::InputSystem::InputDevice* device_ = {}, uint userId_ = {}) noexcept : device{device_}, userId{userId_} {}
      // Creating interface conversion operator: operator ::System::ValueType
      operator ::System::ValueType() noexcept {
        return *reinterpret_cast<::System::ValueType*>(this);
      }
      // Get instance field reference: public UnityEngine.InputSystem.InputDevice device
      [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::InputDevice*& dyn_device();
      // Get instance field reference: public System.UInt32 userId
      [[deprecated("Use field access instead!")]] uint& dyn_userId();
    }; // UnityEngine.InputSystem.Users.InputUser/OngoingAccountSelection
    #pragma pack(pop)
    static check_size<sizeof(InputUser::OngoingAccountSelection), 8 + sizeof(uint)> __UnityEngine_InputSystem_Users_InputUser_OngoingAccountSelectionSizeCheck;
    static_assert(sizeof(InputUser::OngoingAccountSelection) == 0xC);
    // WARNING Size may be invalid!
    // WARNING Layout: Sequential may not be correctly taken into account!
    // Autogenerated type: UnityEngine.InputSystem.Users.InputUser/GlobalState
    // [TokenAttribute] Offset: FFFFFFFF
    struct GlobalState/*, public ::System::ValueType*/ {
      public:
      public:
      // System.Int32 pairingStateVersion
      // Size: 0x4
      // Offset: 0x0
      int pairingStateVersion;
      // Field size check
      static_assert(sizeof(int) == 0x4);
      // System.UInt32 lastUserId
      // Size: 0x4
      // Offset: 0x4
      uint lastUserId;
      // Field size check
      static_assert(sizeof(uint) == 0x4);
      // System.Int32 allUserCount
      // Size: 0x4
      // Offset: 0x8
      int allUserCount;
      // Field size check
      static_assert(sizeof(int) == 0x4);
      // System.Int32 allPairedDeviceCount
      // Size: 0x4
      // Offset: 0xC
      int allPairedDeviceCount;
      // Field size check
      static_assert(sizeof(int) == 0x4);
      // System.Int32 allLostDeviceCount
      // Size: 0x4
      // Offset: 0x10
      int allLostDeviceCount;
      // Field size check
      static_assert(sizeof(int) == 0x4);
      // UnityEngine.InputSystem.Users.InputUser[] allUsers
      // Size: 0x8
      // Offset: 0x18
      ::ArrayW<::UnityEngine::InputSystem::Users::InputUser> allUsers;
      // Field size check
      static_assert(sizeof(::ArrayW<::UnityEngine::InputSystem::Users::InputUser>) == 0x8);
      // UnityEngine.InputSystem.Users.InputUser/UserData[] allUserData
      // Size: 0x8
      // Offset: 0x20
      ::ArrayW<::UnityEngine::InputSystem::Users::InputUser::UserData> allUserData;
      // Field size check
      static_assert(sizeof(::ArrayW<::UnityEngine::InputSystem::Users::InputUser::UserData>) == 0x8);
      // UnityEngine.InputSystem.InputDevice[] allPairedDevices
      // Size: 0x8
      // Offset: 0x28
      ::ArrayW<::UnityEngine::InputSystem::InputDevice*> allPairedDevices;
      // Field size check
      static_assert(sizeof(::ArrayW<::UnityEngine::InputSystem::InputDevice*>) == 0x8);
      // UnityEngine.InputSystem.InputDevice[] allLostDevices
      // Size: 0x8
      // Offset: 0x30
      ::ArrayW<::UnityEngine::InputSystem::InputDevice*> allLostDevices;
      // Field size check
      static_assert(sizeof(::ArrayW<::UnityEngine::InputSystem::InputDevice*>) == 0x8);
      // UnityEngine.InputSystem.Utilities.InlinedArray`1<UnityEngine.InputSystem.Users.InputUser/OngoingAccountSelection> ongoingAccountSelections
      // Size: 0xFFFFFFFF
      // Offset: 0x38
      ::UnityEngine::InputSystem::Utilities::InlinedArray_1<::UnityEngine::InputSystem::Users::InputUser::OngoingAccountSelection> ongoingAccountSelections;
      // UnityEngine.InputSystem.Utilities.CallbackArray`1<System.Action`3<UnityEngine.InputSystem.Users.InputUser,UnityEngine.InputSystem.Users.InputUserChange,UnityEngine.InputSystem.InputDevice>> onChange
      // Size: 0xFFFFFFFF
      // Offset: 0x58
      ::UnityEngine::InputSystem::Utilities::CallbackArray_1<::System::Action_3<::UnityEngine::InputSystem::Users::InputUser, ::UnityEngine::InputSystem::Users::InputUserChange, ::UnityEngine::InputSystem::InputDevice*>*> onChange;
      // UnityEngine.InputSystem.Utilities.CallbackArray`1<System.Action`2<UnityEngine.InputSystem.InputControl,UnityEngine.InputSystem.LowLevel.InputEventPtr>> onUnpairedDeviceUsed
      // Size: 0xFFFFFFFF
      // Offset: 0xA8
      ::UnityEngine::InputSystem::Utilities::CallbackArray_1<::System::Action_2<::UnityEngine::InputSystem::InputControl*, ::UnityEngine::InputSystem::LowLevel::InputEventPtr>*> onUnpairedDeviceUsed;
      // UnityEngine.InputSystem.Utilities.CallbackArray`1<System.Func`3<UnityEngine.InputSystem.InputDevice,UnityEngine.InputSystem.LowLevel.InputEventPtr,System.Boolean>> onPreFilterUnpairedDeviceUsed
      // Size: 0xFFFFFFFF
      // Offset: 0xF8
      ::UnityEngine::InputSystem::Utilities::CallbackArray_1<::System::Func_3<::UnityEngine::InputSystem::InputDevice*, ::UnityEngine::InputSystem::LowLevel::InputEventPtr, bool>*> onPreFilterUnpairedDeviceUsed;
      // System.Action`2<System.Object,UnityEngine.InputSystem.InputActionChange> actionChangeDelegate
      // Size: 0x8
      // Offset: 0x148
      ::System::Action_2<::Il2CppObject*, ::UnityEngine::InputSystem::InputActionChange>* actionChangeDelegate;
      // Field size check
      static_assert(sizeof(::System::Action_2<::Il2CppObject*, ::UnityEngine::InputSystem::InputActionChange>*) == 0x8);
      // System.Action`2<UnityEngine.InputSystem.InputDevice,UnityEngine.InputSystem.InputDeviceChange> onDeviceChangeDelegate
      // Size: 0x8
      // Offset: 0x150
      ::System::Action_2<::UnityEngine::InputSystem::InputDevice*, ::UnityEngine::InputSystem::InputDeviceChange>* onDeviceChangeDelegate;
      // Field size check
      static_assert(sizeof(::System::Action_2<::UnityEngine::InputSystem::InputDevice*, ::UnityEngine::InputSystem::InputDeviceChange>*) == 0x8);
      // System.Action`2<UnityEngine.InputSystem.LowLevel.InputEventPtr,UnityEngine.InputSystem.InputDevice> onEventDelegate
      // Size: 0x8
      // Offset: 0x158
      ::System::Action_2<::UnityEngine::InputSystem::LowLevel::InputEventPtr, ::UnityEngine::InputSystem::InputDevice*>* onEventDelegate;
      // Field size check
      static_assert(sizeof(::System::Action_2<::UnityEngine::InputSystem::LowLevel::InputEventPtr, ::UnityEngine::InputSystem::InputDevice*>*) == 0x8);
      // System.Boolean onActionChangeHooked
      // Size: 0x1
      // Offset: 0x160
      bool onActionChangeHooked;
      // Field size check
      static_assert(sizeof(bool) == 0x1);
      // System.Boolean onDeviceChangeHooked
      // Size: 0x1
      // Offset: 0x161
      bool onDeviceChangeHooked;
      // Field size check
      static_assert(sizeof(bool) == 0x1);
      // System.Boolean onEventHooked
      // Size: 0x1
      // Offset: 0x162
      bool onEventHooked;
      // Field size check
      static_assert(sizeof(bool) == 0x1);
      // System.Int32 listenForUnpairedDeviceActivity
      // Size: 0x4
      // Offset: 0x164
      int listenForUnpairedDeviceActivity;
      // Field size check
      static_assert(sizeof(int) == 0x4);
      public:
      // Creating value type constructor for type: GlobalState
      constexpr GlobalState(int pairingStateVersion_ = {}, uint lastUserId_ = {}, int allUserCount_ = {}, int allPairedDeviceCount_ = {}, int allLostDeviceCount_ = {}, ::ArrayW<::UnityEngine::InputSystem::Users::InputUser> allUsers_ = ::ArrayW<::UnityEngine::InputSystem::Users::InputUser>(static_cast<void*>(nullptr)), ::ArrayW<::UnityEngine::InputSystem::Users::InputUser::UserData> allUserData_ = ::ArrayW<::UnityEngine::InputSystem::Users::InputUser::UserData>(static_cast<void*>(nullptr)), ::ArrayW<::UnityEngine::InputSystem::InputDevice*> allPairedDevices_ = ::ArrayW<::UnityEngine::InputSystem::InputDevice*>(static_cast<void*>(nullptr)), ::ArrayW<::UnityEngine::InputSystem::InputDevice*> allLostDevices_ = ::ArrayW<::UnityEngine::InputSystem::InputDevice*>(static_cast<void*>(nullptr)), ::UnityEngine::InputSystem::Utilities::InlinedArray_1<::UnityEngine::InputSystem::Users::InputUser::OngoingAccountSelection> ongoingAccountSelections_ = {}, ::UnityEngine::InputSystem::Utilities::CallbackArray_1<::System::Action_3<::UnityEngine::InputSystem::Users::InputUser, ::UnityEngine::InputSystem::Users::InputUserChange, ::UnityEngine::InputSystem::InputDevice*>*> onChange_ = {}, ::UnityEngine::InputSystem::Utilities::CallbackArray_1<::System::Action_2<::UnityEngine::InputSystem::InputControl*, ::UnityEngine::InputSystem::LowLevel::InputEventPtr>*> onUnpairedDeviceUsed_ = {}, ::UnityEngine::InputSystem::Utilities::CallbackArray_1<::System::Func_3<::UnityEngine::InputSystem::InputDevice*, ::UnityEngine::InputSystem::LowLevel::InputEventPtr, bool>*> onPreFilterUnpairedDeviceUsed_ = {}, ::System::Action_2<::Il2CppObject*, ::UnityEngine::InputSystem::InputActionChange>* actionChangeDelegate_ = {}, ::System::Action_2<::UnityEngine::InputSystem::InputDevice*, ::UnityEngine::InputSystem::InputDeviceChange>* onDeviceChangeDelegate_ = {}, ::System::Action_2<::UnityEngine::InputSystem::LowLevel::InputEventPtr, ::UnityEngine::InputSystem::InputDevice*>* onEventDelegate_ = {}, bool onActionChangeHooked_ = {}, bool onDeviceChangeHooked_ = {}, bool onEventHooked_ = {}, int listenForUnpairedDeviceActivity_ = {}) noexcept : pairingStateVersion{pairingStateVersion_}, lastUserId{lastUserId_}, allUserCount{allUserCount_}, allPairedDeviceCount{allPairedDeviceCount_}, allLostDeviceCount{allLostDeviceCount_}, allUsers{allUsers_}, allUserData{allUserData_}, allPairedDevices{allPairedDevices_}, allLostDevices{allLostDevices_}, ongoingAccountSelections{ongoingAccountSelections_}, onChange{onChange_}, onUnpairedDeviceUsed{onUnpairedDeviceUsed_}, onPreFilterUnpairedDeviceUsed{onPreFilterUnpairedDeviceUsed_}, actionChangeDelegate{actionChangeDelegate_}, onDeviceChangeDelegate{onDeviceChangeDelegate_}, onEventDelegate{onEventDelegate_}, onActionChangeHooked{onActionChangeHooked_}, onDeviceChangeHooked{onDeviceChangeHooked_}, onEventHooked{onEventHooked_}, listenForUnpairedDeviceActivity{listenForUnpairedDeviceActivity_} {}
      // Creating interface conversion operator: operator ::System::ValueType
      operator ::System::ValueType() noexcept {
        return *reinterpret_cast<::System::ValueType*>(this);
      }
      // Get instance field reference: System.Int32 pairingStateVersion
      [[deprecated("Use field access instead!")]] int& dyn_pairingStateVersion();
      // Get instance field reference: System.UInt32 lastUserId
      [[deprecated("Use field access instead!")]] uint& dyn_lastUserId();
      // Get instance field reference: System.Int32 allUserCount
      [[deprecated("Use field access instead!")]] int& dyn_allUserCount();
      // Get instance field reference: System.Int32 allPairedDeviceCount
      [[deprecated("Use field access instead!")]] int& dyn_allPairedDeviceCount();
      // Get instance field reference: System.Int32 allLostDeviceCount
      [[deprecated("Use field access instead!")]] int& dyn_allLostDeviceCount();
      // Get instance field reference: UnityEngine.InputSystem.Users.InputUser[] allUsers
      [[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::InputSystem::Users::InputUser>& dyn_allUsers();
      // Get instance field reference: UnityEngine.InputSystem.Users.InputUser/UserData[] allUserData
      [[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::InputSystem::Users::InputUser::UserData>& dyn_allUserData();
      // Get instance field reference: UnityEngine.InputSystem.InputDevice[] allPairedDevices
      [[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::InputSystem::InputDevice*>& dyn_allPairedDevices();
      // Get instance field reference: UnityEngine.InputSystem.InputDevice[] allLostDevices
      [[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::InputSystem::InputDevice*>& dyn_allLostDevices();
      // Get instance field reference: UnityEngine.InputSystem.Utilities.InlinedArray`1<UnityEngine.InputSystem.Users.InputUser/OngoingAccountSelection> ongoingAccountSelections
      [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Utilities::InlinedArray_1<::UnityEngine::InputSystem::Users::InputUser::OngoingAccountSelection>& dyn_ongoingAccountSelections();
      // Get instance field reference: UnityEngine.InputSystem.Utilities.CallbackArray`1<System.Action`3<UnityEngine.InputSystem.Users.InputUser,UnityEngine.InputSystem.Users.InputUserChange,UnityEngine.InputSystem.InputDevice>> onChange
      [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Utilities::CallbackArray_1<::System::Action_3<::UnityEngine::InputSystem::Users::InputUser, ::UnityEngine::InputSystem::Users::InputUserChange, ::UnityEngine::InputSystem::InputDevice*>*>& dyn_onChange();
      // Get instance field reference: UnityEngine.InputSystem.Utilities.CallbackArray`1<System.Action`2<UnityEngine.InputSystem.InputControl,UnityEngine.InputSystem.LowLevel.InputEventPtr>> onUnpairedDeviceUsed
      [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Utilities::CallbackArray_1<::System::Action_2<::UnityEngine::InputSystem::InputControl*, ::UnityEngine::InputSystem::LowLevel::InputEventPtr>*>& dyn_onUnpairedDeviceUsed();
      // Get instance field reference: UnityEngine.InputSystem.Utilities.CallbackArray`1<System.Func`3<UnityEngine.InputSystem.InputDevice,UnityEngine.InputSystem.LowLevel.InputEventPtr,System.Boolean>> onPreFilterUnpairedDeviceUsed
      [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Utilities::CallbackArray_1<::System::Func_3<::UnityEngine::InputSystem::InputDevice*, ::UnityEngine::InputSystem::LowLevel::InputEventPtr, bool>*>& dyn_onPreFilterUnpairedDeviceUsed();
      // Get instance field reference: System.Action`2<System.Object,UnityEngine.InputSystem.InputActionChange> actionChangeDelegate
      [[deprecated("Use field access instead!")]] ::System::Action_2<::Il2CppObject*, ::UnityEngine::InputSystem::InputActionChange>*& dyn_actionChangeDelegate();
      // Get instance field reference: System.Action`2<UnityEngine.InputSystem.InputDevice,UnityEngine.InputSystem.InputDeviceChange> onDeviceChangeDelegate
      [[deprecated("Use field access instead!")]] ::System::Action_2<::UnityEngine::InputSystem::InputDevice*, ::UnityEngine::InputSystem::InputDeviceChange>*& dyn_onDeviceChangeDelegate();
      // Get instance field reference: System.Action`2<UnityEngine.InputSystem.LowLevel.InputEventPtr,UnityEngine.InputSystem.InputDevice> onEventDelegate
      [[deprecated("Use field access instead!")]] ::System::Action_2<::UnityEngine::InputSystem::LowLevel::InputEventPtr, ::UnityEngine::InputSystem::InputDevice*>*& dyn_onEventDelegate();
      // Get instance field reference: System.Boolean onActionChangeHooked
      [[deprecated("Use field access instead!")]] bool& dyn_onActionChangeHooked();
      // Get instance field reference: System.Boolean onDeviceChangeHooked
      [[deprecated("Use field access instead!")]] bool& dyn_onDeviceChangeHooked();
      // Get instance field reference: System.Boolean onEventHooked
      [[deprecated("Use field access instead!")]] bool& dyn_onEventHooked();
      // Get instance field reference: System.Int32 listenForUnpairedDeviceActivity
      [[deprecated("Use field access instead!")]] int& dyn_listenForUnpairedDeviceActivity();
    }; // UnityEngine.InputSystem.Users.InputUser/GlobalState
    // WARNING Not writing size check since size may be invalid!
    public:
    // private System.UInt32 m_Id
    // Size: 0x4
    // Offset: 0x0
    uint m_Id;
    // Field size check
    static_assert(sizeof(uint) == 0x4);
    public:
    // Creating value type constructor for type: InputUser
    constexpr InputUser(uint m_Id_ = {}) noexcept : m_Id{m_Id_} {}
    // Creating interface conversion operator: operator ::System::ValueType
    operator ::System::ValueType() noexcept {
      return *reinterpret_cast<::System::ValueType*>(this);
    }
    // Creating interface conversion operator: operator ::System::IEquatable_1<::UnityEngine::InputSystem::Users::InputUser>
    operator ::System::IEquatable_1<::UnityEngine::InputSystem::Users::InputUser>() noexcept {
      return *reinterpret_cast<::System::IEquatable_1<::UnityEngine::InputSystem::Users::InputUser>*>(this);
    }
    // Creating conversion operator: operator uint
    constexpr operator uint() const noexcept {
      return m_Id;
    }
    // static field const value: static public System.UInt32 InvalidId
    static constexpr const uint InvalidId = 0u;
    // Get static field: static public System.UInt32 InvalidId
    static uint _get_InvalidId();
    // Set static field: static public System.UInt32 InvalidId
    static void _set_InvalidId(uint value);
    // Get static field: static private UnityEngine.InputSystem.Users.InputUser/GlobalState s_GlobalState
    static ::UnityEngine::InputSystem::Users::InputUser::GlobalState _get_s_GlobalState();
    // Set static field: static private UnityEngine.InputSystem.Users.InputUser/GlobalState s_GlobalState
    static void _set_s_GlobalState(::UnityEngine::InputSystem::Users::InputUser::GlobalState value);
    // Get instance field reference: private System.UInt32 m_Id
    [[deprecated("Use field access instead!")]] uint& dyn_m_Id();
    // public System.Boolean get_valid()
    // Offset: 0x511DF30
    bool get_valid();
    // public System.Int32 get_index()
    // Offset: 0x512B36C
    int get_index();
    // public System.UInt32 get_id()
    // Offset: 0x512B4E8
    uint get_id();
    // public System.Nullable`1<UnityEngine.InputSystem.Users.InputUserAccountHandle> get_platformUserAccountHandle()
    // Offset: 0x512B4F0
    ::System::Nullable_1<::UnityEngine::InputSystem::Users::InputUserAccountHandle> get_platformUserAccountHandle();
    // public System.String get_platformUserAccountName()
    // Offset: 0x512B580
    ::StringW get_platformUserAccountName();
    // public System.String get_platformUserAccountId()
    // Offset: 0x512B5F8
    ::StringW get_platformUserAccountId();
    // public UnityEngine.InputSystem.Utilities.ReadOnlyArray`1<UnityEngine.InputSystem.InputDevice> get_pairedDevices()
    // Offset: 0x511ECEC
    ::UnityEngine::InputSystem::Utilities::ReadOnlyArray_1<::UnityEngine::InputSystem::InputDevice*> get_pairedDevices();
    // public UnityEngine.InputSystem.Utilities.ReadOnlyArray`1<UnityEngine.InputSystem.InputDevice> get_lostDevices()
    // Offset: 0x512B670
    ::UnityEngine::InputSystem::Utilities::ReadOnlyArray_1<::UnityEngine::InputSystem::InputDevice*> get_lostDevices();
    // public UnityEngine.InputSystem.IInputActionCollection get_actions()
    // Offset: 0x512B71C
    ::UnityEngine::InputSystem::IInputActionCollection* get_actions();
    // public System.Nullable`1<UnityEngine.InputSystem.InputControlScheme> get_controlScheme()
    // Offset: 0x511DFD8
    ::System::Nullable_1<::UnityEngine::InputSystem::InputControlScheme> get_controlScheme();
    // public UnityEngine.InputSystem.InputControlScheme/MatchResult get_controlSchemeMatch()
    // Offset: 0x512B794
    ::UnityEngine::InputSystem::InputControlScheme::MatchResult get_controlSchemeMatch();
    // public System.Boolean get_hasMissingRequiredDevices()
    // Offset: 0x511EDE0
    bool get_hasMissingRequiredDevices();
    // static public UnityEngine.InputSystem.Utilities.ReadOnlyArray`1<UnityEngine.InputSystem.Users.InputUser> get_all()
    // Offset: 0x512B820
    static ::UnityEngine::InputSystem::Utilities::ReadOnlyArray_1<::UnityEngine::InputSystem::Users::InputUser> get_all();
    // static public System.Void add_onChange(System.Action`3<UnityEngine.InputSystem.Users.InputUser,UnityEngine.InputSystem.Users.InputUserChange,UnityEngine.InputSystem.InputDevice> value)
    // Offset: 0x5121EB0
    static void add_onChange(::System::Action_3<::UnityEngine::InputSystem::Users::InputUser, ::UnityEngine::InputSystem::Users::InputUserChange, ::UnityEngine::InputSystem::InputDevice*>* value);
    // static public System.Void remove_onChange(System.Action`3<UnityEngine.InputSystem.Users.InputUser,UnityEngine.InputSystem.Users.InputUserChange,UnityEngine.InputSystem.InputDevice> value)
    // Offset: 0x5122A48
    static void remove_onChange(::System::Action_3<::UnityEngine::InputSystem::Users::InputUser, ::UnityEngine::InputSystem::Users::InputUserChange, ::UnityEngine::InputSystem::InputDevice*>* value);
    // static public System.Void add_onUnpairedDeviceUsed(System.Action`2<UnityEngine.InputSystem.InputControl,UnityEngine.InputSystem.LowLevel.InputEventPtr> value)
    // Offset: 0x5122288
    static void add_onUnpairedDeviceUsed(::System::Action_2<::UnityEngine::InputSystem::InputControl*, ::UnityEngine::InputSystem::LowLevel::InputEventPtr>* value);
    // static public System.Void remove_onUnpairedDeviceUsed(System.Action`2<UnityEngine.InputSystem.InputControl,UnityEngine.InputSystem.LowLevel.InputEventPtr> value)
    // Offset: 0x5122548
    static void remove_onUnpairedDeviceUsed(::System::Action_2<::UnityEngine::InputSystem::InputControl*, ::UnityEngine::InputSystem::LowLevel::InputEventPtr>* value);
    // static public System.Void add_onPrefilterUnpairedDeviceActivity(System.Func`3<UnityEngine.InputSystem.InputDevice,UnityEngine.InputSystem.LowLevel.InputEventPtr,System.Boolean> value)
    // Offset: 0x5122360
    static void add_onPrefilterUnpairedDeviceActivity(::System::Func_3<::UnityEngine::InputSystem::InputDevice*, ::UnityEngine::InputSystem::LowLevel::InputEventPtr, bool>* value);
    // static public System.Void remove_onPrefilterUnpairedDeviceActivity(System.Func`3<UnityEngine.InputSystem.InputDevice,UnityEngine.InputSystem.LowLevel.InputEventPtr,System.Boolean> value)
    // Offset: 0x5122638
    static void remove_onPrefilterUnpairedDeviceActivity(::System::Func_3<::UnityEngine::InputSystem::InputDevice*, ::UnityEngine::InputSystem::LowLevel::InputEventPtr, bool>* value);
    // static public System.Int32 get_listenForUnpairedDeviceActivity()
    // Offset: 0x5122414
    static int get_listenForUnpairedDeviceActivity();
    // static public System.Void set_listenForUnpairedDeviceActivity(System.Int32 value)
    // Offset: 0x512245C
    static void set_listenForUnpairedDeviceActivity(int value);
    // public System.Void AssociateActionsWithUser(UnityEngine.InputSystem.IInputActionCollection actions)
    // Offset: 0x512113C
    void AssociateActionsWithUser(::UnityEngine::InputSystem::IInputActionCollection* actions);
    // public UnityEngine.InputSystem.Users.InputUser/ControlSchemeChangeSyntax ActivateControlScheme(System.String schemeName)
    // Offset: 0x512177C
    ::UnityEngine::InputSystem::Users::InputUser::ControlSchemeChangeSyntax ActivateControlScheme(::StringW schemeName);
    // private System.Boolean TryFindControlScheme(System.String schemeName, out UnityEngine.InputSystem.InputControlScheme scheme)
    // Offset: 0x512C1E8
    bool TryFindControlScheme(::StringW schemeName, ByRef<::UnityEngine::InputSystem::InputControlScheme> scheme);
    // System.Void FindControlScheme(System.String schemeName, out UnityEngine.InputSystem.InputControlScheme scheme)
    // Offset: 0x511F838
    void FindControlScheme(::StringW schemeName, ByRef<::UnityEngine::InputSystem::InputControlScheme> scheme);
    // public UnityEngine.InputSystem.Users.InputUser/ControlSchemeChangeSyntax ActivateControlScheme(UnityEngine.InputSystem.InputControlScheme scheme)
    // Offset: 0x51215C4
    ::UnityEngine::InputSystem::Users::InputUser::ControlSchemeChangeSyntax ActivateControlScheme(::UnityEngine::InputSystem::InputControlScheme scheme);
    // private System.Void ActivateControlSchemeInternal(System.Int32 userIndex, UnityEngine.InputSystem.InputControlScheme scheme)
    // Offset: 0x512BE10
    void ActivateControlSchemeInternal(int userIndex, ::UnityEngine::InputSystem::InputControlScheme scheme);
    // public System.Void UnpairDevice(UnityEngine.InputSystem.InputDevice device)
    // Offset: 0x512385C
    void UnpairDevice(::UnityEngine::InputSystem::InputDevice* device);
    // public System.Void UnpairDevices()
    // Offset: 0x51209BC
    void UnpairDevices();
    // static private System.Void RemoveLostDevicesForUser(System.Int32 userIndex)
    // Offset: 0x512CFB0
    static void RemoveLostDevicesForUser(int userIndex);
    // public System.Void UnpairDevicesAndRemoveUser()
    // Offset: 0x5121534
    void UnpairDevicesAndRemoveUser();
    // static public UnityEngine.InputSystem.InputControlList`1<UnityEngine.InputSystem.InputDevice> GetUnpairedInputDevices()
    // Offset: 0x5120FC4
    static ::UnityEngine::InputSystem::InputControlList_1<::UnityEngine::InputSystem::InputDevice*> GetUnpairedInputDevices();
    // static public System.Int32 GetUnpairedInputDevices(ref UnityEngine.InputSystem.InputControlList`1<UnityEngine.InputSystem.InputDevice> list)
    // Offset: 0x512D814
    static int GetUnpairedInputDevices(ByRef<::UnityEngine::InputSystem::InputControlList_1<::UnityEngine::InputSystem::InputDevice*>> list);
    // static public System.Nullable`1<UnityEngine.InputSystem.Users.InputUser> FindUserPairedToDevice(UnityEngine.InputSystem.InputDevice device)
    // Offset: 0x512DA24
    static ::System::Nullable_1<::UnityEngine::InputSystem::Users::InputUser> FindUserPairedToDevice(::UnityEngine::InputSystem::InputDevice* device);
    // static public System.Nullable`1<UnityEngine.InputSystem.Users.InputUser> FindUserByAccount(UnityEngine.InputSystem.Users.InputUserAccountHandle platformUserAccountHandle)
    // Offset: 0x512DC0C
    static ::System::Nullable_1<::UnityEngine::InputSystem::Users::InputUser> FindUserByAccount(::UnityEngine::InputSystem::Users::InputUserAccountHandle platformUserAccountHandle);
    // static public UnityEngine.InputSystem.Users.InputUser CreateUserWithoutPairedDevices()
    // Offset: 0x5121558
    static ::UnityEngine::InputSystem::Users::InputUser CreateUserWithoutPairedDevices();
    // static public UnityEngine.InputSystem.Users.InputUser PerformPairingWithDevice(UnityEngine.InputSystem.InputDevice device, UnityEngine.InputSystem.Users.InputUser user, UnityEngine.InputSystem.Users.InputUserPairingOptions options)
    // Offset: 0x5120C2C
    static ::UnityEngine::InputSystem::Users::InputUser PerformPairingWithDevice(::UnityEngine::InputSystem::InputDevice* device, ::UnityEngine::InputSystem::Users::InputUser user, ::UnityEngine::InputSystem::Users::InputUserPairingOptions options);
    // static private System.Boolean InitiateUserAccountSelection(System.Int32 userIndex, UnityEngine.InputSystem.InputDevice device, UnityEngine.InputSystem.Users.InputUserPairingOptions options)
    // Offset: 0x512DF24
    static bool InitiateUserAccountSelection(int userIndex, ::UnityEngine::InputSystem::InputDevice* device, ::UnityEngine::InputSystem::Users::InputUserPairingOptions options);
    // public System.Boolean Equals(UnityEngine.InputSystem.Users.InputUser other)
    // Offset: 0x512E9C4
    bool Equals(::UnityEngine::InputSystem::Users::InputUser other);
    // static private System.Int32 AddUser()
    // Offset: 0x512DE28
    static int AddUser();
    // static private System.Void RemoveUser(System.Int32 userIndex)
    // Offset: 0x512D55C
    static void RemoveUser(int userIndex);
    // static private System.Void Notify(System.Int32 userIndex, UnityEngine.InputSystem.Users.InputUserChange change, UnityEngine.InputSystem.InputDevice device)
    // Offset: 0x512C46C
    static void Notify(int userIndex, ::UnityEngine::InputSystem::Users::InputUserChange change, ::UnityEngine::InputSystem::InputDevice* device);
    // static private System.Int32 TryFindUserIndex(System.UInt32 userId)
    // Offset: 0x512B454
    static int TryFindUserIndex(uint userId);
    // static private System.Int32 TryFindUserIndex(UnityEngine.InputSystem.Users.InputUserAccountHandle platformHandle)
    // Offset: 0x512DD44
    static int TryFindUserIndex(::UnityEngine::InputSystem::Users::InputUserAccountHandle platformHandle);
    // static private System.Int32 TryFindUserIndex(UnityEngine.InputSystem.InputDevice device)
    // Offset: 0x512DB20
    static int TryFindUserIndex(::UnityEngine::InputSystem::InputDevice* device);
    // static private System.Void AddDeviceToUser(System.Int32 userIndex, UnityEngine.InputSystem.InputDevice device, System.Boolean asLostDevice, System.Boolean dontUpdateControlScheme)
    // Offset: 0x512E064
    static void AddDeviceToUser(int userIndex, ::UnityEngine::InputSystem::InputDevice* device, bool asLostDevice, bool dontUpdateControlScheme);
    // static private System.Void RemoveDeviceFromUser(System.Int32 userIndex, UnityEngine.InputSystem.InputDevice device, System.Boolean asLostDevice)
    // Offset: 0x512D0DC
    static void RemoveDeviceFromUser(int userIndex, ::UnityEngine::InputSystem::InputDevice* device, bool asLostDevice);
    // static private System.Void UpdateControlSchemeMatch(System.Int32 userIndex, System.Boolean autoPairMissing)
    // Offset: 0x512C774
    static void UpdateControlSchemeMatch(int userIndex, bool autoPairMissing);
    // static private System.Int64 UpdatePlatformUserAccount(System.Int32 userIndex, UnityEngine.InputSystem.InputDevice device)
    // Offset: 0x512E474
    static int64_t UpdatePlatformUserAccount(int userIndex, ::UnityEngine::InputSystem::InputDevice* device);
    // static private System.Int64 QueryPairedPlatformUserAccount(UnityEngine.InputSystem.InputDevice device, out System.Nullable`1<UnityEngine.InputSystem.Users.InputUserAccountHandle> platformAccountHandle, out System.String platformAccountName, out System.String platformAccountId)
    // Offset: 0x512EBAC
    static int64_t QueryPairedPlatformUserAccount(::UnityEngine::InputSystem::InputDevice* device, ByRef<::System::Nullable_1<::UnityEngine::InputSystem::Users::InputUserAccountHandle>> platformAccountHandle, ByRef<::StringW> platformAccountName, ByRef<::StringW> platformAccountId);
    // static private System.Boolean InitiateUserAccountSelectionAtPlatformLevel(UnityEngine.InputSystem.InputDevice device)
    // Offset: 0x512E80C
    static bool InitiateUserAccountSelectionAtPlatformLevel(::UnityEngine::InputSystem::InputDevice* device);
    // static private System.Void OnActionChange(System.Object obj, UnityEngine.InputSystem.InputActionChange change)
    // Offset: 0x512ED68
    static void OnActionChange(::Il2CppObject* obj, ::UnityEngine::InputSystem::InputActionChange change);
    // static private System.Void OnDeviceChange(UnityEngine.InputSystem.InputDevice device, UnityEngine.InputSystem.InputDeviceChange change)
    // Offset: 0x512EE30
    static void OnDeviceChange(::UnityEngine::InputSystem::InputDevice* device, ::UnityEngine::InputSystem::InputDeviceChange change);
    // static private System.Int32 FindLostDevice(UnityEngine.InputSystem.InputDevice device, System.Int32 startIndex)
    // Offset: 0x512F2CC
    static int FindLostDevice(::UnityEngine::InputSystem::InputDevice* device, int startIndex);
    // static private System.Void OnEvent(UnityEngine.InputSystem.LowLevel.InputEventPtr eventPtr, UnityEngine.InputSystem.InputDevice device)
    // Offset: 0x512F384
    static void OnEvent(::UnityEngine::InputSystem::LowLevel::InputEventPtr eventPtr, ::UnityEngine::InputSystem::InputDevice* device);
    // static UnityEngine.InputSystem.Utilities.ISavedState SaveAndResetState()
    // Offset: 0x512F808
    static ::UnityEngine::InputSystem::Utilities::ISavedState* SaveAndResetState();
    // static private System.Void HookIntoActionChange()
    // Offset: 0x512BCF4
    static void HookIntoActionChange();
    // static private System.Void UnhookFromActionChange()
    // Offset: 0x512EAE0
    static void UnhookFromActionChange();
    // static private System.Void HookIntoDeviceChange()
    // Offset: 0x512E8C8
    static void HookIntoDeviceChange();
    // static private System.Void UnhookFromDeviceChange()
    // Offset: 0x512EA54
    static void UnhookFromDeviceChange();
    // static private System.Void HookIntoEvents()
    // Offset: 0x512B8A0
    static void HookIntoEvents();
    // static private System.Void UnhookFromDeviceStateChange()
    // Offset: 0x512B9B0
    static void UnhookFromDeviceStateChange();
    // static private System.Void DisposeAndResetGlobalState()
    // Offset: 0x512F9F8
    static void DisposeAndResetGlobalState();
    // static System.Void ResetGlobals()
    // Offset: 0x512FAB0
    static void ResetGlobals();
    // public override System.String ToString()
    // Offset: 0x512BA58
    // Implemented from: System.ValueType
    // Base method: System.String ValueType::ToString()
    ::StringW ToString();
    // public override System.Boolean Equals(System.Object obj)
    // Offset: 0x512E9D4
    // Implemented from: System.ValueType
    // Base method: System.Boolean ValueType::Equals(System.Object obj)
    bool Equals(::Il2CppObject* obj);
    // public override System.Int32 GetHashCode()
    // Offset: 0x512EA4C
    // Implemented from: System.ValueType
    // Base method: System.Int32 ValueType::GetHashCode()
    int GetHashCode();
  }; // UnityEngine.InputSystem.Users.InputUser
  #pragma pack(pop)
  static check_size<sizeof(InputUser), 0 + sizeof(uint)> __UnityEngine_InputSystem_Users_InputUserSizeCheck;
  static_assert(sizeof(InputUser) == 0x4);
  // static public System.Boolean op_Equality(UnityEngine.InputSystem.Users.InputUser left, UnityEngine.InputSystem.Users.InputUser right)
  // Offset: 0x512305C
  bool operator ==(const ::UnityEngine::InputSystem::Users::InputUser& left, const ::UnityEngine::InputSystem::Users::InputUser& right);
  // static public System.Boolean op_Inequality(UnityEngine.InputSystem.Users.InputUser left, UnityEngine.InputSystem.Users.InputUser right)
  // Offset: 0x512DF18
  bool operator !=(const ::UnityEngine::InputSystem::Users::InputUser& left, const ::UnityEngine::InputSystem::Users::InputUser& right);
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::InputSystem::Users::InputUser::GlobalState, "UnityEngine.InputSystem.Users", "InputUser/GlobalState");
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::InputSystem::Users::InputUser::OngoingAccountSelection, "UnityEngine.InputSystem.Users", "InputUser/OngoingAccountSelection");
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::InputSystem::Users::InputUser::UserData, "UnityEngine.InputSystem.Users", "InputUser/UserData");
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::InputSystem::Users::InputUser::UserFlags, "UnityEngine.InputSystem.Users", "InputUser/UserFlags");
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::InputSystem::Users::InputUser::get_valid
// Il2CppName: get_valid
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::InputSystem::Users::InputUser::*)()>(&UnityEngine::InputSystem::Users::InputUser::get_valid)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Users::InputUser), "get_valid", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Users::InputUser::get_index
// Il2CppName: get_index
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::InputSystem::Users::InputUser::*)()>(&UnityEngine::InputSystem::Users::InputUser::get_index)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Users::InputUser), "get_index", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Users::InputUser::get_id
// Il2CppName: get_id
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (UnityEngine::InputSystem::Users::InputUser::*)()>(&UnityEngine::InputSystem::Users::InputUser::get_id)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Users::InputUser), "get_id", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Users::InputUser::get_platformUserAccountHandle
// Il2CppName: get_platformUserAccountHandle
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Nullable_1<::UnityEngine::InputSystem::Users::InputUserAccountHandle> (UnityEngine::InputSystem::Users::InputUser::*)()>(&UnityEngine::InputSystem::Users::InputUser::get_platformUserAccountHandle)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Users::InputUser), "get_platformUserAccountHandle", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Users::InputUser::get_platformUserAccountName
// Il2CppName: get_platformUserAccountName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (UnityEngine::InputSystem::Users::InputUser::*)()>(&UnityEngine::InputSystem::Users::InputUser::get_platformUserAccountName)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Users::InputUser), "get_platformUserAccountName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Users::InputUser::get_platformUserAccountId
// Il2CppName: get_platformUserAccountId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (UnityEngine::InputSystem::Users::InputUser::*)()>(&UnityEngine::InputSystem::Users::InputUser::get_platformUserAccountId)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Users::InputUser), "get_platformUserAccountId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Users::InputUser::get_pairedDevices
// Il2CppName: get_pairedDevices
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::Utilities::ReadOnlyArray_1<::UnityEngine::InputSystem::InputDevice*> (UnityEngine::InputSystem::Users::InputUser::*)()>(&UnityEngine::InputSystem::Users::InputUser::get_pairedDevices)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Users::InputUser), "get_pairedDevices", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Users::InputUser::get_lostDevices
// Il2CppName: get_lostDevices
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::Utilities::ReadOnlyArray_1<::UnityEngine::InputSystem::InputDevice*> (UnityEngine::InputSystem::Users::InputUser::*)()>(&UnityEngine::InputSystem::Users::InputUser::get_lostDevices)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Users::InputUser), "get_lostDevices", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Users::InputUser::get_actions
// Il2CppName: get_actions
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::IInputActionCollection* (UnityEngine::InputSystem::Users::InputUser::*)()>(&UnityEngine::InputSystem::Users::InputUser::get_actions)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Users::InputUser), "get_actions", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Users::InputUser::get_controlScheme
// Il2CppName: get_controlScheme
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Nullable_1<::UnityEngine::InputSystem::InputControlScheme> (UnityEngine::InputSystem::Users::InputUser::*)()>(&UnityEngine::InputSystem::Users::InputUser::get_controlScheme)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Users::InputUser), "get_controlScheme", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Users::InputUser::get_controlSchemeMatch
// Il2CppName: get_controlSchemeMatch
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::InputControlScheme::MatchResult (UnityEngine::InputSystem::Users::InputUser::*)()>(&UnityEngine::InputSystem::Users::InputUser::get_controlSchemeMatch)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Users::InputUser), "get_controlSchemeMatch", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Users::InputUser::get_hasMissingRequiredDevices
// Il2CppName: get_hasMissingRequiredDevices
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::InputSystem::Users::InputUser::*)()>(&UnityEngine::InputSystem::Users::InputUser::get_hasMissingRequiredDevices)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Users::InputUser), "get_hasMissingRequiredDevices", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Users::InputUser::get_all
// Il2CppName: get_all
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::Utilities::ReadOnlyArray_1<::UnityEngine::InputSystem::Users::InputUser> (*)()>(&UnityEngine::InputSystem::Users::InputUser::get_all)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Users::InputUser), "get_all", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Users::InputUser::add_onChange
// Il2CppName: add_onChange
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::Action_3<::UnityEngine::InputSystem::Users::InputUser, ::UnityEngine::InputSystem::Users::InputUserChange, ::UnityEngine::InputSystem::InputDevice*>*)>(&UnityEngine::InputSystem::Users::InputUser::add_onChange)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`3"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem.Users", "InputUser"), ::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem.Users", "InputUserChange"), ::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputDevice")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Users::InputUser), "add_onChange", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Users::InputUser::remove_onChange
// Il2CppName: remove_onChange
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::Action_3<::UnityEngine::InputSystem::Users::InputUser, ::UnityEngine::InputSystem::Users::InputUserChange, ::UnityEngine::InputSystem::InputDevice*>*)>(&UnityEngine::InputSystem::Users::InputUser::remove_onChange)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`3"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem.Users", "InputUser"), ::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem.Users", "InputUserChange"), ::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputDevice")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Users::InputUser), "remove_onChange", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Users::InputUser::add_onUnpairedDeviceUsed
// Il2CppName: add_onUnpairedDeviceUsed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::Action_2<::UnityEngine::InputSystem::InputControl*, ::UnityEngine::InputSystem::LowLevel::InputEventPtr>*)>(&UnityEngine::InputSystem::Users::InputUser::add_onUnpairedDeviceUsed)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputControl"), ::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem.LowLevel", "InputEventPtr")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Users::InputUser), "add_onUnpairedDeviceUsed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Users::InputUser::remove_onUnpairedDeviceUsed
// Il2CppName: remove_onUnpairedDeviceUsed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::Action_2<::UnityEngine::InputSystem::InputControl*, ::UnityEngine::InputSystem::LowLevel::InputEventPtr>*)>(&UnityEngine::InputSystem::Users::InputUser::remove_onUnpairedDeviceUsed)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputControl"), ::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem.LowLevel", "InputEventPtr")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Users::InputUser), "remove_onUnpairedDeviceUsed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Users::InputUser::add_onPrefilterUnpairedDeviceActivity
// Il2CppName: add_onPrefilterUnpairedDeviceActivity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::Func_3<::UnityEngine::InputSystem::InputDevice*, ::UnityEngine::InputSystem::LowLevel::InputEventPtr, bool>*)>(&UnityEngine::InputSystem::Users::InputUser::add_onPrefilterUnpairedDeviceActivity)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Func`3"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputDevice"), ::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem.LowLevel", "InputEventPtr"), ::il2cpp_utils::GetClassFromName("System", "Boolean")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Users::InputUser), "add_onPrefilterUnpairedDeviceActivity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Users::InputUser::remove_onPrefilterUnpairedDeviceActivity
// Il2CppName: remove_onPrefilterUnpairedDeviceActivity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::Func_3<::UnityEngine::InputSystem::InputDevice*, ::UnityEngine::InputSystem::LowLevel::InputEventPtr, bool>*)>(&UnityEngine::InputSystem::Users::InputUser::remove_onPrefilterUnpairedDeviceActivity)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Func`3"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputDevice"), ::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem.LowLevel", "InputEventPtr"), ::il2cpp_utils::GetClassFromName("System", "Boolean")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Users::InputUser), "remove_onPrefilterUnpairedDeviceActivity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Users::InputUser::get_listenForUnpairedDeviceActivity
// Il2CppName: get_listenForUnpairedDeviceActivity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)()>(&UnityEngine::InputSystem::Users::InputUser::get_listenForUnpairedDeviceActivity)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Users::InputUser), "get_listenForUnpairedDeviceActivity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Users::InputUser::set_listenForUnpairedDeviceActivity
// Il2CppName: set_listenForUnpairedDeviceActivity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int)>(&UnityEngine::InputSystem::Users::InputUser::set_listenForUnpairedDeviceActivity)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Users::InputUser), "set_listenForUnpairedDeviceActivity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Users::InputUser::AssociateActionsWithUser
// Il2CppName: AssociateActionsWithUser
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::Users::InputUser::*)(::UnityEngine::InputSystem::IInputActionCollection*)>(&UnityEngine::InputSystem::Users::InputUser::AssociateActionsWithUser)> {
  static const MethodInfo* get() {
    static auto* actions = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "IInputActionCollection")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Users::InputUser), "AssociateActionsWithUser", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{actions});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Users::InputUser::ActivateControlScheme
// Il2CppName: ActivateControlScheme
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::Users::InputUser::ControlSchemeChangeSyntax (UnityEngine::InputSystem::Users::InputUser::*)(::StringW)>(&UnityEngine::InputSystem::Users::InputUser::ActivateControlScheme)> {
  static const MethodInfo* get() {
    static auto* schemeName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Users::InputUser), "ActivateControlScheme", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{schemeName});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Users::InputUser::TryFindControlScheme
// Il2CppName: TryFindControlScheme
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::InputSystem::Users::InputUser::*)(::StringW, ByRef<::UnityEngine::InputSystem::InputControlScheme>)>(&UnityEngine::InputSystem::Users::InputUser::TryFindControlScheme)> {
  static const MethodInfo* get() {
    static auto* schemeName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* scheme = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputControlScheme")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Users::InputUser), "TryFindControlScheme", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{schemeName, scheme});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Users::InputUser::FindControlScheme
// Il2CppName: FindControlScheme
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::Users::InputUser::*)(::StringW, ByRef<::UnityEngine::InputSystem::InputControlScheme>)>(&UnityEngine::InputSystem::Users::InputUser::FindControlScheme)> {
  static const MethodInfo* get() {
    static auto* schemeName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* scheme = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputControlScheme")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Users::InputUser), "FindControlScheme", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{schemeName, scheme});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Users::InputUser::ActivateControlScheme
// Il2CppName: ActivateControlScheme
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::Users::InputUser::ControlSchemeChangeSyntax (UnityEngine::InputSystem::Users::InputUser::*)(::UnityEngine::InputSystem::InputControlScheme)>(&UnityEngine::InputSystem::Users::InputUser::ActivateControlScheme)> {
  static const MethodInfo* get() {
    static auto* scheme = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputControlScheme")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Users::InputUser), "ActivateControlScheme", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{scheme});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Users::InputUser::ActivateControlSchemeInternal
// Il2CppName: ActivateControlSchemeInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::Users::InputUser::*)(int, ::UnityEngine::InputSystem::InputControlScheme)>(&UnityEngine::InputSystem::Users::InputUser::ActivateControlSchemeInternal)> {
  static const MethodInfo* get() {
    static auto* userIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* scheme = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputControlScheme")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Users::InputUser), "ActivateControlSchemeInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{userIndex, scheme});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Users::InputUser::UnpairDevice
// Il2CppName: UnpairDevice
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::Users::InputUser::*)(::UnityEngine::InputSystem::InputDevice*)>(&UnityEngine::InputSystem::Users::InputUser::UnpairDevice)> {
  static const MethodInfo* get() {
    static auto* device = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputDevice")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Users::InputUser), "UnpairDevice", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{device});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Users::InputUser::UnpairDevices
// Il2CppName: UnpairDevices
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::Users::InputUser::*)()>(&UnityEngine::InputSystem::Users::InputUser::UnpairDevices)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Users::InputUser), "UnpairDevices", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Users::InputUser::RemoveLostDevicesForUser
// Il2CppName: RemoveLostDevicesForUser
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int)>(&UnityEngine::InputSystem::Users::InputUser::RemoveLostDevicesForUser)> {
  static const MethodInfo* get() {
    static auto* userIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Users::InputUser), "RemoveLostDevicesForUser", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{userIndex});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Users::InputUser::UnpairDevicesAndRemoveUser
// Il2CppName: UnpairDevicesAndRemoveUser
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::Users::InputUser::*)()>(&UnityEngine::InputSystem::Users::InputUser::UnpairDevicesAndRemoveUser)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Users::InputUser), "UnpairDevicesAndRemoveUser", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Users::InputUser::GetUnpairedInputDevices
// Il2CppName: GetUnpairedInputDevices
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::InputControlList_1<::UnityEngine::InputSystem::InputDevice*> (*)()>(&UnityEngine::InputSystem::Users::InputUser::GetUnpairedInputDevices)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Users::InputUser), "GetUnpairedInputDevices", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Users::InputUser::GetUnpairedInputDevices
// Il2CppName: GetUnpairedInputDevices
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(ByRef<::UnityEngine::InputSystem::InputControlList_1<::UnityEngine::InputSystem::InputDevice*>>)>(&UnityEngine::InputSystem::Users::InputUser::GetUnpairedInputDevices)> {
  static const MethodInfo* get() {
    static auto* list = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputControlList`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputDevice")})->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Users::InputUser), "GetUnpairedInputDevices", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{list});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Users::InputUser::FindUserPairedToDevice
// Il2CppName: FindUserPairedToDevice
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Nullable_1<::UnityEngine::InputSystem::Users::InputUser> (*)(::UnityEngine::InputSystem::InputDevice*)>(&UnityEngine::InputSystem::Users::InputUser::FindUserPairedToDevice)> {
  static const MethodInfo* get() {
    static auto* device = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputDevice")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Users::InputUser), "FindUserPairedToDevice", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{device});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Users::InputUser::FindUserByAccount
// Il2CppName: FindUserByAccount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Nullable_1<::UnityEngine::InputSystem::Users::InputUser> (*)(::UnityEngine::InputSystem::Users::InputUserAccountHandle)>(&UnityEngine::InputSystem::Users::InputUser::FindUserByAccount)> {
  static const MethodInfo* get() {
    static auto* platformUserAccountHandle = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem.Users", "InputUserAccountHandle")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Users::InputUser), "FindUserByAccount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{platformUserAccountHandle});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Users::InputUser::CreateUserWithoutPairedDevices
// Il2CppName: CreateUserWithoutPairedDevices
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::Users::InputUser (*)()>(&UnityEngine::InputSystem::Users::InputUser::CreateUserWithoutPairedDevices)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Users::InputUser), "CreateUserWithoutPairedDevices", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Users::InputUser::PerformPairingWithDevice
// Il2CppName: PerformPairingWithDevice
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::Users::InputUser (*)(::UnityEngine::InputSystem::InputDevice*, ::UnityEngine::InputSystem::Users::InputUser, ::UnityEngine::InputSystem::Users::InputUserPairingOptions)>(&UnityEngine::InputSystem::Users::InputUser::PerformPairingWithDevice)> {
  static const MethodInfo* get() {
    static auto* device = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputDevice")->byval_arg;
    static auto* user = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem.Users", "InputUser")->byval_arg;
    static auto* options = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem.Users", "InputUserPairingOptions")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Users::InputUser), "PerformPairingWithDevice", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{device, user, options});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Users::InputUser::InitiateUserAccountSelection
// Il2CppName: InitiateUserAccountSelection
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(int, ::UnityEngine::InputSystem::InputDevice*, ::UnityEngine::InputSystem::Users::InputUserPairingOptions)>(&UnityEngine::InputSystem::Users::InputUser::InitiateUserAccountSelection)> {
  static const MethodInfo* get() {
    static auto* userIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* device = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputDevice")->byval_arg;
    static auto* options = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem.Users", "InputUserPairingOptions")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Users::InputUser), "InitiateUserAccountSelection", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{userIndex, device, options});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Users::InputUser::Equals
// Il2CppName: Equals
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::InputSystem::Users::InputUser::*)(::UnityEngine::InputSystem::Users::InputUser)>(&UnityEngine::InputSystem::Users::InputUser::Equals)> {
  static const MethodInfo* get() {
    static auto* other = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem.Users", "InputUser")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Users::InputUser), "Equals", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{other});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Users::InputUser::AddUser
// Il2CppName: AddUser
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)()>(&UnityEngine::InputSystem::Users::InputUser::AddUser)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Users::InputUser), "AddUser", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Users::InputUser::RemoveUser
// Il2CppName: RemoveUser
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int)>(&UnityEngine::InputSystem::Users::InputUser::RemoveUser)> {
  static const MethodInfo* get() {
    static auto* userIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Users::InputUser), "RemoveUser", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{userIndex});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Users::InputUser::Notify
// Il2CppName: Notify
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int, ::UnityEngine::InputSystem::Users::InputUserChange, ::UnityEngine::InputSystem::InputDevice*)>(&UnityEngine::InputSystem::Users::InputUser::Notify)> {
  static const MethodInfo* get() {
    static auto* userIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* change = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem.Users", "InputUserChange")->byval_arg;
    static auto* device = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputDevice")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Users::InputUser), "Notify", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{userIndex, change, device});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Users::InputUser::TryFindUserIndex
// Il2CppName: TryFindUserIndex
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(uint)>(&UnityEngine::InputSystem::Users::InputUser::TryFindUserIndex)> {
  static const MethodInfo* get() {
    static auto* userId = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Users::InputUser), "TryFindUserIndex", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{userId});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Users::InputUser::TryFindUserIndex
// Il2CppName: TryFindUserIndex
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::UnityEngine::InputSystem::Users::InputUserAccountHandle)>(&UnityEngine::InputSystem::Users::InputUser::TryFindUserIndex)> {
  static const MethodInfo* get() {
    static auto* platformHandle = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem.Users", "InputUserAccountHandle")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Users::InputUser), "TryFindUserIndex", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{platformHandle});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Users::InputUser::TryFindUserIndex
// Il2CppName: TryFindUserIndex
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::UnityEngine::InputSystem::InputDevice*)>(&UnityEngine::InputSystem::Users::InputUser::TryFindUserIndex)> {
  static const MethodInfo* get() {
    static auto* device = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputDevice")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Users::InputUser), "TryFindUserIndex", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{device});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Users::InputUser::AddDeviceToUser
// Il2CppName: AddDeviceToUser
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int, ::UnityEngine::InputSystem::InputDevice*, bool, bool)>(&UnityEngine::InputSystem::Users::InputUser::AddDeviceToUser)> {
  static const MethodInfo* get() {
    static auto* userIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* device = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputDevice")->byval_arg;
    static auto* asLostDevice = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* dontUpdateControlScheme = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Users::InputUser), "AddDeviceToUser", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{userIndex, device, asLostDevice, dontUpdateControlScheme});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Users::InputUser::RemoveDeviceFromUser
// Il2CppName: RemoveDeviceFromUser
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int, ::UnityEngine::InputSystem::InputDevice*, bool)>(&UnityEngine::InputSystem::Users::InputUser::RemoveDeviceFromUser)> {
  static const MethodInfo* get() {
    static auto* userIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* device = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputDevice")->byval_arg;
    static auto* asLostDevice = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Users::InputUser), "RemoveDeviceFromUser", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{userIndex, device, asLostDevice});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Users::InputUser::UpdateControlSchemeMatch
// Il2CppName: UpdateControlSchemeMatch
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int, bool)>(&UnityEngine::InputSystem::Users::InputUser::UpdateControlSchemeMatch)> {
  static const MethodInfo* get() {
    static auto* userIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* autoPairMissing = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Users::InputUser), "UpdateControlSchemeMatch", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{userIndex, autoPairMissing});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Users::InputUser::UpdatePlatformUserAccount
// Il2CppName: UpdatePlatformUserAccount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int64_t (*)(int, ::UnityEngine::InputSystem::InputDevice*)>(&UnityEngine::InputSystem::Users::InputUser::UpdatePlatformUserAccount)> {
  static const MethodInfo* get() {
    static auto* userIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* device = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputDevice")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Users::InputUser), "UpdatePlatformUserAccount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{userIndex, device});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Users::InputUser::QueryPairedPlatformUserAccount
// Il2CppName: QueryPairedPlatformUserAccount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int64_t (*)(::UnityEngine::InputSystem::InputDevice*, ByRef<::System::Nullable_1<::UnityEngine::InputSystem::Users::InputUserAccountHandle>>, ByRef<::StringW>, ByRef<::StringW>)>(&UnityEngine::InputSystem::Users::InputUser::QueryPairedPlatformUserAccount)> {
  static const MethodInfo* get() {
    static auto* device = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputDevice")->byval_arg;
    static auto* platformAccountHandle = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Nullable`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem.Users", "InputUserAccountHandle")})->this_arg;
    static auto* platformAccountName = &::il2cpp_utils::GetClassFromName("System", "String")->this_arg;
    static auto* platformAccountId = &::il2cpp_utils::GetClassFromName("System", "String")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Users::InputUser), "QueryPairedPlatformUserAccount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{device, platformAccountHandle, platformAccountName, platformAccountId});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Users::InputUser::InitiateUserAccountSelectionAtPlatformLevel
// Il2CppName: InitiateUserAccountSelectionAtPlatformLevel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::UnityEngine::InputSystem::InputDevice*)>(&UnityEngine::InputSystem::Users::InputUser::InitiateUserAccountSelectionAtPlatformLevel)> {
  static const MethodInfo* get() {
    static auto* device = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputDevice")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Users::InputUser), "InitiateUserAccountSelectionAtPlatformLevel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{device});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Users::InputUser::OnActionChange
// Il2CppName: OnActionChange
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Il2CppObject*, ::UnityEngine::InputSystem::InputActionChange)>(&UnityEngine::InputSystem::Users::InputUser::OnActionChange)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* change = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputActionChange")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Users::InputUser), "OnActionChange", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj, change});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Users::InputUser::OnDeviceChange
// Il2CppName: OnDeviceChange
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::InputSystem::InputDevice*, ::UnityEngine::InputSystem::InputDeviceChange)>(&UnityEngine::InputSystem::Users::InputUser::OnDeviceChange)> {
  static const MethodInfo* get() {
    static auto* device = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputDevice")->byval_arg;
    static auto* change = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputDeviceChange")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Users::InputUser), "OnDeviceChange", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{device, change});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Users::InputUser::FindLostDevice
// Il2CppName: FindLostDevice
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::UnityEngine::InputSystem::InputDevice*, int)>(&UnityEngine::InputSystem::Users::InputUser::FindLostDevice)> {
  static const MethodInfo* get() {
    static auto* device = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputDevice")->byval_arg;
    static auto* startIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Users::InputUser), "FindLostDevice", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{device, startIndex});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Users::InputUser::OnEvent
// Il2CppName: OnEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::InputSystem::LowLevel::InputEventPtr, ::UnityEngine::InputSystem::InputDevice*)>(&UnityEngine::InputSystem::Users::InputUser::OnEvent)> {
  static const MethodInfo* get() {
    static auto* eventPtr = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem.LowLevel", "InputEventPtr")->byval_arg;
    static auto* device = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputDevice")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Users::InputUser), "OnEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{eventPtr, device});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Users::InputUser::SaveAndResetState
// Il2CppName: SaveAndResetState
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::Utilities::ISavedState* (*)()>(&UnityEngine::InputSystem::Users::InputUser::SaveAndResetState)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Users::InputUser), "SaveAndResetState", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Users::InputUser::HookIntoActionChange
// Il2CppName: HookIntoActionChange
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&UnityEngine::InputSystem::Users::InputUser::HookIntoActionChange)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Users::InputUser), "HookIntoActionChange", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Users::InputUser::UnhookFromActionChange
// Il2CppName: UnhookFromActionChange
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&UnityEngine::InputSystem::Users::InputUser::UnhookFromActionChange)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Users::InputUser), "UnhookFromActionChange", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Users::InputUser::HookIntoDeviceChange
// Il2CppName: HookIntoDeviceChange
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&UnityEngine::InputSystem::Users::InputUser::HookIntoDeviceChange)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Users::InputUser), "HookIntoDeviceChange", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Users::InputUser::UnhookFromDeviceChange
// Il2CppName: UnhookFromDeviceChange
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&UnityEngine::InputSystem::Users::InputUser::UnhookFromDeviceChange)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Users::InputUser), "UnhookFromDeviceChange", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Users::InputUser::HookIntoEvents
// Il2CppName: HookIntoEvents
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&UnityEngine::InputSystem::Users::InputUser::HookIntoEvents)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Users::InputUser), "HookIntoEvents", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Users::InputUser::UnhookFromDeviceStateChange
// Il2CppName: UnhookFromDeviceStateChange
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&UnityEngine::InputSystem::Users::InputUser::UnhookFromDeviceStateChange)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Users::InputUser), "UnhookFromDeviceStateChange", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Users::InputUser::DisposeAndResetGlobalState
// Il2CppName: DisposeAndResetGlobalState
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&UnityEngine::InputSystem::Users::InputUser::DisposeAndResetGlobalState)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Users::InputUser), "DisposeAndResetGlobalState", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Users::InputUser::ResetGlobals
// Il2CppName: ResetGlobals
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&UnityEngine::InputSystem::Users::InputUser::ResetGlobals)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Users::InputUser), "ResetGlobals", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Users::InputUser::ToString
// Il2CppName: ToString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (UnityEngine::InputSystem::Users::InputUser::*)()>(&UnityEngine::InputSystem::Users::InputUser::ToString)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Users::InputUser), "ToString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Users::InputUser::Equals
// Il2CppName: Equals
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::InputSystem::Users::InputUser::*)(::Il2CppObject*)>(&UnityEngine::InputSystem::Users::InputUser::Equals)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Users::InputUser), "Equals", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Users::InputUser::GetHashCode
// Il2CppName: GetHashCode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::InputSystem::Users::InputUser::*)()>(&UnityEngine::InputSystem::Users::InputUser::GetHashCode)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Users::InputUser), "GetHashCode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Users::InputUser::operator ==
// Il2CppName: op_Equality
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::InputSystem::Users::InputUser::operator !=
// Il2CppName: op_Inequality
// Cannot perform method pointer template specialization from operators!
