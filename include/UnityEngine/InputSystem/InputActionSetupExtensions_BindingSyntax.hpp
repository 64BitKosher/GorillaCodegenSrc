// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.InputSystem.InputActionSetupExtensions
#include "UnityEngine/InputSystem/InputActionSetupExtensions.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::InputSystem
namespace UnityEngine::InputSystem {
  // Forward declaring type: InputActionMap
  class InputActionMap;
  // Forward declaring type: InputAction
  class InputAction;
  // Forward declaring type: InputBinding
  struct InputBinding;
  // Forward declaring type: IInputInteraction
  class IInputInteraction;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::InputSystem::InputActionSetupExtensions::BindingSyntax, "UnityEngine.InputSystem", "InputActionSetupExtensions/BindingSyntax");
// Type namespace: UnityEngine.InputSystem
namespace UnityEngine::InputSystem {
  // Size: 0x14
  #pragma pack(push, 1)
  // WARNING Layout: Sequential may not be correctly taken into account!
  // Autogenerated type: UnityEngine.InputSystem.InputActionSetupExtensions/BindingSyntax
  // [TokenAttribute] Offset: FFFFFFFF
  struct InputActionSetupExtensions::BindingSyntax/*, public ::System::ValueType*/ {
    public:
    public:
    // private readonly UnityEngine.InputSystem.InputActionMap m_ActionMap
    // Size: 0x8
    // Offset: 0x0
    ::UnityEngine::InputSystem::InputActionMap* m_ActionMap;
    // Field size check
    static_assert(sizeof(::UnityEngine::InputSystem::InputActionMap*) == 0x8);
    // private readonly UnityEngine.InputSystem.InputAction m_Action
    // Size: 0x8
    // Offset: 0x8
    ::UnityEngine::InputSystem::InputAction* m_Action;
    // Field size check
    static_assert(sizeof(::UnityEngine::InputSystem::InputAction*) == 0x8);
    // readonly System.Int32 m_BindingIndexInMap
    // Size: 0x4
    // Offset: 0x10
    int m_BindingIndexInMap;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Creating value type constructor for type: BindingSyntax
    constexpr BindingSyntax(::UnityEngine::InputSystem::InputActionMap* m_ActionMap_ = {}, ::UnityEngine::InputSystem::InputAction* m_Action_ = {}, int m_BindingIndexInMap_ = {}) noexcept : m_ActionMap{m_ActionMap_}, m_Action{m_Action_}, m_BindingIndexInMap{m_BindingIndexInMap_} {}
    // Creating interface conversion operator: operator ::System::ValueType
    operator ::System::ValueType() noexcept {
      return *reinterpret_cast<::System::ValueType*>(this);
    }
    // Get instance field reference: private readonly UnityEngine.InputSystem.InputActionMap m_ActionMap
    [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::InputActionMap*& dyn_m_ActionMap();
    // Get instance field reference: private readonly UnityEngine.InputSystem.InputAction m_Action
    [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::InputAction*& dyn_m_Action();
    // Get instance field reference: readonly System.Int32 m_BindingIndexInMap
    [[deprecated("Use field access instead!")]] int& dyn_m_BindingIndexInMap();
    // public System.Boolean get_valid()
    // Offset: 0x50A34EC
    bool get_valid();
    // public System.Int32 get_bindingIndex()
    // Offset: 0x50A3558
    int get_bindingIndex();
    // public UnityEngine.InputSystem.InputBinding get_binding()
    // Offset: 0x50A3590
    ::UnityEngine::InputSystem::InputBinding get_binding();
    // System.Void .ctor(UnityEngine.InputSystem.InputActionMap map, System.Int32 bindingIndexInMap, UnityEngine.InputSystem.InputAction action)
    // Offset: 0x50A3638
    BindingSyntax(::UnityEngine::InputSystem::InputActionMap* map, int bindingIndexInMap, ::UnityEngine::InputSystem::InputAction* action);
    // public UnityEngine.InputSystem.InputActionSetupExtensions/BindingSyntax WithName(System.String name)
    // Offset: 0x50A3670
    ::UnityEngine::InputSystem::InputActionSetupExtensions::BindingSyntax WithName(::StringW name);
    // public UnityEngine.InputSystem.InputActionSetupExtensions/BindingSyntax WithPath(System.String path)
    // Offset: 0x50A373C
    ::UnityEngine::InputSystem::InputActionSetupExtensions::BindingSyntax WithPath(::StringW path);
    // public UnityEngine.InputSystem.InputActionSetupExtensions/BindingSyntax WithGroup(System.String group)
    // Offset: 0x50A3808
    ::UnityEngine::InputSystem::InputActionSetupExtensions::BindingSyntax WithGroup(::StringW group);
    // public UnityEngine.InputSystem.InputActionSetupExtensions/BindingSyntax WithGroups(System.String groups)
    // Offset: 0x50A39A4
    ::UnityEngine::InputSystem::InputActionSetupExtensions::BindingSyntax WithGroups(::StringW groups);
    // public UnityEngine.InputSystem.InputActionSetupExtensions/BindingSyntax WithInteraction(System.String interaction)
    // Offset: 0x50A3B6C
    ::UnityEngine::InputSystem::InputActionSetupExtensions::BindingSyntax WithInteraction(::StringW interaction);
    // public UnityEngine.InputSystem.InputActionSetupExtensions/BindingSyntax WithInteractions(System.String interactions)
    // Offset: 0x50A3D08
    ::UnityEngine::InputSystem::InputActionSetupExtensions::BindingSyntax WithInteractions(::StringW interactions);
    // public UnityEngine.InputSystem.InputActionSetupExtensions/BindingSyntax WithInteraction()
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class TInteraction>
    ::UnityEngine::InputSystem::InputActionSetupExtensions::BindingSyntax WithInteraction() {
      static_assert(std::is_convertible_v<std::remove_pointer_t<TInteraction>, ::UnityEngine::InputSystem::IInputInteraction>);
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::InputActionSetupExtensions::BindingSyntax::WithInteraction");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "WithInteraction", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TInteraction>::get()}, ::std::vector<const Il2CppType*>{})));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TInteraction>::get()}));
      return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::InputSystem::InputActionSetupExtensions::BindingSyntax, false>(this, ___generic__method);
    }
    // public UnityEngine.InputSystem.InputActionSetupExtensions/BindingSyntax WithProcessor(System.String processor)
    // Offset: 0x50A3ED0
    ::UnityEngine::InputSystem::InputActionSetupExtensions::BindingSyntax WithProcessor(::StringW processor);
    // public UnityEngine.InputSystem.InputActionSetupExtensions/BindingSyntax WithProcessors(System.String processors)
    // Offset: 0x50A406C
    ::UnityEngine::InputSystem::InputActionSetupExtensions::BindingSyntax WithProcessors(::StringW processors);
    // public UnityEngine.InputSystem.InputActionSetupExtensions/BindingSyntax WithProcessor()
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class TProcessor>
    ::UnityEngine::InputSystem::InputActionSetupExtensions::BindingSyntax WithProcessor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::InputActionSetupExtensions::BindingSyntax::WithProcessor");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "WithProcessor", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TProcessor>::get()}, ::std::vector<const Il2CppType*>{})));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TProcessor>::get()}));
      return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::InputSystem::InputActionSetupExtensions::BindingSyntax, false>(this, ___generic__method);
    }
    // public UnityEngine.InputSystem.InputActionSetupExtensions/BindingSyntax Triggering(UnityEngine.InputSystem.InputAction action)
    // Offset: 0x50A4234
    ::UnityEngine::InputSystem::InputActionSetupExtensions::BindingSyntax Triggering(::UnityEngine::InputSystem::InputAction* action);
    // public UnityEngine.InputSystem.InputActionSetupExtensions/BindingSyntax To(UnityEngine.InputSystem.InputBinding binding)
    // Offset: 0x50A43B0
    ::UnityEngine::InputSystem::InputActionSetupExtensions::BindingSyntax To(::UnityEngine::InputSystem::InputBinding binding);
    // public UnityEngine.InputSystem.InputActionSetupExtensions/BindingSyntax NextBinding()
    // Offset: 0x50A44FC
    ::UnityEngine::InputSystem::InputActionSetupExtensions::BindingSyntax NextBinding();
    // public UnityEngine.InputSystem.InputActionSetupExtensions/BindingSyntax PreviousBinding()
    // Offset: 0x50A4614
    ::UnityEngine::InputSystem::InputActionSetupExtensions::BindingSyntax PreviousBinding();
    // public UnityEngine.InputSystem.InputActionSetupExtensions/BindingSyntax NextPartBinding(System.String partName)
    // Offset: 0x50A4648
    ::UnityEngine::InputSystem::InputActionSetupExtensions::BindingSyntax NextPartBinding(::StringW partName);
    // public UnityEngine.InputSystem.InputActionSetupExtensions/BindingSyntax PreviousPartBinding(System.String partName)
    // Offset: 0x50A47F0
    ::UnityEngine::InputSystem::InputActionSetupExtensions::BindingSyntax PreviousPartBinding(::StringW partName);
    // public UnityEngine.InputSystem.InputActionSetupExtensions/BindingSyntax NextCompositeBinding(System.String compositeName)
    // Offset: 0x50A4894
    ::UnityEngine::InputSystem::InputActionSetupExtensions::BindingSyntax NextCompositeBinding(::StringW compositeName);
    // public UnityEngine.InputSystem.InputActionSetupExtensions/BindingSyntax PreviousCompositeBinding(System.String compositeName)
    // Offset: 0x50A49B0
    ::UnityEngine::InputSystem::InputActionSetupExtensions::BindingSyntax PreviousCompositeBinding(::StringW compositeName);
    // private UnityEngine.InputSystem.InputActionSetupExtensions/BindingSyntax Iterate(System.Boolean next)
    // Offset: 0x50A4530
    ::UnityEngine::InputSystem::InputActionSetupExtensions::BindingSyntax Iterate(bool next);
    // private UnityEngine.InputSystem.InputActionSetupExtensions/BindingSyntax IterateCompositeBinding(System.Boolean next, System.String compositeName)
    // Offset: 0x50A48CC
    ::UnityEngine::InputSystem::InputActionSetupExtensions::BindingSyntax IterateCompositeBinding(bool next, ::StringW compositeName);
    // private UnityEngine.InputSystem.InputActionSetupExtensions/BindingSyntax IteratePartBinding(System.Boolean next, System.String partName)
    // Offset: 0x50A46EC
    ::UnityEngine::InputSystem::InputActionSetupExtensions::BindingSyntax IteratePartBinding(bool next, ::StringW partName);
    // public System.Void Erase()
    // Offset: 0x50A4A58
    void Erase();
    // public UnityEngine.InputSystem.InputActionSetupExtensions/BindingSyntax InsertPartBinding(System.String partName, System.String path)
    // Offset: 0x50A4C00
    ::UnityEngine::InputSystem::InputActionSetupExtensions::BindingSyntax InsertPartBinding(::StringW partName, ::StringW path);
  }; // UnityEngine.InputSystem.InputActionSetupExtensions/BindingSyntax
  #pragma pack(pop)
  static check_size<sizeof(InputActionSetupExtensions::BindingSyntax), 16 + sizeof(int)> __UnityEngine_InputSystem_InputActionSetupExtensions_BindingSyntaxSizeCheck;
  static_assert(sizeof(InputActionSetupExtensions::BindingSyntax) == 0x14);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionSetupExtensions::BindingSyntax::get_valid
// Il2CppName: get_valid
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::InputSystem::InputActionSetupExtensions::BindingSyntax::*)()>(&UnityEngine::InputSystem::InputActionSetupExtensions::BindingSyntax::get_valid)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionSetupExtensions::BindingSyntax), "get_valid", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionSetupExtensions::BindingSyntax::get_bindingIndex
// Il2CppName: get_bindingIndex
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::InputSystem::InputActionSetupExtensions::BindingSyntax::*)()>(&UnityEngine::InputSystem::InputActionSetupExtensions::BindingSyntax::get_bindingIndex)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionSetupExtensions::BindingSyntax), "get_bindingIndex", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionSetupExtensions::BindingSyntax::get_binding
// Il2CppName: get_binding
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::InputBinding (UnityEngine::InputSystem::InputActionSetupExtensions::BindingSyntax::*)()>(&UnityEngine::InputSystem::InputActionSetupExtensions::BindingSyntax::get_binding)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionSetupExtensions::BindingSyntax), "get_binding", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionSetupExtensions::BindingSyntax::BindingSyntax
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionSetupExtensions::BindingSyntax::WithName
// Il2CppName: WithName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::InputActionSetupExtensions::BindingSyntax (UnityEngine::InputSystem::InputActionSetupExtensions::BindingSyntax::*)(::StringW)>(&UnityEngine::InputSystem::InputActionSetupExtensions::BindingSyntax::WithName)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionSetupExtensions::BindingSyntax), "WithName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionSetupExtensions::BindingSyntax::WithPath
// Il2CppName: WithPath
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::InputActionSetupExtensions::BindingSyntax (UnityEngine::InputSystem::InputActionSetupExtensions::BindingSyntax::*)(::StringW)>(&UnityEngine::InputSystem::InputActionSetupExtensions::BindingSyntax::WithPath)> {
  static const MethodInfo* get() {
    static auto* path = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionSetupExtensions::BindingSyntax), "WithPath", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{path});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionSetupExtensions::BindingSyntax::WithGroup
// Il2CppName: WithGroup
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::InputActionSetupExtensions::BindingSyntax (UnityEngine::InputSystem::InputActionSetupExtensions::BindingSyntax::*)(::StringW)>(&UnityEngine::InputSystem::InputActionSetupExtensions::BindingSyntax::WithGroup)> {
  static const MethodInfo* get() {
    static auto* group = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionSetupExtensions::BindingSyntax), "WithGroup", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{group});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionSetupExtensions::BindingSyntax::WithGroups
// Il2CppName: WithGroups
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::InputActionSetupExtensions::BindingSyntax (UnityEngine::InputSystem::InputActionSetupExtensions::BindingSyntax::*)(::StringW)>(&UnityEngine::InputSystem::InputActionSetupExtensions::BindingSyntax::WithGroups)> {
  static const MethodInfo* get() {
    static auto* groups = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionSetupExtensions::BindingSyntax), "WithGroups", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{groups});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionSetupExtensions::BindingSyntax::WithInteraction
// Il2CppName: WithInteraction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::InputActionSetupExtensions::BindingSyntax (UnityEngine::InputSystem::InputActionSetupExtensions::BindingSyntax::*)(::StringW)>(&UnityEngine::InputSystem::InputActionSetupExtensions::BindingSyntax::WithInteraction)> {
  static const MethodInfo* get() {
    static auto* interaction = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionSetupExtensions::BindingSyntax), "WithInteraction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interaction});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionSetupExtensions::BindingSyntax::WithInteractions
// Il2CppName: WithInteractions
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::InputActionSetupExtensions::BindingSyntax (UnityEngine::InputSystem::InputActionSetupExtensions::BindingSyntax::*)(::StringW)>(&UnityEngine::InputSystem::InputActionSetupExtensions::BindingSyntax::WithInteractions)> {
  static const MethodInfo* get() {
    static auto* interactions = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionSetupExtensions::BindingSyntax), "WithInteractions", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactions});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionSetupExtensions::BindingSyntax::WithInteraction
// Il2CppName: WithInteraction
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionSetupExtensions::BindingSyntax::WithProcessor
// Il2CppName: WithProcessor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::InputActionSetupExtensions::BindingSyntax (UnityEngine::InputSystem::InputActionSetupExtensions::BindingSyntax::*)(::StringW)>(&UnityEngine::InputSystem::InputActionSetupExtensions::BindingSyntax::WithProcessor)> {
  static const MethodInfo* get() {
    static auto* processor = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionSetupExtensions::BindingSyntax), "WithProcessor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{processor});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionSetupExtensions::BindingSyntax::WithProcessors
// Il2CppName: WithProcessors
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::InputActionSetupExtensions::BindingSyntax (UnityEngine::InputSystem::InputActionSetupExtensions::BindingSyntax::*)(::StringW)>(&UnityEngine::InputSystem::InputActionSetupExtensions::BindingSyntax::WithProcessors)> {
  static const MethodInfo* get() {
    static auto* processors = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionSetupExtensions::BindingSyntax), "WithProcessors", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{processors});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionSetupExtensions::BindingSyntax::WithProcessor
// Il2CppName: WithProcessor
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionSetupExtensions::BindingSyntax::Triggering
// Il2CppName: Triggering
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::InputActionSetupExtensions::BindingSyntax (UnityEngine::InputSystem::InputActionSetupExtensions::BindingSyntax::*)(::UnityEngine::InputSystem::InputAction*)>(&UnityEngine::InputSystem::InputActionSetupExtensions::BindingSyntax::Triggering)> {
  static const MethodInfo* get() {
    static auto* action = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputAction")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionSetupExtensions::BindingSyntax), "Triggering", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{action});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionSetupExtensions::BindingSyntax::To
// Il2CppName: To
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::InputActionSetupExtensions::BindingSyntax (UnityEngine::InputSystem::InputActionSetupExtensions::BindingSyntax::*)(::UnityEngine::InputSystem::InputBinding)>(&UnityEngine::InputSystem::InputActionSetupExtensions::BindingSyntax::To)> {
  static const MethodInfo* get() {
    static auto* binding = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputBinding")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionSetupExtensions::BindingSyntax), "To", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{binding});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionSetupExtensions::BindingSyntax::NextBinding
// Il2CppName: NextBinding
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::InputActionSetupExtensions::BindingSyntax (UnityEngine::InputSystem::InputActionSetupExtensions::BindingSyntax::*)()>(&UnityEngine::InputSystem::InputActionSetupExtensions::BindingSyntax::NextBinding)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionSetupExtensions::BindingSyntax), "NextBinding", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionSetupExtensions::BindingSyntax::PreviousBinding
// Il2CppName: PreviousBinding
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::InputActionSetupExtensions::BindingSyntax (UnityEngine::InputSystem::InputActionSetupExtensions::BindingSyntax::*)()>(&UnityEngine::InputSystem::InputActionSetupExtensions::BindingSyntax::PreviousBinding)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionSetupExtensions::BindingSyntax), "PreviousBinding", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionSetupExtensions::BindingSyntax::NextPartBinding
// Il2CppName: NextPartBinding
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::InputActionSetupExtensions::BindingSyntax (UnityEngine::InputSystem::InputActionSetupExtensions::BindingSyntax::*)(::StringW)>(&UnityEngine::InputSystem::InputActionSetupExtensions::BindingSyntax::NextPartBinding)> {
  static const MethodInfo* get() {
    static auto* partName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionSetupExtensions::BindingSyntax), "NextPartBinding", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{partName});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionSetupExtensions::BindingSyntax::PreviousPartBinding
// Il2CppName: PreviousPartBinding
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::InputActionSetupExtensions::BindingSyntax (UnityEngine::InputSystem::InputActionSetupExtensions::BindingSyntax::*)(::StringW)>(&UnityEngine::InputSystem::InputActionSetupExtensions::BindingSyntax::PreviousPartBinding)> {
  static const MethodInfo* get() {
    static auto* partName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionSetupExtensions::BindingSyntax), "PreviousPartBinding", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{partName});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionSetupExtensions::BindingSyntax::NextCompositeBinding
// Il2CppName: NextCompositeBinding
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::InputActionSetupExtensions::BindingSyntax (UnityEngine::InputSystem::InputActionSetupExtensions::BindingSyntax::*)(::StringW)>(&UnityEngine::InputSystem::InputActionSetupExtensions::BindingSyntax::NextCompositeBinding)> {
  static const MethodInfo* get() {
    static auto* compositeName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionSetupExtensions::BindingSyntax), "NextCompositeBinding", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{compositeName});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionSetupExtensions::BindingSyntax::PreviousCompositeBinding
// Il2CppName: PreviousCompositeBinding
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::InputActionSetupExtensions::BindingSyntax (UnityEngine::InputSystem::InputActionSetupExtensions::BindingSyntax::*)(::StringW)>(&UnityEngine::InputSystem::InputActionSetupExtensions::BindingSyntax::PreviousCompositeBinding)> {
  static const MethodInfo* get() {
    static auto* compositeName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionSetupExtensions::BindingSyntax), "PreviousCompositeBinding", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{compositeName});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionSetupExtensions::BindingSyntax::Iterate
// Il2CppName: Iterate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::InputActionSetupExtensions::BindingSyntax (UnityEngine::InputSystem::InputActionSetupExtensions::BindingSyntax::*)(bool)>(&UnityEngine::InputSystem::InputActionSetupExtensions::BindingSyntax::Iterate)> {
  static const MethodInfo* get() {
    static auto* next = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionSetupExtensions::BindingSyntax), "Iterate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{next});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionSetupExtensions::BindingSyntax::IterateCompositeBinding
// Il2CppName: IterateCompositeBinding
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::InputActionSetupExtensions::BindingSyntax (UnityEngine::InputSystem::InputActionSetupExtensions::BindingSyntax::*)(bool, ::StringW)>(&UnityEngine::InputSystem::InputActionSetupExtensions::BindingSyntax::IterateCompositeBinding)> {
  static const MethodInfo* get() {
    static auto* next = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* compositeName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionSetupExtensions::BindingSyntax), "IterateCompositeBinding", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{next, compositeName});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionSetupExtensions::BindingSyntax::IteratePartBinding
// Il2CppName: IteratePartBinding
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::InputActionSetupExtensions::BindingSyntax (UnityEngine::InputSystem::InputActionSetupExtensions::BindingSyntax::*)(bool, ::StringW)>(&UnityEngine::InputSystem::InputActionSetupExtensions::BindingSyntax::IteratePartBinding)> {
  static const MethodInfo* get() {
    static auto* next = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* partName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionSetupExtensions::BindingSyntax), "IteratePartBinding", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{next, partName});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionSetupExtensions::BindingSyntax::Erase
// Il2CppName: Erase
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::InputActionSetupExtensions::BindingSyntax::*)()>(&UnityEngine::InputSystem::InputActionSetupExtensions::BindingSyntax::Erase)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionSetupExtensions::BindingSyntax), "Erase", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionSetupExtensions::BindingSyntax::InsertPartBinding
// Il2CppName: InsertPartBinding
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::InputActionSetupExtensions::BindingSyntax (UnityEngine::InputSystem::InputActionSetupExtensions::BindingSyntax::*)(::StringW, ::StringW)>(&UnityEngine::InputSystem::InputActionSetupExtensions::BindingSyntax::InsertPartBinding)> {
  static const MethodInfo* get() {
    static auto* partName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* path = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionSetupExtensions::BindingSyntax), "InsertPartBinding", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{partName, path});
  }
};
