// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.ScriptableObject
#include "UnityEngine/ScriptableObject.hpp"
// Including type: UnityEngine.InputSystem.IInputActionCollection2
#include "UnityEngine/InputSystem/IInputActionCollection2.hpp"
// Including type: UnityEngine.InputSystem.InputActionRebindingExtensions/ParameterOverride
#include "UnityEngine/InputSystem/InputActionRebindingExtensions.hpp"
// Including type: UnityEngine.InputSystem.InputActionMap/DeviceArray
#include "UnityEngine/InputSystem/InputActionMap.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::InputSystem
namespace UnityEngine::InputSystem {
  // Skipping declaration: InputActionMap because it is already included!
  // Forward declaring type: InputActionState
  class InputActionState;
  // Forward declaring type: InputDevice
  class InputDevice;
  // Forward declaring type: InputAction
  class InputAction;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: String
  class String;
  // Forward declaring type: Guid
  struct Guid;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Skipping declaration: IEnumerable`1 because it is already included!
  // Skipping declaration: IEnumerator`1 because it is already included!
}
// Forward declaring namespace: System::Collections
namespace System::Collections {
  // Skipping declaration: IEnumerator because it is already included!
}
// Completed forward declares
// Type namespace: UnityEngine.InputSystem
namespace UnityEngine::InputSystem {
  // Forward declaring type: InputActionAsset
  class InputActionAsset;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::InputSystem::InputActionAsset);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::InputSystem::InputActionAsset*, "UnityEngine.InputSystem", "InputActionAsset");
// Type namespace: UnityEngine.InputSystem
namespace UnityEngine::InputSystem {
  // WARNING Size may be invalid!
  // Autogenerated type: UnityEngine.InputSystem.InputActionAsset
  // [TokenAttribute] Offset: FFFFFFFF
  // [DefaultMemberAttribute] Offset: FFFFFFFF
  class InputActionAsset : public ::UnityEngine::ScriptableObject/*, public ::UnityEngine::InputSystem::IInputActionCollection2*/ {
    public:
    // Nested type: ::UnityEngine::InputSystem::InputActionAsset::WriteFileJson
    struct WriteFileJson;
    // Nested type: ::UnityEngine::InputSystem::InputActionAsset::ReadFileJson
    struct ReadFileJson;
    // Nested type: ::UnityEngine::InputSystem::InputActionAsset::$GetEnumerator$d__31
    class $GetEnumerator$d__31;
    // Nested type: ::UnityEngine::InputSystem::InputActionAsset::$get_bindings$d__8
    class $get_bindings$d__8;
    public:
    // UnityEngine.InputSystem.InputActionMap[] m_ActionMaps
    // Size: 0x8
    // Offset: 0x18
    ::ArrayW<::UnityEngine::InputSystem::InputActionMap*> m_ActionMaps;
    // Field size check
    static_assert(sizeof(::ArrayW<::UnityEngine::InputSystem::InputActionMap*>) == 0x8);
    // UnityEngine.InputSystem.InputControlScheme[] m_ControlSchemes
    // Size: 0x8
    // Offset: 0x20
    ::ArrayW<::UnityEngine::InputSystem::InputControlScheme> m_ControlSchemes;
    // Field size check
    static_assert(sizeof(::ArrayW<::UnityEngine::InputSystem::InputControlScheme>) == 0x8);
    // UnityEngine.InputSystem.InputActionState m_SharedStateForAllMaps
    // Size: 0x8
    // Offset: 0x28
    ::UnityEngine::InputSystem::InputActionState* m_SharedStateForAllMaps;
    // Field size check
    static_assert(sizeof(::UnityEngine::InputSystem::InputActionState*) == 0x8);
    // System.Nullable`1<UnityEngine.InputSystem.InputBinding> m_BindingMask
    // Size: 0xFFFFFFFF
    // Offset: 0x30
    ::System::Nullable_1<::UnityEngine::InputSystem::InputBinding> m_BindingMask;
    // System.Int32 m_ParameterOverridesCount
    // Size: 0x4
    // Offset: 0x90
    int m_ParameterOverridesCount;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // UnityEngine.InputSystem.InputActionRebindingExtensions/ParameterOverride[] m_ParameterOverrides
    // Size: 0x8
    // Offset: 0x98
    ::ArrayW<::UnityEngine::InputSystem::InputActionRebindingExtensions::ParameterOverride> m_ParameterOverrides;
    // Field size check
    static_assert(sizeof(::ArrayW<::UnityEngine::InputSystem::InputActionRebindingExtensions::ParameterOverride>) == 0x8);
    // UnityEngine.InputSystem.InputActionMap/DeviceArray m_Devices
    // Size: 0x10
    // Offset: 0xA0
    ::UnityEngine::InputSystem::InputActionMap::DeviceArray m_Devices;
    // Field size check
    static_assert(sizeof(::UnityEngine::InputSystem::InputActionMap::DeviceArray) == 0x10);
    public:
    // Creating interface conversion operator: operator ::UnityEngine::InputSystem::IInputActionCollection2
    operator ::UnityEngine::InputSystem::IInputActionCollection2() noexcept {
      return *reinterpret_cast<::UnityEngine::InputSystem::IInputActionCollection2*>(this);
    }
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // static field const value: static public System.String Extension
    static constexpr const char* Extension = "inputactions";
    // Get static field: static public System.String Extension
    static ::StringW _get_Extension();
    // Set static field: static public System.String Extension
    static void _set_Extension(::StringW value);
    // Get instance field reference: UnityEngine.InputSystem.InputActionMap[] m_ActionMaps
    [[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::InputSystem::InputActionMap*>& dyn_m_ActionMaps();
    // Get instance field reference: UnityEngine.InputSystem.InputControlScheme[] m_ControlSchemes
    [[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::InputSystem::InputControlScheme>& dyn_m_ControlSchemes();
    // Get instance field reference: UnityEngine.InputSystem.InputActionState m_SharedStateForAllMaps
    [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::InputActionState*& dyn_m_SharedStateForAllMaps();
    // Get instance field reference: System.Nullable`1<UnityEngine.InputSystem.InputBinding> m_BindingMask
    [[deprecated("Use field access instead!")]] ::System::Nullable_1<::UnityEngine::InputSystem::InputBinding>& dyn_m_BindingMask();
    // Get instance field reference: System.Int32 m_ParameterOverridesCount
    [[deprecated("Use field access instead!")]] int& dyn_m_ParameterOverridesCount();
    // Get instance field reference: UnityEngine.InputSystem.InputActionRebindingExtensions/ParameterOverride[] m_ParameterOverrides
    [[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::InputSystem::InputActionRebindingExtensions::ParameterOverride>& dyn_m_ParameterOverrides();
    // Get instance field reference: UnityEngine.InputSystem.InputActionMap/DeviceArray m_Devices
    [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::InputActionMap::DeviceArray& dyn_m_Devices();
    // public System.Boolean get_enabled()
    // Offset: 0x5090080
    bool get_enabled();
    // public UnityEngine.InputSystem.Utilities.ReadOnlyArray`1<UnityEngine.InputSystem.InputActionMap> get_actionMaps()
    // Offset: 0x5090214
    ::UnityEngine::InputSystem::Utilities::ReadOnlyArray_1<::UnityEngine::InputSystem::InputActionMap*> get_actionMaps();
    // public UnityEngine.InputSystem.Utilities.ReadOnlyArray`1<UnityEngine.InputSystem.InputControlScheme> get_controlSchemes()
    // Offset: 0x5090284
    ::UnityEngine::InputSystem::Utilities::ReadOnlyArray_1<::UnityEngine::InputSystem::InputControlScheme> get_controlSchemes();
    // public System.Collections.Generic.IEnumerable`1<UnityEngine.InputSystem.InputBinding> get_bindings()
    // Offset: 0x50902E4
    ::System::Collections::Generic::IEnumerable_1<::UnityEngine::InputSystem::InputBinding>* get_bindings();
    // public System.Nullable`1<UnityEngine.InputSystem.InputBinding> get_bindingMask()
    // Offset: 0x5090394
    ::System::Nullable_1<::UnityEngine::InputSystem::InputBinding> get_bindingMask();
    // public System.Void set_bindingMask(System.Nullable`1<UnityEngine.InputSystem.InputBinding> value)
    // Offset: 0x50903A4
    void set_bindingMask(::System::Nullable_1<::UnityEngine::InputSystem::InputBinding> value);
    // public System.Nullable`1<UnityEngine.InputSystem.Utilities.ReadOnlyArray`1<UnityEngine.InputSystem.InputDevice>> get_devices()
    // Offset: 0x5090518
    ::System::Nullable_1<::UnityEngine::InputSystem::Utilities::ReadOnlyArray_1<::UnityEngine::InputSystem::InputDevice*>> get_devices();
    // public System.Void set_devices(System.Nullable`1<UnityEngine.InputSystem.Utilities.ReadOnlyArray`1<UnityEngine.InputSystem.InputDevice>> value)
    // Offset: 0x50905F4
    void set_devices(::System::Nullable_1<::UnityEngine::InputSystem::Utilities::ReadOnlyArray_1<::UnityEngine::InputSystem::InputDevice*>> value);
    // public UnityEngine.InputSystem.InputAction get_Item(System.String actionNameOrId)
    // Offset: 0x50907B4
    ::UnityEngine::InputSystem::InputAction* get_Item(::StringW actionNameOrId);
    // public System.String ToJson()
    // Offset: 0x5090B50
    ::StringW ToJson();
    // public System.Void LoadFromJson(System.String json)
    // Offset: 0x5090FCC
    void LoadFromJson(::StringW json);
    // static public UnityEngine.InputSystem.InputActionAsset FromJson(System.String json)
    // Offset: 0x5091178
    static ::UnityEngine::InputSystem::InputActionAsset* FromJson(::StringW json);
    // public UnityEngine.InputSystem.InputAction FindAction(System.String actionNameOrId, System.Boolean throwIfNotFound)
    // Offset: 0x5090834
    ::UnityEngine::InputSystem::InputAction* FindAction(::StringW actionNameOrId, bool throwIfNotFound);
    // public System.Int32 FindBinding(UnityEngine.InputSystem.InputBinding mask, out UnityEngine.InputSystem.InputAction action)
    // Offset: 0x5091344
    int FindBinding(::UnityEngine::InputSystem::InputBinding mask, ByRef<::UnityEngine::InputSystem::InputAction*> action);
    // public UnityEngine.InputSystem.InputActionMap FindActionMap(System.String nameOrId, System.Boolean throwIfNotFound)
    // Offset: 0x5091534
    ::UnityEngine::InputSystem::InputActionMap* FindActionMap(::StringW nameOrId, bool throwIfNotFound);
    // public UnityEngine.InputSystem.InputActionMap FindActionMap(System.Guid id)
    // Offset: 0x509173C
    ::UnityEngine::InputSystem::InputActionMap* FindActionMap(::System::Guid id);
    // public UnityEngine.InputSystem.InputAction FindAction(System.Guid guid)
    // Offset: 0x50917C8
    ::UnityEngine::InputSystem::InputAction* FindAction(::System::Guid guid);
    // public System.Int32 FindControlSchemeIndex(System.String name)
    // Offset: 0x509188C
    int FindControlSchemeIndex(::StringW name);
    // public System.Nullable`1<UnityEngine.InputSystem.InputControlScheme> FindControlScheme(System.String name)
    // Offset: 0x5091964
    ::System::Nullable_1<::UnityEngine::InputSystem::InputControlScheme> FindControlScheme(::StringW name);
    // public System.Boolean IsUsableWithDevice(UnityEngine.InputSystem.InputDevice device)
    // Offset: 0x5091A90
    bool IsUsableWithDevice(::UnityEngine::InputSystem::InputDevice* device);
    // public System.Void Enable()
    // Offset: 0x5091D14
    void Enable();
    // public System.Void Disable()
    // Offset: 0x5091EC0
    void Disable();
    // public System.Boolean Contains(UnityEngine.InputSystem.InputAction action)
    // Offset: 0x5092054
    bool Contains(::UnityEngine::InputSystem::InputAction* action);
    // public System.Collections.Generic.IEnumerator`1<UnityEngine.InputSystem.InputAction> GetEnumerator()
    // Offset: 0x50920E0
    ::System::Collections::Generic::IEnumerator_1<::UnityEngine::InputSystem::InputAction*>* GetEnumerator();
    // private System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()
    // Offset: 0x5092174
    ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator();
    // System.Void MarkAsDirty()
    // Offset: 0x5092178
    void MarkAsDirty();
    // System.Void OnWantToChangeSetup()
    // Offset: 0x509217C
    void OnWantToChangeSetup();
    // System.Void OnSetupChanged()
    // Offset: 0x509247C
    void OnSetupChanged();
    // private System.Void ReResolveIfNecessary(System.Boolean fullResolve)
    // Offset: 0x50904D8
    void ReResolveIfNecessary(bool fullResolve);
    // System.Void ResolveBindingsIfNecessary()
    // Offset: 0x50926E4
    void ResolveBindingsIfNecessary();
    // private System.Void OnDestroy()
    // Offset: 0x5092784
    void OnDestroy();
    // public System.Void .ctor()
    // Offset: 0x50927BC
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static InputActionAsset* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::InputActionAsset::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<InputActionAsset*, creationType>()));
    }
  }; // UnityEngine.InputSystem.InputActionAsset
  // WARNING Not writing size check since size may be invalid!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionAsset::get_enabled
// Il2CppName: get_enabled
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::InputSystem::InputActionAsset::*)()>(&UnityEngine::InputSystem::InputActionAsset::get_enabled)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionAsset*), "get_enabled", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionAsset::get_actionMaps
// Il2CppName: get_actionMaps
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::Utilities::ReadOnlyArray_1<::UnityEngine::InputSystem::InputActionMap*> (UnityEngine::InputSystem::InputActionAsset::*)()>(&UnityEngine::InputSystem::InputActionAsset::get_actionMaps)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionAsset*), "get_actionMaps", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionAsset::get_controlSchemes
// Il2CppName: get_controlSchemes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::Utilities::ReadOnlyArray_1<::UnityEngine::InputSystem::InputControlScheme> (UnityEngine::InputSystem::InputActionAsset::*)()>(&UnityEngine::InputSystem::InputActionAsset::get_controlSchemes)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionAsset*), "get_controlSchemes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionAsset::get_bindings
// Il2CppName: get_bindings
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::IEnumerable_1<::UnityEngine::InputSystem::InputBinding>* (UnityEngine::InputSystem::InputActionAsset::*)()>(&UnityEngine::InputSystem::InputActionAsset::get_bindings)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionAsset*), "get_bindings", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionAsset::get_bindingMask
// Il2CppName: get_bindingMask
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Nullable_1<::UnityEngine::InputSystem::InputBinding> (UnityEngine::InputSystem::InputActionAsset::*)()>(&UnityEngine::InputSystem::InputActionAsset::get_bindingMask)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionAsset*), "get_bindingMask", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionAsset::set_bindingMask
// Il2CppName: set_bindingMask
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::InputActionAsset::*)(::System::Nullable_1<::UnityEngine::InputSystem::InputBinding>)>(&UnityEngine::InputSystem::InputActionAsset::set_bindingMask)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Nullable`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputBinding")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionAsset*), "set_bindingMask", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionAsset::get_devices
// Il2CppName: get_devices
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Nullable_1<::UnityEngine::InputSystem::Utilities::ReadOnlyArray_1<::UnityEngine::InputSystem::InputDevice*>> (UnityEngine::InputSystem::InputActionAsset::*)()>(&UnityEngine::InputSystem::InputActionAsset::get_devices)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionAsset*), "get_devices", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionAsset::set_devices
// Il2CppName: set_devices
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::InputActionAsset::*)(::System::Nullable_1<::UnityEngine::InputSystem::Utilities::ReadOnlyArray_1<::UnityEngine::InputSystem::InputDevice*>>)>(&UnityEngine::InputSystem::InputActionAsset::set_devices)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Nullable`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem.Utilities", "ReadOnlyArray`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputDevice")})})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionAsset*), "set_devices", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionAsset::get_Item
// Il2CppName: get_Item
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::InputAction* (UnityEngine::InputSystem::InputActionAsset::*)(::StringW)>(&UnityEngine::InputSystem::InputActionAsset::get_Item)> {
  static const MethodInfo* get() {
    static auto* actionNameOrId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionAsset*), "get_Item", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{actionNameOrId});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionAsset::ToJson
// Il2CppName: ToJson
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (UnityEngine::InputSystem::InputActionAsset::*)()>(&UnityEngine::InputSystem::InputActionAsset::ToJson)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionAsset*), "ToJson", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionAsset::LoadFromJson
// Il2CppName: LoadFromJson
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::InputActionAsset::*)(::StringW)>(&UnityEngine::InputSystem::InputActionAsset::LoadFromJson)> {
  static const MethodInfo* get() {
    static auto* json = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionAsset*), "LoadFromJson", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{json});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionAsset::FromJson
// Il2CppName: FromJson
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::InputActionAsset* (*)(::StringW)>(&UnityEngine::InputSystem::InputActionAsset::FromJson)> {
  static const MethodInfo* get() {
    static auto* json = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionAsset*), "FromJson", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{json});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionAsset::FindAction
// Il2CppName: FindAction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::InputAction* (UnityEngine::InputSystem::InputActionAsset::*)(::StringW, bool)>(&UnityEngine::InputSystem::InputActionAsset::FindAction)> {
  static const MethodInfo* get() {
    static auto* actionNameOrId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* throwIfNotFound = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionAsset*), "FindAction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{actionNameOrId, throwIfNotFound});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionAsset::FindBinding
// Il2CppName: FindBinding
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::InputSystem::InputActionAsset::*)(::UnityEngine::InputSystem::InputBinding, ByRef<::UnityEngine::InputSystem::InputAction*>)>(&UnityEngine::InputSystem::InputActionAsset::FindBinding)> {
  static const MethodInfo* get() {
    static auto* mask = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputBinding")->byval_arg;
    static auto* action = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputAction")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionAsset*), "FindBinding", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{mask, action});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionAsset::FindActionMap
// Il2CppName: FindActionMap
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::InputActionMap* (UnityEngine::InputSystem::InputActionAsset::*)(::StringW, bool)>(&UnityEngine::InputSystem::InputActionAsset::FindActionMap)> {
  static const MethodInfo* get() {
    static auto* nameOrId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* throwIfNotFound = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionAsset*), "FindActionMap", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{nameOrId, throwIfNotFound});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionAsset::FindActionMap
// Il2CppName: FindActionMap
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::InputActionMap* (UnityEngine::InputSystem::InputActionAsset::*)(::System::Guid)>(&UnityEngine::InputSystem::InputActionAsset::FindActionMap)> {
  static const MethodInfo* get() {
    static auto* id = &::il2cpp_utils::GetClassFromName("System", "Guid")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionAsset*), "FindActionMap", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{id});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionAsset::FindAction
// Il2CppName: FindAction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::InputAction* (UnityEngine::InputSystem::InputActionAsset::*)(::System::Guid)>(&UnityEngine::InputSystem::InputActionAsset::FindAction)> {
  static const MethodInfo* get() {
    static auto* guid = &::il2cpp_utils::GetClassFromName("System", "Guid")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionAsset*), "FindAction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{guid});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionAsset::FindControlSchemeIndex
// Il2CppName: FindControlSchemeIndex
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::InputSystem::InputActionAsset::*)(::StringW)>(&UnityEngine::InputSystem::InputActionAsset::FindControlSchemeIndex)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionAsset*), "FindControlSchemeIndex", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionAsset::FindControlScheme
// Il2CppName: FindControlScheme
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Nullable_1<::UnityEngine::InputSystem::InputControlScheme> (UnityEngine::InputSystem::InputActionAsset::*)(::StringW)>(&UnityEngine::InputSystem::InputActionAsset::FindControlScheme)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionAsset*), "FindControlScheme", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionAsset::IsUsableWithDevice
// Il2CppName: IsUsableWithDevice
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::InputSystem::InputActionAsset::*)(::UnityEngine::InputSystem::InputDevice*)>(&UnityEngine::InputSystem::InputActionAsset::IsUsableWithDevice)> {
  static const MethodInfo* get() {
    static auto* device = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputDevice")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionAsset*), "IsUsableWithDevice", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{device});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionAsset::Enable
// Il2CppName: Enable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::InputActionAsset::*)()>(&UnityEngine::InputSystem::InputActionAsset::Enable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionAsset*), "Enable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionAsset::Disable
// Il2CppName: Disable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::InputActionAsset::*)()>(&UnityEngine::InputSystem::InputActionAsset::Disable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionAsset*), "Disable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionAsset::Contains
// Il2CppName: Contains
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::InputSystem::InputActionAsset::*)(::UnityEngine::InputSystem::InputAction*)>(&UnityEngine::InputSystem::InputActionAsset::Contains)> {
  static const MethodInfo* get() {
    static auto* action = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputAction")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionAsset*), "Contains", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{action});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionAsset::GetEnumerator
// Il2CppName: GetEnumerator
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::IEnumerator_1<::UnityEngine::InputSystem::InputAction*>* (UnityEngine::InputSystem::InputActionAsset::*)()>(&UnityEngine::InputSystem::InputActionAsset::GetEnumerator)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionAsset*), "GetEnumerator", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionAsset::System_Collections_IEnumerable_GetEnumerator
// Il2CppName: System.Collections.IEnumerable.GetEnumerator
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::IEnumerator* (UnityEngine::InputSystem::InputActionAsset::*)()>(&UnityEngine::InputSystem::InputActionAsset::System_Collections_IEnumerable_GetEnumerator)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionAsset*), "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionAsset::MarkAsDirty
// Il2CppName: MarkAsDirty
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::InputActionAsset::*)()>(&UnityEngine::InputSystem::InputActionAsset::MarkAsDirty)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionAsset*), "MarkAsDirty", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionAsset::OnWantToChangeSetup
// Il2CppName: OnWantToChangeSetup
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::InputActionAsset::*)()>(&UnityEngine::InputSystem::InputActionAsset::OnWantToChangeSetup)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionAsset*), "OnWantToChangeSetup", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionAsset::OnSetupChanged
// Il2CppName: OnSetupChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::InputActionAsset::*)()>(&UnityEngine::InputSystem::InputActionAsset::OnSetupChanged)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionAsset*), "OnSetupChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionAsset::ReResolveIfNecessary
// Il2CppName: ReResolveIfNecessary
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::InputActionAsset::*)(bool)>(&UnityEngine::InputSystem::InputActionAsset::ReResolveIfNecessary)> {
  static const MethodInfo* get() {
    static auto* fullResolve = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionAsset*), "ReResolveIfNecessary", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{fullResolve});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionAsset::ResolveBindingsIfNecessary
// Il2CppName: ResolveBindingsIfNecessary
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::InputActionAsset::*)()>(&UnityEngine::InputSystem::InputActionAsset::ResolveBindingsIfNecessary)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionAsset*), "ResolveBindingsIfNecessary", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionAsset::OnDestroy
// Il2CppName: OnDestroy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::InputActionAsset::*)()>(&UnityEngine::InputSystem::InputActionAsset::OnDestroy)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionAsset*), "OnDestroy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionAsset::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
