// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.InputSystem.Controls.DpadControl
#include "UnityEngine/InputSystem/Controls/DpadControl.hpp"
// Including type: UnityEngine.InputSystem.Controls.AxisControl
#include "UnityEngine/InputSystem/Controls/AxisControl.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::InputSystem::Controls::DpadControl::DpadAxisControl);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::InputSystem::Controls::DpadControl::DpadAxisControl*, "UnityEngine.InputSystem.Controls", "DpadControl/DpadAxisControl");
// Type namespace: UnityEngine.InputSystem.Controls
namespace UnityEngine::InputSystem::Controls {
  // WARNING Size may be invalid!
  // Autogenerated type: UnityEngine.InputSystem.Controls.DpadControl/DpadAxisControl
  // [TokenAttribute] Offset: FFFFFFFF
  // [InputControlLayoutAttribute] Offset: FFFFFFFF
  class DpadControl::DpadAxisControl : public ::UnityEngine::InputSystem::Controls::AxisControl {
    public:
    public:
    // private System.Int32 <component>k__BackingField
    // Size: 0x4
    // Offset: 0x12C
    int component;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Creating conversion operator: operator int
    constexpr operator int() const noexcept {
      return component;
    }
    // Get instance field reference: private System.Int32 <component>k__BackingField
    [[deprecated("Use field access instead!")]] int& dyn_$component$k__BackingField();
    // public System.Int32 get_component()
    // Offset: 0x516D0F8
    int get_component();
    // public System.Void set_component(System.Int32 value)
    // Offset: 0x516D100
    void set_component(int value);
    // protected override System.Void FinishSetup()
    // Offset: 0x516D108
    // Implemented from: UnityEngine.InputSystem.Controls.AxisControl
    // Base method: System.Void AxisControl::FinishSetup()
    void FinishSetup();
    // public override System.Single ReadUnprocessedValueFromState(System.Void* statePtr)
    // Offset: 0x516D18C
    // Implemented from: UnityEngine.InputSystem.Controls.AxisControl
    // Base method: System.Single AxisControl::ReadUnprocessedValueFromState(System.Void* statePtr)
    float ReadUnprocessedValueFromState(void* statePtr);
    // public System.Void .ctor()
    // Offset: 0x516D278
    // Implemented from: UnityEngine.InputSystem.Controls.AxisControl
    // Base method: System.Void AxisControl::.ctor()
    // Base method: System.Void InputControl_1::.ctor()
    // Base method: System.Void InputControl::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static DpadControl::DpadAxisControl* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::Controls::DpadControl::DpadAxisControl::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<DpadControl::DpadAxisControl*, creationType>()));
    }
  }; // UnityEngine.InputSystem.Controls.DpadControl/DpadAxisControl
  // WARNING Not writing size check since size may be invalid!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::InputSystem::Controls::DpadControl::DpadAxisControl::get_component
// Il2CppName: get_component
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::InputSystem::Controls::DpadControl::DpadAxisControl::*)()>(&UnityEngine::InputSystem::Controls::DpadControl::DpadAxisControl::get_component)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Controls::DpadControl::DpadAxisControl*), "get_component", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Controls::DpadControl::DpadAxisControl::set_component
// Il2CppName: set_component
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::Controls::DpadControl::DpadAxisControl::*)(int)>(&UnityEngine::InputSystem::Controls::DpadControl::DpadAxisControl::set_component)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Controls::DpadControl::DpadAxisControl*), "set_component", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Controls::DpadControl::DpadAxisControl::FinishSetup
// Il2CppName: FinishSetup
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::Controls::DpadControl::DpadAxisControl::*)()>(&UnityEngine::InputSystem::Controls::DpadControl::DpadAxisControl::FinishSetup)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Controls::DpadControl::DpadAxisControl*), "FinishSetup", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Controls::DpadControl::DpadAxisControl::ReadUnprocessedValueFromState
// Il2CppName: ReadUnprocessedValueFromState
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::InputSystem::Controls::DpadControl::DpadAxisControl::*)(void*)>(&UnityEngine::InputSystem::Controls::DpadControl::DpadAxisControl::ReadUnprocessedValueFromState)> {
  static const MethodInfo* get() {
    static auto* statePtr = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Void"))->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Controls::DpadControl::DpadAxisControl*), "ReadUnprocessedValueFromState", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{statePtr});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Controls::DpadControl::DpadAxisControl::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
