// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.InputSystem.InputControlExtensions
#include "UnityEngine/InputSystem/InputControlExtensions.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: UnityEngine.InputSystem.LowLevel.InputEventPtr
#include "UnityEngine/InputSystem/LowLevel/InputEventPtr.hpp"
// Including type: UnityEngine.InputSystem.InputControlExtensions/Enumerate
#include "UnityEngine/InputSystem/InputControlExtensions_Enumerate.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::InputSystem
namespace UnityEngine::InputSystem {
  // Forward declaring type: InputControl
  class InputControl;
  // Forward declaring type: InputDevice
  class InputDevice;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: IEnumerator`1<T>
  template<typename T>
  class IEnumerator_1;
}
// Forward declaring namespace: System::Collections
namespace System::Collections {
  // Forward declaring type: IEnumerator
  class IEnumerator;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::InputSystem::InputControlExtensions::InputEventControlCollection, "UnityEngine.InputSystem", "InputControlExtensions/InputEventControlCollection");
// Type namespace: UnityEngine.InputSystem
namespace UnityEngine::InputSystem {
  // Size: 0x18
  #pragma pack(push, 1)
  // WARNING Layout: Sequential may not be correctly taken into account!
  // Autogenerated type: UnityEngine.InputSystem.InputControlExtensions/InputEventControlCollection
  // [TokenAttribute] Offset: FFFFFFFF
  struct InputControlExtensions::InputEventControlCollection/*, public ::System::ValueType, public ::System::Collections::Generic::IEnumerable_1<::UnityEngine::InputSystem::InputControl*>*/ {
    public:
    public:
    // UnityEngine.InputSystem.InputDevice m_Device
    // Size: 0x8
    // Offset: 0x0
    ::UnityEngine::InputSystem::InputDevice* m_Device;
    // Field size check
    static_assert(sizeof(::UnityEngine::InputSystem::InputDevice*) == 0x8);
    // UnityEngine.InputSystem.LowLevel.InputEventPtr m_EventPtr
    // Size: 0x8
    // Offset: 0x8
    ::UnityEngine::InputSystem::LowLevel::InputEventPtr m_EventPtr;
    // Field size check
    static_assert(sizeof(::UnityEngine::InputSystem::LowLevel::InputEventPtr) == 0x8);
    // UnityEngine.InputSystem.InputControlExtensions/Enumerate m_Flags
    // Size: 0x4
    // Offset: 0x10
    ::UnityEngine::InputSystem::InputControlExtensions::Enumerate m_Flags;
    // Field size check
    static_assert(sizeof(::UnityEngine::InputSystem::InputControlExtensions::Enumerate) == 0x4);
    // System.Single m_MagnitudeThreshold
    // Size: 0x4
    // Offset: 0x14
    float m_MagnitudeThreshold;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    public:
    // Creating value type constructor for type: InputEventControlCollection
    constexpr InputEventControlCollection(::UnityEngine::InputSystem::InputDevice* m_Device_ = {}, ::UnityEngine::InputSystem::LowLevel::InputEventPtr m_EventPtr_ = {}, ::UnityEngine::InputSystem::InputControlExtensions::Enumerate m_Flags_ = {}, float m_MagnitudeThreshold_ = {}) noexcept : m_Device{m_Device_}, m_EventPtr{m_EventPtr_}, m_Flags{m_Flags_}, m_MagnitudeThreshold{m_MagnitudeThreshold_} {}
    // Creating interface conversion operator: operator ::System::ValueType
    operator ::System::ValueType() noexcept {
      return *reinterpret_cast<::System::ValueType*>(this);
    }
    // Creating interface conversion operator: operator ::System::Collections::Generic::IEnumerable_1<::UnityEngine::InputSystem::InputControl*>
    operator ::System::Collections::Generic::IEnumerable_1<::UnityEngine::InputSystem::InputControl*>() noexcept {
      return *reinterpret_cast<::System::Collections::Generic::IEnumerable_1<::UnityEngine::InputSystem::InputControl*>*>(this);
    }
    // Get instance field reference: UnityEngine.InputSystem.InputDevice m_Device
    [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::InputDevice*& dyn_m_Device();
    // Get instance field reference: UnityEngine.InputSystem.LowLevel.InputEventPtr m_EventPtr
    [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::LowLevel::InputEventPtr& dyn_m_EventPtr();
    // Get instance field reference: UnityEngine.InputSystem.InputControlExtensions/Enumerate m_Flags
    [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::InputControlExtensions::Enumerate& dyn_m_Flags();
    // Get instance field reference: System.Single m_MagnitudeThreshold
    [[deprecated("Use field access instead!")]] float& dyn_m_MagnitudeThreshold();
    // public UnityEngine.InputSystem.LowLevel.InputEventPtr get_eventPtr()
    // Offset: 0x50C0164
    ::UnityEngine::InputSystem::LowLevel::InputEventPtr get_eventPtr();
    // public UnityEngine.InputSystem.InputControlExtensions/InputEventControlEnumerator GetEnumerator()
    // Offset: 0x50BF9EC
    ::UnityEngine::InputSystem::InputControlExtensions::InputEventControlEnumerator GetEnumerator();
    // private System.Collections.Generic.IEnumerator`1<UnityEngine.InputSystem.InputControl> System.Collections.Generic.IEnumerable<UnityEngine.InputSystem.InputControl>.GetEnumerator()
    // Offset: 0x50C0308
    ::System::Collections::Generic::IEnumerator_1<::UnityEngine::InputSystem::InputControl*>* System_Collections_Generic_IEnumerable$UnityEngine_InputSystem_InputControl$_GetEnumerator();
    // private System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()
    // Offset: 0x50C03AC
    ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator();
  }; // UnityEngine.InputSystem.InputControlExtensions/InputEventControlCollection
  #pragma pack(pop)
  static check_size<sizeof(InputControlExtensions::InputEventControlCollection), 20 + sizeof(float)> __UnityEngine_InputSystem_InputControlExtensions_InputEventControlCollectionSizeCheck;
  static_assert(sizeof(InputControlExtensions::InputEventControlCollection) == 0x18);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputControlExtensions::InputEventControlCollection::get_eventPtr
// Il2CppName: get_eventPtr
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::LowLevel::InputEventPtr (UnityEngine::InputSystem::InputControlExtensions::InputEventControlCollection::*)()>(&UnityEngine::InputSystem::InputControlExtensions::InputEventControlCollection::get_eventPtr)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputControlExtensions::InputEventControlCollection), "get_eventPtr", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputControlExtensions::InputEventControlCollection::GetEnumerator
// Il2CppName: GetEnumerator
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::InputControlExtensions::InputEventControlEnumerator (UnityEngine::InputSystem::InputControlExtensions::InputEventControlCollection::*)()>(&UnityEngine::InputSystem::InputControlExtensions::InputEventControlCollection::GetEnumerator)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputControlExtensions::InputEventControlCollection), "GetEnumerator", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputControlExtensions::InputEventControlCollection::System_Collections_Generic_IEnumerable$UnityEngine_InputSystem_InputControl$_GetEnumerator
// Il2CppName: System.Collections.Generic.IEnumerable<UnityEngine.InputSystem.InputControl>.GetEnumerator
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::IEnumerator_1<::UnityEngine::InputSystem::InputControl*>* (UnityEngine::InputSystem::InputControlExtensions::InputEventControlCollection::*)()>(&UnityEngine::InputSystem::InputControlExtensions::InputEventControlCollection::System_Collections_Generic_IEnumerable$UnityEngine_InputSystem_InputControl$_GetEnumerator)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputControlExtensions::InputEventControlCollection), "System.Collections.Generic.IEnumerable<UnityEngine.InputSystem.InputControl>.GetEnumerator", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputControlExtensions::InputEventControlCollection::System_Collections_IEnumerable_GetEnumerator
// Il2CppName: System.Collections.IEnumerable.GetEnumerator
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::IEnumerator* (UnityEngine::InputSystem::InputControlExtensions::InputEventControlCollection::*)()>(&UnityEngine::InputSystem::InputControlExtensions::InputEventControlCollection::System_Collections_IEnumerable_GetEnumerator)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputControlExtensions::InputEventControlCollection), "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
