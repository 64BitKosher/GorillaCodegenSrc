// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.EventSystems.BaseInputModule
#include "UnityEngine/EventSystems/BaseInputModule.hpp"
// Including type: UnityEngine.InputSystem.UI.UIPointerBehavior
#include "UnityEngine/InputSystem/UI/UIPointerBehavior.hpp"
// Including type: UnityEngine.InputSystem.InputAction/CallbackContext
#include "UnityEngine/InputSystem/InputAction_CallbackContext.hpp"
// Including type: UnityEngine.InputSystem.UI.UIPointerType
#include "UnityEngine/InputSystem/UI/UIPointerType.hpp"
// Including type: UnityEngine.InputSystem.Utilities.InlinedArray`1
#include "UnityEngine/InputSystem/Utilities/InlinedArray_1.hpp"
// Including type: UnityEngine.InputSystem.UI.PointerModel
#include "UnityEngine/InputSystem/UI/PointerModel.hpp"
// Including type: UnityEngine.InputSystem.UI.NavigationModel
#include "UnityEngine/InputSystem/UI/NavigationModel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::InputSystem::UI
namespace UnityEngine::InputSystem::UI {
  // Skipping declaration: CursorLockBehavior because it is already included!
  // Forward declaring type: ExtendedPointerEventData
  class ExtendedPointerEventData;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Action`1<T>
  template<typename T>
  class Action_1;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Transform
  class Transform;
  // Forward declaring type: GameObject
  class GameObject;
}
// Forward declaring namespace: UnityEngine::InputSystem
namespace UnityEngine::InputSystem {
  // Forward declaring type: InputActionAsset
  class InputActionAsset;
  // Forward declaring type: InputActionReference
  class InputActionReference;
  // Forward declaring type: InputControl
  class InputControl;
  // Forward declaring type: InputAction
  class InputAction;
  // Forward declaring type: InputDevice
  class InputDevice;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: Dictionary`2<TKey, TValue>
  template<typename TKey, typename TValue>
  class Dictionary_2;
}
// Forward declaring namespace: UnityEngine::EventSystems
namespace UnityEngine::EventSystems {
  // Skipping declaration: RaycastResult because it is already included!
  // Skipping declaration: PointerEventData because it is already included!
  // Forward declaring type: AxisEventData
  class AxisEventData;
}
// Completed forward declares
// Type namespace: UnityEngine.InputSystem.UI
namespace UnityEngine::InputSystem::UI {
  // Forward declaring type: InputSystemUIInputModule
  class InputSystemUIInputModule;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::InputSystem::UI::InputSystemUIInputModule);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::InputSystem::UI::InputSystemUIInputModule*, "UnityEngine.InputSystem.UI", "InputSystemUIInputModule");
// Type namespace: UnityEngine.InputSystem.UI
namespace UnityEngine::InputSystem::UI {
  // WARNING Size may be invalid!
  // Autogenerated type: UnityEngine.InputSystem.UI.InputSystemUIInputModule
  // [TokenAttribute] Offset: FFFFFFFF
  // [HelpURLAttribute] Offset: FFFFFFFF
  class InputSystemUIInputModule : public ::UnityEngine::EventSystems::BaseInputModule {
    public:
    // Nested type: ::UnityEngine::InputSystem::UI::InputSystemUIInputModule::InputActionReferenceState
    struct InputActionReferenceState;
    // Nested type: ::UnityEngine::InputSystem::UI::InputSystemUIInputModule::CursorLockBehavior
    struct CursorLockBehavior;
    // Size: 0x5
    #pragma pack(push, 1)
    // WARNING Layout: Sequential may not be correctly taken into account!
    // Autogenerated type: UnityEngine.InputSystem.UI.InputSystemUIInputModule/InputActionReferenceState
    // [TokenAttribute] Offset: FFFFFFFF
    struct InputActionReferenceState/*, public ::System::ValueType*/ {
      public:
      public:
      // public System.Int32 refCount
      // Size: 0x4
      // Offset: 0x0
      int refCount;
      // Field size check
      static_assert(sizeof(int) == 0x4);
      // public System.Boolean enabledByInputModule
      // Size: 0x1
      // Offset: 0x4
      bool enabledByInputModule;
      // Field size check
      static_assert(sizeof(bool) == 0x1);
      public:
      // Creating value type constructor for type: InputActionReferenceState
      constexpr InputActionReferenceState(int refCount_ = {}, bool enabledByInputModule_ = {}) noexcept : refCount{refCount_}, enabledByInputModule{enabledByInputModule_} {}
      // Creating interface conversion operator: operator ::System::ValueType
      operator ::System::ValueType() noexcept {
        return *reinterpret_cast<::System::ValueType*>(this);
      }
      // Get instance field reference: public System.Int32 refCount
      [[deprecated("Use field access instead!")]] int& dyn_refCount();
      // Get instance field reference: public System.Boolean enabledByInputModule
      [[deprecated("Use field access instead!")]] bool& dyn_enabledByInputModule();
    }; // UnityEngine.InputSystem.UI.InputSystemUIInputModule/InputActionReferenceState
    #pragma pack(pop)
    static check_size<sizeof(InputSystemUIInputModule::InputActionReferenceState), 4 + sizeof(bool)> __UnityEngine_InputSystem_UI_InputSystemUIInputModule_InputActionReferenceStateSizeCheck;
    static_assert(sizeof(InputSystemUIInputModule::InputActionReferenceState) == 0x5);
    // Size: 0x4
    #pragma pack(push, 1)
    // Autogenerated type: UnityEngine.InputSystem.UI.InputSystemUIInputModule/CursorLockBehavior
    // [TokenAttribute] Offset: FFFFFFFF
    struct CursorLockBehavior/*, public ::System::Enum*/ {
      public:
      public:
      // public System.Int32 value__
      // Size: 0x4
      // Offset: 0x0
      int value;
      // Field size check
      static_assert(sizeof(int) == 0x4);
      public:
      // Creating value type constructor for type: CursorLockBehavior
      constexpr CursorLockBehavior(int value_ = {}) noexcept : value{value_} {}
      // Creating interface conversion operator: operator ::System::Enum
      operator ::System::Enum() noexcept {
        return *reinterpret_cast<::System::Enum*>(this);
      }
      // Creating conversion operator: operator int
      constexpr operator int() const noexcept {
        return value;
      }
      // static field const value: static public UnityEngine.InputSystem.UI.InputSystemUIInputModule/CursorLockBehavior OutsideScreen
      static constexpr const int OutsideScreen = 0;
      // Get static field: static public UnityEngine.InputSystem.UI.InputSystemUIInputModule/CursorLockBehavior OutsideScreen
      static ::UnityEngine::InputSystem::UI::InputSystemUIInputModule::CursorLockBehavior _get_OutsideScreen();
      // Set static field: static public UnityEngine.InputSystem.UI.InputSystemUIInputModule/CursorLockBehavior OutsideScreen
      static void _set_OutsideScreen(::UnityEngine::InputSystem::UI::InputSystemUIInputModule::CursorLockBehavior value);
      // static field const value: static public UnityEngine.InputSystem.UI.InputSystemUIInputModule/CursorLockBehavior ScreenCenter
      static constexpr const int ScreenCenter = 1;
      // Get static field: static public UnityEngine.InputSystem.UI.InputSystemUIInputModule/CursorLockBehavior ScreenCenter
      static ::UnityEngine::InputSystem::UI::InputSystemUIInputModule::CursorLockBehavior _get_ScreenCenter();
      // Set static field: static public UnityEngine.InputSystem.UI.InputSystemUIInputModule/CursorLockBehavior ScreenCenter
      static void _set_ScreenCenter(::UnityEngine::InputSystem::UI::InputSystemUIInputModule::CursorLockBehavior value);
      // Get instance field reference: public System.Int32 value__
      [[deprecated("Use field access instead!")]] int& dyn_value__();
    }; // UnityEngine.InputSystem.UI.InputSystemUIInputModule/CursorLockBehavior
    #pragma pack(pop)
    static check_size<sizeof(InputSystemUIInputModule::CursorLockBehavior), 0 + sizeof(int)> __UnityEngine_InputSystem_UI_InputSystemUIInputModule_CursorLockBehaviorSizeCheck;
    static_assert(sizeof(InputSystemUIInputModule::CursorLockBehavior) == 0x4);
    public:
    // private System.Single m_MoveRepeatDelay
    // Size: 0x4
    // Offset: 0x58
    float m_MoveRepeatDelay;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Single m_MoveRepeatRate
    // Size: 0x4
    // Offset: 0x5C
    float m_MoveRepeatRate;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Single m_TrackedDeviceDragThresholdMultiplier
    // Size: 0x4
    // Offset: 0x60
    float m_TrackedDeviceDragThresholdMultiplier;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private UnityEngine.Transform m_XRTrackingOrigin
    // Size: 0x8
    // Offset: 0x68
    ::UnityEngine::Transform* m_XRTrackingOrigin;
    // Field size check
    static_assert(sizeof(::UnityEngine::Transform*) == 0x8);
    // private UnityEngine.InputSystem.InputActionAsset m_ActionsAsset
    // Size: 0x8
    // Offset: 0x70
    ::UnityEngine::InputSystem::InputActionAsset* m_ActionsAsset;
    // Field size check
    static_assert(sizeof(::UnityEngine::InputSystem::InputActionAsset*) == 0x8);
    // private UnityEngine.InputSystem.InputActionReference m_PointAction
    // Size: 0x8
    // Offset: 0x78
    ::UnityEngine::InputSystem::InputActionReference* m_PointAction;
    // Field size check
    static_assert(sizeof(::UnityEngine::InputSystem::InputActionReference*) == 0x8);
    // private UnityEngine.InputSystem.InputActionReference m_MoveAction
    // Size: 0x8
    // Offset: 0x80
    ::UnityEngine::InputSystem::InputActionReference* m_MoveAction;
    // Field size check
    static_assert(sizeof(::UnityEngine::InputSystem::InputActionReference*) == 0x8);
    // private UnityEngine.InputSystem.InputActionReference m_SubmitAction
    // Size: 0x8
    // Offset: 0x88
    ::UnityEngine::InputSystem::InputActionReference* m_SubmitAction;
    // Field size check
    static_assert(sizeof(::UnityEngine::InputSystem::InputActionReference*) == 0x8);
    // private UnityEngine.InputSystem.InputActionReference m_CancelAction
    // Size: 0x8
    // Offset: 0x90
    ::UnityEngine::InputSystem::InputActionReference* m_CancelAction;
    // Field size check
    static_assert(sizeof(::UnityEngine::InputSystem::InputActionReference*) == 0x8);
    // private UnityEngine.InputSystem.InputActionReference m_LeftClickAction
    // Size: 0x8
    // Offset: 0x98
    ::UnityEngine::InputSystem::InputActionReference* m_LeftClickAction;
    // Field size check
    static_assert(sizeof(::UnityEngine::InputSystem::InputActionReference*) == 0x8);
    // private UnityEngine.InputSystem.InputActionReference m_MiddleClickAction
    // Size: 0x8
    // Offset: 0xA0
    ::UnityEngine::InputSystem::InputActionReference* m_MiddleClickAction;
    // Field size check
    static_assert(sizeof(::UnityEngine::InputSystem::InputActionReference*) == 0x8);
    // private UnityEngine.InputSystem.InputActionReference m_RightClickAction
    // Size: 0x8
    // Offset: 0xA8
    ::UnityEngine::InputSystem::InputActionReference* m_RightClickAction;
    // Field size check
    static_assert(sizeof(::UnityEngine::InputSystem::InputActionReference*) == 0x8);
    // private UnityEngine.InputSystem.InputActionReference m_ScrollWheelAction
    // Size: 0x8
    // Offset: 0xB0
    ::UnityEngine::InputSystem::InputActionReference* m_ScrollWheelAction;
    // Field size check
    static_assert(sizeof(::UnityEngine::InputSystem::InputActionReference*) == 0x8);
    // private UnityEngine.InputSystem.InputActionReference m_TrackedDevicePositionAction
    // Size: 0x8
    // Offset: 0xB8
    ::UnityEngine::InputSystem::InputActionReference* m_TrackedDevicePositionAction;
    // Field size check
    static_assert(sizeof(::UnityEngine::InputSystem::InputActionReference*) == 0x8);
    // private UnityEngine.InputSystem.InputActionReference m_TrackedDeviceOrientationAction
    // Size: 0x8
    // Offset: 0xC0
    ::UnityEngine::InputSystem::InputActionReference* m_TrackedDeviceOrientationAction;
    // Field size check
    static_assert(sizeof(::UnityEngine::InputSystem::InputActionReference*) == 0x8);
    // private System.Boolean m_DeselectOnBackgroundClick
    // Size: 0x1
    // Offset: 0xC8
    bool m_DeselectOnBackgroundClick;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private UnityEngine.InputSystem.UI.UIPointerBehavior m_PointerBehavior
    // Size: 0x4
    // Offset: 0xCC
    ::UnityEngine::InputSystem::UI::UIPointerBehavior m_PointerBehavior;
    // Field size check
    static_assert(sizeof(::UnityEngine::InputSystem::UI::UIPointerBehavior) == 0x4);
    // UnityEngine.InputSystem.UI.InputSystemUIInputModule/CursorLockBehavior m_CursorLockBehavior
    // Size: 0x4
    // Offset: 0xD0
    ::UnityEngine::InputSystem::UI::InputSystemUIInputModule::CursorLockBehavior m_CursorLockBehavior;
    // Field size check
    static_assert(sizeof(::UnityEngine::InputSystem::UI::InputSystemUIInputModule::CursorLockBehavior) == 0x4);
    // private System.Boolean m_ActionsHooked
    // Size: 0x1
    // Offset: 0xD4
    bool m_ActionsHooked;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean m_NeedToPurgeStalePointers
    // Size: 0x1
    // Offset: 0xD5
    bool m_NeedToPurgeStalePointers;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Action`1<UnityEngine.InputSystem.InputAction/CallbackContext> m_OnPointDelegate
    // Size: 0x8
    // Offset: 0xD8
    ::System::Action_1<::UnityEngine::InputSystem::InputAction_CallbackContext>* m_OnPointDelegate;
    // Field size check
    static_assert(sizeof(::System::Action_1<::UnityEngine::InputSystem::InputAction_CallbackContext>*) == 0x8);
    // private System.Action`1<UnityEngine.InputSystem.InputAction/CallbackContext> m_OnMoveDelegate
    // Size: 0x8
    // Offset: 0xE0
    ::System::Action_1<::UnityEngine::InputSystem::InputAction_CallbackContext>* m_OnMoveDelegate;
    // Field size check
    static_assert(sizeof(::System::Action_1<::UnityEngine::InputSystem::InputAction_CallbackContext>*) == 0x8);
    // private System.Action`1<UnityEngine.InputSystem.InputAction/CallbackContext> m_OnLeftClickDelegate
    // Size: 0x8
    // Offset: 0xE8
    ::System::Action_1<::UnityEngine::InputSystem::InputAction_CallbackContext>* m_OnLeftClickDelegate;
    // Field size check
    static_assert(sizeof(::System::Action_1<::UnityEngine::InputSystem::InputAction_CallbackContext>*) == 0x8);
    // private System.Action`1<UnityEngine.InputSystem.InputAction/CallbackContext> m_OnRightClickDelegate
    // Size: 0x8
    // Offset: 0xF0
    ::System::Action_1<::UnityEngine::InputSystem::InputAction_CallbackContext>* m_OnRightClickDelegate;
    // Field size check
    static_assert(sizeof(::System::Action_1<::UnityEngine::InputSystem::InputAction_CallbackContext>*) == 0x8);
    // private System.Action`1<UnityEngine.InputSystem.InputAction/CallbackContext> m_OnMiddleClickDelegate
    // Size: 0x8
    // Offset: 0xF8
    ::System::Action_1<::UnityEngine::InputSystem::InputAction_CallbackContext>* m_OnMiddleClickDelegate;
    // Field size check
    static_assert(sizeof(::System::Action_1<::UnityEngine::InputSystem::InputAction_CallbackContext>*) == 0x8);
    // private System.Action`1<UnityEngine.InputSystem.InputAction/CallbackContext> m_OnScrollWheelDelegate
    // Size: 0x8
    // Offset: 0x100
    ::System::Action_1<::UnityEngine::InputSystem::InputAction_CallbackContext>* m_OnScrollWheelDelegate;
    // Field size check
    static_assert(sizeof(::System::Action_1<::UnityEngine::InputSystem::InputAction_CallbackContext>*) == 0x8);
    // private System.Action`1<UnityEngine.InputSystem.InputAction/CallbackContext> m_OnTrackedDevicePositionDelegate
    // Size: 0x8
    // Offset: 0x108
    ::System::Action_1<::UnityEngine::InputSystem::InputAction_CallbackContext>* m_OnTrackedDevicePositionDelegate;
    // Field size check
    static_assert(sizeof(::System::Action_1<::UnityEngine::InputSystem::InputAction_CallbackContext>*) == 0x8);
    // private System.Action`1<UnityEngine.InputSystem.InputAction/CallbackContext> m_OnTrackedDeviceOrientationDelegate
    // Size: 0x8
    // Offset: 0x110
    ::System::Action_1<::UnityEngine::InputSystem::InputAction_CallbackContext>* m_OnTrackedDeviceOrientationDelegate;
    // Field size check
    static_assert(sizeof(::System::Action_1<::UnityEngine::InputSystem::InputAction_CallbackContext>*) == 0x8);
    // private System.Action`1<System.Object> m_OnControlsChangedDelegate
    // Size: 0x8
    // Offset: 0x118
    ::System::Action_1<::Il2CppObject*>* m_OnControlsChangedDelegate;
    // Field size check
    static_assert(sizeof(::System::Action_1<::Il2CppObject*>*) == 0x8);
    // private System.Int32 m_CurrentPointerId
    // Size: 0x4
    // Offset: 0x120
    int m_CurrentPointerId;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private System.Int32 m_CurrentPointerIndex
    // Size: 0x4
    // Offset: 0x124
    int m_CurrentPointerIndex;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // UnityEngine.InputSystem.UI.UIPointerType m_CurrentPointerType
    // Size: 0x4
    // Offset: 0x128
    ::UnityEngine::InputSystem::UI::UIPointerType m_CurrentPointerType;
    // Field size check
    static_assert(sizeof(::UnityEngine::InputSystem::UI::UIPointerType) == 0x4);
    // UnityEngine.InputSystem.Utilities.InlinedArray`1<System.Int32> m_PointerIds
    // Size: 0xFFFFFFFF
    // Offset: 0x130
    ::UnityEngine::InputSystem::Utilities::InlinedArray_1<int> m_PointerIds;
    // UnityEngine.InputSystem.Utilities.InlinedArray`1<UnityEngine.InputSystem.InputControl> m_PointerTouchControls
    // Size: 0xFFFFFFFF
    // Offset: 0x140
    ::UnityEngine::InputSystem::Utilities::InlinedArray_1<::UnityEngine::InputSystem::InputControl*> m_PointerTouchControls;
    // UnityEngine.InputSystem.Utilities.InlinedArray`1<UnityEngine.InputSystem.UI.PointerModel> m_PointerStates
    // Size: 0xFFFFFFFF
    // Offset: 0x158
    ::UnityEngine::InputSystem::Utilities::InlinedArray_1<::UnityEngine::InputSystem::UI::PointerModel> m_PointerStates;
    // private UnityEngine.InputSystem.UI.NavigationModel m_NavigationState
    // Size: 0x20
    // Offset: 0x388
    ::UnityEngine::InputSystem::UI::NavigationModel m_NavigationState;
    // Field size check
    static_assert(sizeof(::UnityEngine::InputSystem::UI::NavigationModel) == 0x20);
    // private UnityEngine.GameObject m_LocalMultiPlayerRoot
    // Size: 0x8
    // Offset: 0x3A8
    ::UnityEngine::GameObject* m_LocalMultiPlayerRoot;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    public:
    // static field const value: static private System.Single kClickSpeed
    static constexpr const float kClickSpeed = 0.3;
    // Get static field: static private System.Single kClickSpeed
    static float _get_kClickSpeed();
    // Set static field: static private System.Single kClickSpeed
    static void _set_kClickSpeed(float value);
    // static field const value: static System.Single kPixelPerLine
    static constexpr const float kPixelPerLine = 20;
    // Get static field: static System.Single kPixelPerLine
    static float _get_kPixelPerLine();
    // Set static field: static System.Single kPixelPerLine
    static void _set_kPixelPerLine(float value);
    // Get static field: static private System.Collections.Generic.Dictionary`2<UnityEngine.InputSystem.InputAction,UnityEngine.InputSystem.UI.InputSystemUIInputModule/InputActionReferenceState> s_InputActionReferenceCounts
    static ::System::Collections::Generic::Dictionary_2<::UnityEngine::InputSystem::InputAction*, ::UnityEngine::InputSystem::UI::InputSystemUIInputModule::InputActionReferenceState>* _get_s_InputActionReferenceCounts();
    // Set static field: static private System.Collections.Generic.Dictionary`2<UnityEngine.InputSystem.InputAction,UnityEngine.InputSystem.UI.InputSystemUIInputModule/InputActionReferenceState> s_InputActionReferenceCounts
    static void _set_s_InputActionReferenceCounts(::System::Collections::Generic::Dictionary_2<::UnityEngine::InputSystem::InputAction*, ::UnityEngine::InputSystem::UI::InputSystemUIInputModule::InputActionReferenceState>* value);
    // Get instance field reference: private System.Single m_MoveRepeatDelay
    [[deprecated("Use field access instead!")]] float& dyn_m_MoveRepeatDelay();
    // Get instance field reference: private System.Single m_MoveRepeatRate
    [[deprecated("Use field access instead!")]] float& dyn_m_MoveRepeatRate();
    // Get instance field reference: private System.Single m_TrackedDeviceDragThresholdMultiplier
    [[deprecated("Use field access instead!")]] float& dyn_m_TrackedDeviceDragThresholdMultiplier();
    // Get instance field reference: private UnityEngine.Transform m_XRTrackingOrigin
    [[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& dyn_m_XRTrackingOrigin();
    // Get instance field reference: private UnityEngine.InputSystem.InputActionAsset m_ActionsAsset
    [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::InputActionAsset*& dyn_m_ActionsAsset();
    // Get instance field reference: private UnityEngine.InputSystem.InputActionReference m_PointAction
    [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::InputActionReference*& dyn_m_PointAction();
    // Get instance field reference: private UnityEngine.InputSystem.InputActionReference m_MoveAction
    [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::InputActionReference*& dyn_m_MoveAction();
    // Get instance field reference: private UnityEngine.InputSystem.InputActionReference m_SubmitAction
    [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::InputActionReference*& dyn_m_SubmitAction();
    // Get instance field reference: private UnityEngine.InputSystem.InputActionReference m_CancelAction
    [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::InputActionReference*& dyn_m_CancelAction();
    // Get instance field reference: private UnityEngine.InputSystem.InputActionReference m_LeftClickAction
    [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::InputActionReference*& dyn_m_LeftClickAction();
    // Get instance field reference: private UnityEngine.InputSystem.InputActionReference m_MiddleClickAction
    [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::InputActionReference*& dyn_m_MiddleClickAction();
    // Get instance field reference: private UnityEngine.InputSystem.InputActionReference m_RightClickAction
    [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::InputActionReference*& dyn_m_RightClickAction();
    // Get instance field reference: private UnityEngine.InputSystem.InputActionReference m_ScrollWheelAction
    [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::InputActionReference*& dyn_m_ScrollWheelAction();
    // Get instance field reference: private UnityEngine.InputSystem.InputActionReference m_TrackedDevicePositionAction
    [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::InputActionReference*& dyn_m_TrackedDevicePositionAction();
    // Get instance field reference: private UnityEngine.InputSystem.InputActionReference m_TrackedDeviceOrientationAction
    [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::InputActionReference*& dyn_m_TrackedDeviceOrientationAction();
    // Get instance field reference: private System.Boolean m_DeselectOnBackgroundClick
    [[deprecated("Use field access instead!")]] bool& dyn_m_DeselectOnBackgroundClick();
    // Get instance field reference: private UnityEngine.InputSystem.UI.UIPointerBehavior m_PointerBehavior
    [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::UI::UIPointerBehavior& dyn_m_PointerBehavior();
    // Get instance field reference: UnityEngine.InputSystem.UI.InputSystemUIInputModule/CursorLockBehavior m_CursorLockBehavior
    [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::UI::InputSystemUIInputModule::CursorLockBehavior& dyn_m_CursorLockBehavior();
    // Get instance field reference: private System.Boolean m_ActionsHooked
    [[deprecated("Use field access instead!")]] bool& dyn_m_ActionsHooked();
    // Get instance field reference: private System.Boolean m_NeedToPurgeStalePointers
    [[deprecated("Use field access instead!")]] bool& dyn_m_NeedToPurgeStalePointers();
    // Get instance field reference: private System.Action`1<UnityEngine.InputSystem.InputAction/CallbackContext> m_OnPointDelegate
    [[deprecated("Use field access instead!")]] ::System::Action_1<::UnityEngine::InputSystem::InputAction_CallbackContext>*& dyn_m_OnPointDelegate();
    // Get instance field reference: private System.Action`1<UnityEngine.InputSystem.InputAction/CallbackContext> m_OnMoveDelegate
    [[deprecated("Use field access instead!")]] ::System::Action_1<::UnityEngine::InputSystem::InputAction_CallbackContext>*& dyn_m_OnMoveDelegate();
    // Get instance field reference: private System.Action`1<UnityEngine.InputSystem.InputAction/CallbackContext> m_OnLeftClickDelegate
    [[deprecated("Use field access instead!")]] ::System::Action_1<::UnityEngine::InputSystem::InputAction_CallbackContext>*& dyn_m_OnLeftClickDelegate();
    // Get instance field reference: private System.Action`1<UnityEngine.InputSystem.InputAction/CallbackContext> m_OnRightClickDelegate
    [[deprecated("Use field access instead!")]] ::System::Action_1<::UnityEngine::InputSystem::InputAction_CallbackContext>*& dyn_m_OnRightClickDelegate();
    // Get instance field reference: private System.Action`1<UnityEngine.InputSystem.InputAction/CallbackContext> m_OnMiddleClickDelegate
    [[deprecated("Use field access instead!")]] ::System::Action_1<::UnityEngine::InputSystem::InputAction_CallbackContext>*& dyn_m_OnMiddleClickDelegate();
    // Get instance field reference: private System.Action`1<UnityEngine.InputSystem.InputAction/CallbackContext> m_OnScrollWheelDelegate
    [[deprecated("Use field access instead!")]] ::System::Action_1<::UnityEngine::InputSystem::InputAction_CallbackContext>*& dyn_m_OnScrollWheelDelegate();
    // Get instance field reference: private System.Action`1<UnityEngine.InputSystem.InputAction/CallbackContext> m_OnTrackedDevicePositionDelegate
    [[deprecated("Use field access instead!")]] ::System::Action_1<::UnityEngine::InputSystem::InputAction_CallbackContext>*& dyn_m_OnTrackedDevicePositionDelegate();
    // Get instance field reference: private System.Action`1<UnityEngine.InputSystem.InputAction/CallbackContext> m_OnTrackedDeviceOrientationDelegate
    [[deprecated("Use field access instead!")]] ::System::Action_1<::UnityEngine::InputSystem::InputAction_CallbackContext>*& dyn_m_OnTrackedDeviceOrientationDelegate();
    // Get instance field reference: private System.Action`1<System.Object> m_OnControlsChangedDelegate
    [[deprecated("Use field access instead!")]] ::System::Action_1<::Il2CppObject*>*& dyn_m_OnControlsChangedDelegate();
    // Get instance field reference: private System.Int32 m_CurrentPointerId
    [[deprecated("Use field access instead!")]] int& dyn_m_CurrentPointerId();
    // Get instance field reference: private System.Int32 m_CurrentPointerIndex
    [[deprecated("Use field access instead!")]] int& dyn_m_CurrentPointerIndex();
    // Get instance field reference: UnityEngine.InputSystem.UI.UIPointerType m_CurrentPointerType
    [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::UI::UIPointerType& dyn_m_CurrentPointerType();
    // Get instance field reference: UnityEngine.InputSystem.Utilities.InlinedArray`1<System.Int32> m_PointerIds
    [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Utilities::InlinedArray_1<int>& dyn_m_PointerIds();
    // Get instance field reference: UnityEngine.InputSystem.Utilities.InlinedArray`1<UnityEngine.InputSystem.InputControl> m_PointerTouchControls
    [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Utilities::InlinedArray_1<::UnityEngine::InputSystem::InputControl*>& dyn_m_PointerTouchControls();
    // Get instance field reference: UnityEngine.InputSystem.Utilities.InlinedArray`1<UnityEngine.InputSystem.UI.PointerModel> m_PointerStates
    [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Utilities::InlinedArray_1<::UnityEngine::InputSystem::UI::PointerModel>& dyn_m_PointerStates();
    // Get instance field reference: private UnityEngine.InputSystem.UI.NavigationModel m_NavigationState
    [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::UI::NavigationModel& dyn_m_NavigationState();
    // Get instance field reference: private UnityEngine.GameObject m_LocalMultiPlayerRoot
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_m_LocalMultiPlayerRoot();
    // public System.Boolean get_deselectOnBackgroundClick()
    // Offset: 0x5130CF8
    bool get_deselectOnBackgroundClick();
    // public System.Void set_deselectOnBackgroundClick(System.Boolean value)
    // Offset: 0x5130D00
    void set_deselectOnBackgroundClick(bool value);
    // public UnityEngine.InputSystem.UI.UIPointerBehavior get_pointerBehavior()
    // Offset: 0x5130D0C
    ::UnityEngine::InputSystem::UI::UIPointerBehavior get_pointerBehavior();
    // public System.Void set_pointerBehavior(UnityEngine.InputSystem.UI.UIPointerBehavior value)
    // Offset: 0x5130D14
    void set_pointerBehavior(::UnityEngine::InputSystem::UI::UIPointerBehavior value);
    // public UnityEngine.InputSystem.UI.InputSystemUIInputModule/CursorLockBehavior get_cursorLockBehavior()
    // Offset: 0x5130D1C
    ::UnityEngine::InputSystem::UI::InputSystemUIInputModule::CursorLockBehavior get_cursorLockBehavior();
    // public System.Void set_cursorLockBehavior(UnityEngine.InputSystem.UI.InputSystemUIInputModule/CursorLockBehavior value)
    // Offset: 0x5130D24
    void set_cursorLockBehavior(::UnityEngine::InputSystem::UI::InputSystemUIInputModule::CursorLockBehavior value);
    // UnityEngine.GameObject get_localMultiPlayerRoot()
    // Offset: 0x5130D2C
    ::UnityEngine::GameObject* get_localMultiPlayerRoot();
    // System.Void set_localMultiPlayerRoot(UnityEngine.GameObject value)
    // Offset: 0x5130D34
    void set_localMultiPlayerRoot(::UnityEngine::GameObject* value);
    // public UnityEngine.EventSystems.RaycastResult GetLastRaycastResult(System.Int32 pointerOrTouchId)
    // Offset: 0x5131090
    ::UnityEngine::EventSystems::RaycastResult GetLastRaycastResult(int pointerOrTouchId);
    // private UnityEngine.EventSystems.RaycastResult PerformRaycast(UnityEngine.InputSystem.UI.ExtendedPointerEventData eventData)
    // Offset: 0x5131140
    ::UnityEngine::EventSystems::RaycastResult PerformRaycast(::UnityEngine::InputSystem::UI::ExtendedPointerEventData* eventData);
    // private System.Void ProcessPointer(ref UnityEngine.InputSystem.UI.PointerModel state)
    // Offset: 0x5131A00
    void ProcessPointer(ByRef<::UnityEngine::InputSystem::UI::PointerModel> state);
    // private System.Boolean PointerShouldIgnoreTransform(UnityEngine.Transform t)
    // Offset: 0x5132C38
    bool PointerShouldIgnoreTransform(::UnityEngine::Transform* t);
    // private System.Void ProcessPointerMovement(ref UnityEngine.InputSystem.UI.PointerModel pointer, UnityEngine.InputSystem.UI.ExtendedPointerEventData eventData)
    // Offset: 0x5131EAC
    void ProcessPointerMovement(ByRef<::UnityEngine::InputSystem::UI::PointerModel> pointer, ::UnityEngine::InputSystem::UI::ExtendedPointerEventData* eventData);
    // private System.Void ProcessPointerMovement(UnityEngine.InputSystem.UI.ExtendedPointerEventData eventData, UnityEngine.GameObject currentPointerTarget)
    // Offset: 0x5132D38
    void ProcessPointerMovement(::UnityEngine::InputSystem::UI::ExtendedPointerEventData* eventData, ::UnityEngine::GameObject* currentPointerTarget);
    // private System.Void ProcessPointerButton(ref UnityEngine.InputSystem.UI.PointerModel/ButtonState button, UnityEngine.EventSystems.PointerEventData eventData)
    // Offset: 0x5131F14
    void ProcessPointerButton(ByRef<::UnityEngine::InputSystem::UI::PointerModel::ButtonState> button, ::UnityEngine::EventSystems::PointerEventData* eventData);
    // private System.Void ProcessPointerButtonDrag(ref UnityEngine.InputSystem.UI.PointerModel/ButtonState button, UnityEngine.InputSystem.UI.ExtendedPointerEventData eventData)
    // Offset: 0x513278C
    void ProcessPointerButtonDrag(ByRef<::UnityEngine::InputSystem::UI::PointerModel::ButtonState> button, ::UnityEngine::InputSystem::UI::ExtendedPointerEventData* eventData);
    // static private System.Void ProcessPointerScroll(ref UnityEngine.InputSystem.UI.PointerModel pointer, UnityEngine.EventSystems.PointerEventData eventData)
    // Offset: 0x5132AA4
    static void ProcessPointerScroll(ByRef<::UnityEngine::InputSystem::UI::PointerModel> pointer, ::UnityEngine::EventSystems::PointerEventData* eventData);
    // System.Void ProcessNavigation(ref UnityEngine.InputSystem.UI.NavigationModel navigationState)
    // Offset: 0x51334B4
    void ProcessNavigation(ByRef<::UnityEngine::InputSystem::UI::NavigationModel> navigationState);
    // private System.Boolean IsMoveAllowed(UnityEngine.EventSystems.AxisEventData eventData)
    // Offset: 0x5133AFC
    bool IsMoveAllowed(::UnityEngine::EventSystems::AxisEventData* eventData);
    // public System.Single get_moveRepeatDelay()
    // Offset: 0x5133CF4
    float get_moveRepeatDelay();
    // public System.Void set_moveRepeatDelay(System.Single value)
    // Offset: 0x5133CFC
    void set_moveRepeatDelay(float value);
    // public System.Single get_moveRepeatRate()
    // Offset: 0x5133D04
    float get_moveRepeatRate();
    // public System.Void set_moveRepeatRate(System.Single value)
    // Offset: 0x5133D0C
    void set_moveRepeatRate(float value);
    // private System.Boolean get_explictlyIgnoreFocus()
    // Offset: 0x5133D14
    bool get_explictlyIgnoreFocus();
    // private System.Boolean get_shouldIgnoreFocus()
    // Offset: 0x5133D7C
    bool get_shouldIgnoreFocus();
    // public System.Single get_repeatRate()
    // Offset: 0x5133E44
    float get_repeatRate();
    // public System.Void set_repeatRate(System.Single value)
    // Offset: 0x5133E4C
    void set_repeatRate(float value);
    // public System.Single get_repeatDelay()
    // Offset: 0x5133E54
    float get_repeatDelay();
    // public System.Void set_repeatDelay(System.Single value)
    // Offset: 0x5133E5C
    void set_repeatDelay(float value);
    // public UnityEngine.Transform get_xrTrackingOrigin()
    // Offset: 0x5133E64
    ::UnityEngine::Transform* get_xrTrackingOrigin();
    // public System.Void set_xrTrackingOrigin(UnityEngine.Transform value)
    // Offset: 0x5133E6C
    void set_xrTrackingOrigin(::UnityEngine::Transform* value);
    // public System.Single get_trackedDeviceDragThresholdMultiplier()
    // Offset: 0x5133E74
    float get_trackedDeviceDragThresholdMultiplier();
    // public System.Void set_trackedDeviceDragThresholdMultiplier(System.Single value)
    // Offset: 0x5133E7C
    void set_trackedDeviceDragThresholdMultiplier(float value);
    // private System.Void SwapAction(ref UnityEngine.InputSystem.InputActionReference property, UnityEngine.InputSystem.InputActionReference newValue, System.Boolean actionsHooked, System.Action`1<UnityEngine.InputSystem.InputAction/CallbackContext> actionCallback)
    // Offset: 0x5133E84
    void SwapAction(ByRef<::UnityEngine::InputSystem::InputActionReference*> property, ::UnityEngine::InputSystem::InputActionReference* newValue, bool actionsHooked, ::System::Action_1<::UnityEngine::InputSystem::InputAction_CallbackContext>* actionCallback);
    // public UnityEngine.InputSystem.InputActionReference get_point()
    // Offset: 0x5134428
    ::UnityEngine::InputSystem::InputActionReference* get_point();
    // public System.Void set_point(UnityEngine.InputSystem.InputActionReference value)
    // Offset: 0x5134430
    void set_point(::UnityEngine::InputSystem::InputActionReference* value);
    // public UnityEngine.InputSystem.InputActionReference get_scrollWheel()
    // Offset: 0x5134448
    ::UnityEngine::InputSystem::InputActionReference* get_scrollWheel();
    // public System.Void set_scrollWheel(UnityEngine.InputSystem.InputActionReference value)
    // Offset: 0x5134450
    void set_scrollWheel(::UnityEngine::InputSystem::InputActionReference* value);
    // public UnityEngine.InputSystem.InputActionReference get_leftClick()
    // Offset: 0x5134468
    ::UnityEngine::InputSystem::InputActionReference* get_leftClick();
    // public System.Void set_leftClick(UnityEngine.InputSystem.InputActionReference value)
    // Offset: 0x5134470
    void set_leftClick(::UnityEngine::InputSystem::InputActionReference* value);
    // public UnityEngine.InputSystem.InputActionReference get_middleClick()
    // Offset: 0x5134488
    ::UnityEngine::InputSystem::InputActionReference* get_middleClick();
    // public System.Void set_middleClick(UnityEngine.InputSystem.InputActionReference value)
    // Offset: 0x5134490
    void set_middleClick(::UnityEngine::InputSystem::InputActionReference* value);
    // public UnityEngine.InputSystem.InputActionReference get_rightClick()
    // Offset: 0x51344A8
    ::UnityEngine::InputSystem::InputActionReference* get_rightClick();
    // public System.Void set_rightClick(UnityEngine.InputSystem.InputActionReference value)
    // Offset: 0x51344B0
    void set_rightClick(::UnityEngine::InputSystem::InputActionReference* value);
    // public UnityEngine.InputSystem.InputActionReference get_move()
    // Offset: 0x51344C8
    ::UnityEngine::InputSystem::InputActionReference* get_move();
    // public System.Void set_move(UnityEngine.InputSystem.InputActionReference value)
    // Offset: 0x51344D0
    void set_move(::UnityEngine::InputSystem::InputActionReference* value);
    // public UnityEngine.InputSystem.InputActionReference get_submit()
    // Offset: 0x51344E8
    ::UnityEngine::InputSystem::InputActionReference* get_submit();
    // public System.Void set_submit(UnityEngine.InputSystem.InputActionReference value)
    // Offset: 0x51344F0
    void set_submit(::UnityEngine::InputSystem::InputActionReference* value);
    // public UnityEngine.InputSystem.InputActionReference get_cancel()
    // Offset: 0x5134508
    ::UnityEngine::InputSystem::InputActionReference* get_cancel();
    // public System.Void set_cancel(UnityEngine.InputSystem.InputActionReference value)
    // Offset: 0x5134510
    void set_cancel(::UnityEngine::InputSystem::InputActionReference* value);
    // public UnityEngine.InputSystem.InputActionReference get_trackedDeviceOrientation()
    // Offset: 0x5134528
    ::UnityEngine::InputSystem::InputActionReference* get_trackedDeviceOrientation();
    // public System.Void set_trackedDeviceOrientation(UnityEngine.InputSystem.InputActionReference value)
    // Offset: 0x5134530
    void set_trackedDeviceOrientation(::UnityEngine::InputSystem::InputActionReference* value);
    // public UnityEngine.InputSystem.InputActionReference get_trackedDevicePosition()
    // Offset: 0x5134548
    ::UnityEngine::InputSystem::InputActionReference* get_trackedDevicePosition();
    // public System.Void set_trackedDevicePosition(UnityEngine.InputSystem.InputActionReference value)
    // Offset: 0x5134550
    void set_trackedDevicePosition(::UnityEngine::InputSystem::InputActionReference* value);
    // public System.Void AssignDefaultActions()
    // Offset: 0x5134568
    void AssignDefaultActions();
    // public System.Void UnassignActions()
    // Offset: 0x5134A70
    void UnassignActions();
    // public UnityEngine.InputSystem.InputActionReference get_trackedDeviceSelect()
    // Offset: 0x5134B74
    ::UnityEngine::InputSystem::InputActionReference* get_trackedDeviceSelect();
    // public System.Void set_trackedDeviceSelect(UnityEngine.InputSystem.InputActionReference value)
    // Offset: 0x5134BAC
    void set_trackedDeviceSelect(::UnityEngine::InputSystem::InputActionReference* value);
    // private System.Void ResetPointers()
    // Offset: 0x5134F08
    void ResetPointers();
    // private System.Boolean HasNoActions()
    // Offset: 0x5134DD8
    bool HasNoActions();
    // private System.Void EnableAllActions()
    // Offset: 0x5135240
    void EnableAllActions();
    // private System.Void DisableAllActions()
    // Offset: 0x513533C
    void DisableAllActions();
    // private System.Void EnableInputAction(UnityEngine.InputSystem.InputActionReference inputActionReference)
    // Offset: 0x51342C0
    void EnableInputAction(::UnityEngine::InputSystem::InputActionReference* inputActionReference);
    // private System.Void TryDisableInputAction(UnityEngine.InputSystem.InputActionReference inputActionReference, System.Boolean isComponentDisabling)
    // Offset: 0x5134148
    void TryDisableInputAction(::UnityEngine::InputSystem::InputActionReference* inputActionReference, bool isComponentDisabling);
    // private System.Int32 GetPointerStateIndexFor(System.Int32 pointerOrTouchId)
    // Offset: 0x5130F60
    int GetPointerStateIndexFor(int pointerOrTouchId);
    // private UnityEngine.InputSystem.UI.PointerModel GetPointerStateForIndex(System.Int32 index)
    // Offset: 0x51354B0
    ::UnityEngine::InputSystem::UI::PointerModel GetPointerStateForIndex(int index);
    // private System.Int32 GetDisplayIndexFor(UnityEngine.InputSystem.InputControl control)
    // Offset: 0x51354F4
    int GetDisplayIndexFor(::UnityEngine::InputSystem::InputControl* control);
    // private System.Int32 GetPointerStateIndexFor(ref UnityEngine.InputSystem.InputAction/CallbackContext context)
    // Offset: 0x51355A0
    int GetPointerStateIndexFor(ByRef<::UnityEngine::InputSystem::InputAction_CallbackContext> context);
    // private System.Int32 GetPointerStateIndexFor(UnityEngine.InputSystem.InputControl control, System.Boolean createIfNotExists)
    // Offset: 0x5135664
    int GetPointerStateIndexFor(::UnityEngine::InputSystem::InputControl* control, bool createIfNotExists);
    // private System.Int32 AllocatePointer(System.Int32 pointerId, System.Int32 displayIndex, System.Int32 touchId, UnityEngine.InputSystem.UI.UIPointerType pointerType, UnityEngine.InputSystem.InputControl control, UnityEngine.InputSystem.InputDevice device, UnityEngine.InputSystem.InputControl touchControl)
    // Offset: 0x513605C
    int AllocatePointer(int pointerId, int displayIndex, int touchId, ::UnityEngine::InputSystem::UI::UIPointerType pointerType, ::UnityEngine::InputSystem::InputControl* control, ::UnityEngine::InputSystem::InputDevice* device, ::UnityEngine::InputSystem::InputControl* touchControl);
    // private System.Void SendPointerExitEventsAndRemovePointer(System.Int32 index)
    // Offset: 0x51353E4
    void SendPointerExitEventsAndRemovePointer(int index);
    // private System.Void RemovePointerAtIndex(System.Int32 index)
    // Offset: 0x513635C
    void RemovePointerAtIndex(int index);
    // private System.Void PurgeStalePointers()
    // Offset: 0x5136598
    void PurgeStalePointers();
    // static private System.Boolean HaveControlForDevice(UnityEngine.InputSystem.InputDevice device, UnityEngine.InputSystem.InputActionReference actionReference)
    // Offset: 0x5135F90
    static bool HaveControlForDevice(::UnityEngine::InputSystem::InputDevice* device, ::UnityEngine::InputSystem::InputActionReference* actionReference);
    // private System.Void OnPointCallback(UnityEngine.InputSystem.InputAction/CallbackContext context)
    // Offset: 0x51366B0
    void OnPointCallback(::UnityEngine::InputSystem::InputAction_CallbackContext context);
    // private System.Boolean IgnoreNextClick(ref UnityEngine.InputSystem.InputAction/CallbackContext context, System.Boolean wasPressed)
    // Offset: 0x5136798
    bool IgnoreNextClick(ByRef<::UnityEngine::InputSystem::InputAction_CallbackContext> context, bool wasPressed);
    // private System.Void OnLeftClickCallback(UnityEngine.InputSystem.InputAction/CallbackContext context)
    // Offset: 0x51368BC
    void OnLeftClickCallback(::UnityEngine::InputSystem::InputAction_CallbackContext context);
    // private System.Void OnRightClickCallback(UnityEngine.InputSystem.InputAction/CallbackContext context)
    // Offset: 0x51369D4
    void OnRightClickCallback(::UnityEngine::InputSystem::InputAction_CallbackContext context);
    // private System.Void OnMiddleClickCallback(UnityEngine.InputSystem.InputAction/CallbackContext context)
    // Offset: 0x5136A98
    void OnMiddleClickCallback(::UnityEngine::InputSystem::InputAction_CallbackContext context);
    // private System.Boolean CheckForRemovedDevice(ref UnityEngine.InputSystem.InputAction/CallbackContext context)
    // Offset: 0x5135600
    bool CheckForRemovedDevice(ByRef<::UnityEngine::InputSystem::InputAction_CallbackContext> context);
    // private System.Void OnScrollCallback(UnityEngine.InputSystem.InputAction/CallbackContext context)
    // Offset: 0x5136B5C
    void OnScrollCallback(::UnityEngine::InputSystem::InputAction_CallbackContext context);
    // private System.Void OnMoveCallback(UnityEngine.InputSystem.InputAction/CallbackContext context)
    // Offset: 0x5136C64
    void OnMoveCallback(::UnityEngine::InputSystem::InputAction_CallbackContext context);
    // private System.Void OnTrackedDeviceOrientationCallback(UnityEngine.InputSystem.InputAction/CallbackContext context)
    // Offset: 0x5136CC4
    void OnTrackedDeviceOrientationCallback(::UnityEngine::InputSystem::InputAction_CallbackContext context);
    // private System.Void OnTrackedDevicePositionCallback(UnityEngine.InputSystem.InputAction/CallbackContext context)
    // Offset: 0x5136DA0
    void OnTrackedDevicePositionCallback(::UnityEngine::InputSystem::InputAction_CallbackContext context);
    // private System.Void OnControlsChanged(System.Object obj)
    // Offset: 0x5136E78
    void OnControlsChanged(::Il2CppObject* obj);
    // private System.Void HookActions()
    // Offset: 0x5134F4C
    void HookActions();
    // private System.Void UnhookActions()
    // Offset: 0x5134CBC
    void UnhookActions();
    // private System.Void SetActionCallbacks(System.Boolean install)
    // Offset: 0x5137210
    void SetActionCallbacks(bool install);
    // static private System.Void SetActionCallback(UnityEngine.InputSystem.InputActionReference actionReference, System.Action`1<UnityEngine.InputSystem.InputAction/CallbackContext> callback, System.Boolean install)
    // Offset: 0x51372F8
    static void SetActionCallback(::UnityEngine::InputSystem::InputActionReference* actionReference, ::System::Action_1<::UnityEngine::InputSystem::InputAction_CallbackContext>* callback, bool install);
    // private UnityEngine.InputSystem.InputActionReference UpdateReferenceForNewAsset(UnityEngine.InputSystem.InputActionReference actionReference)
    // Offset: 0x51373DC
    ::UnityEngine::InputSystem::InputActionReference* UpdateReferenceForNewAsset(::UnityEngine::InputSystem::InputActionReference* actionReference);
    // public UnityEngine.InputSystem.InputActionAsset get_actionsAsset()
    // Offset: 0x5137464
    ::UnityEngine::InputSystem::InputActionAsset* get_actionsAsset();
    // public System.Void set_actionsAsset(UnityEngine.InputSystem.InputActionAsset value)
    // Offset: 0x5134830
    void set_actionsAsset(::UnityEngine::InputSystem::InputActionAsset* value);
    // public System.Void .ctor()
    // Offset: 0x513746C
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static InputSystemUIInputModule* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::UI::InputSystemUIInputModule::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<InputSystemUIInputModule*, creationType>()));
    }
    // static private System.Void .cctor()
    // Offset: 0x5137498
    static void _cctor();
    // public override System.Void ActivateModule()
    // Offset: 0x5130D44
    // Implemented from: UnityEngine.EventSystems.BaseInputModule
    // Base method: System.Void BaseInputModule::ActivateModule()
    void ActivateModule();
    // public override System.Boolean IsPointerOverGameObject(System.Int32 pointerOrTouchId)
    // Offset: 0x5130DF8
    // Implemented from: UnityEngine.EventSystems.BaseInputModule
    // Base method: System.Boolean BaseInputModule::IsPointerOverGameObject(System.Int32 pointerOrTouchId)
    bool IsPointerOverGameObject(int pointerOrTouchId);
    // protected override System.Void Awake()
    // Offset: 0x5134BE4
    // Implemented from: UnityEngine.EventSystems.UIBehaviour
    // Base method: System.Void UIBehaviour::Awake()
    void Awake();
    // protected override System.Void OnDestroy()
    // Offset: 0x5134C8C
    // Implemented from: UnityEngine.EventSystems.UIBehaviour
    // Base method: System.Void UIBehaviour::OnDestroy()
    void OnDestroy();
    // protected override System.Void OnEnable()
    // Offset: 0x5134CD0
    // Implemented from: UnityEngine.EventSystems.BaseInputModule
    // Base method: System.Void BaseInputModule::OnEnable()
    void OnEnable();
    // protected override System.Void OnDisable()
    // Offset: 0x513529C
    // Implemented from: UnityEngine.EventSystems.BaseInputModule
    // Base method: System.Void BaseInputModule::OnDisable()
    void OnDisable();
    // public override System.Void Process()
    // Offset: 0x5136E84
    // Implemented from: UnityEngine.EventSystems.BaseInputModule
    // Base method: System.Void BaseInputModule::Process()
    void Process();
    // public override System.Int32 ConvertUIToolkitPointerId(UnityEngine.EventSystems.PointerEventData sourcePointerData)
    // Offset: 0x5137140
    // Implemented from: UnityEngine.EventSystems.BaseInputModule
    // Base method: System.Int32 BaseInputModule::ConvertUIToolkitPointerId(UnityEngine.EventSystems.PointerEventData sourcePointerData)
    int ConvertUIToolkitPointerId(::UnityEngine::EventSystems::PointerEventData* sourcePointerData);
  }; // UnityEngine.InputSystem.UI.InputSystemUIInputModule
  // WARNING Not writing size check since size may be invalid!
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::InputSystem::UI::InputSystemUIInputModule::CursorLockBehavior, "UnityEngine.InputSystem.UI", "InputSystemUIInputModule/CursorLockBehavior");
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::InputSystem::UI::InputSystemUIInputModule::InputActionReferenceState, "UnityEngine.InputSystem.UI", "InputSystemUIInputModule/InputActionReferenceState");
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::InputSystem::UI::InputSystemUIInputModule::get_deselectOnBackgroundClick
// Il2CppName: get_deselectOnBackgroundClick
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::InputSystem::UI::InputSystemUIInputModule::*)()>(&UnityEngine::InputSystem::UI::InputSystemUIInputModule::get_deselectOnBackgroundClick)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::UI::InputSystemUIInputModule*), "get_deselectOnBackgroundClick", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::UI::InputSystemUIInputModule::set_deselectOnBackgroundClick
// Il2CppName: set_deselectOnBackgroundClick
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::UI::InputSystemUIInputModule::*)(bool)>(&UnityEngine::InputSystem::UI::InputSystemUIInputModule::set_deselectOnBackgroundClick)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::UI::InputSystemUIInputModule*), "set_deselectOnBackgroundClick", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::UI::InputSystemUIInputModule::get_pointerBehavior
// Il2CppName: get_pointerBehavior
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::UI::UIPointerBehavior (UnityEngine::InputSystem::UI::InputSystemUIInputModule::*)()>(&UnityEngine::InputSystem::UI::InputSystemUIInputModule::get_pointerBehavior)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::UI::InputSystemUIInputModule*), "get_pointerBehavior", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::UI::InputSystemUIInputModule::set_pointerBehavior
// Il2CppName: set_pointerBehavior
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::UI::InputSystemUIInputModule::*)(::UnityEngine::InputSystem::UI::UIPointerBehavior)>(&UnityEngine::InputSystem::UI::InputSystemUIInputModule::set_pointerBehavior)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem.UI", "UIPointerBehavior")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::UI::InputSystemUIInputModule*), "set_pointerBehavior", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::UI::InputSystemUIInputModule::get_cursorLockBehavior
// Il2CppName: get_cursorLockBehavior
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::UI::InputSystemUIInputModule::CursorLockBehavior (UnityEngine::InputSystem::UI::InputSystemUIInputModule::*)()>(&UnityEngine::InputSystem::UI::InputSystemUIInputModule::get_cursorLockBehavior)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::UI::InputSystemUIInputModule*), "get_cursorLockBehavior", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::UI::InputSystemUIInputModule::set_cursorLockBehavior
// Il2CppName: set_cursorLockBehavior
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::UI::InputSystemUIInputModule::*)(::UnityEngine::InputSystem::UI::InputSystemUIInputModule::CursorLockBehavior)>(&UnityEngine::InputSystem::UI::InputSystemUIInputModule::set_cursorLockBehavior)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem.UI", "InputSystemUIInputModule/CursorLockBehavior")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::UI::InputSystemUIInputModule*), "set_cursorLockBehavior", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::UI::InputSystemUIInputModule::get_localMultiPlayerRoot
// Il2CppName: get_localMultiPlayerRoot
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::GameObject* (UnityEngine::InputSystem::UI::InputSystemUIInputModule::*)()>(&UnityEngine::InputSystem::UI::InputSystemUIInputModule::get_localMultiPlayerRoot)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::UI::InputSystemUIInputModule*), "get_localMultiPlayerRoot", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::UI::InputSystemUIInputModule::set_localMultiPlayerRoot
// Il2CppName: set_localMultiPlayerRoot
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::UI::InputSystemUIInputModule::*)(::UnityEngine::GameObject*)>(&UnityEngine::InputSystem::UI::InputSystemUIInputModule::set_localMultiPlayerRoot)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::UI::InputSystemUIInputModule*), "set_localMultiPlayerRoot", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::UI::InputSystemUIInputModule::GetLastRaycastResult
// Il2CppName: GetLastRaycastResult
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::EventSystems::RaycastResult (UnityEngine::InputSystem::UI::InputSystemUIInputModule::*)(int)>(&UnityEngine::InputSystem::UI::InputSystemUIInputModule::GetLastRaycastResult)> {
  static const MethodInfo* get() {
    static auto* pointerOrTouchId = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::UI::InputSystemUIInputModule*), "GetLastRaycastResult", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{pointerOrTouchId});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::UI::InputSystemUIInputModule::PerformRaycast
// Il2CppName: PerformRaycast
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::EventSystems::RaycastResult (UnityEngine::InputSystem::UI::InputSystemUIInputModule::*)(::UnityEngine::InputSystem::UI::ExtendedPointerEventData*)>(&UnityEngine::InputSystem::UI::InputSystemUIInputModule::PerformRaycast)> {
  static const MethodInfo* get() {
    static auto* eventData = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem.UI", "ExtendedPointerEventData")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::UI::InputSystemUIInputModule*), "PerformRaycast", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{eventData});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::UI::InputSystemUIInputModule::ProcessPointer
// Il2CppName: ProcessPointer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::UI::InputSystemUIInputModule::*)(ByRef<::UnityEngine::InputSystem::UI::PointerModel>)>(&UnityEngine::InputSystem::UI::InputSystemUIInputModule::ProcessPointer)> {
  static const MethodInfo* get() {
    static auto* state = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem.UI", "PointerModel")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::UI::InputSystemUIInputModule*), "ProcessPointer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{state});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::UI::InputSystemUIInputModule::PointerShouldIgnoreTransform
// Il2CppName: PointerShouldIgnoreTransform
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::InputSystem::UI::InputSystemUIInputModule::*)(::UnityEngine::Transform*)>(&UnityEngine::InputSystem::UI::InputSystemUIInputModule::PointerShouldIgnoreTransform)> {
  static const MethodInfo* get() {
    static auto* t = &::il2cpp_utils::GetClassFromName("UnityEngine", "Transform")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::UI::InputSystemUIInputModule*), "PointerShouldIgnoreTransform", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{t});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::UI::InputSystemUIInputModule::ProcessPointerMovement
// Il2CppName: ProcessPointerMovement
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::UI::InputSystemUIInputModule::*)(ByRef<::UnityEngine::InputSystem::UI::PointerModel>, ::UnityEngine::InputSystem::UI::ExtendedPointerEventData*)>(&UnityEngine::InputSystem::UI::InputSystemUIInputModule::ProcessPointerMovement)> {
  static const MethodInfo* get() {
    static auto* pointer = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem.UI", "PointerModel")->this_arg;
    static auto* eventData = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem.UI", "ExtendedPointerEventData")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::UI::InputSystemUIInputModule*), "ProcessPointerMovement", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{pointer, eventData});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::UI::InputSystemUIInputModule::ProcessPointerMovement
// Il2CppName: ProcessPointerMovement
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::UI::InputSystemUIInputModule::*)(::UnityEngine::InputSystem::UI::ExtendedPointerEventData*, ::UnityEngine::GameObject*)>(&UnityEngine::InputSystem::UI::InputSystemUIInputModule::ProcessPointerMovement)> {
  static const MethodInfo* get() {
    static auto* eventData = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem.UI", "ExtendedPointerEventData")->byval_arg;
    static auto* currentPointerTarget = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::UI::InputSystemUIInputModule*), "ProcessPointerMovement", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{eventData, currentPointerTarget});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::UI::InputSystemUIInputModule::ProcessPointerButton
// Il2CppName: ProcessPointerButton
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::UI::InputSystemUIInputModule::*)(ByRef<::UnityEngine::InputSystem::UI::PointerModel::ButtonState>, ::UnityEngine::EventSystems::PointerEventData*)>(&UnityEngine::InputSystem::UI::InputSystemUIInputModule::ProcessPointerButton)> {
  static const MethodInfo* get() {
    static auto* button = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem.UI", "PointerModel/ButtonState")->this_arg;
    static auto* eventData = &::il2cpp_utils::GetClassFromName("UnityEngine.EventSystems", "PointerEventData")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::UI::InputSystemUIInputModule*), "ProcessPointerButton", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{button, eventData});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::UI::InputSystemUIInputModule::ProcessPointerButtonDrag
// Il2CppName: ProcessPointerButtonDrag
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::UI::InputSystemUIInputModule::*)(ByRef<::UnityEngine::InputSystem::UI::PointerModel::ButtonState>, ::UnityEngine::InputSystem::UI::ExtendedPointerEventData*)>(&UnityEngine::InputSystem::UI::InputSystemUIInputModule::ProcessPointerButtonDrag)> {
  static const MethodInfo* get() {
    static auto* button = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem.UI", "PointerModel/ButtonState")->this_arg;
    static auto* eventData = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem.UI", "ExtendedPointerEventData")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::UI::InputSystemUIInputModule*), "ProcessPointerButtonDrag", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{button, eventData});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::UI::InputSystemUIInputModule::ProcessPointerScroll
// Il2CppName: ProcessPointerScroll
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(ByRef<::UnityEngine::InputSystem::UI::PointerModel>, ::UnityEngine::EventSystems::PointerEventData*)>(&UnityEngine::InputSystem::UI::InputSystemUIInputModule::ProcessPointerScroll)> {
  static const MethodInfo* get() {
    static auto* pointer = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem.UI", "PointerModel")->this_arg;
    static auto* eventData = &::il2cpp_utils::GetClassFromName("UnityEngine.EventSystems", "PointerEventData")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::UI::InputSystemUIInputModule*), "ProcessPointerScroll", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{pointer, eventData});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::UI::InputSystemUIInputModule::ProcessNavigation
// Il2CppName: ProcessNavigation
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::UI::InputSystemUIInputModule::*)(ByRef<::UnityEngine::InputSystem::UI::NavigationModel>)>(&UnityEngine::InputSystem::UI::InputSystemUIInputModule::ProcessNavigation)> {
  static const MethodInfo* get() {
    static auto* navigationState = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem.UI", "NavigationModel")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::UI::InputSystemUIInputModule*), "ProcessNavigation", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{navigationState});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::UI::InputSystemUIInputModule::IsMoveAllowed
// Il2CppName: IsMoveAllowed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::InputSystem::UI::InputSystemUIInputModule::*)(::UnityEngine::EventSystems::AxisEventData*)>(&UnityEngine::InputSystem::UI::InputSystemUIInputModule::IsMoveAllowed)> {
  static const MethodInfo* get() {
    static auto* eventData = &::il2cpp_utils::GetClassFromName("UnityEngine.EventSystems", "AxisEventData")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::UI::InputSystemUIInputModule*), "IsMoveAllowed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{eventData});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::UI::InputSystemUIInputModule::get_moveRepeatDelay
// Il2CppName: get_moveRepeatDelay
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::InputSystem::UI::InputSystemUIInputModule::*)()>(&UnityEngine::InputSystem::UI::InputSystemUIInputModule::get_moveRepeatDelay)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::UI::InputSystemUIInputModule*), "get_moveRepeatDelay", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::UI::InputSystemUIInputModule::set_moveRepeatDelay
// Il2CppName: set_moveRepeatDelay
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::UI::InputSystemUIInputModule::*)(float)>(&UnityEngine::InputSystem::UI::InputSystemUIInputModule::set_moveRepeatDelay)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::UI::InputSystemUIInputModule*), "set_moveRepeatDelay", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::UI::InputSystemUIInputModule::get_moveRepeatRate
// Il2CppName: get_moveRepeatRate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::InputSystem::UI::InputSystemUIInputModule::*)()>(&UnityEngine::InputSystem::UI::InputSystemUIInputModule::get_moveRepeatRate)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::UI::InputSystemUIInputModule*), "get_moveRepeatRate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::UI::InputSystemUIInputModule::set_moveRepeatRate
// Il2CppName: set_moveRepeatRate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::UI::InputSystemUIInputModule::*)(float)>(&UnityEngine::InputSystem::UI::InputSystemUIInputModule::set_moveRepeatRate)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::UI::InputSystemUIInputModule*), "set_moveRepeatRate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::UI::InputSystemUIInputModule::get_explictlyIgnoreFocus
// Il2CppName: get_explictlyIgnoreFocus
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::InputSystem::UI::InputSystemUIInputModule::*)()>(&UnityEngine::InputSystem::UI::InputSystemUIInputModule::get_explictlyIgnoreFocus)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::UI::InputSystemUIInputModule*), "get_explictlyIgnoreFocus", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::UI::InputSystemUIInputModule::get_shouldIgnoreFocus
// Il2CppName: get_shouldIgnoreFocus
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::InputSystem::UI::InputSystemUIInputModule::*)()>(&UnityEngine::InputSystem::UI::InputSystemUIInputModule::get_shouldIgnoreFocus)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::UI::InputSystemUIInputModule*), "get_shouldIgnoreFocus", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::UI::InputSystemUIInputModule::get_repeatRate
// Il2CppName: get_repeatRate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::InputSystem::UI::InputSystemUIInputModule::*)()>(&UnityEngine::InputSystem::UI::InputSystemUIInputModule::get_repeatRate)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::UI::InputSystemUIInputModule*), "get_repeatRate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::UI::InputSystemUIInputModule::set_repeatRate
// Il2CppName: set_repeatRate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::UI::InputSystemUIInputModule::*)(float)>(&UnityEngine::InputSystem::UI::InputSystemUIInputModule::set_repeatRate)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::UI::InputSystemUIInputModule*), "set_repeatRate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::UI::InputSystemUIInputModule::get_repeatDelay
// Il2CppName: get_repeatDelay
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::InputSystem::UI::InputSystemUIInputModule::*)()>(&UnityEngine::InputSystem::UI::InputSystemUIInputModule::get_repeatDelay)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::UI::InputSystemUIInputModule*), "get_repeatDelay", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::UI::InputSystemUIInputModule::set_repeatDelay
// Il2CppName: set_repeatDelay
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::UI::InputSystemUIInputModule::*)(float)>(&UnityEngine::InputSystem::UI::InputSystemUIInputModule::set_repeatDelay)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::UI::InputSystemUIInputModule*), "set_repeatDelay", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::UI::InputSystemUIInputModule::get_xrTrackingOrigin
// Il2CppName: get_xrTrackingOrigin
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Transform* (UnityEngine::InputSystem::UI::InputSystemUIInputModule::*)()>(&UnityEngine::InputSystem::UI::InputSystemUIInputModule::get_xrTrackingOrigin)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::UI::InputSystemUIInputModule*), "get_xrTrackingOrigin", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::UI::InputSystemUIInputModule::set_xrTrackingOrigin
// Il2CppName: set_xrTrackingOrigin
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::UI::InputSystemUIInputModule::*)(::UnityEngine::Transform*)>(&UnityEngine::InputSystem::UI::InputSystemUIInputModule::set_xrTrackingOrigin)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Transform")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::UI::InputSystemUIInputModule*), "set_xrTrackingOrigin", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::UI::InputSystemUIInputModule::get_trackedDeviceDragThresholdMultiplier
// Il2CppName: get_trackedDeviceDragThresholdMultiplier
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::InputSystem::UI::InputSystemUIInputModule::*)()>(&UnityEngine::InputSystem::UI::InputSystemUIInputModule::get_trackedDeviceDragThresholdMultiplier)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::UI::InputSystemUIInputModule*), "get_trackedDeviceDragThresholdMultiplier", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::UI::InputSystemUIInputModule::set_trackedDeviceDragThresholdMultiplier
// Il2CppName: set_trackedDeviceDragThresholdMultiplier
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::UI::InputSystemUIInputModule::*)(float)>(&UnityEngine::InputSystem::UI::InputSystemUIInputModule::set_trackedDeviceDragThresholdMultiplier)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::UI::InputSystemUIInputModule*), "set_trackedDeviceDragThresholdMultiplier", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::UI::InputSystemUIInputModule::SwapAction
// Il2CppName: SwapAction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::UI::InputSystemUIInputModule::*)(ByRef<::UnityEngine::InputSystem::InputActionReference*>, ::UnityEngine::InputSystem::InputActionReference*, bool, ::System::Action_1<::UnityEngine::InputSystem::InputAction_CallbackContext>*)>(&UnityEngine::InputSystem::UI::InputSystemUIInputModule::SwapAction)> {
  static const MethodInfo* get() {
    static auto* property = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputActionReference")->this_arg;
    static auto* newValue = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputActionReference")->byval_arg;
    static auto* actionsHooked = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* actionCallback = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputAction/CallbackContext")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::UI::InputSystemUIInputModule*), "SwapAction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{property, newValue, actionsHooked, actionCallback});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::UI::InputSystemUIInputModule::get_point
// Il2CppName: get_point
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::InputActionReference* (UnityEngine::InputSystem::UI::InputSystemUIInputModule::*)()>(&UnityEngine::InputSystem::UI::InputSystemUIInputModule::get_point)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::UI::InputSystemUIInputModule*), "get_point", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::UI::InputSystemUIInputModule::set_point
// Il2CppName: set_point
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::UI::InputSystemUIInputModule::*)(::UnityEngine::InputSystem::InputActionReference*)>(&UnityEngine::InputSystem::UI::InputSystemUIInputModule::set_point)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputActionReference")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::UI::InputSystemUIInputModule*), "set_point", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::UI::InputSystemUIInputModule::get_scrollWheel
// Il2CppName: get_scrollWheel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::InputActionReference* (UnityEngine::InputSystem::UI::InputSystemUIInputModule::*)()>(&UnityEngine::InputSystem::UI::InputSystemUIInputModule::get_scrollWheel)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::UI::InputSystemUIInputModule*), "get_scrollWheel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::UI::InputSystemUIInputModule::set_scrollWheel
// Il2CppName: set_scrollWheel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::UI::InputSystemUIInputModule::*)(::UnityEngine::InputSystem::InputActionReference*)>(&UnityEngine::InputSystem::UI::InputSystemUIInputModule::set_scrollWheel)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputActionReference")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::UI::InputSystemUIInputModule*), "set_scrollWheel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::UI::InputSystemUIInputModule::get_leftClick
// Il2CppName: get_leftClick
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::InputActionReference* (UnityEngine::InputSystem::UI::InputSystemUIInputModule::*)()>(&UnityEngine::InputSystem::UI::InputSystemUIInputModule::get_leftClick)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::UI::InputSystemUIInputModule*), "get_leftClick", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::UI::InputSystemUIInputModule::set_leftClick
// Il2CppName: set_leftClick
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::UI::InputSystemUIInputModule::*)(::UnityEngine::InputSystem::InputActionReference*)>(&UnityEngine::InputSystem::UI::InputSystemUIInputModule::set_leftClick)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputActionReference")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::UI::InputSystemUIInputModule*), "set_leftClick", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::UI::InputSystemUIInputModule::get_middleClick
// Il2CppName: get_middleClick
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::InputActionReference* (UnityEngine::InputSystem::UI::InputSystemUIInputModule::*)()>(&UnityEngine::InputSystem::UI::InputSystemUIInputModule::get_middleClick)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::UI::InputSystemUIInputModule*), "get_middleClick", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::UI::InputSystemUIInputModule::set_middleClick
// Il2CppName: set_middleClick
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::UI::InputSystemUIInputModule::*)(::UnityEngine::InputSystem::InputActionReference*)>(&UnityEngine::InputSystem::UI::InputSystemUIInputModule::set_middleClick)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputActionReference")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::UI::InputSystemUIInputModule*), "set_middleClick", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::UI::InputSystemUIInputModule::get_rightClick
// Il2CppName: get_rightClick
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::InputActionReference* (UnityEngine::InputSystem::UI::InputSystemUIInputModule::*)()>(&UnityEngine::InputSystem::UI::InputSystemUIInputModule::get_rightClick)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::UI::InputSystemUIInputModule*), "get_rightClick", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::UI::InputSystemUIInputModule::set_rightClick
// Il2CppName: set_rightClick
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::UI::InputSystemUIInputModule::*)(::UnityEngine::InputSystem::InputActionReference*)>(&UnityEngine::InputSystem::UI::InputSystemUIInputModule::set_rightClick)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputActionReference")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::UI::InputSystemUIInputModule*), "set_rightClick", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::UI::InputSystemUIInputModule::get_move
// Il2CppName: get_move
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::InputActionReference* (UnityEngine::InputSystem::UI::InputSystemUIInputModule::*)()>(&UnityEngine::InputSystem::UI::InputSystemUIInputModule::get_move)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::UI::InputSystemUIInputModule*), "get_move", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::UI::InputSystemUIInputModule::set_move
// Il2CppName: set_move
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::UI::InputSystemUIInputModule::*)(::UnityEngine::InputSystem::InputActionReference*)>(&UnityEngine::InputSystem::UI::InputSystemUIInputModule::set_move)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputActionReference")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::UI::InputSystemUIInputModule*), "set_move", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::UI::InputSystemUIInputModule::get_submit
// Il2CppName: get_submit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::InputActionReference* (UnityEngine::InputSystem::UI::InputSystemUIInputModule::*)()>(&UnityEngine::InputSystem::UI::InputSystemUIInputModule::get_submit)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::UI::InputSystemUIInputModule*), "get_submit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::UI::InputSystemUIInputModule::set_submit
// Il2CppName: set_submit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::UI::InputSystemUIInputModule::*)(::UnityEngine::InputSystem::InputActionReference*)>(&UnityEngine::InputSystem::UI::InputSystemUIInputModule::set_submit)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputActionReference")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::UI::InputSystemUIInputModule*), "set_submit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::UI::InputSystemUIInputModule::get_cancel
// Il2CppName: get_cancel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::InputActionReference* (UnityEngine::InputSystem::UI::InputSystemUIInputModule::*)()>(&UnityEngine::InputSystem::UI::InputSystemUIInputModule::get_cancel)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::UI::InputSystemUIInputModule*), "get_cancel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::UI::InputSystemUIInputModule::set_cancel
// Il2CppName: set_cancel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::UI::InputSystemUIInputModule::*)(::UnityEngine::InputSystem::InputActionReference*)>(&UnityEngine::InputSystem::UI::InputSystemUIInputModule::set_cancel)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputActionReference")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::UI::InputSystemUIInputModule*), "set_cancel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::UI::InputSystemUIInputModule::get_trackedDeviceOrientation
// Il2CppName: get_trackedDeviceOrientation
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::InputActionReference* (UnityEngine::InputSystem::UI::InputSystemUIInputModule::*)()>(&UnityEngine::InputSystem::UI::InputSystemUIInputModule::get_trackedDeviceOrientation)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::UI::InputSystemUIInputModule*), "get_trackedDeviceOrientation", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::UI::InputSystemUIInputModule::set_trackedDeviceOrientation
// Il2CppName: set_trackedDeviceOrientation
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::UI::InputSystemUIInputModule::*)(::UnityEngine::InputSystem::InputActionReference*)>(&UnityEngine::InputSystem::UI::InputSystemUIInputModule::set_trackedDeviceOrientation)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputActionReference")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::UI::InputSystemUIInputModule*), "set_trackedDeviceOrientation", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::UI::InputSystemUIInputModule::get_trackedDevicePosition
// Il2CppName: get_trackedDevicePosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::InputActionReference* (UnityEngine::InputSystem::UI::InputSystemUIInputModule::*)()>(&UnityEngine::InputSystem::UI::InputSystemUIInputModule::get_trackedDevicePosition)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::UI::InputSystemUIInputModule*), "get_trackedDevicePosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::UI::InputSystemUIInputModule::set_trackedDevicePosition
// Il2CppName: set_trackedDevicePosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::UI::InputSystemUIInputModule::*)(::UnityEngine::InputSystem::InputActionReference*)>(&UnityEngine::InputSystem::UI::InputSystemUIInputModule::set_trackedDevicePosition)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputActionReference")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::UI::InputSystemUIInputModule*), "set_trackedDevicePosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::UI::InputSystemUIInputModule::AssignDefaultActions
// Il2CppName: AssignDefaultActions
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::UI::InputSystemUIInputModule::*)()>(&UnityEngine::InputSystem::UI::InputSystemUIInputModule::AssignDefaultActions)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::UI::InputSystemUIInputModule*), "AssignDefaultActions", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::UI::InputSystemUIInputModule::UnassignActions
// Il2CppName: UnassignActions
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::UI::InputSystemUIInputModule::*)()>(&UnityEngine::InputSystem::UI::InputSystemUIInputModule::UnassignActions)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::UI::InputSystemUIInputModule*), "UnassignActions", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::UI::InputSystemUIInputModule::get_trackedDeviceSelect
// Il2CppName: get_trackedDeviceSelect
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::InputActionReference* (UnityEngine::InputSystem::UI::InputSystemUIInputModule::*)()>(&UnityEngine::InputSystem::UI::InputSystemUIInputModule::get_trackedDeviceSelect)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::UI::InputSystemUIInputModule*), "get_trackedDeviceSelect", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::UI::InputSystemUIInputModule::set_trackedDeviceSelect
// Il2CppName: set_trackedDeviceSelect
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::UI::InputSystemUIInputModule::*)(::UnityEngine::InputSystem::InputActionReference*)>(&UnityEngine::InputSystem::UI::InputSystemUIInputModule::set_trackedDeviceSelect)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputActionReference")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::UI::InputSystemUIInputModule*), "set_trackedDeviceSelect", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::UI::InputSystemUIInputModule::ResetPointers
// Il2CppName: ResetPointers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::UI::InputSystemUIInputModule::*)()>(&UnityEngine::InputSystem::UI::InputSystemUIInputModule::ResetPointers)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::UI::InputSystemUIInputModule*), "ResetPointers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::UI::InputSystemUIInputModule::HasNoActions
// Il2CppName: HasNoActions
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::InputSystem::UI::InputSystemUIInputModule::*)()>(&UnityEngine::InputSystem::UI::InputSystemUIInputModule::HasNoActions)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::UI::InputSystemUIInputModule*), "HasNoActions", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::UI::InputSystemUIInputModule::EnableAllActions
// Il2CppName: EnableAllActions
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::UI::InputSystemUIInputModule::*)()>(&UnityEngine::InputSystem::UI::InputSystemUIInputModule::EnableAllActions)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::UI::InputSystemUIInputModule*), "EnableAllActions", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::UI::InputSystemUIInputModule::DisableAllActions
// Il2CppName: DisableAllActions
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::UI::InputSystemUIInputModule::*)()>(&UnityEngine::InputSystem::UI::InputSystemUIInputModule::DisableAllActions)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::UI::InputSystemUIInputModule*), "DisableAllActions", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::UI::InputSystemUIInputModule::EnableInputAction
// Il2CppName: EnableInputAction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::UI::InputSystemUIInputModule::*)(::UnityEngine::InputSystem::InputActionReference*)>(&UnityEngine::InputSystem::UI::InputSystemUIInputModule::EnableInputAction)> {
  static const MethodInfo* get() {
    static auto* inputActionReference = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputActionReference")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::UI::InputSystemUIInputModule*), "EnableInputAction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{inputActionReference});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::UI::InputSystemUIInputModule::TryDisableInputAction
// Il2CppName: TryDisableInputAction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::UI::InputSystemUIInputModule::*)(::UnityEngine::InputSystem::InputActionReference*, bool)>(&UnityEngine::InputSystem::UI::InputSystemUIInputModule::TryDisableInputAction)> {
  static const MethodInfo* get() {
    static auto* inputActionReference = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputActionReference")->byval_arg;
    static auto* isComponentDisabling = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::UI::InputSystemUIInputModule*), "TryDisableInputAction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{inputActionReference, isComponentDisabling});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::UI::InputSystemUIInputModule::GetPointerStateIndexFor
// Il2CppName: GetPointerStateIndexFor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::InputSystem::UI::InputSystemUIInputModule::*)(int)>(&UnityEngine::InputSystem::UI::InputSystemUIInputModule::GetPointerStateIndexFor)> {
  static const MethodInfo* get() {
    static auto* pointerOrTouchId = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::UI::InputSystemUIInputModule*), "GetPointerStateIndexFor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{pointerOrTouchId});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::UI::InputSystemUIInputModule::GetPointerStateForIndex
// Il2CppName: GetPointerStateForIndex
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::UI::PointerModel (UnityEngine::InputSystem::UI::InputSystemUIInputModule::*)(int)>(&UnityEngine::InputSystem::UI::InputSystemUIInputModule::GetPointerStateForIndex)> {
  static const MethodInfo* get() {
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::UI::InputSystemUIInputModule*), "GetPointerStateForIndex", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{index});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::UI::InputSystemUIInputModule::GetDisplayIndexFor
// Il2CppName: GetDisplayIndexFor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::InputSystem::UI::InputSystemUIInputModule::*)(::UnityEngine::InputSystem::InputControl*)>(&UnityEngine::InputSystem::UI::InputSystemUIInputModule::GetDisplayIndexFor)> {
  static const MethodInfo* get() {
    static auto* control = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputControl")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::UI::InputSystemUIInputModule*), "GetDisplayIndexFor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{control});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::UI::InputSystemUIInputModule::GetPointerStateIndexFor
// Il2CppName: GetPointerStateIndexFor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::InputSystem::UI::InputSystemUIInputModule::*)(ByRef<::UnityEngine::InputSystem::InputAction_CallbackContext>)>(&UnityEngine::InputSystem::UI::InputSystemUIInputModule::GetPointerStateIndexFor)> {
  static const MethodInfo* get() {
    static auto* context = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputAction/CallbackContext")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::UI::InputSystemUIInputModule*), "GetPointerStateIndexFor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{context});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::UI::InputSystemUIInputModule::GetPointerStateIndexFor
// Il2CppName: GetPointerStateIndexFor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::InputSystem::UI::InputSystemUIInputModule::*)(::UnityEngine::InputSystem::InputControl*, bool)>(&UnityEngine::InputSystem::UI::InputSystemUIInputModule::GetPointerStateIndexFor)> {
  static const MethodInfo* get() {
    static auto* control = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputControl")->byval_arg;
    static auto* createIfNotExists = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::UI::InputSystemUIInputModule*), "GetPointerStateIndexFor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{control, createIfNotExists});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::UI::InputSystemUIInputModule::AllocatePointer
// Il2CppName: AllocatePointer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::InputSystem::UI::InputSystemUIInputModule::*)(int, int, int, ::UnityEngine::InputSystem::UI::UIPointerType, ::UnityEngine::InputSystem::InputControl*, ::UnityEngine::InputSystem::InputDevice*, ::UnityEngine::InputSystem::InputControl*)>(&UnityEngine::InputSystem::UI::InputSystemUIInputModule::AllocatePointer)> {
  static const MethodInfo* get() {
    static auto* pointerId = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* displayIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* touchId = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* pointerType = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem.UI", "UIPointerType")->byval_arg;
    static auto* control = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputControl")->byval_arg;
    static auto* device = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputDevice")->byval_arg;
    static auto* touchControl = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputControl")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::UI::InputSystemUIInputModule*), "AllocatePointer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{pointerId, displayIndex, touchId, pointerType, control, device, touchControl});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::UI::InputSystemUIInputModule::SendPointerExitEventsAndRemovePointer
// Il2CppName: SendPointerExitEventsAndRemovePointer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::UI::InputSystemUIInputModule::*)(int)>(&UnityEngine::InputSystem::UI::InputSystemUIInputModule::SendPointerExitEventsAndRemovePointer)> {
  static const MethodInfo* get() {
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::UI::InputSystemUIInputModule*), "SendPointerExitEventsAndRemovePointer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{index});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::UI::InputSystemUIInputModule::RemovePointerAtIndex
// Il2CppName: RemovePointerAtIndex
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::UI::InputSystemUIInputModule::*)(int)>(&UnityEngine::InputSystem::UI::InputSystemUIInputModule::RemovePointerAtIndex)> {
  static const MethodInfo* get() {
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::UI::InputSystemUIInputModule*), "RemovePointerAtIndex", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{index});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::UI::InputSystemUIInputModule::PurgeStalePointers
// Il2CppName: PurgeStalePointers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::UI::InputSystemUIInputModule::*)()>(&UnityEngine::InputSystem::UI::InputSystemUIInputModule::PurgeStalePointers)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::UI::InputSystemUIInputModule*), "PurgeStalePointers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::UI::InputSystemUIInputModule::HaveControlForDevice
// Il2CppName: HaveControlForDevice
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::UnityEngine::InputSystem::InputDevice*, ::UnityEngine::InputSystem::InputActionReference*)>(&UnityEngine::InputSystem::UI::InputSystemUIInputModule::HaveControlForDevice)> {
  static const MethodInfo* get() {
    static auto* device = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputDevice")->byval_arg;
    static auto* actionReference = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputActionReference")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::UI::InputSystemUIInputModule*), "HaveControlForDevice", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{device, actionReference});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::UI::InputSystemUIInputModule::OnPointCallback
// Il2CppName: OnPointCallback
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::UI::InputSystemUIInputModule::*)(::UnityEngine::InputSystem::InputAction_CallbackContext)>(&UnityEngine::InputSystem::UI::InputSystemUIInputModule::OnPointCallback)> {
  static const MethodInfo* get() {
    static auto* context = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputAction/CallbackContext")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::UI::InputSystemUIInputModule*), "OnPointCallback", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{context});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::UI::InputSystemUIInputModule::IgnoreNextClick
// Il2CppName: IgnoreNextClick
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::InputSystem::UI::InputSystemUIInputModule::*)(ByRef<::UnityEngine::InputSystem::InputAction_CallbackContext>, bool)>(&UnityEngine::InputSystem::UI::InputSystemUIInputModule::IgnoreNextClick)> {
  static const MethodInfo* get() {
    static auto* context = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputAction/CallbackContext")->this_arg;
    static auto* wasPressed = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::UI::InputSystemUIInputModule*), "IgnoreNextClick", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{context, wasPressed});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::UI::InputSystemUIInputModule::OnLeftClickCallback
// Il2CppName: OnLeftClickCallback
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::UI::InputSystemUIInputModule::*)(::UnityEngine::InputSystem::InputAction_CallbackContext)>(&UnityEngine::InputSystem::UI::InputSystemUIInputModule::OnLeftClickCallback)> {
  static const MethodInfo* get() {
    static auto* context = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputAction/CallbackContext")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::UI::InputSystemUIInputModule*), "OnLeftClickCallback", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{context});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::UI::InputSystemUIInputModule::OnRightClickCallback
// Il2CppName: OnRightClickCallback
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::UI::InputSystemUIInputModule::*)(::UnityEngine::InputSystem::InputAction_CallbackContext)>(&UnityEngine::InputSystem::UI::InputSystemUIInputModule::OnRightClickCallback)> {
  static const MethodInfo* get() {
    static auto* context = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputAction/CallbackContext")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::UI::InputSystemUIInputModule*), "OnRightClickCallback", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{context});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::UI::InputSystemUIInputModule::OnMiddleClickCallback
// Il2CppName: OnMiddleClickCallback
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::UI::InputSystemUIInputModule::*)(::UnityEngine::InputSystem::InputAction_CallbackContext)>(&UnityEngine::InputSystem::UI::InputSystemUIInputModule::OnMiddleClickCallback)> {
  static const MethodInfo* get() {
    static auto* context = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputAction/CallbackContext")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::UI::InputSystemUIInputModule*), "OnMiddleClickCallback", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{context});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::UI::InputSystemUIInputModule::CheckForRemovedDevice
// Il2CppName: CheckForRemovedDevice
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::InputSystem::UI::InputSystemUIInputModule::*)(ByRef<::UnityEngine::InputSystem::InputAction_CallbackContext>)>(&UnityEngine::InputSystem::UI::InputSystemUIInputModule::CheckForRemovedDevice)> {
  static const MethodInfo* get() {
    static auto* context = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputAction/CallbackContext")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::UI::InputSystemUIInputModule*), "CheckForRemovedDevice", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{context});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::UI::InputSystemUIInputModule::OnScrollCallback
// Il2CppName: OnScrollCallback
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::UI::InputSystemUIInputModule::*)(::UnityEngine::InputSystem::InputAction_CallbackContext)>(&UnityEngine::InputSystem::UI::InputSystemUIInputModule::OnScrollCallback)> {
  static const MethodInfo* get() {
    static auto* context = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputAction/CallbackContext")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::UI::InputSystemUIInputModule*), "OnScrollCallback", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{context});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::UI::InputSystemUIInputModule::OnMoveCallback
// Il2CppName: OnMoveCallback
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::UI::InputSystemUIInputModule::*)(::UnityEngine::InputSystem::InputAction_CallbackContext)>(&UnityEngine::InputSystem::UI::InputSystemUIInputModule::OnMoveCallback)> {
  static const MethodInfo* get() {
    static auto* context = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputAction/CallbackContext")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::UI::InputSystemUIInputModule*), "OnMoveCallback", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{context});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::UI::InputSystemUIInputModule::OnTrackedDeviceOrientationCallback
// Il2CppName: OnTrackedDeviceOrientationCallback
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::UI::InputSystemUIInputModule::*)(::UnityEngine::InputSystem::InputAction_CallbackContext)>(&UnityEngine::InputSystem::UI::InputSystemUIInputModule::OnTrackedDeviceOrientationCallback)> {
  static const MethodInfo* get() {
    static auto* context = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputAction/CallbackContext")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::UI::InputSystemUIInputModule*), "OnTrackedDeviceOrientationCallback", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{context});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::UI::InputSystemUIInputModule::OnTrackedDevicePositionCallback
// Il2CppName: OnTrackedDevicePositionCallback
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::UI::InputSystemUIInputModule::*)(::UnityEngine::InputSystem::InputAction_CallbackContext)>(&UnityEngine::InputSystem::UI::InputSystemUIInputModule::OnTrackedDevicePositionCallback)> {
  static const MethodInfo* get() {
    static auto* context = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputAction/CallbackContext")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::UI::InputSystemUIInputModule*), "OnTrackedDevicePositionCallback", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{context});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::UI::InputSystemUIInputModule::OnControlsChanged
// Il2CppName: OnControlsChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::UI::InputSystemUIInputModule::*)(::Il2CppObject*)>(&UnityEngine::InputSystem::UI::InputSystemUIInputModule::OnControlsChanged)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::UI::InputSystemUIInputModule*), "OnControlsChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::UI::InputSystemUIInputModule::HookActions
// Il2CppName: HookActions
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::UI::InputSystemUIInputModule::*)()>(&UnityEngine::InputSystem::UI::InputSystemUIInputModule::HookActions)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::UI::InputSystemUIInputModule*), "HookActions", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::UI::InputSystemUIInputModule::UnhookActions
// Il2CppName: UnhookActions
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::UI::InputSystemUIInputModule::*)()>(&UnityEngine::InputSystem::UI::InputSystemUIInputModule::UnhookActions)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::UI::InputSystemUIInputModule*), "UnhookActions", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::UI::InputSystemUIInputModule::SetActionCallbacks
// Il2CppName: SetActionCallbacks
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::UI::InputSystemUIInputModule::*)(bool)>(&UnityEngine::InputSystem::UI::InputSystemUIInputModule::SetActionCallbacks)> {
  static const MethodInfo* get() {
    static auto* install = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::UI::InputSystemUIInputModule*), "SetActionCallbacks", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{install});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::UI::InputSystemUIInputModule::SetActionCallback
// Il2CppName: SetActionCallback
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::InputSystem::InputActionReference*, ::System::Action_1<::UnityEngine::InputSystem::InputAction_CallbackContext>*, bool)>(&UnityEngine::InputSystem::UI::InputSystemUIInputModule::SetActionCallback)> {
  static const MethodInfo* get() {
    static auto* actionReference = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputActionReference")->byval_arg;
    static auto* callback = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputAction/CallbackContext")})->byval_arg;
    static auto* install = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::UI::InputSystemUIInputModule*), "SetActionCallback", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{actionReference, callback, install});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::UI::InputSystemUIInputModule::UpdateReferenceForNewAsset
// Il2CppName: UpdateReferenceForNewAsset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::InputActionReference* (UnityEngine::InputSystem::UI::InputSystemUIInputModule::*)(::UnityEngine::InputSystem::InputActionReference*)>(&UnityEngine::InputSystem::UI::InputSystemUIInputModule::UpdateReferenceForNewAsset)> {
  static const MethodInfo* get() {
    static auto* actionReference = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputActionReference")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::UI::InputSystemUIInputModule*), "UpdateReferenceForNewAsset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{actionReference});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::UI::InputSystemUIInputModule::get_actionsAsset
// Il2CppName: get_actionsAsset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::InputActionAsset* (UnityEngine::InputSystem::UI::InputSystemUIInputModule::*)()>(&UnityEngine::InputSystem::UI::InputSystemUIInputModule::get_actionsAsset)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::UI::InputSystemUIInputModule*), "get_actionsAsset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::UI::InputSystemUIInputModule::set_actionsAsset
// Il2CppName: set_actionsAsset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::UI::InputSystemUIInputModule::*)(::UnityEngine::InputSystem::InputActionAsset*)>(&UnityEngine::InputSystem::UI::InputSystemUIInputModule::set_actionsAsset)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputActionAsset")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::UI::InputSystemUIInputModule*), "set_actionsAsset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::UI::InputSystemUIInputModule::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::InputSystem::UI::InputSystemUIInputModule::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&UnityEngine::InputSystem::UI::InputSystemUIInputModule::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::UI::InputSystemUIInputModule*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::UI::InputSystemUIInputModule::ActivateModule
// Il2CppName: ActivateModule
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::UI::InputSystemUIInputModule::*)()>(&UnityEngine::InputSystem::UI::InputSystemUIInputModule::ActivateModule)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::UI::InputSystemUIInputModule*), "ActivateModule", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::UI::InputSystemUIInputModule::IsPointerOverGameObject
// Il2CppName: IsPointerOverGameObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::InputSystem::UI::InputSystemUIInputModule::*)(int)>(&UnityEngine::InputSystem::UI::InputSystemUIInputModule::IsPointerOverGameObject)> {
  static const MethodInfo* get() {
    static auto* pointerOrTouchId = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::UI::InputSystemUIInputModule*), "IsPointerOverGameObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{pointerOrTouchId});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::UI::InputSystemUIInputModule::Awake
// Il2CppName: Awake
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::UI::InputSystemUIInputModule::*)()>(&UnityEngine::InputSystem::UI::InputSystemUIInputModule::Awake)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::UI::InputSystemUIInputModule*), "Awake", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::UI::InputSystemUIInputModule::OnDestroy
// Il2CppName: OnDestroy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::UI::InputSystemUIInputModule::*)()>(&UnityEngine::InputSystem::UI::InputSystemUIInputModule::OnDestroy)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::UI::InputSystemUIInputModule*), "OnDestroy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::UI::InputSystemUIInputModule::OnEnable
// Il2CppName: OnEnable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::UI::InputSystemUIInputModule::*)()>(&UnityEngine::InputSystem::UI::InputSystemUIInputModule::OnEnable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::UI::InputSystemUIInputModule*), "OnEnable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::UI::InputSystemUIInputModule::OnDisable
// Il2CppName: OnDisable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::UI::InputSystemUIInputModule::*)()>(&UnityEngine::InputSystem::UI::InputSystemUIInputModule::OnDisable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::UI::InputSystemUIInputModule*), "OnDisable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::UI::InputSystemUIInputModule::Process
// Il2CppName: Process
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::UI::InputSystemUIInputModule::*)()>(&UnityEngine::InputSystem::UI::InputSystemUIInputModule::Process)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::UI::InputSystemUIInputModule*), "Process", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::UI::InputSystemUIInputModule::ConvertUIToolkitPointerId
// Il2CppName: ConvertUIToolkitPointerId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::InputSystem::UI::InputSystemUIInputModule::*)(::UnityEngine::EventSystems::PointerEventData*)>(&UnityEngine::InputSystem::UI::InputSystemUIInputModule::ConvertUIToolkitPointerId)> {
  static const MethodInfo* get() {
    static auto* sourcePointerData = &::il2cpp_utils::GetClassFromName("UnityEngine.EventSystems", "PointerEventData")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::UI::InputSystemUIInputModule*), "ConvertUIToolkitPointerId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sourcePointerData});
  }
};
