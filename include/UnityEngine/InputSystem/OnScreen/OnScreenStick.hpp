// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.InputSystem.OnScreen.OnScreenControl
#include "UnityEngine/InputSystem/OnScreen/OnScreenControl.hpp"
// Including type: UnityEngine.EventSystems.IPointerDownHandler
#include "UnityEngine/EventSystems/IPointerDownHandler.hpp"
// Including type: UnityEngine.EventSystems.IPointerUpHandler
#include "UnityEngine/EventSystems/IPointerUpHandler.hpp"
// Including type: UnityEngine.EventSystems.IDragHandler
#include "UnityEngine/EventSystems/IDragHandler.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
// Including type: UnityEngine.EventSystems.RaycastResult
#include "UnityEngine/EventSystems/RaycastResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::InputSystem
namespace UnityEngine::InputSystem {
  // Forward declaring type: InputAction
  class InputAction;
  // Forward declaring type: CallbackContext
  struct InputAction_CallbackContext;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Forward declaring namespace: UnityEngine::EventSystems
namespace UnityEngine::EventSystems {
  // Forward declaring type: PointerEventData
  class PointerEventData;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: String
  class String;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Camera
  class Camera;
}
// Forward declaring namespace: UnityEngine::InputSystem::OnScreen
namespace UnityEngine::InputSystem::OnScreen {
  // Skipping declaration: Behaviour because it is already included!
}
// Completed forward declares
// Type namespace: UnityEngine.InputSystem.OnScreen
namespace UnityEngine::InputSystem::OnScreen {
  // Forward declaring type: OnScreenStick
  class OnScreenStick;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::InputSystem::OnScreen::OnScreenStick);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::InputSystem::OnScreen::OnScreenStick*, "UnityEngine.InputSystem.OnScreen", "OnScreenStick");
// Type namespace: UnityEngine.InputSystem.OnScreen
namespace UnityEngine::InputSystem::OnScreen {
  // Size: 0x88
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.InputSystem.OnScreen.OnScreenStick
  // [TokenAttribute] Offset: FFFFFFFF
  // [HelpURLAttribute] Offset: FFFFFFFF
  // [AddComponentMenu] Offset: FFFFFFFF
  class OnScreenStick : public ::UnityEngine::InputSystem::OnScreen::OnScreenControl/*, public ::UnityEngine::EventSystems::IPointerDownHandler, public ::UnityEngine::EventSystems::IPointerUpHandler, public ::UnityEngine::EventSystems::IDragHandler*/ {
    public:
    // Nested type: ::UnityEngine::InputSystem::OnScreen::OnScreenStick::Behaviour
    struct Behaviour;
    // Size: 0x4
    #pragma pack(push, 1)
    // Autogenerated type: UnityEngine.InputSystem.OnScreen.OnScreenStick/Behaviour
    // [TokenAttribute] Offset: FFFFFFFF
    struct Behaviour/*, public ::System::Enum*/ {
      public:
      public:
      // public System.Int32 value__
      // Size: 0x4
      // Offset: 0x0
      int value;
      // Field size check
      static_assert(sizeof(int) == 0x4);
      public:
      // Creating value type constructor for type: Behaviour
      constexpr Behaviour(int value_ = {}) noexcept : value{value_} {}
      // Creating interface conversion operator: operator ::System::Enum
      operator ::System::Enum() noexcept {
        return *reinterpret_cast<::System::Enum*>(this);
      }
      // Creating conversion operator: operator int
      constexpr operator int() const noexcept {
        return value;
      }
      // static field const value: static public UnityEngine.InputSystem.OnScreen.OnScreenStick/Behaviour RelativePositionWithStaticOrigin
      static constexpr const int RelativePositionWithStaticOrigin = 0;
      // Get static field: static public UnityEngine.InputSystem.OnScreen.OnScreenStick/Behaviour RelativePositionWithStaticOrigin
      static ::UnityEngine::InputSystem::OnScreen::OnScreenStick::Behaviour _get_RelativePositionWithStaticOrigin();
      // Set static field: static public UnityEngine.InputSystem.OnScreen.OnScreenStick/Behaviour RelativePositionWithStaticOrigin
      static void _set_RelativePositionWithStaticOrigin(::UnityEngine::InputSystem::OnScreen::OnScreenStick::Behaviour value);
      // static field const value: static public UnityEngine.InputSystem.OnScreen.OnScreenStick/Behaviour ExactPositionWithStaticOrigin
      static constexpr const int ExactPositionWithStaticOrigin = 1;
      // Get static field: static public UnityEngine.InputSystem.OnScreen.OnScreenStick/Behaviour ExactPositionWithStaticOrigin
      static ::UnityEngine::InputSystem::OnScreen::OnScreenStick::Behaviour _get_ExactPositionWithStaticOrigin();
      // Set static field: static public UnityEngine.InputSystem.OnScreen.OnScreenStick/Behaviour ExactPositionWithStaticOrigin
      static void _set_ExactPositionWithStaticOrigin(::UnityEngine::InputSystem::OnScreen::OnScreenStick::Behaviour value);
      // static field const value: static public UnityEngine.InputSystem.OnScreen.OnScreenStick/Behaviour ExactPositionWithDynamicOrigin
      static constexpr const int ExactPositionWithDynamicOrigin = 2;
      // Get static field: static public UnityEngine.InputSystem.OnScreen.OnScreenStick/Behaviour ExactPositionWithDynamicOrigin
      static ::UnityEngine::InputSystem::OnScreen::OnScreenStick::Behaviour _get_ExactPositionWithDynamicOrigin();
      // Set static field: static public UnityEngine.InputSystem.OnScreen.OnScreenStick/Behaviour ExactPositionWithDynamicOrigin
      static void _set_ExactPositionWithDynamicOrigin(::UnityEngine::InputSystem::OnScreen::OnScreenStick::Behaviour value);
      // Get instance field reference: public System.Int32 value__
      [[deprecated("Use field access instead!")]] int& dyn_value__();
    }; // UnityEngine.InputSystem.OnScreen.OnScreenStick/Behaviour
    #pragma pack(pop)
    static check_size<sizeof(OnScreenStick::Behaviour), 0 + sizeof(int)> __UnityEngine_InputSystem_OnScreen_OnScreenStick_BehaviourSizeCheck;
    static_assert(sizeof(OnScreenStick::Behaviour) == 0x4);
    public:
    // private System.Single m_MovementRange
    // Size: 0x4
    // Offset: 0x38
    float m_MovementRange;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Single m_DynamicOriginRange
    // Size: 0x4
    // Offset: 0x3C
    float m_DynamicOriginRange;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.String m_ControlPath
    // Size: 0x8
    // Offset: 0x40
    ::StringW m_ControlPath;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private UnityEngine.InputSystem.OnScreen.OnScreenStick/Behaviour m_Behaviour
    // Size: 0x4
    // Offset: 0x48
    ::UnityEngine::InputSystem::OnScreen::OnScreenStick::Behaviour m_Behaviour;
    // Field size check
    static_assert(sizeof(::UnityEngine::InputSystem::OnScreen::OnScreenStick::Behaviour) == 0x4);
    // private System.Boolean m_UseIsolatedInputActions
    // Size: 0x1
    // Offset: 0x4C
    bool m_UseIsolatedInputActions;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: m_UseIsolatedInputActions and: m_PointerDownAction
    char __padding4[0x3] = {};
    // private UnityEngine.InputSystem.InputAction m_PointerDownAction
    // Size: 0x8
    // Offset: 0x50
    ::UnityEngine::InputSystem::InputAction* m_PointerDownAction;
    // Field size check
    static_assert(sizeof(::UnityEngine::InputSystem::InputAction*) == 0x8);
    // private UnityEngine.InputSystem.InputAction m_PointerMoveAction
    // Size: 0x8
    // Offset: 0x58
    ::UnityEngine::InputSystem::InputAction* m_PointerMoveAction;
    // Field size check
    static_assert(sizeof(::UnityEngine::InputSystem::InputAction*) == 0x8);
    // private UnityEngine.Vector3 m_StartPos
    // Size: 0xC
    // Offset: 0x60
    ::UnityEngine::Vector3 m_StartPos;
    // Field size check
    static_assert(sizeof(::UnityEngine::Vector3) == 0xC);
    // private UnityEngine.Vector2 m_PointerDownPos
    // Size: 0x8
    // Offset: 0x6C
    ::UnityEngine::Vector2 m_PointerDownPos;
    // Field size check
    static_assert(sizeof(::UnityEngine::Vector2) == 0x8);
    // Padding between fields: m_PointerDownPos and: m_RaycastResults
    char __padding8[0x4] = {};
    // private System.Collections.Generic.List`1<UnityEngine.EventSystems.RaycastResult> m_RaycastResults
    // Size: 0x8
    // Offset: 0x78
    ::System::Collections::Generic::List_1<::UnityEngine::EventSystems::RaycastResult>* m_RaycastResults;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::UnityEngine::EventSystems::RaycastResult>*) == 0x8);
    // private UnityEngine.EventSystems.PointerEventData m_PointerEventData
    // Size: 0x8
    // Offset: 0x80
    ::UnityEngine::EventSystems::PointerEventData* m_PointerEventData;
    // Field size check
    static_assert(sizeof(::UnityEngine::EventSystems::PointerEventData*) == 0x8);
    public:
    // Creating interface conversion operator: operator ::UnityEngine::EventSystems::IPointerDownHandler
    operator ::UnityEngine::EventSystems::IPointerDownHandler() noexcept {
      return *reinterpret_cast<::UnityEngine::EventSystems::IPointerDownHandler*>(this);
    }
    // Creating interface conversion operator: operator ::UnityEngine::EventSystems::IPointerUpHandler
    operator ::UnityEngine::EventSystems::IPointerUpHandler() noexcept {
      return *reinterpret_cast<::UnityEngine::EventSystems::IPointerUpHandler*>(this);
    }
    // Creating interface conversion operator: operator ::UnityEngine::EventSystems::IDragHandler
    operator ::UnityEngine::EventSystems::IDragHandler() noexcept {
      return *reinterpret_cast<::UnityEngine::EventSystems::IDragHandler*>(this);
    }
    // static field const value: static private System.String kDynamicOriginClickable
    static constexpr const char* kDynamicOriginClickable = "DynamicOriginClickable";
    // Get static field: static private System.String kDynamicOriginClickable
    static ::StringW _get_kDynamicOriginClickable();
    // Set static field: static private System.String kDynamicOriginClickable
    static void _set_kDynamicOriginClickable(::StringW value);
    // Get instance field reference: private System.Single m_MovementRange
    [[deprecated("Use field access instead!")]] float& dyn_m_MovementRange();
    // Get instance field reference: private System.Single m_DynamicOriginRange
    [[deprecated("Use field access instead!")]] float& dyn_m_DynamicOriginRange();
    // Get instance field reference: private System.String m_ControlPath
    [[deprecated("Use field access instead!")]] ::StringW& dyn_m_ControlPath();
    // Get instance field reference: private UnityEngine.InputSystem.OnScreen.OnScreenStick/Behaviour m_Behaviour
    [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::OnScreen::OnScreenStick::Behaviour& dyn_m_Behaviour();
    // Get instance field reference: private System.Boolean m_UseIsolatedInputActions
    [[deprecated("Use field access instead!")]] bool& dyn_m_UseIsolatedInputActions();
    // Get instance field reference: private UnityEngine.InputSystem.InputAction m_PointerDownAction
    [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::InputAction*& dyn_m_PointerDownAction();
    // Get instance field reference: private UnityEngine.InputSystem.InputAction m_PointerMoveAction
    [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::InputAction*& dyn_m_PointerMoveAction();
    // Get instance field reference: private UnityEngine.Vector3 m_StartPos
    [[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& dyn_m_StartPos();
    // Get instance field reference: private UnityEngine.Vector2 m_PointerDownPos
    [[deprecated("Use field access instead!")]] ::UnityEngine::Vector2& dyn_m_PointerDownPos();
    // Get instance field reference: private System.Collections.Generic.List`1<UnityEngine.EventSystems.RaycastResult> m_RaycastResults
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::EventSystems::RaycastResult>*& dyn_m_RaycastResults();
    // Get instance field reference: private UnityEngine.EventSystems.PointerEventData m_PointerEventData
    [[deprecated("Use field access instead!")]] ::UnityEngine::EventSystems::PointerEventData*& dyn_m_PointerEventData();
    // public System.Void OnPointerDown(UnityEngine.EventSystems.PointerEventData eventData)
    // Offset: 0x513ABAC
    void OnPointerDown(::UnityEngine::EventSystems::PointerEventData* eventData);
    // public System.Void OnDrag(UnityEngine.EventSystems.PointerEventData eventData)
    // Offset: 0x513AE90
    void OnDrag(::UnityEngine::EventSystems::PointerEventData* eventData);
    // public System.Void OnPointerUp(UnityEngine.EventSystems.PointerEventData eventData)
    // Offset: 0x513B314
    void OnPointerUp(::UnityEngine::EventSystems::PointerEventData* eventData);
    // private System.Void Start()
    // Offset: 0x513B3EC
    void Start();
    // private System.Void BeginInteraction(UnityEngine.Vector2 pointerPosition, UnityEngine.Camera uiCamera)
    // Offset: 0x513AC48
    void BeginInteraction(::UnityEngine::Vector2 pointerPosition, ::UnityEngine::Camera* uiCamera);
    // private System.Void MoveStick(UnityEngine.Vector2 pointerPosition, UnityEngine.Camera uiCamera)
    // Offset: 0x513AF2C
    void MoveStick(::UnityEngine::Vector2 pointerPosition, ::UnityEngine::Camera* uiCamera);
    // private System.Void EndInteraction()
    // Offset: 0x513B324
    void EndInteraction();
    // private System.Void OnPointerDown(UnityEngine.InputSystem.InputAction/CallbackContext ctx)
    // Offset: 0x513BA80
    void OnPointerDown(::UnityEngine::InputSystem::InputAction_CallbackContext ctx);
    // private System.Void OnPointerMove(UnityEngine.InputSystem.InputAction/CallbackContext ctx)
    // Offset: 0x513BF10
    void OnPointerMove(::UnityEngine::InputSystem::InputAction_CallbackContext ctx);
    // private System.Void OnPointerUp(UnityEngine.InputSystem.InputAction/CallbackContext ctx)
    // Offset: 0x513BFF8
    void OnPointerUp(::UnityEngine::InputSystem::InputAction_CallbackContext ctx);
    // private UnityEngine.Camera GetCameraFromCanvas()
    // Offset: 0x513BDDC
    ::UnityEngine::Camera* GetCameraFromCanvas();
    // private System.Void OnDrawGizmosSelected()
    // Offset: 0x513C090
    void OnDrawGizmosSelected();
    // private System.Void DrawGizmoCircle(UnityEngine.Vector2 center, System.Single radius)
    // Offset: 0x513C250
    void DrawGizmoCircle(::UnityEngine::Vector2 center, float radius);
    // private System.Void UpdateDynamicOriginClickableArea()
    // Offset: 0x513C334
    void UpdateDynamicOriginClickableArea();
    // public System.Single get_movementRange()
    // Offset: 0x513C420
    float get_movementRange();
    // public System.Void set_movementRange(System.Single value)
    // Offset: 0x513C428
    void set_movementRange(float value);
    // public System.Single get_dynamicOriginRange()
    // Offset: 0x513C430
    float get_dynamicOriginRange();
    // public System.Void set_dynamicOriginRange(System.Single value)
    // Offset: 0x513C438
    void set_dynamicOriginRange(float value);
    // public System.Boolean get_useIsolatedInputActions()
    // Offset: 0x513C450
    bool get_useIsolatedInputActions();
    // public System.Void set_useIsolatedInputActions(System.Boolean value)
    // Offset: 0x513C458
    void set_useIsolatedInputActions(bool value);
    // public UnityEngine.InputSystem.OnScreen.OnScreenStick/Behaviour get_behaviour()
    // Offset: 0x513C474
    ::UnityEngine::InputSystem::OnScreen::OnScreenStick::Behaviour get_behaviour();
    // public System.Void set_behaviour(UnityEngine.InputSystem.OnScreen.OnScreenStick/Behaviour value)
    // Offset: 0x513C47C
    void set_behaviour(::UnityEngine::InputSystem::OnScreen::OnScreenStick::Behaviour value);
    // protected override System.String get_controlPathInternal()
    // Offset: 0x513C464
    // Implemented from: UnityEngine.InputSystem.OnScreen.OnScreenControl
    // Base method: System.String OnScreenControl::get_controlPathInternal()
    ::StringW get_controlPathInternal();
    // protected override System.Void set_controlPathInternal(System.String value)
    // Offset: 0x513C46C
    // Implemented from: UnityEngine.InputSystem.OnScreen.OnScreenControl
    // Base method: System.Void OnScreenControl::set_controlPathInternal(System.String value)
    void set_controlPathInternal(::StringW value);
    // public System.Void .ctor()
    // Offset: 0x513C484
    // Implemented from: UnityEngine.InputSystem.OnScreen.OnScreenControl
    // Base method: System.Void OnScreenControl::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static OnScreenStick* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::OnScreen::OnScreenStick::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<OnScreenStick*, creationType>()));
    }
  }; // UnityEngine.InputSystem.OnScreen.OnScreenStick
  #pragma pack(pop)
  static check_size<sizeof(OnScreenStick), 128 + sizeof(::UnityEngine::EventSystems::PointerEventData*)> __UnityEngine_InputSystem_OnScreen_OnScreenStickSizeCheck;
  static_assert(sizeof(OnScreenStick) == 0x88);
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::InputSystem::OnScreen::OnScreenStick::Behaviour, "UnityEngine.InputSystem.OnScreen", "OnScreenStick/Behaviour");
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::InputSystem::OnScreen::OnScreenStick::OnPointerDown
// Il2CppName: OnPointerDown
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::OnScreen::OnScreenStick::*)(::UnityEngine::EventSystems::PointerEventData*)>(&UnityEngine::InputSystem::OnScreen::OnScreenStick::OnPointerDown)> {
  static const MethodInfo* get() {
    static auto* eventData = &::il2cpp_utils::GetClassFromName("UnityEngine.EventSystems", "PointerEventData")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::OnScreen::OnScreenStick*), "OnPointerDown", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{eventData});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::OnScreen::OnScreenStick::OnDrag
// Il2CppName: OnDrag
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::OnScreen::OnScreenStick::*)(::UnityEngine::EventSystems::PointerEventData*)>(&UnityEngine::InputSystem::OnScreen::OnScreenStick::OnDrag)> {
  static const MethodInfo* get() {
    static auto* eventData = &::il2cpp_utils::GetClassFromName("UnityEngine.EventSystems", "PointerEventData")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::OnScreen::OnScreenStick*), "OnDrag", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{eventData});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::OnScreen::OnScreenStick::OnPointerUp
// Il2CppName: OnPointerUp
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::OnScreen::OnScreenStick::*)(::UnityEngine::EventSystems::PointerEventData*)>(&UnityEngine::InputSystem::OnScreen::OnScreenStick::OnPointerUp)> {
  static const MethodInfo* get() {
    static auto* eventData = &::il2cpp_utils::GetClassFromName("UnityEngine.EventSystems", "PointerEventData")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::OnScreen::OnScreenStick*), "OnPointerUp", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{eventData});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::OnScreen::OnScreenStick::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::OnScreen::OnScreenStick::*)()>(&UnityEngine::InputSystem::OnScreen::OnScreenStick::Start)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::OnScreen::OnScreenStick*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::OnScreen::OnScreenStick::BeginInteraction
// Il2CppName: BeginInteraction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::OnScreen::OnScreenStick::*)(::UnityEngine::Vector2, ::UnityEngine::Camera*)>(&UnityEngine::InputSystem::OnScreen::OnScreenStick::BeginInteraction)> {
  static const MethodInfo* get() {
    static auto* pointerPosition = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector2")->byval_arg;
    static auto* uiCamera = &::il2cpp_utils::GetClassFromName("UnityEngine", "Camera")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::OnScreen::OnScreenStick*), "BeginInteraction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{pointerPosition, uiCamera});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::OnScreen::OnScreenStick::MoveStick
// Il2CppName: MoveStick
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::OnScreen::OnScreenStick::*)(::UnityEngine::Vector2, ::UnityEngine::Camera*)>(&UnityEngine::InputSystem::OnScreen::OnScreenStick::MoveStick)> {
  static const MethodInfo* get() {
    static auto* pointerPosition = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector2")->byval_arg;
    static auto* uiCamera = &::il2cpp_utils::GetClassFromName("UnityEngine", "Camera")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::OnScreen::OnScreenStick*), "MoveStick", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{pointerPosition, uiCamera});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::OnScreen::OnScreenStick::EndInteraction
// Il2CppName: EndInteraction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::OnScreen::OnScreenStick::*)()>(&UnityEngine::InputSystem::OnScreen::OnScreenStick::EndInteraction)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::OnScreen::OnScreenStick*), "EndInteraction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::OnScreen::OnScreenStick::OnPointerDown
// Il2CppName: OnPointerDown
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::OnScreen::OnScreenStick::*)(::UnityEngine::InputSystem::InputAction_CallbackContext)>(&UnityEngine::InputSystem::OnScreen::OnScreenStick::OnPointerDown)> {
  static const MethodInfo* get() {
    static auto* ctx = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputAction/CallbackContext")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::OnScreen::OnScreenStick*), "OnPointerDown", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ctx});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::OnScreen::OnScreenStick::OnPointerMove
// Il2CppName: OnPointerMove
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::OnScreen::OnScreenStick::*)(::UnityEngine::InputSystem::InputAction_CallbackContext)>(&UnityEngine::InputSystem::OnScreen::OnScreenStick::OnPointerMove)> {
  static const MethodInfo* get() {
    static auto* ctx = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputAction/CallbackContext")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::OnScreen::OnScreenStick*), "OnPointerMove", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ctx});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::OnScreen::OnScreenStick::OnPointerUp
// Il2CppName: OnPointerUp
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::OnScreen::OnScreenStick::*)(::UnityEngine::InputSystem::InputAction_CallbackContext)>(&UnityEngine::InputSystem::OnScreen::OnScreenStick::OnPointerUp)> {
  static const MethodInfo* get() {
    static auto* ctx = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputAction/CallbackContext")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::OnScreen::OnScreenStick*), "OnPointerUp", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ctx});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::OnScreen::OnScreenStick::GetCameraFromCanvas
// Il2CppName: GetCameraFromCanvas
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Camera* (UnityEngine::InputSystem::OnScreen::OnScreenStick::*)()>(&UnityEngine::InputSystem::OnScreen::OnScreenStick::GetCameraFromCanvas)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::OnScreen::OnScreenStick*), "GetCameraFromCanvas", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::OnScreen::OnScreenStick::OnDrawGizmosSelected
// Il2CppName: OnDrawGizmosSelected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::OnScreen::OnScreenStick::*)()>(&UnityEngine::InputSystem::OnScreen::OnScreenStick::OnDrawGizmosSelected)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::OnScreen::OnScreenStick*), "OnDrawGizmosSelected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::OnScreen::OnScreenStick::DrawGizmoCircle
// Il2CppName: DrawGizmoCircle
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::OnScreen::OnScreenStick::*)(::UnityEngine::Vector2, float)>(&UnityEngine::InputSystem::OnScreen::OnScreenStick::DrawGizmoCircle)> {
  static const MethodInfo* get() {
    static auto* center = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector2")->byval_arg;
    static auto* radius = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::OnScreen::OnScreenStick*), "DrawGizmoCircle", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{center, radius});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::OnScreen::OnScreenStick::UpdateDynamicOriginClickableArea
// Il2CppName: UpdateDynamicOriginClickableArea
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::OnScreen::OnScreenStick::*)()>(&UnityEngine::InputSystem::OnScreen::OnScreenStick::UpdateDynamicOriginClickableArea)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::OnScreen::OnScreenStick*), "UpdateDynamicOriginClickableArea", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::OnScreen::OnScreenStick::get_movementRange
// Il2CppName: get_movementRange
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::InputSystem::OnScreen::OnScreenStick::*)()>(&UnityEngine::InputSystem::OnScreen::OnScreenStick::get_movementRange)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::OnScreen::OnScreenStick*), "get_movementRange", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::OnScreen::OnScreenStick::set_movementRange
// Il2CppName: set_movementRange
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::OnScreen::OnScreenStick::*)(float)>(&UnityEngine::InputSystem::OnScreen::OnScreenStick::set_movementRange)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::OnScreen::OnScreenStick*), "set_movementRange", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::OnScreen::OnScreenStick::get_dynamicOriginRange
// Il2CppName: get_dynamicOriginRange
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::InputSystem::OnScreen::OnScreenStick::*)()>(&UnityEngine::InputSystem::OnScreen::OnScreenStick::get_dynamicOriginRange)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::OnScreen::OnScreenStick*), "get_dynamicOriginRange", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::OnScreen::OnScreenStick::set_dynamicOriginRange
// Il2CppName: set_dynamicOriginRange
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::OnScreen::OnScreenStick::*)(float)>(&UnityEngine::InputSystem::OnScreen::OnScreenStick::set_dynamicOriginRange)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::OnScreen::OnScreenStick*), "set_dynamicOriginRange", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::OnScreen::OnScreenStick::get_useIsolatedInputActions
// Il2CppName: get_useIsolatedInputActions
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::InputSystem::OnScreen::OnScreenStick::*)()>(&UnityEngine::InputSystem::OnScreen::OnScreenStick::get_useIsolatedInputActions)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::OnScreen::OnScreenStick*), "get_useIsolatedInputActions", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::OnScreen::OnScreenStick::set_useIsolatedInputActions
// Il2CppName: set_useIsolatedInputActions
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::OnScreen::OnScreenStick::*)(bool)>(&UnityEngine::InputSystem::OnScreen::OnScreenStick::set_useIsolatedInputActions)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::OnScreen::OnScreenStick*), "set_useIsolatedInputActions", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::OnScreen::OnScreenStick::get_behaviour
// Il2CppName: get_behaviour
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::OnScreen::OnScreenStick::Behaviour (UnityEngine::InputSystem::OnScreen::OnScreenStick::*)()>(&UnityEngine::InputSystem::OnScreen::OnScreenStick::get_behaviour)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::OnScreen::OnScreenStick*), "get_behaviour", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::OnScreen::OnScreenStick::set_behaviour
// Il2CppName: set_behaviour
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::OnScreen::OnScreenStick::*)(::UnityEngine::InputSystem::OnScreen::OnScreenStick::Behaviour)>(&UnityEngine::InputSystem::OnScreen::OnScreenStick::set_behaviour)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem.OnScreen", "OnScreenStick/Behaviour")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::OnScreen::OnScreenStick*), "set_behaviour", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::OnScreen::OnScreenStick::get_controlPathInternal
// Il2CppName: get_controlPathInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (UnityEngine::InputSystem::OnScreen::OnScreenStick::*)()>(&UnityEngine::InputSystem::OnScreen::OnScreenStick::get_controlPathInternal)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::OnScreen::OnScreenStick*), "get_controlPathInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::OnScreen::OnScreenStick::set_controlPathInternal
// Il2CppName: set_controlPathInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::OnScreen::OnScreenStick::*)(::StringW)>(&UnityEngine::InputSystem::OnScreen::OnScreenStick::set_controlPathInternal)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::OnScreen::OnScreenStick*), "set_controlPathInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::OnScreen::OnScreenStick::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
