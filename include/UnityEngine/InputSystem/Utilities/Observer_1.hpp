// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.IObserver`1
#include "System/IObserver_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Action`1<T>
  template<typename T>
  class Action_1;
  // Forward declaring type: Action
  class Action;
  // Forward declaring type: Exception
  class Exception;
}
// Completed forward declares
// Type namespace: UnityEngine.InputSystem.Utilities
namespace UnityEngine::InputSystem::Utilities {
  // Forward declaring type: Observer`1<TValue>
  template<typename TValue>
  class Observer_1;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE_GENERIC_CLASS(::UnityEngine::InputSystem::Utilities::Observer_1, "UnityEngine.InputSystem.Utilities", "Observer`1");
// Type namespace: UnityEngine.InputSystem.Utilities
namespace UnityEngine::InputSystem::Utilities {
  // WARNING Size may be invalid!
  // Autogenerated type: UnityEngine.InputSystem.Utilities.Observer`1
  // [TokenAttribute] Offset: FFFFFFFF
  template<typename TValue>
  class Observer_1 : public ::Il2CppObject/*, public ::System::IObserver_1<TValue>*/ {
    public:
    public:
    // private System.Action`1<TValue> m_OnNext
    // Size: 0x8
    // Offset: 0x0
    ::System::Action_1<TValue>* m_OnNext;
    // Field size check
    static_assert(sizeof(::System::Action_1<TValue>*) == 0x8);
    // private System.Action m_OnCompleted
    // Size: 0x8
    // Offset: 0x0
    ::System::Action* m_OnCompleted;
    // Field size check
    static_assert(sizeof(::System::Action*) == 0x8);
    public:
    // Creating interface conversion operator: operator ::System::IObserver_1<TValue>
    operator ::System::IObserver_1<TValue>() noexcept {
      return *reinterpret_cast<::System::IObserver_1<TValue>*>(this);
    }
    // Autogenerated instance field getter
    // Get instance field: private System.Action`1<TValue> m_OnNext
    [[deprecated("Use field access instead!")]] ::System::Action_1<TValue>*& dyn_m_OnNext() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::Utilities::Observer_1::dyn_m_OnNext");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_OnNext"))->offset;
      return *reinterpret_cast<::System::Action_1<TValue>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: private System.Action m_OnCompleted
    [[deprecated("Use field access instead!")]] ::System::Action*& dyn_m_OnCompleted() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::Utilities::Observer_1::dyn_m_OnCompleted");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_OnCompleted"))->offset;
      return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // public System.Void .ctor(System.Action`1<TValue> onNext, System.Action onCompleted)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static Observer_1<TValue>* New_ctor(::System::Action_1<TValue>* onNext, ::System::Action* onCompleted) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::Utilities::Observer_1::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<Observer_1<TValue>*, creationType>(onNext, onCompleted)));
    }
    // public System.Void OnCompleted()
    // Offset: 0xFFFFFFFFFFFFFFFF
    void OnCompleted() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::Utilities::Observer_1::OnCompleted");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::InputSystem::Utilities::Observer_1<TValue>*), -1));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
    }
    // public System.Void OnError(System.Exception error)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void OnError(::System::Exception* error) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::Utilities::Observer_1::OnError");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::InputSystem::Utilities::Observer_1<TValue>*), -1));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, error);
    }
    // public System.Void OnNext(TValue evt)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void OnNext(TValue evt) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::Utilities::Observer_1::OnNext");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::InputSystem::Utilities::Observer_1<TValue>*), -1));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, evt);
    }
  }; // UnityEngine.InputSystem.Utilities.Observer`1
  // Could not write size check! Type: UnityEngine.InputSystem.Utilities.Observer`1 is generic, or has no fields that are valid for size checks!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
