// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Sprite
  class Sprite;
  // Forward declaring type: Color32
  struct Color32;
}
// Completed forward declares
// Type namespace: UnityEngine.InputSystem.Utilities
namespace UnityEngine::InputSystem::Utilities {
  // Forward declaring type: SpriteUtilities
  class SpriteUtilities;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::InputSystem::Utilities::SpriteUtilities);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::InputSystem::Utilities::SpriteUtilities*, "UnityEngine.InputSystem.Utilities", "SpriteUtilities");
// Type namespace: UnityEngine.InputSystem.Utilities
namespace UnityEngine::InputSystem::Utilities {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.InputSystem.Utilities.SpriteUtilities
  // [TokenAttribute] Offset: FFFFFFFF
  class SpriteUtilities : public ::Il2CppObject {
    public:
    // static public UnityEngine.Sprite CreateCircleSprite(System.Int32 radius, UnityEngine.Color32 colour)
    // Offset: 0x50B179C
    static ::UnityEngine::Sprite* CreateCircleSprite(int radius, ::UnityEngine::Color32 colour);
  }; // UnityEngine.InputSystem.Utilities.SpriteUtilities
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::InputSystem::Utilities::SpriteUtilities::CreateCircleSprite
// Il2CppName: CreateCircleSprite
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Sprite* (*)(int, ::UnityEngine::Color32)>(&UnityEngine::InputSystem::Utilities::SpriteUtilities::CreateCircleSprite)> {
  static const MethodInfo* get() {
    static auto* radius = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* colour = &::il2cpp_utils::GetClassFromName("UnityEngine", "Color32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Utilities::SpriteUtilities*), "CreateCircleSprite", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{radius, colour});
  }
};
