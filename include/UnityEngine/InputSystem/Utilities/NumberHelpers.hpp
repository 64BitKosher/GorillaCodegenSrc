// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Completed includes
// Type namespace: UnityEngine.InputSystem.Utilities
namespace UnityEngine::InputSystem::Utilities {
  // Forward declaring type: NumberHelpers
  class NumberHelpers;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::InputSystem::Utilities::NumberHelpers);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::InputSystem::Utilities::NumberHelpers*, "UnityEngine.InputSystem.Utilities", "NumberHelpers");
// Type namespace: UnityEngine.InputSystem.Utilities
namespace UnityEngine::InputSystem::Utilities {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.InputSystem.Utilities.NumberHelpers
  // [TokenAttribute] Offset: FFFFFFFF
  // [ExtensionAttribute] Offset: FFFFFFFF
  class NumberHelpers : public ::Il2CppObject {
    public:
    // static public System.Int32 AlignToMultipleOf(System.Int32 number, System.Int32 alignment)
    // Offset: 0x51782AC
    static int AlignToMultipleOf(int number, int alignment);
    // static public System.Int64 AlignToMultipleOf(System.Int64 number, System.Int64 alignment)
    // Offset: 0x51782C8
    static int64_t AlignToMultipleOf(int64_t number, int64_t alignment);
    // static public System.UInt32 AlignToMultipleOf(System.UInt32 number, System.UInt32 alignment)
    // Offset: 0x51782E4
    static uint AlignToMultipleOf(uint number, uint alignment);
    // static public System.Boolean Approximately(System.Double a, System.Double b)
    // Offset: 0x5178300
    static bool Approximately(double a, double b);
    // static public System.Single IntToNormalizedFloat(System.Int32 value, System.Int32 minValue, System.Int32 maxValue)
    // Offset: 0x517839C
    static float IntToNormalizedFloat(int value, int minValue, int maxValue);
    // static public System.Int32 NormalizedFloatToInt(System.Single value, System.Int32 intMinValue, System.Int32 intMaxValue)
    // Offset: 0x51783D4
    static int NormalizedFloatToInt(float value, int intMinValue, int intMaxValue);
    // static public System.Single UIntToNormalizedFloat(System.UInt32 value, System.UInt32 minValue, System.UInt32 maxValue)
    // Offset: 0x5178424
    static float UIntToNormalizedFloat(uint value, uint minValue, uint maxValue);
    // static public System.UInt32 NormalizedFloatToUInt(System.Single value, System.UInt32 uintMinValue, System.UInt32 uintMaxValue)
    // Offset: 0x517845C
    static uint NormalizedFloatToUInt(float value, uint uintMinValue, uint uintMaxValue);
    // static public System.UInt32 RemapUIntBitsToNormalizeFloatToUIntBits(System.UInt32 value, System.UInt32 inBitSize, System.UInt32 outBitSize)
    // Offset: 0x51784A4
    static uint RemapUIntBitsToNormalizeFloatToUIntBits(uint value, uint inBitSize, uint outBitSize);
  }; // UnityEngine.InputSystem.Utilities.NumberHelpers
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::InputSystem::Utilities::NumberHelpers::AlignToMultipleOf
// Il2CppName: AlignToMultipleOf
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(int, int)>(&UnityEngine::InputSystem::Utilities::NumberHelpers::AlignToMultipleOf)> {
  static const MethodInfo* get() {
    static auto* number = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* alignment = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Utilities::NumberHelpers*), "AlignToMultipleOf", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{number, alignment});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Utilities::NumberHelpers::AlignToMultipleOf
// Il2CppName: AlignToMultipleOf
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int64_t (*)(int64_t, int64_t)>(&UnityEngine::InputSystem::Utilities::NumberHelpers::AlignToMultipleOf)> {
  static const MethodInfo* get() {
    static auto* number = &::il2cpp_utils::GetClassFromName("System", "Int64")->byval_arg;
    static auto* alignment = &::il2cpp_utils::GetClassFromName("System", "Int64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Utilities::NumberHelpers*), "AlignToMultipleOf", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{number, alignment});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Utilities::NumberHelpers::AlignToMultipleOf
// Il2CppName: AlignToMultipleOf
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (*)(uint, uint)>(&UnityEngine::InputSystem::Utilities::NumberHelpers::AlignToMultipleOf)> {
  static const MethodInfo* get() {
    static auto* number = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    static auto* alignment = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Utilities::NumberHelpers*), "AlignToMultipleOf", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{number, alignment});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Utilities::NumberHelpers::Approximately
// Il2CppName: Approximately
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(double, double)>(&UnityEngine::InputSystem::Utilities::NumberHelpers::Approximately)> {
  static const MethodInfo* get() {
    static auto* a = &::il2cpp_utils::GetClassFromName("System", "Double")->byval_arg;
    static auto* b = &::il2cpp_utils::GetClassFromName("System", "Double")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Utilities::NumberHelpers*), "Approximately", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{a, b});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Utilities::NumberHelpers::IntToNormalizedFloat
// Il2CppName: IntToNormalizedFloat
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (*)(int, int, int)>(&UnityEngine::InputSystem::Utilities::NumberHelpers::IntToNormalizedFloat)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* minValue = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* maxValue = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Utilities::NumberHelpers*), "IntToNormalizedFloat", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value, minValue, maxValue});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Utilities::NumberHelpers::NormalizedFloatToInt
// Il2CppName: NormalizedFloatToInt
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(float, int, int)>(&UnityEngine::InputSystem::Utilities::NumberHelpers::NormalizedFloatToInt)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* intMinValue = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* intMaxValue = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Utilities::NumberHelpers*), "NormalizedFloatToInt", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value, intMinValue, intMaxValue});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Utilities::NumberHelpers::UIntToNormalizedFloat
// Il2CppName: UIntToNormalizedFloat
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (*)(uint, uint, uint)>(&UnityEngine::InputSystem::Utilities::NumberHelpers::UIntToNormalizedFloat)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    static auto* minValue = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    static auto* maxValue = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Utilities::NumberHelpers*), "UIntToNormalizedFloat", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value, minValue, maxValue});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Utilities::NumberHelpers::NormalizedFloatToUInt
// Il2CppName: NormalizedFloatToUInt
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (*)(float, uint, uint)>(&UnityEngine::InputSystem::Utilities::NumberHelpers::NormalizedFloatToUInt)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* uintMinValue = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    static auto* uintMaxValue = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Utilities::NumberHelpers*), "NormalizedFloatToUInt", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value, uintMinValue, uintMaxValue});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Utilities::NumberHelpers::RemapUIntBitsToNormalizeFloatToUIntBits
// Il2CppName: RemapUIntBitsToNormalizeFloatToUIntBits
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (*)(uint, uint, uint)>(&UnityEngine::InputSystem::Utilities::NumberHelpers::RemapUIntBitsToNormalizeFloatToUIntBits)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    static auto* inBitSize = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    static auto* outBitSize = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Utilities::NumberHelpers*), "RemapUIntBitsToNormalizeFloatToUIntBits", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value, inBitSize, outBitSize});
  }
};
