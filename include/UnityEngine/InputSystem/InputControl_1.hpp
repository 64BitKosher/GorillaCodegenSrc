// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.InputSystem.InputControl
#include "UnityEngine/InputSystem/InputControl.hpp"
// Including type: UnityEngine.InputSystem.Utilities.InlinedArray`1
#include "UnityEngine/InputSystem/Utilities/InlinedArray_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Skipping declaration: ValueType because it is already included!
  // Forward declaring type: Type
  class Type;
}
// Forward declaring namespace: UnityEngine::InputSystem
namespace UnityEngine::InputSystem {
  // Forward declaring type: InputProcessor`1<TValue>
  template<typename TValue>
  class InputProcessor_1;
}
// Completed forward declares
// Type namespace: UnityEngine.InputSystem
namespace UnityEngine::InputSystem {
  // Forward declaring type: InputControl`1<TValue>
  template<typename TValue>
  class InputControl_1;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE_GENERIC_CLASS(::UnityEngine::InputSystem::InputControl_1, "UnityEngine.InputSystem", "InputControl`1");
// Type namespace: UnityEngine.InputSystem
namespace UnityEngine::InputSystem {
  // WARNING Size may be invalid!
  // Autogenerated type: UnityEngine.InputSystem.InputControl`1
  // [TokenAttribute] Offset: FFFFFFFF
  template<typename TValue>
  class InputControl_1 : public ::UnityEngine::InputSystem::InputControl {
    public:
    public:
    // UnityEngine.InputSystem.Utilities.InlinedArray`1<UnityEngine.InputSystem.InputProcessor`1<TValue>> m_ProcessorStack
    // Size: 0xFFFFFFFF
    // Offset: 0x0
    ::UnityEngine::InputSystem::Utilities::InlinedArray_1<::UnityEngine::InputSystem::InputProcessor_1<TValue>*> m_ProcessorStack;
    // private TValue m_CachedValue
    // Size: 0xFFFFFFFF
    // Offset: 0x0
    TValue m_CachedValue;
    // private TValue m_UnprocessedCachedValue
    // Size: 0xFFFFFFFF
    // Offset: 0x0
    TValue m_UnprocessedCachedValue;
    // System.Boolean evaluateProcessorsEveryRead
    // Size: 0x1
    // Offset: 0x0
    bool evaluateProcessorsEveryRead;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    public:
    // Autogenerated instance field getter
    // Get instance field: UnityEngine.InputSystem.Utilities.InlinedArray`1<UnityEngine.InputSystem.InputProcessor`1<TValue>> m_ProcessorStack
    [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Utilities::InlinedArray_1<::UnityEngine::InputSystem::InputProcessor_1<TValue>*>& dyn_m_ProcessorStack() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::InputControl_1::dyn_m_ProcessorStack");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ProcessorStack"))->offset;
      return *reinterpret_cast<::UnityEngine::InputSystem::Utilities::InlinedArray_1<::UnityEngine::InputSystem::InputProcessor_1<TValue>*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: private TValue m_CachedValue
    [[deprecated("Use field access instead!")]] TValue& dyn_m_CachedValue() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::InputControl_1::dyn_m_CachedValue");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_CachedValue"))->offset;
      return *reinterpret_cast<TValue*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: private TValue m_UnprocessedCachedValue
    [[deprecated("Use field access instead!")]] TValue& dyn_m_UnprocessedCachedValue() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::InputControl_1::dyn_m_UnprocessedCachedValue");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_UnprocessedCachedValue"))->offset;
      return *reinterpret_cast<TValue*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: System.Boolean evaluateProcessorsEveryRead
    [[deprecated("Use field access instead!")]] bool& dyn_evaluateProcessorsEveryRead() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::InputControl_1::dyn_evaluateProcessorsEveryRead");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "evaluateProcessorsEveryRead"))->offset;
      return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // public TValue get_value()
    // Offset: 0xFFFFFFFFFFFFFFFF
    TValue get_value() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::InputControl_1::get_value");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      return ::il2cpp_utils::RunMethodRethrow<TValue, false>(this, ___internal__method);
    }
    // TValue get_unprocessedValue()
    // Offset: 0xFFFFFFFFFFFFFFFF
    TValue get_unprocessedValue() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::InputControl_1::get_unprocessedValue");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_unprocessedValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      return ::il2cpp_utils::RunMethodRethrow<TValue, false>(this, ___internal__method);
    }
    // public TValue ReadValue()
    // Offset: 0xFFFFFFFFFFFFFFFF
    TValue ReadValue() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::InputControl_1::ReadValue");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      return ::il2cpp_utils::RunMethodRethrow<TValue, false>(this, ___internal__method);
    }
    // public TValue ReadValueFromPreviousFrame()
    // Offset: 0xFFFFFFFFFFFFFFFF
    TValue ReadValueFromPreviousFrame() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::InputControl_1::ReadValueFromPreviousFrame");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadValueFromPreviousFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      return ::il2cpp_utils::RunMethodRethrow<TValue, false>(this, ___internal__method);
    }
    // public TValue ReadDefaultValue()
    // Offset: 0xFFFFFFFFFFFFFFFF
    TValue ReadDefaultValue() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::InputControl_1::ReadDefaultValue");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadDefaultValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      return ::il2cpp_utils::RunMethodRethrow<TValue, false>(this, ___internal__method);
    }
    // public TValue ReadValueFromState(System.Void* statePtr)
    // Offset: 0xFFFFFFFFFFFFFFFF
    TValue ReadValueFromState(void* statePtr) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::InputControl_1::ReadValueFromState");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadValueFromState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(statePtr)})));
      return ::il2cpp_utils::RunMethodRethrow<TValue, false>(this, ___internal__method, statePtr);
    }
    // public TValue ReadValueFromStateWithCaching(System.Void* statePtr)
    // Offset: 0xFFFFFFFFFFFFFFFF
    TValue ReadValueFromStateWithCaching(void* statePtr) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::InputControl_1::ReadValueFromStateWithCaching");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadValueFromStateWithCaching", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(statePtr)})));
      return ::il2cpp_utils::RunMethodRethrow<TValue, false>(this, ___internal__method, statePtr);
    }
    // public TValue ReadUnprocessedValueFromStateWithCaching(System.Void* statePtr)
    // Offset: 0xFFFFFFFFFFFFFFFF
    TValue ReadUnprocessedValueFromStateWithCaching(void* statePtr) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::InputControl_1::ReadUnprocessedValueFromStateWithCaching");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadUnprocessedValueFromStateWithCaching", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(statePtr)})));
      return ::il2cpp_utils::RunMethodRethrow<TValue, false>(this, ___internal__method, statePtr);
    }
    // public TValue ReadUnprocessedValue()
    // Offset: 0xFFFFFFFFFFFFFFFF
    TValue ReadUnprocessedValue() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::InputControl_1::ReadUnprocessedValue");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadUnprocessedValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      return ::il2cpp_utils::RunMethodRethrow<TValue, false>(this, ___internal__method);
    }
    // public TValue ReadUnprocessedValueFromState(System.Void* statePtr)
    // Offset: 0xFFFFFFFFFFFFFFFF
    TValue ReadUnprocessedValueFromState(void* statePtr) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::InputControl_1::ReadUnprocessedValueFromState");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::InputSystem::InputControl_1<TValue>*), -1));
      return ::il2cpp_utils::RunMethodRethrow<TValue, false>(this, ___internal__method, statePtr);
    }
    // public System.Void WriteValueIntoState(TValue value, System.Void* statePtr)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void WriteValueIntoState(TValue value, void* statePtr) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::InputControl_1::WriteValueIntoState");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::InputSystem::InputControl_1<TValue>*), -1));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value, statePtr);
    }
    // static private System.Boolean CompareValue(ref TValue firstValue, ref TValue secondValue)
    // Offset: 0xFFFFFFFFFFFFFFFF
    static bool CompareValue(ByRef<TValue> firstValue, ByRef<TValue> secondValue) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::InputControl_1::CompareValue");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<InputControl_1<TValue>*>::get(), "CompareValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firstValue), ::il2cpp_utils::ExtractType(secondValue)})));
      return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(firstValue), byref(secondValue));
    }
    // public TValue ProcessValue(TValue value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    TValue ProcessValue(TValue value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::InputControl_1::ProcessValue");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
      return ::il2cpp_utils::RunMethodRethrow<TValue, false>(this, ___internal__method, value);
    }
    // public System.Void ProcessValue(ref TValue value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void ProcessValue_(ByRef<TValue> value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::InputControl_1::ProcessValue");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(value));
    }
    // TProcessor TryGetProcessor()
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class TProcessor>
    TProcessor TryGetProcessor() {
      static_assert(std::is_convertible_v<TProcessor, ::UnityEngine::InputSystem::InputProcessor_1<TValue>*>);
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::InputControl_1::TryGetProcessor");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryGetProcessor", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TProcessor>::get()}, ::std::vector<const Il2CppType*>{})));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TProcessor>::get()}));
      return ::il2cpp_utils::RunMethodRethrow<TProcessor, false>(this, ___generic__method);
    }
    // UnityEngine.InputSystem.InputProcessor`1<TValue>[] get_processors()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::ArrayW<::UnityEngine::InputSystem::InputProcessor_1<TValue>*> get_processors() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::InputControl_1::get_processors");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_processors", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::InputSystem::InputProcessor_1<TValue>*>, false>(this, ___internal__method);
    }
    // public override System.Type get_valueType()
    // Offset: 0xFFFFFFFFFFFFFFFF
    // Implemented from: UnityEngine.InputSystem.InputControl
    // Base method: System.Type InputControl::get_valueType()
    ::System::Type* get_valueType() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::InputControl_1::get_valueType");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::InputSystem::InputControl*), -1));
      return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
    }
    // public override System.Int32 get_valueSizeInBytes()
    // Offset: 0xFFFFFFFFFFFFFFFF
    // Implemented from: UnityEngine.InputSystem.InputControl
    // Base method: System.Int32 InputControl::get_valueSizeInBytes()
    int get_valueSizeInBytes() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::InputControl_1::get_valueSizeInBytes");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::InputSystem::InputControl*), -1));
      return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
    }
    // public override System.Object ReadValueFromStateAsObject(System.Void* statePtr)
    // Offset: 0xFFFFFFFFFFFFFFFF
    // Implemented from: UnityEngine.InputSystem.InputControl
    // Base method: System.Object InputControl::ReadValueFromStateAsObject(System.Void* statePtr)
    ::Il2CppObject* ReadValueFromStateAsObject(void* statePtr) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::InputControl_1::ReadValueFromStateAsObject");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::InputSystem::InputControl*), -1));
      return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, statePtr);
    }
    // public override System.Void ReadValueFromStateIntoBuffer(System.Void* statePtr, System.Void* bufferPtr, System.Int32 bufferSize)
    // Offset: 0xFFFFFFFFFFFFFFFF
    // Implemented from: UnityEngine.InputSystem.InputControl
    // Base method: System.Void InputControl::ReadValueFromStateIntoBuffer(System.Void* statePtr, System.Void* bufferPtr, System.Int32 bufferSize)
    void ReadValueFromStateIntoBuffer(void* statePtr, void* bufferPtr, int bufferSize) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::InputControl_1::ReadValueFromStateIntoBuffer");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::InputSystem::InputControl*), -1));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, statePtr, bufferPtr, bufferSize);
    }
    // public override System.Void WriteValueFromBufferIntoState(System.Void* bufferPtr, System.Int32 bufferSize, System.Void* statePtr)
    // Offset: 0xFFFFFFFFFFFFFFFF
    // Implemented from: UnityEngine.InputSystem.InputControl
    // Base method: System.Void InputControl::WriteValueFromBufferIntoState(System.Void* bufferPtr, System.Int32 bufferSize, System.Void* statePtr)
    void WriteValueFromBufferIntoState(void* bufferPtr, int bufferSize, void* statePtr) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::InputControl_1::WriteValueFromBufferIntoState");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::InputSystem::InputControl*), -1));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, bufferPtr, bufferSize, statePtr);
    }
    // public override System.Void WriteValueFromObjectIntoState(System.Object value, System.Void* statePtr)
    // Offset: 0xFFFFFFFFFFFFFFFF
    // Implemented from: UnityEngine.InputSystem.InputControl
    // Base method: System.Void InputControl::WriteValueFromObjectIntoState(System.Object value, System.Void* statePtr)
    void WriteValueFromObjectIntoState(::Il2CppObject* value, void* statePtr) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::InputControl_1::WriteValueFromObjectIntoState");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::InputSystem::InputControl*), -1));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value, statePtr);
    }
    // public override System.Object ReadValueFromBufferAsObject(System.Void* buffer, System.Int32 bufferSize)
    // Offset: 0xFFFFFFFFFFFFFFFF
    // Implemented from: UnityEngine.InputSystem.InputControl
    // Base method: System.Object InputControl::ReadValueFromBufferAsObject(System.Void* buffer, System.Int32 bufferSize)
    ::Il2CppObject* ReadValueFromBufferAsObject(void* buffer, int bufferSize) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::InputControl_1::ReadValueFromBufferAsObject");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::InputSystem::InputControl*), -1));
      return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, buffer, bufferSize);
    }
    // public override System.Boolean CompareValue(System.Void* firstStatePtr, System.Void* secondStatePtr)
    // Offset: 0xFFFFFFFFFFFFFFFF
    // Implemented from: UnityEngine.InputSystem.InputControl
    // Base method: System.Boolean InputControl::CompareValue(System.Void* firstStatePtr, System.Void* secondStatePtr)
    bool CompareValue(void* firstStatePtr, void* secondStatePtr) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::InputControl_1::CompareValue");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::InputSystem::InputControl*), -1));
      return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, firstStatePtr, secondStatePtr);
    }
    // override System.Void AddProcessor(System.Object processor)
    // Offset: 0xFFFFFFFFFFFFFFFF
    // Implemented from: UnityEngine.InputSystem.InputControl
    // Base method: System.Void InputControl::AddProcessor(System.Object processor)
    void AddProcessor(::Il2CppObject* processor) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::InputControl_1::AddProcessor");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::InputSystem::InputControl*), -1));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, processor);
    }
    // protected override System.Void FinishSetup()
    // Offset: 0xFFFFFFFFFFFFFFFF
    // Implemented from: UnityEngine.InputSystem.InputControl
    // Base method: System.Void InputControl::FinishSetup()
    void FinishSetup() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::InputControl_1::FinishSetup");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::InputSystem::InputControl*), -1));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
    }
    // protected System.Void .ctor()
    // Offset: 0xFFFFFFFFFFFFFFFF
    // Implemented from: UnityEngine.InputSystem.InputControl
    // Base method: System.Void InputControl::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static InputControl_1<TValue>* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::InputControl_1::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<InputControl_1<TValue>*, creationType>()));
    }
  }; // UnityEngine.InputSystem.InputControl`1
  // Could not write size check! Type: UnityEngine.InputSystem.InputControl`1 is generic, or has no fields that are valid for size checks!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
