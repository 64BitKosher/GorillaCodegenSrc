// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Unity.Profiling.ProfilerRecorder
#include "Unity/Profiling/ProfilerRecorder.hpp"
// Including type: Unity.Profiling.LowLevel.Unsafe.ProfilerRecorderHandle
#include "Unity/Profiling/LowLevel/Unsafe/ProfilerRecorderHandle.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Type namespace: UnityEngine.Profiling
namespace UnityEngine::Profiling {
  // Forward declaring type: Recorder
  class Recorder;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::Profiling::Recorder);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::Profiling::Recorder*, "UnityEngine.Profiling", "Recorder");
// Type namespace: UnityEngine.Profiling
namespace UnityEngine::Profiling {
  // Size: 0x20
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.Profiling.Recorder
  // [TokenAttribute] Offset: FFFFFFFF
  // [UsedByNativeCodeAttribute] Offset: FFFFFFFF
  class Recorder : public ::Il2CppObject {
    public:
    public:
    // private Unity.Profiling.ProfilerRecorder m_RecorderCPU
    // Size: 0x8
    // Offset: 0x10
    ::Unity::Profiling::ProfilerRecorder m_RecorderCPU;
    // Field size check
    static_assert(sizeof(::Unity::Profiling::ProfilerRecorder) == 0x8);
    // private Unity.Profiling.ProfilerRecorder m_RecorderGPU
    // Size: 0x8
    // Offset: 0x18
    ::Unity::Profiling::ProfilerRecorder m_RecorderGPU;
    // Field size check
    static_assert(sizeof(::Unity::Profiling::ProfilerRecorder) == 0x8);
    public:
    // static field const value: static private Unity.Profiling.ProfilerRecorderOptions s_RecorderDefaultOptions
    static constexpr const int s_RecorderDefaultOptions = 153;
    // Get static field: static private Unity.Profiling.ProfilerRecorderOptions s_RecorderDefaultOptions
    static ::Unity::Profiling::ProfilerRecorderOptions _get_s_RecorderDefaultOptions();
    // Set static field: static private Unity.Profiling.ProfilerRecorderOptions s_RecorderDefaultOptions
    static void _set_s_RecorderDefaultOptions(::Unity::Profiling::ProfilerRecorderOptions value);
    // Get static field: static UnityEngine.Profiling.Recorder s_InvalidRecorder
    static ::UnityEngine::Profiling::Recorder* _get_s_InvalidRecorder();
    // Set static field: static UnityEngine.Profiling.Recorder s_InvalidRecorder
    static void _set_s_InvalidRecorder(::UnityEngine::Profiling::Recorder* value);
    // Get instance field reference: private Unity.Profiling.ProfilerRecorder m_RecorderCPU
    [[deprecated("Use field access instead!")]] ::Unity::Profiling::ProfilerRecorder& dyn_m_RecorderCPU();
    // Get instance field reference: private Unity.Profiling.ProfilerRecorder m_RecorderGPU
    [[deprecated("Use field access instead!")]] ::Unity::Profiling::ProfilerRecorder& dyn_m_RecorderGPU();
    // System.Void .ctor()
    // Offset: 0x54D76B4
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static Recorder* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Profiling::Recorder::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<Recorder*, creationType>()));
    }
    // System.Void .ctor(Unity.Profiling.LowLevel.Unsafe.ProfilerRecorderHandle handle)
    // Offset: 0x54D76BC
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static Recorder* New_ctor(::Unity::Profiling::LowLevel::Unsafe::ProfilerRecorderHandle handle) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Profiling::Recorder::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<Recorder*, creationType>(handle)));
    }
    // public System.Void set_enabled(System.Boolean value)
    // Offset: 0x54D7820
    void set_enabled(bool value);
    // private System.Void SetEnabled(System.Boolean state)
    // Offset: 0x54D7828
    void SetEnabled(bool state);
    // static private System.Void .cctor()
    // Offset: 0x54D7898
    static void _cctor();
    // protected override System.Void Finalize()
    // Offset: 0x54D7774
    // Implemented from: System.Object
    // Base method: System.Void Object::Finalize()
    void Finalize();
  }; // UnityEngine.Profiling.Recorder
  #pragma pack(pop)
  static check_size<sizeof(Recorder), 24 + sizeof(::Unity::Profiling::ProfilerRecorder)> __UnityEngine_Profiling_RecorderSizeCheck;
  static_assert(sizeof(Recorder) == 0x20);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::Profiling::Recorder::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::Profiling::Recorder::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::Profiling::Recorder::set_enabled
// Il2CppName: set_enabled
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Profiling::Recorder::*)(bool)>(&UnityEngine::Profiling::Recorder::set_enabled)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Profiling::Recorder*), "set_enabled", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Profiling::Recorder::SetEnabled
// Il2CppName: SetEnabled
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Profiling::Recorder::*)(bool)>(&UnityEngine::Profiling::Recorder::SetEnabled)> {
  static const MethodInfo* get() {
    static auto* state = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Profiling::Recorder*), "SetEnabled", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{state});
  }
};
// Writing MetadataGetter for method: UnityEngine::Profiling::Recorder::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&UnityEngine::Profiling::Recorder::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Profiling::Recorder*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Profiling::Recorder::Finalize
// Il2CppName: Finalize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Profiling::Recorder::*)()>(&UnityEngine::Profiling::Recorder::Finalize)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Profiling::Recorder*), "Finalize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
