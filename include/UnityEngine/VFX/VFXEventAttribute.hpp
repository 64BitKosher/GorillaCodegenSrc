// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.IDisposable
#include "System/IDisposable.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::VFX
namespace UnityEngine::VFX {
  // Forward declaring type: VisualEffectAsset
  class VisualEffectAsset;
}
// Completed forward declares
// Type namespace: UnityEngine.VFX
namespace UnityEngine::VFX {
  // Forward declaring type: VFXEventAttribute
  class VFXEventAttribute;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::VFX::VFXEventAttribute);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::VFX::VFXEventAttribute*, "UnityEngine.VFX", "VFXEventAttribute");
// Type namespace: UnityEngine.VFX
namespace UnityEngine::VFX {
  // Size: 0x28
  #pragma pack(push, 1)
  // WARNING Layout: Sequential may not be correctly taken into account!
  // Autogenerated type: UnityEngine.VFX.VFXEventAttribute
  // [TokenAttribute] Offset: FFFFFFFF
  // [RequiredByNativeCodeAttribute] Offset: FFFFFFFF
  // [NativeTypeAttribute] Offset: FFFFFFFF
  class VFXEventAttribute : public ::Il2CppObject/*, public ::System::IDisposable*/ {
    public:
    public:
    // private System.IntPtr m_Ptr
    // Size: 0x8
    // Offset: 0x10
    ::System::IntPtr m_Ptr;
    // Field size check
    static_assert(sizeof(::System::IntPtr) == 0x8);
    // private System.Boolean m_Owner
    // Size: 0x1
    // Offset: 0x18
    bool m_Owner;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: m_Owner and: m_VfxAsset
    char __padding1[0x7] = {};
    // private UnityEngine.VFX.VisualEffectAsset m_VfxAsset
    // Size: 0x8
    // Offset: 0x20
    ::UnityEngine::VFX::VisualEffectAsset* m_VfxAsset;
    // Field size check
    static_assert(sizeof(::UnityEngine::VFX::VisualEffectAsset*) == 0x8);
    public:
    // Creating interface conversion operator: operator ::System::IDisposable
    operator ::System::IDisposable() noexcept {
      return *reinterpret_cast<::System::IDisposable*>(this);
    }
    // Get instance field reference: private System.IntPtr m_Ptr
    [[deprecated("Use field access instead!")]] ::System::IntPtr& dyn_m_Ptr();
    // Get instance field reference: private System.Boolean m_Owner
    [[deprecated("Use field access instead!")]] bool& dyn_m_Owner();
    // Get instance field reference: private UnityEngine.VFX.VisualEffectAsset m_VfxAsset
    [[deprecated("Use field access instead!")]] ::UnityEngine::VFX::VisualEffectAsset*& dyn_m_VfxAsset();
    // private System.Void .ctor(System.IntPtr ptr, System.Boolean owner, UnityEngine.VFX.VisualEffectAsset vfxAsset)
    // Offset: 0x5710578
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static VFXEventAttribute* New_ctor(::System::IntPtr ptr, bool owner, ::UnityEngine::VFX::VisualEffectAsset* vfxAsset) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::VFX::VFXEventAttribute::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<VFXEventAttribute*, creationType>(ptr, owner, vfxAsset)));
    }
    // static UnityEngine.VFX.VFXEventAttribute CreateEventAttributeWrapper()
    // Offset: 0x57105C0
    static ::UnityEngine::VFX::VFXEventAttribute* CreateEventAttributeWrapper();
    // System.Void SetWrapValue(System.IntPtr ptrToEventAttribute)
    // Offset: 0x571062C
    void SetWrapValue(::System::IntPtr ptrToEventAttribute);
    // static System.IntPtr Internal_Create()
    // Offset: 0x571068C
    static ::System::IntPtr Internal_Create();
    // static UnityEngine.VFX.VFXEventAttribute Internal_InstanciateVFXEventAttribute(UnityEngine.VFX.VisualEffectAsset vfxAsset)
    // Offset: 0x57106B4
    static ::UnityEngine::VFX::VFXEventAttribute* Internal_InstanciateVFXEventAttribute(::UnityEngine::VFX::VisualEffectAsset* vfxAsset);
    // System.Void Internal_InitFromAsset(UnityEngine.VFX.VisualEffectAsset vfxAsset)
    // Offset: 0x5710780
    void Internal_InitFromAsset(::UnityEngine::VFX::VisualEffectAsset* vfxAsset);
    // private System.Void Release()
    // Offset: 0x57107C4
    void Release();
    // public System.Void Dispose()
    // Offset: 0x5710904
    void Dispose();
    // static System.Void Internal_Destroy(System.IntPtr ptr)
    // Offset: 0x5710834
    static void Internal_Destroy(::System::IntPtr ptr);
    // protected override System.Void Finalize()
    // Offset: 0x5710870
    // Implemented from: System.Object
    // Base method: System.Void Object::Finalize()
    void Finalize();
  }; // UnityEngine.VFX.VFXEventAttribute
  #pragma pack(pop)
  static check_size<sizeof(VFXEventAttribute), 32 + sizeof(::UnityEngine::VFX::VisualEffectAsset*)> __UnityEngine_VFX_VFXEventAttributeSizeCheck;
  static_assert(sizeof(VFXEventAttribute) == 0x28);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::VFX::VFXEventAttribute::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::VFX::VFXEventAttribute::CreateEventAttributeWrapper
// Il2CppName: CreateEventAttributeWrapper
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::VFX::VFXEventAttribute* (*)()>(&UnityEngine::VFX::VFXEventAttribute::CreateEventAttributeWrapper)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::VFX::VFXEventAttribute*), "CreateEventAttributeWrapper", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::VFX::VFXEventAttribute::SetWrapValue
// Il2CppName: SetWrapValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::VFX::VFXEventAttribute::*)(::System::IntPtr)>(&UnityEngine::VFX::VFXEventAttribute::SetWrapValue)> {
  static const MethodInfo* get() {
    static auto* ptrToEventAttribute = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::VFX::VFXEventAttribute*), "SetWrapValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ptrToEventAttribute});
  }
};
// Writing MetadataGetter for method: UnityEngine::VFX::VFXEventAttribute::Internal_Create
// Il2CppName: Internal_Create
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)()>(&UnityEngine::VFX::VFXEventAttribute::Internal_Create)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::VFX::VFXEventAttribute*), "Internal_Create", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::VFX::VFXEventAttribute::Internal_InstanciateVFXEventAttribute
// Il2CppName: Internal_InstanciateVFXEventAttribute
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::VFX::VFXEventAttribute* (*)(::UnityEngine::VFX::VisualEffectAsset*)>(&UnityEngine::VFX::VFXEventAttribute::Internal_InstanciateVFXEventAttribute)> {
  static const MethodInfo* get() {
    static auto* vfxAsset = &::il2cpp_utils::GetClassFromName("UnityEngine.VFX", "VisualEffectAsset")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::VFX::VFXEventAttribute*), "Internal_InstanciateVFXEventAttribute", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{vfxAsset});
  }
};
// Writing MetadataGetter for method: UnityEngine::VFX::VFXEventAttribute::Internal_InitFromAsset
// Il2CppName: Internal_InitFromAsset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::VFX::VFXEventAttribute::*)(::UnityEngine::VFX::VisualEffectAsset*)>(&UnityEngine::VFX::VFXEventAttribute::Internal_InitFromAsset)> {
  static const MethodInfo* get() {
    static auto* vfxAsset = &::il2cpp_utils::GetClassFromName("UnityEngine.VFX", "VisualEffectAsset")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::VFX::VFXEventAttribute*), "Internal_InitFromAsset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{vfxAsset});
  }
};
// Writing MetadataGetter for method: UnityEngine::VFX::VFXEventAttribute::Release
// Il2CppName: Release
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::VFX::VFXEventAttribute::*)()>(&UnityEngine::VFX::VFXEventAttribute::Release)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::VFX::VFXEventAttribute*), "Release", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::VFX::VFXEventAttribute::Dispose
// Il2CppName: Dispose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::VFX::VFXEventAttribute::*)()>(&UnityEngine::VFX::VFXEventAttribute::Dispose)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::VFX::VFXEventAttribute*), "Dispose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::VFX::VFXEventAttribute::Internal_Destroy
// Il2CppName: Internal_Destroy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr)>(&UnityEngine::VFX::VFXEventAttribute::Internal_Destroy)> {
  static const MethodInfo* get() {
    static auto* ptr = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::VFX::VFXEventAttribute*), "Internal_Destroy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ptr});
  }
};
// Writing MetadataGetter for method: UnityEngine::VFX::VFXEventAttribute::Finalize
// Il2CppName: Finalize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::VFX::VFXEventAttribute::*)()>(&UnityEngine::VFX::VFXEventAttribute::Finalize)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::VFX::VFXEventAttribute*), "Finalize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
