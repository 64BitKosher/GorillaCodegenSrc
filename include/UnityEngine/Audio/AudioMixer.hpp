// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::Audio
namespace UnityEngine::Audio {
  // Forward declaring type: AudioMixerGroup
  class AudioMixerGroup;
  // Forward declaring type: AudioMixerSnapshot
  class AudioMixerSnapshot;
  // Forward declaring type: AudioMixerUpdateMode
  struct AudioMixerUpdateMode;
}
// Completed forward declares
// Type namespace: UnityEngine.Audio
namespace UnityEngine::Audio {
  // Forward declaring type: AudioMixer
  class AudioMixer;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::Audio::AudioMixer);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::Audio::AudioMixer*, "UnityEngine.Audio", "AudioMixer");
// Type namespace: UnityEngine.Audio
namespace UnityEngine::Audio {
  // Size: 0x18
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.Audio.AudioMixer
  // [TokenAttribute] Offset: FFFFFFFF
  // [NativeHeaderAttribute] Offset: FFFFFFFF
  // [ExcludeFromObjectFactoryAttribute] Offset: FFFFFFFF
  // [NativeHeaderAttribute] Offset: FFFFFFFF
  // [ExcludeFromPresetAttribute] Offset: FFFFFFFF
  class AudioMixer : public ::UnityEngine::Object {
    public:
    // System.Void .ctor()
    // Offset: 0x54763EC
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static AudioMixer* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Audio::AudioMixer::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<AudioMixer*, creationType>()));
    }
    // public UnityEngine.Audio.AudioMixerGroup get_outputAudioMixerGroup()
    // Offset: 0x5476444
    ::UnityEngine::Audio::AudioMixerGroup* get_outputAudioMixerGroup();
    // public System.Void set_outputAudioMixerGroup(UnityEngine.Audio.AudioMixerGroup value)
    // Offset: 0x5476480
    void set_outputAudioMixerGroup(::UnityEngine::Audio::AudioMixerGroup* value);
    // public UnityEngine.Audio.AudioMixerSnapshot FindSnapshot(System.String name)
    // Offset: 0x54764C4
    ::UnityEngine::Audio::AudioMixerSnapshot* FindSnapshot(::StringW name);
    // public UnityEngine.Audio.AudioMixerGroup[] FindMatchingGroups(System.String subPath)
    // Offset: 0x5476508
    ::ArrayW<::UnityEngine::Audio::AudioMixerGroup*> FindMatchingGroups(::StringW subPath);
    // System.Void TransitionToSnapshot(UnityEngine.Audio.AudioMixerSnapshot snapshot, System.Single timeToReach)
    // Offset: 0x547654C
    void TransitionToSnapshot(::UnityEngine::Audio::AudioMixerSnapshot* snapshot, float timeToReach);
    // private System.Void TransitionToSnapshotInternal(UnityEngine.Audio.AudioMixerSnapshot snapshot, System.Single timeToReach)
    // Offset: 0x54767F0
    void TransitionToSnapshotInternal(::UnityEngine::Audio::AudioMixerSnapshot* snapshot, float timeToReach);
    // public System.Void TransitionToSnapshots(UnityEngine.Audio.AudioMixerSnapshot[] snapshots, System.Single[] weights, System.Single timeToReach)
    // Offset: 0x5476844
    void TransitionToSnapshots(::ArrayW<::UnityEngine::Audio::AudioMixerSnapshot*> snapshots, ::ArrayW<float> weights, float timeToReach);
    // public UnityEngine.Audio.AudioMixerUpdateMode get_updateMode()
    // Offset: 0x54768A8
    ::UnityEngine::Audio::AudioMixerUpdateMode get_updateMode();
    // public System.Void set_updateMode(UnityEngine.Audio.AudioMixerUpdateMode value)
    // Offset: 0x54768E4
    void set_updateMode(::UnityEngine::Audio::AudioMixerUpdateMode value);
    // public System.Boolean SetFloat(System.String name, System.Single value)
    // Offset: 0x5476928
    bool SetFloat(::StringW name, float value);
    // public System.Boolean ClearFloat(System.String name)
    // Offset: 0x547697C
    bool ClearFloat(::StringW name);
    // public System.Boolean GetFloat(System.String name, out System.Single value)
    // Offset: 0x54769C0
    bool GetFloat(::StringW name, ByRef<float> value);
    // System.Single GetAbsoluteAudibilityFromGroup(UnityEngine.Audio.AudioMixerGroup group)
    // Offset: 0x5476A14
    float GetAbsoluteAudibilityFromGroup(::UnityEngine::Audio::AudioMixerGroup* group);
  }; // UnityEngine.Audio.AudioMixer
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::Audio::AudioMixer::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::Audio::AudioMixer::get_outputAudioMixerGroup
// Il2CppName: get_outputAudioMixerGroup
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Audio::AudioMixerGroup* (UnityEngine::Audio::AudioMixer::*)()>(&UnityEngine::Audio::AudioMixer::get_outputAudioMixerGroup)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Audio::AudioMixer*), "get_outputAudioMixerGroup", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Audio::AudioMixer::set_outputAudioMixerGroup
// Il2CppName: set_outputAudioMixerGroup
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Audio::AudioMixer::*)(::UnityEngine::Audio::AudioMixerGroup*)>(&UnityEngine::Audio::AudioMixer::set_outputAudioMixerGroup)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.Audio", "AudioMixerGroup")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Audio::AudioMixer*), "set_outputAudioMixerGroup", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Audio::AudioMixer::FindSnapshot
// Il2CppName: FindSnapshot
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Audio::AudioMixerSnapshot* (UnityEngine::Audio::AudioMixer::*)(::StringW)>(&UnityEngine::Audio::AudioMixer::FindSnapshot)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Audio::AudioMixer*), "FindSnapshot", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name});
  }
};
// Writing MetadataGetter for method: UnityEngine::Audio::AudioMixer::FindMatchingGroups
// Il2CppName: FindMatchingGroups
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::UnityEngine::Audio::AudioMixerGroup*> (UnityEngine::Audio::AudioMixer::*)(::StringW)>(&UnityEngine::Audio::AudioMixer::FindMatchingGroups)> {
  static const MethodInfo* get() {
    static auto* subPath = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Audio::AudioMixer*), "FindMatchingGroups", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{subPath});
  }
};
// Writing MetadataGetter for method: UnityEngine::Audio::AudioMixer::TransitionToSnapshot
// Il2CppName: TransitionToSnapshot
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Audio::AudioMixer::*)(::UnityEngine::Audio::AudioMixerSnapshot*, float)>(&UnityEngine::Audio::AudioMixer::TransitionToSnapshot)> {
  static const MethodInfo* get() {
    static auto* snapshot = &::il2cpp_utils::GetClassFromName("UnityEngine.Audio", "AudioMixerSnapshot")->byval_arg;
    static auto* timeToReach = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Audio::AudioMixer*), "TransitionToSnapshot", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{snapshot, timeToReach});
  }
};
// Writing MetadataGetter for method: UnityEngine::Audio::AudioMixer::TransitionToSnapshotInternal
// Il2CppName: TransitionToSnapshotInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Audio::AudioMixer::*)(::UnityEngine::Audio::AudioMixerSnapshot*, float)>(&UnityEngine::Audio::AudioMixer::TransitionToSnapshotInternal)> {
  static const MethodInfo* get() {
    static auto* snapshot = &::il2cpp_utils::GetClassFromName("UnityEngine.Audio", "AudioMixerSnapshot")->byval_arg;
    static auto* timeToReach = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Audio::AudioMixer*), "TransitionToSnapshotInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{snapshot, timeToReach});
  }
};
// Writing MetadataGetter for method: UnityEngine::Audio::AudioMixer::TransitionToSnapshots
// Il2CppName: TransitionToSnapshots
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Audio::AudioMixer::*)(::ArrayW<::UnityEngine::Audio::AudioMixerSnapshot*>, ::ArrayW<float>, float)>(&UnityEngine::Audio::AudioMixer::TransitionToSnapshots)> {
  static const MethodInfo* get() {
    static auto* snapshots = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("UnityEngine.Audio", "AudioMixerSnapshot"), 1)->byval_arg;
    static auto* weights = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Single"), 1)->byval_arg;
    static auto* timeToReach = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Audio::AudioMixer*), "TransitionToSnapshots", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{snapshots, weights, timeToReach});
  }
};
// Writing MetadataGetter for method: UnityEngine::Audio::AudioMixer::get_updateMode
// Il2CppName: get_updateMode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Audio::AudioMixerUpdateMode (UnityEngine::Audio::AudioMixer::*)()>(&UnityEngine::Audio::AudioMixer::get_updateMode)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Audio::AudioMixer*), "get_updateMode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Audio::AudioMixer::set_updateMode
// Il2CppName: set_updateMode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Audio::AudioMixer::*)(::UnityEngine::Audio::AudioMixerUpdateMode)>(&UnityEngine::Audio::AudioMixer::set_updateMode)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.Audio", "AudioMixerUpdateMode")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Audio::AudioMixer*), "set_updateMode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Audio::AudioMixer::SetFloat
// Il2CppName: SetFloat
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::Audio::AudioMixer::*)(::StringW, float)>(&UnityEngine::Audio::AudioMixer::SetFloat)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Audio::AudioMixer*), "SetFloat", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name, value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Audio::AudioMixer::ClearFloat
// Il2CppName: ClearFloat
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::Audio::AudioMixer::*)(::StringW)>(&UnityEngine::Audio::AudioMixer::ClearFloat)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Audio::AudioMixer*), "ClearFloat", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name});
  }
};
// Writing MetadataGetter for method: UnityEngine::Audio::AudioMixer::GetFloat
// Il2CppName: GetFloat
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::Audio::AudioMixer::*)(::StringW, ByRef<float>)>(&UnityEngine::Audio::AudioMixer::GetFloat)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Audio::AudioMixer*), "GetFloat", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name, value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Audio::AudioMixer::GetAbsoluteAudibilityFromGroup
// Il2CppName: GetAbsoluteAudibilityFromGroup
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::Audio::AudioMixer::*)(::UnityEngine::Audio::AudioMixerGroup*)>(&UnityEngine::Audio::AudioMixer::GetAbsoluteAudibilityFromGroup)> {
  static const MethodInfo* get() {
    static auto* group = &::il2cpp_utils::GetClassFromName("UnityEngine.Audio", "AudioMixerGroup")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Audio::AudioMixer*), "GetAbsoluteAudibilityFromGroup", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{group});
  }
};
