// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
// Including type: Unity.Profiling.ProfilerMarker
#include "Unity/Profiling/ProfilerMarker.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRInteractionUpdateOrder
#include "UnityEngine/XR/Interaction/Toolkit/XRInteractionUpdateOrder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::XR::Interaction::Toolkit
namespace UnityEngine::XR::Interaction::Toolkit {
  // Forward declaring type: InteractionGroupRegisteredEventArgs
  class InteractionGroupRegisteredEventArgs;
  // Forward declaring type: InteractionGroupUnregisteredEventArgs
  class InteractionGroupUnregisteredEventArgs;
  // Forward declaring type: InteractorRegisteredEventArgs
  class InteractorRegisteredEventArgs;
  // Forward declaring type: InteractorUnregisteredEventArgs
  class InteractorUnregisteredEventArgs;
  // Forward declaring type: InteractableRegisteredEventArgs
  class InteractableRegisteredEventArgs;
  // Forward declaring type: InteractableUnregisteredEventArgs
  class InteractableUnregisteredEventArgs;
  // Forward declaring type: IXRInteractable
  class IXRInteractable;
  // Forward declaring type: XRInteractableSnapVolume
  class XRInteractableSnapVolume;
  // Forward declaring type: IXRInteractor
  class IXRInteractor;
  // Forward declaring type: IXRInteractionGroup
  class IXRInteractionGroup;
  // Forward declaring type: IXRHoverInteractable
  class IXRHoverInteractable;
  // Forward declaring type: IXRSelectInteractable
  class IXRSelectInteractable;
  // Forward declaring type: IXRTargetPriorityInteractor
  class IXRTargetPriorityInteractor;
  // Forward declaring type: XRBaseInteractable
  class XRBaseInteractable;
  // Forward declaring type: SelectEnterEventArgs
  class SelectEnterEventArgs;
  // Forward declaring type: SelectExitEventArgs
  class SelectExitEventArgs;
  // Forward declaring type: HoverEnterEventArgs
  class HoverEnterEventArgs;
  // Forward declaring type: HoverExitEventArgs
  class HoverExitEventArgs;
  // Forward declaring type: IXRFilterList`1<T>
  template<typename T>
  class IXRFilterList_1;
  // Forward declaring type: IXRHoverInteractor
  class IXRHoverInteractor;
  // Forward declaring type: IXRSelectInteractor
  class IXRSelectInteractor;
  // Forward declaring type: XRBaseInteractor
  class XRBaseInteractor;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Action`1<T>
  template<typename T>
  class Action_1;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
  // Forward declaring type: Dictionary`2<TKey, TValue>
  template<typename TKey, typename TValue>
  class Dictionary_2;
  // Forward declaring type: HashSet`1<T>
  template<typename T>
  class HashSet_1;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Skipping declaration: Object because it is already included!
  // Forward declaring type: Collider
  class Collider;
}
// Forward declaring namespace: UnityEngine::XR::Interaction::Toolkit::Utilities
namespace UnityEngine::XR::Interaction::Toolkit::Utilities {
  // Forward declaring type: ExposedRegistrationList`1<T>
  template<typename T>
  class ExposedRegistrationList_1;
  // Forward declaring type: RegistrationList`1<T>
  template<typename T>
  class RegistrationList_1;
}
// Forward declaring namespace: UnityEngine::XR::Interaction::Toolkit::Filtering
namespace UnityEngine::XR::Interaction::Toolkit::Filtering {
  // Forward declaring type: IXRHoverFilter
  class IXRHoverFilter;
  // Forward declaring type: IXRSelectFilter
  class IXRSelectFilter;
}
// Forward declaring namespace: UnityEngine::XR::Interaction::Toolkit::Utilities::Pooling
namespace UnityEngine::XR::Interaction::Toolkit::Utilities::Pooling {
  // Forward declaring type: LinkedPool`1<T>
  template<typename T>
  class LinkedPool_1;
}
// Completed forward declares
// Type namespace: UnityEngine.XR.Interaction.Toolkit
namespace UnityEngine::XR::Interaction::Toolkit {
  // Forward declaring type: XRInteractionManager
  class XRInteractionManager;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*, "UnityEngine.XR.Interaction.Toolkit", "XRInteractionManager");
// Type namespace: UnityEngine.XR.Interaction.Toolkit
namespace UnityEngine::XR::Interaction::Toolkit {
  // Size: 0x140
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager
  // [TokenAttribute] Offset: FFFFFFFF
  // [HelpURLAttribute] Offset: FFFFFFFF
  // [DefaultExecutionOrder] Offset: FFFFFFFF
  // [DisallowMultipleComponent] Offset: FFFFFFFF
  // [AddComponentMenu] Offset: FFFFFFFF
  class XRInteractionManager : public ::UnityEngine::MonoBehaviour {
    public:
    // Nested type: ::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::$$c
    class $$c;
    public:
    // private System.Action`1<UnityEngine.XR.Interaction.Toolkit.InteractionGroupRegisteredEventArgs> interactionGroupRegistered
    // Size: 0x8
    // Offset: 0x20
    ::System::Action_1<::UnityEngine::XR::Interaction::Toolkit::InteractionGroupRegisteredEventArgs*>* interactionGroupRegistered;
    // Field size check
    static_assert(sizeof(::System::Action_1<::UnityEngine::XR::Interaction::Toolkit::InteractionGroupRegisteredEventArgs*>*) == 0x8);
    // private System.Action`1<UnityEngine.XR.Interaction.Toolkit.InteractionGroupUnregisteredEventArgs> interactionGroupUnregistered
    // Size: 0x8
    // Offset: 0x28
    ::System::Action_1<::UnityEngine::XR::Interaction::Toolkit::InteractionGroupUnregisteredEventArgs*>* interactionGroupUnregistered;
    // Field size check
    static_assert(sizeof(::System::Action_1<::UnityEngine::XR::Interaction::Toolkit::InteractionGroupUnregisteredEventArgs*>*) == 0x8);
    // private System.Action`1<UnityEngine.XR.Interaction.Toolkit.InteractorRegisteredEventArgs> interactorRegistered
    // Size: 0x8
    // Offset: 0x30
    ::System::Action_1<::UnityEngine::XR::Interaction::Toolkit::InteractorRegisteredEventArgs*>* interactorRegistered;
    // Field size check
    static_assert(sizeof(::System::Action_1<::UnityEngine::XR::Interaction::Toolkit::InteractorRegisteredEventArgs*>*) == 0x8);
    // private System.Action`1<UnityEngine.XR.Interaction.Toolkit.InteractorUnregisteredEventArgs> interactorUnregistered
    // Size: 0x8
    // Offset: 0x38
    ::System::Action_1<::UnityEngine::XR::Interaction::Toolkit::InteractorUnregisteredEventArgs*>* interactorUnregistered;
    // Field size check
    static_assert(sizeof(::System::Action_1<::UnityEngine::XR::Interaction::Toolkit::InteractorUnregisteredEventArgs*>*) == 0x8);
    // private System.Action`1<UnityEngine.XR.Interaction.Toolkit.InteractableRegisteredEventArgs> interactableRegistered
    // Size: 0x8
    // Offset: 0x40
    ::System::Action_1<::UnityEngine::XR::Interaction::Toolkit::InteractableRegisteredEventArgs*>* interactableRegistered;
    // Field size check
    static_assert(sizeof(::System::Action_1<::UnityEngine::XR::Interaction::Toolkit::InteractableRegisteredEventArgs*>*) == 0x8);
    // private System.Action`1<UnityEngine.XR.Interaction.Toolkit.InteractableUnregisteredEventArgs> interactableUnregistered
    // Size: 0x8
    // Offset: 0x48
    ::System::Action_1<::UnityEngine::XR::Interaction::Toolkit::InteractableUnregisteredEventArgs*>* interactableUnregistered;
    // Field size check
    static_assert(sizeof(::System::Action_1<::UnityEngine::XR::Interaction::Toolkit::InteractableUnregisteredEventArgs*>*) == 0x8);
    // private System.Collections.Generic.List`1<UnityEngine.Object> m_StartingHoverFilters
    // Size: 0x8
    // Offset: 0x50
    ::System::Collections::Generic::List_1<::UnityEngine::Object*>* m_StartingHoverFilters;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::UnityEngine::Object*>*) == 0x8);
    // private readonly UnityEngine.XR.Interaction.Toolkit.Utilities.ExposedRegistrationList`1<UnityEngine.XR.Interaction.Toolkit.Filtering.IXRHoverFilter> m_HoverFilters
    // Size: 0x8
    // Offset: 0x58
    ::UnityEngine::XR::Interaction::Toolkit::Utilities::ExposedRegistrationList_1<::UnityEngine::XR::Interaction::Toolkit::Filtering::IXRHoverFilter*>* m_HoverFilters;
    // Field size check
    static_assert(sizeof(::UnityEngine::XR::Interaction::Toolkit::Utilities::ExposedRegistrationList_1<::UnityEngine::XR::Interaction::Toolkit::Filtering::IXRHoverFilter*>*) == 0x8);
    // private System.Collections.Generic.List`1<UnityEngine.Object> m_StartingSelectFilters
    // Size: 0x8
    // Offset: 0x60
    ::System::Collections::Generic::List_1<::UnityEngine::Object*>* m_StartingSelectFilters;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::UnityEngine::Object*>*) == 0x8);
    // private readonly UnityEngine.XR.Interaction.Toolkit.Utilities.ExposedRegistrationList`1<UnityEngine.XR.Interaction.Toolkit.Filtering.IXRSelectFilter> m_SelectFilters
    // Size: 0x8
    // Offset: 0x68
    ::UnityEngine::XR::Interaction::Toolkit::Utilities::ExposedRegistrationList_1<::UnityEngine::XR::Interaction::Toolkit::Filtering::IXRSelectFilter*>* m_SelectFilters;
    // Field size check
    static_assert(sizeof(::UnityEngine::XR::Interaction::Toolkit::Utilities::ExposedRegistrationList_1<::UnityEngine::XR::Interaction::Toolkit::Filtering::IXRSelectFilter*>*) == 0x8);
    // private readonly System.Collections.Generic.Dictionary`2<UnityEngine.Collider,UnityEngine.XR.Interaction.Toolkit.IXRInteractable> m_ColliderToInteractableMap
    // Size: 0x8
    // Offset: 0x70
    ::System::Collections::Generic::Dictionary_2<::UnityEngine::Collider*, ::UnityEngine::XR::Interaction::Toolkit::IXRInteractable*>* m_ColliderToInteractableMap;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::Dictionary_2<::UnityEngine::Collider*, ::UnityEngine::XR::Interaction::Toolkit::IXRInteractable*>*) == 0x8);
    // private readonly System.Collections.Generic.Dictionary`2<UnityEngine.Collider,UnityEngine.XR.Interaction.Toolkit.XRInteractableSnapVolume> m_ColliderToSnapVolumes
    // Size: 0x8
    // Offset: 0x78
    ::System::Collections::Generic::Dictionary_2<::UnityEngine::Collider*, ::UnityEngine::XR::Interaction::Toolkit::XRInteractableSnapVolume*>* m_ColliderToSnapVolumes;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::Dictionary_2<::UnityEngine::Collider*, ::UnityEngine::XR::Interaction::Toolkit::XRInteractableSnapVolume*>*) == 0x8);
    // private readonly UnityEngine.XR.Interaction.Toolkit.Utilities.RegistrationList`1<UnityEngine.XR.Interaction.Toolkit.IXRInteractor> m_Interactors
    // Size: 0x8
    // Offset: 0x80
    ::UnityEngine::XR::Interaction::Toolkit::Utilities::RegistrationList_1<::UnityEngine::XR::Interaction::Toolkit::IXRInteractor*>* m_Interactors;
    // Field size check
    static_assert(sizeof(::UnityEngine::XR::Interaction::Toolkit::Utilities::RegistrationList_1<::UnityEngine::XR::Interaction::Toolkit::IXRInteractor*>*) == 0x8);
    // private readonly UnityEngine.XR.Interaction.Toolkit.Utilities.RegistrationList`1<UnityEngine.XR.Interaction.Toolkit.IXRInteractionGroup> m_InteractionGroups
    // Size: 0x8
    // Offset: 0x88
    ::UnityEngine::XR::Interaction::Toolkit::Utilities::RegistrationList_1<::UnityEngine::XR::Interaction::Toolkit::IXRInteractionGroup*>* m_InteractionGroups;
    // Field size check
    static_assert(sizeof(::UnityEngine::XR::Interaction::Toolkit::Utilities::RegistrationList_1<::UnityEngine::XR::Interaction::Toolkit::IXRInteractionGroup*>*) == 0x8);
    // private readonly UnityEngine.XR.Interaction.Toolkit.Utilities.RegistrationList`1<UnityEngine.XR.Interaction.Toolkit.IXRInteractable> m_Interactables
    // Size: 0x8
    // Offset: 0x90
    ::UnityEngine::XR::Interaction::Toolkit::Utilities::RegistrationList_1<::UnityEngine::XR::Interaction::Toolkit::IXRInteractable*>* m_Interactables;
    // Field size check
    static_assert(sizeof(::UnityEngine::XR::Interaction::Toolkit::Utilities::RegistrationList_1<::UnityEngine::XR::Interaction::Toolkit::IXRInteractable*>*) == 0x8);
    // private readonly System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractable> m_CurrentHovered
    // Size: 0x8
    // Offset: 0x98
    ::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractable*>* m_CurrentHovered;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractable*>*) == 0x8);
    // private readonly System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractable> m_CurrentSelected
    // Size: 0x8
    // Offset: 0xA0
    ::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable*>* m_CurrentSelected;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable*>*) == 0x8);
    // private readonly System.Collections.Generic.Dictionary`2<UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractable,System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.IXRTargetPriorityInteractor>> m_HighestPriorityTargetMap
    // Size: 0x8
    // Offset: 0xA8
    ::System::Collections::Generic::Dictionary_2<::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable*, ::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::IXRTargetPriorityInteractor*>*>* m_HighestPriorityTargetMap;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::Dictionary_2<::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable*, ::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::IXRTargetPriorityInteractor*>*>*) == 0x8);
    // private readonly System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.IXRInteractable> m_ValidTargets
    // Size: 0x8
    // Offset: 0xB0
    ::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::IXRInteractable*>* m_ValidTargets;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::IXRInteractable*>*) == 0x8);
    // private readonly System.Collections.Generic.HashSet`1<UnityEngine.XR.Interaction.Toolkit.IXRInteractable> m_UnorderedValidTargets
    // Size: 0x8
    // Offset: 0xB8
    ::System::Collections::Generic::HashSet_1<::UnityEngine::XR::Interaction::Toolkit::IXRInteractable*>* m_UnorderedValidTargets;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::HashSet_1<::UnityEngine::XR::Interaction::Toolkit::IXRInteractable*>*) == 0x8);
    // private readonly System.Collections.Generic.HashSet`1<UnityEngine.XR.Interaction.Toolkit.IXRInteractor> m_InteractorsInGroup
    // Size: 0x8
    // Offset: 0xC0
    ::System::Collections::Generic::HashSet_1<::UnityEngine::XR::Interaction::Toolkit::IXRInteractor*>* m_InteractorsInGroup;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::HashSet_1<::UnityEngine::XR::Interaction::Toolkit::IXRInteractor*>*) == 0x8);
    // private readonly System.Collections.Generic.HashSet`1<UnityEngine.XR.Interaction.Toolkit.IXRInteractionGroup> m_GroupsInGroup
    // Size: 0x8
    // Offset: 0xC8
    ::System::Collections::Generic::HashSet_1<::UnityEngine::XR::Interaction::Toolkit::IXRInteractionGroup*>* m_GroupsInGroup;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::HashSet_1<::UnityEngine::XR::Interaction::Toolkit::IXRInteractionGroup*>*) == 0x8);
    // private readonly System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable> m_DeprecatedValidTargets
    // Size: 0x8
    // Offset: 0xD0
    ::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*>* m_DeprecatedValidTargets;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*>*) == 0x8);
    // private readonly System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.IXRInteractionGroup> m_ScratchInteractionGroups
    // Size: 0x8
    // Offset: 0xD8
    ::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::IXRInteractionGroup*>* m_ScratchInteractionGroups;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::IXRInteractionGroup*>*) == 0x8);
    // private readonly System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.IXRInteractor> m_ScratchInteractors
    // Size: 0x8
    // Offset: 0xE0
    ::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::IXRInteractor*>* m_ScratchInteractors;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::IXRInteractor*>*) == 0x8);
    // private readonly System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.IXRInteractable> m_ScratchInteractables
    // Size: 0x8
    // Offset: 0xE8
    ::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::IXRInteractable*>* m_ScratchInteractables;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::IXRInteractable*>*) == 0x8);
    // private readonly UnityEngine.XR.Interaction.Toolkit.Utilities.Pooling.LinkedPool`1<UnityEngine.XR.Interaction.Toolkit.SelectEnterEventArgs> m_SelectEnterEventArgs
    // Size: 0x8
    // Offset: 0xF0
    ::UnityEngine::XR::Interaction::Toolkit::Utilities::Pooling::LinkedPool_1<::UnityEngine::XR::Interaction::Toolkit::SelectEnterEventArgs*>* m_SelectEnterEventArgs;
    // Field size check
    static_assert(sizeof(::UnityEngine::XR::Interaction::Toolkit::Utilities::Pooling::LinkedPool_1<::UnityEngine::XR::Interaction::Toolkit::SelectEnterEventArgs*>*) == 0x8);
    // private readonly UnityEngine.XR.Interaction.Toolkit.Utilities.Pooling.LinkedPool`1<UnityEngine.XR.Interaction.Toolkit.SelectExitEventArgs> m_SelectExitEventArgs
    // Size: 0x8
    // Offset: 0xF8
    ::UnityEngine::XR::Interaction::Toolkit::Utilities::Pooling::LinkedPool_1<::UnityEngine::XR::Interaction::Toolkit::SelectExitEventArgs*>* m_SelectExitEventArgs;
    // Field size check
    static_assert(sizeof(::UnityEngine::XR::Interaction::Toolkit::Utilities::Pooling::LinkedPool_1<::UnityEngine::XR::Interaction::Toolkit::SelectExitEventArgs*>*) == 0x8);
    // private readonly UnityEngine.XR.Interaction.Toolkit.Utilities.Pooling.LinkedPool`1<UnityEngine.XR.Interaction.Toolkit.HoverEnterEventArgs> m_HoverEnterEventArgs
    // Size: 0x8
    // Offset: 0x100
    ::UnityEngine::XR::Interaction::Toolkit::Utilities::Pooling::LinkedPool_1<::UnityEngine::XR::Interaction::Toolkit::HoverEnterEventArgs*>* m_HoverEnterEventArgs;
    // Field size check
    static_assert(sizeof(::UnityEngine::XR::Interaction::Toolkit::Utilities::Pooling::LinkedPool_1<::UnityEngine::XR::Interaction::Toolkit::HoverEnterEventArgs*>*) == 0x8);
    // private readonly UnityEngine.XR.Interaction.Toolkit.Utilities.Pooling.LinkedPool`1<UnityEngine.XR.Interaction.Toolkit.HoverExitEventArgs> m_HoverExitEventArgs
    // Size: 0x8
    // Offset: 0x108
    ::UnityEngine::XR::Interaction::Toolkit::Utilities::Pooling::LinkedPool_1<::UnityEngine::XR::Interaction::Toolkit::HoverExitEventArgs*>* m_HoverExitEventArgs;
    // Field size check
    static_assert(sizeof(::UnityEngine::XR::Interaction::Toolkit::Utilities::Pooling::LinkedPool_1<::UnityEngine::XR::Interaction::Toolkit::HoverExitEventArgs*>*) == 0x8);
    // private readonly UnityEngine.XR.Interaction.Toolkit.Utilities.Pooling.LinkedPool`1<UnityEngine.XR.Interaction.Toolkit.InteractionGroupRegisteredEventArgs> m_InteractionGroupRegisteredEventArgs
    // Size: 0x8
    // Offset: 0x110
    ::UnityEngine::XR::Interaction::Toolkit::Utilities::Pooling::LinkedPool_1<::UnityEngine::XR::Interaction::Toolkit::InteractionGroupRegisteredEventArgs*>* m_InteractionGroupRegisteredEventArgs;
    // Field size check
    static_assert(sizeof(::UnityEngine::XR::Interaction::Toolkit::Utilities::Pooling::LinkedPool_1<::UnityEngine::XR::Interaction::Toolkit::InteractionGroupRegisteredEventArgs*>*) == 0x8);
    // private readonly UnityEngine.XR.Interaction.Toolkit.Utilities.Pooling.LinkedPool`1<UnityEngine.XR.Interaction.Toolkit.InteractionGroupUnregisteredEventArgs> m_InteractionGroupUnregisteredEventArgs
    // Size: 0x8
    // Offset: 0x118
    ::UnityEngine::XR::Interaction::Toolkit::Utilities::Pooling::LinkedPool_1<::UnityEngine::XR::Interaction::Toolkit::InteractionGroupUnregisteredEventArgs*>* m_InteractionGroupUnregisteredEventArgs;
    // Field size check
    static_assert(sizeof(::UnityEngine::XR::Interaction::Toolkit::Utilities::Pooling::LinkedPool_1<::UnityEngine::XR::Interaction::Toolkit::InteractionGroupUnregisteredEventArgs*>*) == 0x8);
    // private readonly UnityEngine.XR.Interaction.Toolkit.Utilities.Pooling.LinkedPool`1<UnityEngine.XR.Interaction.Toolkit.InteractorRegisteredEventArgs> m_InteractorRegisteredEventArgs
    // Size: 0x8
    // Offset: 0x120
    ::UnityEngine::XR::Interaction::Toolkit::Utilities::Pooling::LinkedPool_1<::UnityEngine::XR::Interaction::Toolkit::InteractorRegisteredEventArgs*>* m_InteractorRegisteredEventArgs;
    // Field size check
    static_assert(sizeof(::UnityEngine::XR::Interaction::Toolkit::Utilities::Pooling::LinkedPool_1<::UnityEngine::XR::Interaction::Toolkit::InteractorRegisteredEventArgs*>*) == 0x8);
    // private readonly UnityEngine.XR.Interaction.Toolkit.Utilities.Pooling.LinkedPool`1<UnityEngine.XR.Interaction.Toolkit.InteractorUnregisteredEventArgs> m_InteractorUnregisteredEventArgs
    // Size: 0x8
    // Offset: 0x128
    ::UnityEngine::XR::Interaction::Toolkit::Utilities::Pooling::LinkedPool_1<::UnityEngine::XR::Interaction::Toolkit::InteractorUnregisteredEventArgs*>* m_InteractorUnregisteredEventArgs;
    // Field size check
    static_assert(sizeof(::UnityEngine::XR::Interaction::Toolkit::Utilities::Pooling::LinkedPool_1<::UnityEngine::XR::Interaction::Toolkit::InteractorUnregisteredEventArgs*>*) == 0x8);
    // private readonly UnityEngine.XR.Interaction.Toolkit.Utilities.Pooling.LinkedPool`1<UnityEngine.XR.Interaction.Toolkit.InteractableRegisteredEventArgs> m_InteractableRegisteredEventArgs
    // Size: 0x8
    // Offset: 0x130
    ::UnityEngine::XR::Interaction::Toolkit::Utilities::Pooling::LinkedPool_1<::UnityEngine::XR::Interaction::Toolkit::InteractableRegisteredEventArgs*>* m_InteractableRegisteredEventArgs;
    // Field size check
    static_assert(sizeof(::UnityEngine::XR::Interaction::Toolkit::Utilities::Pooling::LinkedPool_1<::UnityEngine::XR::Interaction::Toolkit::InteractableRegisteredEventArgs*>*) == 0x8);
    // private readonly UnityEngine.XR.Interaction.Toolkit.Utilities.Pooling.LinkedPool`1<UnityEngine.XR.Interaction.Toolkit.InteractableUnregisteredEventArgs> m_InteractableUnregisteredEventArgs
    // Size: 0x8
    // Offset: 0x138
    ::UnityEngine::XR::Interaction::Toolkit::Utilities::Pooling::LinkedPool_1<::UnityEngine::XR::Interaction::Toolkit::InteractableUnregisteredEventArgs*>* m_InteractableUnregisteredEventArgs;
    // Field size check
    static_assert(sizeof(::UnityEngine::XR::Interaction::Toolkit::Utilities::Pooling::LinkedPool_1<::UnityEngine::XR::Interaction::Toolkit::InteractableUnregisteredEventArgs*>*) == 0x8);
    public:
    // Get static field: static private readonly System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.XRInteractionManager> <activeInteractionManagers>k__BackingField
    static ::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*>* _get_$activeInteractionManagers$k__BackingField();
    // Set static field: static private readonly System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.XRInteractionManager> <activeInteractionManagers>k__BackingField
    static void _set_$activeInteractionManagers$k__BackingField(::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*>* value);
    // Get static field: static private readonly UnityEngine.XR.Interaction.Toolkit.Utilities.Pooling.LinkedPool`1<System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.IXRTargetPriorityInteractor>> s_TargetPriorityInteractorListPool
    static ::UnityEngine::XR::Interaction::Toolkit::Utilities::Pooling::LinkedPool_1<::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::IXRTargetPriorityInteractor*>*>* _get_s_TargetPriorityInteractorListPool();
    // Set static field: static private readonly UnityEngine.XR.Interaction.Toolkit.Utilities.Pooling.LinkedPool`1<System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.IXRTargetPriorityInteractor>> s_TargetPriorityInteractorListPool
    static void _set_s_TargetPriorityInteractorListPool(::UnityEngine::XR::Interaction::Toolkit::Utilities::Pooling::LinkedPool_1<::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::IXRTargetPriorityInteractor*>*>* value);
    // Get static field: static private readonly Unity.Profiling.ProfilerMarker s_PreprocessInteractorsMarker
    static ::Unity::Profiling::ProfilerMarker _get_s_PreprocessInteractorsMarker();
    // Set static field: static private readonly Unity.Profiling.ProfilerMarker s_PreprocessInteractorsMarker
    static void _set_s_PreprocessInteractorsMarker(::Unity::Profiling::ProfilerMarker value);
    // Get static field: static private readonly Unity.Profiling.ProfilerMarker s_ProcessInteractionStrengthMarker
    static ::Unity::Profiling::ProfilerMarker _get_s_ProcessInteractionStrengthMarker();
    // Set static field: static private readonly Unity.Profiling.ProfilerMarker s_ProcessInteractionStrengthMarker
    static void _set_s_ProcessInteractionStrengthMarker(::Unity::Profiling::ProfilerMarker value);
    // Get static field: static private readonly Unity.Profiling.ProfilerMarker s_ProcessInteractorsMarker
    static ::Unity::Profiling::ProfilerMarker _get_s_ProcessInteractorsMarker();
    // Set static field: static private readonly Unity.Profiling.ProfilerMarker s_ProcessInteractorsMarker
    static void _set_s_ProcessInteractorsMarker(::Unity::Profiling::ProfilerMarker value);
    // Get static field: static private readonly Unity.Profiling.ProfilerMarker s_ProcessInteractablesMarker
    static ::Unity::Profiling::ProfilerMarker _get_s_ProcessInteractablesMarker();
    // Set static field: static private readonly Unity.Profiling.ProfilerMarker s_ProcessInteractablesMarker
    static void _set_s_ProcessInteractablesMarker(::Unity::Profiling::ProfilerMarker value);
    // Get static field: static private readonly Unity.Profiling.ProfilerMarker s_UpdateGroupMemberInteractionsMarker
    static ::Unity::Profiling::ProfilerMarker _get_s_UpdateGroupMemberInteractionsMarker();
    // Set static field: static private readonly Unity.Profiling.ProfilerMarker s_UpdateGroupMemberInteractionsMarker
    static void _set_s_UpdateGroupMemberInteractionsMarker(::Unity::Profiling::ProfilerMarker value);
    // Get static field: static readonly Unity.Profiling.ProfilerMarker s_GetValidTargetsMarker
    static ::Unity::Profiling::ProfilerMarker _get_s_GetValidTargetsMarker();
    // Set static field: static readonly Unity.Profiling.ProfilerMarker s_GetValidTargetsMarker
    static void _set_s_GetValidTargetsMarker(::Unity::Profiling::ProfilerMarker value);
    // Get static field: static private readonly Unity.Profiling.ProfilerMarker s_FilterRegisteredValidTargetsMarker
    static ::Unity::Profiling::ProfilerMarker _get_s_FilterRegisteredValidTargetsMarker();
    // Set static field: static private readonly Unity.Profiling.ProfilerMarker s_FilterRegisteredValidTargetsMarker
    static void _set_s_FilterRegisteredValidTargetsMarker(::Unity::Profiling::ProfilerMarker value);
    // Get static field: static readonly Unity.Profiling.ProfilerMarker s_EvaluateInvalidSelectionsMarker
    static ::Unity::Profiling::ProfilerMarker _get_s_EvaluateInvalidSelectionsMarker();
    // Set static field: static readonly Unity.Profiling.ProfilerMarker s_EvaluateInvalidSelectionsMarker
    static void _set_s_EvaluateInvalidSelectionsMarker(::Unity::Profiling::ProfilerMarker value);
    // Get static field: static readonly Unity.Profiling.ProfilerMarker s_EvaluateInvalidHoversMarker
    static ::Unity::Profiling::ProfilerMarker _get_s_EvaluateInvalidHoversMarker();
    // Set static field: static readonly Unity.Profiling.ProfilerMarker s_EvaluateInvalidHoversMarker
    static void _set_s_EvaluateInvalidHoversMarker(::Unity::Profiling::ProfilerMarker value);
    // Get static field: static readonly Unity.Profiling.ProfilerMarker s_EvaluateValidSelectionsMarker
    static ::Unity::Profiling::ProfilerMarker _get_s_EvaluateValidSelectionsMarker();
    // Set static field: static readonly Unity.Profiling.ProfilerMarker s_EvaluateValidSelectionsMarker
    static void _set_s_EvaluateValidSelectionsMarker(::Unity::Profiling::ProfilerMarker value);
    // Get static field: static readonly Unity.Profiling.ProfilerMarker s_EvaluateValidHoversMarker
    static ::Unity::Profiling::ProfilerMarker _get_s_EvaluateValidHoversMarker();
    // Set static field: static readonly Unity.Profiling.ProfilerMarker s_EvaluateValidHoversMarker
    static void _set_s_EvaluateValidHoversMarker(::Unity::Profiling::ProfilerMarker value);
    // Get static field: static private readonly Unity.Profiling.ProfilerMarker s_SelectEnterMarker
    static ::Unity::Profiling::ProfilerMarker _get_s_SelectEnterMarker();
    // Set static field: static private readonly Unity.Profiling.ProfilerMarker s_SelectEnterMarker
    static void _set_s_SelectEnterMarker(::Unity::Profiling::ProfilerMarker value);
    // Get static field: static private readonly Unity.Profiling.ProfilerMarker s_SelectExitMarker
    static ::Unity::Profiling::ProfilerMarker _get_s_SelectExitMarker();
    // Set static field: static private readonly Unity.Profiling.ProfilerMarker s_SelectExitMarker
    static void _set_s_SelectExitMarker(::Unity::Profiling::ProfilerMarker value);
    // Get static field: static private readonly Unity.Profiling.ProfilerMarker s_HoverEnterMarker
    static ::Unity::Profiling::ProfilerMarker _get_s_HoverEnterMarker();
    // Set static field: static private readonly Unity.Profiling.ProfilerMarker s_HoverEnterMarker
    static void _set_s_HoverEnterMarker(::Unity::Profiling::ProfilerMarker value);
    // Get static field: static private readonly Unity.Profiling.ProfilerMarker s_HoverExitMarker
    static ::Unity::Profiling::ProfilerMarker _get_s_HoverExitMarker();
    // Set static field: static private readonly Unity.Profiling.ProfilerMarker s_HoverExitMarker
    static void _set_s_HoverExitMarker(::Unity::Profiling::ProfilerMarker value);
    // Get instance field reference: private System.Action`1<UnityEngine.XR.Interaction.Toolkit.InteractionGroupRegisteredEventArgs> interactionGroupRegistered
    [[deprecated("Use field access instead!")]] ::System::Action_1<::UnityEngine::XR::Interaction::Toolkit::InteractionGroupRegisteredEventArgs*>*& dyn_interactionGroupRegistered();
    // Get instance field reference: private System.Action`1<UnityEngine.XR.Interaction.Toolkit.InteractionGroupUnregisteredEventArgs> interactionGroupUnregistered
    [[deprecated("Use field access instead!")]] ::System::Action_1<::UnityEngine::XR::Interaction::Toolkit::InteractionGroupUnregisteredEventArgs*>*& dyn_interactionGroupUnregistered();
    // Get instance field reference: private System.Action`1<UnityEngine.XR.Interaction.Toolkit.InteractorRegisteredEventArgs> interactorRegistered
    [[deprecated("Use field access instead!")]] ::System::Action_1<::UnityEngine::XR::Interaction::Toolkit::InteractorRegisteredEventArgs*>*& dyn_interactorRegistered();
    // Get instance field reference: private System.Action`1<UnityEngine.XR.Interaction.Toolkit.InteractorUnregisteredEventArgs> interactorUnregistered
    [[deprecated("Use field access instead!")]] ::System::Action_1<::UnityEngine::XR::Interaction::Toolkit::InteractorUnregisteredEventArgs*>*& dyn_interactorUnregistered();
    // Get instance field reference: private System.Action`1<UnityEngine.XR.Interaction.Toolkit.InteractableRegisteredEventArgs> interactableRegistered
    [[deprecated("Use field access instead!")]] ::System::Action_1<::UnityEngine::XR::Interaction::Toolkit::InteractableRegisteredEventArgs*>*& dyn_interactableRegistered();
    // Get instance field reference: private System.Action`1<UnityEngine.XR.Interaction.Toolkit.InteractableUnregisteredEventArgs> interactableUnregistered
    [[deprecated("Use field access instead!")]] ::System::Action_1<::UnityEngine::XR::Interaction::Toolkit::InteractableUnregisteredEventArgs*>*& dyn_interactableUnregistered();
    // Get instance field reference: private System.Collections.Generic.List`1<UnityEngine.Object> m_StartingHoverFilters
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::Object*>*& dyn_m_StartingHoverFilters();
    // Get instance field reference: private readonly UnityEngine.XR.Interaction.Toolkit.Utilities.ExposedRegistrationList`1<UnityEngine.XR.Interaction.Toolkit.Filtering.IXRHoverFilter> m_HoverFilters
    [[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::Utilities::ExposedRegistrationList_1<::UnityEngine::XR::Interaction::Toolkit::Filtering::IXRHoverFilter*>*& dyn_m_HoverFilters();
    // Get instance field reference: private System.Collections.Generic.List`1<UnityEngine.Object> m_StartingSelectFilters
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::Object*>*& dyn_m_StartingSelectFilters();
    // Get instance field reference: private readonly UnityEngine.XR.Interaction.Toolkit.Utilities.ExposedRegistrationList`1<UnityEngine.XR.Interaction.Toolkit.Filtering.IXRSelectFilter> m_SelectFilters
    [[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::Utilities::ExposedRegistrationList_1<::UnityEngine::XR::Interaction::Toolkit::Filtering::IXRSelectFilter*>*& dyn_m_SelectFilters();
    // Get instance field reference: private readonly System.Collections.Generic.Dictionary`2<UnityEngine.Collider,UnityEngine.XR.Interaction.Toolkit.IXRInteractable> m_ColliderToInteractableMap
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::UnityEngine::Collider*, ::UnityEngine::XR::Interaction::Toolkit::IXRInteractable*>*& dyn_m_ColliderToInteractableMap();
    // Get instance field reference: private readonly System.Collections.Generic.Dictionary`2<UnityEngine.Collider,UnityEngine.XR.Interaction.Toolkit.XRInteractableSnapVolume> m_ColliderToSnapVolumes
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::UnityEngine::Collider*, ::UnityEngine::XR::Interaction::Toolkit::XRInteractableSnapVolume*>*& dyn_m_ColliderToSnapVolumes();
    // Get instance field reference: private readonly UnityEngine.XR.Interaction.Toolkit.Utilities.RegistrationList`1<UnityEngine.XR.Interaction.Toolkit.IXRInteractor> m_Interactors
    [[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::Utilities::RegistrationList_1<::UnityEngine::XR::Interaction::Toolkit::IXRInteractor*>*& dyn_m_Interactors();
    // Get instance field reference: private readonly UnityEngine.XR.Interaction.Toolkit.Utilities.RegistrationList`1<UnityEngine.XR.Interaction.Toolkit.IXRInteractionGroup> m_InteractionGroups
    [[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::Utilities::RegistrationList_1<::UnityEngine::XR::Interaction::Toolkit::IXRInteractionGroup*>*& dyn_m_InteractionGroups();
    // Get instance field reference: private readonly UnityEngine.XR.Interaction.Toolkit.Utilities.RegistrationList`1<UnityEngine.XR.Interaction.Toolkit.IXRInteractable> m_Interactables
    [[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::Utilities::RegistrationList_1<::UnityEngine::XR::Interaction::Toolkit::IXRInteractable*>*& dyn_m_Interactables();
    // Get instance field reference: private readonly System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractable> m_CurrentHovered
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractable*>*& dyn_m_CurrentHovered();
    // Get instance field reference: private readonly System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractable> m_CurrentSelected
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable*>*& dyn_m_CurrentSelected();
    // Get instance field reference: private readonly System.Collections.Generic.Dictionary`2<UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractable,System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.IXRTargetPriorityInteractor>> m_HighestPriorityTargetMap
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable*, ::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::IXRTargetPriorityInteractor*>*>*& dyn_m_HighestPriorityTargetMap();
    // Get instance field reference: private readonly System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.IXRInteractable> m_ValidTargets
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::IXRInteractable*>*& dyn_m_ValidTargets();
    // Get instance field reference: private readonly System.Collections.Generic.HashSet`1<UnityEngine.XR.Interaction.Toolkit.IXRInteractable> m_UnorderedValidTargets
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::HashSet_1<::UnityEngine::XR::Interaction::Toolkit::IXRInteractable*>*& dyn_m_UnorderedValidTargets();
    // Get instance field reference: private readonly System.Collections.Generic.HashSet`1<UnityEngine.XR.Interaction.Toolkit.IXRInteractor> m_InteractorsInGroup
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::HashSet_1<::UnityEngine::XR::Interaction::Toolkit::IXRInteractor*>*& dyn_m_InteractorsInGroup();
    // Get instance field reference: private readonly System.Collections.Generic.HashSet`1<UnityEngine.XR.Interaction.Toolkit.IXRInteractionGroup> m_GroupsInGroup
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::HashSet_1<::UnityEngine::XR::Interaction::Toolkit::IXRInteractionGroup*>*& dyn_m_GroupsInGroup();
    // Get instance field reference: private readonly System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable> m_DeprecatedValidTargets
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*>*& dyn_m_DeprecatedValidTargets();
    // Get instance field reference: private readonly System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.IXRInteractionGroup> m_ScratchInteractionGroups
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::IXRInteractionGroup*>*& dyn_m_ScratchInteractionGroups();
    // Get instance field reference: private readonly System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.IXRInteractor> m_ScratchInteractors
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::IXRInteractor*>*& dyn_m_ScratchInteractors();
    // Get instance field reference: private readonly System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.IXRInteractable> m_ScratchInteractables
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::IXRInteractable*>*& dyn_m_ScratchInteractables();
    // Get instance field reference: private readonly UnityEngine.XR.Interaction.Toolkit.Utilities.Pooling.LinkedPool`1<UnityEngine.XR.Interaction.Toolkit.SelectEnterEventArgs> m_SelectEnterEventArgs
    [[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::Utilities::Pooling::LinkedPool_1<::UnityEngine::XR::Interaction::Toolkit::SelectEnterEventArgs*>*& dyn_m_SelectEnterEventArgs();
    // Get instance field reference: private readonly UnityEngine.XR.Interaction.Toolkit.Utilities.Pooling.LinkedPool`1<UnityEngine.XR.Interaction.Toolkit.SelectExitEventArgs> m_SelectExitEventArgs
    [[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::Utilities::Pooling::LinkedPool_1<::UnityEngine::XR::Interaction::Toolkit::SelectExitEventArgs*>*& dyn_m_SelectExitEventArgs();
    // Get instance field reference: private readonly UnityEngine.XR.Interaction.Toolkit.Utilities.Pooling.LinkedPool`1<UnityEngine.XR.Interaction.Toolkit.HoverEnterEventArgs> m_HoverEnterEventArgs
    [[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::Utilities::Pooling::LinkedPool_1<::UnityEngine::XR::Interaction::Toolkit::HoverEnterEventArgs*>*& dyn_m_HoverEnterEventArgs();
    // Get instance field reference: private readonly UnityEngine.XR.Interaction.Toolkit.Utilities.Pooling.LinkedPool`1<UnityEngine.XR.Interaction.Toolkit.HoverExitEventArgs> m_HoverExitEventArgs
    [[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::Utilities::Pooling::LinkedPool_1<::UnityEngine::XR::Interaction::Toolkit::HoverExitEventArgs*>*& dyn_m_HoverExitEventArgs();
    // Get instance field reference: private readonly UnityEngine.XR.Interaction.Toolkit.Utilities.Pooling.LinkedPool`1<UnityEngine.XR.Interaction.Toolkit.InteractionGroupRegisteredEventArgs> m_InteractionGroupRegisteredEventArgs
    [[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::Utilities::Pooling::LinkedPool_1<::UnityEngine::XR::Interaction::Toolkit::InteractionGroupRegisteredEventArgs*>*& dyn_m_InteractionGroupRegisteredEventArgs();
    // Get instance field reference: private readonly UnityEngine.XR.Interaction.Toolkit.Utilities.Pooling.LinkedPool`1<UnityEngine.XR.Interaction.Toolkit.InteractionGroupUnregisteredEventArgs> m_InteractionGroupUnregisteredEventArgs
    [[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::Utilities::Pooling::LinkedPool_1<::UnityEngine::XR::Interaction::Toolkit::InteractionGroupUnregisteredEventArgs*>*& dyn_m_InteractionGroupUnregisteredEventArgs();
    // Get instance field reference: private readonly UnityEngine.XR.Interaction.Toolkit.Utilities.Pooling.LinkedPool`1<UnityEngine.XR.Interaction.Toolkit.InteractorRegisteredEventArgs> m_InteractorRegisteredEventArgs
    [[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::Utilities::Pooling::LinkedPool_1<::UnityEngine::XR::Interaction::Toolkit::InteractorRegisteredEventArgs*>*& dyn_m_InteractorRegisteredEventArgs();
    // Get instance field reference: private readonly UnityEngine.XR.Interaction.Toolkit.Utilities.Pooling.LinkedPool`1<UnityEngine.XR.Interaction.Toolkit.InteractorUnregisteredEventArgs> m_InteractorUnregisteredEventArgs
    [[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::Utilities::Pooling::LinkedPool_1<::UnityEngine::XR::Interaction::Toolkit::InteractorUnregisteredEventArgs*>*& dyn_m_InteractorUnregisteredEventArgs();
    // Get instance field reference: private readonly UnityEngine.XR.Interaction.Toolkit.Utilities.Pooling.LinkedPool`1<UnityEngine.XR.Interaction.Toolkit.InteractableRegisteredEventArgs> m_InteractableRegisteredEventArgs
    [[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::Utilities::Pooling::LinkedPool_1<::UnityEngine::XR::Interaction::Toolkit::InteractableRegisteredEventArgs*>*& dyn_m_InteractableRegisteredEventArgs();
    // Get instance field reference: private readonly UnityEngine.XR.Interaction.Toolkit.Utilities.Pooling.LinkedPool`1<UnityEngine.XR.Interaction.Toolkit.InteractableUnregisteredEventArgs> m_InteractableUnregisteredEventArgs
    [[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::Utilities::Pooling::LinkedPool_1<::UnityEngine::XR::Interaction::Toolkit::InteractableUnregisteredEventArgs*>*& dyn_m_InteractableUnregisteredEventArgs();
    // public System.Void add_interactionGroupRegistered(System.Action`1<UnityEngine.XR.Interaction.Toolkit.InteractionGroupRegisteredEventArgs> value)
    // Offset: 0x53FE73C
    void add_interactionGroupRegistered(::System::Action_1<::UnityEngine::XR::Interaction::Toolkit::InteractionGroupRegisteredEventArgs*>* value);
    // public System.Void remove_interactionGroupRegistered(System.Action`1<UnityEngine.XR.Interaction.Toolkit.InteractionGroupRegisteredEventArgs> value)
    // Offset: 0x53FE7EC
    void remove_interactionGroupRegistered(::System::Action_1<::UnityEngine::XR::Interaction::Toolkit::InteractionGroupRegisteredEventArgs*>* value);
    // public System.Void add_interactionGroupUnregistered(System.Action`1<UnityEngine.XR.Interaction.Toolkit.InteractionGroupUnregisteredEventArgs> value)
    // Offset: 0x53FE89C
    void add_interactionGroupUnregistered(::System::Action_1<::UnityEngine::XR::Interaction::Toolkit::InteractionGroupUnregisteredEventArgs*>* value);
    // public System.Void remove_interactionGroupUnregistered(System.Action`1<UnityEngine.XR.Interaction.Toolkit.InteractionGroupUnregisteredEventArgs> value)
    // Offset: 0x53FE94C
    void remove_interactionGroupUnregistered(::System::Action_1<::UnityEngine::XR::Interaction::Toolkit::InteractionGroupUnregisteredEventArgs*>* value);
    // public System.Void add_interactorRegistered(System.Action`1<UnityEngine.XR.Interaction.Toolkit.InteractorRegisteredEventArgs> value)
    // Offset: 0x53FE9FC
    void add_interactorRegistered(::System::Action_1<::UnityEngine::XR::Interaction::Toolkit::InteractorRegisteredEventArgs*>* value);
    // public System.Void remove_interactorRegistered(System.Action`1<UnityEngine.XR.Interaction.Toolkit.InteractorRegisteredEventArgs> value)
    // Offset: 0x53FEAAC
    void remove_interactorRegistered(::System::Action_1<::UnityEngine::XR::Interaction::Toolkit::InteractorRegisteredEventArgs*>* value);
    // public System.Void add_interactorUnregistered(System.Action`1<UnityEngine.XR.Interaction.Toolkit.InteractorUnregisteredEventArgs> value)
    // Offset: 0x53FEB5C
    void add_interactorUnregistered(::System::Action_1<::UnityEngine::XR::Interaction::Toolkit::InteractorUnregisteredEventArgs*>* value);
    // public System.Void remove_interactorUnregistered(System.Action`1<UnityEngine.XR.Interaction.Toolkit.InteractorUnregisteredEventArgs> value)
    // Offset: 0x53FEC0C
    void remove_interactorUnregistered(::System::Action_1<::UnityEngine::XR::Interaction::Toolkit::InteractorUnregisteredEventArgs*>* value);
    // public System.Void add_interactableRegistered(System.Action`1<UnityEngine.XR.Interaction.Toolkit.InteractableRegisteredEventArgs> value)
    // Offset: 0x53EE170
    void add_interactableRegistered(::System::Action_1<::UnityEngine::XR::Interaction::Toolkit::InteractableRegisteredEventArgs*>* value);
    // public System.Void remove_interactableRegistered(System.Action`1<UnityEngine.XR.Interaction.Toolkit.InteractableRegisteredEventArgs> value)
    // Offset: 0x53EE4B8
    void remove_interactableRegistered(::System::Action_1<::UnityEngine::XR::Interaction::Toolkit::InteractableRegisteredEventArgs*>* value);
    // public System.Void add_interactableUnregistered(System.Action`1<UnityEngine.XR.Interaction.Toolkit.InteractableUnregisteredEventArgs> value)
    // Offset: 0x53EE220
    void add_interactableUnregistered(::System::Action_1<::UnityEngine::XR::Interaction::Toolkit::InteractableUnregisteredEventArgs*>* value);
    // public System.Void remove_interactableUnregistered(System.Action`1<UnityEngine.XR.Interaction.Toolkit.InteractableUnregisteredEventArgs> value)
    // Offset: 0x53EE568
    void remove_interactableUnregistered(::System::Action_1<::UnityEngine::XR::Interaction::Toolkit::InteractableUnregisteredEventArgs*>* value);
    // public System.Collections.Generic.List`1<UnityEngine.Object> get_startingHoverFilters()
    // Offset: 0x53FECBC
    ::System::Collections::Generic::List_1<::UnityEngine::Object*>* get_startingHoverFilters();
    // public System.Void set_startingHoverFilters(System.Collections.Generic.List`1<UnityEngine.Object> value)
    // Offset: 0x53FECC4
    void set_startingHoverFilters(::System::Collections::Generic::List_1<::UnityEngine::Object*>* value);
    // public UnityEngine.XR.Interaction.Toolkit.IXRFilterList`1<UnityEngine.XR.Interaction.Toolkit.Filtering.IXRHoverFilter> get_hoverFilters()
    // Offset: 0x53FECCC
    ::UnityEngine::XR::Interaction::Toolkit::IXRFilterList_1<::UnityEngine::XR::Interaction::Toolkit::Filtering::IXRHoverFilter*>* get_hoverFilters();
    // public System.Collections.Generic.List`1<UnityEngine.Object> get_startingSelectFilters()
    // Offset: 0x53FECD4
    ::System::Collections::Generic::List_1<::UnityEngine::Object*>* get_startingSelectFilters();
    // public System.Void set_startingSelectFilters(System.Collections.Generic.List`1<UnityEngine.Object> value)
    // Offset: 0x53FECDC
    void set_startingSelectFilters(::System::Collections::Generic::List_1<::UnityEngine::Object*>* value);
    // public UnityEngine.XR.Interaction.Toolkit.IXRFilterList`1<UnityEngine.XR.Interaction.Toolkit.Filtering.IXRSelectFilter> get_selectFilters()
    // Offset: 0x53FECE4
    ::UnityEngine::XR::Interaction::Toolkit::IXRFilterList_1<::UnityEngine::XR::Interaction::Toolkit::Filtering::IXRSelectFilter*>* get_selectFilters();
    // static System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.XRInteractionManager> get_activeInteractionManagers()
    // Offset: 0x53FECEC
    static ::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*>* get_activeInteractionManagers();
    // protected System.Void Awake()
    // Offset: 0x53FED44
    void Awake();
    // protected System.Void OnEnable()
    // Offset: 0x53FEDC8
    void OnEnable();
    // protected System.Void OnDisable()
    // Offset: 0x53FEF30
    void OnDisable();
    // protected System.Void Update()
    // Offset: 0x53FF470
    void Update();
    // protected System.Void LateUpdate()
    // Offset: 0x540030C
    void LateUpdate();
    // protected System.Void FixedUpdate()
    // Offset: 0x5400528
    void FixedUpdate();
    // protected System.Void OnBeforeRender()
    // Offset: 0x5400744
    void OnBeforeRender();
    // protected System.Void PreprocessInteractors(UnityEngine.XR.Interaction.Toolkit.XRInteractionUpdateOrder/UpdatePhase updatePhase)
    // Offset: 0x5400960
    void PreprocessInteractors(::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::UpdatePhase updatePhase);
    // protected System.Void ProcessInteractors(UnityEngine.XR.Interaction.Toolkit.XRInteractionUpdateOrder/UpdatePhase updatePhase)
    // Offset: 0x5400DA0
    void ProcessInteractors(::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::UpdatePhase updatePhase);
    // protected System.Void ProcessInteractables(UnityEngine.XR.Interaction.Toolkit.XRInteractionUpdateOrder/UpdatePhase updatePhase)
    // Offset: 0x54011E0
    void ProcessInteractables(::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::UpdatePhase updatePhase);
    // protected System.Void ProcessInteractionStrength(UnityEngine.XR.Interaction.Toolkit.XRInteractionUpdateOrder/UpdatePhase updatePhase)
    // Offset: 0x54013E8
    void ProcessInteractionStrength(::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::UpdatePhase updatePhase);
    // public System.Boolean CanHover(UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractor interactor, UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractable interactable)
    // Offset: 0x54017C8
    bool CanHover(::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractor* interactor, ::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractable* interactable);
    // public System.Boolean IsHoverPossible(UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractor interactor, UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractable interactable)
    // Offset: 0x54018A0
    bool IsHoverPossible(::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractor* interactor, ::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractable* interactable);
    // public System.Boolean CanSelect(UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractor interactor, UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractable interactable)
    // Offset: 0x5401B6C
    bool CanSelect(::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractor* interactor, ::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable* interactable);
    // public System.Boolean IsSelectPossible(UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractor interactor, UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractable interactable)
    // Offset: 0x5401C44
    bool IsSelectPossible(::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractor* interactor, ::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable* interactable);
    // public System.Void RegisterInteractionGroup(UnityEngine.XR.Interaction.Toolkit.IXRInteractionGroup interactionGroup)
    // Offset: 0x5401DE0
    void RegisterInteractionGroup(::UnityEngine::XR::Interaction::Toolkit::IXRInteractionGroup* interactionGroup);
    // protected System.Void OnRegistered(UnityEngine.XR.Interaction.Toolkit.InteractionGroupRegisteredEventArgs args)
    // Offset: 0x54020D8
    void OnRegistered(::UnityEngine::XR::Interaction::Toolkit::InteractionGroupRegisteredEventArgs* args);
    // public System.Void UnregisterInteractionGroup(UnityEngine.XR.Interaction.Toolkit.IXRInteractionGroup interactionGroup)
    // Offset: 0x54021B0
    void UnregisterInteractionGroup(::UnityEngine::XR::Interaction::Toolkit::IXRInteractionGroup* interactionGroup);
    // protected System.Void OnUnregistered(UnityEngine.XR.Interaction.Toolkit.InteractionGroupUnregisteredEventArgs args)
    // Offset: 0x5402878
    void OnUnregistered(::UnityEngine::XR::Interaction::Toolkit::InteractionGroupUnregisteredEventArgs* args);
    // public System.Void RegisterInteractor(UnityEngine.XR.Interaction.Toolkit.IXRInteractor interactor)
    // Offset: 0x5402950
    void RegisterInteractor(::UnityEngine::XR::Interaction::Toolkit::IXRInteractor* interactor);
    // protected System.Void OnRegistered(UnityEngine.XR.Interaction.Toolkit.InteractorRegisteredEventArgs args)
    // Offset: 0x5402C48
    void OnRegistered(::UnityEngine::XR::Interaction::Toolkit::InteractorRegisteredEventArgs* args);
    // public System.Void UnregisterInteractor(UnityEngine.XR.Interaction.Toolkit.IXRInteractor interactor)
    // Offset: 0x5402D20
    void UnregisterInteractor(::UnityEngine::XR::Interaction::Toolkit::IXRInteractor* interactor);
    // protected System.Void OnUnregistered(UnityEngine.XR.Interaction.Toolkit.InteractorUnregisteredEventArgs args)
    // Offset: 0x5403068
    void OnUnregistered(::UnityEngine::XR::Interaction::Toolkit::InteractorUnregisteredEventArgs* args);
    // public System.Void RegisterInteractable(UnityEngine.XR.Interaction.Toolkit.IXRInteractable interactable)
    // Offset: 0x5403140
    void RegisterInteractable(::UnityEngine::XR::Interaction::Toolkit::IXRInteractable* interactable);
    // protected System.Void OnRegistered(UnityEngine.XR.Interaction.Toolkit.InteractableRegisteredEventArgs args)
    // Offset: 0x54035D8
    void OnRegistered(::UnityEngine::XR::Interaction::Toolkit::InteractableRegisteredEventArgs* args);
    // public System.Void UnregisterInteractable(UnityEngine.XR.Interaction.Toolkit.IXRInteractable interactable)
    // Offset: 0x54036B0
    void UnregisterInteractable(::UnityEngine::XR::Interaction::Toolkit::IXRInteractable* interactable);
    // protected System.Void OnUnregistered(UnityEngine.XR.Interaction.Toolkit.InteractableUnregisteredEventArgs args)
    // Offset: 0x5403C30
    void OnUnregistered(::UnityEngine::XR::Interaction::Toolkit::InteractableUnregisteredEventArgs* args);
    // public System.Void RegisterSnapVolume(UnityEngine.XR.Interaction.Toolkit.XRInteractableSnapVolume snapVolume)
    // Offset: 0x5403D08
    void RegisterSnapVolume(::UnityEngine::XR::Interaction::Toolkit::XRInteractableSnapVolume* snapVolume);
    // public System.Void UnregisterSnapVolume(UnityEngine.XR.Interaction.Toolkit.XRInteractableSnapVolume snapVolume)
    // Offset: 0x5403EB4
    void UnregisterSnapVolume(::UnityEngine::XR::Interaction::Toolkit::XRInteractableSnapVolume* snapVolume);
    // public System.Void GetRegisteredInteractionGroups(System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.IXRInteractionGroup> results)
    // Offset: 0x5403FD8
    void GetRegisteredInteractionGroups(::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::IXRInteractionGroup*>* results);
    // public System.Void GetRegisteredInteractors(System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.IXRInteractor> results)
    // Offset: 0x5404044
    void GetRegisteredInteractors(::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::IXRInteractor*>* results);
    // public System.Void GetRegisteredInteractables(System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.IXRInteractable> results)
    // Offset: 0x54040B0
    void GetRegisteredInteractables(::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::IXRInteractable*>* results);
    // public System.Boolean IsRegistered(UnityEngine.XR.Interaction.Toolkit.IXRInteractionGroup interactionGroup)
    // Offset: 0x53F1D94
    bool IsRegistered(::UnityEngine::XR::Interaction::Toolkit::IXRInteractionGroup* interactionGroup);
    // public System.Boolean IsRegistered(UnityEngine.XR.Interaction.Toolkit.IXRInteractor interactor)
    // Offset: 0x53F1D74
    bool IsRegistered(::UnityEngine::XR::Interaction::Toolkit::IXRInteractor* interactor);
    // public System.Boolean IsRegistered(UnityEngine.XR.Interaction.Toolkit.IXRInteractable interactable)
    // Offset: 0x5403AE0
    bool IsRegistered(::UnityEngine::XR::Interaction::Toolkit::IXRInteractable* interactable);
    // public System.Boolean TryGetInteractableForCollider(UnityEngine.Collider interactableCollider, out UnityEngine.XR.Interaction.Toolkit.IXRInteractable interactable)
    // Offset: 0x53F58C0
    bool TryGetInteractableForCollider(::UnityEngine::Collider* interactableCollider, ByRef<::UnityEngine::XR::Interaction::Toolkit::IXRInteractable*> interactable);
    // public System.Boolean TryGetInteractableForCollider(UnityEngine.Collider interactableCollider, out UnityEngine.XR.Interaction.Toolkit.IXRInteractable interactable, out UnityEngine.XR.Interaction.Toolkit.XRInteractableSnapVolume snapVolume)
    // Offset: 0x53FA6A0
    bool TryGetInteractableForCollider(::UnityEngine::Collider* interactableCollider, ByRef<::UnityEngine::XR::Interaction::Toolkit::IXRInteractable*> interactable, ByRef<::UnityEngine::XR::Interaction::Toolkit::XRInteractableSnapVolume*> snapVolume);
    // public System.Boolean IsHighestPriorityTarget(UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractable target, System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.IXRTargetPriorityInteractor> interactors)
    // Offset: 0x540411C
    bool IsHighestPriorityTarget(::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable* target, ::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::IXRTargetPriorityInteractor*>* interactors);
    // public System.Void GetValidTargets(UnityEngine.XR.Interaction.Toolkit.IXRInteractor interactor, System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.IXRInteractable> targets)
    // Offset: 0x53F28F8
    void GetValidTargets(::UnityEngine::XR::Interaction::Toolkit::IXRInteractor* interactor, ::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::IXRInteractable*>* targets);
    // static System.Int32 RemoveAllUnregistered(UnityEngine.XR.Interaction.Toolkit.XRInteractionManager manager, System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.IXRInteractable> interactables)
    // Offset: 0x53EE2D0
    static int RemoveAllUnregistered(::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager* manager, ::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::IXRInteractable*>* interactables);
    // protected System.Void ClearInteractorSelection(UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractor interactor, System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.IXRInteractable> validTargets)
    // Offset: 0x54041F4
    void ClearInteractorSelection(::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractor* interactor, ::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::IXRInteractable*>* validTargets);
    // System.Void ClearInteractorSelectionInternal(UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractor interactor, System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.IXRInteractable> validTargets)
    // Offset: 0x53F38DC
    void ClearInteractorSelectionInternal(::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractor* interactor, ::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::IXRInteractable*>* validTargets);
    // public System.Void CancelInteractorSelection(UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractor interactor)
    // Offset: 0x540460C
    void CancelInteractorSelection(::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractor* interactor);
    // private System.Void CancelInteractorSelectionInternal(UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractor interactor)
    // Offset: 0x5402F38
    void CancelInteractorSelectionInternal(::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractor* interactor);
    // public System.Void CancelInteractableSelection(UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractable interactable)
    // Offset: 0x540485C
    void CancelInteractableSelection(::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable* interactable);
    // private System.Void CancelInteractableSelectionInternal(UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractable interactable)
    // Offset: 0x5403B00
    void CancelInteractableSelectionInternal(::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable* interactable);
    // protected System.Void ClearInteractorHover(UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractor interactor, System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.IXRInteractable> validTargets)
    // Offset: 0x54049C0
    void ClearInteractorHover(::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractor* interactor, ::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::IXRInteractable*>* validTargets);
    // System.Void ClearInteractorHoverInternal(UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractor interactor, System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.IXRInteractable> validTargets, System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable> deprecatedValidTargets)
    // Offset: 0x53F3BDC
    void ClearInteractorHoverInternal(::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractor* interactor, ::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::IXRInteractable*>* validTargets, ::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*>* deprecatedValidTargets);
    // public System.Void CancelInteractorHover(UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractor interactor)
    // Offset: 0x5404D78
    void CancelInteractorHover(::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractor* interactor);
    // private System.Void CancelInteractorHoverInternal(UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractor interactor)
    // Offset: 0x5402FD0
    void CancelInteractorHoverInternal(::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractor* interactor);
    // public System.Void CancelInteractableHover(UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractable interactable)
    // Offset: 0x5404FC8
    void CancelInteractableHover(::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractable* interactable);
    // private System.Void CancelInteractableHoverInternal(UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractable interactable)
    // Offset: 0x5403B98
    void CancelInteractableHoverInternal(::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractable* interactable);
    // public System.Void SelectEnter(UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractor interactor, UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractable interactable)
    // Offset: 0x540512C
    void SelectEnter(::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractor* interactor, ::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable* interactable);
    // private System.Void SelectEnterInternal(UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractor interactor, UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractable interactable)
    // Offset: 0x5405424
    void SelectEnterInternal(::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractor* interactor, ::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable* interactable);
    // public System.Void SelectExit(UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractor interactor, UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractable interactable)
    // Offset: 0x5405510
    void SelectExit(::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractor* interactor, ::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable* interactable);
    // System.Void SelectExitInternal(UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractor interactor, UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractable interactable)
    // Offset: 0x53F3E34
    void SelectExitInternal(::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractor* interactor, ::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable* interactable);
    // public System.Void SelectCancel(UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractor interactor, UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractable interactable)
    // Offset: 0x5405780
    void SelectCancel(::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractor* interactor, ::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable* interactable);
    // private System.Void SelectCancelInternal(UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractor interactor, UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractable interactable)
    // Offset: 0x5404770
    void SelectCancelInternal(::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractor* interactor, ::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable* interactable);
    // public System.Void HoverEnter(UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractor interactor, UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractable interactable)
    // Offset: 0x5405900
    void HoverEnter(::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractor* interactor, ::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractable* interactable);
    // private System.Void HoverEnterInternal(UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractor interactor, UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractable interactable)
    // Offset: 0x5405B60
    void HoverEnterInternal(::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractor* interactor, ::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractable* interactable);
    // public System.Void HoverExit(UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractor interactor, UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractable interactable)
    // Offset: 0x5405C4C
    void HoverExit(::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractor* interactor, ::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractable* interactable);
    // System.Void HoverExitInternal(UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractor interactor, UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractable interactable)
    // Offset: 0x53F3F20
    void HoverExitInternal(::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractor* interactor, ::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractable* interactable);
    // public System.Void HoverCancel(UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractor interactor, UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractable interactable)
    // Offset: 0x5405EBC
    void HoverCancel(::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractor* interactor, ::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractable* interactable);
    // private System.Void HoverCancelInternal(UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractor interactor, UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractable interactable)
    // Offset: 0x5404EDC
    void HoverCancelInternal(::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractor* interactor, ::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractable* interactable);
    // protected System.Void SelectEnter(UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractor interactor, UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractable interactable, UnityEngine.XR.Interaction.Toolkit.SelectEnterEventArgs args)
    // Offset: 0x540603C
    void SelectEnter(::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractor* interactor, ::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable* interactable, ::UnityEngine::XR::Interaction::Toolkit::SelectEnterEventArgs* args);
    // private System.Void SelectEnterInternal(UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractor interactor, UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractable interactable, UnityEngine.XR.Interaction.Toolkit.SelectEnterEventArgs args)
    // Offset: 0x5405330
    void SelectEnterInternal(::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractor* interactor, ::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable* interactable, ::UnityEngine::XR::Interaction::Toolkit::SelectEnterEventArgs* args);
    // protected System.Void SelectExit(UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractor interactor, UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractable interactable, UnityEngine.XR.Interaction.Toolkit.SelectExitEventArgs args)
    // Offset: 0x5406344
    void SelectExit(::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractor* interactor, ::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable* interactable, ::UnityEngine::XR::Interaction::Toolkit::SelectExitEventArgs* args);
    // private System.Void SelectExitInternal(UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractor interactor, UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractable interactable, UnityEngine.XR.Interaction.Toolkit.SelectExitEventArgs args)
    // Offset: 0x540568C
    void SelectExitInternal(::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractor* interactor, ::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable* interactable, ::UnityEngine::XR::Interaction::Toolkit::SelectExitEventArgs* args);
    // protected System.Void HoverEnter(UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractor interactor, UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractable interactable, UnityEngine.XR.Interaction.Toolkit.HoverEnterEventArgs args)
    // Offset: 0x540664C
    void HoverEnter(::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractor* interactor, ::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractable* interactable, ::UnityEngine::XR::Interaction::Toolkit::HoverEnterEventArgs* args);
    // private System.Void HoverEnterInternal(UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractor interactor, UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractable interactable, UnityEngine.XR.Interaction.Toolkit.HoverEnterEventArgs args)
    // Offset: 0x5405A6C
    void HoverEnterInternal(::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractor* interactor, ::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractable* interactable, ::UnityEngine::XR::Interaction::Toolkit::HoverEnterEventArgs* args);
    // protected System.Void HoverExit(UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractor interactor, UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractable interactable, UnityEngine.XR.Interaction.Toolkit.HoverExitEventArgs args)
    // Offset: 0x5406954
    void HoverExit(::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractor* interactor, ::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractable* interactable, ::UnityEngine::XR::Interaction::Toolkit::HoverExitEventArgs* args);
    // private System.Void HoverExitInternal(UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractor interactor, UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractable interactable, UnityEngine.XR.Interaction.Toolkit.HoverExitEventArgs args)
    // Offset: 0x5405DC8
    void HoverExitInternal(::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractor* interactor, ::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractable* interactable, ::UnityEngine::XR::Interaction::Toolkit::HoverExitEventArgs* args);
    // protected System.Void InteractorSelectValidTargets(UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractor interactor, System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.IXRInteractable> validTargets)
    // Offset: 0x5406C5C
    void InteractorSelectValidTargets(::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractor* interactor, ::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::IXRInteractable*>* validTargets);
    // System.Void InteractorSelectValidTargetsInternal(UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractor interactor, System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.IXRInteractable> validTargets, System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable> deprecatedValidTargets)
    // Offset: 0x53F3CA4
    void InteractorSelectValidTargetsInternal(::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractor* interactor, ::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::IXRInteractable*>* validTargets, ::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*>* deprecatedValidTargets);
    // protected System.Void InteractorHoverValidTargets(UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractor interactor, System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.IXRInteractable> validTargets)
    // Offset: 0x5407214
    void InteractorHoverValidTargets(::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractor* interactor, ::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::IXRInteractable*>* validTargets);
    // System.Void InteractorHoverValidTargetsInternal(UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractor interactor, System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.IXRInteractable> validTargets, System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable> deprecatedValidTargets)
    // Offset: 0x53F3D6C
    void InteractorHoverValidTargetsInternal(::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractor* interactor, ::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::IXRInteractable*>* validTargets, ::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*>* deprecatedValidTargets);
    // protected System.Boolean ResolveExistingSelect(UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractor interactor, UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractable interactable)
    // Offset: 0x540745C
    bool ResolveExistingSelect(::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractor* interactor, ::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable* interactable);
    // static protected System.Boolean HasInteractionLayerOverlap(UnityEngine.XR.Interaction.Toolkit.IXRInteractor interactor, UnityEngine.XR.Interaction.Toolkit.IXRInteractable interactable)
    // Offset: 0x5401A30
    static bool HasInteractionLayerOverlap(::UnityEngine::XR::Interaction::Toolkit::IXRInteractor* interactor, ::UnityEngine::XR::Interaction::Toolkit::IXRInteractable* interactable);
    // protected System.Boolean ProcessHoverFilters(UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractor interactor, UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractable interactable)
    // Offset: 0x5401B60
    bool ProcessHoverFilters(::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractor* interactor, ::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractable* interactable);
    // protected System.Boolean ProcessSelectFilters(UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractor interactor, UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractable interactable)
    // Offset: 0x5401DD4
    bool ProcessSelectFilters(::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractor* interactor, ::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable* interactable);
    // private System.Void ExitInteractableSelection(UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractable interactable)
    // Offset: 0x5407604
    void ExitInteractableSelection(::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable* interactable);
    // private System.Void ClearPriorityForSelectionMap()
    // Offset: 0x53FF058
    void ClearPriorityForSelectionMap();
    // private System.Void FlushRegistration()
    // Offset: 0x54002C0
    void FlushRegistration();
    // static System.Void GetOfType(System.Collections.Generic.List`1<TSource> source, System.Collections.Generic.List`1<TDestination> destination)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class TSource, class TDestination>
    static void GetOfType(::System::Collections::Generic::List_1<TSource>* source, ::System::Collections::Generic::List_1<TDestination>* destination) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::GetOfType");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR.Interaction.Toolkit", "XRInteractionManager", "GetOfType", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TSource>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TDestination>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(destination)})));
      static auto* ___generic__method = THROW_UNLESS((::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TSource>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TDestination>::get()})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___generic__method, source, destination);
    }
    // public System.Void RegisterInteractor(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor interactor)
    // Offset: 0x5407768
    void RegisterInteractor(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor);
    // public System.Void UnregisterInteractor(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor interactor)
    // Offset: 0x5407778
    void UnregisterInteractor(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor);
    // public System.Void RegisterInteractable(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable interactable)
    // Offset: 0x5407788
    void RegisterInteractable(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* interactable);
    // public System.Void UnregisterInteractable(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable interactable)
    // Offset: 0x5407798
    void UnregisterInteractable(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* interactable);
    // public System.Void GetRegisteredInteractors(System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor> results)
    // Offset: 0x54077A8
    void GetRegisteredInteractors(::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*>* results);
    // public System.Void GetRegisteredInteractables(System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable> results)
    // Offset: 0x5407834
    void GetRegisteredInteractables(::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*>* results);
    // public System.Boolean IsRegistered(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor interactor)
    // Offset: 0x54078C0
    bool IsRegistered(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor);
    // public System.Boolean IsRegistered(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable interactable)
    // Offset: 0x54078E0
    bool IsRegistered(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* interactable);
    // public UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable TryGetInteractableForCollider(UnityEngine.Collider interactableCollider)
    // Offset: 0x5407900
    ::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* TryGetInteractableForCollider(::UnityEngine::Collider* interactableCollider);
    // public UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable GetInteractableForCollider(UnityEngine.Collider interactableCollider)
    // Offset: 0x5407904
    ::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* GetInteractableForCollider(::UnityEngine::Collider* interactableCollider);
    // public System.Void GetColliderToInteractableMap(ref System.Collections.Generic.Dictionary`2<UnityEngine.Collider,UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable> map)
    // Offset: 0x54079AC
    void GetColliderToInteractableMap(ByRef<::System::Collections::Generic::Dictionary_2<::UnityEngine::Collider*, ::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*>*> map);
    // public System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable> GetValidTargets(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor interactor, System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable> validTargets)
    // Offset: 0x5407B94
    ::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*>* GetValidTargets(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor, ::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*>* validTargets);
    // public System.Void ForceSelect(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor interactor, UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable interactable)
    // Offset: 0x5407C30
    void ForceSelect(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor, ::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* interactable);
    // public System.Void ClearInteractorSelection(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor interactor)
    // Offset: 0x5407C40
    void ClearInteractorSelection(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor);
    // public System.Void CancelInteractorSelection(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor interactor)
    // Offset: 0x5407C44
    void CancelInteractorSelection(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor);
    // public System.Void CancelInteractableSelection(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable interactable)
    // Offset: 0x5407C54
    void CancelInteractableSelection(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* interactable);
    // public System.Void ClearInteractorHover(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor interactor, System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable> validTargets)
    // Offset: 0x5407C64
    void ClearInteractorHover(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor, ::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*>* validTargets);
    // public System.Void CancelInteractorHover(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor interactor)
    // Offset: 0x5407C68
    void CancelInteractorHover(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor);
    // public System.Void CancelInteractableHover(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable interactable)
    // Offset: 0x5407C78
    void CancelInteractableHover(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* interactable);
    // public System.Void SelectEnter(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor interactor, UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable interactable)
    // Offset: 0x5407C88
    void SelectEnter(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor, ::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* interactable);
    // public System.Void SelectExit(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor interactor, UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable interactable)
    // Offset: 0x5407C98
    void SelectExit(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor, ::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* interactable);
    // public System.Void SelectCancel(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor interactor, UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable interactable)
    // Offset: 0x5407CA8
    void SelectCancel(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor, ::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* interactable);
    // public System.Void HoverEnter(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor interactor, UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable interactable)
    // Offset: 0x5407CB8
    void HoverEnter(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor, ::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* interactable);
    // public System.Void HoverExit(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor interactor, UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable interactable)
    // Offset: 0x5407CC8
    void HoverExit(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor, ::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* interactable);
    // public System.Void HoverCancel(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor interactor, UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable interactable)
    // Offset: 0x5407CD8
    void HoverCancel(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor, ::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* interactable);
    // protected System.Void SelectEnter(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor interactor, UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable interactable, UnityEngine.XR.Interaction.Toolkit.SelectEnterEventArgs args)
    // Offset: 0x5407CE8
    void SelectEnter(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor, ::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* interactable, ::UnityEngine::XR::Interaction::Toolkit::SelectEnterEventArgs* args);
    // protected System.Void SelectExit(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor interactor, UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable interactable, UnityEngine.XR.Interaction.Toolkit.SelectExitEventArgs args)
    // Offset: 0x5407CF8
    void SelectExit(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor, ::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* interactable, ::UnityEngine::XR::Interaction::Toolkit::SelectExitEventArgs* args);
    // protected System.Void HoverEnter(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor interactor, UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable interactable, UnityEngine.XR.Interaction.Toolkit.HoverEnterEventArgs args)
    // Offset: 0x5407D08
    void HoverEnter(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor, ::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* interactable, ::UnityEngine::XR::Interaction::Toolkit::HoverEnterEventArgs* args);
    // protected System.Void HoverExit(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor interactor, UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable interactable, UnityEngine.XR.Interaction.Toolkit.HoverExitEventArgs args)
    // Offset: 0x5407D18
    void HoverExit(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor, ::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* interactable, ::UnityEngine::XR::Interaction::Toolkit::HoverExitEventArgs* args);
    // protected System.Void InteractorSelectValidTargets(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor interactor, System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable> validTargets)
    // Offset: 0x5407D28
    void InteractorSelectValidTargets(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor, ::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*>* validTargets);
    // protected System.Void InteractorHoverValidTargets(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor interactor, System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable> validTargets)
    // Offset: 0x5407D2C
    void InteractorHoverValidTargets(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor, ::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*>* validTargets);
    // public System.Void .ctor()
    // Offset: 0x5407D30
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static XRInteractionManager* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<XRInteractionManager*, creationType>()));
    }
    // static private System.Void .cctor()
    // Offset: 0x5408D1C
    static void _cctor();
  }; // UnityEngine.XR.Interaction.Toolkit.XRInteractionManager
  #pragma pack(pop)
  static check_size<sizeof(XRInteractionManager), 312 + sizeof(::UnityEngine::XR::Interaction::Toolkit::Utilities::Pooling::LinkedPool_1<::UnityEngine::XR::Interaction::Toolkit::InteractableUnregisteredEventArgs*>*)> __UnityEngine_XR_Interaction_Toolkit_XRInteractionManagerSizeCheck;
  static_assert(sizeof(XRInteractionManager) == 0x140);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::add_interactionGroupRegistered
// Il2CppName: add_interactionGroupRegistered
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::*)(::System::Action_1<::UnityEngine::XR::Interaction::Toolkit::InteractionGroupRegisteredEventArgs*>*)>(&UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::add_interactionGroupRegistered)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "InteractionGroupRegisteredEventArgs")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*), "add_interactionGroupRegistered", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::remove_interactionGroupRegistered
// Il2CppName: remove_interactionGroupRegistered
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::*)(::System::Action_1<::UnityEngine::XR::Interaction::Toolkit::InteractionGroupRegisteredEventArgs*>*)>(&UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::remove_interactionGroupRegistered)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "InteractionGroupRegisteredEventArgs")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*), "remove_interactionGroupRegistered", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::add_interactionGroupUnregistered
// Il2CppName: add_interactionGroupUnregistered
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::*)(::System::Action_1<::UnityEngine::XR::Interaction::Toolkit::InteractionGroupUnregisteredEventArgs*>*)>(&UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::add_interactionGroupUnregistered)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "InteractionGroupUnregisteredEventArgs")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*), "add_interactionGroupUnregistered", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::remove_interactionGroupUnregistered
// Il2CppName: remove_interactionGroupUnregistered
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::*)(::System::Action_1<::UnityEngine::XR::Interaction::Toolkit::InteractionGroupUnregisteredEventArgs*>*)>(&UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::remove_interactionGroupUnregistered)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "InteractionGroupUnregisteredEventArgs")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*), "remove_interactionGroupUnregistered", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::add_interactorRegistered
// Il2CppName: add_interactorRegistered
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::*)(::System::Action_1<::UnityEngine::XR::Interaction::Toolkit::InteractorRegisteredEventArgs*>*)>(&UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::add_interactorRegistered)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "InteractorRegisteredEventArgs")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*), "add_interactorRegistered", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::remove_interactorRegistered
// Il2CppName: remove_interactorRegistered
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::*)(::System::Action_1<::UnityEngine::XR::Interaction::Toolkit::InteractorRegisteredEventArgs*>*)>(&UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::remove_interactorRegistered)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "InteractorRegisteredEventArgs")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*), "remove_interactorRegistered", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::add_interactorUnregistered
// Il2CppName: add_interactorUnregistered
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::*)(::System::Action_1<::UnityEngine::XR::Interaction::Toolkit::InteractorUnregisteredEventArgs*>*)>(&UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::add_interactorUnregistered)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "InteractorUnregisteredEventArgs")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*), "add_interactorUnregistered", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::remove_interactorUnregistered
// Il2CppName: remove_interactorUnregistered
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::*)(::System::Action_1<::UnityEngine::XR::Interaction::Toolkit::InteractorUnregisteredEventArgs*>*)>(&UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::remove_interactorUnregistered)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "InteractorUnregisteredEventArgs")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*), "remove_interactorUnregistered", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::add_interactableRegistered
// Il2CppName: add_interactableRegistered
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::*)(::System::Action_1<::UnityEngine::XR::Interaction::Toolkit::InteractableRegisteredEventArgs*>*)>(&UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::add_interactableRegistered)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "InteractableRegisteredEventArgs")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*), "add_interactableRegistered", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::remove_interactableRegistered
// Il2CppName: remove_interactableRegistered
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::*)(::System::Action_1<::UnityEngine::XR::Interaction::Toolkit::InteractableRegisteredEventArgs*>*)>(&UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::remove_interactableRegistered)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "InteractableRegisteredEventArgs")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*), "remove_interactableRegistered", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::add_interactableUnregistered
// Il2CppName: add_interactableUnregistered
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::*)(::System::Action_1<::UnityEngine::XR::Interaction::Toolkit::InteractableUnregisteredEventArgs*>*)>(&UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::add_interactableUnregistered)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "InteractableUnregisteredEventArgs")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*), "add_interactableUnregistered", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::remove_interactableUnregistered
// Il2CppName: remove_interactableUnregistered
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::*)(::System::Action_1<::UnityEngine::XR::Interaction::Toolkit::InteractableUnregisteredEventArgs*>*)>(&UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::remove_interactableUnregistered)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "InteractableUnregisteredEventArgs")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*), "remove_interactableUnregistered", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::get_startingHoverFilters
// Il2CppName: get_startingHoverFilters
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::List_1<::UnityEngine::Object*>* (UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::get_startingHoverFilters)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*), "get_startingHoverFilters", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::set_startingHoverFilters
// Il2CppName: set_startingHoverFilters
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::*)(::System::Collections::Generic::List_1<::UnityEngine::Object*>*)>(&UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::set_startingHoverFilters)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine", "Object")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*), "set_startingHoverFilters", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::get_hoverFilters
// Il2CppName: get_hoverFilters
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::XR::Interaction::Toolkit::IXRFilterList_1<::UnityEngine::XR::Interaction::Toolkit::Filtering::IXRHoverFilter*>* (UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::get_hoverFilters)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*), "get_hoverFilters", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::get_startingSelectFilters
// Il2CppName: get_startingSelectFilters
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::List_1<::UnityEngine::Object*>* (UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::get_startingSelectFilters)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*), "get_startingSelectFilters", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::set_startingSelectFilters
// Il2CppName: set_startingSelectFilters
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::*)(::System::Collections::Generic::List_1<::UnityEngine::Object*>*)>(&UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::set_startingSelectFilters)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine", "Object")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*), "set_startingSelectFilters", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::get_selectFilters
// Il2CppName: get_selectFilters
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::XR::Interaction::Toolkit::IXRFilterList_1<::UnityEngine::XR::Interaction::Toolkit::Filtering::IXRSelectFilter*>* (UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::get_selectFilters)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*), "get_selectFilters", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::get_activeInteractionManagers
// Il2CppName: get_activeInteractionManagers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*>* (*)()>(&UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::get_activeInteractionManagers)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*), "get_activeInteractionManagers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::Awake
// Il2CppName: Awake
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::Awake)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*), "Awake", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::OnEnable
// Il2CppName: OnEnable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::OnEnable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*), "OnEnable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::OnDisable
// Il2CppName: OnDisable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::OnDisable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*), "OnDisable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::Update
// Il2CppName: Update
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::Update)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*), "Update", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::LateUpdate
// Il2CppName: LateUpdate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::LateUpdate)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*), "LateUpdate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::FixedUpdate
// Il2CppName: FixedUpdate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::FixedUpdate)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*), "FixedUpdate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::OnBeforeRender
// Il2CppName: OnBeforeRender
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::OnBeforeRender)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*), "OnBeforeRender", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::PreprocessInteractors
// Il2CppName: PreprocessInteractors
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::*)(::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::UpdatePhase)>(&UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::PreprocessInteractors)> {
  static const MethodInfo* get() {
    static auto* updatePhase = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "XRInteractionUpdateOrder/UpdatePhase")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*), "PreprocessInteractors", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{updatePhase});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::ProcessInteractors
// Il2CppName: ProcessInteractors
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::*)(::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::UpdatePhase)>(&UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::ProcessInteractors)> {
  static const MethodInfo* get() {
    static auto* updatePhase = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "XRInteractionUpdateOrder/UpdatePhase")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*), "ProcessInteractors", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{updatePhase});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::ProcessInteractables
// Il2CppName: ProcessInteractables
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::*)(::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::UpdatePhase)>(&UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::ProcessInteractables)> {
  static const MethodInfo* get() {
    static auto* updatePhase = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "XRInteractionUpdateOrder/UpdatePhase")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*), "ProcessInteractables", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{updatePhase});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::ProcessInteractionStrength
// Il2CppName: ProcessInteractionStrength
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::*)(::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::UpdatePhase)>(&UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::ProcessInteractionStrength)> {
  static const MethodInfo* get() {
    static auto* updatePhase = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "XRInteractionUpdateOrder/UpdatePhase")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*), "ProcessInteractionStrength", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{updatePhase});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::CanHover
// Il2CppName: CanHover
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::*)(::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractor*, ::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractable*)>(&UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::CanHover)> {
  static const MethodInfo* get() {
    static auto* interactor = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "IXRHoverInteractor")->byval_arg;
    static auto* interactable = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "IXRHoverInteractable")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*), "CanHover", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactor, interactable});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::IsHoverPossible
// Il2CppName: IsHoverPossible
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::*)(::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractor*, ::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractable*)>(&UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::IsHoverPossible)> {
  static const MethodInfo* get() {
    static auto* interactor = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "IXRHoverInteractor")->byval_arg;
    static auto* interactable = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "IXRHoverInteractable")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*), "IsHoverPossible", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactor, interactable});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::CanSelect
// Il2CppName: CanSelect
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::*)(::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractor*, ::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable*)>(&UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::CanSelect)> {
  static const MethodInfo* get() {
    static auto* interactor = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "IXRSelectInteractor")->byval_arg;
    static auto* interactable = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "IXRSelectInteractable")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*), "CanSelect", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactor, interactable});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::IsSelectPossible
// Il2CppName: IsSelectPossible
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::*)(::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractor*, ::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable*)>(&UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::IsSelectPossible)> {
  static const MethodInfo* get() {
    static auto* interactor = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "IXRSelectInteractor")->byval_arg;
    static auto* interactable = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "IXRSelectInteractable")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*), "IsSelectPossible", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactor, interactable});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::RegisterInteractionGroup
// Il2CppName: RegisterInteractionGroup
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::*)(::UnityEngine::XR::Interaction::Toolkit::IXRInteractionGroup*)>(&UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::RegisterInteractionGroup)> {
  static const MethodInfo* get() {
    static auto* interactionGroup = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "IXRInteractionGroup")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*), "RegisterInteractionGroup", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactionGroup});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::OnRegistered
// Il2CppName: OnRegistered
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::*)(::UnityEngine::XR::Interaction::Toolkit::InteractionGroupRegisteredEventArgs*)>(&UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::OnRegistered)> {
  static const MethodInfo* get() {
    static auto* args = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "InteractionGroupRegisteredEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*), "OnRegistered", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{args});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::UnregisterInteractionGroup
// Il2CppName: UnregisterInteractionGroup
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::*)(::UnityEngine::XR::Interaction::Toolkit::IXRInteractionGroup*)>(&UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::UnregisterInteractionGroup)> {
  static const MethodInfo* get() {
    static auto* interactionGroup = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "IXRInteractionGroup")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*), "UnregisterInteractionGroup", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactionGroup});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::OnUnregistered
// Il2CppName: OnUnregistered
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::*)(::UnityEngine::XR::Interaction::Toolkit::InteractionGroupUnregisteredEventArgs*)>(&UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::OnUnregistered)> {
  static const MethodInfo* get() {
    static auto* args = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "InteractionGroupUnregisteredEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*), "OnUnregistered", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{args});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::RegisterInteractor
// Il2CppName: RegisterInteractor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::*)(::UnityEngine::XR::Interaction::Toolkit::IXRInteractor*)>(&UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::RegisterInteractor)> {
  static const MethodInfo* get() {
    static auto* interactor = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "IXRInteractor")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*), "RegisterInteractor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactor});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::OnRegistered
// Il2CppName: OnRegistered
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::*)(::UnityEngine::XR::Interaction::Toolkit::InteractorRegisteredEventArgs*)>(&UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::OnRegistered)> {
  static const MethodInfo* get() {
    static auto* args = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "InteractorRegisteredEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*), "OnRegistered", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{args});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::UnregisterInteractor
// Il2CppName: UnregisterInteractor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::*)(::UnityEngine::XR::Interaction::Toolkit::IXRInteractor*)>(&UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::UnregisterInteractor)> {
  static const MethodInfo* get() {
    static auto* interactor = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "IXRInteractor")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*), "UnregisterInteractor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactor});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::OnUnregistered
// Il2CppName: OnUnregistered
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::*)(::UnityEngine::XR::Interaction::Toolkit::InteractorUnregisteredEventArgs*)>(&UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::OnUnregistered)> {
  static const MethodInfo* get() {
    static auto* args = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "InteractorUnregisteredEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*), "OnUnregistered", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{args});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::RegisterInteractable
// Il2CppName: RegisterInteractable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::*)(::UnityEngine::XR::Interaction::Toolkit::IXRInteractable*)>(&UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::RegisterInteractable)> {
  static const MethodInfo* get() {
    static auto* interactable = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "IXRInteractable")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*), "RegisterInteractable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactable});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::OnRegistered
// Il2CppName: OnRegistered
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::*)(::UnityEngine::XR::Interaction::Toolkit::InteractableRegisteredEventArgs*)>(&UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::OnRegistered)> {
  static const MethodInfo* get() {
    static auto* args = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "InteractableRegisteredEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*), "OnRegistered", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{args});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::UnregisterInteractable
// Il2CppName: UnregisterInteractable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::*)(::UnityEngine::XR::Interaction::Toolkit::IXRInteractable*)>(&UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::UnregisterInteractable)> {
  static const MethodInfo* get() {
    static auto* interactable = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "IXRInteractable")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*), "UnregisterInteractable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactable});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::OnUnregistered
// Il2CppName: OnUnregistered
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::*)(::UnityEngine::XR::Interaction::Toolkit::InteractableUnregisteredEventArgs*)>(&UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::OnUnregistered)> {
  static const MethodInfo* get() {
    static auto* args = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "InteractableUnregisteredEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*), "OnUnregistered", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{args});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::RegisterSnapVolume
// Il2CppName: RegisterSnapVolume
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::*)(::UnityEngine::XR::Interaction::Toolkit::XRInteractableSnapVolume*)>(&UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::RegisterSnapVolume)> {
  static const MethodInfo* get() {
    static auto* snapVolume = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "XRInteractableSnapVolume")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*), "RegisterSnapVolume", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{snapVolume});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::UnregisterSnapVolume
// Il2CppName: UnregisterSnapVolume
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::*)(::UnityEngine::XR::Interaction::Toolkit::XRInteractableSnapVolume*)>(&UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::UnregisterSnapVolume)> {
  static const MethodInfo* get() {
    static auto* snapVolume = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "XRInteractableSnapVolume")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*), "UnregisterSnapVolume", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{snapVolume});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::GetRegisteredInteractionGroups
// Il2CppName: GetRegisteredInteractionGroups
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::*)(::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::IXRInteractionGroup*>*)>(&UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::GetRegisteredInteractionGroups)> {
  static const MethodInfo* get() {
    static auto* results = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "IXRInteractionGroup")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*), "GetRegisteredInteractionGroups", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{results});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::GetRegisteredInteractors
// Il2CppName: GetRegisteredInteractors
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::*)(::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::IXRInteractor*>*)>(&UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::GetRegisteredInteractors)> {
  static const MethodInfo* get() {
    static auto* results = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "IXRInteractor")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*), "GetRegisteredInteractors", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{results});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::GetRegisteredInteractables
// Il2CppName: GetRegisteredInteractables
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::*)(::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::IXRInteractable*>*)>(&UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::GetRegisteredInteractables)> {
  static const MethodInfo* get() {
    static auto* results = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "IXRInteractable")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*), "GetRegisteredInteractables", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{results});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::IsRegistered
// Il2CppName: IsRegistered
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::*)(::UnityEngine::XR::Interaction::Toolkit::IXRInteractionGroup*)>(&UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::IsRegistered)> {
  static const MethodInfo* get() {
    static auto* interactionGroup = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "IXRInteractionGroup")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*), "IsRegistered", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactionGroup});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::IsRegistered
// Il2CppName: IsRegistered
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::*)(::UnityEngine::XR::Interaction::Toolkit::IXRInteractor*)>(&UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::IsRegistered)> {
  static const MethodInfo* get() {
    static auto* interactor = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "IXRInteractor")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*), "IsRegistered", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactor});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::IsRegistered
// Il2CppName: IsRegistered
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::*)(::UnityEngine::XR::Interaction::Toolkit::IXRInteractable*)>(&UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::IsRegistered)> {
  static const MethodInfo* get() {
    static auto* interactable = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "IXRInteractable")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*), "IsRegistered", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactable});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::TryGetInteractableForCollider
// Il2CppName: TryGetInteractableForCollider
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::*)(::UnityEngine::Collider*, ByRef<::UnityEngine::XR::Interaction::Toolkit::IXRInteractable*>)>(&UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::TryGetInteractableForCollider)> {
  static const MethodInfo* get() {
    static auto* interactableCollider = &::il2cpp_utils::GetClassFromName("UnityEngine", "Collider")->byval_arg;
    static auto* interactable = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "IXRInteractable")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*), "TryGetInteractableForCollider", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactableCollider, interactable});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::TryGetInteractableForCollider
// Il2CppName: TryGetInteractableForCollider
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::*)(::UnityEngine::Collider*, ByRef<::UnityEngine::XR::Interaction::Toolkit::IXRInteractable*>, ByRef<::UnityEngine::XR::Interaction::Toolkit::XRInteractableSnapVolume*>)>(&UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::TryGetInteractableForCollider)> {
  static const MethodInfo* get() {
    static auto* interactableCollider = &::il2cpp_utils::GetClassFromName("UnityEngine", "Collider")->byval_arg;
    static auto* interactable = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "IXRInteractable")->this_arg;
    static auto* snapVolume = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "XRInteractableSnapVolume")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*), "TryGetInteractableForCollider", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactableCollider, interactable, snapVolume});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::IsHighestPriorityTarget
// Il2CppName: IsHighestPriorityTarget
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::*)(::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable*, ::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::IXRTargetPriorityInteractor*>*)>(&UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::IsHighestPriorityTarget)> {
  static const MethodInfo* get() {
    static auto* target = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "IXRSelectInteractable")->byval_arg;
    static auto* interactors = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "IXRTargetPriorityInteractor")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*), "IsHighestPriorityTarget", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{target, interactors});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::GetValidTargets
// Il2CppName: GetValidTargets
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::*)(::UnityEngine::XR::Interaction::Toolkit::IXRInteractor*, ::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::IXRInteractable*>*)>(&UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::GetValidTargets)> {
  static const MethodInfo* get() {
    static auto* interactor = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "IXRInteractor")->byval_arg;
    static auto* targets = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "IXRInteractable")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*), "GetValidTargets", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactor, targets});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::RemoveAllUnregistered
// Il2CppName: RemoveAllUnregistered
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*, ::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::IXRInteractable*>*)>(&UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::RemoveAllUnregistered)> {
  static const MethodInfo* get() {
    static auto* manager = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "XRInteractionManager")->byval_arg;
    static auto* interactables = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "IXRInteractable")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*), "RemoveAllUnregistered", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{manager, interactables});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::ClearInteractorSelection
// Il2CppName: ClearInteractorSelection
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::*)(::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractor*, ::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::IXRInteractable*>*)>(&UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::ClearInteractorSelection)> {
  static const MethodInfo* get() {
    static auto* interactor = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "IXRSelectInteractor")->byval_arg;
    static auto* validTargets = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "IXRInteractable")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*), "ClearInteractorSelection", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactor, validTargets});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::ClearInteractorSelectionInternal
// Il2CppName: ClearInteractorSelectionInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::*)(::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractor*, ::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::IXRInteractable*>*)>(&UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::ClearInteractorSelectionInternal)> {
  static const MethodInfo* get() {
    static auto* interactor = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "IXRSelectInteractor")->byval_arg;
    static auto* validTargets = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "IXRInteractable")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*), "ClearInteractorSelectionInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactor, validTargets});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::CancelInteractorSelection
// Il2CppName: CancelInteractorSelection
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::*)(::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractor*)>(&UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::CancelInteractorSelection)> {
  static const MethodInfo* get() {
    static auto* interactor = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "IXRSelectInteractor")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*), "CancelInteractorSelection", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactor});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::CancelInteractorSelectionInternal
// Il2CppName: CancelInteractorSelectionInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::*)(::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractor*)>(&UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::CancelInteractorSelectionInternal)> {
  static const MethodInfo* get() {
    static auto* interactor = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "IXRSelectInteractor")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*), "CancelInteractorSelectionInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactor});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::CancelInteractableSelection
// Il2CppName: CancelInteractableSelection
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::*)(::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable*)>(&UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::CancelInteractableSelection)> {
  static const MethodInfo* get() {
    static auto* interactable = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "IXRSelectInteractable")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*), "CancelInteractableSelection", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactable});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::CancelInteractableSelectionInternal
// Il2CppName: CancelInteractableSelectionInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::*)(::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable*)>(&UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::CancelInteractableSelectionInternal)> {
  static const MethodInfo* get() {
    static auto* interactable = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "IXRSelectInteractable")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*), "CancelInteractableSelectionInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactable});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::ClearInteractorHover
// Il2CppName: ClearInteractorHover
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::*)(::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractor*, ::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::IXRInteractable*>*)>(&UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::ClearInteractorHover)> {
  static const MethodInfo* get() {
    static auto* interactor = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "IXRHoverInteractor")->byval_arg;
    static auto* validTargets = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "IXRInteractable")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*), "ClearInteractorHover", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactor, validTargets});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::ClearInteractorHoverInternal
// Il2CppName: ClearInteractorHoverInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::*)(::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractor*, ::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::IXRInteractable*>*, ::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*>*)>(&UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::ClearInteractorHoverInternal)> {
  static const MethodInfo* get() {
    static auto* interactor = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "IXRHoverInteractor")->byval_arg;
    static auto* validTargets = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "IXRInteractable")})->byval_arg;
    static auto* deprecatedValidTargets = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "XRBaseInteractable")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*), "ClearInteractorHoverInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactor, validTargets, deprecatedValidTargets});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::CancelInteractorHover
// Il2CppName: CancelInteractorHover
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::*)(::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractor*)>(&UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::CancelInteractorHover)> {
  static const MethodInfo* get() {
    static auto* interactor = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "IXRHoverInteractor")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*), "CancelInteractorHover", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactor});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::CancelInteractorHoverInternal
// Il2CppName: CancelInteractorHoverInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::*)(::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractor*)>(&UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::CancelInteractorHoverInternal)> {
  static const MethodInfo* get() {
    static auto* interactor = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "IXRHoverInteractor")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*), "CancelInteractorHoverInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactor});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::CancelInteractableHover
// Il2CppName: CancelInteractableHover
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::*)(::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractable*)>(&UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::CancelInteractableHover)> {
  static const MethodInfo* get() {
    static auto* interactable = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "IXRHoverInteractable")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*), "CancelInteractableHover", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactable});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::CancelInteractableHoverInternal
// Il2CppName: CancelInteractableHoverInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::*)(::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractable*)>(&UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::CancelInteractableHoverInternal)> {
  static const MethodInfo* get() {
    static auto* interactable = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "IXRHoverInteractable")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*), "CancelInteractableHoverInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactable});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::SelectEnter
// Il2CppName: SelectEnter
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::*)(::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractor*, ::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable*)>(&UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::SelectEnter)> {
  static const MethodInfo* get() {
    static auto* interactor = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "IXRSelectInteractor")->byval_arg;
    static auto* interactable = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "IXRSelectInteractable")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*), "SelectEnter", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactor, interactable});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::SelectEnterInternal
// Il2CppName: SelectEnterInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::*)(::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractor*, ::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable*)>(&UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::SelectEnterInternal)> {
  static const MethodInfo* get() {
    static auto* interactor = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "IXRSelectInteractor")->byval_arg;
    static auto* interactable = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "IXRSelectInteractable")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*), "SelectEnterInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactor, interactable});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::SelectExit
// Il2CppName: SelectExit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::*)(::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractor*, ::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable*)>(&UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::SelectExit)> {
  static const MethodInfo* get() {
    static auto* interactor = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "IXRSelectInteractor")->byval_arg;
    static auto* interactable = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "IXRSelectInteractable")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*), "SelectExit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactor, interactable});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::SelectExitInternal
// Il2CppName: SelectExitInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::*)(::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractor*, ::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable*)>(&UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::SelectExitInternal)> {
  static const MethodInfo* get() {
    static auto* interactor = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "IXRSelectInteractor")->byval_arg;
    static auto* interactable = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "IXRSelectInteractable")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*), "SelectExitInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactor, interactable});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::SelectCancel
// Il2CppName: SelectCancel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::*)(::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractor*, ::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable*)>(&UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::SelectCancel)> {
  static const MethodInfo* get() {
    static auto* interactor = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "IXRSelectInteractor")->byval_arg;
    static auto* interactable = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "IXRSelectInteractable")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*), "SelectCancel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactor, interactable});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::SelectCancelInternal
// Il2CppName: SelectCancelInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::*)(::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractor*, ::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable*)>(&UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::SelectCancelInternal)> {
  static const MethodInfo* get() {
    static auto* interactor = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "IXRSelectInteractor")->byval_arg;
    static auto* interactable = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "IXRSelectInteractable")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*), "SelectCancelInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactor, interactable});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::HoverEnter
// Il2CppName: HoverEnter
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::*)(::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractor*, ::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractable*)>(&UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::HoverEnter)> {
  static const MethodInfo* get() {
    static auto* interactor = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "IXRHoverInteractor")->byval_arg;
    static auto* interactable = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "IXRHoverInteractable")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*), "HoverEnter", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactor, interactable});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::HoverEnterInternal
// Il2CppName: HoverEnterInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::*)(::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractor*, ::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractable*)>(&UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::HoverEnterInternal)> {
  static const MethodInfo* get() {
    static auto* interactor = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "IXRHoverInteractor")->byval_arg;
    static auto* interactable = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "IXRHoverInteractable")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*), "HoverEnterInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactor, interactable});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::HoverExit
// Il2CppName: HoverExit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::*)(::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractor*, ::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractable*)>(&UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::HoverExit)> {
  static const MethodInfo* get() {
    static auto* interactor = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "IXRHoverInteractor")->byval_arg;
    static auto* interactable = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "IXRHoverInteractable")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*), "HoverExit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactor, interactable});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::HoverExitInternal
// Il2CppName: HoverExitInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::*)(::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractor*, ::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractable*)>(&UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::HoverExitInternal)> {
  static const MethodInfo* get() {
    static auto* interactor = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "IXRHoverInteractor")->byval_arg;
    static auto* interactable = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "IXRHoverInteractable")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*), "HoverExitInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactor, interactable});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::HoverCancel
// Il2CppName: HoverCancel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::*)(::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractor*, ::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractable*)>(&UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::HoverCancel)> {
  static const MethodInfo* get() {
    static auto* interactor = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "IXRHoverInteractor")->byval_arg;
    static auto* interactable = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "IXRHoverInteractable")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*), "HoverCancel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactor, interactable});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::HoverCancelInternal
// Il2CppName: HoverCancelInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::*)(::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractor*, ::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractable*)>(&UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::HoverCancelInternal)> {
  static const MethodInfo* get() {
    static auto* interactor = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "IXRHoverInteractor")->byval_arg;
    static auto* interactable = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "IXRHoverInteractable")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*), "HoverCancelInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactor, interactable});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::SelectEnter
// Il2CppName: SelectEnter
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::*)(::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractor*, ::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable*, ::UnityEngine::XR::Interaction::Toolkit::SelectEnterEventArgs*)>(&UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::SelectEnter)> {
  static const MethodInfo* get() {
    static auto* interactor = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "IXRSelectInteractor")->byval_arg;
    static auto* interactable = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "IXRSelectInteractable")->byval_arg;
    static auto* args = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "SelectEnterEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*), "SelectEnter", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactor, interactable, args});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::SelectEnterInternal
// Il2CppName: SelectEnterInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::*)(::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractor*, ::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable*, ::UnityEngine::XR::Interaction::Toolkit::SelectEnterEventArgs*)>(&UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::SelectEnterInternal)> {
  static const MethodInfo* get() {
    static auto* interactor = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "IXRSelectInteractor")->byval_arg;
    static auto* interactable = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "IXRSelectInteractable")->byval_arg;
    static auto* args = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "SelectEnterEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*), "SelectEnterInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactor, interactable, args});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::SelectExit
// Il2CppName: SelectExit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::*)(::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractor*, ::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable*, ::UnityEngine::XR::Interaction::Toolkit::SelectExitEventArgs*)>(&UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::SelectExit)> {
  static const MethodInfo* get() {
    static auto* interactor = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "IXRSelectInteractor")->byval_arg;
    static auto* interactable = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "IXRSelectInteractable")->byval_arg;
    static auto* args = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "SelectExitEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*), "SelectExit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactor, interactable, args});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::SelectExitInternal
// Il2CppName: SelectExitInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::*)(::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractor*, ::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable*, ::UnityEngine::XR::Interaction::Toolkit::SelectExitEventArgs*)>(&UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::SelectExitInternal)> {
  static const MethodInfo* get() {
    static auto* interactor = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "IXRSelectInteractor")->byval_arg;
    static auto* interactable = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "IXRSelectInteractable")->byval_arg;
    static auto* args = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "SelectExitEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*), "SelectExitInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactor, interactable, args});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::HoverEnter
// Il2CppName: HoverEnter
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::*)(::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractor*, ::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractable*, ::UnityEngine::XR::Interaction::Toolkit::HoverEnterEventArgs*)>(&UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::HoverEnter)> {
  static const MethodInfo* get() {
    static auto* interactor = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "IXRHoverInteractor")->byval_arg;
    static auto* interactable = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "IXRHoverInteractable")->byval_arg;
    static auto* args = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "HoverEnterEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*), "HoverEnter", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactor, interactable, args});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::HoverEnterInternal
// Il2CppName: HoverEnterInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::*)(::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractor*, ::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractable*, ::UnityEngine::XR::Interaction::Toolkit::HoverEnterEventArgs*)>(&UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::HoverEnterInternal)> {
  static const MethodInfo* get() {
    static auto* interactor = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "IXRHoverInteractor")->byval_arg;
    static auto* interactable = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "IXRHoverInteractable")->byval_arg;
    static auto* args = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "HoverEnterEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*), "HoverEnterInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactor, interactable, args});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::HoverExit
// Il2CppName: HoverExit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::*)(::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractor*, ::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractable*, ::UnityEngine::XR::Interaction::Toolkit::HoverExitEventArgs*)>(&UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::HoverExit)> {
  static const MethodInfo* get() {
    static auto* interactor = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "IXRHoverInteractor")->byval_arg;
    static auto* interactable = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "IXRHoverInteractable")->byval_arg;
    static auto* args = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "HoverExitEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*), "HoverExit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactor, interactable, args});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::HoverExitInternal
// Il2CppName: HoverExitInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::*)(::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractor*, ::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractable*, ::UnityEngine::XR::Interaction::Toolkit::HoverExitEventArgs*)>(&UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::HoverExitInternal)> {
  static const MethodInfo* get() {
    static auto* interactor = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "IXRHoverInteractor")->byval_arg;
    static auto* interactable = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "IXRHoverInteractable")->byval_arg;
    static auto* args = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "HoverExitEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*), "HoverExitInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactor, interactable, args});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::InteractorSelectValidTargets
// Il2CppName: InteractorSelectValidTargets
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::*)(::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractor*, ::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::IXRInteractable*>*)>(&UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::InteractorSelectValidTargets)> {
  static const MethodInfo* get() {
    static auto* interactor = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "IXRSelectInteractor")->byval_arg;
    static auto* validTargets = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "IXRInteractable")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*), "InteractorSelectValidTargets", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactor, validTargets});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::InteractorSelectValidTargetsInternal
// Il2CppName: InteractorSelectValidTargetsInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::*)(::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractor*, ::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::IXRInteractable*>*, ::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*>*)>(&UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::InteractorSelectValidTargetsInternal)> {
  static const MethodInfo* get() {
    static auto* interactor = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "IXRSelectInteractor")->byval_arg;
    static auto* validTargets = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "IXRInteractable")})->byval_arg;
    static auto* deprecatedValidTargets = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "XRBaseInteractable")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*), "InteractorSelectValidTargetsInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactor, validTargets, deprecatedValidTargets});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::InteractorHoverValidTargets
// Il2CppName: InteractorHoverValidTargets
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::*)(::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractor*, ::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::IXRInteractable*>*)>(&UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::InteractorHoverValidTargets)> {
  static const MethodInfo* get() {
    static auto* interactor = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "IXRHoverInteractor")->byval_arg;
    static auto* validTargets = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "IXRInteractable")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*), "InteractorHoverValidTargets", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactor, validTargets});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::InteractorHoverValidTargetsInternal
// Il2CppName: InteractorHoverValidTargetsInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::*)(::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractor*, ::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::IXRInteractable*>*, ::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*>*)>(&UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::InteractorHoverValidTargetsInternal)> {
  static const MethodInfo* get() {
    static auto* interactor = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "IXRHoverInteractor")->byval_arg;
    static auto* validTargets = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "IXRInteractable")})->byval_arg;
    static auto* deprecatedValidTargets = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "XRBaseInteractable")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*), "InteractorHoverValidTargetsInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactor, validTargets, deprecatedValidTargets});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::ResolveExistingSelect
// Il2CppName: ResolveExistingSelect
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::*)(::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractor*, ::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable*)>(&UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::ResolveExistingSelect)> {
  static const MethodInfo* get() {
    static auto* interactor = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "IXRSelectInteractor")->byval_arg;
    static auto* interactable = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "IXRSelectInteractable")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*), "ResolveExistingSelect", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactor, interactable});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::HasInteractionLayerOverlap
// Il2CppName: HasInteractionLayerOverlap
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::UnityEngine::XR::Interaction::Toolkit::IXRInteractor*, ::UnityEngine::XR::Interaction::Toolkit::IXRInteractable*)>(&UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::HasInteractionLayerOverlap)> {
  static const MethodInfo* get() {
    static auto* interactor = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "IXRInteractor")->byval_arg;
    static auto* interactable = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "IXRInteractable")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*), "HasInteractionLayerOverlap", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactor, interactable});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::ProcessHoverFilters
// Il2CppName: ProcessHoverFilters
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::*)(::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractor*, ::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractable*)>(&UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::ProcessHoverFilters)> {
  static const MethodInfo* get() {
    static auto* interactor = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "IXRHoverInteractor")->byval_arg;
    static auto* interactable = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "IXRHoverInteractable")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*), "ProcessHoverFilters", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactor, interactable});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::ProcessSelectFilters
// Il2CppName: ProcessSelectFilters
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::*)(::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractor*, ::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable*)>(&UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::ProcessSelectFilters)> {
  static const MethodInfo* get() {
    static auto* interactor = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "IXRSelectInteractor")->byval_arg;
    static auto* interactable = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "IXRSelectInteractable")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*), "ProcessSelectFilters", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactor, interactable});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::ExitInteractableSelection
// Il2CppName: ExitInteractableSelection
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::*)(::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable*)>(&UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::ExitInteractableSelection)> {
  static const MethodInfo* get() {
    static auto* interactable = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "IXRSelectInteractable")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*), "ExitInteractableSelection", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactable});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::ClearPriorityForSelectionMap
// Il2CppName: ClearPriorityForSelectionMap
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::ClearPriorityForSelectionMap)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*), "ClearPriorityForSelectionMap", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::FlushRegistration
// Il2CppName: FlushRegistration
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::FlushRegistration)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*), "FlushRegistration", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::GetOfType
// Il2CppName: GetOfType
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::RegisterInteractor
// Il2CppName: RegisterInteractor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::*)(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*)>(&UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::RegisterInteractor)> {
  static const MethodInfo* get() {
    static auto* interactor = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "XRBaseInteractor")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*), "RegisterInteractor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactor});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::UnregisterInteractor
// Il2CppName: UnregisterInteractor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::*)(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*)>(&UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::UnregisterInteractor)> {
  static const MethodInfo* get() {
    static auto* interactor = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "XRBaseInteractor")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*), "UnregisterInteractor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactor});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::RegisterInteractable
// Il2CppName: RegisterInteractable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::*)(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*)>(&UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::RegisterInteractable)> {
  static const MethodInfo* get() {
    static auto* interactable = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "XRBaseInteractable")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*), "RegisterInteractable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactable});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::UnregisterInteractable
// Il2CppName: UnregisterInteractable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::*)(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*)>(&UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::UnregisterInteractable)> {
  static const MethodInfo* get() {
    static auto* interactable = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "XRBaseInteractable")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*), "UnregisterInteractable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactable});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::GetRegisteredInteractors
// Il2CppName: GetRegisteredInteractors
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::*)(::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*>*)>(&UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::GetRegisteredInteractors)> {
  static const MethodInfo* get() {
    static auto* results = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "XRBaseInteractor")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*), "GetRegisteredInteractors", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{results});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::GetRegisteredInteractables
// Il2CppName: GetRegisteredInteractables
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::*)(::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*>*)>(&UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::GetRegisteredInteractables)> {
  static const MethodInfo* get() {
    static auto* results = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "XRBaseInteractable")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*), "GetRegisteredInteractables", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{results});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::IsRegistered
// Il2CppName: IsRegistered
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::*)(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*)>(&UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::IsRegistered)> {
  static const MethodInfo* get() {
    static auto* interactor = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "XRBaseInteractor")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*), "IsRegistered", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactor});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::IsRegistered
// Il2CppName: IsRegistered
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::*)(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*)>(&UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::IsRegistered)> {
  static const MethodInfo* get() {
    static auto* interactable = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "XRBaseInteractable")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*), "IsRegistered", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactable});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::TryGetInteractableForCollider
// Il2CppName: TryGetInteractableForCollider
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* (UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::*)(::UnityEngine::Collider*)>(&UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::TryGetInteractableForCollider)> {
  static const MethodInfo* get() {
    static auto* interactableCollider = &::il2cpp_utils::GetClassFromName("UnityEngine", "Collider")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*), "TryGetInteractableForCollider", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactableCollider});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::GetInteractableForCollider
// Il2CppName: GetInteractableForCollider
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* (UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::*)(::UnityEngine::Collider*)>(&UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::GetInteractableForCollider)> {
  static const MethodInfo* get() {
    static auto* interactableCollider = &::il2cpp_utils::GetClassFromName("UnityEngine", "Collider")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*), "GetInteractableForCollider", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactableCollider});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::GetColliderToInteractableMap
// Il2CppName: GetColliderToInteractableMap
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::*)(ByRef<::System::Collections::Generic::Dictionary_2<::UnityEngine::Collider*, ::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*>*>)>(&UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::GetColliderToInteractableMap)> {
  static const MethodInfo* get() {
    static auto* map = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "Dictionary`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine", "Collider"), ::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "XRBaseInteractable")})->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*), "GetColliderToInteractableMap", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{map});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::GetValidTargets
// Il2CppName: GetValidTargets
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*>* (UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::*)(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*, ::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*>*)>(&UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::GetValidTargets)> {
  static const MethodInfo* get() {
    static auto* interactor = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "XRBaseInteractor")->byval_arg;
    static auto* validTargets = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "XRBaseInteractable")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*), "GetValidTargets", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactor, validTargets});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::ForceSelect
// Il2CppName: ForceSelect
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::*)(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*, ::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*)>(&UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::ForceSelect)> {
  static const MethodInfo* get() {
    static auto* interactor = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "XRBaseInteractor")->byval_arg;
    static auto* interactable = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "XRBaseInteractable")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*), "ForceSelect", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactor, interactable});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::ClearInteractorSelection
// Il2CppName: ClearInteractorSelection
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::*)(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*)>(&UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::ClearInteractorSelection)> {
  static const MethodInfo* get() {
    static auto* interactor = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "XRBaseInteractor")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*), "ClearInteractorSelection", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactor});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::CancelInteractorSelection
// Il2CppName: CancelInteractorSelection
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::*)(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*)>(&UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::CancelInteractorSelection)> {
  static const MethodInfo* get() {
    static auto* interactor = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "XRBaseInteractor")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*), "CancelInteractorSelection", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactor});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::CancelInteractableSelection
// Il2CppName: CancelInteractableSelection
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::*)(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*)>(&UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::CancelInteractableSelection)> {
  static const MethodInfo* get() {
    static auto* interactable = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "XRBaseInteractable")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*), "CancelInteractableSelection", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactable});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::ClearInteractorHover
// Il2CppName: ClearInteractorHover
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::*)(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*, ::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*>*)>(&UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::ClearInteractorHover)> {
  static const MethodInfo* get() {
    static auto* interactor = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "XRBaseInteractor")->byval_arg;
    static auto* validTargets = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "XRBaseInteractable")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*), "ClearInteractorHover", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactor, validTargets});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::CancelInteractorHover
// Il2CppName: CancelInteractorHover
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::*)(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*)>(&UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::CancelInteractorHover)> {
  static const MethodInfo* get() {
    static auto* interactor = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "XRBaseInteractor")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*), "CancelInteractorHover", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactor});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::CancelInteractableHover
// Il2CppName: CancelInteractableHover
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::*)(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*)>(&UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::CancelInteractableHover)> {
  static const MethodInfo* get() {
    static auto* interactable = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "XRBaseInteractable")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*), "CancelInteractableHover", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactable});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::SelectEnter
// Il2CppName: SelectEnter
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::*)(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*, ::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*)>(&UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::SelectEnter)> {
  static const MethodInfo* get() {
    static auto* interactor = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "XRBaseInteractor")->byval_arg;
    static auto* interactable = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "XRBaseInteractable")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*), "SelectEnter", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactor, interactable});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::SelectExit
// Il2CppName: SelectExit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::*)(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*, ::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*)>(&UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::SelectExit)> {
  static const MethodInfo* get() {
    static auto* interactor = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "XRBaseInteractor")->byval_arg;
    static auto* interactable = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "XRBaseInteractable")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*), "SelectExit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactor, interactable});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::SelectCancel
// Il2CppName: SelectCancel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::*)(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*, ::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*)>(&UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::SelectCancel)> {
  static const MethodInfo* get() {
    static auto* interactor = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "XRBaseInteractor")->byval_arg;
    static auto* interactable = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "XRBaseInteractable")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*), "SelectCancel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactor, interactable});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::HoverEnter
// Il2CppName: HoverEnter
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::*)(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*, ::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*)>(&UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::HoverEnter)> {
  static const MethodInfo* get() {
    static auto* interactor = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "XRBaseInteractor")->byval_arg;
    static auto* interactable = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "XRBaseInteractable")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*), "HoverEnter", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactor, interactable});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::HoverExit
// Il2CppName: HoverExit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::*)(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*, ::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*)>(&UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::HoverExit)> {
  static const MethodInfo* get() {
    static auto* interactor = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "XRBaseInteractor")->byval_arg;
    static auto* interactable = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "XRBaseInteractable")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*), "HoverExit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactor, interactable});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::HoverCancel
// Il2CppName: HoverCancel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::*)(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*, ::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*)>(&UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::HoverCancel)> {
  static const MethodInfo* get() {
    static auto* interactor = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "XRBaseInteractor")->byval_arg;
    static auto* interactable = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "XRBaseInteractable")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*), "HoverCancel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactor, interactable});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::SelectEnter
// Il2CppName: SelectEnter
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::*)(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*, ::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*, ::UnityEngine::XR::Interaction::Toolkit::SelectEnterEventArgs*)>(&UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::SelectEnter)> {
  static const MethodInfo* get() {
    static auto* interactor = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "XRBaseInteractor")->byval_arg;
    static auto* interactable = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "XRBaseInteractable")->byval_arg;
    static auto* args = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "SelectEnterEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*), "SelectEnter", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactor, interactable, args});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::SelectExit
// Il2CppName: SelectExit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::*)(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*, ::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*, ::UnityEngine::XR::Interaction::Toolkit::SelectExitEventArgs*)>(&UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::SelectExit)> {
  static const MethodInfo* get() {
    static auto* interactor = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "XRBaseInteractor")->byval_arg;
    static auto* interactable = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "XRBaseInteractable")->byval_arg;
    static auto* args = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "SelectExitEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*), "SelectExit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactor, interactable, args});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::HoverEnter
// Il2CppName: HoverEnter
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::*)(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*, ::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*, ::UnityEngine::XR::Interaction::Toolkit::HoverEnterEventArgs*)>(&UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::HoverEnter)> {
  static const MethodInfo* get() {
    static auto* interactor = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "XRBaseInteractor")->byval_arg;
    static auto* interactable = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "XRBaseInteractable")->byval_arg;
    static auto* args = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "HoverEnterEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*), "HoverEnter", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactor, interactable, args});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::HoverExit
// Il2CppName: HoverExit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::*)(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*, ::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*, ::UnityEngine::XR::Interaction::Toolkit::HoverExitEventArgs*)>(&UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::HoverExit)> {
  static const MethodInfo* get() {
    static auto* interactor = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "XRBaseInteractor")->byval_arg;
    static auto* interactable = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "XRBaseInteractable")->byval_arg;
    static auto* args = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "HoverExitEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*), "HoverExit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactor, interactable, args});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::InteractorSelectValidTargets
// Il2CppName: InteractorSelectValidTargets
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::*)(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*, ::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*>*)>(&UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::InteractorSelectValidTargets)> {
  static const MethodInfo* get() {
    static auto* interactor = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "XRBaseInteractor")->byval_arg;
    static auto* validTargets = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "XRBaseInteractable")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*), "InteractorSelectValidTargets", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactor, validTargets});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::InteractorHoverValidTargets
// Il2CppName: InteractorHoverValidTargets
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::*)(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*, ::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*>*)>(&UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::InteractorHoverValidTargets)> {
  static const MethodInfo* get() {
    static auto* interactor = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "XRBaseInteractor")->byval_arg;
    static auto* validTargets = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "XRBaseInteractable")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*), "InteractorHoverValidTargets", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactor, validTargets});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
