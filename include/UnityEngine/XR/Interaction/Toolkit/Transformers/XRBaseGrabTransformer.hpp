// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.Transformers.IXRGrabTransformer
#include "UnityEngine/XR/Interaction/Toolkit/Transformers/IXRGrabTransformer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::XR::Interaction::Toolkit::Transformers
namespace UnityEngine::XR::Interaction::Toolkit::Transformers {
}
// Forward declaring namespace: UnityEngine::XR::Interaction::Toolkit
namespace UnityEngine::XR::Interaction::Toolkit {
  // Forward declaring type: XRGrabInteractable
  class XRGrabInteractable;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Pose
  struct Pose;
  // Skipping declaration: Vector3 because it is already included!
}
// Completed forward declares
// Type namespace: UnityEngine.XR.Interaction.Toolkit.Transformers
namespace UnityEngine::XR::Interaction::Toolkit::Transformers {
  // Forward declaring type: XRBaseGrabTransformer
  class XRBaseGrabTransformer;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::XR::Interaction::Toolkit::Transformers::XRBaseGrabTransformer);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::XR::Interaction::Toolkit::Transformers::XRBaseGrabTransformer*, "UnityEngine.XR.Interaction.Toolkit.Transformers", "XRBaseGrabTransformer");
// Type namespace: UnityEngine.XR.Interaction.Toolkit.Transformers
namespace UnityEngine::XR::Interaction::Toolkit::Transformers {
  // Size: 0x20
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.XR.Interaction.Toolkit.Transformers.XRBaseGrabTransformer
  // [TokenAttribute] Offset: FFFFFFFF
  class XRBaseGrabTransformer : public ::UnityEngine::MonoBehaviour/*, public ::UnityEngine::XR::Interaction::Toolkit::Transformers::IXRGrabTransformer*/ {
    public:
    // Nested type: ::UnityEngine::XR::Interaction::Toolkit::Transformers::XRBaseGrabTransformer::RegistrationMode
    struct RegistrationMode;
    // Creating interface conversion operator: operator ::UnityEngine::XR::Interaction::Toolkit::Transformers::IXRGrabTransformer
    operator ::UnityEngine::XR::Interaction::Toolkit::Transformers::IXRGrabTransformer() noexcept {
      return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::Transformers::IXRGrabTransformer*>(this);
    }
    // public System.Boolean get_canProcess()
    // Offset: 0x5427680
    bool get_canProcess();
    // protected UnityEngine.XR.Interaction.Toolkit.Transformers.XRBaseGrabTransformer/RegistrationMode get_registrationMode()
    // Offset: 0x5427688
    ::UnityEngine::XR::Interaction::Toolkit::Transformers::XRBaseGrabTransformer::RegistrationMode get_registrationMode();
    // protected System.Void Start()
    // Offset: 0x5427690
    void Start();
    // protected System.Void OnDestroy()
    // Offset: 0x5427820
    void OnDestroy();
    // public System.Void OnLink(UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable grabInteractable)
    // Offset: 0x54278AC
    void OnLink(::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable* grabInteractable);
    // public System.Void OnGrab(UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable grabInteractable)
    // Offset: 0x54278B0
    void OnGrab(::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable* grabInteractable);
    // public System.Void OnGrabCountChanged(UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable grabInteractable, UnityEngine.Pose targetPose, UnityEngine.Vector3 localScale)
    // Offset: 0x54278B4
    void OnGrabCountChanged(::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable* grabInteractable, ::UnityEngine::Pose targetPose, ::UnityEngine::Vector3 localScale);
    // public System.Void Process(UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable grabInteractable, UnityEngine.XR.Interaction.Toolkit.XRInteractionUpdateOrder/UpdatePhase updatePhase, ref UnityEngine.Pose targetPose, ref UnityEngine.Vector3 localScale)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void Process(::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable* grabInteractable, ::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::UpdatePhase updatePhase, ByRef<::UnityEngine::Pose> targetPose, ByRef<::UnityEngine::Vector3> localScale);
    // public System.Void OnUnlink(UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable grabInteractable)
    // Offset: 0x54278B8
    void OnUnlink(::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable* grabInteractable);
    // protected System.Void .ctor()
    // Offset: 0x54278BC
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static XRBaseGrabTransformer* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::Transformers::XRBaseGrabTransformer::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<XRBaseGrabTransformer*, creationType>()));
    }
  }; // UnityEngine.XR.Interaction.Toolkit.Transformers.XRBaseGrabTransformer
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Transformers::XRBaseGrabTransformer::get_canProcess
// Il2CppName: get_canProcess
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::XR::Interaction::Toolkit::Transformers::XRBaseGrabTransformer::*)()>(&UnityEngine::XR::Interaction::Toolkit::Transformers::XRBaseGrabTransformer::get_canProcess)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Transformers::XRBaseGrabTransformer*), "get_canProcess", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Transformers::XRBaseGrabTransformer::get_registrationMode
// Il2CppName: get_registrationMode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::XR::Interaction::Toolkit::Transformers::XRBaseGrabTransformer::RegistrationMode (UnityEngine::XR::Interaction::Toolkit::Transformers::XRBaseGrabTransformer::*)()>(&UnityEngine::XR::Interaction::Toolkit::Transformers::XRBaseGrabTransformer::get_registrationMode)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Transformers::XRBaseGrabTransformer*), "get_registrationMode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Transformers::XRBaseGrabTransformer::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Transformers::XRBaseGrabTransformer::*)()>(&UnityEngine::XR::Interaction::Toolkit::Transformers::XRBaseGrabTransformer::Start)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Transformers::XRBaseGrabTransformer*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Transformers::XRBaseGrabTransformer::OnDestroy
// Il2CppName: OnDestroy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Transformers::XRBaseGrabTransformer::*)()>(&UnityEngine::XR::Interaction::Toolkit::Transformers::XRBaseGrabTransformer::OnDestroy)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Transformers::XRBaseGrabTransformer*), "OnDestroy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Transformers::XRBaseGrabTransformer::OnLink
// Il2CppName: OnLink
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Transformers::XRBaseGrabTransformer::*)(::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable*)>(&UnityEngine::XR::Interaction::Toolkit::Transformers::XRBaseGrabTransformer::OnLink)> {
  static const MethodInfo* get() {
    static auto* grabInteractable = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "XRGrabInteractable")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Transformers::XRBaseGrabTransformer*), "OnLink", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{grabInteractable});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Transformers::XRBaseGrabTransformer::OnGrab
// Il2CppName: OnGrab
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Transformers::XRBaseGrabTransformer::*)(::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable*)>(&UnityEngine::XR::Interaction::Toolkit::Transformers::XRBaseGrabTransformer::OnGrab)> {
  static const MethodInfo* get() {
    static auto* grabInteractable = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "XRGrabInteractable")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Transformers::XRBaseGrabTransformer*), "OnGrab", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{grabInteractable});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Transformers::XRBaseGrabTransformer::OnGrabCountChanged
// Il2CppName: OnGrabCountChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Transformers::XRBaseGrabTransformer::*)(::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable*, ::UnityEngine::Pose, ::UnityEngine::Vector3)>(&UnityEngine::XR::Interaction::Toolkit::Transformers::XRBaseGrabTransformer::OnGrabCountChanged)> {
  static const MethodInfo* get() {
    static auto* grabInteractable = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "XRGrabInteractable")->byval_arg;
    static auto* targetPose = &::il2cpp_utils::GetClassFromName("UnityEngine", "Pose")->byval_arg;
    static auto* localScale = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Transformers::XRBaseGrabTransformer*), "OnGrabCountChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{grabInteractable, targetPose, localScale});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Transformers::XRBaseGrabTransformer::Process
// Il2CppName: Process
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Transformers::XRBaseGrabTransformer::*)(::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable*, ::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::UpdatePhase, ByRef<::UnityEngine::Pose>, ByRef<::UnityEngine::Vector3>)>(&UnityEngine::XR::Interaction::Toolkit::Transformers::XRBaseGrabTransformer::Process)> {
  static const MethodInfo* get() {
    static auto* grabInteractable = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "XRGrabInteractable")->byval_arg;
    static auto* updatePhase = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "XRInteractionUpdateOrder/UpdatePhase")->byval_arg;
    static auto* targetPose = &::il2cpp_utils::GetClassFromName("UnityEngine", "Pose")->this_arg;
    static auto* localScale = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Transformers::XRBaseGrabTransformer*), "Process", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{grabInteractable, updatePhase, targetPose, localScale});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Transformers::XRBaseGrabTransformer::OnUnlink
// Il2CppName: OnUnlink
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Transformers::XRBaseGrabTransformer::*)(::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable*)>(&UnityEngine::XR::Interaction::Toolkit::Transformers::XRBaseGrabTransformer::OnUnlink)> {
  static const MethodInfo* get() {
    static auto* grabInteractable = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "XRGrabInteractable")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Transformers::XRBaseGrabTransformer*), "OnUnlink", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{grabInteractable});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Transformers::XRBaseGrabTransformer::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
