// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.LocomotionProvider
#include "UnityEngine/XR/Interaction/Toolkit/LocomotionProvider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: CharacterController
  class CharacterController;
}
// Forward declaring namespace: UnityEngine::XR::Interaction::Toolkit
namespace UnityEngine::XR::Interaction::Toolkit {
  // Skipping declaration: GravityApplicationMode because it is already included!
}
// Completed forward declares
// Type namespace: UnityEngine.XR.Interaction.Toolkit
namespace UnityEngine::XR::Interaction::Toolkit {
  // Forward declaring type: ConstrainedMoveProvider
  class ConstrainedMoveProvider;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::XR::Interaction::Toolkit::ConstrainedMoveProvider);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::XR::Interaction::Toolkit::ConstrainedMoveProvider*, "UnityEngine.XR.Interaction.Toolkit", "ConstrainedMoveProvider");
// Type namespace: UnityEngine.XR.Interaction.Toolkit
namespace UnityEngine::XR::Interaction::Toolkit {
  // Size: 0x68
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.XR.Interaction.Toolkit.ConstrainedMoveProvider
  // [TokenAttribute] Offset: FFFFFFFF
  class ConstrainedMoveProvider : public ::UnityEngine::XR::Interaction::Toolkit::LocomotionProvider {
    public:
    // Nested type: ::UnityEngine::XR::Interaction::Toolkit::ConstrainedMoveProvider::GravityApplicationMode
    struct GravityApplicationMode;
    // Size: 0x4
    #pragma pack(push, 1)
    // Autogenerated type: UnityEngine.XR.Interaction.Toolkit.ConstrainedMoveProvider/GravityApplicationMode
    // [TokenAttribute] Offset: FFFFFFFF
    struct GravityApplicationMode/*, public ::System::Enum*/ {
      public:
      public:
      // public System.Int32 value__
      // Size: 0x4
      // Offset: 0x0
      int value;
      // Field size check
      static_assert(sizeof(int) == 0x4);
      public:
      // Creating value type constructor for type: GravityApplicationMode
      constexpr GravityApplicationMode(int value_ = {}) noexcept : value{value_} {}
      // Creating interface conversion operator: operator ::System::Enum
      operator ::System::Enum() noexcept {
        return *reinterpret_cast<::System::Enum*>(this);
      }
      // Creating conversion operator: operator int
      constexpr operator int() const noexcept {
        return value;
      }
      // static field const value: static public UnityEngine.XR.Interaction.Toolkit.ConstrainedMoveProvider/GravityApplicationMode AttemptingMove
      static constexpr const int AttemptingMove = 0;
      // Get static field: static public UnityEngine.XR.Interaction.Toolkit.ConstrainedMoveProvider/GravityApplicationMode AttemptingMove
      static ::UnityEngine::XR::Interaction::Toolkit::ConstrainedMoveProvider::GravityApplicationMode _get_AttemptingMove();
      // Set static field: static public UnityEngine.XR.Interaction.Toolkit.ConstrainedMoveProvider/GravityApplicationMode AttemptingMove
      static void _set_AttemptingMove(::UnityEngine::XR::Interaction::Toolkit::ConstrainedMoveProvider::GravityApplicationMode value);
      // static field const value: static public UnityEngine.XR.Interaction.Toolkit.ConstrainedMoveProvider/GravityApplicationMode Immediately
      static constexpr const int Immediately = 1;
      // Get static field: static public UnityEngine.XR.Interaction.Toolkit.ConstrainedMoveProvider/GravityApplicationMode Immediately
      static ::UnityEngine::XR::Interaction::Toolkit::ConstrainedMoveProvider::GravityApplicationMode _get_Immediately();
      // Set static field: static public UnityEngine.XR.Interaction.Toolkit.ConstrainedMoveProvider/GravityApplicationMode Immediately
      static void _set_Immediately(::UnityEngine::XR::Interaction::Toolkit::ConstrainedMoveProvider::GravityApplicationMode value);
      // Get instance field reference: public System.Int32 value__
      [[deprecated("Use field access instead!")]] int& dyn_value__();
    }; // UnityEngine.XR.Interaction.Toolkit.ConstrainedMoveProvider/GravityApplicationMode
    #pragma pack(pop)
    static check_size<sizeof(ConstrainedMoveProvider::GravityApplicationMode), 0 + sizeof(int)> __UnityEngine_XR_Interaction_Toolkit_ConstrainedMoveProvider_GravityApplicationModeSizeCheck;
    static_assert(sizeof(ConstrainedMoveProvider::GravityApplicationMode) == 0x4);
    public:
    // private System.Boolean m_EnableFreeXMovement
    // Size: 0x1
    // Offset: 0x48
    bool m_EnableFreeXMovement;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean m_EnableFreeYMovement
    // Size: 0x1
    // Offset: 0x49
    bool m_EnableFreeYMovement;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean m_EnableFreeZMovement
    // Size: 0x1
    // Offset: 0x4A
    bool m_EnableFreeZMovement;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean m_UseGravity
    // Size: 0x1
    // Offset: 0x4B
    bool m_UseGravity;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private UnityEngine.XR.Interaction.Toolkit.ConstrainedMoveProvider/GravityApplicationMode m_GravityApplicationMode
    // Size: 0x4
    // Offset: 0x4C
    ::UnityEngine::XR::Interaction::Toolkit::ConstrainedMoveProvider::GravityApplicationMode m_GravityApplicationMode;
    // Field size check
    static_assert(sizeof(::UnityEngine::XR::Interaction::Toolkit::ConstrainedMoveProvider::GravityApplicationMode) == 0x4);
    // private UnityEngine.CharacterController m_CharacterController
    // Size: 0x8
    // Offset: 0x50
    ::UnityEngine::CharacterController* m_CharacterController;
    // Field size check
    static_assert(sizeof(::UnityEngine::CharacterController*) == 0x8);
    // private System.Boolean m_AttemptedGetCharacterController
    // Size: 0x1
    // Offset: 0x58
    bool m_AttemptedGetCharacterController;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean m_IsMovingXROrigin
    // Size: 0x1
    // Offset: 0x59
    bool m_IsMovingXROrigin;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: m_IsMovingXROrigin and: m_GravityDrivenVelocity
    char __padding7[0x2] = {};
    // private UnityEngine.Vector3 m_GravityDrivenVelocity
    // Size: 0xC
    // Offset: 0x5C
    ::UnityEngine::Vector3 m_GravityDrivenVelocity;
    // Field size check
    static_assert(sizeof(::UnityEngine::Vector3) == 0xC);
    public:
    // Get instance field reference: private System.Boolean m_EnableFreeXMovement
    [[deprecated("Use field access instead!")]] bool& dyn_m_EnableFreeXMovement();
    // Get instance field reference: private System.Boolean m_EnableFreeYMovement
    [[deprecated("Use field access instead!")]] bool& dyn_m_EnableFreeYMovement();
    // Get instance field reference: private System.Boolean m_EnableFreeZMovement
    [[deprecated("Use field access instead!")]] bool& dyn_m_EnableFreeZMovement();
    // Get instance field reference: private System.Boolean m_UseGravity
    [[deprecated("Use field access instead!")]] bool& dyn_m_UseGravity();
    // Get instance field reference: private UnityEngine.XR.Interaction.Toolkit.ConstrainedMoveProvider/GravityApplicationMode m_GravityApplicationMode
    [[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::ConstrainedMoveProvider::GravityApplicationMode& dyn_m_GravityApplicationMode();
    // Get instance field reference: private UnityEngine.CharacterController m_CharacterController
    [[deprecated("Use field access instead!")]] ::UnityEngine::CharacterController*& dyn_m_CharacterController();
    // Get instance field reference: private System.Boolean m_AttemptedGetCharacterController
    [[deprecated("Use field access instead!")]] bool& dyn_m_AttemptedGetCharacterController();
    // Get instance field reference: private System.Boolean m_IsMovingXROrigin
    [[deprecated("Use field access instead!")]] bool& dyn_m_IsMovingXROrigin();
    // Get instance field reference: private UnityEngine.Vector3 m_GravityDrivenVelocity
    [[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& dyn_m_GravityDrivenVelocity();
    // public System.Boolean get_enableFreeXMovement()
    // Offset: 0x540A1F8
    bool get_enableFreeXMovement();
    // public System.Void set_enableFreeXMovement(System.Boolean value)
    // Offset: 0x540A200
    void set_enableFreeXMovement(bool value);
    // public System.Boolean get_enableFreeYMovement()
    // Offset: 0x540A20C
    bool get_enableFreeYMovement();
    // public System.Void set_enableFreeYMovement(System.Boolean value)
    // Offset: 0x540A214
    void set_enableFreeYMovement(bool value);
    // public System.Boolean get_enableFreeZMovement()
    // Offset: 0x540A220
    bool get_enableFreeZMovement();
    // public System.Void set_enableFreeZMovement(System.Boolean value)
    // Offset: 0x540A228
    void set_enableFreeZMovement(bool value);
    // public System.Boolean get_useGravity()
    // Offset: 0x540A234
    bool get_useGravity();
    // public System.Void set_useGravity(System.Boolean value)
    // Offset: 0x540A23C
    void set_useGravity(bool value);
    // public UnityEngine.XR.Interaction.Toolkit.ConstrainedMoveProvider/GravityApplicationMode get_gravityMode()
    // Offset: 0x540A248
    ::UnityEngine::XR::Interaction::Toolkit::ConstrainedMoveProvider::GravityApplicationMode get_gravityMode();
    // public System.Void set_gravityMode(UnityEngine.XR.Interaction.Toolkit.ConstrainedMoveProvider/GravityApplicationMode value)
    // Offset: 0x540A250
    void set_gravityMode(::UnityEngine::XR::Interaction::Toolkit::ConstrainedMoveProvider::GravityApplicationMode value);
    // protected System.Void Update()
    // Offset: 0x540A258
    void Update();
    // protected UnityEngine.Vector3 ComputeDesiredMove(out System.Boolean attemptingMove)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::UnityEngine::Vector3 ComputeDesiredMove(ByRef<bool> attemptingMove);
    // protected System.Void MoveRig(UnityEngine.Vector3 translationInWorldSpace)
    // Offset: 0x540A3FC
    void MoveRig(::UnityEngine::Vector3 translationInWorldSpace);
    // private System.Void FindCharacterController()
    // Offset: 0x540A6E8
    void FindCharacterController();
    // protected System.Void .ctor()
    // Offset: 0x540A9B0
    // Implemented from: UnityEngine.XR.Interaction.Toolkit.LocomotionProvider
    // Base method: System.Void LocomotionProvider::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static ConstrainedMoveProvider* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::ConstrainedMoveProvider::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<ConstrainedMoveProvider*, creationType>()));
    }
  }; // UnityEngine.XR.Interaction.Toolkit.ConstrainedMoveProvider
  #pragma pack(pop)
  static check_size<sizeof(ConstrainedMoveProvider), 92 + sizeof(::UnityEngine::Vector3)> __UnityEngine_XR_Interaction_Toolkit_ConstrainedMoveProviderSizeCheck;
  static_assert(sizeof(ConstrainedMoveProvider) == 0x68);
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::XR::Interaction::Toolkit::ConstrainedMoveProvider::GravityApplicationMode, "UnityEngine.XR.Interaction.Toolkit", "ConstrainedMoveProvider/GravityApplicationMode");
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::ConstrainedMoveProvider::get_enableFreeXMovement
// Il2CppName: get_enableFreeXMovement
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::XR::Interaction::Toolkit::ConstrainedMoveProvider::*)()>(&UnityEngine::XR::Interaction::Toolkit::ConstrainedMoveProvider::get_enableFreeXMovement)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::ConstrainedMoveProvider*), "get_enableFreeXMovement", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::ConstrainedMoveProvider::set_enableFreeXMovement
// Il2CppName: set_enableFreeXMovement
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::ConstrainedMoveProvider::*)(bool)>(&UnityEngine::XR::Interaction::Toolkit::ConstrainedMoveProvider::set_enableFreeXMovement)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::ConstrainedMoveProvider*), "set_enableFreeXMovement", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::ConstrainedMoveProvider::get_enableFreeYMovement
// Il2CppName: get_enableFreeYMovement
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::XR::Interaction::Toolkit::ConstrainedMoveProvider::*)()>(&UnityEngine::XR::Interaction::Toolkit::ConstrainedMoveProvider::get_enableFreeYMovement)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::ConstrainedMoveProvider*), "get_enableFreeYMovement", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::ConstrainedMoveProvider::set_enableFreeYMovement
// Il2CppName: set_enableFreeYMovement
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::ConstrainedMoveProvider::*)(bool)>(&UnityEngine::XR::Interaction::Toolkit::ConstrainedMoveProvider::set_enableFreeYMovement)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::ConstrainedMoveProvider*), "set_enableFreeYMovement", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::ConstrainedMoveProvider::get_enableFreeZMovement
// Il2CppName: get_enableFreeZMovement
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::XR::Interaction::Toolkit::ConstrainedMoveProvider::*)()>(&UnityEngine::XR::Interaction::Toolkit::ConstrainedMoveProvider::get_enableFreeZMovement)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::ConstrainedMoveProvider*), "get_enableFreeZMovement", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::ConstrainedMoveProvider::set_enableFreeZMovement
// Il2CppName: set_enableFreeZMovement
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::ConstrainedMoveProvider::*)(bool)>(&UnityEngine::XR::Interaction::Toolkit::ConstrainedMoveProvider::set_enableFreeZMovement)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::ConstrainedMoveProvider*), "set_enableFreeZMovement", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::ConstrainedMoveProvider::get_useGravity
// Il2CppName: get_useGravity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::XR::Interaction::Toolkit::ConstrainedMoveProvider::*)()>(&UnityEngine::XR::Interaction::Toolkit::ConstrainedMoveProvider::get_useGravity)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::ConstrainedMoveProvider*), "get_useGravity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::ConstrainedMoveProvider::set_useGravity
// Il2CppName: set_useGravity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::ConstrainedMoveProvider::*)(bool)>(&UnityEngine::XR::Interaction::Toolkit::ConstrainedMoveProvider::set_useGravity)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::ConstrainedMoveProvider*), "set_useGravity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::ConstrainedMoveProvider::get_gravityMode
// Il2CppName: get_gravityMode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::XR::Interaction::Toolkit::ConstrainedMoveProvider::GravityApplicationMode (UnityEngine::XR::Interaction::Toolkit::ConstrainedMoveProvider::*)()>(&UnityEngine::XR::Interaction::Toolkit::ConstrainedMoveProvider::get_gravityMode)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::ConstrainedMoveProvider*), "get_gravityMode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::ConstrainedMoveProvider::set_gravityMode
// Il2CppName: set_gravityMode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::ConstrainedMoveProvider::*)(::UnityEngine::XR::Interaction::Toolkit::ConstrainedMoveProvider::GravityApplicationMode)>(&UnityEngine::XR::Interaction::Toolkit::ConstrainedMoveProvider::set_gravityMode)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "ConstrainedMoveProvider/GravityApplicationMode")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::ConstrainedMoveProvider*), "set_gravityMode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::ConstrainedMoveProvider::Update
// Il2CppName: Update
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::ConstrainedMoveProvider::*)()>(&UnityEngine::XR::Interaction::Toolkit::ConstrainedMoveProvider::Update)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::ConstrainedMoveProvider*), "Update", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::ConstrainedMoveProvider::ComputeDesiredMove
// Il2CppName: ComputeDesiredMove
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector3 (UnityEngine::XR::Interaction::Toolkit::ConstrainedMoveProvider::*)(ByRef<bool>)>(&UnityEngine::XR::Interaction::Toolkit::ConstrainedMoveProvider::ComputeDesiredMove)> {
  static const MethodInfo* get() {
    static auto* attemptingMove = &::il2cpp_utils::GetClassFromName("System", "Boolean")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::ConstrainedMoveProvider*), "ComputeDesiredMove", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{attemptingMove});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::ConstrainedMoveProvider::MoveRig
// Il2CppName: MoveRig
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::ConstrainedMoveProvider::*)(::UnityEngine::Vector3)>(&UnityEngine::XR::Interaction::Toolkit::ConstrainedMoveProvider::MoveRig)> {
  static const MethodInfo* get() {
    static auto* translationInWorldSpace = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::ConstrainedMoveProvider*), "MoveRig", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{translationInWorldSpace});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::ConstrainedMoveProvider::FindCharacterController
// Il2CppName: FindCharacterController
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::ConstrainedMoveProvider::*)()>(&UnityEngine::XR::Interaction::Toolkit::ConstrainedMoveProvider::FindCharacterController)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::ConstrainedMoveProvider*), "FindCharacterController", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::ConstrainedMoveProvider::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
