// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::XR::Interaction::Toolkit::UI
namespace UnityEngine::XR::Interaction::Toolkit::UI {
  // Forward declaring type: XRUIInputModule
  class XRUIInputModule;
  // Forward declaring type: IUIInteractor
  class IUIInteractor;
  // Forward declaring type: TrackedDeviceModel
  struct TrackedDeviceModel;
}
// Forward declaring namespace: UnityEngine::XR::Interaction::Toolkit
namespace UnityEngine::XR::Interaction::Toolkit {
  // Forward declaring type: XRBaseInteractor
  class XRBaseInteractor;
}
// Completed forward declares
// Type namespace: UnityEngine.XR.Interaction.Toolkit.UI
namespace UnityEngine::XR::Interaction::Toolkit::UI {
  // Forward declaring type: RegisteredUIInteractorCache
  class RegisteredUIInteractorCache;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::XR::Interaction::Toolkit::UI::RegisteredUIInteractorCache);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::XR::Interaction::Toolkit::UI::RegisteredUIInteractorCache*, "UnityEngine.XR.Interaction.Toolkit.UI", "RegisteredUIInteractorCache");
// Type namespace: UnityEngine.XR.Interaction.Toolkit.UI
namespace UnityEngine::XR::Interaction::Toolkit::UI {
  // Size: 0x30
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.XR.Interaction.Toolkit.UI.RegisteredUIInteractorCache
  // [TokenAttribute] Offset: FFFFFFFF
  class RegisteredUIInteractorCache : public ::Il2CppObject {
    public:
    public:
    // private UnityEngine.XR.Interaction.Toolkit.UI.XRUIInputModule m_InputModule
    // Size: 0x8
    // Offset: 0x10
    ::UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule* m_InputModule;
    // Field size check
    static_assert(sizeof(::UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule*) == 0x8);
    // private UnityEngine.XR.Interaction.Toolkit.UI.XRUIInputModule m_RegisteredInputModule
    // Size: 0x8
    // Offset: 0x18
    ::UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule* m_RegisteredInputModule;
    // Field size check
    static_assert(sizeof(::UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule*) == 0x8);
    // private readonly UnityEngine.XR.Interaction.Toolkit.UI.IUIInteractor m_UiInteractor
    // Size: 0x8
    // Offset: 0x20
    ::UnityEngine::XR::Interaction::Toolkit::UI::IUIInteractor* m_UiInteractor;
    // Field size check
    static_assert(sizeof(::UnityEngine::XR::Interaction::Toolkit::UI::IUIInteractor*) == 0x8);
    // private readonly UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor m_BaseInteractor
    // Size: 0x8
    // Offset: 0x28
    ::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* m_BaseInteractor;
    // Field size check
    static_assert(sizeof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*) == 0x8);
    public:
    // Get instance field reference: private UnityEngine.XR.Interaction.Toolkit.UI.XRUIInputModule m_InputModule
    [[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule*& dyn_m_InputModule();
    // Get instance field reference: private UnityEngine.XR.Interaction.Toolkit.UI.XRUIInputModule m_RegisteredInputModule
    [[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule*& dyn_m_RegisteredInputModule();
    // Get instance field reference: private readonly UnityEngine.XR.Interaction.Toolkit.UI.IUIInteractor m_UiInteractor
    [[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::UI::IUIInteractor*& dyn_m_UiInteractor();
    // Get instance field reference: private readonly UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor m_BaseInteractor
    [[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*& dyn_m_BaseInteractor();
    // public System.Void .ctor(UnityEngine.XR.Interaction.Toolkit.UI.IUIInteractor uiInteractor)
    // Offset: 0x541B70C
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static RegisteredUIInteractorCache* New_ctor(::UnityEngine::XR::Interaction::Toolkit::UI::IUIInteractor* uiInteractor) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::RegisteredUIInteractorCache::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<RegisteredUIInteractorCache*, creationType>(uiInteractor)));
    }
    // public System.Void RegisterOrUnregisterXRUIInputModule(System.Boolean enabled)
    // Offset: 0x541B7E4
    void RegisterOrUnregisterXRUIInputModule(bool enabled);
    // public System.Void RegisterWithXRUIInputModule()
    // Offset: 0x541B8C8
    void RegisterWithXRUIInputModule();
    // public System.Void UnregisterFromXRUIInputModule()
    // Offset: 0x541B9AC
    void UnregisterFromXRUIInputModule();
    // private System.Void FindOrCreateXRUIInputModule()
    // Offset: 0x541BA44
    void FindOrCreateXRUIInputModule();
    // public System.Boolean TryGetUIModel(out UnityEngine.XR.Interaction.Toolkit.UI.TrackedDeviceModel model)
    // Offset: 0x541BD74
    bool TryGetUIModel(ByRef<::UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceModel> model);
    // public System.Boolean IsOverUIGameObject()
    // Offset: 0x541BE88
    bool IsOverUIGameObject();
  }; // UnityEngine.XR.Interaction.Toolkit.UI.RegisteredUIInteractorCache
  #pragma pack(pop)
  static check_size<sizeof(RegisteredUIInteractorCache), 40 + sizeof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*)> __UnityEngine_XR_Interaction_Toolkit_UI_RegisteredUIInteractorCacheSizeCheck;
  static_assert(sizeof(RegisteredUIInteractorCache) == 0x30);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::UI::RegisteredUIInteractorCache::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::UI::RegisteredUIInteractorCache::RegisterOrUnregisterXRUIInputModule
// Il2CppName: RegisterOrUnregisterXRUIInputModule
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::UI::RegisteredUIInteractorCache::*)(bool)>(&UnityEngine::XR::Interaction::Toolkit::UI::RegisteredUIInteractorCache::RegisterOrUnregisterXRUIInputModule)> {
  static const MethodInfo* get() {
    static auto* enabled = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::UI::RegisteredUIInteractorCache*), "RegisterOrUnregisterXRUIInputModule", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{enabled});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::UI::RegisteredUIInteractorCache::RegisterWithXRUIInputModule
// Il2CppName: RegisterWithXRUIInputModule
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::UI::RegisteredUIInteractorCache::*)()>(&UnityEngine::XR::Interaction::Toolkit::UI::RegisteredUIInteractorCache::RegisterWithXRUIInputModule)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::UI::RegisteredUIInteractorCache*), "RegisterWithXRUIInputModule", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::UI::RegisteredUIInteractorCache::UnregisterFromXRUIInputModule
// Il2CppName: UnregisterFromXRUIInputModule
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::UI::RegisteredUIInteractorCache::*)()>(&UnityEngine::XR::Interaction::Toolkit::UI::RegisteredUIInteractorCache::UnregisterFromXRUIInputModule)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::UI::RegisteredUIInteractorCache*), "UnregisterFromXRUIInputModule", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::UI::RegisteredUIInteractorCache::FindOrCreateXRUIInputModule
// Il2CppName: FindOrCreateXRUIInputModule
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::UI::RegisteredUIInteractorCache::*)()>(&UnityEngine::XR::Interaction::Toolkit::UI::RegisteredUIInteractorCache::FindOrCreateXRUIInputModule)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::UI::RegisteredUIInteractorCache*), "FindOrCreateXRUIInputModule", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::UI::RegisteredUIInteractorCache::TryGetUIModel
// Il2CppName: TryGetUIModel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::XR::Interaction::Toolkit::UI::RegisteredUIInteractorCache::*)(ByRef<::UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceModel>)>(&UnityEngine::XR::Interaction::Toolkit::UI::RegisteredUIInteractorCache::TryGetUIModel)> {
  static const MethodInfo* get() {
    static auto* model = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit.UI", "TrackedDeviceModel")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::UI::RegisteredUIInteractorCache*), "TryGetUIModel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{model});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::UI::RegisteredUIInteractorCache::IsOverUIGameObject
// Il2CppName: IsOverUIGameObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::XR::Interaction::Toolkit::UI::RegisteredUIInteractorCache::*)()>(&UnityEngine::XR::Interaction::Toolkit::UI::RegisteredUIInteractorCache::IsOverUIGameObject)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::UI::RegisteredUIInteractorCache*), "IsOverUIGameObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
