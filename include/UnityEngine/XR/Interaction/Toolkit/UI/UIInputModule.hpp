// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.EventSystems.BaseInputModule
#include "UnityEngine/EventSystems/BaseInputModule.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Camera
  class Camera;
  // Forward declaring type: GameObject
  class GameObject;
}
// Forward declaring namespace: UnityEngine::EventSystems
namespace UnityEngine::EventSystems {
  // Forward declaring type: AxisEventData
  class AxisEventData;
  // Forward declaring type: PointerEventData
  class PointerEventData;
  // Forward declaring type: BaseEventData
  class BaseEventData;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: Dictionary`2<TKey, TValue>
  template<typename TKey, typename TValue>
  class Dictionary_2;
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Forward declaring namespace: UnityEngine::XR::Interaction::Toolkit::UI
namespace UnityEngine::XR::Interaction::Toolkit::UI {
  // Forward declaring type: TrackedDeviceEventData
  class TrackedDeviceEventData;
  // Forward declaring type: MouseModel
  struct MouseModel;
  // Forward declaring type: ButtonDeltaState
  struct ButtonDeltaState;
  // Forward declaring type: TouchModel
  struct TouchModel;
  // Forward declaring type: TrackedDeviceModel
  struct TrackedDeviceModel;
  // Forward declaring type: NavigationModel
  struct NavigationModel;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Action`2<T1, T2>
  template<typename T1, typename T2>
  class Action_2;
}
// Forward declaring namespace: UnityEngine::InputSystem::UI
namespace UnityEngine::InputSystem::UI {
  // Forward declaring type: UIPointerType
  struct UIPointerType;
}
// Completed forward declares
// Type namespace: UnityEngine.XR.Interaction.Toolkit.UI
namespace UnityEngine::XR::Interaction::Toolkit::UI {
  // Forward declaring type: UIInputModule
  class UIInputModule;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule*, "UnityEngine.XR.Interaction.Toolkit.UI", "UIInputModule");
// Type namespace: UnityEngine.XR.Interaction.Toolkit.UI
namespace UnityEngine::XR::Interaction::Toolkit::UI {
  // Size: 0x120
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.XR.Interaction.Toolkit.UI.UIInputModule
  // [TokenAttribute] Offset: FFFFFFFF
  // [DefaultExecutionOrder] Offset: FFFFFFFF
  class UIInputModule : public ::UnityEngine::EventSystems::BaseInputModule {
    public:
    public:
    // private System.Single m_ClickSpeed
    // Size: 0x4
    // Offset: 0x58
    float m_ClickSpeed;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Single m_MoveDeadzone
    // Size: 0x4
    // Offset: 0x5C
    float m_MoveDeadzone;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Single m_RepeatDelay
    // Size: 0x4
    // Offset: 0x60
    float m_RepeatDelay;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Single m_RepeatRate
    // Size: 0x4
    // Offset: 0x64
    float m_RepeatRate;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Single m_TrackedDeviceDragThresholdMultiplier
    // Size: 0x4
    // Offset: 0x68
    float m_TrackedDeviceDragThresholdMultiplier;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // Padding between fields: m_TrackedDeviceDragThresholdMultiplier and: m_UICamera
    char __padding4[0x4] = {};
    // private UnityEngine.Camera m_UICamera
    // Size: 0x8
    // Offset: 0x70
    ::UnityEngine::Camera* m_UICamera;
    // Field size check
    static_assert(sizeof(::UnityEngine::Camera*) == 0x8);
    // private UnityEngine.Camera m_MainCameraCache
    // Size: 0x8
    // Offset: 0x78
    ::UnityEngine::Camera* m_MainCameraCache;
    // Field size check
    static_assert(sizeof(::UnityEngine::Camera*) == 0x8);
    // private UnityEngine.EventSystems.AxisEventData m_CachedAxisEvent
    // Size: 0x8
    // Offset: 0x80
    ::UnityEngine::EventSystems::AxisEventData* m_CachedAxisEvent;
    // Field size check
    static_assert(sizeof(::UnityEngine::EventSystems::AxisEventData*) == 0x8);
    // private readonly System.Collections.Generic.Dictionary`2<System.Int32,UnityEngine.EventSystems.PointerEventData> m_PointerEventByPointerId
    // Size: 0x8
    // Offset: 0x88
    ::System::Collections::Generic::Dictionary_2<int, ::UnityEngine::EventSystems::PointerEventData*>* m_PointerEventByPointerId;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::Dictionary_2<int, ::UnityEngine::EventSystems::PointerEventData*>*) == 0x8);
    // private readonly System.Collections.Generic.Dictionary`2<System.Int32,UnityEngine.XR.Interaction.Toolkit.UI.TrackedDeviceEventData> m_TrackedDeviceEventByPointerId
    // Size: 0x8
    // Offset: 0x90
    ::System::Collections::Generic::Dictionary_2<int, ::UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceEventData*>* m_TrackedDeviceEventByPointerId;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::Dictionary_2<int, ::UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceEventData*>*) == 0x8);
    // private System.Action`2<UnityEngine.EventSystems.PointerEventData,System.Collections.Generic.List`1<UnityEngine.EventSystems.RaycastResult>> finalizeRaycastResults
    // Size: 0x8
    // Offset: 0x98
    ::System::Action_2<::UnityEngine::EventSystems::PointerEventData*, ::System::Collections::Generic::List_1<::UnityEngine::EventSystems::RaycastResult>*>* finalizeRaycastResults;
    // Field size check
    static_assert(sizeof(::System::Action_2<::UnityEngine::EventSystems::PointerEventData*, ::System::Collections::Generic::List_1<::UnityEngine::EventSystems::RaycastResult>*>*) == 0x8);
    // private System.Action`2<UnityEngine.GameObject,UnityEngine.EventSystems.PointerEventData> pointerEnter
    // Size: 0x8
    // Offset: 0xA0
    ::System::Action_2<::UnityEngine::GameObject*, ::UnityEngine::EventSystems::PointerEventData*>* pointerEnter;
    // Field size check
    static_assert(sizeof(::System::Action_2<::UnityEngine::GameObject*, ::UnityEngine::EventSystems::PointerEventData*>*) == 0x8);
    // private System.Action`2<UnityEngine.GameObject,UnityEngine.EventSystems.PointerEventData> pointerExit
    // Size: 0x8
    // Offset: 0xA8
    ::System::Action_2<::UnityEngine::GameObject*, ::UnityEngine::EventSystems::PointerEventData*>* pointerExit;
    // Field size check
    static_assert(sizeof(::System::Action_2<::UnityEngine::GameObject*, ::UnityEngine::EventSystems::PointerEventData*>*) == 0x8);
    // private System.Action`2<UnityEngine.GameObject,UnityEngine.EventSystems.PointerEventData> pointerDown
    // Size: 0x8
    // Offset: 0xB0
    ::System::Action_2<::UnityEngine::GameObject*, ::UnityEngine::EventSystems::PointerEventData*>* pointerDown;
    // Field size check
    static_assert(sizeof(::System::Action_2<::UnityEngine::GameObject*, ::UnityEngine::EventSystems::PointerEventData*>*) == 0x8);
    // private System.Action`2<UnityEngine.GameObject,UnityEngine.EventSystems.PointerEventData> pointerUp
    // Size: 0x8
    // Offset: 0xB8
    ::System::Action_2<::UnityEngine::GameObject*, ::UnityEngine::EventSystems::PointerEventData*>* pointerUp;
    // Field size check
    static_assert(sizeof(::System::Action_2<::UnityEngine::GameObject*, ::UnityEngine::EventSystems::PointerEventData*>*) == 0x8);
    // private System.Action`2<UnityEngine.GameObject,UnityEngine.EventSystems.PointerEventData> pointerClick
    // Size: 0x8
    // Offset: 0xC0
    ::System::Action_2<::UnityEngine::GameObject*, ::UnityEngine::EventSystems::PointerEventData*>* pointerClick;
    // Field size check
    static_assert(sizeof(::System::Action_2<::UnityEngine::GameObject*, ::UnityEngine::EventSystems::PointerEventData*>*) == 0x8);
    // private System.Action`2<UnityEngine.GameObject,UnityEngine.EventSystems.PointerEventData> pointerMove
    // Size: 0x8
    // Offset: 0xC8
    ::System::Action_2<::UnityEngine::GameObject*, ::UnityEngine::EventSystems::PointerEventData*>* pointerMove;
    // Field size check
    static_assert(sizeof(::System::Action_2<::UnityEngine::GameObject*, ::UnityEngine::EventSystems::PointerEventData*>*) == 0x8);
    // private System.Action`2<UnityEngine.GameObject,UnityEngine.EventSystems.PointerEventData> initializePotentialDrag
    // Size: 0x8
    // Offset: 0xD0
    ::System::Action_2<::UnityEngine::GameObject*, ::UnityEngine::EventSystems::PointerEventData*>* initializePotentialDrag;
    // Field size check
    static_assert(sizeof(::System::Action_2<::UnityEngine::GameObject*, ::UnityEngine::EventSystems::PointerEventData*>*) == 0x8);
    // private System.Action`2<UnityEngine.GameObject,UnityEngine.EventSystems.PointerEventData> beginDrag
    // Size: 0x8
    // Offset: 0xD8
    ::System::Action_2<::UnityEngine::GameObject*, ::UnityEngine::EventSystems::PointerEventData*>* beginDrag;
    // Field size check
    static_assert(sizeof(::System::Action_2<::UnityEngine::GameObject*, ::UnityEngine::EventSystems::PointerEventData*>*) == 0x8);
    // private System.Action`2<UnityEngine.GameObject,UnityEngine.EventSystems.PointerEventData> drag
    // Size: 0x8
    // Offset: 0xE0
    ::System::Action_2<::UnityEngine::GameObject*, ::UnityEngine::EventSystems::PointerEventData*>* drag;
    // Field size check
    static_assert(sizeof(::System::Action_2<::UnityEngine::GameObject*, ::UnityEngine::EventSystems::PointerEventData*>*) == 0x8);
    // private System.Action`2<UnityEngine.GameObject,UnityEngine.EventSystems.PointerEventData> endDrag
    // Size: 0x8
    // Offset: 0xE8
    ::System::Action_2<::UnityEngine::GameObject*, ::UnityEngine::EventSystems::PointerEventData*>* endDrag;
    // Field size check
    static_assert(sizeof(::System::Action_2<::UnityEngine::GameObject*, ::UnityEngine::EventSystems::PointerEventData*>*) == 0x8);
    // private System.Action`2<UnityEngine.GameObject,UnityEngine.EventSystems.PointerEventData> drop
    // Size: 0x8
    // Offset: 0xF0
    ::System::Action_2<::UnityEngine::GameObject*, ::UnityEngine::EventSystems::PointerEventData*>* drop;
    // Field size check
    static_assert(sizeof(::System::Action_2<::UnityEngine::GameObject*, ::UnityEngine::EventSystems::PointerEventData*>*) == 0x8);
    // private System.Action`2<UnityEngine.GameObject,UnityEngine.EventSystems.PointerEventData> scroll
    // Size: 0x8
    // Offset: 0xF8
    ::System::Action_2<::UnityEngine::GameObject*, ::UnityEngine::EventSystems::PointerEventData*>* scroll;
    // Field size check
    static_assert(sizeof(::System::Action_2<::UnityEngine::GameObject*, ::UnityEngine::EventSystems::PointerEventData*>*) == 0x8);
    // private System.Action`2<UnityEngine.GameObject,UnityEngine.EventSystems.BaseEventData> updateSelected
    // Size: 0x8
    // Offset: 0x100
    ::System::Action_2<::UnityEngine::GameObject*, ::UnityEngine::EventSystems::BaseEventData*>* updateSelected;
    // Field size check
    static_assert(sizeof(::System::Action_2<::UnityEngine::GameObject*, ::UnityEngine::EventSystems::BaseEventData*>*) == 0x8);
    // private System.Action`2<UnityEngine.GameObject,UnityEngine.EventSystems.AxisEventData> move
    // Size: 0x8
    // Offset: 0x108
    ::System::Action_2<::UnityEngine::GameObject*, ::UnityEngine::EventSystems::AxisEventData*>* move;
    // Field size check
    static_assert(sizeof(::System::Action_2<::UnityEngine::GameObject*, ::UnityEngine::EventSystems::AxisEventData*>*) == 0x8);
    // private System.Action`2<UnityEngine.GameObject,UnityEngine.EventSystems.BaseEventData> submit
    // Size: 0x8
    // Offset: 0x110
    ::System::Action_2<::UnityEngine::GameObject*, ::UnityEngine::EventSystems::BaseEventData*>* submit;
    // Field size check
    static_assert(sizeof(::System::Action_2<::UnityEngine::GameObject*, ::UnityEngine::EventSystems::BaseEventData*>*) == 0x8);
    // private System.Action`2<UnityEngine.GameObject,UnityEngine.EventSystems.BaseEventData> cancel
    // Size: 0x8
    // Offset: 0x118
    ::System::Action_2<::UnityEngine::GameObject*, ::UnityEngine::EventSystems::BaseEventData*>* cancel;
    // Field size check
    static_assert(sizeof(::System::Action_2<::UnityEngine::GameObject*, ::UnityEngine::EventSystems::BaseEventData*>*) == 0x8);
    public:
    // Get instance field reference: private System.Single m_ClickSpeed
    [[deprecated("Use field access instead!")]] float& dyn_m_ClickSpeed();
    // Get instance field reference: private System.Single m_MoveDeadzone
    [[deprecated("Use field access instead!")]] float& dyn_m_MoveDeadzone();
    // Get instance field reference: private System.Single m_RepeatDelay
    [[deprecated("Use field access instead!")]] float& dyn_m_RepeatDelay();
    // Get instance field reference: private System.Single m_RepeatRate
    [[deprecated("Use field access instead!")]] float& dyn_m_RepeatRate();
    // Get instance field reference: private System.Single m_TrackedDeviceDragThresholdMultiplier
    [[deprecated("Use field access instead!")]] float& dyn_m_TrackedDeviceDragThresholdMultiplier();
    // Get instance field reference: private UnityEngine.Camera m_UICamera
    [[deprecated("Use field access instead!")]] ::UnityEngine::Camera*& dyn_m_UICamera();
    // Get instance field reference: private UnityEngine.Camera m_MainCameraCache
    [[deprecated("Use field access instead!")]] ::UnityEngine::Camera*& dyn_m_MainCameraCache();
    // Get instance field reference: private UnityEngine.EventSystems.AxisEventData m_CachedAxisEvent
    [[deprecated("Use field access instead!")]] ::UnityEngine::EventSystems::AxisEventData*& dyn_m_CachedAxisEvent();
    // Get instance field reference: private readonly System.Collections.Generic.Dictionary`2<System.Int32,UnityEngine.EventSystems.PointerEventData> m_PointerEventByPointerId
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<int, ::UnityEngine::EventSystems::PointerEventData*>*& dyn_m_PointerEventByPointerId();
    // Get instance field reference: private readonly System.Collections.Generic.Dictionary`2<System.Int32,UnityEngine.XR.Interaction.Toolkit.UI.TrackedDeviceEventData> m_TrackedDeviceEventByPointerId
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<int, ::UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceEventData*>*& dyn_m_TrackedDeviceEventByPointerId();
    // Get instance field reference: private System.Action`2<UnityEngine.EventSystems.PointerEventData,System.Collections.Generic.List`1<UnityEngine.EventSystems.RaycastResult>> finalizeRaycastResults
    [[deprecated("Use field access instead!")]] ::System::Action_2<::UnityEngine::EventSystems::PointerEventData*, ::System::Collections::Generic::List_1<::UnityEngine::EventSystems::RaycastResult>*>*& dyn_finalizeRaycastResults();
    // Get instance field reference: private System.Action`2<UnityEngine.GameObject,UnityEngine.EventSystems.PointerEventData> pointerEnter
    [[deprecated("Use field access instead!")]] ::System::Action_2<::UnityEngine::GameObject*, ::UnityEngine::EventSystems::PointerEventData*>*& dyn_pointerEnter();
    // Get instance field reference: private System.Action`2<UnityEngine.GameObject,UnityEngine.EventSystems.PointerEventData> pointerExit
    [[deprecated("Use field access instead!")]] ::System::Action_2<::UnityEngine::GameObject*, ::UnityEngine::EventSystems::PointerEventData*>*& dyn_pointerExit();
    // Get instance field reference: private System.Action`2<UnityEngine.GameObject,UnityEngine.EventSystems.PointerEventData> pointerDown
    [[deprecated("Use field access instead!")]] ::System::Action_2<::UnityEngine::GameObject*, ::UnityEngine::EventSystems::PointerEventData*>*& dyn_pointerDown();
    // Get instance field reference: private System.Action`2<UnityEngine.GameObject,UnityEngine.EventSystems.PointerEventData> pointerUp
    [[deprecated("Use field access instead!")]] ::System::Action_2<::UnityEngine::GameObject*, ::UnityEngine::EventSystems::PointerEventData*>*& dyn_pointerUp();
    // Get instance field reference: private System.Action`2<UnityEngine.GameObject,UnityEngine.EventSystems.PointerEventData> pointerClick
    [[deprecated("Use field access instead!")]] ::System::Action_2<::UnityEngine::GameObject*, ::UnityEngine::EventSystems::PointerEventData*>*& dyn_pointerClick();
    // Get instance field reference: private System.Action`2<UnityEngine.GameObject,UnityEngine.EventSystems.PointerEventData> pointerMove
    [[deprecated("Use field access instead!")]] ::System::Action_2<::UnityEngine::GameObject*, ::UnityEngine::EventSystems::PointerEventData*>*& dyn_pointerMove();
    // Get instance field reference: private System.Action`2<UnityEngine.GameObject,UnityEngine.EventSystems.PointerEventData> initializePotentialDrag
    [[deprecated("Use field access instead!")]] ::System::Action_2<::UnityEngine::GameObject*, ::UnityEngine::EventSystems::PointerEventData*>*& dyn_initializePotentialDrag();
    // Get instance field reference: private System.Action`2<UnityEngine.GameObject,UnityEngine.EventSystems.PointerEventData> beginDrag
    [[deprecated("Use field access instead!")]] ::System::Action_2<::UnityEngine::GameObject*, ::UnityEngine::EventSystems::PointerEventData*>*& dyn_beginDrag();
    // Get instance field reference: private System.Action`2<UnityEngine.GameObject,UnityEngine.EventSystems.PointerEventData> drag
    [[deprecated("Use field access instead!")]] ::System::Action_2<::UnityEngine::GameObject*, ::UnityEngine::EventSystems::PointerEventData*>*& dyn_drag();
    // Get instance field reference: private System.Action`2<UnityEngine.GameObject,UnityEngine.EventSystems.PointerEventData> endDrag
    [[deprecated("Use field access instead!")]] ::System::Action_2<::UnityEngine::GameObject*, ::UnityEngine::EventSystems::PointerEventData*>*& dyn_endDrag();
    // Get instance field reference: private System.Action`2<UnityEngine.GameObject,UnityEngine.EventSystems.PointerEventData> drop
    [[deprecated("Use field access instead!")]] ::System::Action_2<::UnityEngine::GameObject*, ::UnityEngine::EventSystems::PointerEventData*>*& dyn_drop();
    // Get instance field reference: private System.Action`2<UnityEngine.GameObject,UnityEngine.EventSystems.PointerEventData> scroll
    [[deprecated("Use field access instead!")]] ::System::Action_2<::UnityEngine::GameObject*, ::UnityEngine::EventSystems::PointerEventData*>*& dyn_scroll();
    // Get instance field reference: private System.Action`2<UnityEngine.GameObject,UnityEngine.EventSystems.BaseEventData> updateSelected
    [[deprecated("Use field access instead!")]] ::System::Action_2<::UnityEngine::GameObject*, ::UnityEngine::EventSystems::BaseEventData*>*& dyn_updateSelected();
    // Get instance field reference: private System.Action`2<UnityEngine.GameObject,UnityEngine.EventSystems.AxisEventData> move
    [[deprecated("Use field access instead!")]] ::System::Action_2<::UnityEngine::GameObject*, ::UnityEngine::EventSystems::AxisEventData*>*& dyn_move();
    // Get instance field reference: private System.Action`2<UnityEngine.GameObject,UnityEngine.EventSystems.BaseEventData> submit
    [[deprecated("Use field access instead!")]] ::System::Action_2<::UnityEngine::GameObject*, ::UnityEngine::EventSystems::BaseEventData*>*& dyn_submit();
    // Get instance field reference: private System.Action`2<UnityEngine.GameObject,UnityEngine.EventSystems.BaseEventData> cancel
    [[deprecated("Use field access instead!")]] ::System::Action_2<::UnityEngine::GameObject*, ::UnityEngine::EventSystems::BaseEventData*>*& dyn_cancel();
    // public System.Single get_clickSpeed()
    // Offset: 0x54213C0
    float get_clickSpeed();
    // public System.Void set_clickSpeed(System.Single value)
    // Offset: 0x54213C8
    void set_clickSpeed(float value);
    // public System.Single get_moveDeadzone()
    // Offset: 0x54213D0
    float get_moveDeadzone();
    // public System.Void set_moveDeadzone(System.Single value)
    // Offset: 0x54213D8
    void set_moveDeadzone(float value);
    // public System.Single get_repeatDelay()
    // Offset: 0x54213E0
    float get_repeatDelay();
    // public System.Void set_repeatDelay(System.Single value)
    // Offset: 0x54213E8
    void set_repeatDelay(float value);
    // public System.Single get_repeatRate()
    // Offset: 0x54213F0
    float get_repeatRate();
    // public System.Void set_repeatRate(System.Single value)
    // Offset: 0x54213F8
    void set_repeatRate(float value);
    // public System.Single get_trackedDeviceDragThresholdMultiplier()
    // Offset: 0x5421400
    float get_trackedDeviceDragThresholdMultiplier();
    // public System.Void set_trackedDeviceDragThresholdMultiplier(System.Single value)
    // Offset: 0x5421408
    void set_trackedDeviceDragThresholdMultiplier(float value);
    // public UnityEngine.Camera get_uiCamera()
    // Offset: 0x5421410
    ::UnityEngine::Camera* get_uiCamera();
    // public System.Void set_uiCamera(UnityEngine.Camera value)
    // Offset: 0x54214E4
    void set_uiCamera(::UnityEngine::Camera* value);
    // protected System.Void Update()
    // Offset: 0x54214EC
    void Update();
    // protected System.Void DoProcess()
    // Offset: 0x54215F0
    void DoProcess();
    // protected System.Boolean SendUpdateEventToSelectedObject()
    // Offset: 0x54215F4
    bool SendUpdateEventToSelectedObject();
    // private UnityEngine.EventSystems.RaycastResult PerformRaycast(UnityEngine.EventSystems.PointerEventData eventData)
    // Offset: 0x5421C04
    ::UnityEngine::EventSystems::RaycastResult PerformRaycast(::UnityEngine::EventSystems::PointerEventData* eventData);
    // System.Void ProcessMouseState(ref UnityEngine.XR.Interaction.Toolkit.UI.MouseModel mouseState)
    // Offset: 0x5421D28
    void ProcessMouseState(ByRef<::UnityEngine::XR::Interaction::Toolkit::UI::MouseModel> mouseState);
    // private System.Void ProcessPointerMovement(UnityEngine.EventSystems.PointerEventData eventData)
    // Offset: 0x542277C
    void ProcessPointerMovement(::UnityEngine::EventSystems::PointerEventData* eventData);
    // private System.Void ProcessPointerButton(UnityEngine.XR.Interaction.Toolkit.UI.ButtonDeltaState mouseButtonChanges, UnityEngine.EventSystems.PointerEventData eventData)
    // Offset: 0x5422048
    void ProcessPointerButton(::UnityEngine::XR::Interaction::Toolkit::UI::ButtonDeltaState mouseButtonChanges, ::UnityEngine::EventSystems::PointerEventData* eventData);
    // private System.Void ProcessPointerButtonDrag(UnityEngine.EventSystems.PointerEventData eventData, UnityEngine.InputSystem.UI.UIPointerType pointerType, System.Single pixelDragThresholdMultiplier)
    // Offset: 0x54231A8
    void ProcessPointerButtonDrag(::UnityEngine::EventSystems::PointerEventData* eventData, ::UnityEngine::InputSystem::UI::UIPointerType pointerType, float pixelDragThresholdMultiplier);
    // private System.Void ProcessScrollWheel(UnityEngine.EventSystems.PointerEventData eventData)
    // Offset: 0x5422FF8
    void ProcessScrollWheel(::UnityEngine::EventSystems::PointerEventData* eventData);
    // System.Void ProcessTouch(ref UnityEngine.XR.Interaction.Toolkit.UI.TouchModel touchState)
    // Offset: 0x54234F4
    void ProcessTouch(ByRef<::UnityEngine::XR::Interaction::Toolkit::UI::TouchModel> touchState);
    // System.Void ProcessTrackedDevice(ref UnityEngine.XR.Interaction.Toolkit.UI.TrackedDeviceModel deviceState, System.Boolean force)
    // Offset: 0x5423608
    void ProcessTrackedDevice(ByRef<::UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceModel> deviceState, bool force);
    // private System.Boolean TryGetCamera(UnityEngine.EventSystems.PointerEventData eventData, out UnityEngine.Camera screenPointCamera)
    // Offset: 0x5423920
    bool TryGetCamera(::UnityEngine::EventSystems::PointerEventData* eventData, ByRef<::UnityEngine::Camera*> screenPointCamera);
    // System.Void ProcessNavigationState(ref UnityEngine.XR.Interaction.Toolkit.UI.NavigationModel navigationState)
    // Offset: 0x5423A44
    void ProcessNavigationState(ByRef<::UnityEngine::XR::Interaction::Toolkit::UI::NavigationModel> navigationState);
    // System.Void RemovePointerEventData(System.Int32 pointerId)
    // Offset: 0x5423F58
    void RemovePointerEventData(int pointerId);
    // private UnityEngine.EventSystems.PointerEventData GetOrCreateCachedPointerEvent(System.Int32 pointerId)
    // Offset: 0x5421F74
    ::UnityEngine::EventSystems::PointerEventData* GetOrCreateCachedPointerEvent(int pointerId);
    // private UnityEngine.XR.Interaction.Toolkit.UI.TrackedDeviceEventData GetOrCreateCachedTrackedDeviceEvent(System.Int32 pointerId)
    // Offset: 0x542384C
    ::UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceEventData* GetOrCreateCachedTrackedDeviceEvent(int pointerId);
    // private UnityEngine.EventSystems.AxisEventData GetOrCreateCachedAxisEvent()
    // Offset: 0x5423ED4
    ::UnityEngine::EventSystems::AxisEventData* GetOrCreateCachedAxisEvent();
    // public System.Void add_finalizeRaycastResults(System.Action`2<UnityEngine.EventSystems.PointerEventData,System.Collections.Generic.List`1<UnityEngine.EventSystems.RaycastResult>> value)
    // Offset: 0x5423FE8
    void add_finalizeRaycastResults(::System::Action_2<::UnityEngine::EventSystems::PointerEventData*, ::System::Collections::Generic::List_1<::UnityEngine::EventSystems::RaycastResult>*>* value);
    // public System.Void remove_finalizeRaycastResults(System.Action`2<UnityEngine.EventSystems.PointerEventData,System.Collections.Generic.List`1<UnityEngine.EventSystems.RaycastResult>> value)
    // Offset: 0x5424098
    void remove_finalizeRaycastResults(::System::Action_2<::UnityEngine::EventSystems::PointerEventData*, ::System::Collections::Generic::List_1<::UnityEngine::EventSystems::RaycastResult>*>* value);
    // public System.Void add_pointerEnter(System.Action`2<UnityEngine.GameObject,UnityEngine.EventSystems.PointerEventData> value)
    // Offset: 0x5424148
    void add_pointerEnter(::System::Action_2<::UnityEngine::GameObject*, ::UnityEngine::EventSystems::PointerEventData*>* value);
    // public System.Void remove_pointerEnter(System.Action`2<UnityEngine.GameObject,UnityEngine.EventSystems.PointerEventData> value)
    // Offset: 0x54241F8
    void remove_pointerEnter(::System::Action_2<::UnityEngine::GameObject*, ::UnityEngine::EventSystems::PointerEventData*>* value);
    // public System.Void add_pointerExit(System.Action`2<UnityEngine.GameObject,UnityEngine.EventSystems.PointerEventData> value)
    // Offset: 0x54242A8
    void add_pointerExit(::System::Action_2<::UnityEngine::GameObject*, ::UnityEngine::EventSystems::PointerEventData*>* value);
    // public System.Void remove_pointerExit(System.Action`2<UnityEngine.GameObject,UnityEngine.EventSystems.PointerEventData> value)
    // Offset: 0x5424358
    void remove_pointerExit(::System::Action_2<::UnityEngine::GameObject*, ::UnityEngine::EventSystems::PointerEventData*>* value);
    // public System.Void add_pointerDown(System.Action`2<UnityEngine.GameObject,UnityEngine.EventSystems.PointerEventData> value)
    // Offset: 0x5424408
    void add_pointerDown(::System::Action_2<::UnityEngine::GameObject*, ::UnityEngine::EventSystems::PointerEventData*>* value);
    // public System.Void remove_pointerDown(System.Action`2<UnityEngine.GameObject,UnityEngine.EventSystems.PointerEventData> value)
    // Offset: 0x54244B8
    void remove_pointerDown(::System::Action_2<::UnityEngine::GameObject*, ::UnityEngine::EventSystems::PointerEventData*>* value);
    // public System.Void add_pointerUp(System.Action`2<UnityEngine.GameObject,UnityEngine.EventSystems.PointerEventData> value)
    // Offset: 0x5424568
    void add_pointerUp(::System::Action_2<::UnityEngine::GameObject*, ::UnityEngine::EventSystems::PointerEventData*>* value);
    // public System.Void remove_pointerUp(System.Action`2<UnityEngine.GameObject,UnityEngine.EventSystems.PointerEventData> value)
    // Offset: 0x5424618
    void remove_pointerUp(::System::Action_2<::UnityEngine::GameObject*, ::UnityEngine::EventSystems::PointerEventData*>* value);
    // public System.Void add_pointerClick(System.Action`2<UnityEngine.GameObject,UnityEngine.EventSystems.PointerEventData> value)
    // Offset: 0x54246C8
    void add_pointerClick(::System::Action_2<::UnityEngine::GameObject*, ::UnityEngine::EventSystems::PointerEventData*>* value);
    // public System.Void remove_pointerClick(System.Action`2<UnityEngine.GameObject,UnityEngine.EventSystems.PointerEventData> value)
    // Offset: 0x5424778
    void remove_pointerClick(::System::Action_2<::UnityEngine::GameObject*, ::UnityEngine::EventSystems::PointerEventData*>* value);
    // public System.Void add_pointerMove(System.Action`2<UnityEngine.GameObject,UnityEngine.EventSystems.PointerEventData> value)
    // Offset: 0x5424828
    void add_pointerMove(::System::Action_2<::UnityEngine::GameObject*, ::UnityEngine::EventSystems::PointerEventData*>* value);
    // public System.Void remove_pointerMove(System.Action`2<UnityEngine.GameObject,UnityEngine.EventSystems.PointerEventData> value)
    // Offset: 0x54248D8
    void remove_pointerMove(::System::Action_2<::UnityEngine::GameObject*, ::UnityEngine::EventSystems::PointerEventData*>* value);
    // public System.Void add_initializePotentialDrag(System.Action`2<UnityEngine.GameObject,UnityEngine.EventSystems.PointerEventData> value)
    // Offset: 0x5424988
    void add_initializePotentialDrag(::System::Action_2<::UnityEngine::GameObject*, ::UnityEngine::EventSystems::PointerEventData*>* value);
    // public System.Void remove_initializePotentialDrag(System.Action`2<UnityEngine.GameObject,UnityEngine.EventSystems.PointerEventData> value)
    // Offset: 0x5424A38
    void remove_initializePotentialDrag(::System::Action_2<::UnityEngine::GameObject*, ::UnityEngine::EventSystems::PointerEventData*>* value);
    // public System.Void add_beginDrag(System.Action`2<UnityEngine.GameObject,UnityEngine.EventSystems.PointerEventData> value)
    // Offset: 0x5424AE8
    void add_beginDrag(::System::Action_2<::UnityEngine::GameObject*, ::UnityEngine::EventSystems::PointerEventData*>* value);
    // public System.Void remove_beginDrag(System.Action`2<UnityEngine.GameObject,UnityEngine.EventSystems.PointerEventData> value)
    // Offset: 0x5424B98
    void remove_beginDrag(::System::Action_2<::UnityEngine::GameObject*, ::UnityEngine::EventSystems::PointerEventData*>* value);
    // public System.Void add_drag(System.Action`2<UnityEngine.GameObject,UnityEngine.EventSystems.PointerEventData> value)
    // Offset: 0x5424C48
    void add_drag(::System::Action_2<::UnityEngine::GameObject*, ::UnityEngine::EventSystems::PointerEventData*>* value);
    // public System.Void remove_drag(System.Action`2<UnityEngine.GameObject,UnityEngine.EventSystems.PointerEventData> value)
    // Offset: 0x5424CF8
    void remove_drag(::System::Action_2<::UnityEngine::GameObject*, ::UnityEngine::EventSystems::PointerEventData*>* value);
    // public System.Void add_endDrag(System.Action`2<UnityEngine.GameObject,UnityEngine.EventSystems.PointerEventData> value)
    // Offset: 0x5424DA8
    void add_endDrag(::System::Action_2<::UnityEngine::GameObject*, ::UnityEngine::EventSystems::PointerEventData*>* value);
    // public System.Void remove_endDrag(System.Action`2<UnityEngine.GameObject,UnityEngine.EventSystems.PointerEventData> value)
    // Offset: 0x5424E58
    void remove_endDrag(::System::Action_2<::UnityEngine::GameObject*, ::UnityEngine::EventSystems::PointerEventData*>* value);
    // public System.Void add_drop(System.Action`2<UnityEngine.GameObject,UnityEngine.EventSystems.PointerEventData> value)
    // Offset: 0x5424F08
    void add_drop(::System::Action_2<::UnityEngine::GameObject*, ::UnityEngine::EventSystems::PointerEventData*>* value);
    // public System.Void remove_drop(System.Action`2<UnityEngine.GameObject,UnityEngine.EventSystems.PointerEventData> value)
    // Offset: 0x5424FB8
    void remove_drop(::System::Action_2<::UnityEngine::GameObject*, ::UnityEngine::EventSystems::PointerEventData*>* value);
    // public System.Void add_scroll(System.Action`2<UnityEngine.GameObject,UnityEngine.EventSystems.PointerEventData> value)
    // Offset: 0x5425068
    void add_scroll(::System::Action_2<::UnityEngine::GameObject*, ::UnityEngine::EventSystems::PointerEventData*>* value);
    // public System.Void remove_scroll(System.Action`2<UnityEngine.GameObject,UnityEngine.EventSystems.PointerEventData> value)
    // Offset: 0x5425118
    void remove_scroll(::System::Action_2<::UnityEngine::GameObject*, ::UnityEngine::EventSystems::PointerEventData*>* value);
    // public System.Void add_updateSelected(System.Action`2<UnityEngine.GameObject,UnityEngine.EventSystems.BaseEventData> value)
    // Offset: 0x54251C8
    void add_updateSelected(::System::Action_2<::UnityEngine::GameObject*, ::UnityEngine::EventSystems::BaseEventData*>* value);
    // public System.Void remove_updateSelected(System.Action`2<UnityEngine.GameObject,UnityEngine.EventSystems.BaseEventData> value)
    // Offset: 0x542527C
    void remove_updateSelected(::System::Action_2<::UnityEngine::GameObject*, ::UnityEngine::EventSystems::BaseEventData*>* value);
    // public System.Void add_move(System.Action`2<UnityEngine.GameObject,UnityEngine.EventSystems.AxisEventData> value)
    // Offset: 0x5425330
    void add_move(::System::Action_2<::UnityEngine::GameObject*, ::UnityEngine::EventSystems::AxisEventData*>* value);
    // public System.Void remove_move(System.Action`2<UnityEngine.GameObject,UnityEngine.EventSystems.AxisEventData> value)
    // Offset: 0x54253E4
    void remove_move(::System::Action_2<::UnityEngine::GameObject*, ::UnityEngine::EventSystems::AxisEventData*>* value);
    // public System.Void add_submit(System.Action`2<UnityEngine.GameObject,UnityEngine.EventSystems.BaseEventData> value)
    // Offset: 0x5425498
    void add_submit(::System::Action_2<::UnityEngine::GameObject*, ::UnityEngine::EventSystems::BaseEventData*>* value);
    // public System.Void remove_submit(System.Action`2<UnityEngine.GameObject,UnityEngine.EventSystems.BaseEventData> value)
    // Offset: 0x542554C
    void remove_submit(::System::Action_2<::UnityEngine::GameObject*, ::UnityEngine::EventSystems::BaseEventData*>* value);
    // public System.Void add_cancel(System.Action`2<UnityEngine.GameObject,UnityEngine.EventSystems.BaseEventData> value)
    // Offset: 0x5425600
    void add_cancel(::System::Action_2<::UnityEngine::GameObject*, ::UnityEngine::EventSystems::BaseEventData*>* value);
    // public System.Void remove_cancel(System.Action`2<UnityEngine.GameObject,UnityEngine.EventSystems.BaseEventData> value)
    // Offset: 0x54256B4
    void remove_cancel(::System::Action_2<::UnityEngine::GameObject*, ::UnityEngine::EventSystems::BaseEventData*>* value);
    // protected System.Void .ctor()
    // Offset: 0x5425768
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static UIInputModule* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<UIInputModule*, creationType>()));
    }
    // public override System.Void Process()
    // Offset: 0x5421750
    // Implemented from: UnityEngine.EventSystems.BaseInputModule
    // Base method: System.Void BaseInputModule::Process()
    void Process();
    // public override System.Void ActivateModule()
    // Offset: 0x5421754
    // Implemented from: UnityEngine.EventSystems.BaseInputModule
    // Base method: System.Void BaseInputModule::ActivateModule()
    void ActivateModule();
    // public override System.Boolean IsPointerOverGameObject(System.Int32 pointerId)
    // Offset: 0x5421808
    // Implemented from: UnityEngine.EventSystems.BaseInputModule
    // Base method: System.Boolean BaseInputModule::IsPointerOverGameObject(System.Int32 pointerId)
    bool IsPointerOverGameObject(int pointerId);
  }; // UnityEngine.XR.Interaction.Toolkit.UI.UIInputModule
  #pragma pack(pop)
  static check_size<sizeof(UIInputModule), 280 + sizeof(::System::Action_2<::UnityEngine::GameObject*, ::UnityEngine::EventSystems::BaseEventData*>*)> __UnityEngine_XR_Interaction_Toolkit_UI_UIInputModuleSizeCheck;
  static_assert(sizeof(UIInputModule) == 0x120);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::get_clickSpeed
// Il2CppName: get_clickSpeed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::*)()>(&UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::get_clickSpeed)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule*), "get_clickSpeed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::set_clickSpeed
// Il2CppName: set_clickSpeed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::*)(float)>(&UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::set_clickSpeed)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule*), "set_clickSpeed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::get_moveDeadzone
// Il2CppName: get_moveDeadzone
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::*)()>(&UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::get_moveDeadzone)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule*), "get_moveDeadzone", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::set_moveDeadzone
// Il2CppName: set_moveDeadzone
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::*)(float)>(&UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::set_moveDeadzone)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule*), "set_moveDeadzone", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::get_repeatDelay
// Il2CppName: get_repeatDelay
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::*)()>(&UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::get_repeatDelay)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule*), "get_repeatDelay", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::set_repeatDelay
// Il2CppName: set_repeatDelay
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::*)(float)>(&UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::set_repeatDelay)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule*), "set_repeatDelay", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::get_repeatRate
// Il2CppName: get_repeatRate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::*)()>(&UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::get_repeatRate)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule*), "get_repeatRate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::set_repeatRate
// Il2CppName: set_repeatRate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::*)(float)>(&UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::set_repeatRate)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule*), "set_repeatRate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::get_trackedDeviceDragThresholdMultiplier
// Il2CppName: get_trackedDeviceDragThresholdMultiplier
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::*)()>(&UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::get_trackedDeviceDragThresholdMultiplier)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule*), "get_trackedDeviceDragThresholdMultiplier", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::set_trackedDeviceDragThresholdMultiplier
// Il2CppName: set_trackedDeviceDragThresholdMultiplier
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::*)(float)>(&UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::set_trackedDeviceDragThresholdMultiplier)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule*), "set_trackedDeviceDragThresholdMultiplier", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::get_uiCamera
// Il2CppName: get_uiCamera
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Camera* (UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::*)()>(&UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::get_uiCamera)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule*), "get_uiCamera", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::set_uiCamera
// Il2CppName: set_uiCamera
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::*)(::UnityEngine::Camera*)>(&UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::set_uiCamera)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Camera")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule*), "set_uiCamera", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::Update
// Il2CppName: Update
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::*)()>(&UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::Update)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule*), "Update", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::DoProcess
// Il2CppName: DoProcess
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::*)()>(&UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::DoProcess)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule*), "DoProcess", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::SendUpdateEventToSelectedObject
// Il2CppName: SendUpdateEventToSelectedObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::*)()>(&UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::SendUpdateEventToSelectedObject)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule*), "SendUpdateEventToSelectedObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::PerformRaycast
// Il2CppName: PerformRaycast
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::EventSystems::RaycastResult (UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::*)(::UnityEngine::EventSystems::PointerEventData*)>(&UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::PerformRaycast)> {
  static const MethodInfo* get() {
    static auto* eventData = &::il2cpp_utils::GetClassFromName("UnityEngine.EventSystems", "PointerEventData")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule*), "PerformRaycast", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{eventData});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::ProcessMouseState
// Il2CppName: ProcessMouseState
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::*)(ByRef<::UnityEngine::XR::Interaction::Toolkit::UI::MouseModel>)>(&UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::ProcessMouseState)> {
  static const MethodInfo* get() {
    static auto* mouseState = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit.UI", "MouseModel")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule*), "ProcessMouseState", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{mouseState});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::ProcessPointerMovement
// Il2CppName: ProcessPointerMovement
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::*)(::UnityEngine::EventSystems::PointerEventData*)>(&UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::ProcessPointerMovement)> {
  static const MethodInfo* get() {
    static auto* eventData = &::il2cpp_utils::GetClassFromName("UnityEngine.EventSystems", "PointerEventData")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule*), "ProcessPointerMovement", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{eventData});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::ProcessPointerButton
// Il2CppName: ProcessPointerButton
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::*)(::UnityEngine::XR::Interaction::Toolkit::UI::ButtonDeltaState, ::UnityEngine::EventSystems::PointerEventData*)>(&UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::ProcessPointerButton)> {
  static const MethodInfo* get() {
    static auto* mouseButtonChanges = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit.UI", "ButtonDeltaState")->byval_arg;
    static auto* eventData = &::il2cpp_utils::GetClassFromName("UnityEngine.EventSystems", "PointerEventData")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule*), "ProcessPointerButton", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{mouseButtonChanges, eventData});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::ProcessPointerButtonDrag
// Il2CppName: ProcessPointerButtonDrag
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::*)(::UnityEngine::EventSystems::PointerEventData*, ::UnityEngine::InputSystem::UI::UIPointerType, float)>(&UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::ProcessPointerButtonDrag)> {
  static const MethodInfo* get() {
    static auto* eventData = &::il2cpp_utils::GetClassFromName("UnityEngine.EventSystems", "PointerEventData")->byval_arg;
    static auto* pointerType = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem.UI", "UIPointerType")->byval_arg;
    static auto* pixelDragThresholdMultiplier = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule*), "ProcessPointerButtonDrag", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{eventData, pointerType, pixelDragThresholdMultiplier});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::ProcessScrollWheel
// Il2CppName: ProcessScrollWheel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::*)(::UnityEngine::EventSystems::PointerEventData*)>(&UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::ProcessScrollWheel)> {
  static const MethodInfo* get() {
    static auto* eventData = &::il2cpp_utils::GetClassFromName("UnityEngine.EventSystems", "PointerEventData")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule*), "ProcessScrollWheel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{eventData});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::ProcessTouch
// Il2CppName: ProcessTouch
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::*)(ByRef<::UnityEngine::XR::Interaction::Toolkit::UI::TouchModel>)>(&UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::ProcessTouch)> {
  static const MethodInfo* get() {
    static auto* touchState = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit.UI", "TouchModel")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule*), "ProcessTouch", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{touchState});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::ProcessTrackedDevice
// Il2CppName: ProcessTrackedDevice
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::*)(ByRef<::UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceModel>, bool)>(&UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::ProcessTrackedDevice)> {
  static const MethodInfo* get() {
    static auto* deviceState = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit.UI", "TrackedDeviceModel")->this_arg;
    static auto* force = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule*), "ProcessTrackedDevice", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{deviceState, force});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::TryGetCamera
// Il2CppName: TryGetCamera
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::*)(::UnityEngine::EventSystems::PointerEventData*, ByRef<::UnityEngine::Camera*>)>(&UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::TryGetCamera)> {
  static const MethodInfo* get() {
    static auto* eventData = &::il2cpp_utils::GetClassFromName("UnityEngine.EventSystems", "PointerEventData")->byval_arg;
    static auto* screenPointCamera = &::il2cpp_utils::GetClassFromName("UnityEngine", "Camera")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule*), "TryGetCamera", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{eventData, screenPointCamera});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::ProcessNavigationState
// Il2CppName: ProcessNavigationState
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::*)(ByRef<::UnityEngine::XR::Interaction::Toolkit::UI::NavigationModel>)>(&UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::ProcessNavigationState)> {
  static const MethodInfo* get() {
    static auto* navigationState = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit.UI", "NavigationModel")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule*), "ProcessNavigationState", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{navigationState});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::RemovePointerEventData
// Il2CppName: RemovePointerEventData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::*)(int)>(&UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::RemovePointerEventData)> {
  static const MethodInfo* get() {
    static auto* pointerId = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule*), "RemovePointerEventData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{pointerId});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::GetOrCreateCachedPointerEvent
// Il2CppName: GetOrCreateCachedPointerEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::EventSystems::PointerEventData* (UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::*)(int)>(&UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::GetOrCreateCachedPointerEvent)> {
  static const MethodInfo* get() {
    static auto* pointerId = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule*), "GetOrCreateCachedPointerEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{pointerId});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::GetOrCreateCachedTrackedDeviceEvent
// Il2CppName: GetOrCreateCachedTrackedDeviceEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceEventData* (UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::*)(int)>(&UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::GetOrCreateCachedTrackedDeviceEvent)> {
  static const MethodInfo* get() {
    static auto* pointerId = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule*), "GetOrCreateCachedTrackedDeviceEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{pointerId});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::GetOrCreateCachedAxisEvent
// Il2CppName: GetOrCreateCachedAxisEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::EventSystems::AxisEventData* (UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::*)()>(&UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::GetOrCreateCachedAxisEvent)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule*), "GetOrCreateCachedAxisEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::add_finalizeRaycastResults
// Il2CppName: add_finalizeRaycastResults
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::*)(::System::Action_2<::UnityEngine::EventSystems::PointerEventData*, ::System::Collections::Generic::List_1<::UnityEngine::EventSystems::RaycastResult>*>*)>(&UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::add_finalizeRaycastResults)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.EventSystems", "PointerEventData"), ::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.EventSystems", "RaycastResult")})})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule*), "add_finalizeRaycastResults", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::remove_finalizeRaycastResults
// Il2CppName: remove_finalizeRaycastResults
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::*)(::System::Action_2<::UnityEngine::EventSystems::PointerEventData*, ::System::Collections::Generic::List_1<::UnityEngine::EventSystems::RaycastResult>*>*)>(&UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::remove_finalizeRaycastResults)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.EventSystems", "PointerEventData"), ::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.EventSystems", "RaycastResult")})})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule*), "remove_finalizeRaycastResults", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::add_pointerEnter
// Il2CppName: add_pointerEnter
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::*)(::System::Action_2<::UnityEngine::GameObject*, ::UnityEngine::EventSystems::PointerEventData*>*)>(&UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::add_pointerEnter)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject"), ::il2cpp_utils::GetClassFromName("UnityEngine.EventSystems", "PointerEventData")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule*), "add_pointerEnter", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::remove_pointerEnter
// Il2CppName: remove_pointerEnter
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::*)(::System::Action_2<::UnityEngine::GameObject*, ::UnityEngine::EventSystems::PointerEventData*>*)>(&UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::remove_pointerEnter)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject"), ::il2cpp_utils::GetClassFromName("UnityEngine.EventSystems", "PointerEventData")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule*), "remove_pointerEnter", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::add_pointerExit
// Il2CppName: add_pointerExit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::*)(::System::Action_2<::UnityEngine::GameObject*, ::UnityEngine::EventSystems::PointerEventData*>*)>(&UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::add_pointerExit)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject"), ::il2cpp_utils::GetClassFromName("UnityEngine.EventSystems", "PointerEventData")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule*), "add_pointerExit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::remove_pointerExit
// Il2CppName: remove_pointerExit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::*)(::System::Action_2<::UnityEngine::GameObject*, ::UnityEngine::EventSystems::PointerEventData*>*)>(&UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::remove_pointerExit)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject"), ::il2cpp_utils::GetClassFromName("UnityEngine.EventSystems", "PointerEventData")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule*), "remove_pointerExit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::add_pointerDown
// Il2CppName: add_pointerDown
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::*)(::System::Action_2<::UnityEngine::GameObject*, ::UnityEngine::EventSystems::PointerEventData*>*)>(&UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::add_pointerDown)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject"), ::il2cpp_utils::GetClassFromName("UnityEngine.EventSystems", "PointerEventData")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule*), "add_pointerDown", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::remove_pointerDown
// Il2CppName: remove_pointerDown
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::*)(::System::Action_2<::UnityEngine::GameObject*, ::UnityEngine::EventSystems::PointerEventData*>*)>(&UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::remove_pointerDown)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject"), ::il2cpp_utils::GetClassFromName("UnityEngine.EventSystems", "PointerEventData")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule*), "remove_pointerDown", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::add_pointerUp
// Il2CppName: add_pointerUp
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::*)(::System::Action_2<::UnityEngine::GameObject*, ::UnityEngine::EventSystems::PointerEventData*>*)>(&UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::add_pointerUp)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject"), ::il2cpp_utils::GetClassFromName("UnityEngine.EventSystems", "PointerEventData")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule*), "add_pointerUp", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::remove_pointerUp
// Il2CppName: remove_pointerUp
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::*)(::System::Action_2<::UnityEngine::GameObject*, ::UnityEngine::EventSystems::PointerEventData*>*)>(&UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::remove_pointerUp)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject"), ::il2cpp_utils::GetClassFromName("UnityEngine.EventSystems", "PointerEventData")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule*), "remove_pointerUp", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::add_pointerClick
// Il2CppName: add_pointerClick
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::*)(::System::Action_2<::UnityEngine::GameObject*, ::UnityEngine::EventSystems::PointerEventData*>*)>(&UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::add_pointerClick)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject"), ::il2cpp_utils::GetClassFromName("UnityEngine.EventSystems", "PointerEventData")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule*), "add_pointerClick", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::remove_pointerClick
// Il2CppName: remove_pointerClick
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::*)(::System::Action_2<::UnityEngine::GameObject*, ::UnityEngine::EventSystems::PointerEventData*>*)>(&UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::remove_pointerClick)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject"), ::il2cpp_utils::GetClassFromName("UnityEngine.EventSystems", "PointerEventData")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule*), "remove_pointerClick", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::add_pointerMove
// Il2CppName: add_pointerMove
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::*)(::System::Action_2<::UnityEngine::GameObject*, ::UnityEngine::EventSystems::PointerEventData*>*)>(&UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::add_pointerMove)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject"), ::il2cpp_utils::GetClassFromName("UnityEngine.EventSystems", "PointerEventData")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule*), "add_pointerMove", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::remove_pointerMove
// Il2CppName: remove_pointerMove
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::*)(::System::Action_2<::UnityEngine::GameObject*, ::UnityEngine::EventSystems::PointerEventData*>*)>(&UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::remove_pointerMove)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject"), ::il2cpp_utils::GetClassFromName("UnityEngine.EventSystems", "PointerEventData")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule*), "remove_pointerMove", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::add_initializePotentialDrag
// Il2CppName: add_initializePotentialDrag
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::*)(::System::Action_2<::UnityEngine::GameObject*, ::UnityEngine::EventSystems::PointerEventData*>*)>(&UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::add_initializePotentialDrag)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject"), ::il2cpp_utils::GetClassFromName("UnityEngine.EventSystems", "PointerEventData")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule*), "add_initializePotentialDrag", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::remove_initializePotentialDrag
// Il2CppName: remove_initializePotentialDrag
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::*)(::System::Action_2<::UnityEngine::GameObject*, ::UnityEngine::EventSystems::PointerEventData*>*)>(&UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::remove_initializePotentialDrag)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject"), ::il2cpp_utils::GetClassFromName("UnityEngine.EventSystems", "PointerEventData")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule*), "remove_initializePotentialDrag", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::add_beginDrag
// Il2CppName: add_beginDrag
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::*)(::System::Action_2<::UnityEngine::GameObject*, ::UnityEngine::EventSystems::PointerEventData*>*)>(&UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::add_beginDrag)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject"), ::il2cpp_utils::GetClassFromName("UnityEngine.EventSystems", "PointerEventData")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule*), "add_beginDrag", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::remove_beginDrag
// Il2CppName: remove_beginDrag
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::*)(::System::Action_2<::UnityEngine::GameObject*, ::UnityEngine::EventSystems::PointerEventData*>*)>(&UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::remove_beginDrag)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject"), ::il2cpp_utils::GetClassFromName("UnityEngine.EventSystems", "PointerEventData")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule*), "remove_beginDrag", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::add_drag
// Il2CppName: add_drag
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::*)(::System::Action_2<::UnityEngine::GameObject*, ::UnityEngine::EventSystems::PointerEventData*>*)>(&UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::add_drag)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject"), ::il2cpp_utils::GetClassFromName("UnityEngine.EventSystems", "PointerEventData")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule*), "add_drag", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::remove_drag
// Il2CppName: remove_drag
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::*)(::System::Action_2<::UnityEngine::GameObject*, ::UnityEngine::EventSystems::PointerEventData*>*)>(&UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::remove_drag)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject"), ::il2cpp_utils::GetClassFromName("UnityEngine.EventSystems", "PointerEventData")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule*), "remove_drag", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::add_endDrag
// Il2CppName: add_endDrag
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::*)(::System::Action_2<::UnityEngine::GameObject*, ::UnityEngine::EventSystems::PointerEventData*>*)>(&UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::add_endDrag)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject"), ::il2cpp_utils::GetClassFromName("UnityEngine.EventSystems", "PointerEventData")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule*), "add_endDrag", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::remove_endDrag
// Il2CppName: remove_endDrag
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::*)(::System::Action_2<::UnityEngine::GameObject*, ::UnityEngine::EventSystems::PointerEventData*>*)>(&UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::remove_endDrag)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject"), ::il2cpp_utils::GetClassFromName("UnityEngine.EventSystems", "PointerEventData")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule*), "remove_endDrag", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::add_drop
// Il2CppName: add_drop
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::*)(::System::Action_2<::UnityEngine::GameObject*, ::UnityEngine::EventSystems::PointerEventData*>*)>(&UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::add_drop)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject"), ::il2cpp_utils::GetClassFromName("UnityEngine.EventSystems", "PointerEventData")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule*), "add_drop", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::remove_drop
// Il2CppName: remove_drop
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::*)(::System::Action_2<::UnityEngine::GameObject*, ::UnityEngine::EventSystems::PointerEventData*>*)>(&UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::remove_drop)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject"), ::il2cpp_utils::GetClassFromName("UnityEngine.EventSystems", "PointerEventData")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule*), "remove_drop", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::add_scroll
// Il2CppName: add_scroll
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::*)(::System::Action_2<::UnityEngine::GameObject*, ::UnityEngine::EventSystems::PointerEventData*>*)>(&UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::add_scroll)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject"), ::il2cpp_utils::GetClassFromName("UnityEngine.EventSystems", "PointerEventData")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule*), "add_scroll", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::remove_scroll
// Il2CppName: remove_scroll
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::*)(::System::Action_2<::UnityEngine::GameObject*, ::UnityEngine::EventSystems::PointerEventData*>*)>(&UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::remove_scroll)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject"), ::il2cpp_utils::GetClassFromName("UnityEngine.EventSystems", "PointerEventData")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule*), "remove_scroll", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::add_updateSelected
// Il2CppName: add_updateSelected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::*)(::System::Action_2<::UnityEngine::GameObject*, ::UnityEngine::EventSystems::BaseEventData*>*)>(&UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::add_updateSelected)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject"), ::il2cpp_utils::GetClassFromName("UnityEngine.EventSystems", "BaseEventData")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule*), "add_updateSelected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::remove_updateSelected
// Il2CppName: remove_updateSelected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::*)(::System::Action_2<::UnityEngine::GameObject*, ::UnityEngine::EventSystems::BaseEventData*>*)>(&UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::remove_updateSelected)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject"), ::il2cpp_utils::GetClassFromName("UnityEngine.EventSystems", "BaseEventData")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule*), "remove_updateSelected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::add_move
// Il2CppName: add_move
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::*)(::System::Action_2<::UnityEngine::GameObject*, ::UnityEngine::EventSystems::AxisEventData*>*)>(&UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::add_move)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject"), ::il2cpp_utils::GetClassFromName("UnityEngine.EventSystems", "AxisEventData")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule*), "add_move", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::remove_move
// Il2CppName: remove_move
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::*)(::System::Action_2<::UnityEngine::GameObject*, ::UnityEngine::EventSystems::AxisEventData*>*)>(&UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::remove_move)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject"), ::il2cpp_utils::GetClassFromName("UnityEngine.EventSystems", "AxisEventData")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule*), "remove_move", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::add_submit
// Il2CppName: add_submit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::*)(::System::Action_2<::UnityEngine::GameObject*, ::UnityEngine::EventSystems::BaseEventData*>*)>(&UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::add_submit)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject"), ::il2cpp_utils::GetClassFromName("UnityEngine.EventSystems", "BaseEventData")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule*), "add_submit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::remove_submit
// Il2CppName: remove_submit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::*)(::System::Action_2<::UnityEngine::GameObject*, ::UnityEngine::EventSystems::BaseEventData*>*)>(&UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::remove_submit)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject"), ::il2cpp_utils::GetClassFromName("UnityEngine.EventSystems", "BaseEventData")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule*), "remove_submit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::add_cancel
// Il2CppName: add_cancel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::*)(::System::Action_2<::UnityEngine::GameObject*, ::UnityEngine::EventSystems::BaseEventData*>*)>(&UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::add_cancel)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject"), ::il2cpp_utils::GetClassFromName("UnityEngine.EventSystems", "BaseEventData")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule*), "add_cancel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::remove_cancel
// Il2CppName: remove_cancel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::*)(::System::Action_2<::UnityEngine::GameObject*, ::UnityEngine::EventSystems::BaseEventData*>*)>(&UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::remove_cancel)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject"), ::il2cpp_utils::GetClassFromName("UnityEngine.EventSystems", "BaseEventData")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule*), "remove_cancel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::Process
// Il2CppName: Process
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::*)()>(&UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::Process)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule*), "Process", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::ActivateModule
// Il2CppName: ActivateModule
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::*)()>(&UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::ActivateModule)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule*), "ActivateModule", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::IsPointerOverGameObject
// Il2CppName: IsPointerOverGameObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::*)(int)>(&UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule::IsPointerOverGameObject)> {
  static const MethodInfo* get() {
    static auto* pointerId = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule*), "IsPointerOverGameObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{pointerId});
  }
};
