// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.UI.ButtonDeltaState
#include "UnityEngine/XR/Interaction/Toolkit/UI/ButtonDeltaState.hpp"
// Including type: UnityEngine.EventSystems.MoveDirection
#include "UnityEngine/EventSystems/MoveDirection.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::XR::Interaction::Toolkit::UI
namespace UnityEngine::XR::Interaction::Toolkit::UI {
  // Skipping declaration: ImplementationData because it is already included!
}
// Completed forward declares
// Type namespace: UnityEngine.XR.Interaction.Toolkit.UI
namespace UnityEngine::XR::Interaction::Toolkit::UI {
  // Forward declaring type: NavigationModel
  struct NavigationModel;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::XR::Interaction::Toolkit::UI::NavigationModel, "UnityEngine.XR.Interaction.Toolkit.UI", "NavigationModel");
// Type namespace: UnityEngine.XR.Interaction.Toolkit.UI
namespace UnityEngine::XR::Interaction::Toolkit::UI {
  // Size: 0x1E
  #pragma pack(push, 1)
  // WARNING Layout: Sequential may not be correctly taken into account!
  // Autogenerated type: UnityEngine.XR.Interaction.Toolkit.UI.NavigationModel
  // [TokenAttribute] Offset: FFFFFFFF
  struct NavigationModel/*, public ::System::ValueType*/ {
    public:
    // Nested type: ::UnityEngine::XR::Interaction::Toolkit::UI::NavigationModel::ImplementationData
    struct ImplementationData;
    // Size: 0xC
    #pragma pack(push, 1)
    // WARNING Layout: Sequential may not be correctly taken into account!
    // Autogenerated type: UnityEngine.XR.Interaction.Toolkit.UI.NavigationModel/ImplementationData
    // [TokenAttribute] Offset: FFFFFFFF
    struct ImplementationData/*, public ::System::ValueType*/ {
      public:
      public:
      // private System.Int32 <consecutiveMoveCount>k__BackingField
      // Size: 0x4
      // Offset: 0x0
      int consecutiveMoveCount;
      // Field size check
      static_assert(sizeof(int) == 0x4);
      // private UnityEngine.EventSystems.MoveDirection <lastMoveDirection>k__BackingField
      // Size: 0x4
      // Offset: 0x4
      ::UnityEngine::EventSystems::MoveDirection lastMoveDirection;
      // Field size check
      static_assert(sizeof(::UnityEngine::EventSystems::MoveDirection) == 0x4);
      // private System.Single <lastMoveTime>k__BackingField
      // Size: 0x4
      // Offset: 0x8
      float lastMoveTime;
      // Field size check
      static_assert(sizeof(float) == 0x4);
      public:
      // Creating value type constructor for type: ImplementationData
      constexpr ImplementationData(int consecutiveMoveCount_ = {}, ::UnityEngine::EventSystems::MoveDirection lastMoveDirection_ = {}, float lastMoveTime_ = {}) noexcept : consecutiveMoveCount{consecutiveMoveCount_}, lastMoveDirection{lastMoveDirection_}, lastMoveTime{lastMoveTime_} {}
      // Creating interface conversion operator: operator ::System::ValueType
      operator ::System::ValueType() noexcept {
        return *reinterpret_cast<::System::ValueType*>(this);
      }
      // Get instance field reference: private System.Int32 <consecutiveMoveCount>k__BackingField
      [[deprecated("Use field access instead!")]] int& dyn_$consecutiveMoveCount$k__BackingField();
      // Get instance field reference: private UnityEngine.EventSystems.MoveDirection <lastMoveDirection>k__BackingField
      [[deprecated("Use field access instead!")]] ::UnityEngine::EventSystems::MoveDirection& dyn_$lastMoveDirection$k__BackingField();
      // Get instance field reference: private System.Single <lastMoveTime>k__BackingField
      [[deprecated("Use field access instead!")]] float& dyn_$lastMoveTime$k__BackingField();
      // public System.Int32 get_consecutiveMoveCount()
      // Offset: 0x541B6DC
      int get_consecutiveMoveCount();
      // public System.Void set_consecutiveMoveCount(System.Int32 value)
      // Offset: 0x541B6E4
      void set_consecutiveMoveCount(int value);
      // public UnityEngine.EventSystems.MoveDirection get_lastMoveDirection()
      // Offset: 0x541B6EC
      ::UnityEngine::EventSystems::MoveDirection get_lastMoveDirection();
      // public System.Void set_lastMoveDirection(UnityEngine.EventSystems.MoveDirection value)
      // Offset: 0x541B6F4
      void set_lastMoveDirection(::UnityEngine::EventSystems::MoveDirection value);
      // public System.Single get_lastMoveTime()
      // Offset: 0x541B6FC
      float get_lastMoveTime();
      // public System.Void set_lastMoveTime(System.Single value)
      // Offset: 0x541B704
      void set_lastMoveTime(float value);
      // public System.Void Reset()
      // Offset: 0x541B6C0
      void Reset();
    }; // UnityEngine.XR.Interaction.Toolkit.UI.NavigationModel/ImplementationData
    #pragma pack(pop)
    static check_size<sizeof(NavigationModel::ImplementationData), 8 + sizeof(float)> __UnityEngine_XR_Interaction_Toolkit_UI_NavigationModel_ImplementationDataSizeCheck;
    static_assert(sizeof(NavigationModel::ImplementationData) == 0xC);
    public:
    // private UnityEngine.Vector2 <move>k__BackingField
    // Size: 0x8
    // Offset: 0x0
    ::UnityEngine::Vector2 move;
    // Field size check
    static_assert(sizeof(::UnityEngine::Vector2) == 0x8);
    // private UnityEngine.XR.Interaction.Toolkit.UI.ButtonDeltaState <submitButtonDelta>k__BackingField
    // Size: 0x4
    // Offset: 0x8
    ::UnityEngine::XR::Interaction::Toolkit::UI::ButtonDeltaState submitButtonDelta;
    // Field size check
    static_assert(sizeof(::UnityEngine::XR::Interaction::Toolkit::UI::ButtonDeltaState) == 0x4);
    // private UnityEngine.XR.Interaction.Toolkit.UI.ButtonDeltaState <cancelButtonDelta>k__BackingField
    // Size: 0x4
    // Offset: 0xC
    ::UnityEngine::XR::Interaction::Toolkit::UI::ButtonDeltaState cancelButtonDelta;
    // Field size check
    static_assert(sizeof(::UnityEngine::XR::Interaction::Toolkit::UI::ButtonDeltaState) == 0x4);
    // private UnityEngine.XR.Interaction.Toolkit.UI.NavigationModel/ImplementationData <implementationData>k__BackingField
    // Size: 0xC
    // Offset: 0x10
    ::UnityEngine::XR::Interaction::Toolkit::UI::NavigationModel::ImplementationData implementationData;
    // Field size check
    static_assert(sizeof(::UnityEngine::XR::Interaction::Toolkit::UI::NavigationModel::ImplementationData) == 0xC);
    // private System.Boolean m_SubmitButtonDown
    // Size: 0x1
    // Offset: 0x1C
    bool m_SubmitButtonDown;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean m_CancelButtonDown
    // Size: 0x1
    // Offset: 0x1D
    bool m_CancelButtonDown;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    public:
    // Creating value type constructor for type: NavigationModel
    constexpr NavigationModel(::UnityEngine::Vector2 move_ = {}, ::UnityEngine::XR::Interaction::Toolkit::UI::ButtonDeltaState submitButtonDelta_ = {}, ::UnityEngine::XR::Interaction::Toolkit::UI::ButtonDeltaState cancelButtonDelta_ = {}, ::UnityEngine::XR::Interaction::Toolkit::UI::NavigationModel::ImplementationData implementationData_ = {}, bool m_SubmitButtonDown_ = {}, bool m_CancelButtonDown_ = {}) noexcept : move{move_}, submitButtonDelta{submitButtonDelta_}, cancelButtonDelta{cancelButtonDelta_}, implementationData{implementationData_}, m_SubmitButtonDown{m_SubmitButtonDown_}, m_CancelButtonDown{m_CancelButtonDown_} {}
    // Creating interface conversion operator: operator ::System::ValueType
    operator ::System::ValueType() noexcept {
      return *reinterpret_cast<::System::ValueType*>(this);
    }
    // Get instance field reference: private UnityEngine.Vector2 <move>k__BackingField
    [[deprecated("Use field access instead!")]] ::UnityEngine::Vector2& dyn_$move$k__BackingField();
    // Get instance field reference: private UnityEngine.XR.Interaction.Toolkit.UI.ButtonDeltaState <submitButtonDelta>k__BackingField
    [[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::UI::ButtonDeltaState& dyn_$submitButtonDelta$k__BackingField();
    // Get instance field reference: private UnityEngine.XR.Interaction.Toolkit.UI.ButtonDeltaState <cancelButtonDelta>k__BackingField
    [[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::UI::ButtonDeltaState& dyn_$cancelButtonDelta$k__BackingField();
    // Get instance field reference: private UnityEngine.XR.Interaction.Toolkit.UI.NavigationModel/ImplementationData <implementationData>k__BackingField
    [[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::UI::NavigationModel::ImplementationData& dyn_$implementationData$k__BackingField();
    // Get instance field reference: private System.Boolean m_SubmitButtonDown
    [[deprecated("Use field access instead!")]] bool& dyn_m_SubmitButtonDown();
    // Get instance field reference: private System.Boolean m_CancelButtonDown
    [[deprecated("Use field access instead!")]] bool& dyn_m_CancelButtonDown();
    // public UnityEngine.Vector2 get_move()
    // Offset: 0x541B5BC
    ::UnityEngine::Vector2 get_move();
    // public System.Void set_move(UnityEngine.Vector2 value)
    // Offset: 0x541B5C4
    void set_move(::UnityEngine::Vector2 value);
    // public System.Boolean get_submitButtonDown()
    // Offset: 0x541B5CC
    bool get_submitButtonDown();
    // public System.Void set_submitButtonDown(System.Boolean value)
    // Offset: 0x541B5D4
    void set_submitButtonDown(bool value);
    // UnityEngine.XR.Interaction.Toolkit.UI.ButtonDeltaState get_submitButtonDelta()
    // Offset: 0x541B5FC
    ::UnityEngine::XR::Interaction::Toolkit::UI::ButtonDeltaState get_submitButtonDelta();
    // private System.Void set_submitButtonDelta(UnityEngine.XR.Interaction.Toolkit.UI.ButtonDeltaState value)
    // Offset: 0x541B604
    void set_submitButtonDelta(::UnityEngine::XR::Interaction::Toolkit::UI::ButtonDeltaState value);
    // public System.Boolean get_cancelButtonDown()
    // Offset: 0x541B60C
    bool get_cancelButtonDown();
    // public System.Void set_cancelButtonDown(System.Boolean value)
    // Offset: 0x541B614
    void set_cancelButtonDown(bool value);
    // UnityEngine.XR.Interaction.Toolkit.UI.ButtonDeltaState get_cancelButtonDelta()
    // Offset: 0x541B63C
    ::UnityEngine::XR::Interaction::Toolkit::UI::ButtonDeltaState get_cancelButtonDelta();
    // private System.Void set_cancelButtonDelta(UnityEngine.XR.Interaction.Toolkit.UI.ButtonDeltaState value)
    // Offset: 0x541B644
    void set_cancelButtonDelta(::UnityEngine::XR::Interaction::Toolkit::UI::ButtonDeltaState value);
    // UnityEngine.XR.Interaction.Toolkit.UI.NavigationModel/ImplementationData get_implementationData()
    // Offset: 0x541B64C
    ::UnityEngine::XR::Interaction::Toolkit::UI::NavigationModel::ImplementationData get_implementationData();
    // System.Void set_implementationData(UnityEngine.XR.Interaction.Toolkit.UI.NavigationModel/ImplementationData value)
    // Offset: 0x541B65C
    void set_implementationData(::UnityEngine::XR::Interaction::Toolkit::UI::NavigationModel::ImplementationData value);
    // public System.Void Reset()
    // Offset: 0x541B668
    void Reset();
    // public System.Void OnFrameFinished()
    // Offset: 0x541B6D4
    void OnFrameFinished();
  }; // UnityEngine.XR.Interaction.Toolkit.UI.NavigationModel
  #pragma pack(pop)
  static check_size<sizeof(NavigationModel), 29 + sizeof(bool)> __UnityEngine_XR_Interaction_Toolkit_UI_NavigationModelSizeCheck;
  static_assert(sizeof(NavigationModel) == 0x1E);
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::XR::Interaction::Toolkit::UI::NavigationModel::ImplementationData, "UnityEngine.XR.Interaction.Toolkit.UI", "NavigationModel/ImplementationData");
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::UI::NavigationModel::get_move
// Il2CppName: get_move
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector2 (UnityEngine::XR::Interaction::Toolkit::UI::NavigationModel::*)()>(&UnityEngine::XR::Interaction::Toolkit::UI::NavigationModel::get_move)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::UI::NavigationModel), "get_move", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::UI::NavigationModel::set_move
// Il2CppName: set_move
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::UI::NavigationModel::*)(::UnityEngine::Vector2)>(&UnityEngine::XR::Interaction::Toolkit::UI::NavigationModel::set_move)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector2")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::UI::NavigationModel), "set_move", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::UI::NavigationModel::get_submitButtonDown
// Il2CppName: get_submitButtonDown
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::XR::Interaction::Toolkit::UI::NavigationModel::*)()>(&UnityEngine::XR::Interaction::Toolkit::UI::NavigationModel::get_submitButtonDown)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::UI::NavigationModel), "get_submitButtonDown", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::UI::NavigationModel::set_submitButtonDown
// Il2CppName: set_submitButtonDown
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::UI::NavigationModel::*)(bool)>(&UnityEngine::XR::Interaction::Toolkit::UI::NavigationModel::set_submitButtonDown)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::UI::NavigationModel), "set_submitButtonDown", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::UI::NavigationModel::get_submitButtonDelta
// Il2CppName: get_submitButtonDelta
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::XR::Interaction::Toolkit::UI::ButtonDeltaState (UnityEngine::XR::Interaction::Toolkit::UI::NavigationModel::*)()>(&UnityEngine::XR::Interaction::Toolkit::UI::NavigationModel::get_submitButtonDelta)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::UI::NavigationModel), "get_submitButtonDelta", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::UI::NavigationModel::set_submitButtonDelta
// Il2CppName: set_submitButtonDelta
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::UI::NavigationModel::*)(::UnityEngine::XR::Interaction::Toolkit::UI::ButtonDeltaState)>(&UnityEngine::XR::Interaction::Toolkit::UI::NavigationModel::set_submitButtonDelta)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit.UI", "ButtonDeltaState")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::UI::NavigationModel), "set_submitButtonDelta", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::UI::NavigationModel::get_cancelButtonDown
// Il2CppName: get_cancelButtonDown
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::XR::Interaction::Toolkit::UI::NavigationModel::*)()>(&UnityEngine::XR::Interaction::Toolkit::UI::NavigationModel::get_cancelButtonDown)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::UI::NavigationModel), "get_cancelButtonDown", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::UI::NavigationModel::set_cancelButtonDown
// Il2CppName: set_cancelButtonDown
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::UI::NavigationModel::*)(bool)>(&UnityEngine::XR::Interaction::Toolkit::UI::NavigationModel::set_cancelButtonDown)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::UI::NavigationModel), "set_cancelButtonDown", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::UI::NavigationModel::get_cancelButtonDelta
// Il2CppName: get_cancelButtonDelta
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::XR::Interaction::Toolkit::UI::ButtonDeltaState (UnityEngine::XR::Interaction::Toolkit::UI::NavigationModel::*)()>(&UnityEngine::XR::Interaction::Toolkit::UI::NavigationModel::get_cancelButtonDelta)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::UI::NavigationModel), "get_cancelButtonDelta", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::UI::NavigationModel::set_cancelButtonDelta
// Il2CppName: set_cancelButtonDelta
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::UI::NavigationModel::*)(::UnityEngine::XR::Interaction::Toolkit::UI::ButtonDeltaState)>(&UnityEngine::XR::Interaction::Toolkit::UI::NavigationModel::set_cancelButtonDelta)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit.UI", "ButtonDeltaState")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::UI::NavigationModel), "set_cancelButtonDelta", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::UI::NavigationModel::get_implementationData
// Il2CppName: get_implementationData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::XR::Interaction::Toolkit::UI::NavigationModel::ImplementationData (UnityEngine::XR::Interaction::Toolkit::UI::NavigationModel::*)()>(&UnityEngine::XR::Interaction::Toolkit::UI::NavigationModel::get_implementationData)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::UI::NavigationModel), "get_implementationData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::UI::NavigationModel::set_implementationData
// Il2CppName: set_implementationData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::UI::NavigationModel::*)(::UnityEngine::XR::Interaction::Toolkit::UI::NavigationModel::ImplementationData)>(&UnityEngine::XR::Interaction::Toolkit::UI::NavigationModel::set_implementationData)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit.UI", "NavigationModel/ImplementationData")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::UI::NavigationModel), "set_implementationData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::UI::NavigationModel::Reset
// Il2CppName: Reset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::UI::NavigationModel::*)()>(&UnityEngine::XR::Interaction::Toolkit::UI::NavigationModel::Reset)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::UI::NavigationModel), "Reset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::UI::NavigationModel::OnFrameFinished
// Il2CppName: OnFrameFinished
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::UI::NavigationModel::*)()>(&UnityEngine::XR::Interaction::Toolkit::UI::NavigationModel::OnFrameFinished)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::UI::NavigationModel), "OnFrameFinished", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
