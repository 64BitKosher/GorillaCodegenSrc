// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.UI.UIInputModule
#include "UnityEngine/XR/Interaction/Toolkit/UI/UIInputModule.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.UI.MouseModel
#include "UnityEngine/XR/Interaction/Toolkit/UI/MouseModel.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.UI.NavigationModel
#include "UnityEngine/XR/Interaction/Toolkit/UI/NavigationModel.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.UI.TrackedDeviceModel
#include "UnityEngine/XR/Interaction/Toolkit/UI/TrackedDeviceModel.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.UI.TouchModel
#include "UnityEngine/XR/Interaction/Toolkit/UI/TouchModel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::XR::Interaction::Toolkit::UI
namespace UnityEngine::XR::Interaction::Toolkit::UI {
  // Skipping declaration: ActiveInputMode because it is already included!
  // Forward declaring type: IUIInteractor
  class IUIInteractor;
}
// Forward declaring namespace: UnityEngine::InputSystem
namespace UnityEngine::InputSystem {
  // Forward declaring type: InputActionReference
  class InputActionReference;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Touch
  struct Touch;
}
// Completed forward declares
// Type namespace: UnityEngine.XR.Interaction.Toolkit.UI
namespace UnityEngine::XR::Interaction::Toolkit::UI {
  // Forward declaring type: XRUIInputModule
  class XRUIInputModule;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule*, "UnityEngine.XR.Interaction.Toolkit.UI", "XRUIInputModule");
// Type namespace: UnityEngine.XR.Interaction.Toolkit.UI
namespace UnityEngine::XR::Interaction::Toolkit::UI {
  // Size: 0x380
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.XR.Interaction.Toolkit.UI.XRUIInputModule
  // [TokenAttribute] Offset: FFFFFFFF
  // [HelpURLAttribute] Offset: FFFFFFFF
  // [AddComponentMenu] Offset: FFFFFFFF
  class XRUIInputModule : public ::UnityEngine::XR::Interaction::Toolkit::UI::UIInputModule {
    public:
    // Nested type: ::UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::RegisteredInteractor
    struct RegisteredInteractor;
    // Nested type: ::UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::RegisteredTouch
    struct RegisteredTouch;
    // Nested type: ::UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::ActiveInputMode
    struct ActiveInputMode;
    // Size: 0x144
    #pragma pack(push, 1)
    // WARNING Layout: Sequential may not be correctly taken into account!
    // Autogenerated type: UnityEngine.XR.Interaction.Toolkit.UI.XRUIInputModule/RegisteredInteractor
    // [TokenAttribute] Offset: FFFFFFFF
    struct RegisteredInteractor/*, public ::System::ValueType*/ {
      public:
      public:
      // public UnityEngine.XR.Interaction.Toolkit.UI.IUIInteractor interactor
      // Size: 0x8
      // Offset: 0x0
      ::UnityEngine::XR::Interaction::Toolkit::UI::IUIInteractor* interactor;
      // Field size check
      static_assert(sizeof(::UnityEngine::XR::Interaction::Toolkit::UI::IUIInteractor*) == 0x8);
      // public UnityEngine.XR.Interaction.Toolkit.UI.TrackedDeviceModel model
      // Size: 0x13C
      // Offset: 0x8
      ::UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceModel model;
      // Field size check
      static_assert(sizeof(::UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceModel) == 0x13C);
      public:
      // Creating value type constructor for type: RegisteredInteractor
      constexpr RegisteredInteractor(::UnityEngine::XR::Interaction::Toolkit::UI::IUIInteractor* interactor_ = {}, ::UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceModel model_ = {}) noexcept : interactor{interactor_}, model{model_} {}
      // Creating interface conversion operator: operator ::System::ValueType
      operator ::System::ValueType() noexcept {
        return *reinterpret_cast<::System::ValueType*>(this);
      }
      // Get instance field reference: public UnityEngine.XR.Interaction.Toolkit.UI.IUIInteractor interactor
      [[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::UI::IUIInteractor*& dyn_interactor();
      // Get instance field reference: public UnityEngine.XR.Interaction.Toolkit.UI.TrackedDeviceModel model
      [[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceModel& dyn_model();
      // public System.Void .ctor(UnityEngine.XR.Interaction.Toolkit.UI.IUIInteractor interactor, System.Int32 deviceIndex)
      // Offset: 0x5426010
      RegisteredInteractor(::UnityEngine::XR::Interaction::Toolkit::UI::IUIInteractor* interactor, int deviceIndex);
    }; // UnityEngine.XR.Interaction.Toolkit.UI.XRUIInputModule/RegisteredInteractor
    #pragma pack(pop)
    static check_size<sizeof(XRUIInputModule::RegisteredInteractor), 8 + sizeof(::UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceModel)> __UnityEngine_XR_Interaction_Toolkit_UI_XRUIInputModule_RegisteredInteractorSizeCheck;
    static_assert(sizeof(XRUIInputModule::RegisteredInteractor) == 0x144);
    // Size: 0xB0
    #pragma pack(push, 1)
    // WARNING Layout: Sequential may not be correctly taken into account!
    // Autogenerated type: UnityEngine.XR.Interaction.Toolkit.UI.XRUIInputModule/RegisteredTouch
    // [TokenAttribute] Offset: FFFFFFFF
    struct RegisteredTouch/*, public ::System::ValueType*/ {
      public:
      public:
      // public System.Boolean isValid
      // Size: 0x1
      // Offset: 0x0
      bool isValid;
      // Field size check
      static_assert(sizeof(bool) == 0x1);
      // Padding between fields: isValid and: touchId
      char __padding0[0x3] = {};
      // public System.Int32 touchId
      // Size: 0x4
      // Offset: 0x4
      int touchId;
      // Field size check
      static_assert(sizeof(int) == 0x4);
      // public UnityEngine.XR.Interaction.Toolkit.UI.TouchModel model
      // Size: 0xA8
      // Offset: 0x8
      ::UnityEngine::XR::Interaction::Toolkit::UI::TouchModel model;
      // Field size check
      static_assert(sizeof(::UnityEngine::XR::Interaction::Toolkit::UI::TouchModel) == 0xA8);
      public:
      // Creating value type constructor for type: RegisteredTouch
      constexpr RegisteredTouch(bool isValid_ = {}, int touchId_ = {}, ::UnityEngine::XR::Interaction::Toolkit::UI::TouchModel model_ = {}) noexcept : isValid{isValid_}, touchId{touchId_}, model{model_} {}
      // Creating interface conversion operator: operator ::System::ValueType
      operator ::System::ValueType() noexcept {
        return *reinterpret_cast<::System::ValueType*>(this);
      }
      // Get instance field reference: public System.Boolean isValid
      [[deprecated("Use field access instead!")]] bool& dyn_isValid();
      // Get instance field reference: public System.Int32 touchId
      [[deprecated("Use field access instead!")]] int& dyn_touchId();
      // Get instance field reference: public UnityEngine.XR.Interaction.Toolkit.UI.TouchModel model
      [[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::UI::TouchModel& dyn_model();
      // public System.Void .ctor(UnityEngine.Touch touch, System.Int32 deviceIndex)
      // Offset: 0x5427328
      RegisteredTouch(::UnityEngine::Touch touch, int deviceIndex);
    }; // UnityEngine.XR.Interaction.Toolkit.UI.XRUIInputModule/RegisteredTouch
    #pragma pack(pop)
    static check_size<sizeof(XRUIInputModule::RegisteredTouch), 8 + sizeof(::UnityEngine::XR::Interaction::Toolkit::UI::TouchModel)> __UnityEngine_XR_Interaction_Toolkit_UI_XRUIInputModule_RegisteredTouchSizeCheck;
    static_assert(sizeof(XRUIInputModule::RegisteredTouch) == 0xB0);
    // Size: 0x4
    #pragma pack(push, 1)
    // Autogenerated type: UnityEngine.XR.Interaction.Toolkit.UI.XRUIInputModule/ActiveInputMode
    // [TokenAttribute] Offset: FFFFFFFF
    struct ActiveInputMode/*, public ::System::Enum*/ {
      public:
      public:
      // public System.Int32 value__
      // Size: 0x4
      // Offset: 0x0
      int value;
      // Field size check
      static_assert(sizeof(int) == 0x4);
      public:
      // Creating value type constructor for type: ActiveInputMode
      constexpr ActiveInputMode(int value_ = {}) noexcept : value{value_} {}
      // Creating interface conversion operator: operator ::System::Enum
      operator ::System::Enum() noexcept {
        return *reinterpret_cast<::System::Enum*>(this);
      }
      // Creating conversion operator: operator int
      constexpr operator int() const noexcept {
        return value;
      }
      // static field const value: static public UnityEngine.XR.Interaction.Toolkit.UI.XRUIInputModule/ActiveInputMode InputManagerBindings
      static constexpr const int InputManagerBindings = 0;
      // Get static field: static public UnityEngine.XR.Interaction.Toolkit.UI.XRUIInputModule/ActiveInputMode InputManagerBindings
      static ::UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::ActiveInputMode _get_InputManagerBindings();
      // Set static field: static public UnityEngine.XR.Interaction.Toolkit.UI.XRUIInputModule/ActiveInputMode InputManagerBindings
      static void _set_InputManagerBindings(::UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::ActiveInputMode value);
      // static field const value: static public UnityEngine.XR.Interaction.Toolkit.UI.XRUIInputModule/ActiveInputMode InputSystemActions
      static constexpr const int InputSystemActions = 1;
      // Get static field: static public UnityEngine.XR.Interaction.Toolkit.UI.XRUIInputModule/ActiveInputMode InputSystemActions
      static ::UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::ActiveInputMode _get_InputSystemActions();
      // Set static field: static public UnityEngine.XR.Interaction.Toolkit.UI.XRUIInputModule/ActiveInputMode InputSystemActions
      static void _set_InputSystemActions(::UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::ActiveInputMode value);
      // static field const value: static public UnityEngine.XR.Interaction.Toolkit.UI.XRUIInputModule/ActiveInputMode Both
      static constexpr const int Both = 2;
      // Get static field: static public UnityEngine.XR.Interaction.Toolkit.UI.XRUIInputModule/ActiveInputMode Both
      static ::UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::ActiveInputMode _get_Both();
      // Set static field: static public UnityEngine.XR.Interaction.Toolkit.UI.XRUIInputModule/ActiveInputMode Both
      static void _set_Both(::UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::ActiveInputMode value);
      // Get instance field reference: public System.Int32 value__
      [[deprecated("Use field access instead!")]] int& dyn_value__();
    }; // UnityEngine.XR.Interaction.Toolkit.UI.XRUIInputModule/ActiveInputMode
    #pragma pack(pop)
    static check_size<sizeof(XRUIInputModule::ActiveInputMode), 0 + sizeof(int)> __UnityEngine_XR_Interaction_Toolkit_UI_XRUIInputModule_ActiveInputModeSizeCheck;
    static_assert(sizeof(XRUIInputModule::ActiveInputMode) == 0x4);
    public:
    // private UnityEngine.XR.Interaction.Toolkit.UI.XRUIInputModule/ActiveInputMode m_ActiveInputMode
    // Size: 0x4
    // Offset: 0x120
    ::UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::ActiveInputMode m_ActiveInputMode;
    // Field size check
    static_assert(sizeof(::UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::ActiveInputMode) == 0x4);
    // private System.Single m_MaxTrackedDeviceRaycastDistance
    // Size: 0x4
    // Offset: 0x124
    float m_MaxTrackedDeviceRaycastDistance;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Boolean m_EnableXRInput
    // Size: 0x1
    // Offset: 0x128
    bool m_EnableXRInput;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean m_EnableMouseInput
    // Size: 0x1
    // Offset: 0x129
    bool m_EnableMouseInput;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean m_EnableTouchInput
    // Size: 0x1
    // Offset: 0x12A
    bool m_EnableTouchInput;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: m_EnableTouchInput and: m_PointAction
    char __padding4[0x5] = {};
    // private UnityEngine.InputSystem.InputActionReference m_PointAction
    // Size: 0x8
    // Offset: 0x130
    ::UnityEngine::InputSystem::InputActionReference* m_PointAction;
    // Field size check
    static_assert(sizeof(::UnityEngine::InputSystem::InputActionReference*) == 0x8);
    // private UnityEngine.InputSystem.InputActionReference m_LeftClickAction
    // Size: 0x8
    // Offset: 0x138
    ::UnityEngine::InputSystem::InputActionReference* m_LeftClickAction;
    // Field size check
    static_assert(sizeof(::UnityEngine::InputSystem::InputActionReference*) == 0x8);
    // private UnityEngine.InputSystem.InputActionReference m_MiddleClickAction
    // Size: 0x8
    // Offset: 0x140
    ::UnityEngine::InputSystem::InputActionReference* m_MiddleClickAction;
    // Field size check
    static_assert(sizeof(::UnityEngine::InputSystem::InputActionReference*) == 0x8);
    // private UnityEngine.InputSystem.InputActionReference m_RightClickAction
    // Size: 0x8
    // Offset: 0x148
    ::UnityEngine::InputSystem::InputActionReference* m_RightClickAction;
    // Field size check
    static_assert(sizeof(::UnityEngine::InputSystem::InputActionReference*) == 0x8);
    // private UnityEngine.InputSystem.InputActionReference m_ScrollWheelAction
    // Size: 0x8
    // Offset: 0x150
    ::UnityEngine::InputSystem::InputActionReference* m_ScrollWheelAction;
    // Field size check
    static_assert(sizeof(::UnityEngine::InputSystem::InputActionReference*) == 0x8);
    // private UnityEngine.InputSystem.InputActionReference m_NavigateAction
    // Size: 0x8
    // Offset: 0x158
    ::UnityEngine::InputSystem::InputActionReference* m_NavigateAction;
    // Field size check
    static_assert(sizeof(::UnityEngine::InputSystem::InputActionReference*) == 0x8);
    // private UnityEngine.InputSystem.InputActionReference m_SubmitAction
    // Size: 0x8
    // Offset: 0x160
    ::UnityEngine::InputSystem::InputActionReference* m_SubmitAction;
    // Field size check
    static_assert(sizeof(::UnityEngine::InputSystem::InputActionReference*) == 0x8);
    // private UnityEngine.InputSystem.InputActionReference m_CancelAction
    // Size: 0x8
    // Offset: 0x168
    ::UnityEngine::InputSystem::InputActionReference* m_CancelAction;
    // Field size check
    static_assert(sizeof(::UnityEngine::InputSystem::InputActionReference*) == 0x8);
    // private System.Boolean m_EnableBuiltinActionsAsFallback
    // Size: 0x1
    // Offset: 0x170
    bool m_EnableBuiltinActionsAsFallback;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean m_EnableGamepadInput
    // Size: 0x1
    // Offset: 0x171
    bool m_EnableGamepadInput;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean m_EnableJoystickInput
    // Size: 0x1
    // Offset: 0x172
    bool m_EnableJoystickInput;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: m_EnableJoystickInput and: m_HorizontalAxis
    char __padding15[0x5] = {};
    // private System.String m_HorizontalAxis
    // Size: 0x8
    // Offset: 0x178
    ::StringW m_HorizontalAxis;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private System.String m_VerticalAxis
    // Size: 0x8
    // Offset: 0x180
    ::StringW m_VerticalAxis;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private System.String m_SubmitButton
    // Size: 0x8
    // Offset: 0x188
    ::StringW m_SubmitButton;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private System.String m_CancelButton
    // Size: 0x8
    // Offset: 0x190
    ::StringW m_CancelButton;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private System.Int32 m_RollingPointerId
    // Size: 0x4
    // Offset: 0x198
    int m_RollingPointerId;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private System.Boolean m_UseBuiltInInputSystemActions
    // Size: 0x1
    // Offset: 0x19C
    bool m_UseBuiltInInputSystemActions;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: m_UseBuiltInInputSystemActions and: m_MouseState
    char __padding21[0x3] = {};
    // private UnityEngine.XR.Interaction.Toolkit.UI.MouseModel m_MouseState
    // Size: 0x1B0
    // Offset: 0x1A0
    ::UnityEngine::XR::Interaction::Toolkit::UI::MouseModel m_MouseState;
    // Field size check
    static_assert(sizeof(::UnityEngine::XR::Interaction::Toolkit::UI::MouseModel) == 0x1B0);
    // private UnityEngine.XR.Interaction.Toolkit.UI.NavigationModel m_NavigationState
    // Size: 0x1E
    // Offset: 0x350
    ::UnityEngine::XR::Interaction::Toolkit::UI::NavigationModel m_NavigationState;
    // Field size check
    static_assert(sizeof(::UnityEngine::XR::Interaction::Toolkit::UI::NavigationModel) == 0x1E);
    // Padding between fields: m_NavigationState and: m_RegisteredTouches
    char __padding23[0x2] = {};
    // private readonly System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.UI.XRUIInputModule/RegisteredTouch> m_RegisteredTouches
    // Size: 0x8
    // Offset: 0x370
    ::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::RegisteredTouch>* m_RegisteredTouches;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::RegisteredTouch>*) == 0x8);
    // private readonly System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.UI.XRUIInputModule/RegisteredInteractor> m_RegisteredInteractors
    // Size: 0x8
    // Offset: 0x378
    ::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::RegisteredInteractor>* m_RegisteredInteractors;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::RegisteredInteractor>*) == 0x8);
    public:
    // static field const value: static System.Single kPixelPerLine
    static constexpr const float kPixelPerLine = 20;
    // Get static field: static System.Single kPixelPerLine
    static float _get_kPixelPerLine();
    // Set static field: static System.Single kPixelPerLine
    static void _set_kPixelPerLine(float value);
    // Get instance field reference: private UnityEngine.XR.Interaction.Toolkit.UI.XRUIInputModule/ActiveInputMode m_ActiveInputMode
    [[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::ActiveInputMode& dyn_m_ActiveInputMode();
    // Get instance field reference: private System.Single m_MaxTrackedDeviceRaycastDistance
    [[deprecated("Use field access instead!")]] float& dyn_m_MaxTrackedDeviceRaycastDistance();
    // Get instance field reference: private System.Boolean m_EnableXRInput
    [[deprecated("Use field access instead!")]] bool& dyn_m_EnableXRInput();
    // Get instance field reference: private System.Boolean m_EnableMouseInput
    [[deprecated("Use field access instead!")]] bool& dyn_m_EnableMouseInput();
    // Get instance field reference: private System.Boolean m_EnableTouchInput
    [[deprecated("Use field access instead!")]] bool& dyn_m_EnableTouchInput();
    // Get instance field reference: private UnityEngine.InputSystem.InputActionReference m_PointAction
    [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::InputActionReference*& dyn_m_PointAction();
    // Get instance field reference: private UnityEngine.InputSystem.InputActionReference m_LeftClickAction
    [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::InputActionReference*& dyn_m_LeftClickAction();
    // Get instance field reference: private UnityEngine.InputSystem.InputActionReference m_MiddleClickAction
    [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::InputActionReference*& dyn_m_MiddleClickAction();
    // Get instance field reference: private UnityEngine.InputSystem.InputActionReference m_RightClickAction
    [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::InputActionReference*& dyn_m_RightClickAction();
    // Get instance field reference: private UnityEngine.InputSystem.InputActionReference m_ScrollWheelAction
    [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::InputActionReference*& dyn_m_ScrollWheelAction();
    // Get instance field reference: private UnityEngine.InputSystem.InputActionReference m_NavigateAction
    [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::InputActionReference*& dyn_m_NavigateAction();
    // Get instance field reference: private UnityEngine.InputSystem.InputActionReference m_SubmitAction
    [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::InputActionReference*& dyn_m_SubmitAction();
    // Get instance field reference: private UnityEngine.InputSystem.InputActionReference m_CancelAction
    [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::InputActionReference*& dyn_m_CancelAction();
    // Get instance field reference: private System.Boolean m_EnableBuiltinActionsAsFallback
    [[deprecated("Use field access instead!")]] bool& dyn_m_EnableBuiltinActionsAsFallback();
    // Get instance field reference: private System.Boolean m_EnableGamepadInput
    [[deprecated("Use field access instead!")]] bool& dyn_m_EnableGamepadInput();
    // Get instance field reference: private System.Boolean m_EnableJoystickInput
    [[deprecated("Use field access instead!")]] bool& dyn_m_EnableJoystickInput();
    // Get instance field reference: private System.String m_HorizontalAxis
    [[deprecated("Use field access instead!")]] ::StringW& dyn_m_HorizontalAxis();
    // Get instance field reference: private System.String m_VerticalAxis
    [[deprecated("Use field access instead!")]] ::StringW& dyn_m_VerticalAxis();
    // Get instance field reference: private System.String m_SubmitButton
    [[deprecated("Use field access instead!")]] ::StringW& dyn_m_SubmitButton();
    // Get instance field reference: private System.String m_CancelButton
    [[deprecated("Use field access instead!")]] ::StringW& dyn_m_CancelButton();
    // Get instance field reference: private System.Int32 m_RollingPointerId
    [[deprecated("Use field access instead!")]] int& dyn_m_RollingPointerId();
    // Get instance field reference: private System.Boolean m_UseBuiltInInputSystemActions
    [[deprecated("Use field access instead!")]] bool& dyn_m_UseBuiltInInputSystemActions();
    // Get instance field reference: private UnityEngine.XR.Interaction.Toolkit.UI.MouseModel m_MouseState
    [[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::UI::MouseModel& dyn_m_MouseState();
    // Get instance field reference: private UnityEngine.XR.Interaction.Toolkit.UI.NavigationModel m_NavigationState
    [[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::UI::NavigationModel& dyn_m_NavigationState();
    // Get instance field reference: private readonly System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.UI.XRUIInputModule/RegisteredTouch> m_RegisteredTouches
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::RegisteredTouch>*& dyn_m_RegisteredTouches();
    // Get instance field reference: private readonly System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.UI.XRUIInputModule/RegisteredInteractor> m_RegisteredInteractors
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::RegisteredInteractor>*& dyn_m_RegisteredInteractors();
    // public UnityEngine.XR.Interaction.Toolkit.UI.XRUIInputModule/ActiveInputMode get_activeInputMode()
    // Offset: 0x542585C
    ::UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::ActiveInputMode get_activeInputMode();
    // public System.Void set_activeInputMode(UnityEngine.XR.Interaction.Toolkit.UI.XRUIInputModule/ActiveInputMode value)
    // Offset: 0x5425864
    void set_activeInputMode(::UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::ActiveInputMode value);
    // public System.Boolean get_enableXRInput()
    // Offset: 0x542586C
    bool get_enableXRInput();
    // public System.Void set_enableXRInput(System.Boolean value)
    // Offset: 0x5425874
    void set_enableXRInput(bool value);
    // public System.Boolean get_enableMouseInput()
    // Offset: 0x5425880
    bool get_enableMouseInput();
    // public System.Void set_enableMouseInput(System.Boolean value)
    // Offset: 0x5425888
    void set_enableMouseInput(bool value);
    // public System.Boolean get_enableTouchInput()
    // Offset: 0x5425894
    bool get_enableTouchInput();
    // public System.Void set_enableTouchInput(System.Boolean value)
    // Offset: 0x542589C
    void set_enableTouchInput(bool value);
    // public UnityEngine.InputSystem.InputActionReference get_pointAction()
    // Offset: 0x54258A8
    ::UnityEngine::InputSystem::InputActionReference* get_pointAction();
    // public System.Void set_pointAction(UnityEngine.InputSystem.InputActionReference value)
    // Offset: 0x54258B0
    void set_pointAction(::UnityEngine::InputSystem::InputActionReference* value);
    // public UnityEngine.InputSystem.InputActionReference get_leftClickAction()
    // Offset: 0x5425A1C
    ::UnityEngine::InputSystem::InputActionReference* get_leftClickAction();
    // public System.Void set_leftClickAction(UnityEngine.InputSystem.InputActionReference value)
    // Offset: 0x5425A24
    void set_leftClickAction(::UnityEngine::InputSystem::InputActionReference* value);
    // public UnityEngine.InputSystem.InputActionReference get_middleClickAction()
    // Offset: 0x5425A34
    ::UnityEngine::InputSystem::InputActionReference* get_middleClickAction();
    // public System.Void set_middleClickAction(UnityEngine.InputSystem.InputActionReference value)
    // Offset: 0x5425A3C
    void set_middleClickAction(::UnityEngine::InputSystem::InputActionReference* value);
    // public UnityEngine.InputSystem.InputActionReference get_rightClickAction()
    // Offset: 0x5425A4C
    ::UnityEngine::InputSystem::InputActionReference* get_rightClickAction();
    // public System.Void set_rightClickAction(UnityEngine.InputSystem.InputActionReference value)
    // Offset: 0x5425A54
    void set_rightClickAction(::UnityEngine::InputSystem::InputActionReference* value);
    // public UnityEngine.InputSystem.InputActionReference get_scrollWheelAction()
    // Offset: 0x5425A64
    ::UnityEngine::InputSystem::InputActionReference* get_scrollWheelAction();
    // public System.Void set_scrollWheelAction(UnityEngine.InputSystem.InputActionReference value)
    // Offset: 0x5425A6C
    void set_scrollWheelAction(::UnityEngine::InputSystem::InputActionReference* value);
    // public UnityEngine.InputSystem.InputActionReference get_navigateAction()
    // Offset: 0x5425A7C
    ::UnityEngine::InputSystem::InputActionReference* get_navigateAction();
    // public System.Void set_navigateAction(UnityEngine.InputSystem.InputActionReference value)
    // Offset: 0x5425A84
    void set_navigateAction(::UnityEngine::InputSystem::InputActionReference* value);
    // public UnityEngine.InputSystem.InputActionReference get_submitAction()
    // Offset: 0x5425A94
    ::UnityEngine::InputSystem::InputActionReference* get_submitAction();
    // public System.Void set_submitAction(UnityEngine.InputSystem.InputActionReference value)
    // Offset: 0x5425A9C
    void set_submitAction(::UnityEngine::InputSystem::InputActionReference* value);
    // public UnityEngine.InputSystem.InputActionReference get_cancelAction()
    // Offset: 0x5425AAC
    ::UnityEngine::InputSystem::InputActionReference* get_cancelAction();
    // public System.Void set_cancelAction(UnityEngine.InputSystem.InputActionReference value)
    // Offset: 0x5425AB4
    void set_cancelAction(::UnityEngine::InputSystem::InputActionReference* value);
    // public System.Boolean get_enableBuiltinActionsAsFallback()
    // Offset: 0x5425AC4
    bool get_enableBuiltinActionsAsFallback();
    // public System.Void set_enableBuiltinActionsAsFallback(System.Boolean value)
    // Offset: 0x5425ACC
    void set_enableBuiltinActionsAsFallback(bool value);
    // public System.Boolean get_enableGamepadInput()
    // Offset: 0x5425C8C
    bool get_enableGamepadInput();
    // public System.Void set_enableGamepadInput(System.Boolean value)
    // Offset: 0x5425C94
    void set_enableGamepadInput(bool value);
    // public System.Boolean get_enableJoystickInput()
    // Offset: 0x5425CA0
    bool get_enableJoystickInput();
    // public System.Void set_enableJoystickInput(System.Boolean value)
    // Offset: 0x5425CA8
    void set_enableJoystickInput(bool value);
    // public System.String get_horizontalAxis()
    // Offset: 0x5425CB4
    ::StringW get_horizontalAxis();
    // public System.Void set_horizontalAxis(System.String value)
    // Offset: 0x5425CBC
    void set_horizontalAxis(::StringW value);
    // public System.String get_verticalAxis()
    // Offset: 0x5425CCC
    ::StringW get_verticalAxis();
    // public System.Void set_verticalAxis(System.String value)
    // Offset: 0x5425CD4
    void set_verticalAxis(::StringW value);
    // public System.String get_submitButton()
    // Offset: 0x5425CE4
    ::StringW get_submitButton();
    // public System.Void set_submitButton(System.String value)
    // Offset: 0x5425CEC
    void set_submitButton(::StringW value);
    // public System.String get_cancelButton()
    // Offset: 0x5425CFC
    ::StringW get_cancelButton();
    // public System.Void set_cancelButton(System.String value)
    // Offset: 0x5425D04
    void set_cancelButton(::StringW value);
    // public System.Void RegisterInteractor(UnityEngine.XR.Interaction.Toolkit.UI.IUIInteractor interactor)
    // Offset: 0x5425E88
    void RegisterInteractor(::UnityEngine::XR::Interaction::Toolkit::UI::IUIInteractor* interactor);
    // public System.Void UnregisterInteractor(UnityEngine.XR.Interaction.Toolkit.UI.IUIInteractor interactor)
    // Offset: 0x5426074
    void UnregisterInteractor(::UnityEngine::XR::Interaction::Toolkit::UI::IUIInteractor* interactor);
    // public UnityEngine.XR.Interaction.Toolkit.UI.IUIInteractor GetInteractor(System.Int32 pointerId)
    // Offset: 0x54261B4
    ::UnityEngine::XR::Interaction::Toolkit::UI::IUIInteractor* GetInteractor(int pointerId);
    // public System.Boolean GetTrackedDeviceModel(UnityEngine.XR.Interaction.Toolkit.UI.IUIInteractor interactor, out UnityEngine.XR.Interaction.Toolkit.UI.TrackedDeviceModel model)
    // Offset: 0x542627C
    bool GetTrackedDeviceModel(::UnityEngine::XR::Interaction::Toolkit::UI::IUIInteractor* interactor, ByRef<::UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceModel> model);
    // private System.Void ProcessMouse()
    // Offset: 0x5426A84
    void ProcessMouse();
    // private System.Boolean ProcessTouches()
    // Offset: 0x54265EC
    bool ProcessTouches();
    // private System.Void ProcessNavigation()
    // Offset: 0x5426E58
    void ProcessNavigation();
    // private System.Boolean InputActionReferencesAreSet()
    // Offset: 0x5425B04
    bool InputActionReferencesAreSet();
    // private System.Void EnableAllActions()
    // Offset: 0x5425DC0
    void EnableAllActions();
    // private System.Void DisableAllActions()
    // Offset: 0x5425E3C
    void DisableAllActions();
    // static private System.Boolean IsActionEnabled(UnityEngine.InputSystem.InputActionReference inputAction)
    // Offset: 0x5427288
    static bool IsActionEnabled(::UnityEngine::InputSystem::InputActionReference* inputAction);
    // static private System.Void EnableInputAction(UnityEngine.InputSystem.InputActionReference inputAction)
    // Offset: 0x54273A0
    static void EnableInputAction(::UnityEngine::InputSystem::InputActionReference* inputAction);
    // static private System.Void DisableInputAction(UnityEngine.InputSystem.InputActionReference inputAction)
    // Offset: 0x542743C
    static void DisableInputAction(::UnityEngine::InputSystem::InputActionReference* inputAction);
    // private System.Void SetInputAction(ref UnityEngine.InputSystem.InputActionReference inputAction, UnityEngine.InputSystem.InputActionReference value)
    // Offset: 0x54258C0
    void SetInputAction(ByRef<::UnityEngine::InputSystem::InputActionReference*> inputAction, ::UnityEngine::InputSystem::InputActionReference* value);
    // public System.Single get_maxRaycastDistance()
    // Offset: 0x54274D8
    float get_maxRaycastDistance();
    // public System.Void set_maxRaycastDistance(System.Single value)
    // Offset: 0x54274E0
    void set_maxRaycastDistance(float value);
    // protected override System.Void OnEnable()
    // Offset: 0x5425D14
    // Implemented from: UnityEngine.EventSystems.BaseInputModule
    // Base method: System.Void BaseInputModule::OnEnable()
    void OnEnable();
    // protected override System.Void OnDisable()
    // Offset: 0x5425E0C
    // Implemented from: UnityEngine.EventSystems.BaseInputModule
    // Base method: System.Void BaseInputModule::OnDisable()
    void OnDisable();
    // protected override System.Void DoProcess()
    // Offset: 0x54263A0
    // Implemented from: UnityEngine.XR.Interaction.Toolkit.UI.UIInputModule
    // Base method: System.Void UIInputModule::DoProcess()
    void DoProcess();
    // public System.Void .ctor()
    // Offset: 0x54274E8
    // Implemented from: UnityEngine.XR.Interaction.Toolkit.UI.UIInputModule
    // Base method: System.Void UIInputModule::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static XRUIInputModule* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<XRUIInputModule*, creationType>()));
    }
  }; // UnityEngine.XR.Interaction.Toolkit.UI.XRUIInputModule
  #pragma pack(pop)
  static check_size<sizeof(XRUIInputModule), 888 + sizeof(::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::RegisteredInteractor>*)> __UnityEngine_XR_Interaction_Toolkit_UI_XRUIInputModuleSizeCheck;
  static_assert(sizeof(XRUIInputModule) == 0x380);
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::ActiveInputMode, "UnityEngine.XR.Interaction.Toolkit.UI", "XRUIInputModule/ActiveInputMode");
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::RegisteredTouch, "UnityEngine.XR.Interaction.Toolkit.UI", "XRUIInputModule/RegisteredTouch");
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::RegisteredInteractor, "UnityEngine.XR.Interaction.Toolkit.UI", "XRUIInputModule/RegisteredInteractor");
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::get_activeInputMode
// Il2CppName: get_activeInputMode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::ActiveInputMode (UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::*)()>(&UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::get_activeInputMode)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule*), "get_activeInputMode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::set_activeInputMode
// Il2CppName: set_activeInputMode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::*)(::UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::ActiveInputMode)>(&UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::set_activeInputMode)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit.UI", "XRUIInputModule/ActiveInputMode")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule*), "set_activeInputMode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::get_enableXRInput
// Il2CppName: get_enableXRInput
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::*)()>(&UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::get_enableXRInput)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule*), "get_enableXRInput", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::set_enableXRInput
// Il2CppName: set_enableXRInput
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::*)(bool)>(&UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::set_enableXRInput)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule*), "set_enableXRInput", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::get_enableMouseInput
// Il2CppName: get_enableMouseInput
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::*)()>(&UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::get_enableMouseInput)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule*), "get_enableMouseInput", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::set_enableMouseInput
// Il2CppName: set_enableMouseInput
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::*)(bool)>(&UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::set_enableMouseInput)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule*), "set_enableMouseInput", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::get_enableTouchInput
// Il2CppName: get_enableTouchInput
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::*)()>(&UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::get_enableTouchInput)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule*), "get_enableTouchInput", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::set_enableTouchInput
// Il2CppName: set_enableTouchInput
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::*)(bool)>(&UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::set_enableTouchInput)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule*), "set_enableTouchInput", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::get_pointAction
// Il2CppName: get_pointAction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::InputActionReference* (UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::*)()>(&UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::get_pointAction)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule*), "get_pointAction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::set_pointAction
// Il2CppName: set_pointAction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::*)(::UnityEngine::InputSystem::InputActionReference*)>(&UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::set_pointAction)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputActionReference")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule*), "set_pointAction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::get_leftClickAction
// Il2CppName: get_leftClickAction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::InputActionReference* (UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::*)()>(&UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::get_leftClickAction)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule*), "get_leftClickAction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::set_leftClickAction
// Il2CppName: set_leftClickAction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::*)(::UnityEngine::InputSystem::InputActionReference*)>(&UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::set_leftClickAction)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputActionReference")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule*), "set_leftClickAction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::get_middleClickAction
// Il2CppName: get_middleClickAction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::InputActionReference* (UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::*)()>(&UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::get_middleClickAction)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule*), "get_middleClickAction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::set_middleClickAction
// Il2CppName: set_middleClickAction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::*)(::UnityEngine::InputSystem::InputActionReference*)>(&UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::set_middleClickAction)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputActionReference")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule*), "set_middleClickAction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::get_rightClickAction
// Il2CppName: get_rightClickAction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::InputActionReference* (UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::*)()>(&UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::get_rightClickAction)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule*), "get_rightClickAction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::set_rightClickAction
// Il2CppName: set_rightClickAction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::*)(::UnityEngine::InputSystem::InputActionReference*)>(&UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::set_rightClickAction)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputActionReference")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule*), "set_rightClickAction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::get_scrollWheelAction
// Il2CppName: get_scrollWheelAction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::InputActionReference* (UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::*)()>(&UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::get_scrollWheelAction)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule*), "get_scrollWheelAction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::set_scrollWheelAction
// Il2CppName: set_scrollWheelAction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::*)(::UnityEngine::InputSystem::InputActionReference*)>(&UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::set_scrollWheelAction)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputActionReference")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule*), "set_scrollWheelAction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::get_navigateAction
// Il2CppName: get_navigateAction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::InputActionReference* (UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::*)()>(&UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::get_navigateAction)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule*), "get_navigateAction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::set_navigateAction
// Il2CppName: set_navigateAction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::*)(::UnityEngine::InputSystem::InputActionReference*)>(&UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::set_navigateAction)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputActionReference")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule*), "set_navigateAction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::get_submitAction
// Il2CppName: get_submitAction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::InputActionReference* (UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::*)()>(&UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::get_submitAction)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule*), "get_submitAction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::set_submitAction
// Il2CppName: set_submitAction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::*)(::UnityEngine::InputSystem::InputActionReference*)>(&UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::set_submitAction)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputActionReference")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule*), "set_submitAction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::get_cancelAction
// Il2CppName: get_cancelAction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::InputActionReference* (UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::*)()>(&UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::get_cancelAction)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule*), "get_cancelAction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::set_cancelAction
// Il2CppName: set_cancelAction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::*)(::UnityEngine::InputSystem::InputActionReference*)>(&UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::set_cancelAction)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputActionReference")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule*), "set_cancelAction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::get_enableBuiltinActionsAsFallback
// Il2CppName: get_enableBuiltinActionsAsFallback
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::*)()>(&UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::get_enableBuiltinActionsAsFallback)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule*), "get_enableBuiltinActionsAsFallback", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::set_enableBuiltinActionsAsFallback
// Il2CppName: set_enableBuiltinActionsAsFallback
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::*)(bool)>(&UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::set_enableBuiltinActionsAsFallback)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule*), "set_enableBuiltinActionsAsFallback", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::get_enableGamepadInput
// Il2CppName: get_enableGamepadInput
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::*)()>(&UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::get_enableGamepadInput)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule*), "get_enableGamepadInput", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::set_enableGamepadInput
// Il2CppName: set_enableGamepadInput
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::*)(bool)>(&UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::set_enableGamepadInput)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule*), "set_enableGamepadInput", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::get_enableJoystickInput
// Il2CppName: get_enableJoystickInput
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::*)()>(&UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::get_enableJoystickInput)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule*), "get_enableJoystickInput", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::set_enableJoystickInput
// Il2CppName: set_enableJoystickInput
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::*)(bool)>(&UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::set_enableJoystickInput)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule*), "set_enableJoystickInput", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::get_horizontalAxis
// Il2CppName: get_horizontalAxis
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::*)()>(&UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::get_horizontalAxis)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule*), "get_horizontalAxis", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::set_horizontalAxis
// Il2CppName: set_horizontalAxis
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::*)(::StringW)>(&UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::set_horizontalAxis)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule*), "set_horizontalAxis", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::get_verticalAxis
// Il2CppName: get_verticalAxis
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::*)()>(&UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::get_verticalAxis)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule*), "get_verticalAxis", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::set_verticalAxis
// Il2CppName: set_verticalAxis
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::*)(::StringW)>(&UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::set_verticalAxis)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule*), "set_verticalAxis", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::get_submitButton
// Il2CppName: get_submitButton
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::*)()>(&UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::get_submitButton)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule*), "get_submitButton", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::set_submitButton
// Il2CppName: set_submitButton
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::*)(::StringW)>(&UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::set_submitButton)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule*), "set_submitButton", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::get_cancelButton
// Il2CppName: get_cancelButton
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::*)()>(&UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::get_cancelButton)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule*), "get_cancelButton", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::set_cancelButton
// Il2CppName: set_cancelButton
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::*)(::StringW)>(&UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::set_cancelButton)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule*), "set_cancelButton", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::RegisterInteractor
// Il2CppName: RegisterInteractor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::*)(::UnityEngine::XR::Interaction::Toolkit::UI::IUIInteractor*)>(&UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::RegisterInteractor)> {
  static const MethodInfo* get() {
    static auto* interactor = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit.UI", "IUIInteractor")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule*), "RegisterInteractor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactor});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::UnregisterInteractor
// Il2CppName: UnregisterInteractor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::*)(::UnityEngine::XR::Interaction::Toolkit::UI::IUIInteractor*)>(&UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::UnregisterInteractor)> {
  static const MethodInfo* get() {
    static auto* interactor = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit.UI", "IUIInteractor")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule*), "UnregisterInteractor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactor});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::GetInteractor
// Il2CppName: GetInteractor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::XR::Interaction::Toolkit::UI::IUIInteractor* (UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::*)(int)>(&UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::GetInteractor)> {
  static const MethodInfo* get() {
    static auto* pointerId = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule*), "GetInteractor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{pointerId});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::GetTrackedDeviceModel
// Il2CppName: GetTrackedDeviceModel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::*)(::UnityEngine::XR::Interaction::Toolkit::UI::IUIInteractor*, ByRef<::UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceModel>)>(&UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::GetTrackedDeviceModel)> {
  static const MethodInfo* get() {
    static auto* interactor = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit.UI", "IUIInteractor")->byval_arg;
    static auto* model = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit.UI", "TrackedDeviceModel")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule*), "GetTrackedDeviceModel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactor, model});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::ProcessMouse
// Il2CppName: ProcessMouse
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::*)()>(&UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::ProcessMouse)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule*), "ProcessMouse", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::ProcessTouches
// Il2CppName: ProcessTouches
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::*)()>(&UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::ProcessTouches)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule*), "ProcessTouches", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::ProcessNavigation
// Il2CppName: ProcessNavigation
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::*)()>(&UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::ProcessNavigation)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule*), "ProcessNavigation", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::InputActionReferencesAreSet
// Il2CppName: InputActionReferencesAreSet
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::*)()>(&UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::InputActionReferencesAreSet)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule*), "InputActionReferencesAreSet", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::EnableAllActions
// Il2CppName: EnableAllActions
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::*)()>(&UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::EnableAllActions)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule*), "EnableAllActions", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::DisableAllActions
// Il2CppName: DisableAllActions
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::*)()>(&UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::DisableAllActions)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule*), "DisableAllActions", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::IsActionEnabled
// Il2CppName: IsActionEnabled
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::UnityEngine::InputSystem::InputActionReference*)>(&UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::IsActionEnabled)> {
  static const MethodInfo* get() {
    static auto* inputAction = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputActionReference")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule*), "IsActionEnabled", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{inputAction});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::EnableInputAction
// Il2CppName: EnableInputAction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::InputSystem::InputActionReference*)>(&UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::EnableInputAction)> {
  static const MethodInfo* get() {
    static auto* inputAction = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputActionReference")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule*), "EnableInputAction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{inputAction});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::DisableInputAction
// Il2CppName: DisableInputAction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::InputSystem::InputActionReference*)>(&UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::DisableInputAction)> {
  static const MethodInfo* get() {
    static auto* inputAction = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputActionReference")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule*), "DisableInputAction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{inputAction});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::SetInputAction
// Il2CppName: SetInputAction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::*)(ByRef<::UnityEngine::InputSystem::InputActionReference*>, ::UnityEngine::InputSystem::InputActionReference*)>(&UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::SetInputAction)> {
  static const MethodInfo* get() {
    static auto* inputAction = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputActionReference")->this_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputActionReference")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule*), "SetInputAction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{inputAction, value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::get_maxRaycastDistance
// Il2CppName: get_maxRaycastDistance
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::*)()>(&UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::get_maxRaycastDistance)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule*), "get_maxRaycastDistance", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::set_maxRaycastDistance
// Il2CppName: set_maxRaycastDistance
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::*)(float)>(&UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::set_maxRaycastDistance)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule*), "set_maxRaycastDistance", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::OnEnable
// Il2CppName: OnEnable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::*)()>(&UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::OnEnable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule*), "OnEnable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::OnDisable
// Il2CppName: OnDisable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::*)()>(&UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::OnDisable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule*), "OnDisable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::DoProcess
// Il2CppName: DoProcess
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::*)()>(&UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::DoProcess)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule*), "DoProcess", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
