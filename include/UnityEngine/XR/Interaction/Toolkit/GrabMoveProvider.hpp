// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.ConstrainedMoveProvider
#include "UnityEngine/XR/Interaction/Toolkit/ConstrainedMoveProvider.hpp"
// Including type: UnityEngine.InputSystem.InputActionProperty
#include "UnityEngine/InputSystem/InputActionProperty.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Transform
  class Transform;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Forward declaring namespace: UnityEngine::XR::Interaction::Toolkit
namespace UnityEngine::XR::Interaction::Toolkit {
  // Forward declaring type: IXRSelectInteractor
  class IXRSelectInteractor;
}
// Completed forward declares
// Type namespace: UnityEngine.XR.Interaction.Toolkit
namespace UnityEngine::XR::Interaction::Toolkit {
  // Forward declaring type: GrabMoveProvider
  class GrabMoveProvider;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::XR::Interaction::Toolkit::GrabMoveProvider);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::XR::Interaction::Toolkit::GrabMoveProvider*, "UnityEngine.XR.Interaction.Toolkit", "GrabMoveProvider");
// Type namespace: UnityEngine.XR.Interaction.Toolkit
namespace UnityEngine::XR::Interaction::Toolkit {
  // Size: 0xA8
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.XR.Interaction.Toolkit.GrabMoveProvider
  // [TokenAttribute] Offset: FFFFFFFF
  // [HelpURLAttribute] Offset: FFFFFFFF
  // [AddComponentMenu] Offset: FFFFFFFF
  class GrabMoveProvider : public ::UnityEngine::XR::Interaction::Toolkit::ConstrainedMoveProvider {
    public:
    public:
    // private UnityEngine.Transform m_ControllerTransform
    // Size: 0x8
    // Offset: 0x68
    ::UnityEngine::Transform* m_ControllerTransform;
    // Field size check
    static_assert(sizeof(::UnityEngine::Transform*) == 0x8);
    // private System.Boolean m_EnableMoveWhileSelecting
    // Size: 0x1
    // Offset: 0x70
    bool m_EnableMoveWhileSelecting;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: m_EnableMoveWhileSelecting and: m_MoveFactor
    char __padding1[0x3] = {};
    // private System.Single m_MoveFactor
    // Size: 0x4
    // Offset: 0x74
    float m_MoveFactor;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private UnityEngine.InputSystem.InputActionProperty m_GrabMoveAction
    // Size: 0x18
    // Offset: 0x78
    ::UnityEngine::InputSystem::InputActionProperty m_GrabMoveAction;
    // Field size check
    static_assert(sizeof(::UnityEngine::InputSystem::InputActionProperty) == 0x18);
    // private System.Boolean <canMove>k__BackingField
    // Size: 0x1
    // Offset: 0x90
    bool canMove;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean m_IsMoving
    // Size: 0x1
    // Offset: 0x91
    bool m_IsMoving;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: m_IsMoving and: m_PreviousControllerLocalPosition
    char __padding5[0x2] = {};
    // private UnityEngine.Vector3 m_PreviousControllerLocalPosition
    // Size: 0xC
    // Offset: 0x94
    ::UnityEngine::Vector3 m_PreviousControllerLocalPosition;
    // Field size check
    static_assert(sizeof(::UnityEngine::Vector3) == 0xC);
    // private readonly System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractor> m_ControllerInteractors
    // Size: 0x8
    // Offset: 0xA0
    ::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractor*>* m_ControllerInteractors;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractor*>*) == 0x8);
    public:
    // Get instance field reference: private UnityEngine.Transform m_ControllerTransform
    [[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& dyn_m_ControllerTransform();
    // Get instance field reference: private System.Boolean m_EnableMoveWhileSelecting
    [[deprecated("Use field access instead!")]] bool& dyn_m_EnableMoveWhileSelecting();
    // Get instance field reference: private System.Single m_MoveFactor
    [[deprecated("Use field access instead!")]] float& dyn_m_MoveFactor();
    // Get instance field reference: private UnityEngine.InputSystem.InputActionProperty m_GrabMoveAction
    [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::InputActionProperty& dyn_m_GrabMoveAction();
    // Get instance field reference: private System.Boolean <canMove>k__BackingField
    [[deprecated("Use field access instead!")]] bool& dyn_$canMove$k__BackingField();
    // Get instance field reference: private System.Boolean m_IsMoving
    [[deprecated("Use field access instead!")]] bool& dyn_m_IsMoving();
    // Get instance field reference: private UnityEngine.Vector3 m_PreviousControllerLocalPosition
    [[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& dyn_m_PreviousControllerLocalPosition();
    // Get instance field reference: private readonly System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractor> m_ControllerInteractors
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractor*>*& dyn_m_ControllerInteractors();
    // public UnityEngine.Transform get_controllerTransform()
    // Offset: 0x540C888
    ::UnityEngine::Transform* get_controllerTransform();
    // public System.Void set_controllerTransform(UnityEngine.Transform value)
    // Offset: 0x540C890
    void set_controllerTransform(::UnityEngine::Transform* value);
    // public System.Boolean get_enableMoveWhileSelecting()
    // Offset: 0x540C98C
    bool get_enableMoveWhileSelecting();
    // public System.Void set_enableMoveWhileSelecting(System.Boolean value)
    // Offset: 0x540C994
    void set_enableMoveWhileSelecting(bool value);
    // public System.Single get_moveFactor()
    // Offset: 0x540C9A0
    float get_moveFactor();
    // public System.Void set_moveFactor(System.Single value)
    // Offset: 0x540C9A8
    void set_moveFactor(float value);
    // public UnityEngine.InputSystem.InputActionProperty get_grabMoveAction()
    // Offset: 0x540C9B0
    ::UnityEngine::InputSystem::InputActionProperty get_grabMoveAction();
    // public System.Void set_grabMoveAction(UnityEngine.InputSystem.InputActionProperty value)
    // Offset: 0x540C9C4
    void set_grabMoveAction(::UnityEngine::InputSystem::InputActionProperty value);
    // public System.Boolean get_canMove()
    // Offset: 0x540CAE8
    bool get_canMove();
    // public System.Void set_canMove(System.Boolean value)
    // Offset: 0x540CAF0
    void set_canMove(bool value);
    // protected System.Void OnEnable()
    // Offset: 0x540CC44
    void OnEnable();
    // protected System.Void OnDisable()
    // Offset: 0x540CC74
    void OnDisable();
    // public System.Boolean IsGrabbing()
    // Offset: 0x540CE1C
    bool IsGrabbing();
    // private System.Void GatherControllerInteractors()
    // Offset: 0x540C8AC
    void GatherControllerInteractors();
    // private System.Boolean ControllerHasSelection()
    // Offset: 0x540CE74
    bool ControllerHasSelection();
    // private System.Void SetInputActionProperty(ref UnityEngine.InputSystem.InputActionProperty property, UnityEngine.InputSystem.InputActionProperty value)
    // Offset: 0x540C9F4
    void SetInputActionProperty(ByRef<::UnityEngine::InputSystem::InputActionProperty> property, ::UnityEngine::InputSystem::InputActionProperty value);
    // protected override System.Void Awake()
    // Offset: 0x540CAFC
    // Implemented from: UnityEngine.XR.Interaction.Toolkit.LocomotionProvider
    // Base method: System.Void LocomotionProvider::Awake()
    void Awake();
    // protected override UnityEngine.Vector3 ComputeDesiredMove(out System.Boolean attemptingMove)
    // Offset: 0x540CCA4
    // Implemented from: UnityEngine.XR.Interaction.Toolkit.ConstrainedMoveProvider
    // Base method: UnityEngine.Vector3 ConstrainedMoveProvider::ComputeDesiredMove(out System.Boolean attemptingMove)
    ::UnityEngine::Vector3 ComputeDesiredMove(ByRef<bool> attemptingMove);
    // public System.Void .ctor()
    // Offset: 0x540D044
    // Implemented from: UnityEngine.XR.Interaction.Toolkit.ConstrainedMoveProvider
    // Base method: System.Void ConstrainedMoveProvider::.ctor()
    // Base method: System.Void LocomotionProvider::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static GrabMoveProvider* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::GrabMoveProvider::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<GrabMoveProvider*, creationType>()));
    }
  }; // UnityEngine.XR.Interaction.Toolkit.GrabMoveProvider
  #pragma pack(pop)
  static check_size<sizeof(GrabMoveProvider), 160 + sizeof(::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractor*>*)> __UnityEngine_XR_Interaction_Toolkit_GrabMoveProviderSizeCheck;
  static_assert(sizeof(GrabMoveProvider) == 0xA8);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::GrabMoveProvider::get_controllerTransform
// Il2CppName: get_controllerTransform
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Transform* (UnityEngine::XR::Interaction::Toolkit::GrabMoveProvider::*)()>(&UnityEngine::XR::Interaction::Toolkit::GrabMoveProvider::get_controllerTransform)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::GrabMoveProvider*), "get_controllerTransform", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::GrabMoveProvider::set_controllerTransform
// Il2CppName: set_controllerTransform
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::GrabMoveProvider::*)(::UnityEngine::Transform*)>(&UnityEngine::XR::Interaction::Toolkit::GrabMoveProvider::set_controllerTransform)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Transform")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::GrabMoveProvider*), "set_controllerTransform", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::GrabMoveProvider::get_enableMoveWhileSelecting
// Il2CppName: get_enableMoveWhileSelecting
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::XR::Interaction::Toolkit::GrabMoveProvider::*)()>(&UnityEngine::XR::Interaction::Toolkit::GrabMoveProvider::get_enableMoveWhileSelecting)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::GrabMoveProvider*), "get_enableMoveWhileSelecting", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::GrabMoveProvider::set_enableMoveWhileSelecting
// Il2CppName: set_enableMoveWhileSelecting
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::GrabMoveProvider::*)(bool)>(&UnityEngine::XR::Interaction::Toolkit::GrabMoveProvider::set_enableMoveWhileSelecting)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::GrabMoveProvider*), "set_enableMoveWhileSelecting", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::GrabMoveProvider::get_moveFactor
// Il2CppName: get_moveFactor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::XR::Interaction::Toolkit::GrabMoveProvider::*)()>(&UnityEngine::XR::Interaction::Toolkit::GrabMoveProvider::get_moveFactor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::GrabMoveProvider*), "get_moveFactor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::GrabMoveProvider::set_moveFactor
// Il2CppName: set_moveFactor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::GrabMoveProvider::*)(float)>(&UnityEngine::XR::Interaction::Toolkit::GrabMoveProvider::set_moveFactor)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::GrabMoveProvider*), "set_moveFactor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::GrabMoveProvider::get_grabMoveAction
// Il2CppName: get_grabMoveAction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::InputActionProperty (UnityEngine::XR::Interaction::Toolkit::GrabMoveProvider::*)()>(&UnityEngine::XR::Interaction::Toolkit::GrabMoveProvider::get_grabMoveAction)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::GrabMoveProvider*), "get_grabMoveAction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::GrabMoveProvider::set_grabMoveAction
// Il2CppName: set_grabMoveAction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::GrabMoveProvider::*)(::UnityEngine::InputSystem::InputActionProperty)>(&UnityEngine::XR::Interaction::Toolkit::GrabMoveProvider::set_grabMoveAction)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputActionProperty")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::GrabMoveProvider*), "set_grabMoveAction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::GrabMoveProvider::get_canMove
// Il2CppName: get_canMove
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::XR::Interaction::Toolkit::GrabMoveProvider::*)()>(&UnityEngine::XR::Interaction::Toolkit::GrabMoveProvider::get_canMove)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::GrabMoveProvider*), "get_canMove", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::GrabMoveProvider::set_canMove
// Il2CppName: set_canMove
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::GrabMoveProvider::*)(bool)>(&UnityEngine::XR::Interaction::Toolkit::GrabMoveProvider::set_canMove)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::GrabMoveProvider*), "set_canMove", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::GrabMoveProvider::OnEnable
// Il2CppName: OnEnable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::GrabMoveProvider::*)()>(&UnityEngine::XR::Interaction::Toolkit::GrabMoveProvider::OnEnable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::GrabMoveProvider*), "OnEnable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::GrabMoveProvider::OnDisable
// Il2CppName: OnDisable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::GrabMoveProvider::*)()>(&UnityEngine::XR::Interaction::Toolkit::GrabMoveProvider::OnDisable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::GrabMoveProvider*), "OnDisable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::GrabMoveProvider::IsGrabbing
// Il2CppName: IsGrabbing
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::XR::Interaction::Toolkit::GrabMoveProvider::*)()>(&UnityEngine::XR::Interaction::Toolkit::GrabMoveProvider::IsGrabbing)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::GrabMoveProvider*), "IsGrabbing", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::GrabMoveProvider::GatherControllerInteractors
// Il2CppName: GatherControllerInteractors
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::GrabMoveProvider::*)()>(&UnityEngine::XR::Interaction::Toolkit::GrabMoveProvider::GatherControllerInteractors)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::GrabMoveProvider*), "GatherControllerInteractors", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::GrabMoveProvider::ControllerHasSelection
// Il2CppName: ControllerHasSelection
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::XR::Interaction::Toolkit::GrabMoveProvider::*)()>(&UnityEngine::XR::Interaction::Toolkit::GrabMoveProvider::ControllerHasSelection)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::GrabMoveProvider*), "ControllerHasSelection", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::GrabMoveProvider::SetInputActionProperty
// Il2CppName: SetInputActionProperty
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::GrabMoveProvider::*)(ByRef<::UnityEngine::InputSystem::InputActionProperty>, ::UnityEngine::InputSystem::InputActionProperty)>(&UnityEngine::XR::Interaction::Toolkit::GrabMoveProvider::SetInputActionProperty)> {
  static const MethodInfo* get() {
    static auto* property = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputActionProperty")->this_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputActionProperty")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::GrabMoveProvider*), "SetInputActionProperty", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{property, value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::GrabMoveProvider::Awake
// Il2CppName: Awake
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::GrabMoveProvider::*)()>(&UnityEngine::XR::Interaction::Toolkit::GrabMoveProvider::Awake)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::GrabMoveProvider*), "Awake", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::GrabMoveProvider::ComputeDesiredMove
// Il2CppName: ComputeDesiredMove
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector3 (UnityEngine::XR::Interaction::Toolkit::GrabMoveProvider::*)(ByRef<bool>)>(&UnityEngine::XR::Interaction::Toolkit::GrabMoveProvider::ComputeDesiredMove)> {
  static const MethodInfo* get() {
    static auto* attemptingMove = &::il2cpp_utils::GetClassFromName("System", "Boolean")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::GrabMoveProvider*), "ComputeDesiredMove", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{attemptingMove});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::GrabMoveProvider::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
