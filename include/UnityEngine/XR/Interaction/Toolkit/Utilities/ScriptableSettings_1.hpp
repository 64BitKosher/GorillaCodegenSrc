// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.Utilities.Internal.ScriptableSettingsBase`1
#include "UnityEngine/XR/Interaction/Toolkit/Utilities/Internal/ScriptableSettingsBase_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Skipping declaration: ScriptableObject because it is already included!
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: String
  class String;
}
// Completed forward declares
// Type namespace: UnityEngine.XR.Interaction.Toolkit.Utilities
namespace UnityEngine::XR::Interaction::Toolkit::Utilities {
  // Forward declaring type: ScriptableSettings`1<T>
  template<typename T>
  class ScriptableSettings_1;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE_GENERIC_CLASS(::UnityEngine::XR::Interaction::Toolkit::Utilities::ScriptableSettings_1, "UnityEngine.XR.Interaction.Toolkit.Utilities", "ScriptableSettings`1");
// Type namespace: UnityEngine.XR.Interaction.Toolkit.Utilities
namespace UnityEngine::XR::Interaction::Toolkit::Utilities {
  // WARNING Size may be invalid!
  // Autogenerated type: UnityEngine.XR.Interaction.Toolkit.Utilities.ScriptableSettings`1
  // [TokenAttribute] Offset: FFFFFFFF
  template<typename T>
  class ScriptableSettings_1 : public ::UnityEngine::XR::Interaction::Toolkit::Utilities::Internal::ScriptableSettingsBase_1<T> {
    public:
    // Autogenerated static field getter
    // Get static field: static private System.String k_CustomSavePathFormat
    static ::StringW _get_k_CustomSavePathFormat() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::Utilities::ScriptableSettings_1::_get_k_CustomSavePathFormat");
      return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<ScriptableSettings_1<T>*>::get(), "k_CustomSavePathFormat"));
    }
    // Autogenerated static field setter
    // Set static field: static private System.String k_CustomSavePathFormat
    static void _set_k_CustomSavePathFormat(::StringW value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::Utilities::ScriptableSettings_1::_set_k_CustomSavePathFormat");
      THROW_UNLESS(il2cpp_utils::SetFieldValue(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<ScriptableSettings_1<T>*>::get(), "k_CustomSavePathFormat", value));
    }
    // Autogenerated static field getter
    // Get static field: static private System.String k_SavePathFormat
    static ::StringW _get_k_SavePathFormat() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::Utilities::ScriptableSettings_1::_get_k_SavePathFormat");
      return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<ScriptableSettings_1<T>*>::get(), "k_SavePathFormat"));
    }
    // Autogenerated static field setter
    // Set static field: static private System.String k_SavePathFormat
    static void _set_k_SavePathFormat(::StringW value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::Utilities::ScriptableSettings_1::_set_k_SavePathFormat");
      THROW_UNLESS(il2cpp_utils::SetFieldValue(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<ScriptableSettings_1<T>*>::get(), "k_SavePathFormat", value));
    }
    // Autogenerated static field getter
    // Get static field: static private System.String k_LoadPathFormat
    static ::StringW _get_k_LoadPathFormat() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::Utilities::ScriptableSettings_1::_get_k_LoadPathFormat");
      return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<ScriptableSettings_1<T>*>::get(), "k_LoadPathFormat"));
    }
    // Autogenerated static field setter
    // Set static field: static private System.String k_LoadPathFormat
    static void _set_k_LoadPathFormat(::StringW value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::Utilities::ScriptableSettings_1::_set_k_LoadPathFormat");
      THROW_UNLESS(il2cpp_utils::SetFieldValue(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<ScriptableSettings_1<T>*>::get(), "k_LoadPathFormat", value));
    }
    // static public T get_instance()
    // Offset: 0xFFFFFFFFFFFFFFFF
    static T get_instance() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::Utilities::ScriptableSettings_1::get_instance");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<ScriptableSettings_1<T>*>::get(), "get_instance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      return ::il2cpp_utils::RunMethodRethrow<T, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
    }
    // static T CreateAndLoad()
    // Offset: 0xFFFFFFFFFFFFFFFF
    static T CreateAndLoad() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::Utilities::ScriptableSettings_1::CreateAndLoad");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<ScriptableSettings_1<T>*>::get(), "CreateAndLoad", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      return ::il2cpp_utils::RunMethodRethrow<T, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
    }
    // protected System.Void .ctor()
    // Offset: 0xFFFFFFFFFFFFFFFF
    // Implemented from: UnityEngine.XR.Interaction.Toolkit.Utilities.Internal.ScriptableSettingsBase`1
    // Base method: System.Void ScriptableSettingsBase_1::.ctor()
    // Base method: System.Void ScriptableSettingsBase::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static ScriptableSettings_1<T>* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::Utilities::ScriptableSettings_1::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<ScriptableSettings_1<T>*, creationType>()));
    }
  }; // UnityEngine.XR.Interaction.Toolkit.Utilities.ScriptableSettings`1
  // Could not write size check! Type: UnityEngine.XR.Interaction.Toolkit.Utilities.ScriptableSettings`1 is generic, or has no fields that are valid for size checks!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
