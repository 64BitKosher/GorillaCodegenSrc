// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.Utilities.SmallRegistrationList`1
#include "UnityEngine/XR/Interaction/Toolkit/Utilities/SmallRegistrationList_1.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.IXRFilterList`1
#include "UnityEngine/XR/Interaction/Toolkit/IXRFilterList_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Object
  class Object;
}
// Completed forward declares
// Type namespace: UnityEngine.XR.Interaction.Toolkit.Utilities
namespace UnityEngine::XR::Interaction::Toolkit::Utilities {
  // Forward declaring type: ExposedRegistrationList`1<T>
  template<typename T>
  class ExposedRegistrationList_1;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE_GENERIC_CLASS(::UnityEngine::XR::Interaction::Toolkit::Utilities::ExposedRegistrationList_1, "UnityEngine.XR.Interaction.Toolkit.Utilities", "ExposedRegistrationList`1");
// Type namespace: UnityEngine.XR.Interaction.Toolkit.Utilities
namespace UnityEngine::XR::Interaction::Toolkit::Utilities {
  // WARNING Size may be invalid!
  // Autogenerated type: UnityEngine.XR.Interaction.Toolkit.Utilities.ExposedRegistrationList`1
  // [TokenAttribute] Offset: FFFFFFFF
  template<typename T>
  class ExposedRegistrationList_1 : public ::UnityEngine::XR::Interaction::Toolkit::Utilities::SmallRegistrationList_1<T>/*, public ::UnityEngine::XR::Interaction::Toolkit::IXRFilterList_1<T>*/ {
    public:
    // Creating interface conversion operator: operator ::UnityEngine::XR::Interaction::Toolkit::IXRFilterList_1<T>
    operator ::UnityEngine::XR::Interaction::Toolkit::IXRFilterList_1<T>() noexcept {
      return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::IXRFilterList_1<T>*>(this);
    }
    // public System.Int32 get_count()
    // Offset: 0xFFFFFFFFFFFFFFFF
    int get_count() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::Utilities::ExposedRegistrationList_1::get_count");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::Utilities::ExposedRegistrationList_1<T>*), -1));
      return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
    }
    // public System.Void Add(T item)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void Add(T item) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::Utilities::ExposedRegistrationList_1::Add");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::Utilities::ExposedRegistrationList_1<T>*), -1));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, item);
    }
    // public System.Boolean Remove(T item)
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool Remove(T item) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::Utilities::ExposedRegistrationList_1::Remove");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::Utilities::ExposedRegistrationList_1<T>*), -1));
      return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, item);
    }
    // public System.Void MoveTo(T item, System.Int32 newIndex)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void MoveTo(T item, int newIndex) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::Utilities::ExposedRegistrationList_1::MoveTo");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::Utilities::ExposedRegistrationList_1<T>*), -1));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, item, newIndex);
    }
    // public System.Void Clear()
    // Offset: 0xFFFFFFFFFFFFFFFF
    void Clear() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::Utilities::ExposedRegistrationList_1::Clear");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::Utilities::ExposedRegistrationList_1<T>*), -1));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
    }
    // public System.Void GetAll(System.Collections.Generic.List`1<T> results)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void GetAll(::System::Collections::Generic::List_1<T>* results) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::Utilities::ExposedRegistrationList_1::GetAll");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::Utilities::ExposedRegistrationList_1<T>*), -1));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, results);
    }
    // public T GetAt(System.Int32 index)
    // Offset: 0xFFFFFFFFFFFFFFFF
    T GetAt(int index) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::Utilities::ExposedRegistrationList_1::GetAt");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::Utilities::ExposedRegistrationList_1<T>*), -1));
      return ::il2cpp_utils::RunMethodRethrow<T, false>(this, ___internal__method, index);
    }
    // public System.Void RegisterReferences(System.Collections.Generic.List`1<TObject> references, UnityEngine.Object context)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class TObject>
    void RegisterReferences(::System::Collections::Generic::List_1<TObject>* references, ::UnityEngine::Object* context) {
      static_assert(std::is_convertible_v<TObject, ::UnityEngine::Object*>);
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::Utilities::ExposedRegistrationList_1::RegisterReferences");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RegisterReferences", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TObject>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(references), ::il2cpp_utils::ExtractType(context)})));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TObject>::get()}));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___generic__method, references, context);
    }
    // public System.Void .ctor()
    // Offset: 0xFFFFFFFFFFFFFFFF
    // Implemented from: UnityEngine.XR.Interaction.Toolkit.Utilities.SmallRegistrationList`1
    // Base method: System.Void SmallRegistrationList_1::.ctor()
    // Base method: System.Void BaseRegistrationList_1::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static ExposedRegistrationList_1<T>* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::Utilities::ExposedRegistrationList_1::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<ExposedRegistrationList_1<T>*, creationType>()));
    }
  }; // UnityEngine.XR.Interaction.Toolkit.Utilities.ExposedRegistrationList`1
  // Could not write size check! Type: UnityEngine.XR.Interaction.Toolkit.Utilities.ExposedRegistrationList`1 is generic, or has no fields that are valid for size checks!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
