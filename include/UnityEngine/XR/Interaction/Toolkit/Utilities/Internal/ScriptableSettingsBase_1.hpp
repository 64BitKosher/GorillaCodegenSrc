// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.Utilities.Internal.ScriptableSettingsBase
#include "UnityEngine/XR/Interaction/Toolkit/Utilities/Internal/ScriptableSettingsBase.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Skipping declaration: ScriptableObject because it is already included!
}
// Completed forward declares
// Type namespace: UnityEngine.XR.Interaction.Toolkit.Utilities.Internal
namespace UnityEngine::XR::Interaction::Toolkit::Utilities::Internal {
  // Forward declaring type: ScriptableSettingsBase`1<T>
  template<typename T>
  class ScriptableSettingsBase_1;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE_GENERIC_CLASS(::UnityEngine::XR::Interaction::Toolkit::Utilities::Internal::ScriptableSettingsBase_1, "UnityEngine.XR.Interaction.Toolkit.Utilities.Internal", "ScriptableSettingsBase`1");
// Type namespace: UnityEngine.XR.Interaction.Toolkit.Utilities.Internal
namespace UnityEngine::XR::Interaction::Toolkit::Utilities::Internal {
  // WARNING Size may be invalid!
  // Autogenerated type: UnityEngine.XR.Interaction.Toolkit.Utilities.Internal.ScriptableSettingsBase`1
  // [TokenAttribute] Offset: FFFFFFFF
  template<typename T>
  class ScriptableSettingsBase_1 : public ::UnityEngine::XR::Interaction::Toolkit::Utilities::Internal::ScriptableSettingsBase {
    public:
    // Autogenerated static field getter
    // Get static field: static protected readonly System.Boolean k_HasCustomPath
    static bool _get_k_HasCustomPath() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::Utilities::Internal::ScriptableSettingsBase_1::_get_k_HasCustomPath");
      return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<ScriptableSettingsBase_1<T>*>::get(), "k_HasCustomPath"));
    }
    // Autogenerated static field setter
    // Set static field: static protected readonly System.Boolean k_HasCustomPath
    static void _set_k_HasCustomPath(bool value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::Utilities::Internal::ScriptableSettingsBase_1::_set_k_HasCustomPath");
      THROW_UNLESS(il2cpp_utils::SetFieldValue(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<ScriptableSettingsBase_1<T>*>::get(), "k_HasCustomPath", value));
    }
    // Autogenerated static field getter
    // Get static field: static protected T s_Instance
    static T _get_s_Instance() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::Utilities::Internal::ScriptableSettingsBase_1::_get_s_Instance");
      return THROW_UNLESS(il2cpp_utils::GetFieldValue<T>(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<ScriptableSettingsBase_1<T>*>::get(), "s_Instance"));
    }
    // Autogenerated static field setter
    // Set static field: static protected T s_Instance
    static void _set_s_Instance(T value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::Utilities::Internal::ScriptableSettingsBase_1::_set_s_Instance");
      THROW_UNLESS(il2cpp_utils::SetFieldValue(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<ScriptableSettingsBase_1<T>*>::get(), "s_Instance", value));
    }
    // static protected System.Void Save(System.String savePathFormat)
    // Offset: 0xFFFFFFFFFFFFFFFF
    static void Save(::StringW savePathFormat) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::Utilities::Internal::ScriptableSettingsBase_1::Save");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<ScriptableSettingsBase_1<T>*>::get(), "Save", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(savePathFormat)})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, savePathFormat);
    }
    // static protected System.String GetFilePath()
    // Offset: 0xFFFFFFFFFFFFFFFF
    static ::StringW GetFilePath() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::Utilities::Internal::ScriptableSettingsBase_1::GetFilePath");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<ScriptableSettingsBase_1<T>*>::get(), "GetFilePath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
    }
    // protected System.Void .ctor()
    // Offset: 0xFFFFFFFFFFFFFFFF
    // Implemented from: UnityEngine.XR.Interaction.Toolkit.Utilities.Internal.ScriptableSettingsBase
    // Base method: System.Void ScriptableSettingsBase::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static ScriptableSettingsBase_1<T>* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::Utilities::Internal::ScriptableSettingsBase_1::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<ScriptableSettingsBase_1<T>*, creationType>()));
    }
    // static private System.Void .cctor()
    // Offset: 0xFFFFFFFFFFFFFFFF
    // Implemented from: UnityEngine.XR.Interaction.Toolkit.Utilities.Internal.ScriptableSettingsBase
    // Base method: System.Void ScriptableSettingsBase::.cctor()
    static void _cctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::Utilities::Internal::ScriptableSettingsBase_1::.cctor");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<ScriptableSettingsBase_1<T>*>::get(), ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
    }
  }; // UnityEngine.XR.Interaction.Toolkit.Utilities.Internal.ScriptableSettingsBase`1
  // Could not write size check! Type: UnityEngine.XR.Interaction.Toolkit.Utilities.Internal.ScriptableSettingsBase`1 is generic, or has no fields that are valid for size checks!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
