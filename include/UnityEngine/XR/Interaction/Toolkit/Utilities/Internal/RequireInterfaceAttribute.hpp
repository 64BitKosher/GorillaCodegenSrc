// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.PropertyAttribute
#include "UnityEngine/PropertyAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Type
  class Type;
}
// Completed forward declares
// Type namespace: UnityEngine.XR.Interaction.Toolkit.Utilities.Internal
namespace UnityEngine::XR::Interaction::Toolkit::Utilities::Internal {
  // Forward declaring type: RequireInterfaceAttribute
  class RequireInterfaceAttribute;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::XR::Interaction::Toolkit::Utilities::Internal::RequireInterfaceAttribute);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::XR::Interaction::Toolkit::Utilities::Internal::RequireInterfaceAttribute*, "UnityEngine.XR.Interaction.Toolkit.Utilities.Internal", "RequireInterfaceAttribute");
// Type namespace: UnityEngine.XR.Interaction.Toolkit.Utilities.Internal
namespace UnityEngine::XR::Interaction::Toolkit::Utilities::Internal {
  // Size: 0x20
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.XR.Interaction.Toolkit.Utilities.Internal.RequireInterfaceAttribute
  // [TokenAttribute] Offset: FFFFFFFF
  class RequireInterfaceAttribute : public ::UnityEngine::PropertyAttribute {
    public:
    // Writing base type padding for base size: 0x14 to desired offset: 0x18
    char ___base_padding[0x4] = {};
    public:
    // private readonly System.Type <interfaceType>k__BackingField
    // Size: 0x8
    // Offset: 0x18
    ::System::Type* interfaceType;
    // Field size check
    static_assert(sizeof(::System::Type*) == 0x8);
    public:
    // Deleting conversion operator: operator int
    constexpr operator int() const noexcept = delete;
    // Get instance field reference: private readonly System.Type <interfaceType>k__BackingField
    [[deprecated("Use field access instead!")]] ::System::Type*& dyn_$interfaceType$k__BackingField();
    // public System.Type get_interfaceType()
    // Offset: 0x54193A8
    ::System::Type* get_interfaceType();
    // public System.Void .ctor(System.Type interfaceType)
    // Offset: 0x54193B0
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static RequireInterfaceAttribute* New_ctor(::System::Type* interfaceType) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::Utilities::Internal::RequireInterfaceAttribute::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<RequireInterfaceAttribute*, creationType>(interfaceType)));
    }
  }; // UnityEngine.XR.Interaction.Toolkit.Utilities.Internal.RequireInterfaceAttribute
  #pragma pack(pop)
  static check_size<sizeof(RequireInterfaceAttribute), 24 + sizeof(::System::Type*)> __UnityEngine_XR_Interaction_Toolkit_Utilities_Internal_RequireInterfaceAttributeSizeCheck;
  static_assert(sizeof(RequireInterfaceAttribute) == 0x20);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Utilities::Internal::RequireInterfaceAttribute::get_interfaceType
// Il2CppName: get_interfaceType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Type* (UnityEngine::XR::Interaction::Toolkit::Utilities::Internal::RequireInterfaceAttribute::*)()>(&UnityEngine::XR::Interaction::Toolkit::Utilities::Internal::RequireInterfaceAttribute::get_interfaceType)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Utilities::Internal::RequireInterfaceAttribute*), "get_interfaceType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Utilities::Internal::RequireInterfaceAttribute::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
