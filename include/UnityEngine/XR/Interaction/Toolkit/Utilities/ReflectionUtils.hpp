// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Reflection
namespace System::Reflection {
  // Forward declaring type: Assembly
  class Assembly;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Type
  class Type;
  // Forward declaring type: Action`1<T>
  template<typename T>
  class Action_1;
}
// Completed forward declares
// Type namespace: UnityEngine.XR.Interaction.Toolkit.Utilities
namespace UnityEngine::XR::Interaction::Toolkit::Utilities {
  // Forward declaring type: ReflectionUtils
  class ReflectionUtils;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::XR::Interaction::Toolkit::Utilities::ReflectionUtils);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::XR::Interaction::Toolkit::Utilities::ReflectionUtils*, "UnityEngine.XR.Interaction.Toolkit.Utilities", "ReflectionUtils");
// Type namespace: UnityEngine.XR.Interaction.Toolkit.Utilities
namespace UnityEngine::XR::Interaction::Toolkit::Utilities {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.XR.Interaction.Toolkit.Utilities.ReflectionUtils
  // [TokenAttribute] Offset: FFFFFFFF
  class ReflectionUtils : public ::Il2CppObject {
    public:
    // Get static field: static private System.Reflection.Assembly[] s_Assemblies
    static ::ArrayW<::System::Reflection::Assembly*> _get_s_Assemblies();
    // Set static field: static private System.Reflection.Assembly[] s_Assemblies
    static void _set_s_Assemblies(::ArrayW<::System::Reflection::Assembly*> value);
    // Get static field: static private System.Collections.Generic.List`1<System.Type[]> s_TypesPerAssembly
    static ::System::Collections::Generic::List_1<::ArrayW<::System::Type*>>* _get_s_TypesPerAssembly();
    // Set static field: static private System.Collections.Generic.List`1<System.Type[]> s_TypesPerAssembly
    static void _set_s_TypesPerAssembly(::System::Collections::Generic::List_1<::ArrayW<::System::Type*>>* value);
    // static private System.Reflection.Assembly[] GetCachedAssemblies()
    // Offset: 0x5416178
    static ::ArrayW<::System::Reflection::Assembly*> GetCachedAssemblies();
    // static public System.Void ForEachAssembly(System.Action`1<System.Reflection.Assembly> callback)
    // Offset: 0x5416200
    static void ForEachAssembly(::System::Action_1<::System::Reflection::Assembly*>* callback);
  }; // UnityEngine.XR.Interaction.Toolkit.Utilities.ReflectionUtils
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Utilities::ReflectionUtils::GetCachedAssemblies
// Il2CppName: GetCachedAssemblies
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::System::Reflection::Assembly*> (*)()>(&UnityEngine::XR::Interaction::Toolkit::Utilities::ReflectionUtils::GetCachedAssemblies)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Utilities::ReflectionUtils*), "GetCachedAssemblies", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Utilities::ReflectionUtils::ForEachAssembly
// Il2CppName: ForEachAssembly
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::Action_1<::System::Reflection::Assembly*>*)>(&UnityEngine::XR::Interaction::Toolkit::Utilities::ReflectionUtils::ForEachAssembly)> {
  static const MethodInfo* get() {
    static auto* callback = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System.Reflection", "Assembly")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Utilities::ReflectionUtils*), "ForEachAssembly", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{callback});
  }
};
