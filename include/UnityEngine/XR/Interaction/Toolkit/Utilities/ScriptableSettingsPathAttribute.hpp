// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Attribute
#include "System/Attribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Type namespace: UnityEngine.XR.Interaction.Toolkit.Utilities
namespace UnityEngine::XR::Interaction::Toolkit::Utilities {
  // Forward declaring type: ScriptableSettingsPathAttribute
  class ScriptableSettingsPathAttribute;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::XR::Interaction::Toolkit::Utilities::ScriptableSettingsPathAttribute);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::XR::Interaction::Toolkit::Utilities::ScriptableSettingsPathAttribute*, "UnityEngine.XR.Interaction.Toolkit.Utilities", "ScriptableSettingsPathAttribute");
// Type namespace: UnityEngine.XR.Interaction.Toolkit.Utilities
namespace UnityEngine::XR::Interaction::Toolkit::Utilities {
  // Size: 0x18
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.XR.Interaction.Toolkit.Utilities.ScriptableSettingsPathAttribute
  // [TokenAttribute] Offset: FFFFFFFF
  // [AttributeUsageAttribute] Offset: FFFFFFFF
  class ScriptableSettingsPathAttribute : public ::System::Attribute {
    public:
    public:
    // private System.String <path>k__BackingField
    // Size: 0x8
    // Offset: 0x10
    ::StringW path;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    public:
    // Creating conversion operator: operator ::StringW
    constexpr operator ::StringW() const noexcept {
      return path;
    }
    // Get instance field reference: private System.String <path>k__BackingField
    [[deprecated("Use field access instead!")]] ::StringW& dyn_$path$k__BackingField();
    // public System.String get_path()
    // Offset: 0x5416308
    ::StringW get_path();
    // private System.Void set_path(System.String value)
    // Offset: 0x5416310
    void set_path(::StringW value);
    // public System.Void .ctor(System.String path)
    // Offset: 0x5416318
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static ScriptableSettingsPathAttribute* New_ctor(::StringW path) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::Utilities::ScriptableSettingsPathAttribute::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<ScriptableSettingsPathAttribute*, creationType>(path)));
    }
  }; // UnityEngine.XR.Interaction.Toolkit.Utilities.ScriptableSettingsPathAttribute
  #pragma pack(pop)
  static check_size<sizeof(ScriptableSettingsPathAttribute), 16 + sizeof(::StringW)> __UnityEngine_XR_Interaction_Toolkit_Utilities_ScriptableSettingsPathAttributeSizeCheck;
  static_assert(sizeof(ScriptableSettingsPathAttribute) == 0x18);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Utilities::ScriptableSettingsPathAttribute::get_path
// Il2CppName: get_path
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (UnityEngine::XR::Interaction::Toolkit::Utilities::ScriptableSettingsPathAttribute::*)()>(&UnityEngine::XR::Interaction::Toolkit::Utilities::ScriptableSettingsPathAttribute::get_path)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Utilities::ScriptableSettingsPathAttribute*), "get_path", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Utilities::ScriptableSettingsPathAttribute::set_path
// Il2CppName: set_path
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Utilities::ScriptableSettingsPathAttribute::*)(::StringW)>(&UnityEngine::XR::Interaction::Toolkit::Utilities::ScriptableSettingsPathAttribute::set_path)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Utilities::ScriptableSettingsPathAttribute*), "set_path", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Utilities::ScriptableSettingsPathAttribute::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
