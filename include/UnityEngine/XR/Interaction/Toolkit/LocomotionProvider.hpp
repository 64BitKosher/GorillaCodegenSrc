// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.LocomotionPhase
#include "UnityEngine/XR/Interaction/Toolkit/LocomotionPhase.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Action`1<T>
  template<typename T>
  class Action_1;
}
// Forward declaring namespace: UnityEngine::XR::Interaction::Toolkit
namespace UnityEngine::XR::Interaction::Toolkit {
  // Forward declaring type: LocomotionSystem
  class LocomotionSystem;
}
// Completed forward declares
// Type namespace: UnityEngine.XR.Interaction.Toolkit
namespace UnityEngine::XR::Interaction::Toolkit {
  // Forward declaring type: LocomotionProvider
  class LocomotionProvider;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::XR::Interaction::Toolkit::LocomotionProvider);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::XR::Interaction::Toolkit::LocomotionProvider*, "UnityEngine.XR.Interaction.Toolkit", "LocomotionProvider");
// Type namespace: UnityEngine.XR.Interaction.Toolkit
namespace UnityEngine::XR::Interaction::Toolkit {
  // Size: 0x48
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.XR.Interaction.Toolkit.LocomotionProvider
  // [TokenAttribute] Offset: FFFFFFFF
  // [DefaultExecutionOrder] Offset: FFFFFFFF
  class LocomotionProvider : public ::UnityEngine::MonoBehaviour {
    public:
    public:
    // private System.Action`1<UnityEngine.XR.Interaction.Toolkit.LocomotionSystem> beginLocomotion
    // Size: 0x8
    // Offset: 0x20
    ::System::Action_1<::UnityEngine::XR::Interaction::Toolkit::LocomotionSystem*>* beginLocomotion;
    // Field size check
    static_assert(sizeof(::System::Action_1<::UnityEngine::XR::Interaction::Toolkit::LocomotionSystem*>*) == 0x8);
    // private System.Action`1<UnityEngine.XR.Interaction.Toolkit.LocomotionSystem> endLocomotion
    // Size: 0x8
    // Offset: 0x28
    ::System::Action_1<::UnityEngine::XR::Interaction::Toolkit::LocomotionSystem*>* endLocomotion;
    // Field size check
    static_assert(sizeof(::System::Action_1<::UnityEngine::XR::Interaction::Toolkit::LocomotionSystem*>*) == 0x8);
    // private UnityEngine.XR.Interaction.Toolkit.LocomotionSystem m_System
    // Size: 0x8
    // Offset: 0x30
    ::UnityEngine::XR::Interaction::Toolkit::LocomotionSystem* m_System;
    // Field size check
    static_assert(sizeof(::UnityEngine::XR::Interaction::Toolkit::LocomotionSystem*) == 0x8);
    // private UnityEngine.XR.Interaction.Toolkit.LocomotionPhase <locomotionPhase>k__BackingField
    // Size: 0x4
    // Offset: 0x38
    ::UnityEngine::XR::Interaction::Toolkit::LocomotionPhase locomotionPhase;
    // Field size check
    static_assert(sizeof(::UnityEngine::XR::Interaction::Toolkit::LocomotionPhase) == 0x4);
    // Padding between fields: locomotionPhase and: startLocomotion
    char __padding3[0x4] = {};
    // private System.Action`1<UnityEngine.XR.Interaction.Toolkit.LocomotionSystem> startLocomotion
    // Size: 0x8
    // Offset: 0x40
    ::System::Action_1<::UnityEngine::XR::Interaction::Toolkit::LocomotionSystem*>* startLocomotion;
    // Field size check
    static_assert(sizeof(::System::Action_1<::UnityEngine::XR::Interaction::Toolkit::LocomotionSystem*>*) == 0x8);
    public:
    // Get instance field reference: private System.Action`1<UnityEngine.XR.Interaction.Toolkit.LocomotionSystem> beginLocomotion
    [[deprecated("Use field access instead!")]] ::System::Action_1<::UnityEngine::XR::Interaction::Toolkit::LocomotionSystem*>*& dyn_beginLocomotion();
    // Get instance field reference: private System.Action`1<UnityEngine.XR.Interaction.Toolkit.LocomotionSystem> endLocomotion
    [[deprecated("Use field access instead!")]] ::System::Action_1<::UnityEngine::XR::Interaction::Toolkit::LocomotionSystem*>*& dyn_endLocomotion();
    // Get instance field reference: private UnityEngine.XR.Interaction.Toolkit.LocomotionSystem m_System
    [[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::LocomotionSystem*& dyn_m_System();
    // Get instance field reference: private UnityEngine.XR.Interaction.Toolkit.LocomotionPhase <locomotionPhase>k__BackingField
    [[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::LocomotionPhase& dyn_$locomotionPhase$k__BackingField();
    // Get instance field reference: private System.Action`1<UnityEngine.XR.Interaction.Toolkit.LocomotionSystem> startLocomotion
    [[deprecated("Use field access instead!")]] ::System::Action_1<::UnityEngine::XR::Interaction::Toolkit::LocomotionSystem*>*& dyn_startLocomotion();
    // public System.Void add_beginLocomotion(System.Action`1<UnityEngine.XR.Interaction.Toolkit.LocomotionSystem> value)
    // Offset: 0x5409E94
    void add_beginLocomotion(::System::Action_1<::UnityEngine::XR::Interaction::Toolkit::LocomotionSystem*>* value);
    // public System.Void remove_beginLocomotion(System.Action`1<UnityEngine.XR.Interaction.Toolkit.LocomotionSystem> value)
    // Offset: 0x5409FF4
    void remove_beginLocomotion(::System::Action_1<::UnityEngine::XR::Interaction::Toolkit::LocomotionSystem*>* value);
    // public System.Void add_endLocomotion(System.Action`1<UnityEngine.XR.Interaction.Toolkit.LocomotionSystem> value)
    // Offset: 0x5409F44
    void add_endLocomotion(::System::Action_1<::UnityEngine::XR::Interaction::Toolkit::LocomotionSystem*>* value);
    // public System.Void remove_endLocomotion(System.Action`1<UnityEngine.XR.Interaction.Toolkit.LocomotionSystem> value)
    // Offset: 0x540A0A4
    void remove_endLocomotion(::System::Action_1<::UnityEngine::XR::Interaction::Toolkit::LocomotionSystem*>* value);
    // public UnityEngine.XR.Interaction.Toolkit.LocomotionSystem get_system()
    // Offset: 0x540DB54
    ::UnityEngine::XR::Interaction::Toolkit::LocomotionSystem* get_system();
    // public System.Void set_system(UnityEngine.XR.Interaction.Toolkit.LocomotionSystem value)
    // Offset: 0x540DB5C
    void set_system(::UnityEngine::XR::Interaction::Toolkit::LocomotionSystem* value);
    // public UnityEngine.XR.Interaction.Toolkit.LocomotionPhase get_locomotionPhase()
    // Offset: 0x540DB64
    ::UnityEngine::XR::Interaction::Toolkit::LocomotionPhase get_locomotionPhase();
    // protected System.Void set_locomotionPhase(UnityEngine.XR.Interaction.Toolkit.LocomotionPhase value)
    // Offset: 0x540DB6C
    void set_locomotionPhase(::UnityEngine::XR::Interaction::Toolkit::LocomotionPhase value);
    // protected System.Void Awake()
    // Offset: 0x540CB98
    void Awake();
    // protected System.Boolean CanBeginLocomotion()
    // Offset: 0x540A7D8
    bool CanBeginLocomotion();
    // protected System.Boolean BeginLocomotion()
    // Offset: 0x540A860
    bool BeginLocomotion();
    // protected System.Boolean EndLocomotion()
    // Offset: 0x540A908
    bool EndLocomotion();
    // public System.Void add_startLocomotion(System.Action`1<UnityEngine.XR.Interaction.Toolkit.LocomotionSystem> value)
    // Offset: 0x540DDB0
    void add_startLocomotion(::System::Action_1<::UnityEngine::XR::Interaction::Toolkit::LocomotionSystem*>* value);
    // public System.Void remove_startLocomotion(System.Action`1<UnityEngine.XR.Interaction.Toolkit.LocomotionSystem> value)
    // Offset: 0x540DE60
    void remove_startLocomotion(::System::Action_1<::UnityEngine::XR::Interaction::Toolkit::LocomotionSystem*>* value);
    // protected System.Void .ctor()
    // Offset: 0x540A9C8
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static LocomotionProvider* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::LocomotionProvider::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<LocomotionProvider*, creationType>()));
    }
  }; // UnityEngine.XR.Interaction.Toolkit.LocomotionProvider
  #pragma pack(pop)
  static check_size<sizeof(LocomotionProvider), 64 + sizeof(::System::Action_1<::UnityEngine::XR::Interaction::Toolkit::LocomotionSystem*>*)> __UnityEngine_XR_Interaction_Toolkit_LocomotionProviderSizeCheck;
  static_assert(sizeof(LocomotionProvider) == 0x48);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::LocomotionProvider::add_beginLocomotion
// Il2CppName: add_beginLocomotion
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::LocomotionProvider::*)(::System::Action_1<::UnityEngine::XR::Interaction::Toolkit::LocomotionSystem*>*)>(&UnityEngine::XR::Interaction::Toolkit::LocomotionProvider::add_beginLocomotion)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "LocomotionSystem")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::LocomotionProvider*), "add_beginLocomotion", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::LocomotionProvider::remove_beginLocomotion
// Il2CppName: remove_beginLocomotion
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::LocomotionProvider::*)(::System::Action_1<::UnityEngine::XR::Interaction::Toolkit::LocomotionSystem*>*)>(&UnityEngine::XR::Interaction::Toolkit::LocomotionProvider::remove_beginLocomotion)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "LocomotionSystem")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::LocomotionProvider*), "remove_beginLocomotion", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::LocomotionProvider::add_endLocomotion
// Il2CppName: add_endLocomotion
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::LocomotionProvider::*)(::System::Action_1<::UnityEngine::XR::Interaction::Toolkit::LocomotionSystem*>*)>(&UnityEngine::XR::Interaction::Toolkit::LocomotionProvider::add_endLocomotion)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "LocomotionSystem")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::LocomotionProvider*), "add_endLocomotion", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::LocomotionProvider::remove_endLocomotion
// Il2CppName: remove_endLocomotion
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::LocomotionProvider::*)(::System::Action_1<::UnityEngine::XR::Interaction::Toolkit::LocomotionSystem*>*)>(&UnityEngine::XR::Interaction::Toolkit::LocomotionProvider::remove_endLocomotion)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "LocomotionSystem")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::LocomotionProvider*), "remove_endLocomotion", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::LocomotionProvider::get_system
// Il2CppName: get_system
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::XR::Interaction::Toolkit::LocomotionSystem* (UnityEngine::XR::Interaction::Toolkit::LocomotionProvider::*)()>(&UnityEngine::XR::Interaction::Toolkit::LocomotionProvider::get_system)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::LocomotionProvider*), "get_system", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::LocomotionProvider::set_system
// Il2CppName: set_system
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::LocomotionProvider::*)(::UnityEngine::XR::Interaction::Toolkit::LocomotionSystem*)>(&UnityEngine::XR::Interaction::Toolkit::LocomotionProvider::set_system)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "LocomotionSystem")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::LocomotionProvider*), "set_system", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::LocomotionProvider::get_locomotionPhase
// Il2CppName: get_locomotionPhase
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::XR::Interaction::Toolkit::LocomotionPhase (UnityEngine::XR::Interaction::Toolkit::LocomotionProvider::*)()>(&UnityEngine::XR::Interaction::Toolkit::LocomotionProvider::get_locomotionPhase)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::LocomotionProvider*), "get_locomotionPhase", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::LocomotionProvider::set_locomotionPhase
// Il2CppName: set_locomotionPhase
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::LocomotionProvider::*)(::UnityEngine::XR::Interaction::Toolkit::LocomotionPhase)>(&UnityEngine::XR::Interaction::Toolkit::LocomotionProvider::set_locomotionPhase)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "LocomotionPhase")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::LocomotionProvider*), "set_locomotionPhase", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::LocomotionProvider::Awake
// Il2CppName: Awake
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::LocomotionProvider::*)()>(&UnityEngine::XR::Interaction::Toolkit::LocomotionProvider::Awake)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::LocomotionProvider*), "Awake", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::LocomotionProvider::CanBeginLocomotion
// Il2CppName: CanBeginLocomotion
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::XR::Interaction::Toolkit::LocomotionProvider::*)()>(&UnityEngine::XR::Interaction::Toolkit::LocomotionProvider::CanBeginLocomotion)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::LocomotionProvider*), "CanBeginLocomotion", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::LocomotionProvider::BeginLocomotion
// Il2CppName: BeginLocomotion
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::XR::Interaction::Toolkit::LocomotionProvider::*)()>(&UnityEngine::XR::Interaction::Toolkit::LocomotionProvider::BeginLocomotion)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::LocomotionProvider*), "BeginLocomotion", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::LocomotionProvider::EndLocomotion
// Il2CppName: EndLocomotion
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::XR::Interaction::Toolkit::LocomotionProvider::*)()>(&UnityEngine::XR::Interaction::Toolkit::LocomotionProvider::EndLocomotion)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::LocomotionProvider*), "EndLocomotion", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::LocomotionProvider::add_startLocomotion
// Il2CppName: add_startLocomotion
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::LocomotionProvider::*)(::System::Action_1<::UnityEngine::XR::Interaction::Toolkit::LocomotionSystem*>*)>(&UnityEngine::XR::Interaction::Toolkit::LocomotionProvider::add_startLocomotion)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "LocomotionSystem")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::LocomotionProvider*), "add_startLocomotion", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::LocomotionProvider::remove_startLocomotion
// Il2CppName: remove_startLocomotion
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::LocomotionProvider::*)(::System::Action_1<::UnityEngine::XR::Interaction::Toolkit::LocomotionSystem*>*)>(&UnityEngine::XR::Interaction::Toolkit::LocomotionProvider::remove_startLocomotion)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "LocomotionSystem")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::LocomotionProvider*), "remove_startLocomotion", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::LocomotionProvider::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
