// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractor
#include "UnityEngine/XR/Interaction/Toolkit/IXRHoverInteractor.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractor
#include "UnityEngine/XR/Interaction/Toolkit/IXRSelectInteractor.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.IXRTargetPriorityInteractor
#include "UnityEngine/XR/Interaction/Toolkit/IXRTargetPriorityInteractor.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.IXRGroupMember
#include "UnityEngine/XR/Interaction/Toolkit/IXRGroupMember.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.IXRInteractionStrengthInteractor
#include "UnityEngine/XR/Interaction/Toolkit/IXRInteractionStrengthInteractor.hpp"
// Including type: UnityEngine.LayerMask
#include "UnityEngine/LayerMask.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.InteractionLayerMask
#include "UnityEngine/XR/Interaction/Toolkit/InteractionLayerMask.hpp"
// Including type: UnityEngine.Pose
#include "UnityEngine/Pose.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.TargetPriorityMode
#include "UnityEngine/XR/Interaction/Toolkit/TargetPriorityMode.hpp"
// Including type: Unity.Profiling.ProfilerMarker
#include "Unity/Profiling/ProfilerMarker.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable/MovementType
#include "UnityEngine/XR/Interaction/Toolkit/XRBaseInteractable_MovementType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Action`1<T>
  template<typename T>
  class Action_1;
  // Forward declaring type: Nullable`1<T>
  template<typename T>
  struct Nullable_1;
}
// Forward declaring namespace: UnityEngine::XR::Interaction::Toolkit
namespace UnityEngine::XR::Interaction::Toolkit {
  // Forward declaring type: InteractorRegisteredEventArgs
  class InteractorRegisteredEventArgs;
  // Forward declaring type: InteractorUnregisteredEventArgs
  class InteractorUnregisteredEventArgs;
  // Forward declaring type: XRInteractionManager
  class XRInteractionManager;
  // Forward declaring type: IXRInteractionGroup
  class IXRInteractionGroup;
  // Skipping declaration: XRBaseInteractable because it is already included!
  // Forward declaring type: HoverEnterEvent
  class HoverEnterEvent;
  // Forward declaring type: HoverExitEvent
  class HoverExitEvent;
  // Forward declaring type: SelectEnterEvent
  class SelectEnterEvent;
  // Forward declaring type: SelectExitEvent
  class SelectExitEvent;
  // Forward declaring type: IXRHoverInteractable
  class IXRHoverInteractable;
  // Forward declaring type: IXRSelectInteractable
  class IXRSelectInteractable;
  // Forward declaring type: IXRInteractionStrengthInteractable
  class IXRInteractionStrengthInteractable;
  // Forward declaring type: IXRInteractable
  class IXRInteractable;
  // Forward declaring type: XRInteractorEvent
  class XRInteractorEvent;
  // Forward declaring type: IXRFilterList`1<T>
  template<typename T>
  class IXRFilterList_1;
  // Forward declaring type: HoverEnterEventArgs
  class HoverEnterEventArgs;
  // Forward declaring type: HoverExitEventArgs
  class HoverExitEventArgs;
  // Forward declaring type: SelectEnterEventArgs
  class SelectEnterEventArgs;
  // Forward declaring type: SelectExitEventArgs
  class SelectExitEventArgs;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Transform
  class Transform;
  // Skipping declaration: Object because it is already included!
}
// Forward declaring namespace: UnityEngine::XR::Interaction::Toolkit::Filtering
namespace UnityEngine::XR::Interaction::Toolkit::Filtering {
  // Forward declaring type: XRBaseTargetFilter
  class XRBaseTargetFilter;
  // Forward declaring type: IXRTargetFilter
  class IXRTargetFilter;
  // Forward declaring type: IXRHoverFilter
  class IXRHoverFilter;
  // Forward declaring type: IXRSelectFilter
  class IXRSelectFilter;
}
// Forward declaring namespace: Unity::XR::CoreUtils::Collections
namespace Unity::XR::CoreUtils::Collections {
  // Forward declaring type: HashSetList`1<T>
  template<typename T>
  class HashSetList_1;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
  // Forward declaring type: Dictionary`2<TKey, TValue>
  template<typename TKey, typename TValue>
  class Dictionary_2;
}
// Forward declaring namespace: UnityEngine::XR::Interaction::Toolkit::Utilities
namespace UnityEngine::XR::Interaction::Toolkit::Utilities {
  // Forward declaring type: ExposedRegistrationList`1<T>
  template<typename T>
  class ExposedRegistrationList_1;
}
// Forward declaring namespace: Unity::XR::CoreUtils::Bindings::Variables
namespace Unity::XR::CoreUtils::Bindings::Variables {
  // Forward declaring type: BindableVariable`1<T>
  template<typename T>
  class BindableVariable_1;
  // Forward declaring type: IReadOnlyBindableVariable`1<T>
  template<typename T>
  class IReadOnlyBindableVariable_1;
}
// Completed forward declares
// Type namespace: UnityEngine.XR.Interaction.Toolkit
namespace UnityEngine::XR::Interaction::Toolkit {
  // Forward declaring type: XRBaseInteractor
  class XRBaseInteractor;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*, "UnityEngine.XR.Interaction.Toolkit", "XRBaseInteractor");
// Type namespace: UnityEngine.XR.Interaction.Toolkit
namespace UnityEngine::XR::Interaction::Toolkit {
  // Size: 0x198
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor
  // [TokenAttribute] Offset: FFFFFFFF
  // [DefaultExecutionOrder] Offset: FFFFFFFF
  // [DisallowMultipleComponent] Offset: FFFFFFFF
  // [SelectionBaseAttribute] Offset: FFFFFFFF
  class XRBaseInteractor : public ::UnityEngine::MonoBehaviour/*, public ::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractor, public ::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractor, public ::UnityEngine::XR::Interaction::Toolkit::IXRTargetPriorityInteractor, public ::UnityEngine::XR::Interaction::Toolkit::IXRGroupMember, public ::UnityEngine::XR::Interaction::Toolkit::IXRInteractionStrengthInteractor*/ {
    public:
    public:
    // private System.Action`1<UnityEngine.XR.Interaction.Toolkit.InteractorRegisteredEventArgs> registered
    // Size: 0x8
    // Offset: 0x20
    ::System::Action_1<::UnityEngine::XR::Interaction::Toolkit::InteractorRegisteredEventArgs*>* registered;
    // Field size check
    static_assert(sizeof(::System::Action_1<::UnityEngine::XR::Interaction::Toolkit::InteractorRegisteredEventArgs*>*) == 0x8);
    // private System.Action`1<UnityEngine.XR.Interaction.Toolkit.InteractorUnregisteredEventArgs> unregistered
    // Size: 0x8
    // Offset: 0x28
    ::System::Action_1<::UnityEngine::XR::Interaction::Toolkit::InteractorUnregisteredEventArgs*>* unregistered;
    // Field size check
    static_assert(sizeof(::System::Action_1<::UnityEngine::XR::Interaction::Toolkit::InteractorUnregisteredEventArgs*>*) == 0x8);
    // private UnityEngine.XR.Interaction.Toolkit.XRInteractionManager m_InteractionManager
    // Size: 0x8
    // Offset: 0x30
    ::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager* m_InteractionManager;
    // Field size check
    static_assert(sizeof(::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*) == 0x8);
    // private UnityEngine.XR.Interaction.Toolkit.IXRInteractionGroup <containingGroup>k__BackingField
    // Size: 0x8
    // Offset: 0x38
    ::UnityEngine::XR::Interaction::Toolkit::IXRInteractionGroup* containingGroup;
    // Field size check
    static_assert(sizeof(::UnityEngine::XR::Interaction::Toolkit::IXRInteractionGroup*) == 0x8);
    // private UnityEngine.LayerMask m_InteractionLayerMask
    // Size: 0x4
    // Offset: 0x40
    ::UnityEngine::LayerMask m_InteractionLayerMask;
    // Field size check
    static_assert(sizeof(::UnityEngine::LayerMask) == 0x4);
    // private UnityEngine.XR.Interaction.Toolkit.InteractionLayerMask m_InteractionLayers
    // Size: 0x8
    // Offset: 0x44
    ::UnityEngine::XR::Interaction::Toolkit::InteractionLayerMask m_InteractionLayers;
    // Field size check
    static_assert(sizeof(::UnityEngine::XR::Interaction::Toolkit::InteractionLayerMask) == 0x8);
    // Padding between fields: m_InteractionLayers and: m_AttachTransform
    char __padding5[0x4] = {};
    // private UnityEngine.Transform m_AttachTransform
    // Size: 0x8
    // Offset: 0x50
    ::UnityEngine::Transform* m_AttachTransform;
    // Field size check
    static_assert(sizeof(::UnityEngine::Transform*) == 0x8);
    // private System.Boolean m_KeepSelectedTargetValid
    // Size: 0x1
    // Offset: 0x58
    bool m_KeepSelectedTargetValid;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean m_DisableVisualsWhenBlockedInGroup
    // Size: 0x1
    // Offset: 0x59
    bool m_DisableVisualsWhenBlockedInGroup;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: m_DisableVisualsWhenBlockedInGroup and: m_StartingSelectedInteractable
    char __padding8[0x6] = {};
    // private UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable m_StartingSelectedInteractable
    // Size: 0x8
    // Offset: 0x60
    ::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* m_StartingSelectedInteractable;
    // Field size check
    static_assert(sizeof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*) == 0x8);
    // private UnityEngine.XR.Interaction.Toolkit.Filtering.XRBaseTargetFilter m_StartingTargetFilter
    // Size: 0x8
    // Offset: 0x68
    ::UnityEngine::XR::Interaction::Toolkit::Filtering::XRBaseTargetFilter* m_StartingTargetFilter;
    // Field size check
    static_assert(sizeof(::UnityEngine::XR::Interaction::Toolkit::Filtering::XRBaseTargetFilter*) == 0x8);
    // private UnityEngine.XR.Interaction.Toolkit.HoverEnterEvent m_HoverEntered
    // Size: 0x8
    // Offset: 0x70
    ::UnityEngine::XR::Interaction::Toolkit::HoverEnterEvent* m_HoverEntered;
    // Field size check
    static_assert(sizeof(::UnityEngine::XR::Interaction::Toolkit::HoverEnterEvent*) == 0x8);
    // private UnityEngine.XR.Interaction.Toolkit.HoverExitEvent m_HoverExited
    // Size: 0x8
    // Offset: 0x78
    ::UnityEngine::XR::Interaction::Toolkit::HoverExitEvent* m_HoverExited;
    // Field size check
    static_assert(sizeof(::UnityEngine::XR::Interaction::Toolkit::HoverExitEvent*) == 0x8);
    // private UnityEngine.XR.Interaction.Toolkit.SelectEnterEvent m_SelectEntered
    // Size: 0x8
    // Offset: 0x80
    ::UnityEngine::XR::Interaction::Toolkit::SelectEnterEvent* m_SelectEntered;
    // Field size check
    static_assert(sizeof(::UnityEngine::XR::Interaction::Toolkit::SelectEnterEvent*) == 0x8);
    // private UnityEngine.XR.Interaction.Toolkit.SelectExitEvent m_SelectExited
    // Size: 0x8
    // Offset: 0x88
    ::UnityEngine::XR::Interaction::Toolkit::SelectExitEvent* m_SelectExited;
    // Field size check
    static_assert(sizeof(::UnityEngine::XR::Interaction::Toolkit::SelectExitEvent*) == 0x8);
    // private UnityEngine.XR.Interaction.Toolkit.Filtering.IXRTargetFilter m_TargetFilter
    // Size: 0x8
    // Offset: 0x90
    ::UnityEngine::XR::Interaction::Toolkit::Filtering::IXRTargetFilter* m_TargetFilter;
    // Field size check
    static_assert(sizeof(::UnityEngine::XR::Interaction::Toolkit::Filtering::IXRTargetFilter*) == 0x8);
    // private System.Boolean m_AllowHover
    // Size: 0x1
    // Offset: 0x98
    bool m_AllowHover;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean m_AllowSelect
    // Size: 0x1
    // Offset: 0x99
    bool m_AllowSelect;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean m_IsPerformingManualInteraction
    // Size: 0x1
    // Offset: 0x9A
    bool m_IsPerformingManualInteraction;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: m_IsPerformingManualInteraction and: m_InteractablesHovered
    char __padding18[0x5] = {};
    // private readonly Unity.XR.CoreUtils.Collections.HashSetList`1<UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractable> m_InteractablesHovered
    // Size: 0x8
    // Offset: 0xA0
    ::Unity::XR::CoreUtils::Collections::HashSetList_1<::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractable*>* m_InteractablesHovered;
    // Field size check
    static_assert(sizeof(::Unity::XR::CoreUtils::Collections::HashSetList_1<::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractable*>*) == 0x8);
    // private readonly Unity.XR.CoreUtils.Collections.HashSetList`1<UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractable> m_InteractablesSelected
    // Size: 0x8
    // Offset: 0xA8
    ::Unity::XR::CoreUtils::Collections::HashSetList_1<::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable*>* m_InteractablesSelected;
    // Field size check
    static_assert(sizeof(::Unity::XR::CoreUtils::Collections::HashSetList_1<::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable*>*) == 0x8);
    // private UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractable <firstInteractableSelected>k__BackingField
    // Size: 0x8
    // Offset: 0xB0
    ::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable* firstInteractableSelected;
    // Field size check
    static_assert(sizeof(::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable*) == 0x8);
    // private System.Boolean <isInteractingWithUI>k__BackingField
    // Size: 0x1
    // Offset: 0xB8
    bool isInteractingWithUI;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: isInteractingWithUI and: m_StartingHoverFilters
    char __padding22[0x7] = {};
    // private System.Collections.Generic.List`1<UnityEngine.Object> m_StartingHoverFilters
    // Size: 0x8
    // Offset: 0xC0
    ::System::Collections::Generic::List_1<::UnityEngine::Object*>* m_StartingHoverFilters;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::UnityEngine::Object*>*) == 0x8);
    // private readonly UnityEngine.XR.Interaction.Toolkit.Utilities.ExposedRegistrationList`1<UnityEngine.XR.Interaction.Toolkit.Filtering.IXRHoverFilter> m_HoverFilters
    // Size: 0x8
    // Offset: 0xC8
    ::UnityEngine::XR::Interaction::Toolkit::Utilities::ExposedRegistrationList_1<::UnityEngine::XR::Interaction::Toolkit::Filtering::IXRHoverFilter*>* m_HoverFilters;
    // Field size check
    static_assert(sizeof(::UnityEngine::XR::Interaction::Toolkit::Utilities::ExposedRegistrationList_1<::UnityEngine::XR::Interaction::Toolkit::Filtering::IXRHoverFilter*>*) == 0x8);
    // private System.Collections.Generic.List`1<UnityEngine.Object> m_StartingSelectFilters
    // Size: 0x8
    // Offset: 0xD0
    ::System::Collections::Generic::List_1<::UnityEngine::Object*>* m_StartingSelectFilters;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::UnityEngine::Object*>*) == 0x8);
    // private readonly UnityEngine.XR.Interaction.Toolkit.Utilities.ExposedRegistrationList`1<UnityEngine.XR.Interaction.Toolkit.Filtering.IXRSelectFilter> m_SelectFilters
    // Size: 0x8
    // Offset: 0xD8
    ::UnityEngine::XR::Interaction::Toolkit::Utilities::ExposedRegistrationList_1<::UnityEngine::XR::Interaction::Toolkit::Filtering::IXRSelectFilter*>* m_SelectFilters;
    // Field size check
    static_assert(sizeof(::UnityEngine::XR::Interaction::Toolkit::Utilities::ExposedRegistrationList_1<::UnityEngine::XR::Interaction::Toolkit::Filtering::IXRSelectFilter*>*) == 0x8);
    // private readonly Unity.XR.CoreUtils.Bindings.Variables.BindableVariable`1<System.Single> m_LargestInteractionStrength
    // Size: 0x8
    // Offset: 0xE0
    ::Unity::XR::CoreUtils::Bindings::Variables::BindableVariable_1<float>* m_LargestInteractionStrength;
    // Field size check
    static_assert(sizeof(::Unity::XR::CoreUtils::Bindings::Variables::BindableVariable_1<float>*) == 0x8);
    // private readonly System.Collections.Generic.Dictionary`2<UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractable,UnityEngine.Pose> m_AttachPoseOnSelect
    // Size: 0x8
    // Offset: 0xE8
    ::System::Collections::Generic::Dictionary_2<::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable*, ::UnityEngine::Pose>* m_AttachPoseOnSelect;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::Dictionary_2<::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable*, ::UnityEngine::Pose>*) == 0x8);
    // private readonly System.Collections.Generic.Dictionary`2<UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractable,UnityEngine.Pose> m_LocalAttachPoseOnSelect
    // Size: 0x8
    // Offset: 0xF0
    ::System::Collections::Generic::Dictionary_2<::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable*, ::UnityEngine::Pose>* m_LocalAttachPoseOnSelect;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::Dictionary_2<::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable*, ::UnityEngine::Pose>*) == 0x8);
    // private readonly Unity.XR.CoreUtils.Collections.HashSetList`1<UnityEngine.XR.Interaction.Toolkit.IXRInteractionStrengthInteractable> m_InteractionStrengthInteractables
    // Size: 0x8
    // Offset: 0xF8
    ::Unity::XR::CoreUtils::Collections::HashSetList_1<::UnityEngine::XR::Interaction::Toolkit::IXRInteractionStrengthInteractable*>* m_InteractionStrengthInteractables;
    // Field size check
    static_assert(sizeof(::Unity::XR::CoreUtils::Collections::HashSetList_1<::UnityEngine::XR::Interaction::Toolkit::IXRInteractionStrengthInteractable*>*) == 0x8);
    // private readonly System.Collections.Generic.Dictionary`2<UnityEngine.XR.Interaction.Toolkit.IXRInteractable,System.Single> m_InteractionStrengths
    // Size: 0x8
    // Offset: 0x100
    ::System::Collections::Generic::Dictionary_2<::UnityEngine::XR::Interaction::Toolkit::IXRInteractable*, float>* m_InteractionStrengths;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::Dictionary_2<::UnityEngine::XR::Interaction::Toolkit::IXRInteractable*, float>*) == 0x8);
    // private UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractable m_ManualInteractionInteractable
    // Size: 0x8
    // Offset: 0x108
    ::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable* m_ManualInteractionInteractable;
    // Field size check
    static_assert(sizeof(::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable*) == 0x8);
    // private UnityEngine.XR.Interaction.Toolkit.XRInteractionManager m_RegisteredInteractionManager
    // Size: 0x8
    // Offset: 0x110
    ::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager* m_RegisteredInteractionManager;
    // Field size check
    static_assert(sizeof(::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*) == 0x8);
    // private System.Boolean <useAttachPointVelocity>k__BackingField
    // Size: 0x1
    // Offset: 0x118
    bool useAttachPointVelocity;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: useAttachPointVelocity and: attachPointVelocity
    char __padding34[0x3] = {};
    // private UnityEngine.Vector3 <attachPointVelocity>k__BackingField
    // Size: 0xC
    // Offset: 0x11C
    ::UnityEngine::Vector3 attachPointVelocity;
    // Field size check
    static_assert(sizeof(::UnityEngine::Vector3) == 0xC);
    // private UnityEngine.Vector3 <attachPointAngularVelocity>k__BackingField
    // Size: 0xC
    // Offset: 0x128
    ::UnityEngine::Vector3 attachPointAngularVelocity;
    // Field size check
    static_assert(sizeof(::UnityEngine::Vector3) == 0xC);
    // private UnityEngine.XR.Interaction.Toolkit.TargetPriorityMode <targetPriorityMode>k__BackingField
    // Size: 0x4
    // Offset: 0x134
    ::UnityEngine::XR::Interaction::Toolkit::TargetPriorityMode targetPriorityMode;
    // Field size check
    static_assert(sizeof(::UnityEngine::XR::Interaction::Toolkit::TargetPriorityMode) == 0x4);
    // private System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractable> <targetsForSelection>k__BackingField
    // Size: 0x8
    // Offset: 0x138
    ::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable*>* targetsForSelection;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable*>*) == 0x8);
    // private System.Single m_DeltaTimeStart
    // Size: 0x4
    // Offset: 0x140
    float m_DeltaTimeStart;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Int32 m_FrameOn
    // Size: 0x4
    // Offset: 0x144
    int m_FrameOn;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private readonly UnityEngine.Vector3[] m_VelocityPositionsCache
    // Size: 0x8
    // Offset: 0x148
    ::ArrayW<::UnityEngine::Vector3> m_VelocityPositionsCache;
    // Field size check
    static_assert(sizeof(::ArrayW<::UnityEngine::Vector3>) == 0x8);
    // private readonly UnityEngine.Vector3[] m_VelocityNormalsCache
    // Size: 0x8
    // Offset: 0x150
    ::ArrayW<::UnityEngine::Vector3> m_VelocityNormalsCache;
    // Field size check
    static_assert(sizeof(::ArrayW<::UnityEngine::Vector3>) == 0x8);
    // private UnityEngine.Vector3 m_VelocityPositionsSum
    // Size: 0xC
    // Offset: 0x158
    ::UnityEngine::Vector3 m_VelocityPositionsSum;
    // Field size check
    static_assert(sizeof(::UnityEngine::Vector3) == 0xC);
    // private UnityEngine.Vector3 m_VelocityNormalsSum
    // Size: 0xC
    // Offset: 0x164
    ::UnityEngine::Vector3 m_VelocityNormalsSum;
    // Field size check
    static_assert(sizeof(::UnityEngine::Vector3) == 0xC);
    // private UnityEngine.XR.Interaction.Toolkit.XRInteractorEvent m_OnHoverEntered
    // Size: 0x8
    // Offset: 0x170
    ::UnityEngine::XR::Interaction::Toolkit::XRInteractorEvent* m_OnHoverEntered;
    // Field size check
    static_assert(sizeof(::UnityEngine::XR::Interaction::Toolkit::XRInteractorEvent*) == 0x8);
    // private UnityEngine.XR.Interaction.Toolkit.XRInteractorEvent m_OnHoverExited
    // Size: 0x8
    // Offset: 0x178
    ::UnityEngine::XR::Interaction::Toolkit::XRInteractorEvent* m_OnHoverExited;
    // Field size check
    static_assert(sizeof(::UnityEngine::XR::Interaction::Toolkit::XRInteractorEvent*) == 0x8);
    // private UnityEngine.XR.Interaction.Toolkit.XRInteractorEvent m_OnSelectEntered
    // Size: 0x8
    // Offset: 0x180
    ::UnityEngine::XR::Interaction::Toolkit::XRInteractorEvent* m_OnSelectEntered;
    // Field size check
    static_assert(sizeof(::UnityEngine::XR::Interaction::Toolkit::XRInteractorEvent*) == 0x8);
    // private UnityEngine.XR.Interaction.Toolkit.XRInteractorEvent m_OnSelectExited
    // Size: 0x8
    // Offset: 0x188
    ::UnityEngine::XR::Interaction::Toolkit::XRInteractorEvent* m_OnSelectExited;
    // Field size check
    static_assert(sizeof(::UnityEngine::XR::Interaction::Toolkit::XRInteractorEvent*) == 0x8);
    // private readonly System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable> <hoverTargets>k__BackingField
    // Size: 0x8
    // Offset: 0x190
    ::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*>* hoverTargets;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*>*) == 0x8);
    public:
    // Creating interface conversion operator: operator ::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractor
    operator ::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractor() noexcept {
      return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractor*>(this);
    }
    // Creating interface conversion operator: operator ::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractor
    operator ::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractor() noexcept {
      return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractor*>(this);
    }
    // Creating interface conversion operator: operator ::UnityEngine::XR::Interaction::Toolkit::IXRTargetPriorityInteractor
    operator ::UnityEngine::XR::Interaction::Toolkit::IXRTargetPriorityInteractor() noexcept {
      return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::IXRTargetPriorityInteractor*>(this);
    }
    // Creating interface conversion operator: operator ::UnityEngine::XR::Interaction::Toolkit::IXRGroupMember
    operator ::UnityEngine::XR::Interaction::Toolkit::IXRGroupMember() noexcept {
      return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::IXRGroupMember*>(this);
    }
    // Creating interface conversion operator: operator ::UnityEngine::XR::Interaction::Toolkit::IXRInteractionStrengthInteractor
    operator ::UnityEngine::XR::Interaction::Toolkit::IXRInteractionStrengthInteractor() noexcept {
      return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::IXRInteractionStrengthInteractor*>(this);
    }
    // static field const value: static private System.Single k_InteractionStrengthHover
    static constexpr const float k_InteractionStrengthHover = 0;
    // Get static field: static private System.Single k_InteractionStrengthHover
    static float _get_k_InteractionStrengthHover();
    // Set static field: static private System.Single k_InteractionStrengthHover
    static void _set_k_InteractionStrengthHover(float value);
    // static field const value: static private System.Single k_InteractionStrengthSelect
    static constexpr const float k_InteractionStrengthSelect = 1;
    // Get static field: static private System.Single k_InteractionStrengthSelect
    static float _get_k_InteractionStrengthSelect();
    // Set static field: static private System.Single k_InteractionStrengthSelect
    static void _set_k_InteractionStrengthSelect(float value);
    // Get static field: static private UnityEngine.XR.Interaction.Toolkit.XRInteractionManager s_InteractionManagerCache
    static ::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager* _get_s_InteractionManagerCache();
    // Set static field: static private UnityEngine.XR.Interaction.Toolkit.XRInteractionManager s_InteractionManagerCache
    static void _set_s_InteractionManagerCache(::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager* value);
    // Get static field: static private readonly Unity.Profiling.ProfilerMarker s_ProcessInteractionStrengthMarker
    static ::Unity::Profiling::ProfilerMarker _get_s_ProcessInteractionStrengthMarker();
    // Set static field: static private readonly Unity.Profiling.ProfilerMarker s_ProcessInteractionStrengthMarker
    static void _set_s_ProcessInteractionStrengthMarker(::Unity::Profiling::ProfilerMarker value);
    // static field const value: static private System.Int32 k_VelocityUpdateInterval
    static constexpr const int k_VelocityUpdateInterval = 6;
    // Get static field: static private System.Int32 k_VelocityUpdateInterval
    static int _get_k_VelocityUpdateInterval();
    // Set static field: static private System.Int32 k_VelocityUpdateInterval
    static void _set_k_VelocityUpdateInterval(int value);
    // Get instance field reference: private System.Action`1<UnityEngine.XR.Interaction.Toolkit.InteractorRegisteredEventArgs> registered
    [[deprecated("Use field access instead!")]] ::System::Action_1<::UnityEngine::XR::Interaction::Toolkit::InteractorRegisteredEventArgs*>*& dyn_registered();
    // Get instance field reference: private System.Action`1<UnityEngine.XR.Interaction.Toolkit.InteractorUnregisteredEventArgs> unregistered
    [[deprecated("Use field access instead!")]] ::System::Action_1<::UnityEngine::XR::Interaction::Toolkit::InteractorUnregisteredEventArgs*>*& dyn_unregistered();
    // Get instance field reference: private UnityEngine.XR.Interaction.Toolkit.XRInteractionManager m_InteractionManager
    [[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*& dyn_m_InteractionManager();
    // Get instance field reference: private UnityEngine.XR.Interaction.Toolkit.IXRInteractionGroup <containingGroup>k__BackingField
    [[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::IXRInteractionGroup*& dyn_$containingGroup$k__BackingField();
    // Get instance field reference: private UnityEngine.LayerMask m_InteractionLayerMask
    [[deprecated("Use field access instead!")]] ::UnityEngine::LayerMask& dyn_m_InteractionLayerMask();
    // Get instance field reference: private UnityEngine.XR.Interaction.Toolkit.InteractionLayerMask m_InteractionLayers
    [[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::InteractionLayerMask& dyn_m_InteractionLayers();
    // Get instance field reference: private UnityEngine.Transform m_AttachTransform
    [[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& dyn_m_AttachTransform();
    // Get instance field reference: private System.Boolean m_KeepSelectedTargetValid
    [[deprecated("Use field access instead!")]] bool& dyn_m_KeepSelectedTargetValid();
    // Get instance field reference: private System.Boolean m_DisableVisualsWhenBlockedInGroup
    [[deprecated("Use field access instead!")]] bool& dyn_m_DisableVisualsWhenBlockedInGroup();
    // Get instance field reference: private UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable m_StartingSelectedInteractable
    [[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*& dyn_m_StartingSelectedInteractable();
    // Get instance field reference: private UnityEngine.XR.Interaction.Toolkit.Filtering.XRBaseTargetFilter m_StartingTargetFilter
    [[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::Filtering::XRBaseTargetFilter*& dyn_m_StartingTargetFilter();
    // Get instance field reference: private UnityEngine.XR.Interaction.Toolkit.HoverEnterEvent m_HoverEntered
    [[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::HoverEnterEvent*& dyn_m_HoverEntered();
    // Get instance field reference: private UnityEngine.XR.Interaction.Toolkit.HoverExitEvent m_HoverExited
    [[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::HoverExitEvent*& dyn_m_HoverExited();
    // Get instance field reference: private UnityEngine.XR.Interaction.Toolkit.SelectEnterEvent m_SelectEntered
    [[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::SelectEnterEvent*& dyn_m_SelectEntered();
    // Get instance field reference: private UnityEngine.XR.Interaction.Toolkit.SelectExitEvent m_SelectExited
    [[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::SelectExitEvent*& dyn_m_SelectExited();
    // Get instance field reference: private UnityEngine.XR.Interaction.Toolkit.Filtering.IXRTargetFilter m_TargetFilter
    [[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::Filtering::IXRTargetFilter*& dyn_m_TargetFilter();
    // Get instance field reference: private System.Boolean m_AllowHover
    [[deprecated("Use field access instead!")]] bool& dyn_m_AllowHover();
    // Get instance field reference: private System.Boolean m_AllowSelect
    [[deprecated("Use field access instead!")]] bool& dyn_m_AllowSelect();
    // Get instance field reference: private System.Boolean m_IsPerformingManualInteraction
    [[deprecated("Use field access instead!")]] bool& dyn_m_IsPerformingManualInteraction();
    // Get instance field reference: private readonly Unity.XR.CoreUtils.Collections.HashSetList`1<UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractable> m_InteractablesHovered
    [[deprecated("Use field access instead!")]] ::Unity::XR::CoreUtils::Collections::HashSetList_1<::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractable*>*& dyn_m_InteractablesHovered();
    // Get instance field reference: private readonly Unity.XR.CoreUtils.Collections.HashSetList`1<UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractable> m_InteractablesSelected
    [[deprecated("Use field access instead!")]] ::Unity::XR::CoreUtils::Collections::HashSetList_1<::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable*>*& dyn_m_InteractablesSelected();
    // Get instance field reference: private UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractable <firstInteractableSelected>k__BackingField
    [[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable*& dyn_$firstInteractableSelected$k__BackingField();
    // Get instance field reference: private System.Boolean <isInteractingWithUI>k__BackingField
    [[deprecated("Use field access instead!")]] bool& dyn_$isInteractingWithUI$k__BackingField();
    // Get instance field reference: private System.Collections.Generic.List`1<UnityEngine.Object> m_StartingHoverFilters
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::Object*>*& dyn_m_StartingHoverFilters();
    // Get instance field reference: private readonly UnityEngine.XR.Interaction.Toolkit.Utilities.ExposedRegistrationList`1<UnityEngine.XR.Interaction.Toolkit.Filtering.IXRHoverFilter> m_HoverFilters
    [[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::Utilities::ExposedRegistrationList_1<::UnityEngine::XR::Interaction::Toolkit::Filtering::IXRHoverFilter*>*& dyn_m_HoverFilters();
    // Get instance field reference: private System.Collections.Generic.List`1<UnityEngine.Object> m_StartingSelectFilters
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::Object*>*& dyn_m_StartingSelectFilters();
    // Get instance field reference: private readonly UnityEngine.XR.Interaction.Toolkit.Utilities.ExposedRegistrationList`1<UnityEngine.XR.Interaction.Toolkit.Filtering.IXRSelectFilter> m_SelectFilters
    [[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::Utilities::ExposedRegistrationList_1<::UnityEngine::XR::Interaction::Toolkit::Filtering::IXRSelectFilter*>*& dyn_m_SelectFilters();
    // Get instance field reference: private readonly Unity.XR.CoreUtils.Bindings.Variables.BindableVariable`1<System.Single> m_LargestInteractionStrength
    [[deprecated("Use field access instead!")]] ::Unity::XR::CoreUtils::Bindings::Variables::BindableVariable_1<float>*& dyn_m_LargestInteractionStrength();
    // Get instance field reference: private readonly System.Collections.Generic.Dictionary`2<UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractable,UnityEngine.Pose> m_AttachPoseOnSelect
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable*, ::UnityEngine::Pose>*& dyn_m_AttachPoseOnSelect();
    // Get instance field reference: private readonly System.Collections.Generic.Dictionary`2<UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractable,UnityEngine.Pose> m_LocalAttachPoseOnSelect
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable*, ::UnityEngine::Pose>*& dyn_m_LocalAttachPoseOnSelect();
    // Get instance field reference: private readonly Unity.XR.CoreUtils.Collections.HashSetList`1<UnityEngine.XR.Interaction.Toolkit.IXRInteractionStrengthInteractable> m_InteractionStrengthInteractables
    [[deprecated("Use field access instead!")]] ::Unity::XR::CoreUtils::Collections::HashSetList_1<::UnityEngine::XR::Interaction::Toolkit::IXRInteractionStrengthInteractable*>*& dyn_m_InteractionStrengthInteractables();
    // Get instance field reference: private readonly System.Collections.Generic.Dictionary`2<UnityEngine.XR.Interaction.Toolkit.IXRInteractable,System.Single> m_InteractionStrengths
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::UnityEngine::XR::Interaction::Toolkit::IXRInteractable*, float>*& dyn_m_InteractionStrengths();
    // Get instance field reference: private UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractable m_ManualInteractionInteractable
    [[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable*& dyn_m_ManualInteractionInteractable();
    // Get instance field reference: private UnityEngine.XR.Interaction.Toolkit.XRInteractionManager m_RegisteredInteractionManager
    [[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*& dyn_m_RegisteredInteractionManager();
    // Get instance field reference: private System.Boolean <useAttachPointVelocity>k__BackingField
    [[deprecated("Use field access instead!")]] bool& dyn_$useAttachPointVelocity$k__BackingField();
    // Get instance field reference: private UnityEngine.Vector3 <attachPointVelocity>k__BackingField
    [[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& dyn_$attachPointVelocity$k__BackingField();
    // Get instance field reference: private UnityEngine.Vector3 <attachPointAngularVelocity>k__BackingField
    [[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& dyn_$attachPointAngularVelocity$k__BackingField();
    // Get instance field reference: private UnityEngine.XR.Interaction.Toolkit.TargetPriorityMode <targetPriorityMode>k__BackingField
    [[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::TargetPriorityMode& dyn_$targetPriorityMode$k__BackingField();
    // Get instance field reference: private System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractable> <targetsForSelection>k__BackingField
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable*>*& dyn_$targetsForSelection$k__BackingField();
    // Get instance field reference: private System.Single m_DeltaTimeStart
    [[deprecated("Use field access instead!")]] float& dyn_m_DeltaTimeStart();
    // Get instance field reference: private System.Int32 m_FrameOn
    [[deprecated("Use field access instead!")]] int& dyn_m_FrameOn();
    // Get instance field reference: private readonly UnityEngine.Vector3[] m_VelocityPositionsCache
    [[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Vector3>& dyn_m_VelocityPositionsCache();
    // Get instance field reference: private readonly UnityEngine.Vector3[] m_VelocityNormalsCache
    [[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Vector3>& dyn_m_VelocityNormalsCache();
    // Get instance field reference: private UnityEngine.Vector3 m_VelocityPositionsSum
    [[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& dyn_m_VelocityPositionsSum();
    // Get instance field reference: private UnityEngine.Vector3 m_VelocityNormalsSum
    [[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& dyn_m_VelocityNormalsSum();
    // Get instance field reference: private UnityEngine.XR.Interaction.Toolkit.XRInteractorEvent m_OnHoverEntered
    [[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::XRInteractorEvent*& dyn_m_OnHoverEntered();
    // Get instance field reference: private UnityEngine.XR.Interaction.Toolkit.XRInteractorEvent m_OnHoverExited
    [[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::XRInteractorEvent*& dyn_m_OnHoverExited();
    // Get instance field reference: private UnityEngine.XR.Interaction.Toolkit.XRInteractorEvent m_OnSelectEntered
    [[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::XRInteractorEvent*& dyn_m_OnSelectEntered();
    // Get instance field reference: private UnityEngine.XR.Interaction.Toolkit.XRInteractorEvent m_OnSelectExited
    [[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::XRInteractorEvent*& dyn_m_OnSelectExited();
    // Get instance field reference: private readonly System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable> <hoverTargets>k__BackingField
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*>*& dyn_$hoverTargets$k__BackingField();
    // public System.Void add_registered(System.Action`1<UnityEngine.XR.Interaction.Toolkit.InteractorRegisteredEventArgs> value)
    // Offset: 0x53E97D4
    void add_registered(::System::Action_1<::UnityEngine::XR::Interaction::Toolkit::InteractorRegisteredEventArgs*>* value);
    // public System.Void remove_registered(System.Action`1<UnityEngine.XR.Interaction.Toolkit.InteractorRegisteredEventArgs> value)
    // Offset: 0x53E9884
    void remove_registered(::System::Action_1<::UnityEngine::XR::Interaction::Toolkit::InteractorRegisteredEventArgs*>* value);
    // public System.Void add_unregistered(System.Action`1<UnityEngine.XR.Interaction.Toolkit.InteractorUnregisteredEventArgs> value)
    // Offset: 0x53E9934
    void add_unregistered(::System::Action_1<::UnityEngine::XR::Interaction::Toolkit::InteractorUnregisteredEventArgs*>* value);
    // public System.Void remove_unregistered(System.Action`1<UnityEngine.XR.Interaction.Toolkit.InteractorUnregisteredEventArgs> value)
    // Offset: 0x53E99E4
    void remove_unregistered(::System::Action_1<::UnityEngine::XR::Interaction::Toolkit::InteractorUnregisteredEventArgs*>* value);
    // public UnityEngine.XR.Interaction.Toolkit.XRInteractionManager get_interactionManager()
    // Offset: 0x53E9A94
    ::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager* get_interactionManager();
    // public System.Void set_interactionManager(UnityEngine.XR.Interaction.Toolkit.XRInteractionManager value)
    // Offset: 0x53E9A9C
    void set_interactionManager(::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager* value);
    // public UnityEngine.XR.Interaction.Toolkit.IXRInteractionGroup get_containingGroup()
    // Offset: 0x53E9C1C
    ::UnityEngine::XR::Interaction::Toolkit::IXRInteractionGroup* get_containingGroup();
    // private System.Void set_containingGroup(UnityEngine.XR.Interaction.Toolkit.IXRInteractionGroup value)
    // Offset: 0x53E9C24
    void set_containingGroup(::UnityEngine::XR::Interaction::Toolkit::IXRInteractionGroup* value);
    // public UnityEngine.XR.Interaction.Toolkit.InteractionLayerMask get_interactionLayers()
    // Offset: 0x53E9C2C
    ::UnityEngine::XR::Interaction::Toolkit::InteractionLayerMask get_interactionLayers();
    // public System.Void set_interactionLayers(UnityEngine.XR.Interaction.Toolkit.InteractionLayerMask value)
    // Offset: 0x53E9C34
    void set_interactionLayers(::UnityEngine::XR::Interaction::Toolkit::InteractionLayerMask value);
    // public UnityEngine.Transform get_attachTransform()
    // Offset: 0x53E9C3C
    ::UnityEngine::Transform* get_attachTransform();
    // public System.Void set_attachTransform(UnityEngine.Transform value)
    // Offset: 0x53E9C44
    void set_attachTransform(::UnityEngine::Transform* value);
    // public System.Boolean get_keepSelectedTargetValid()
    // Offset: 0x53E9C4C
    bool get_keepSelectedTargetValid();
    // public System.Void set_keepSelectedTargetValid(System.Boolean value)
    // Offset: 0x53E9C54
    void set_keepSelectedTargetValid(bool value);
    // public System.Boolean get_disableVisualsWhenBlockedInGroup()
    // Offset: 0x53E9C60
    bool get_disableVisualsWhenBlockedInGroup();
    // public System.Void set_disableVisualsWhenBlockedInGroup(System.Boolean value)
    // Offset: 0x53E9C68
    void set_disableVisualsWhenBlockedInGroup(bool value);
    // public UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable get_startingSelectedInteractable()
    // Offset: 0x53E9C74
    ::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* get_startingSelectedInteractable();
    // public System.Void set_startingSelectedInteractable(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable value)
    // Offset: 0x53E9C7C
    void set_startingSelectedInteractable(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* value);
    // public UnityEngine.XR.Interaction.Toolkit.Filtering.XRBaseTargetFilter get_startingTargetFilter()
    // Offset: 0x53E9C84
    ::UnityEngine::XR::Interaction::Toolkit::Filtering::XRBaseTargetFilter* get_startingTargetFilter();
    // public System.Void set_startingTargetFilter(UnityEngine.XR.Interaction.Toolkit.Filtering.XRBaseTargetFilter value)
    // Offset: 0x53E9C8C
    void set_startingTargetFilter(::UnityEngine::XR::Interaction::Toolkit::Filtering::XRBaseTargetFilter* value);
    // public UnityEngine.XR.Interaction.Toolkit.HoverEnterEvent get_hoverEntered()
    // Offset: 0x53E9C94
    ::UnityEngine::XR::Interaction::Toolkit::HoverEnterEvent* get_hoverEntered();
    // public System.Void set_hoverEntered(UnityEngine.XR.Interaction.Toolkit.HoverEnterEvent value)
    // Offset: 0x53E9C9C
    void set_hoverEntered(::UnityEngine::XR::Interaction::Toolkit::HoverEnterEvent* value);
    // public UnityEngine.XR.Interaction.Toolkit.HoverExitEvent get_hoverExited()
    // Offset: 0x53E9CA4
    ::UnityEngine::XR::Interaction::Toolkit::HoverExitEvent* get_hoverExited();
    // public System.Void set_hoverExited(UnityEngine.XR.Interaction.Toolkit.HoverExitEvent value)
    // Offset: 0x53E9CAC
    void set_hoverExited(::UnityEngine::XR::Interaction::Toolkit::HoverExitEvent* value);
    // public UnityEngine.XR.Interaction.Toolkit.SelectEnterEvent get_selectEntered()
    // Offset: 0x53E9CB4
    ::UnityEngine::XR::Interaction::Toolkit::SelectEnterEvent* get_selectEntered();
    // public System.Void set_selectEntered(UnityEngine.XR.Interaction.Toolkit.SelectEnterEvent value)
    // Offset: 0x53E9CBC
    void set_selectEntered(::UnityEngine::XR::Interaction::Toolkit::SelectEnterEvent* value);
    // public UnityEngine.XR.Interaction.Toolkit.SelectExitEvent get_selectExited()
    // Offset: 0x53E9CC4
    ::UnityEngine::XR::Interaction::Toolkit::SelectExitEvent* get_selectExited();
    // public System.Void set_selectExited(UnityEngine.XR.Interaction.Toolkit.SelectExitEvent value)
    // Offset: 0x53E9CCC
    void set_selectExited(::UnityEngine::XR::Interaction::Toolkit::SelectExitEvent* value);
    // public UnityEngine.XR.Interaction.Toolkit.Filtering.IXRTargetFilter get_targetFilter()
    // Offset: 0x53E9CD4
    ::UnityEngine::XR::Interaction::Toolkit::Filtering::IXRTargetFilter* get_targetFilter();
    // public System.Void set_targetFilter(UnityEngine.XR.Interaction.Toolkit.Filtering.IXRTargetFilter value)
    // Offset: 0x53E9D74
    void set_targetFilter(::UnityEngine::XR::Interaction::Toolkit::Filtering::IXRTargetFilter* value);
    // public System.Boolean get_allowHover()
    // Offset: 0x53E9F10
    bool get_allowHover();
    // public System.Void set_allowHover(System.Boolean value)
    // Offset: 0x53E9F18
    void set_allowHover(bool value);
    // public System.Boolean get_allowSelect()
    // Offset: 0x53E9F24
    bool get_allowSelect();
    // public System.Void set_allowSelect(System.Boolean value)
    // Offset: 0x53E9F2C
    void set_allowSelect(bool value);
    // public System.Boolean get_isPerformingManualInteraction()
    // Offset: 0x53E9F38
    bool get_isPerformingManualInteraction();
    // public System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractable> get_interactablesHovered()
    // Offset: 0x53E9F40
    ::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractable*>* get_interactablesHovered();
    // public System.Boolean get_hasHover()
    // Offset: 0x53E9FD0
    bool get_hasHover();
    // public System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractable> get_interactablesSelected()
    // Offset: 0x53EA02C
    ::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable*>* get_interactablesSelected();
    // public UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractable get_firstInteractableSelected()
    // Offset: 0x53EA0BC
    ::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable* get_firstInteractableSelected();
    // private System.Void set_firstInteractableSelected(UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractable value)
    // Offset: 0x53EA0C4
    void set_firstInteractableSelected(::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable* value);
    // public System.Boolean get_hasSelection()
    // Offset: 0x53EA0CC
    bool get_hasSelection();
    // System.Boolean get_isInteractingWithUI()
    // Offset: 0x53EA128
    bool get_isInteractingWithUI();
    // System.Void set_isInteractingWithUI(System.Boolean value)
    // Offset: 0x53EA130
    void set_isInteractingWithUI(bool value);
    // public System.Collections.Generic.List`1<UnityEngine.Object> get_startingHoverFilters()
    // Offset: 0x53EA13C
    ::System::Collections::Generic::List_1<::UnityEngine::Object*>* get_startingHoverFilters();
    // public System.Void set_startingHoverFilters(System.Collections.Generic.List`1<UnityEngine.Object> value)
    // Offset: 0x53EA144
    void set_startingHoverFilters(::System::Collections::Generic::List_1<::UnityEngine::Object*>* value);
    // public UnityEngine.XR.Interaction.Toolkit.IXRFilterList`1<UnityEngine.XR.Interaction.Toolkit.Filtering.IXRHoverFilter> get_hoverFilters()
    // Offset: 0x53EA14C
    ::UnityEngine::XR::Interaction::Toolkit::IXRFilterList_1<::UnityEngine::XR::Interaction::Toolkit::Filtering::IXRHoverFilter*>* get_hoverFilters();
    // public System.Collections.Generic.List`1<UnityEngine.Object> get_startingSelectFilters()
    // Offset: 0x53EA154
    ::System::Collections::Generic::List_1<::UnityEngine::Object*>* get_startingSelectFilters();
    // public System.Void set_startingSelectFilters(System.Collections.Generic.List`1<UnityEngine.Object> value)
    // Offset: 0x53EA15C
    void set_startingSelectFilters(::System::Collections::Generic::List_1<::UnityEngine::Object*>* value);
    // public UnityEngine.XR.Interaction.Toolkit.IXRFilterList`1<UnityEngine.XR.Interaction.Toolkit.Filtering.IXRSelectFilter> get_selectFilters()
    // Offset: 0x53EA164
    ::UnityEngine::XR::Interaction::Toolkit::IXRFilterList_1<::UnityEngine::XR::Interaction::Toolkit::Filtering::IXRSelectFilter*>* get_selectFilters();
    // public Unity.XR.CoreUtils.Bindings.Variables.IReadOnlyBindableVariable`1<System.Single> get_largestInteractionStrength()
    // Offset: 0x53EA16C
    ::Unity::XR::CoreUtils::Bindings::Variables::IReadOnlyBindableVariable_1<float>* get_largestInteractionStrength();
    // System.Boolean get_useAttachPointVelocity()
    // Offset: 0x53EA174
    bool get_useAttachPointVelocity();
    // System.Void set_useAttachPointVelocity(System.Boolean value)
    // Offset: 0x53EA17C
    void set_useAttachPointVelocity(bool value);
    // UnityEngine.Vector3 get_attachPointVelocity()
    // Offset: 0x53EA188
    ::UnityEngine::Vector3 get_attachPointVelocity();
    // private System.Void set_attachPointVelocity(UnityEngine.Vector3 value)
    // Offset: 0x53EA198
    void set_attachPointVelocity(::UnityEngine::Vector3 value);
    // UnityEngine.Vector3 get_attachPointAngularVelocity()
    // Offset: 0x53EA1A8
    ::UnityEngine::Vector3 get_attachPointAngularVelocity();
    // private System.Void set_attachPointAngularVelocity(UnityEngine.Vector3 value)
    // Offset: 0x53EA1B8
    void set_attachPointAngularVelocity(::UnityEngine::Vector3 value);
    // protected System.Void Reset()
    // Offset: 0x53EA1C8
    void Reset();
    // protected System.Void Awake()
    // Offset: 0x53EA1CC
    void Awake();
    // protected System.Void OnEnable()
    // Offset: 0x53EA7F0
    void OnEnable();
    // protected System.Void OnDisable()
    // Offset: 0x53EA808
    void OnDisable();
    // protected System.Void Start()
    // Offset: 0x53EA8B0
    void Start();
    // protected System.Void OnDestroy()
    // Offset: 0x53EA96C
    void OnDestroy();
    // public UnityEngine.Transform GetAttachTransform(UnityEngine.XR.Interaction.Toolkit.IXRInteractable interactable)
    // Offset: 0x53EAB0C
    ::UnityEngine::Transform* GetAttachTransform(::UnityEngine::XR::Interaction::Toolkit::IXRInteractable* interactable);
    // public UnityEngine.Pose GetAttachPoseOnSelect(UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractable interactable)
    // Offset: 0x53EAB8C
    ::UnityEngine::Pose GetAttachPoseOnSelect(::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable* interactable);
    // public UnityEngine.Pose GetLocalAttachPoseOnSelect(UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractable interactable)
    // Offset: 0x53EAC5C
    ::UnityEngine::Pose GetLocalAttachPoseOnSelect(::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable* interactable);
    // public System.Void GetValidTargets(System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.IXRInteractable> targets)
    // Offset: 0x53EAD2C
    void GetValidTargets(::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::IXRInteractable*>* targets);
    // private System.Void FindCreateInteractionManager()
    // Offset: 0x53EA4F8
    void FindCreateInteractionManager();
    // private System.Void RegisterWithInteractionManager()
    // Offset: 0x53E9B38
    void RegisterWithInteractionManager();
    // private System.Void UnregisterWithInteractionManager()
    // Offset: 0x53EA80C
    void UnregisterWithInteractionManager();
    // public System.Boolean get_isHoverActive()
    // Offset: 0x53EAD30
    bool get_isHoverActive();
    // public System.Boolean get_isSelectActive()
    // Offset: 0x53EAD38
    bool get_isSelectActive();
    // public UnityEngine.XR.Interaction.Toolkit.TargetPriorityMode get_targetPriorityMode()
    // Offset: 0x53EAD40
    ::UnityEngine::XR::Interaction::Toolkit::TargetPriorityMode get_targetPriorityMode();
    // public System.Void set_targetPriorityMode(UnityEngine.XR.Interaction.Toolkit.TargetPriorityMode value)
    // Offset: 0x53EAD48
    void set_targetPriorityMode(::UnityEngine::XR::Interaction::Toolkit::TargetPriorityMode value);
    // public System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractable> get_targetsForSelection()
    // Offset: 0x53EAD50
    ::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable*>* get_targetsForSelection();
    // public System.Void set_targetsForSelection(System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractable> value)
    // Offset: 0x53EAD58
    void set_targetsForSelection(::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable*>* value);
    // public System.Boolean CanHover(UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractable interactable)
    // Offset: 0x53EAD68
    bool CanHover(::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractable* interactable);
    // public System.Boolean CanSelect(UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractable interactable)
    // Offset: 0x53EAD70
    bool CanSelect(::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable* interactable);
    // public System.Boolean IsHovering(UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractable interactable)
    // Offset: 0x53EAD78
    bool IsHovering(::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractable* interactable);
    // public System.Boolean IsSelecting(UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractable interactable)
    // Offset: 0x53EADD0
    bool IsSelecting(::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable* interactable);
    // protected System.Boolean IsHovering(UnityEngine.XR.Interaction.Toolkit.IXRInteractable interactable)
    // Offset: 0x53EAE28
    bool IsHovering(::UnityEngine::XR::Interaction::Toolkit::IXRInteractable* interactable);
    // protected System.Boolean IsSelecting(UnityEngine.XR.Interaction.Toolkit.IXRInteractable interactable)
    // Offset: 0x53EAE9C
    bool IsSelecting(::UnityEngine::XR::Interaction::Toolkit::IXRInteractable* interactable);
    // public System.Nullable`1<UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable/MovementType> get_selectedInteractableMovementTypeOverride()
    // Offset: 0x53EAF10
    ::System::Nullable_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::MovementType> get_selectedInteractableMovementTypeOverride();
    // protected System.Void CaptureAttachPose(UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractable interactable)
    // Offset: 0x53EAF18
    void CaptureAttachPose(::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable* interactable);
    // public System.Void PreprocessInteractor(UnityEngine.XR.Interaction.Toolkit.XRInteractionUpdateOrder/UpdatePhase updatePhase)
    // Offset: 0x53EB158
    void PreprocessInteractor(::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::UpdatePhase updatePhase);
    // public System.Void ProcessInteractor(UnityEngine.XR.Interaction.Toolkit.XRInteractionUpdateOrder/UpdatePhase updatePhase)
    // Offset: 0x53EB4F4
    void ProcessInteractor(::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::UpdatePhase updatePhase);
    // public System.Single GetInteractionStrength(UnityEngine.XR.Interaction.Toolkit.IXRInteractable interactable)
    // Offset: 0x53EB4F8
    float GetInteractionStrength(::UnityEngine::XR::Interaction::Toolkit::IXRInteractable* interactable);
    // private System.Void UnityEngine.XR.Interaction.Toolkit.IXRInteractionStrengthInteractor.ProcessInteractionStrength(UnityEngine.XR.Interaction.Toolkit.XRInteractionUpdateOrder/UpdatePhase updatePhase)
    // Offset: 0x53EB574
    void UnityEngine_XR_Interaction_Toolkit_IXRInteractionStrengthInteractor_ProcessInteractionStrength(::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::UpdatePhase updatePhase);
    // private System.Void UnityEngine.XR.Interaction.Toolkit.IXRInteractor.OnRegistered(UnityEngine.XR.Interaction.Toolkit.InteractorRegisteredEventArgs args)
    // Offset: 0x53EB584
    void UnityEngine_XR_Interaction_Toolkit_IXRInteractor_OnRegistered(::UnityEngine::XR::Interaction::Toolkit::InteractorRegisteredEventArgs* args);
    // private System.Void UnityEngine.XR.Interaction.Toolkit.IXRInteractor.OnUnregistered(UnityEngine.XR.Interaction.Toolkit.InteractorUnregisteredEventArgs args)
    // Offset: 0x53EB594
    void UnityEngine_XR_Interaction_Toolkit_IXRInteractor_OnUnregistered(::UnityEngine::XR::Interaction::Toolkit::InteractorUnregisteredEventArgs* args);
    // private System.Boolean UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractor.CanHover(UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractable interactable)
    // Offset: 0x53EB5A4
    bool UnityEngine_XR_Interaction_Toolkit_IXRHoverInteractor_CanHover(::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractable* interactable);
    // private System.Void UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractor.OnHoverEntering(UnityEngine.XR.Interaction.Toolkit.HoverEnterEventArgs args)
    // Offset: 0x53EB67C
    void UnityEngine_XR_Interaction_Toolkit_IXRHoverInteractor_OnHoverEntering(::UnityEngine::XR::Interaction::Toolkit::HoverEnterEventArgs* args);
    // private System.Void UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractor.OnHoverEntered(UnityEngine.XR.Interaction.Toolkit.HoverEnterEventArgs args)
    // Offset: 0x53EB68C
    void UnityEngine_XR_Interaction_Toolkit_IXRHoverInteractor_OnHoverEntered(::UnityEngine::XR::Interaction::Toolkit::HoverEnterEventArgs* args);
    // private System.Void UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractor.OnHoverExiting(UnityEngine.XR.Interaction.Toolkit.HoverExitEventArgs args)
    // Offset: 0x53EB69C
    void UnityEngine_XR_Interaction_Toolkit_IXRHoverInteractor_OnHoverExiting(::UnityEngine::XR::Interaction::Toolkit::HoverExitEventArgs* args);
    // private System.Void UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractor.OnHoverExited(UnityEngine.XR.Interaction.Toolkit.HoverExitEventArgs args)
    // Offset: 0x53EB6AC
    void UnityEngine_XR_Interaction_Toolkit_IXRHoverInteractor_OnHoverExited(::UnityEngine::XR::Interaction::Toolkit::HoverExitEventArgs* args);
    // private System.Boolean UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractor.CanSelect(UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractable interactable)
    // Offset: 0x53EB6BC
    bool UnityEngine_XR_Interaction_Toolkit_IXRSelectInteractor_CanSelect(::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable* interactable);
    // private System.Void UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractor.OnSelectEntering(UnityEngine.XR.Interaction.Toolkit.SelectEnterEventArgs args)
    // Offset: 0x53EB794
    void UnityEngine_XR_Interaction_Toolkit_IXRSelectInteractor_OnSelectEntering(::UnityEngine::XR::Interaction::Toolkit::SelectEnterEventArgs* args);
    // private System.Void UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractor.OnSelectEntered(UnityEngine.XR.Interaction.Toolkit.SelectEnterEventArgs args)
    // Offset: 0x53EB7A4
    void UnityEngine_XR_Interaction_Toolkit_IXRSelectInteractor_OnSelectEntered(::UnityEngine::XR::Interaction::Toolkit::SelectEnterEventArgs* args);
    // private System.Void UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractor.OnSelectExiting(UnityEngine.XR.Interaction.Toolkit.SelectExitEventArgs args)
    // Offset: 0x53EB7B4
    void UnityEngine_XR_Interaction_Toolkit_IXRSelectInteractor_OnSelectExiting(::UnityEngine::XR::Interaction::Toolkit::SelectExitEventArgs* args);
    // private System.Void UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractor.OnSelectExited(UnityEngine.XR.Interaction.Toolkit.SelectExitEventArgs args)
    // Offset: 0x53EB7C4
    void UnityEngine_XR_Interaction_Toolkit_IXRSelectInteractor_OnSelectExited(::UnityEngine::XR::Interaction::Toolkit::SelectExitEventArgs* args);
    // protected System.Void OnRegistered(UnityEngine.XR.Interaction.Toolkit.InteractorRegisteredEventArgs args)
    // Offset: 0x53EB7D4
    void OnRegistered(::UnityEngine::XR::Interaction::Toolkit::InteractorRegisteredEventArgs* args);
    // protected System.Void OnUnregistered(UnityEngine.XR.Interaction.Toolkit.InteractorUnregisteredEventArgs args)
    // Offset: 0x53EB90C
    void OnUnregistered(::UnityEngine::XR::Interaction::Toolkit::InteractorUnregisteredEventArgs* args);
    // protected System.Void OnHoverEntering(UnityEngine.XR.Interaction.Toolkit.HoverEnterEventArgs args)
    // Offset: 0x53EBA44
    void OnHoverEntering(::UnityEngine::XR::Interaction::Toolkit::HoverEnterEventArgs* args);
    // protected System.Void OnHoverEntered(UnityEngine.XR.Interaction.Toolkit.HoverEnterEventArgs args)
    // Offset: 0x53EBC88
    void OnHoverEntered(::UnityEngine::XR::Interaction::Toolkit::HoverEnterEventArgs* args);
    // protected System.Void OnHoverExiting(UnityEngine.XR.Interaction.Toolkit.HoverExitEventArgs args)
    // Offset: 0x53EBD04
    void OnHoverExiting(::UnityEngine::XR::Interaction::Toolkit::HoverExitEventArgs* args);
    // protected System.Void OnHoverExited(UnityEngine.XR.Interaction.Toolkit.HoverExitEventArgs args)
    // Offset: 0x53EBEBC
    void OnHoverExited(::UnityEngine::XR::Interaction::Toolkit::HoverExitEventArgs* args);
    // protected System.Void OnSelectEntering(UnityEngine.XR.Interaction.Toolkit.SelectEnterEventArgs args)
    // Offset: 0x53EBF38
    void OnSelectEntering(::UnityEngine::XR::Interaction::Toolkit::SelectEnterEventArgs* args);
    // protected System.Void OnSelectEntered(UnityEngine.XR.Interaction.Toolkit.SelectEnterEventArgs args)
    // Offset: 0x53EC0DC
    void OnSelectEntered(::UnityEngine::XR::Interaction::Toolkit::SelectEnterEventArgs* args);
    // protected System.Void OnSelectExiting(UnityEngine.XR.Interaction.Toolkit.SelectExitEventArgs args)
    // Offset: 0x53EC158
    void OnSelectExiting(::UnityEngine::XR::Interaction::Toolkit::SelectExitEventArgs* args);
    // protected System.Void OnSelectExited(UnityEngine.XR.Interaction.Toolkit.SelectExitEventArgs args)
    // Offset: 0x53EC2DC
    void OnSelectExited(::UnityEngine::XR::Interaction::Toolkit::SelectExitEventArgs* args);
    // protected System.Void ProcessInteractionStrength(UnityEngine.XR.Interaction.Toolkit.XRInteractionUpdateOrder/UpdatePhase updatePhase)
    // Offset: 0x53EC3D4
    void ProcessInteractionStrength(::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::UpdatePhase updatePhase);
    // public System.Void StartManualInteraction(UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractable interactable)
    // Offset: 0x53EC884
    void StartManualInteraction(::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable* interactable);
    // public System.Void EndManualInteraction()
    // Offset: 0x53EC984
    void EndManualInteraction();
    // protected System.Boolean ProcessHoverFilters(UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractable interactable)
    // Offset: 0x53EB664
    bool ProcessHoverFilters(::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractable* interactable);
    // protected System.Boolean ProcessSelectFilters(UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractable interactable)
    // Offset: 0x53EB77C
    bool ProcessSelectFilters(::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable* interactable);
    // private System.Void UnityEngine.XR.Interaction.Toolkit.IXRGroupMember.OnRegisteringAsGroupMember(UnityEngine.XR.Interaction.Toolkit.IXRInteractionGroup group)
    // Offset: 0x53ECAAC
    void UnityEngine_XR_Interaction_Toolkit_IXRGroupMember_OnRegisteringAsGroupMember(::UnityEngine::XR::Interaction::Toolkit::IXRInteractionGroup* group);
    // private System.Void UnityEngine.XR.Interaction.Toolkit.IXRGroupMember.OnRegisteringAsNonGroupMember()
    // Offset: 0x53ECC40
    void UnityEngine_XR_Interaction_Toolkit_IXRGroupMember_OnRegisteringAsNonGroupMember();
    // private System.Void UpdateVelocityAndAngularVelocity()
    // Offset: 0x53EB168
    void UpdateVelocityAndAngularVelocity();
    // public UnityEngine.LayerMask get_interactionLayerMask()
    // Offset: 0x53ECC4C
    ::UnityEngine::LayerMask get_interactionLayerMask();
    // public System.Void set_interactionLayerMask(UnityEngine.LayerMask value)
    // Offset: 0x53ECC54
    void set_interactionLayerMask(::UnityEngine::LayerMask value);
    // public System.Boolean get_enableInteractions()
    // Offset: 0x53ECC5C
    bool get_enableInteractions();
    // public System.Void set_enableInteractions(System.Boolean value)
    // Offset: 0x53ECC7C
    void set_enableInteractions(bool value);
    // public UnityEngine.XR.Interaction.Toolkit.XRInteractorEvent get_onHoverEntered()
    // Offset: 0x53ECC8C
    ::UnityEngine::XR::Interaction::Toolkit::XRInteractorEvent* get_onHoverEntered();
    // public System.Void set_onHoverEntered(UnityEngine.XR.Interaction.Toolkit.XRInteractorEvent value)
    // Offset: 0x53ECC94
    void set_onHoverEntered(::UnityEngine::XR::Interaction::Toolkit::XRInteractorEvent* value);
    // public UnityEngine.XR.Interaction.Toolkit.XRInteractorEvent get_onHoverExited()
    // Offset: 0x53ECCA4
    ::UnityEngine::XR::Interaction::Toolkit::XRInteractorEvent* get_onHoverExited();
    // public System.Void set_onHoverExited(UnityEngine.XR.Interaction.Toolkit.XRInteractorEvent value)
    // Offset: 0x53ECCAC
    void set_onHoverExited(::UnityEngine::XR::Interaction::Toolkit::XRInteractorEvent* value);
    // public UnityEngine.XR.Interaction.Toolkit.XRInteractorEvent get_onSelectEntered()
    // Offset: 0x53ECCBC
    ::UnityEngine::XR::Interaction::Toolkit::XRInteractorEvent* get_onSelectEntered();
    // public System.Void set_onSelectEntered(UnityEngine.XR.Interaction.Toolkit.XRInteractorEvent value)
    // Offset: 0x53ECCC4
    void set_onSelectEntered(::UnityEngine::XR::Interaction::Toolkit::XRInteractorEvent* value);
    // public UnityEngine.XR.Interaction.Toolkit.XRInteractorEvent get_onSelectExited()
    // Offset: 0x53ECCD4
    ::UnityEngine::XR::Interaction::Toolkit::XRInteractorEvent* get_onSelectExited();
    // public System.Void set_onSelectExited(UnityEngine.XR.Interaction.Toolkit.XRInteractorEvent value)
    // Offset: 0x53ECCDC
    void set_onSelectExited(::UnityEngine::XR::Interaction::Toolkit::XRInteractorEvent* value);
    // public UnityEngine.XR.Interaction.Toolkit.XRInteractorEvent get_onHoverEnter()
    // Offset: 0x53ECCEC
    ::UnityEngine::XR::Interaction::Toolkit::XRInteractorEvent* get_onHoverEnter();
    // public UnityEngine.XR.Interaction.Toolkit.XRInteractorEvent get_onHoverExit()
    // Offset: 0x53ECCF4
    ::UnityEngine::XR::Interaction::Toolkit::XRInteractorEvent* get_onHoverExit();
    // public UnityEngine.XR.Interaction.Toolkit.XRInteractorEvent get_onSelectEnter()
    // Offset: 0x53ECCFC
    ::UnityEngine::XR::Interaction::Toolkit::XRInteractorEvent* get_onSelectEnter();
    // public UnityEngine.XR.Interaction.Toolkit.XRInteractorEvent get_onSelectExit()
    // Offset: 0x53ECD04
    ::UnityEngine::XR::Interaction::Toolkit::XRInteractorEvent* get_onSelectExit();
    // protected System.Void OnHoverEntering(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable interactable)
    // Offset: 0x53ECD0C
    void OnHoverEntering(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* interactable);
    // protected System.Void OnHoverEntered(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable interactable)
    // Offset: 0x53ECD10
    void OnHoverEntered(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* interactable);
    // protected System.Void OnHoverExiting(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable interactable)
    // Offset: 0x53ECD70
    void OnHoverExiting(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* interactable);
    // protected System.Void OnHoverExited(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable interactable)
    // Offset: 0x53ECD74
    void OnHoverExited(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* interactable);
    // protected System.Void OnSelectEntering(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable interactable)
    // Offset: 0x53ECDD4
    void OnSelectEntering(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* interactable);
    // protected System.Void OnSelectEntered(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable interactable)
    // Offset: 0x53ECDD8
    void OnSelectEntered(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* interactable);
    // protected System.Void OnSelectExiting(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable interactable)
    // Offset: 0x53ECE38
    void OnSelectExiting(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* interactable);
    // protected System.Void OnSelectExited(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable interactable)
    // Offset: 0x53ECE3C
    void OnSelectExited(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* interactable);
    // public UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable get_selectTarget()
    // Offset: 0x53ECE9C
    ::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* get_selectTarget();
    // protected System.Void set_selectTarget(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable value)
    // Offset: 0x53ECF50
    void set_selectTarget(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* value);
    // protected System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable> get_hoverTargets()
    // Offset: 0x53ECFB0
    ::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*>* get_hoverTargets();
    // public System.Void GetHoverTargets(System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable> targets)
    // Offset: 0x53ECFB8
    void GetHoverTargets(::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*>* targets);
    // public System.Void GetValidTargets(System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable> targets)
    // Offset: 0x53ED040
    void GetValidTargets(::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*>* targets);
    // public System.Boolean CanHover(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable interactable)
    // Offset: 0x53ED044
    bool CanHover(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* interactable);
    // public System.Boolean CanSelect(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable interactable)
    // Offset: 0x53ED054
    bool CanSelect(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* interactable);
    // public System.Boolean get_requireSelectExclusive()
    // Offset: 0x53ED064
    bool get_requireSelectExclusive();
    // public System.Void StartManualInteraction(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable interactable)
    // Offset: 0x53ED06C
    void StartManualInteraction(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* interactable);
    // protected System.Void .ctor()
    // Offset: 0x53ED07C
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static XRBaseInteractor* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<XRBaseInteractor*, creationType>()));
    }
    // static private System.Void .cctor()
    // Offset: 0x53ED7C8
    static void _cctor();
    // private UnityEngine.Transform UnityEngine.XR.Interaction.Toolkit.IXRInteractor.get_transform()
    // Offset: 0x53ED83C
    ::UnityEngine::Transform* UnityEngine_XR_Interaction_Toolkit_IXRInteractor_get_transform();
  }; // UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor
  #pragma pack(pop)
  static check_size<sizeof(XRBaseInteractor), 400 + sizeof(::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*>*)> __UnityEngine_XR_Interaction_Toolkit_XRBaseInteractorSizeCheck;
  static_assert(sizeof(XRBaseInteractor) == 0x198);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::add_registered
// Il2CppName: add_registered
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::*)(::System::Action_1<::UnityEngine::XR::Interaction::Toolkit::InteractorRegisteredEventArgs*>*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::add_registered)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "InteractorRegisteredEventArgs")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), "add_registered", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::remove_registered
// Il2CppName: remove_registered
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::*)(::System::Action_1<::UnityEngine::XR::Interaction::Toolkit::InteractorRegisteredEventArgs*>*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::remove_registered)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "InteractorRegisteredEventArgs")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), "remove_registered", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::add_unregistered
// Il2CppName: add_unregistered
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::*)(::System::Action_1<::UnityEngine::XR::Interaction::Toolkit::InteractorUnregisteredEventArgs*>*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::add_unregistered)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "InteractorUnregisteredEventArgs")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), "add_unregistered", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::remove_unregistered
// Il2CppName: remove_unregistered
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::*)(::System::Action_1<::UnityEngine::XR::Interaction::Toolkit::InteractorUnregisteredEventArgs*>*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::remove_unregistered)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "InteractorUnregisteredEventArgs")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), "remove_unregistered", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_interactionManager
// Il2CppName: get_interactionManager
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager* (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_interactionManager)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), "get_interactionManager", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::set_interactionManager
// Il2CppName: set_interactionManager
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::*)(::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::set_interactionManager)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "XRInteractionManager")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), "set_interactionManager", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_containingGroup
// Il2CppName: get_containingGroup
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::XR::Interaction::Toolkit::IXRInteractionGroup* (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_containingGroup)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), "get_containingGroup", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::set_containingGroup
// Il2CppName: set_containingGroup
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::*)(::UnityEngine::XR::Interaction::Toolkit::IXRInteractionGroup*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::set_containingGroup)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "IXRInteractionGroup")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), "set_containingGroup", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_interactionLayers
// Il2CppName: get_interactionLayers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::XR::Interaction::Toolkit::InteractionLayerMask (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_interactionLayers)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), "get_interactionLayers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::set_interactionLayers
// Il2CppName: set_interactionLayers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::*)(::UnityEngine::XR::Interaction::Toolkit::InteractionLayerMask)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::set_interactionLayers)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "InteractionLayerMask")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), "set_interactionLayers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_attachTransform
// Il2CppName: get_attachTransform
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Transform* (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_attachTransform)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), "get_attachTransform", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::set_attachTransform
// Il2CppName: set_attachTransform
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::*)(::UnityEngine::Transform*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::set_attachTransform)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Transform")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), "set_attachTransform", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_keepSelectedTargetValid
// Il2CppName: get_keepSelectedTargetValid
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_keepSelectedTargetValid)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), "get_keepSelectedTargetValid", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::set_keepSelectedTargetValid
// Il2CppName: set_keepSelectedTargetValid
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::*)(bool)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::set_keepSelectedTargetValid)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), "set_keepSelectedTargetValid", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_disableVisualsWhenBlockedInGroup
// Il2CppName: get_disableVisualsWhenBlockedInGroup
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_disableVisualsWhenBlockedInGroup)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), "get_disableVisualsWhenBlockedInGroup", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::set_disableVisualsWhenBlockedInGroup
// Il2CppName: set_disableVisualsWhenBlockedInGroup
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::*)(bool)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::set_disableVisualsWhenBlockedInGroup)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), "set_disableVisualsWhenBlockedInGroup", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_startingSelectedInteractable
// Il2CppName: get_startingSelectedInteractable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_startingSelectedInteractable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), "get_startingSelectedInteractable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::set_startingSelectedInteractable
// Il2CppName: set_startingSelectedInteractable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::*)(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::set_startingSelectedInteractable)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "XRBaseInteractable")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), "set_startingSelectedInteractable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_startingTargetFilter
// Il2CppName: get_startingTargetFilter
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::XR::Interaction::Toolkit::Filtering::XRBaseTargetFilter* (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_startingTargetFilter)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), "get_startingTargetFilter", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::set_startingTargetFilter
// Il2CppName: set_startingTargetFilter
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::*)(::UnityEngine::XR::Interaction::Toolkit::Filtering::XRBaseTargetFilter*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::set_startingTargetFilter)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit.Filtering", "XRBaseTargetFilter")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), "set_startingTargetFilter", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_hoverEntered
// Il2CppName: get_hoverEntered
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::XR::Interaction::Toolkit::HoverEnterEvent* (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_hoverEntered)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), "get_hoverEntered", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::set_hoverEntered
// Il2CppName: set_hoverEntered
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::*)(::UnityEngine::XR::Interaction::Toolkit::HoverEnterEvent*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::set_hoverEntered)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "HoverEnterEvent")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), "set_hoverEntered", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_hoverExited
// Il2CppName: get_hoverExited
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::XR::Interaction::Toolkit::HoverExitEvent* (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_hoverExited)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), "get_hoverExited", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::set_hoverExited
// Il2CppName: set_hoverExited
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::*)(::UnityEngine::XR::Interaction::Toolkit::HoverExitEvent*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::set_hoverExited)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "HoverExitEvent")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), "set_hoverExited", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_selectEntered
// Il2CppName: get_selectEntered
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::XR::Interaction::Toolkit::SelectEnterEvent* (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_selectEntered)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), "get_selectEntered", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::set_selectEntered
// Il2CppName: set_selectEntered
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::*)(::UnityEngine::XR::Interaction::Toolkit::SelectEnterEvent*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::set_selectEntered)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "SelectEnterEvent")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), "set_selectEntered", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_selectExited
// Il2CppName: get_selectExited
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::XR::Interaction::Toolkit::SelectExitEvent* (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_selectExited)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), "get_selectExited", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::set_selectExited
// Il2CppName: set_selectExited
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::*)(::UnityEngine::XR::Interaction::Toolkit::SelectExitEvent*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::set_selectExited)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "SelectExitEvent")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), "set_selectExited", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_targetFilter
// Il2CppName: get_targetFilter
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::XR::Interaction::Toolkit::Filtering::IXRTargetFilter* (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_targetFilter)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), "get_targetFilter", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::set_targetFilter
// Il2CppName: set_targetFilter
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::*)(::UnityEngine::XR::Interaction::Toolkit::Filtering::IXRTargetFilter*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::set_targetFilter)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit.Filtering", "IXRTargetFilter")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), "set_targetFilter", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_allowHover
// Il2CppName: get_allowHover
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_allowHover)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), "get_allowHover", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::set_allowHover
// Il2CppName: set_allowHover
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::*)(bool)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::set_allowHover)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), "set_allowHover", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_allowSelect
// Il2CppName: get_allowSelect
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_allowSelect)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), "get_allowSelect", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::set_allowSelect
// Il2CppName: set_allowSelect
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::*)(bool)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::set_allowSelect)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), "set_allowSelect", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_isPerformingManualInteraction
// Il2CppName: get_isPerformingManualInteraction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_isPerformingManualInteraction)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), "get_isPerformingManualInteraction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_interactablesHovered
// Il2CppName: get_interactablesHovered
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractable*>* (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_interactablesHovered)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), "get_interactablesHovered", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_hasHover
// Il2CppName: get_hasHover
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_hasHover)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), "get_hasHover", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_interactablesSelected
// Il2CppName: get_interactablesSelected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable*>* (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_interactablesSelected)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), "get_interactablesSelected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_firstInteractableSelected
// Il2CppName: get_firstInteractableSelected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable* (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_firstInteractableSelected)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), "get_firstInteractableSelected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::set_firstInteractableSelected
// Il2CppName: set_firstInteractableSelected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::*)(::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::set_firstInteractableSelected)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "IXRSelectInteractable")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), "set_firstInteractableSelected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_hasSelection
// Il2CppName: get_hasSelection
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_hasSelection)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), "get_hasSelection", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_isInteractingWithUI
// Il2CppName: get_isInteractingWithUI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_isInteractingWithUI)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), "get_isInteractingWithUI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::set_isInteractingWithUI
// Il2CppName: set_isInteractingWithUI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::*)(bool)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::set_isInteractingWithUI)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), "set_isInteractingWithUI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_startingHoverFilters
// Il2CppName: get_startingHoverFilters
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::List_1<::UnityEngine::Object*>* (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_startingHoverFilters)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), "get_startingHoverFilters", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::set_startingHoverFilters
// Il2CppName: set_startingHoverFilters
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::*)(::System::Collections::Generic::List_1<::UnityEngine::Object*>*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::set_startingHoverFilters)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine", "Object")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), "set_startingHoverFilters", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_hoverFilters
// Il2CppName: get_hoverFilters
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::XR::Interaction::Toolkit::IXRFilterList_1<::UnityEngine::XR::Interaction::Toolkit::Filtering::IXRHoverFilter*>* (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_hoverFilters)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), "get_hoverFilters", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_startingSelectFilters
// Il2CppName: get_startingSelectFilters
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::List_1<::UnityEngine::Object*>* (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_startingSelectFilters)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), "get_startingSelectFilters", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::set_startingSelectFilters
// Il2CppName: set_startingSelectFilters
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::*)(::System::Collections::Generic::List_1<::UnityEngine::Object*>*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::set_startingSelectFilters)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine", "Object")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), "set_startingSelectFilters", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_selectFilters
// Il2CppName: get_selectFilters
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::XR::Interaction::Toolkit::IXRFilterList_1<::UnityEngine::XR::Interaction::Toolkit::Filtering::IXRSelectFilter*>* (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_selectFilters)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), "get_selectFilters", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_largestInteractionStrength
// Il2CppName: get_largestInteractionStrength
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Unity::XR::CoreUtils::Bindings::Variables::IReadOnlyBindableVariable_1<float>* (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_largestInteractionStrength)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), "get_largestInteractionStrength", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_useAttachPointVelocity
// Il2CppName: get_useAttachPointVelocity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_useAttachPointVelocity)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), "get_useAttachPointVelocity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::set_useAttachPointVelocity
// Il2CppName: set_useAttachPointVelocity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::*)(bool)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::set_useAttachPointVelocity)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), "set_useAttachPointVelocity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_attachPointVelocity
// Il2CppName: get_attachPointVelocity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector3 (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_attachPointVelocity)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), "get_attachPointVelocity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::set_attachPointVelocity
// Il2CppName: set_attachPointVelocity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::*)(::UnityEngine::Vector3)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::set_attachPointVelocity)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), "set_attachPointVelocity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_attachPointAngularVelocity
// Il2CppName: get_attachPointAngularVelocity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector3 (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_attachPointAngularVelocity)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), "get_attachPointAngularVelocity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::set_attachPointAngularVelocity
// Il2CppName: set_attachPointAngularVelocity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::*)(::UnityEngine::Vector3)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::set_attachPointAngularVelocity)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), "set_attachPointAngularVelocity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::Reset
// Il2CppName: Reset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::Reset)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), "Reset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::Awake
// Il2CppName: Awake
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::Awake)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), "Awake", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::OnEnable
// Il2CppName: OnEnable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::OnEnable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), "OnEnable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::OnDisable
// Il2CppName: OnDisable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::OnDisable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), "OnDisable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::Start)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::OnDestroy
// Il2CppName: OnDestroy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::OnDestroy)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), "OnDestroy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::GetAttachTransform
// Il2CppName: GetAttachTransform
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Transform* (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::*)(::UnityEngine::XR::Interaction::Toolkit::IXRInteractable*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::GetAttachTransform)> {
  static const MethodInfo* get() {
    static auto* interactable = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "IXRInteractable")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), "GetAttachTransform", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactable});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::GetAttachPoseOnSelect
// Il2CppName: GetAttachPoseOnSelect
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Pose (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::*)(::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::GetAttachPoseOnSelect)> {
  static const MethodInfo* get() {
    static auto* interactable = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "IXRSelectInteractable")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), "GetAttachPoseOnSelect", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactable});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::GetLocalAttachPoseOnSelect
// Il2CppName: GetLocalAttachPoseOnSelect
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Pose (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::*)(::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::GetLocalAttachPoseOnSelect)> {
  static const MethodInfo* get() {
    static auto* interactable = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "IXRSelectInteractable")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), "GetLocalAttachPoseOnSelect", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactable});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::GetValidTargets
// Il2CppName: GetValidTargets
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::*)(::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::IXRInteractable*>*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::GetValidTargets)> {
  static const MethodInfo* get() {
    static auto* targets = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "IXRInteractable")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), "GetValidTargets", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{targets});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::FindCreateInteractionManager
// Il2CppName: FindCreateInteractionManager
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::FindCreateInteractionManager)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), "FindCreateInteractionManager", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::RegisterWithInteractionManager
// Il2CppName: RegisterWithInteractionManager
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::RegisterWithInteractionManager)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), "RegisterWithInteractionManager", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::UnregisterWithInteractionManager
// Il2CppName: UnregisterWithInteractionManager
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::UnregisterWithInteractionManager)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), "UnregisterWithInteractionManager", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_isHoverActive
// Il2CppName: get_isHoverActive
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_isHoverActive)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), "get_isHoverActive", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_isSelectActive
// Il2CppName: get_isSelectActive
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_isSelectActive)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), "get_isSelectActive", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_targetPriorityMode
// Il2CppName: get_targetPriorityMode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::XR::Interaction::Toolkit::TargetPriorityMode (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_targetPriorityMode)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), "get_targetPriorityMode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::set_targetPriorityMode
// Il2CppName: set_targetPriorityMode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::*)(::UnityEngine::XR::Interaction::Toolkit::TargetPriorityMode)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::set_targetPriorityMode)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "TargetPriorityMode")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), "set_targetPriorityMode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_targetsForSelection
// Il2CppName: get_targetsForSelection
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable*>* (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_targetsForSelection)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), "get_targetsForSelection", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::set_targetsForSelection
// Il2CppName: set_targetsForSelection
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::*)(::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable*>*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::set_targetsForSelection)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "IXRSelectInteractable")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), "set_targetsForSelection", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::CanHover
// Il2CppName: CanHover
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::*)(::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractable*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::CanHover)> {
  static const MethodInfo* get() {
    static auto* interactable = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "IXRHoverInteractable")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), "CanHover", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactable});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::CanSelect
// Il2CppName: CanSelect
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::*)(::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::CanSelect)> {
  static const MethodInfo* get() {
    static auto* interactable = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "IXRSelectInteractable")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), "CanSelect", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactable});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::IsHovering
// Il2CppName: IsHovering
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::*)(::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractable*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::IsHovering)> {
  static const MethodInfo* get() {
    static auto* interactable = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "IXRHoverInteractable")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), "IsHovering", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactable});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::IsSelecting
// Il2CppName: IsSelecting
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::*)(::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::IsSelecting)> {
  static const MethodInfo* get() {
    static auto* interactable = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "IXRSelectInteractable")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), "IsSelecting", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactable});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::IsHovering
// Il2CppName: IsHovering
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::*)(::UnityEngine::XR::Interaction::Toolkit::IXRInteractable*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::IsHovering)> {
  static const MethodInfo* get() {
    static auto* interactable = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "IXRInteractable")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), "IsHovering", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactable});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::IsSelecting
// Il2CppName: IsSelecting
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::*)(::UnityEngine::XR::Interaction::Toolkit::IXRInteractable*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::IsSelecting)> {
  static const MethodInfo* get() {
    static auto* interactable = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "IXRInteractable")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), "IsSelecting", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactable});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_selectedInteractableMovementTypeOverride
// Il2CppName: get_selectedInteractableMovementTypeOverride
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Nullable_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::MovementType> (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_selectedInteractableMovementTypeOverride)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), "get_selectedInteractableMovementTypeOverride", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::CaptureAttachPose
// Il2CppName: CaptureAttachPose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::*)(::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::CaptureAttachPose)> {
  static const MethodInfo* get() {
    static auto* interactable = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "IXRSelectInteractable")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), "CaptureAttachPose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactable});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::PreprocessInteractor
// Il2CppName: PreprocessInteractor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::*)(::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::UpdatePhase)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::PreprocessInteractor)> {
  static const MethodInfo* get() {
    static auto* updatePhase = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "XRInteractionUpdateOrder/UpdatePhase")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), "PreprocessInteractor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{updatePhase});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::ProcessInteractor
// Il2CppName: ProcessInteractor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::*)(::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::UpdatePhase)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::ProcessInteractor)> {
  static const MethodInfo* get() {
    static auto* updatePhase = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "XRInteractionUpdateOrder/UpdatePhase")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), "ProcessInteractor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{updatePhase});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::GetInteractionStrength
// Il2CppName: GetInteractionStrength
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::*)(::UnityEngine::XR::Interaction::Toolkit::IXRInteractable*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::GetInteractionStrength)> {
  static const MethodInfo* get() {
    static auto* interactable = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "IXRInteractable")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), "GetInteractionStrength", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactable});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::UnityEngine_XR_Interaction_Toolkit_IXRInteractionStrengthInteractor_ProcessInteractionStrength
// Il2CppName: UnityEngine.XR.Interaction.Toolkit.IXRInteractionStrengthInteractor.ProcessInteractionStrength
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::*)(::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::UpdatePhase)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::UnityEngine_XR_Interaction_Toolkit_IXRInteractionStrengthInteractor_ProcessInteractionStrength)> {
  static const MethodInfo* get() {
    static auto* updatePhase = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "XRInteractionUpdateOrder/UpdatePhase")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), "UnityEngine.XR.Interaction.Toolkit.IXRInteractionStrengthInteractor.ProcessInteractionStrength", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{updatePhase});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::UnityEngine_XR_Interaction_Toolkit_IXRInteractor_OnRegistered
// Il2CppName: UnityEngine.XR.Interaction.Toolkit.IXRInteractor.OnRegistered
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::*)(::UnityEngine::XR::Interaction::Toolkit::InteractorRegisteredEventArgs*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::UnityEngine_XR_Interaction_Toolkit_IXRInteractor_OnRegistered)> {
  static const MethodInfo* get() {
    static auto* args = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "InteractorRegisteredEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), "UnityEngine.XR.Interaction.Toolkit.IXRInteractor.OnRegistered", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{args});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::UnityEngine_XR_Interaction_Toolkit_IXRInteractor_OnUnregistered
// Il2CppName: UnityEngine.XR.Interaction.Toolkit.IXRInteractor.OnUnregistered
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::*)(::UnityEngine::XR::Interaction::Toolkit::InteractorUnregisteredEventArgs*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::UnityEngine_XR_Interaction_Toolkit_IXRInteractor_OnUnregistered)> {
  static const MethodInfo* get() {
    static auto* args = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "InteractorUnregisteredEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), "UnityEngine.XR.Interaction.Toolkit.IXRInteractor.OnUnregistered", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{args});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::UnityEngine_XR_Interaction_Toolkit_IXRHoverInteractor_CanHover
// Il2CppName: UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractor.CanHover
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::*)(::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractable*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::UnityEngine_XR_Interaction_Toolkit_IXRHoverInteractor_CanHover)> {
  static const MethodInfo* get() {
    static auto* interactable = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "IXRHoverInteractable")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), "UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractor.CanHover", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactable});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::UnityEngine_XR_Interaction_Toolkit_IXRHoverInteractor_OnHoverEntering
// Il2CppName: UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractor.OnHoverEntering
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::*)(::UnityEngine::XR::Interaction::Toolkit::HoverEnterEventArgs*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::UnityEngine_XR_Interaction_Toolkit_IXRHoverInteractor_OnHoverEntering)> {
  static const MethodInfo* get() {
    static auto* args = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "HoverEnterEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), "UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractor.OnHoverEntering", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{args});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::UnityEngine_XR_Interaction_Toolkit_IXRHoverInteractor_OnHoverEntered
// Il2CppName: UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractor.OnHoverEntered
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::*)(::UnityEngine::XR::Interaction::Toolkit::HoverEnterEventArgs*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::UnityEngine_XR_Interaction_Toolkit_IXRHoverInteractor_OnHoverEntered)> {
  static const MethodInfo* get() {
    static auto* args = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "HoverEnterEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), "UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractor.OnHoverEntered", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{args});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::UnityEngine_XR_Interaction_Toolkit_IXRHoverInteractor_OnHoverExiting
// Il2CppName: UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractor.OnHoverExiting
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::*)(::UnityEngine::XR::Interaction::Toolkit::HoverExitEventArgs*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::UnityEngine_XR_Interaction_Toolkit_IXRHoverInteractor_OnHoverExiting)> {
  static const MethodInfo* get() {
    static auto* args = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "HoverExitEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), "UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractor.OnHoverExiting", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{args});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::UnityEngine_XR_Interaction_Toolkit_IXRHoverInteractor_OnHoverExited
// Il2CppName: UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractor.OnHoverExited
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::*)(::UnityEngine::XR::Interaction::Toolkit::HoverExitEventArgs*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::UnityEngine_XR_Interaction_Toolkit_IXRHoverInteractor_OnHoverExited)> {
  static const MethodInfo* get() {
    static auto* args = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "HoverExitEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), "UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractor.OnHoverExited", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{args});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::UnityEngine_XR_Interaction_Toolkit_IXRSelectInteractor_CanSelect
// Il2CppName: UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractor.CanSelect
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::*)(::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::UnityEngine_XR_Interaction_Toolkit_IXRSelectInteractor_CanSelect)> {
  static const MethodInfo* get() {
    static auto* interactable = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "IXRSelectInteractable")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), "UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractor.CanSelect", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactable});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::UnityEngine_XR_Interaction_Toolkit_IXRSelectInteractor_OnSelectEntering
// Il2CppName: UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractor.OnSelectEntering
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::*)(::UnityEngine::XR::Interaction::Toolkit::SelectEnterEventArgs*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::UnityEngine_XR_Interaction_Toolkit_IXRSelectInteractor_OnSelectEntering)> {
  static const MethodInfo* get() {
    static auto* args = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "SelectEnterEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), "UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractor.OnSelectEntering", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{args});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::UnityEngine_XR_Interaction_Toolkit_IXRSelectInteractor_OnSelectEntered
// Il2CppName: UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractor.OnSelectEntered
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::*)(::UnityEngine::XR::Interaction::Toolkit::SelectEnterEventArgs*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::UnityEngine_XR_Interaction_Toolkit_IXRSelectInteractor_OnSelectEntered)> {
  static const MethodInfo* get() {
    static auto* args = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "SelectEnterEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), "UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractor.OnSelectEntered", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{args});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::UnityEngine_XR_Interaction_Toolkit_IXRSelectInteractor_OnSelectExiting
// Il2CppName: UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractor.OnSelectExiting
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::*)(::UnityEngine::XR::Interaction::Toolkit::SelectExitEventArgs*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::UnityEngine_XR_Interaction_Toolkit_IXRSelectInteractor_OnSelectExiting)> {
  static const MethodInfo* get() {
    static auto* args = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "SelectExitEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), "UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractor.OnSelectExiting", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{args});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::UnityEngine_XR_Interaction_Toolkit_IXRSelectInteractor_OnSelectExited
// Il2CppName: UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractor.OnSelectExited
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::*)(::UnityEngine::XR::Interaction::Toolkit::SelectExitEventArgs*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::UnityEngine_XR_Interaction_Toolkit_IXRSelectInteractor_OnSelectExited)> {
  static const MethodInfo* get() {
    static auto* args = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "SelectExitEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), "UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractor.OnSelectExited", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{args});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::OnRegistered
// Il2CppName: OnRegistered
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::*)(::UnityEngine::XR::Interaction::Toolkit::InteractorRegisteredEventArgs*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::OnRegistered)> {
  static const MethodInfo* get() {
    static auto* args = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "InteractorRegisteredEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), "OnRegistered", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{args});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::OnUnregistered
// Il2CppName: OnUnregistered
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::*)(::UnityEngine::XR::Interaction::Toolkit::InteractorUnregisteredEventArgs*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::OnUnregistered)> {
  static const MethodInfo* get() {
    static auto* args = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "InteractorUnregisteredEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), "OnUnregistered", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{args});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::OnHoverEntering
// Il2CppName: OnHoverEntering
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::*)(::UnityEngine::XR::Interaction::Toolkit::HoverEnterEventArgs*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::OnHoverEntering)> {
  static const MethodInfo* get() {
    static auto* args = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "HoverEnterEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), "OnHoverEntering", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{args});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::OnHoverEntered
// Il2CppName: OnHoverEntered
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::*)(::UnityEngine::XR::Interaction::Toolkit::HoverEnterEventArgs*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::OnHoverEntered)> {
  static const MethodInfo* get() {
    static auto* args = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "HoverEnterEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), "OnHoverEntered", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{args});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::OnHoverExiting
// Il2CppName: OnHoverExiting
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::*)(::UnityEngine::XR::Interaction::Toolkit::HoverExitEventArgs*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::OnHoverExiting)> {
  static const MethodInfo* get() {
    static auto* args = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "HoverExitEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), "OnHoverExiting", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{args});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::OnHoverExited
// Il2CppName: OnHoverExited
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::*)(::UnityEngine::XR::Interaction::Toolkit::HoverExitEventArgs*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::OnHoverExited)> {
  static const MethodInfo* get() {
    static auto* args = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "HoverExitEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), "OnHoverExited", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{args});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::OnSelectEntering
// Il2CppName: OnSelectEntering
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::*)(::UnityEngine::XR::Interaction::Toolkit::SelectEnterEventArgs*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::OnSelectEntering)> {
  static const MethodInfo* get() {
    static auto* args = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "SelectEnterEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), "OnSelectEntering", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{args});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::OnSelectEntered
// Il2CppName: OnSelectEntered
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::*)(::UnityEngine::XR::Interaction::Toolkit::SelectEnterEventArgs*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::OnSelectEntered)> {
  static const MethodInfo* get() {
    static auto* args = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "SelectEnterEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), "OnSelectEntered", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{args});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::OnSelectExiting
// Il2CppName: OnSelectExiting
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::*)(::UnityEngine::XR::Interaction::Toolkit::SelectExitEventArgs*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::OnSelectExiting)> {
  static const MethodInfo* get() {
    static auto* args = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "SelectExitEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), "OnSelectExiting", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{args});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::OnSelectExited
// Il2CppName: OnSelectExited
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::*)(::UnityEngine::XR::Interaction::Toolkit::SelectExitEventArgs*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::OnSelectExited)> {
  static const MethodInfo* get() {
    static auto* args = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "SelectExitEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), "OnSelectExited", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{args});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::ProcessInteractionStrength
// Il2CppName: ProcessInteractionStrength
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::*)(::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::UpdatePhase)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::ProcessInteractionStrength)> {
  static const MethodInfo* get() {
    static auto* updatePhase = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "XRInteractionUpdateOrder/UpdatePhase")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), "ProcessInteractionStrength", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{updatePhase});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::StartManualInteraction
// Il2CppName: StartManualInteraction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::*)(::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::StartManualInteraction)> {
  static const MethodInfo* get() {
    static auto* interactable = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "IXRSelectInteractable")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), "StartManualInteraction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactable});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::EndManualInteraction
// Il2CppName: EndManualInteraction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::EndManualInteraction)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), "EndManualInteraction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::ProcessHoverFilters
// Il2CppName: ProcessHoverFilters
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::*)(::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractable*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::ProcessHoverFilters)> {
  static const MethodInfo* get() {
    static auto* interactable = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "IXRHoverInteractable")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), "ProcessHoverFilters", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactable});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::ProcessSelectFilters
// Il2CppName: ProcessSelectFilters
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::*)(::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::ProcessSelectFilters)> {
  static const MethodInfo* get() {
    static auto* interactable = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "IXRSelectInteractable")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), "ProcessSelectFilters", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactable});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::UnityEngine_XR_Interaction_Toolkit_IXRGroupMember_OnRegisteringAsGroupMember
// Il2CppName: UnityEngine.XR.Interaction.Toolkit.IXRGroupMember.OnRegisteringAsGroupMember
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::*)(::UnityEngine::XR::Interaction::Toolkit::IXRInteractionGroup*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::UnityEngine_XR_Interaction_Toolkit_IXRGroupMember_OnRegisteringAsGroupMember)> {
  static const MethodInfo* get() {
    static auto* group = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "IXRInteractionGroup")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), "UnityEngine.XR.Interaction.Toolkit.IXRGroupMember.OnRegisteringAsGroupMember", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{group});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::UnityEngine_XR_Interaction_Toolkit_IXRGroupMember_OnRegisteringAsNonGroupMember
// Il2CppName: UnityEngine.XR.Interaction.Toolkit.IXRGroupMember.OnRegisteringAsNonGroupMember
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::UnityEngine_XR_Interaction_Toolkit_IXRGroupMember_OnRegisteringAsNonGroupMember)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), "UnityEngine.XR.Interaction.Toolkit.IXRGroupMember.OnRegisteringAsNonGroupMember", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::UpdateVelocityAndAngularVelocity
// Il2CppName: UpdateVelocityAndAngularVelocity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::UpdateVelocityAndAngularVelocity)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), "UpdateVelocityAndAngularVelocity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_interactionLayerMask
// Il2CppName: get_interactionLayerMask
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::LayerMask (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_interactionLayerMask)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), "get_interactionLayerMask", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::set_interactionLayerMask
// Il2CppName: set_interactionLayerMask
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::*)(::UnityEngine::LayerMask)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::set_interactionLayerMask)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "LayerMask")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), "set_interactionLayerMask", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_enableInteractions
// Il2CppName: get_enableInteractions
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_enableInteractions)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), "get_enableInteractions", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::set_enableInteractions
// Il2CppName: set_enableInteractions
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::*)(bool)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::set_enableInteractions)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), "set_enableInteractions", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_onHoverEntered
// Il2CppName: get_onHoverEntered
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::XR::Interaction::Toolkit::XRInteractorEvent* (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_onHoverEntered)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), "get_onHoverEntered", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::set_onHoverEntered
// Il2CppName: set_onHoverEntered
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::*)(::UnityEngine::XR::Interaction::Toolkit::XRInteractorEvent*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::set_onHoverEntered)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "XRInteractorEvent")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), "set_onHoverEntered", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_onHoverExited
// Il2CppName: get_onHoverExited
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::XR::Interaction::Toolkit::XRInteractorEvent* (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_onHoverExited)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), "get_onHoverExited", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::set_onHoverExited
// Il2CppName: set_onHoverExited
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::*)(::UnityEngine::XR::Interaction::Toolkit::XRInteractorEvent*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::set_onHoverExited)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "XRInteractorEvent")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), "set_onHoverExited", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_onSelectEntered
// Il2CppName: get_onSelectEntered
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::XR::Interaction::Toolkit::XRInteractorEvent* (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_onSelectEntered)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), "get_onSelectEntered", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::set_onSelectEntered
// Il2CppName: set_onSelectEntered
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::*)(::UnityEngine::XR::Interaction::Toolkit::XRInteractorEvent*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::set_onSelectEntered)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "XRInteractorEvent")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), "set_onSelectEntered", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_onSelectExited
// Il2CppName: get_onSelectExited
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::XR::Interaction::Toolkit::XRInteractorEvent* (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_onSelectExited)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), "get_onSelectExited", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::set_onSelectExited
// Il2CppName: set_onSelectExited
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::*)(::UnityEngine::XR::Interaction::Toolkit::XRInteractorEvent*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::set_onSelectExited)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "XRInteractorEvent")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), "set_onSelectExited", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_onHoverEnter
// Il2CppName: get_onHoverEnter
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::XR::Interaction::Toolkit::XRInteractorEvent* (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_onHoverEnter)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), "get_onHoverEnter", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_onHoverExit
// Il2CppName: get_onHoverExit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::XR::Interaction::Toolkit::XRInteractorEvent* (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_onHoverExit)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), "get_onHoverExit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_onSelectEnter
// Il2CppName: get_onSelectEnter
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::XR::Interaction::Toolkit::XRInteractorEvent* (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_onSelectEnter)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), "get_onSelectEnter", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_onSelectExit
// Il2CppName: get_onSelectExit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::XR::Interaction::Toolkit::XRInteractorEvent* (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_onSelectExit)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), "get_onSelectExit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::OnHoverEntering
// Il2CppName: OnHoverEntering
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::*)(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::OnHoverEntering)> {
  static const MethodInfo* get() {
    static auto* interactable = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "XRBaseInteractable")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), "OnHoverEntering", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactable});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::OnHoverEntered
// Il2CppName: OnHoverEntered
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::*)(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::OnHoverEntered)> {
  static const MethodInfo* get() {
    static auto* interactable = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "XRBaseInteractable")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), "OnHoverEntered", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactable});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::OnHoverExiting
// Il2CppName: OnHoverExiting
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::*)(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::OnHoverExiting)> {
  static const MethodInfo* get() {
    static auto* interactable = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "XRBaseInteractable")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), "OnHoverExiting", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactable});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::OnHoverExited
// Il2CppName: OnHoverExited
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::*)(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::OnHoverExited)> {
  static const MethodInfo* get() {
    static auto* interactable = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "XRBaseInteractable")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), "OnHoverExited", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactable});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::OnSelectEntering
// Il2CppName: OnSelectEntering
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::*)(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::OnSelectEntering)> {
  static const MethodInfo* get() {
    static auto* interactable = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "XRBaseInteractable")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), "OnSelectEntering", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactable});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::OnSelectEntered
// Il2CppName: OnSelectEntered
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::*)(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::OnSelectEntered)> {
  static const MethodInfo* get() {
    static auto* interactable = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "XRBaseInteractable")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), "OnSelectEntered", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactable});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::OnSelectExiting
// Il2CppName: OnSelectExiting
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::*)(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::OnSelectExiting)> {
  static const MethodInfo* get() {
    static auto* interactable = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "XRBaseInteractable")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), "OnSelectExiting", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactable});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::OnSelectExited
// Il2CppName: OnSelectExited
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::*)(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::OnSelectExited)> {
  static const MethodInfo* get() {
    static auto* interactable = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "XRBaseInteractable")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), "OnSelectExited", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactable});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_selectTarget
// Il2CppName: get_selectTarget
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_selectTarget)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), "get_selectTarget", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::set_selectTarget
// Il2CppName: set_selectTarget
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::*)(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::set_selectTarget)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "XRBaseInteractable")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), "set_selectTarget", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_hoverTargets
// Il2CppName: get_hoverTargets
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*>* (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_hoverTargets)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), "get_hoverTargets", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::GetHoverTargets
// Il2CppName: GetHoverTargets
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::*)(::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*>*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::GetHoverTargets)> {
  static const MethodInfo* get() {
    static auto* targets = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "XRBaseInteractable")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), "GetHoverTargets", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{targets});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::GetValidTargets
// Il2CppName: GetValidTargets
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::*)(::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*>*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::GetValidTargets)> {
  static const MethodInfo* get() {
    static auto* targets = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "XRBaseInteractable")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), "GetValidTargets", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{targets});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::CanHover
// Il2CppName: CanHover
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::*)(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::CanHover)> {
  static const MethodInfo* get() {
    static auto* interactable = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "XRBaseInteractable")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), "CanHover", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactable});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::CanSelect
// Il2CppName: CanSelect
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::*)(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::CanSelect)> {
  static const MethodInfo* get() {
    static auto* interactable = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "XRBaseInteractable")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), "CanSelect", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactable});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_requireSelectExclusive
// Il2CppName: get_requireSelectExclusive
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_requireSelectExclusive)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), "get_requireSelectExclusive", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::StartManualInteraction
// Il2CppName: StartManualInteraction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::*)(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::StartManualInteraction)> {
  static const MethodInfo* get() {
    static auto* interactable = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "XRBaseInteractable")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), "StartManualInteraction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactable});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::UnityEngine_XR_Interaction_Toolkit_IXRInteractor_get_transform
// Il2CppName: UnityEngine.XR.Interaction.Toolkit.IXRInteractor.get_transform
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Transform* (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::UnityEngine_XR_Interaction_Toolkit_IXRInteractor_get_transform)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), "UnityEngine.XR.Interaction.Toolkit.IXRInteractor.get_transform", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
