// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor
#include "UnityEngine/XR/Interaction/Toolkit/XRBaseInteractor.hpp"
// Including type: System.ValueTuple`2
#include "System/ValueTuple_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::XR::Interaction::Toolkit
namespace UnityEngine::XR::Interaction::Toolkit {
  // Forward declaring type: IXRInteractable
  class IXRInteractable;
  // Forward declaring type: IXRHoverInteractable
  class IXRHoverInteractable;
  // Forward declaring type: InteractableRegisteredEventArgs
  class InteractableRegisteredEventArgs;
  // Forward declaring type: InteractableUnregisteredEventArgs
  class InteractableUnregisteredEventArgs;
  // Forward declaring type: HoverEnterEventArgs
  class HoverEnterEventArgs;
  // Forward declaring type: HoverExitEventArgs
  class HoverExitEventArgs;
  // Forward declaring type: SelectExitEventArgs
  class SelectExitEventArgs;
  // Forward declaring type: IXRSelectInteractable
  class IXRSelectInteractable;
  // Forward declaring type: InteractorRegisteredEventArgs
  class InteractorRegisteredEventArgs;
  // Forward declaring type: InteractorUnregisteredEventArgs
  class InteractorUnregisteredEventArgs;
  // Skipping declaration: XRBaseInteractable because it is already included!
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Material
  class Material;
  // Forward declaring type: Collider
  class Collider;
  // Forward declaring type: MeshFilter
  class MeshFilter;
  // Forward declaring type: Renderer
  class Renderer;
  // Forward declaring type: WaitForFixedUpdate
  class WaitForFixedUpdate;
  // Forward declaring type: Color
  struct Color;
  // Forward declaring type: Matrix4x4
  struct Matrix4x4;
  // Skipping declaration: Vector3 because it is already included!
  // Skipping declaration: Pose because it is already included!
  // Forward declaring type: Camera
  class Camera;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
  // Forward declaring type: HashSet`1<T>
  template<typename T>
  class HashSet_1;
  // Forward declaring type: Dictionary`2<TKey, TValue>
  template<typename TKey, typename TValue>
  class Dictionary_2;
}
// Forward declaring namespace: UnityEngine::XR::Interaction::Toolkit::Utilities
namespace UnityEngine::XR::Interaction::Toolkit::Utilities {
  // Forward declaring type: TriggerContactMonitor
  class TriggerContactMonitor;
}
// Forward declaring namespace: System::Collections
namespace System::Collections {
  // Forward declaring type: IEnumerator
  class IEnumerator;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Nullable`1<T>
  template<typename T>
  struct Nullable_1;
}
// Completed forward declares
// Type namespace: UnityEngine.XR.Interaction.Toolkit
namespace UnityEngine::XR::Interaction::Toolkit {
  // Forward declaring type: XRSocketInteractor
  class XRSocketInteractor;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor*, "UnityEngine.XR.Interaction.Toolkit", "XRSocketInteractor");
// Type namespace: UnityEngine.XR.Interaction.Toolkit
namespace UnityEngine::XR::Interaction::Toolkit {
  // Size: 0x1E8
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.XR.Interaction.Toolkit.XRSocketInteractor
  // [TokenAttribute] Offset: FFFFFFFF
  // [DisallowMultipleComponent] Offset: FFFFFFFF
  // [AddComponentMenu] Offset: FFFFFFFF
  // [HelpURLAttribute] Offset: FFFFFFFF
  class XRSocketInteractor : public ::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor {
    public:
    // Nested type: ::UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::ShaderPropertyLookup
    struct ShaderPropertyLookup;
    // Nested type: ::UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::$UpdateCollidersAfterOnTriggerStay$d__40
    class $UpdateCollidersAfterOnTriggerStay$d__40;
    public:
    // private System.Boolean m_ShowInteractableHoverMeshes
    // Size: 0x1
    // Offset: 0x198
    bool m_ShowInteractableHoverMeshes;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: m_ShowInteractableHoverMeshes and: m_InteractableHoverMeshMaterial
    char __padding0[0x7] = {};
    // private UnityEngine.Material m_InteractableHoverMeshMaterial
    // Size: 0x8
    // Offset: 0x1A0
    ::UnityEngine::Material* m_InteractableHoverMeshMaterial;
    // Field size check
    static_assert(sizeof(::UnityEngine::Material*) == 0x8);
    // private UnityEngine.Material m_InteractableCantHoverMeshMaterial
    // Size: 0x8
    // Offset: 0x1A8
    ::UnityEngine::Material* m_InteractableCantHoverMeshMaterial;
    // Field size check
    static_assert(sizeof(::UnityEngine::Material*) == 0x8);
    // private System.Boolean m_SocketActive
    // Size: 0x1
    // Offset: 0x1B0
    bool m_SocketActive;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: m_SocketActive and: m_InteractableHoverScale
    char __padding3[0x3] = {};
    // private System.Single m_InteractableHoverScale
    // Size: 0x4
    // Offset: 0x1B4
    float m_InteractableHoverScale;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Single m_RecycleDelayTime
    // Size: 0x4
    // Offset: 0x1B8
    float m_RecycleDelayTime;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Single m_LastRemoveTime
    // Size: 0x4
    // Offset: 0x1BC
    float m_LastRemoveTime;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private readonly System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.IXRInteractable> <unsortedValidTargets>k__BackingField
    // Size: 0x8
    // Offset: 0x1C0
    ::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::IXRInteractable*>* unsortedValidTargets;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::IXRInteractable*>*) == 0x8);
    // private readonly System.Collections.Generic.HashSet`1<UnityEngine.Collider> m_StayedColliders
    // Size: 0x8
    // Offset: 0x1C8
    ::System::Collections::Generic::HashSet_1<::UnityEngine::Collider*>* m_StayedColliders;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::HashSet_1<::UnityEngine::Collider*>*) == 0x8);
    // private readonly UnityEngine.XR.Interaction.Toolkit.Utilities.TriggerContactMonitor m_TriggerContactMonitor
    // Size: 0x8
    // Offset: 0x1D0
    ::UnityEngine::XR::Interaction::Toolkit::Utilities::TriggerContactMonitor* m_TriggerContactMonitor;
    // Field size check
    static_assert(sizeof(::UnityEngine::XR::Interaction::Toolkit::Utilities::TriggerContactMonitor*) == 0x8);
    // private readonly System.Collections.Generic.Dictionary`2<UnityEngine.XR.Interaction.Toolkit.IXRInteractable,System.ValueTuple`2<UnityEngine.MeshFilter,UnityEngine.Renderer>[]> m_MeshFilterCache
    // Size: 0x8
    // Offset: 0x1D8
    ::System::Collections::Generic::Dictionary_2<::UnityEngine::XR::Interaction::Toolkit::IXRInteractable*, ::ArrayW<::System::ValueTuple_2<::UnityEngine::MeshFilter*, ::UnityEngine::Renderer*>>>* m_MeshFilterCache;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::Dictionary_2<::UnityEngine::XR::Interaction::Toolkit::IXRInteractable*, ::ArrayW<::System::ValueTuple_2<::UnityEngine::MeshFilter*, ::UnityEngine::Renderer*>>>*) == 0x8);
    // private System.Collections.IEnumerator m_UpdateCollidersAfterTriggerStay
    // Size: 0x8
    // Offset: 0x1E0
    ::System::Collections::IEnumerator* m_UpdateCollidersAfterTriggerStay;
    // Field size check
    static_assert(sizeof(::System::Collections::IEnumerator*) == 0x8);
    public:
    // Get static field: static private readonly System.Collections.Generic.List`1<UnityEngine.MeshFilter> s_MeshFilters
    static ::System::Collections::Generic::List_1<::UnityEngine::MeshFilter*>* _get_s_MeshFilters();
    // Set static field: static private readonly System.Collections.Generic.List`1<UnityEngine.MeshFilter> s_MeshFilters
    static void _set_s_MeshFilters(::System::Collections::Generic::List_1<::UnityEngine::MeshFilter*>* value);
    // Get static field: static private readonly UnityEngine.WaitForFixedUpdate s_WaitForFixedUpdate
    static ::UnityEngine::WaitForFixedUpdate* _get_s_WaitForFixedUpdate();
    // Set static field: static private readonly UnityEngine.WaitForFixedUpdate s_WaitForFixedUpdate
    static void _set_s_WaitForFixedUpdate(::UnityEngine::WaitForFixedUpdate* value);
    // Get instance field reference: private System.Boolean m_ShowInteractableHoverMeshes
    [[deprecated("Use field access instead!")]] bool& dyn_m_ShowInteractableHoverMeshes();
    // Get instance field reference: private UnityEngine.Material m_InteractableHoverMeshMaterial
    [[deprecated("Use field access instead!")]] ::UnityEngine::Material*& dyn_m_InteractableHoverMeshMaterial();
    // Get instance field reference: private UnityEngine.Material m_InteractableCantHoverMeshMaterial
    [[deprecated("Use field access instead!")]] ::UnityEngine::Material*& dyn_m_InteractableCantHoverMeshMaterial();
    // Get instance field reference: private System.Boolean m_SocketActive
    [[deprecated("Use field access instead!")]] bool& dyn_m_SocketActive();
    // Get instance field reference: private System.Single m_InteractableHoverScale
    [[deprecated("Use field access instead!")]] float& dyn_m_InteractableHoverScale();
    // Get instance field reference: private System.Single m_RecycleDelayTime
    [[deprecated("Use field access instead!")]] float& dyn_m_RecycleDelayTime();
    // Get instance field reference: private System.Single m_LastRemoveTime
    [[deprecated("Use field access instead!")]] float& dyn_m_LastRemoveTime();
    // Get instance field reference: private readonly System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.IXRInteractable> <unsortedValidTargets>k__BackingField
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::IXRInteractable*>*& dyn_$unsortedValidTargets$k__BackingField();
    // Get instance field reference: private readonly System.Collections.Generic.HashSet`1<UnityEngine.Collider> m_StayedColliders
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::HashSet_1<::UnityEngine::Collider*>*& dyn_m_StayedColliders();
    // Get instance field reference: private readonly UnityEngine.XR.Interaction.Toolkit.Utilities.TriggerContactMonitor m_TriggerContactMonitor
    [[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::Utilities::TriggerContactMonitor*& dyn_m_TriggerContactMonitor();
    // Get instance field reference: private readonly System.Collections.Generic.Dictionary`2<UnityEngine.XR.Interaction.Toolkit.IXRInteractable,System.ValueTuple`2<UnityEngine.MeshFilter,UnityEngine.Renderer>[]> m_MeshFilterCache
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::UnityEngine::XR::Interaction::Toolkit::IXRInteractable*, ::ArrayW<::System::ValueTuple_2<::UnityEngine::MeshFilter*, ::UnityEngine::Renderer*>>>*& dyn_m_MeshFilterCache();
    // Get instance field reference: private System.Collections.IEnumerator m_UpdateCollidersAfterTriggerStay
    [[deprecated("Use field access instead!")]] ::System::Collections::IEnumerator*& dyn_m_UpdateCollidersAfterTriggerStay();
    // public System.Boolean get_showInteractableHoverMeshes()
    // Offset: 0x53FAEC4
    bool get_showInteractableHoverMeshes();
    // public System.Void set_showInteractableHoverMeshes(System.Boolean value)
    // Offset: 0x53FAECC
    void set_showInteractableHoverMeshes(bool value);
    // public UnityEngine.Material get_interactableHoverMeshMaterial()
    // Offset: 0x53FAED8
    ::UnityEngine::Material* get_interactableHoverMeshMaterial();
    // public System.Void set_interactableHoverMeshMaterial(UnityEngine.Material value)
    // Offset: 0x53FAEE0
    void set_interactableHoverMeshMaterial(::UnityEngine::Material* value);
    // public UnityEngine.Material get_interactableCantHoverMeshMaterial()
    // Offset: 0x53FAEF0
    ::UnityEngine::Material* get_interactableCantHoverMeshMaterial();
    // public System.Void set_interactableCantHoverMeshMaterial(UnityEngine.Material value)
    // Offset: 0x53FAEF8
    void set_interactableCantHoverMeshMaterial(::UnityEngine::Material* value);
    // public System.Boolean get_socketActive()
    // Offset: 0x53FAF08
    bool get_socketActive();
    // public System.Void set_socketActive(System.Boolean value)
    // Offset: 0x53FAF10
    void set_socketActive(bool value);
    // public System.Single get_interactableHoverScale()
    // Offset: 0x53FAF1C
    float get_interactableHoverScale();
    // public System.Void set_interactableHoverScale(System.Single value)
    // Offset: 0x53FAF24
    void set_interactableHoverScale(float value);
    // public System.Single get_recycleDelayTime()
    // Offset: 0x53FAF2C
    float get_recycleDelayTime();
    // public System.Void set_recycleDelayTime(System.Single value)
    // Offset: 0x53FAF34
    void set_recycleDelayTime(float value);
    // protected System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.IXRInteractable> get_unsortedValidTargets()
    // Offset: 0x53FAF3C
    ::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::IXRInteractable*>* get_unsortedValidTargets();
    // protected System.Void OnTriggerEnter(UnityEngine.Collider other)
    // Offset: 0x53FB298
    void OnTriggerEnter(::UnityEngine::Collider* other);
    // protected System.Void OnTriggerStay(UnityEngine.Collider other)
    // Offset: 0x53FB2B4
    void OnTriggerStay(::UnityEngine::Collider* other);
    // protected System.Void OnTriggerExit(UnityEngine.Collider other)
    // Offset: 0x53FB30C
    void OnTriggerExit(::UnityEngine::Collider* other);
    // private System.Collections.IEnumerator UpdateCollidersAfterOnTriggerStay()
    // Offset: 0x53FAF98
    ::System::Collections::IEnumerator* UpdateCollidersAfterOnTriggerStay();
    // protected System.Void CreateDefaultHoverMaterials()
    // Offset: 0x53FB46C
    void CreateDefaultHoverMaterials();
    // static private System.Void SetMaterialFade(UnityEngine.Material material, UnityEngine.Color color)
    // Offset: 0x53FB778
    static void SetMaterialFade(::UnityEngine::Material* material, ::UnityEngine::Color color);
    // private UnityEngine.Matrix4x4 GetHoverMeshMatrix(UnityEngine.XR.Interaction.Toolkit.IXRInteractable interactable, UnityEngine.MeshFilter meshFilter, System.Single hoverScale)
    // Offset: 0x53FBD60
    ::UnityEngine::Matrix4x4 GetHoverMeshMatrix(::UnityEngine::XR::Interaction::Toolkit::IXRInteractable* interactable, ::UnityEngine::MeshFilter* meshFilter, float hoverScale);
    // static private UnityEngine.Vector3 InverseTransformDirection(UnityEngine.Pose pose, UnityEngine.Vector3 direction)
    // Offset: 0x53FC514
    static ::UnityEngine::Vector3 InverseTransformDirection(::UnityEngine::Pose pose, ::UnityEngine::Vector3 direction);
    // protected System.Void DrawHoveredInteractables()
    // Offset: 0x53FC560
    void DrawHoveredInteractables();
    // protected UnityEngine.Material GetHoveredInteractableMaterial(UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractable interactable)
    // Offset: 0x53FC95C
    ::UnityEngine::Material* GetHoveredInteractableMaterial(::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractable* interactable);
    // private System.Boolean get_isHoverRecycleAllowed()
    // Offset: 0x53FB420
    bool get_isHoverRecycleAllowed();
    // protected System.Boolean ShouldDrawHoverMesh(UnityEngine.MeshFilter meshFilter, UnityEngine.Renderer meshRenderer, UnityEngine.Camera mainCamera)
    // Offset: 0x53FCD80
    bool ShouldDrawHoverMesh(::UnityEngine::MeshFilter* meshFilter, ::UnityEngine::Renderer* meshRenderer, ::UnityEngine::Camera* mainCamera);
    // private System.Void OnInteractableRegistered(UnityEngine.XR.Interaction.Toolkit.InteractableRegisteredEventArgs args)
    // Offset: 0x53FD0D4
    void OnInteractableRegistered(::UnityEngine::XR::Interaction::Toolkit::InteractableRegisteredEventArgs* args);
    // private System.Void OnInteractableUnregistered(UnityEngine.XR.Interaction.Toolkit.InteractableUnregisteredEventArgs args)
    // Offset: 0x53FD1E4
    void OnInteractableUnregistered(::UnityEngine::XR::Interaction::Toolkit::InteractableUnregisteredEventArgs* args);
    // private System.Void OnContactAdded(UnityEngine.XR.Interaction.Toolkit.IXRInteractable interactable)
    // Offset: 0x53FD240
    void OnContactAdded(::UnityEngine::XR::Interaction::Toolkit::IXRInteractable* interactable);
    // private System.Void OnContactRemoved(UnityEngine.XR.Interaction.Toolkit.IXRInteractable interactable)
    // Offset: 0x53FD324
    void OnContactRemoved(::UnityEngine::XR::Interaction::Toolkit::IXRInteractable* interactable);
    // private System.Void ResetCollidersAndValidTargets()
    // Offset: 0x53FB104
    void ResetCollidersAndValidTargets();
    // protected override System.Void Awake()
    // Offset: 0x53FAF44
    // Implemented from: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor
    // Base method: System.Void XRBaseInteractor::Awake()
    void Awake();
    // protected override System.Void OnEnable()
    // Offset: 0x53FB004
    // Implemented from: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor
    // Base method: System.Void XRBaseInteractor::OnEnable()
    void OnEnable();
    // protected override System.Void OnDisable()
    // Offset: 0x53FB1A0
    // Implemented from: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor
    // Base method: System.Void XRBaseInteractor::OnDisable()
    void OnDisable();
    // public override System.Void ProcessInteractor(UnityEngine.XR.Interaction.Toolkit.XRInteractionUpdateOrder/UpdatePhase updatePhase)
    // Offset: 0x53FB350
    // Implemented from: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor
    // Base method: System.Void XRBaseInteractor::ProcessInteractor(UnityEngine.XR.Interaction.Toolkit.XRInteractionUpdateOrder/UpdatePhase updatePhase)
    void ProcessInteractor(::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::UpdatePhase updatePhase);
    // protected override System.Void OnHoverEntering(UnityEngine.XR.Interaction.Toolkit.HoverEnterEventArgs args)
    // Offset: 0x53FB9B4
    // Implemented from: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor
    // Base method: System.Void XRBaseInteractor::OnHoverEntering(UnityEngine.XR.Interaction.Toolkit.HoverEnterEventArgs args)
    void OnHoverEntering(::UnityEngine::XR::Interaction::Toolkit::HoverEnterEventArgs* args);
    // protected override System.Void OnHoverExiting(UnityEngine.XR.Interaction.Toolkit.HoverExitEventArgs args)
    // Offset: 0x53FBCCC
    // Implemented from: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor
    // Base method: System.Void XRBaseInteractor::OnHoverExiting(UnityEngine.XR.Interaction.Toolkit.HoverExitEventArgs args)
    void OnHoverExiting(::UnityEngine::XR::Interaction::Toolkit::HoverExitEventArgs* args);
    // protected override System.Void OnSelectExiting(UnityEngine.XR.Interaction.Toolkit.SelectExitEventArgs args)
    // Offset: 0x53FBD40
    // Implemented from: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor
    // Base method: System.Void XRBaseInteractor::OnSelectExiting(UnityEngine.XR.Interaction.Toolkit.SelectExitEventArgs args)
    void OnSelectExiting(::UnityEngine::XR::Interaction::Toolkit::SelectExitEventArgs* args);
    // public override System.Void GetValidTargets(System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.IXRInteractable> targets)
    // Offset: 0x53FC984
    // Implemented from: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor
    // Base method: System.Void XRBaseInteractor::GetValidTargets(System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.IXRInteractable> targets)
    void GetValidTargets(::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::IXRInteractable*>* targets);
    // public override System.Boolean get_isHoverActive()
    // Offset: 0x53FCB44
    // Implemented from: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor
    // Base method: System.Boolean XRBaseInteractor::get_isHoverActive()
    bool get_isHoverActive();
    // public override System.Boolean get_isSelectActive()
    // Offset: 0x53FCB64
    // Implemented from: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor
    // Base method: System.Boolean XRBaseInteractor::get_isSelectActive()
    bool get_isSelectActive();
    // public override System.Nullable`1<UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable/MovementType> get_selectedInteractableMovementTypeOverride()
    // Offset: 0x53FCB84
    // Implemented from: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor
    // Base method: System.Nullable`1<UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable/MovementType> XRBaseInteractor::get_selectedInteractableMovementTypeOverride()
    ::System::Nullable_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::MovementType> get_selectedInteractableMovementTypeOverride();
    // public override System.Boolean CanHover(UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractable interactable)
    // Offset: 0x53FCBD8
    // Implemented from: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor
    // Base method: System.Boolean XRBaseInteractor::CanHover(UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractable interactable)
    bool CanHover(::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractable* interactable);
    // public override System.Boolean CanSelect(UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractable interactable)
    // Offset: 0x53FCC24
    // Implemented from: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor
    // Base method: System.Boolean XRBaseInteractor::CanSelect(UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractable interactable)
    bool CanSelect(::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable* interactable);
    // protected override System.Void OnRegistered(UnityEngine.XR.Interaction.Toolkit.InteractorRegisteredEventArgs args)
    // Offset: 0x53FCE78
    // Implemented from: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor
    // Base method: System.Void XRBaseInteractor::OnRegistered(UnityEngine.XR.Interaction.Toolkit.InteractorRegisteredEventArgs args)
    void OnRegistered(::UnityEngine::XR::Interaction::Toolkit::InteractorRegisteredEventArgs* args);
    // protected override System.Void OnUnregistered(UnityEngine.XR.Interaction.Toolkit.InteractorUnregisteredEventArgs args)
    // Offset: 0x53FCFD4
    // Implemented from: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor
    // Base method: System.Void XRBaseInteractor::OnUnregistered(UnityEngine.XR.Interaction.Toolkit.InteractorUnregisteredEventArgs args)
    void OnUnregistered(::UnityEngine::XR::Interaction::Toolkit::InteractorUnregisteredEventArgs* args);
    // public override System.Boolean CanHover(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable interactable)
    // Offset: 0x53FD37C
    // Implemented from: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor
    // Base method: System.Boolean XRBaseInteractor::CanHover(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable interactable)
    bool CanHover(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* interactable);
    // public override System.Boolean CanSelect(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable interactable)
    // Offset: 0x53FD38C
    // Implemented from: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor
    // Base method: System.Boolean XRBaseInteractor::CanSelect(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable interactable)
    bool CanSelect(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* interactable);
    // public System.Void .ctor()
    // Offset: 0x53FD39C
    // Implemented from: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor
    // Base method: System.Void XRBaseInteractor::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static XRSocketInteractor* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<XRSocketInteractor*, creationType>()));
    }
    // static private System.Void .cctor()
    // Offset: 0x53FD54C
    // Implemented from: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor
    // Base method: System.Void XRBaseInteractor::.cctor()
    static void _cctor();
  }; // UnityEngine.XR.Interaction.Toolkit.XRSocketInteractor
  #pragma pack(pop)
  static check_size<sizeof(XRSocketInteractor), 480 + sizeof(::System::Collections::IEnumerator*)> __UnityEngine_XR_Interaction_Toolkit_XRSocketInteractorSizeCheck;
  static_assert(sizeof(XRSocketInteractor) == 0x1E8);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::get_showInteractableHoverMeshes
// Il2CppName: get_showInteractableHoverMeshes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::get_showInteractableHoverMeshes)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor*), "get_showInteractableHoverMeshes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::set_showInteractableHoverMeshes
// Il2CppName: set_showInteractableHoverMeshes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::*)(bool)>(&UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::set_showInteractableHoverMeshes)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor*), "set_showInteractableHoverMeshes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::get_interactableHoverMeshMaterial
// Il2CppName: get_interactableHoverMeshMaterial
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Material* (UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::get_interactableHoverMeshMaterial)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor*), "get_interactableHoverMeshMaterial", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::set_interactableHoverMeshMaterial
// Il2CppName: set_interactableHoverMeshMaterial
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::*)(::UnityEngine::Material*)>(&UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::set_interactableHoverMeshMaterial)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Material")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor*), "set_interactableHoverMeshMaterial", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::get_interactableCantHoverMeshMaterial
// Il2CppName: get_interactableCantHoverMeshMaterial
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Material* (UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::get_interactableCantHoverMeshMaterial)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor*), "get_interactableCantHoverMeshMaterial", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::set_interactableCantHoverMeshMaterial
// Il2CppName: set_interactableCantHoverMeshMaterial
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::*)(::UnityEngine::Material*)>(&UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::set_interactableCantHoverMeshMaterial)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Material")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor*), "set_interactableCantHoverMeshMaterial", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::get_socketActive
// Il2CppName: get_socketActive
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::get_socketActive)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor*), "get_socketActive", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::set_socketActive
// Il2CppName: set_socketActive
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::*)(bool)>(&UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::set_socketActive)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor*), "set_socketActive", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::get_interactableHoverScale
// Il2CppName: get_interactableHoverScale
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::get_interactableHoverScale)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor*), "get_interactableHoverScale", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::set_interactableHoverScale
// Il2CppName: set_interactableHoverScale
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::*)(float)>(&UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::set_interactableHoverScale)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor*), "set_interactableHoverScale", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::get_recycleDelayTime
// Il2CppName: get_recycleDelayTime
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::get_recycleDelayTime)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor*), "get_recycleDelayTime", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::set_recycleDelayTime
// Il2CppName: set_recycleDelayTime
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::*)(float)>(&UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::set_recycleDelayTime)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor*), "set_recycleDelayTime", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::get_unsortedValidTargets
// Il2CppName: get_unsortedValidTargets
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::IXRInteractable*>* (UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::get_unsortedValidTargets)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor*), "get_unsortedValidTargets", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::OnTriggerEnter
// Il2CppName: OnTriggerEnter
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::*)(::UnityEngine::Collider*)>(&UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::OnTriggerEnter)> {
  static const MethodInfo* get() {
    static auto* other = &::il2cpp_utils::GetClassFromName("UnityEngine", "Collider")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor*), "OnTriggerEnter", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{other});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::OnTriggerStay
// Il2CppName: OnTriggerStay
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::*)(::UnityEngine::Collider*)>(&UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::OnTriggerStay)> {
  static const MethodInfo* get() {
    static auto* other = &::il2cpp_utils::GetClassFromName("UnityEngine", "Collider")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor*), "OnTriggerStay", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{other});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::OnTriggerExit
// Il2CppName: OnTriggerExit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::*)(::UnityEngine::Collider*)>(&UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::OnTriggerExit)> {
  static const MethodInfo* get() {
    static auto* other = &::il2cpp_utils::GetClassFromName("UnityEngine", "Collider")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor*), "OnTriggerExit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{other});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::UpdateCollidersAfterOnTriggerStay
// Il2CppName: UpdateCollidersAfterOnTriggerStay
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::IEnumerator* (UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::UpdateCollidersAfterOnTriggerStay)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor*), "UpdateCollidersAfterOnTriggerStay", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::CreateDefaultHoverMaterials
// Il2CppName: CreateDefaultHoverMaterials
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::CreateDefaultHoverMaterials)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor*), "CreateDefaultHoverMaterials", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::SetMaterialFade
// Il2CppName: SetMaterialFade
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::Material*, ::UnityEngine::Color)>(&UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::SetMaterialFade)> {
  static const MethodInfo* get() {
    static auto* material = &::il2cpp_utils::GetClassFromName("UnityEngine", "Material")->byval_arg;
    static auto* color = &::il2cpp_utils::GetClassFromName("UnityEngine", "Color")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor*), "SetMaterialFade", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{material, color});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::GetHoverMeshMatrix
// Il2CppName: GetHoverMeshMatrix
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Matrix4x4 (UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::*)(::UnityEngine::XR::Interaction::Toolkit::IXRInteractable*, ::UnityEngine::MeshFilter*, float)>(&UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::GetHoverMeshMatrix)> {
  static const MethodInfo* get() {
    static auto* interactable = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "IXRInteractable")->byval_arg;
    static auto* meshFilter = &::il2cpp_utils::GetClassFromName("UnityEngine", "MeshFilter")->byval_arg;
    static auto* hoverScale = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor*), "GetHoverMeshMatrix", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactable, meshFilter, hoverScale});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::InverseTransformDirection
// Il2CppName: InverseTransformDirection
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector3 (*)(::UnityEngine::Pose, ::UnityEngine::Vector3)>(&UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::InverseTransformDirection)> {
  static const MethodInfo* get() {
    static auto* pose = &::il2cpp_utils::GetClassFromName("UnityEngine", "Pose")->byval_arg;
    static auto* direction = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor*), "InverseTransformDirection", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{pose, direction});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::DrawHoveredInteractables
// Il2CppName: DrawHoveredInteractables
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::DrawHoveredInteractables)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor*), "DrawHoveredInteractables", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::GetHoveredInteractableMaterial
// Il2CppName: GetHoveredInteractableMaterial
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Material* (UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::*)(::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractable*)>(&UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::GetHoveredInteractableMaterial)> {
  static const MethodInfo* get() {
    static auto* interactable = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "IXRHoverInteractable")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor*), "GetHoveredInteractableMaterial", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactable});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::get_isHoverRecycleAllowed
// Il2CppName: get_isHoverRecycleAllowed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::get_isHoverRecycleAllowed)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor*), "get_isHoverRecycleAllowed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::ShouldDrawHoverMesh
// Il2CppName: ShouldDrawHoverMesh
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::*)(::UnityEngine::MeshFilter*, ::UnityEngine::Renderer*, ::UnityEngine::Camera*)>(&UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::ShouldDrawHoverMesh)> {
  static const MethodInfo* get() {
    static auto* meshFilter = &::il2cpp_utils::GetClassFromName("UnityEngine", "MeshFilter")->byval_arg;
    static auto* meshRenderer = &::il2cpp_utils::GetClassFromName("UnityEngine", "Renderer")->byval_arg;
    static auto* mainCamera = &::il2cpp_utils::GetClassFromName("UnityEngine", "Camera")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor*), "ShouldDrawHoverMesh", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{meshFilter, meshRenderer, mainCamera});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::OnInteractableRegistered
// Il2CppName: OnInteractableRegistered
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::*)(::UnityEngine::XR::Interaction::Toolkit::InteractableRegisteredEventArgs*)>(&UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::OnInteractableRegistered)> {
  static const MethodInfo* get() {
    static auto* args = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "InteractableRegisteredEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor*), "OnInteractableRegistered", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{args});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::OnInteractableUnregistered
// Il2CppName: OnInteractableUnregistered
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::*)(::UnityEngine::XR::Interaction::Toolkit::InteractableUnregisteredEventArgs*)>(&UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::OnInteractableUnregistered)> {
  static const MethodInfo* get() {
    static auto* args = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "InteractableUnregisteredEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor*), "OnInteractableUnregistered", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{args});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::OnContactAdded
// Il2CppName: OnContactAdded
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::*)(::UnityEngine::XR::Interaction::Toolkit::IXRInteractable*)>(&UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::OnContactAdded)> {
  static const MethodInfo* get() {
    static auto* interactable = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "IXRInteractable")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor*), "OnContactAdded", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactable});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::OnContactRemoved
// Il2CppName: OnContactRemoved
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::*)(::UnityEngine::XR::Interaction::Toolkit::IXRInteractable*)>(&UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::OnContactRemoved)> {
  static const MethodInfo* get() {
    static auto* interactable = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "IXRInteractable")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor*), "OnContactRemoved", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactable});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::ResetCollidersAndValidTargets
// Il2CppName: ResetCollidersAndValidTargets
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::ResetCollidersAndValidTargets)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor*), "ResetCollidersAndValidTargets", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::Awake
// Il2CppName: Awake
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::Awake)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor*), "Awake", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::OnEnable
// Il2CppName: OnEnable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::OnEnable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor*), "OnEnable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::OnDisable
// Il2CppName: OnDisable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::OnDisable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor*), "OnDisable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::ProcessInteractor
// Il2CppName: ProcessInteractor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::*)(::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::UpdatePhase)>(&UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::ProcessInteractor)> {
  static const MethodInfo* get() {
    static auto* updatePhase = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "XRInteractionUpdateOrder/UpdatePhase")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor*), "ProcessInteractor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{updatePhase});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::OnHoverEntering
// Il2CppName: OnHoverEntering
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::*)(::UnityEngine::XR::Interaction::Toolkit::HoverEnterEventArgs*)>(&UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::OnHoverEntering)> {
  static const MethodInfo* get() {
    static auto* args = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "HoverEnterEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor*), "OnHoverEntering", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{args});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::OnHoverExiting
// Il2CppName: OnHoverExiting
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::*)(::UnityEngine::XR::Interaction::Toolkit::HoverExitEventArgs*)>(&UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::OnHoverExiting)> {
  static const MethodInfo* get() {
    static auto* args = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "HoverExitEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor*), "OnHoverExiting", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{args});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::OnSelectExiting
// Il2CppName: OnSelectExiting
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::*)(::UnityEngine::XR::Interaction::Toolkit::SelectExitEventArgs*)>(&UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::OnSelectExiting)> {
  static const MethodInfo* get() {
    static auto* args = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "SelectExitEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor*), "OnSelectExiting", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{args});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::GetValidTargets
// Il2CppName: GetValidTargets
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::*)(::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::IXRInteractable*>*)>(&UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::GetValidTargets)> {
  static const MethodInfo* get() {
    static auto* targets = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "IXRInteractable")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor*), "GetValidTargets", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{targets});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::get_isHoverActive
// Il2CppName: get_isHoverActive
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::get_isHoverActive)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor*), "get_isHoverActive", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::get_isSelectActive
// Il2CppName: get_isSelectActive
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::get_isSelectActive)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor*), "get_isSelectActive", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::get_selectedInteractableMovementTypeOverride
// Il2CppName: get_selectedInteractableMovementTypeOverride
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Nullable_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::MovementType> (UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::get_selectedInteractableMovementTypeOverride)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor*), "get_selectedInteractableMovementTypeOverride", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::CanHover
// Il2CppName: CanHover
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::*)(::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractable*)>(&UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::CanHover)> {
  static const MethodInfo* get() {
    static auto* interactable = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "IXRHoverInteractable")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor*), "CanHover", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactable});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::CanSelect
// Il2CppName: CanSelect
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::*)(::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable*)>(&UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::CanSelect)> {
  static const MethodInfo* get() {
    static auto* interactable = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "IXRSelectInteractable")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor*), "CanSelect", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactable});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::OnRegistered
// Il2CppName: OnRegistered
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::*)(::UnityEngine::XR::Interaction::Toolkit::InteractorRegisteredEventArgs*)>(&UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::OnRegistered)> {
  static const MethodInfo* get() {
    static auto* args = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "InteractorRegisteredEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor*), "OnRegistered", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{args});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::OnUnregistered
// Il2CppName: OnUnregistered
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::*)(::UnityEngine::XR::Interaction::Toolkit::InteractorUnregisteredEventArgs*)>(&UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::OnUnregistered)> {
  static const MethodInfo* get() {
    static auto* args = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "InteractorUnregisteredEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor*), "OnUnregistered", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{args});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::CanHover
// Il2CppName: CanHover
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::*)(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*)>(&UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::CanHover)> {
  static const MethodInfo* get() {
    static auto* interactable = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "XRBaseInteractable")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor*), "CanHover", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactable});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::CanSelect
// Il2CppName: CanSelect
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::*)(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*)>(&UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::CanSelect)> {
  static const MethodInfo* get() {
    static auto* interactable = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "XRBaseInteractable")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor*), "CanSelect", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactable});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
