// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Enum
#include "System/Enum.hpp"
// Completed includes
// Type namespace: UnityEngine.XR.Interaction.Toolkit
namespace UnityEngine::XR::Interaction::Toolkit {
  // Forward declaring type: EaseState
  struct EaseState;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::XR::Interaction::Toolkit::EaseState, "UnityEngine.XR.Interaction.Toolkit", "EaseState");
// Type namespace: UnityEngine.XR.Interaction.Toolkit
namespace UnityEngine::XR::Interaction::Toolkit {
  // Size: 0x4
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.XR.Interaction.Toolkit.EaseState
  // [TokenAttribute] Offset: FFFFFFFF
  struct EaseState/*, public ::System::Enum*/ {
    public:
    public:
    // public System.Int32 value__
    // Size: 0x4
    // Offset: 0x0
    int value;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Creating value type constructor for type: EaseState
    constexpr EaseState(int value_ = {}) noexcept : value{value_} {}
    // Creating interface conversion operator: operator ::System::Enum
    operator ::System::Enum() noexcept {
      return *reinterpret_cast<::System::Enum*>(this);
    }
    // Creating conversion operator: operator int
    constexpr operator int() const noexcept {
      return value;
    }
    // static field const value: static public UnityEngine.XR.Interaction.Toolkit.EaseState NotEasing
    static constexpr const int NotEasing = 0;
    // Get static field: static public UnityEngine.XR.Interaction.Toolkit.EaseState NotEasing
    static ::UnityEngine::XR::Interaction::Toolkit::EaseState _get_NotEasing();
    // Set static field: static public UnityEngine.XR.Interaction.Toolkit.EaseState NotEasing
    static void _set_NotEasing(::UnityEngine::XR::Interaction::Toolkit::EaseState value);
    // static field const value: static public UnityEngine.XR.Interaction.Toolkit.EaseState EasingIn
    static constexpr const int EasingIn = 1;
    // Get static field: static public UnityEngine.XR.Interaction.Toolkit.EaseState EasingIn
    static ::UnityEngine::XR::Interaction::Toolkit::EaseState _get_EasingIn();
    // Set static field: static public UnityEngine.XR.Interaction.Toolkit.EaseState EasingIn
    static void _set_EasingIn(::UnityEngine::XR::Interaction::Toolkit::EaseState value);
    // static field const value: static public UnityEngine.XR.Interaction.Toolkit.EaseState EasingInHoldBeforeEasingOut
    static constexpr const int EasingInHoldBeforeEasingOut = 2;
    // Get static field: static public UnityEngine.XR.Interaction.Toolkit.EaseState EasingInHoldBeforeEasingOut
    static ::UnityEngine::XR::Interaction::Toolkit::EaseState _get_EasingInHoldBeforeEasingOut();
    // Set static field: static public UnityEngine.XR.Interaction.Toolkit.EaseState EasingInHoldBeforeEasingOut
    static void _set_EasingInHoldBeforeEasingOut(::UnityEngine::XR::Interaction::Toolkit::EaseState value);
    // static field const value: static public UnityEngine.XR.Interaction.Toolkit.EaseState EasingOutDelay
    static constexpr const int EasingOutDelay = 3;
    // Get static field: static public UnityEngine.XR.Interaction.Toolkit.EaseState EasingOutDelay
    static ::UnityEngine::XR::Interaction::Toolkit::EaseState _get_EasingOutDelay();
    // Set static field: static public UnityEngine.XR.Interaction.Toolkit.EaseState EasingOutDelay
    static void _set_EasingOutDelay(::UnityEngine::XR::Interaction::Toolkit::EaseState value);
    // static field const value: static public UnityEngine.XR.Interaction.Toolkit.EaseState EasingOut
    static constexpr const int EasingOut = 4;
    // Get static field: static public UnityEngine.XR.Interaction.Toolkit.EaseState EasingOut
    static ::UnityEngine::XR::Interaction::Toolkit::EaseState _get_EasingOut();
    // Set static field: static public UnityEngine.XR.Interaction.Toolkit.EaseState EasingOut
    static void _set_EasingOut(::UnityEngine::XR::Interaction::Toolkit::EaseState value);
    // Get instance field reference: public System.Int32 value__
    [[deprecated("Use field access instead!")]] int& dyn_value__();
  }; // UnityEngine.XR.Interaction.Toolkit.EaseState
  #pragma pack(pop)
  static check_size<sizeof(EaseState), 0 + sizeof(int)> __UnityEngine_XR_Interaction_Toolkit_EaseStateSizeCheck;
  static_assert(sizeof(EaseState) == 0x4);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
