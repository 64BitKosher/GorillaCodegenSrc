// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.ITunnelingVignetteProvider
#include "UnityEngine/XR/Interaction/Toolkit/ITunnelingVignetteProvider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::XR::Interaction::Toolkit
namespace UnityEngine::XR::Interaction::Toolkit {
  // Forward declaring type: LocomotionProvider
  class LocomotionProvider;
  // Forward declaring type: VignetteParameters
  class VignetteParameters;
}
// Completed forward declares
// Type namespace: UnityEngine.XR.Interaction.Toolkit
namespace UnityEngine::XR::Interaction::Toolkit {
  // Forward declaring type: LocomotionVignetteProvider
  class LocomotionVignetteProvider;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::XR::Interaction::Toolkit::LocomotionVignetteProvider);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::XR::Interaction::Toolkit::LocomotionVignetteProvider*, "UnityEngine.XR.Interaction.Toolkit", "LocomotionVignetteProvider");
// Type namespace: UnityEngine.XR.Interaction.Toolkit
namespace UnityEngine::XR::Interaction::Toolkit {
  // Size: 0x28
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.XR.Interaction.Toolkit.LocomotionVignetteProvider
  // [TokenAttribute] Offset: FFFFFFFF
  class LocomotionVignetteProvider : public ::Il2CppObject/*, public ::UnityEngine::XR::Interaction::Toolkit::ITunnelingVignetteProvider*/ {
    public:
    public:
    // private UnityEngine.XR.Interaction.Toolkit.LocomotionProvider m_LocomotionProvider
    // Size: 0x8
    // Offset: 0x10
    ::UnityEngine::XR::Interaction::Toolkit::LocomotionProvider* m_LocomotionProvider;
    // Field size check
    static_assert(sizeof(::UnityEngine::XR::Interaction::Toolkit::LocomotionProvider*) == 0x8);
    // private System.Boolean m_Enabled
    // Size: 0x1
    // Offset: 0x18
    bool m_Enabled;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean m_OverrideDefaultParameters
    // Size: 0x1
    // Offset: 0x19
    bool m_OverrideDefaultParameters;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: m_OverrideDefaultParameters and: m_OverrideParameters
    char __padding2[0x6] = {};
    // private UnityEngine.XR.Interaction.Toolkit.VignetteParameters m_OverrideParameters
    // Size: 0x8
    // Offset: 0x20
    ::UnityEngine::XR::Interaction::Toolkit::VignetteParameters* m_OverrideParameters;
    // Field size check
    static_assert(sizeof(::UnityEngine::XR::Interaction::Toolkit::VignetteParameters*) == 0x8);
    public:
    // Creating interface conversion operator: operator ::UnityEngine::XR::Interaction::Toolkit::ITunnelingVignetteProvider
    operator ::UnityEngine::XR::Interaction::Toolkit::ITunnelingVignetteProvider() noexcept {
      return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::ITunnelingVignetteProvider*>(this);
    }
    // Get instance field reference: private UnityEngine.XR.Interaction.Toolkit.LocomotionProvider m_LocomotionProvider
    [[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::LocomotionProvider*& dyn_m_LocomotionProvider();
    // Get instance field reference: private System.Boolean m_Enabled
    [[deprecated("Use field access instead!")]] bool& dyn_m_Enabled();
    // Get instance field reference: private System.Boolean m_OverrideDefaultParameters
    [[deprecated("Use field access instead!")]] bool& dyn_m_OverrideDefaultParameters();
    // Get instance field reference: private UnityEngine.XR.Interaction.Toolkit.VignetteParameters m_OverrideParameters
    [[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::VignetteParameters*& dyn_m_OverrideParameters();
    // public UnityEngine.XR.Interaction.Toolkit.LocomotionProvider get_locomotionProvider()
    // Offset: 0x541181C
    ::UnityEngine::XR::Interaction::Toolkit::LocomotionProvider* get_locomotionProvider();
    // public System.Void set_locomotionProvider(UnityEngine.XR.Interaction.Toolkit.LocomotionProvider value)
    // Offset: 0x5411824
    void set_locomotionProvider(::UnityEngine::XR::Interaction::Toolkit::LocomotionProvider* value);
    // public System.Boolean get_enabled()
    // Offset: 0x541182C
    bool get_enabled();
    // public System.Void set_enabled(System.Boolean value)
    // Offset: 0x5411834
    void set_enabled(bool value);
    // public System.Boolean get_overrideDefaultParameters()
    // Offset: 0x5411840
    bool get_overrideDefaultParameters();
    // public System.Void set_overrideDefaultParameters(System.Boolean value)
    // Offset: 0x5411848
    void set_overrideDefaultParameters(bool value);
    // public UnityEngine.XR.Interaction.Toolkit.VignetteParameters get_overrideParameters()
    // Offset: 0x5411854
    ::UnityEngine::XR::Interaction::Toolkit::VignetteParameters* get_overrideParameters();
    // public System.Void set_overrideParameters(UnityEngine.XR.Interaction.Toolkit.VignetteParameters value)
    // Offset: 0x541185C
    void set_overrideParameters(::UnityEngine::XR::Interaction::Toolkit::VignetteParameters* value);
    // public UnityEngine.XR.Interaction.Toolkit.VignetteParameters get_vignetteParameters()
    // Offset: 0x5411864
    ::UnityEngine::XR::Interaction::Toolkit::VignetteParameters* get_vignetteParameters();
    // public System.Void .ctor()
    // Offset: 0x541187C
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static LocomotionVignetteProvider* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::LocomotionVignetteProvider::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<LocomotionVignetteProvider*, creationType>()));
    }
  }; // UnityEngine.XR.Interaction.Toolkit.LocomotionVignetteProvider
  #pragma pack(pop)
  static check_size<sizeof(LocomotionVignetteProvider), 32 + sizeof(::UnityEngine::XR::Interaction::Toolkit::VignetteParameters*)> __UnityEngine_XR_Interaction_Toolkit_LocomotionVignetteProviderSizeCheck;
  static_assert(sizeof(LocomotionVignetteProvider) == 0x28);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::LocomotionVignetteProvider::get_locomotionProvider
// Il2CppName: get_locomotionProvider
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::XR::Interaction::Toolkit::LocomotionProvider* (UnityEngine::XR::Interaction::Toolkit::LocomotionVignetteProvider::*)()>(&UnityEngine::XR::Interaction::Toolkit::LocomotionVignetteProvider::get_locomotionProvider)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::LocomotionVignetteProvider*), "get_locomotionProvider", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::LocomotionVignetteProvider::set_locomotionProvider
// Il2CppName: set_locomotionProvider
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::LocomotionVignetteProvider::*)(::UnityEngine::XR::Interaction::Toolkit::LocomotionProvider*)>(&UnityEngine::XR::Interaction::Toolkit::LocomotionVignetteProvider::set_locomotionProvider)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "LocomotionProvider")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::LocomotionVignetteProvider*), "set_locomotionProvider", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::LocomotionVignetteProvider::get_enabled
// Il2CppName: get_enabled
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::XR::Interaction::Toolkit::LocomotionVignetteProvider::*)()>(&UnityEngine::XR::Interaction::Toolkit::LocomotionVignetteProvider::get_enabled)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::LocomotionVignetteProvider*), "get_enabled", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::LocomotionVignetteProvider::set_enabled
// Il2CppName: set_enabled
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::LocomotionVignetteProvider::*)(bool)>(&UnityEngine::XR::Interaction::Toolkit::LocomotionVignetteProvider::set_enabled)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::LocomotionVignetteProvider*), "set_enabled", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::LocomotionVignetteProvider::get_overrideDefaultParameters
// Il2CppName: get_overrideDefaultParameters
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::XR::Interaction::Toolkit::LocomotionVignetteProvider::*)()>(&UnityEngine::XR::Interaction::Toolkit::LocomotionVignetteProvider::get_overrideDefaultParameters)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::LocomotionVignetteProvider*), "get_overrideDefaultParameters", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::LocomotionVignetteProvider::set_overrideDefaultParameters
// Il2CppName: set_overrideDefaultParameters
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::LocomotionVignetteProvider::*)(bool)>(&UnityEngine::XR::Interaction::Toolkit::LocomotionVignetteProvider::set_overrideDefaultParameters)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::LocomotionVignetteProvider*), "set_overrideDefaultParameters", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::LocomotionVignetteProvider::get_overrideParameters
// Il2CppName: get_overrideParameters
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::XR::Interaction::Toolkit::VignetteParameters* (UnityEngine::XR::Interaction::Toolkit::LocomotionVignetteProvider::*)()>(&UnityEngine::XR::Interaction::Toolkit::LocomotionVignetteProvider::get_overrideParameters)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::LocomotionVignetteProvider*), "get_overrideParameters", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::LocomotionVignetteProvider::set_overrideParameters
// Il2CppName: set_overrideParameters
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::LocomotionVignetteProvider::*)(::UnityEngine::XR::Interaction::Toolkit::VignetteParameters*)>(&UnityEngine::XR::Interaction::Toolkit::LocomotionVignetteProvider::set_overrideParameters)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "VignetteParameters")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::LocomotionVignetteProvider*), "set_overrideParameters", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::LocomotionVignetteProvider::get_vignetteParameters
// Il2CppName: get_vignetteParameters
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::XR::Interaction::Toolkit::VignetteParameters* (UnityEngine::XR::Interaction::Toolkit::LocomotionVignetteProvider::*)()>(&UnityEngine::XR::Interaction::Toolkit::LocomotionVignetteProvider::get_vignetteParameters)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::LocomotionVignetteProvider*), "get_vignetteParameters", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::LocomotionVignetteProvider::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
