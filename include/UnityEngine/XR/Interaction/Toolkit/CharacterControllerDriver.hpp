// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::XR::Interaction::Toolkit
namespace UnityEngine::XR::Interaction::Toolkit {
  // Forward declaring type: LocomotionProvider
  class LocomotionProvider;
  // Forward declaring type: LocomotionSystem
  class LocomotionSystem;
  // Forward declaring type: XRRig
  class XRRig;
}
// Forward declaring namespace: Unity::XR::CoreUtils
namespace Unity::XR::CoreUtils {
  // Forward declaring type: XROrigin
  class XROrigin;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: CharacterController
  class CharacterController;
}
// Completed forward declares
// Type namespace: UnityEngine.XR.Interaction.Toolkit
namespace UnityEngine::XR::Interaction::Toolkit {
  // Forward declaring type: CharacterControllerDriver
  class CharacterControllerDriver;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::XR::Interaction::Toolkit::CharacterControllerDriver);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::XR::Interaction::Toolkit::CharacterControllerDriver*, "UnityEngine.XR.Interaction.Toolkit", "CharacterControllerDriver");
// Type namespace: UnityEngine.XR.Interaction.Toolkit
namespace UnityEngine::XR::Interaction::Toolkit {
  // Size: 0x40
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.XR.Interaction.Toolkit.CharacterControllerDriver
  // [TokenAttribute] Offset: FFFFFFFF
  // [HelpURLAttribute] Offset: FFFFFFFF
  // [AddComponentMenu] Offset: FFFFFFFF
  class CharacterControllerDriver : public ::UnityEngine::MonoBehaviour {
    public:
    public:
    // private UnityEngine.XR.Interaction.Toolkit.LocomotionProvider m_LocomotionProvider
    // Size: 0x8
    // Offset: 0x20
    ::UnityEngine::XR::Interaction::Toolkit::LocomotionProvider* m_LocomotionProvider;
    // Field size check
    static_assert(sizeof(::UnityEngine::XR::Interaction::Toolkit::LocomotionProvider*) == 0x8);
    // private System.Single m_MinHeight
    // Size: 0x4
    // Offset: 0x28
    float m_MinHeight;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Single m_MaxHeight
    // Size: 0x4
    // Offset: 0x2C
    float m_MaxHeight;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private Unity.XR.CoreUtils.XROrigin m_XROrigin
    // Size: 0x8
    // Offset: 0x30
    ::Unity::XR::CoreUtils::XROrigin* m_XROrigin;
    // Field size check
    static_assert(sizeof(::Unity::XR::CoreUtils::XROrigin*) == 0x8);
    // private UnityEngine.CharacterController m_CharacterController
    // Size: 0x8
    // Offset: 0x38
    ::UnityEngine::CharacterController* m_CharacterController;
    // Field size check
    static_assert(sizeof(::UnityEngine::CharacterController*) == 0x8);
    public:
    // Get instance field reference: private UnityEngine.XR.Interaction.Toolkit.LocomotionProvider m_LocomotionProvider
    [[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::LocomotionProvider*& dyn_m_LocomotionProvider();
    // Get instance field reference: private System.Single m_MinHeight
    [[deprecated("Use field access instead!")]] float& dyn_m_MinHeight();
    // Get instance field reference: private System.Single m_MaxHeight
    [[deprecated("Use field access instead!")]] float& dyn_m_MaxHeight();
    // Get instance field reference: private Unity.XR.CoreUtils.XROrigin m_XROrigin
    [[deprecated("Use field access instead!")]] ::Unity::XR::CoreUtils::XROrigin*& dyn_m_XROrigin();
    // Get instance field reference: private UnityEngine.CharacterController m_CharacterController
    [[deprecated("Use field access instead!")]] ::UnityEngine::CharacterController*& dyn_m_CharacterController();
    // public UnityEngine.XR.Interaction.Toolkit.LocomotionProvider get_locomotionProvider()
    // Offset: 0x54096D0
    ::UnityEngine::XR::Interaction::Toolkit::LocomotionProvider* get_locomotionProvider();
    // public System.Void set_locomotionProvider(UnityEngine.XR.Interaction.Toolkit.LocomotionProvider value)
    // Offset: 0x54096D8
    void set_locomotionProvider(::UnityEngine::XR::Interaction::Toolkit::LocomotionProvider* value);
    // public System.Single get_minHeight()
    // Offset: 0x5409B88
    float get_minHeight();
    // public System.Void set_minHeight(System.Single value)
    // Offset: 0x5409B90
    void set_minHeight(float value);
    // public System.Single get_maxHeight()
    // Offset: 0x5409B98
    float get_maxHeight();
    // public System.Void set_maxHeight(System.Single value)
    // Offset: 0x5409BA0
    void set_maxHeight(float value);
    // protected Unity.XR.CoreUtils.XROrigin get_xrOrigin()
    // Offset: 0x5409BA8
    ::Unity::XR::CoreUtils::XROrigin* get_xrOrigin();
    // protected UnityEngine.CharacterController get_characterController()
    // Offset: 0x5409BB0
    ::UnityEngine::CharacterController* get_characterController();
    // protected System.Void Awake()
    // Offset: 0x5409BB8
    void Awake();
    // protected System.Void OnEnable()
    // Offset: 0x5409D28
    void OnEnable();
    // protected System.Void OnDisable()
    // Offset: 0x5409D30
    void OnDisable();
    // protected System.Void Start()
    // Offset: 0x5409D38
    void Start();
    // protected System.Void UpdateCharacterController()
    // Offset: 0x5409D58
    void UpdateCharacterController();
    // private System.Void Subscribe(UnityEngine.XR.Interaction.Toolkit.LocomotionProvider provider)
    // Offset: 0x5409844
    void Subscribe(::UnityEngine::XR::Interaction::Toolkit::LocomotionProvider* provider);
    // private System.Void Unsubscribe(UnityEngine.XR.Interaction.Toolkit.LocomotionProvider provider)
    // Offset: 0x5409734
    void Unsubscribe(::UnityEngine::XR::Interaction::Toolkit::LocomotionProvider* provider);
    // private System.Void SetupCharacterController()
    // Offset: 0x5409954
    void SetupCharacterController();
    // private System.Void OnBeginLocomotion(UnityEngine.XR.Interaction.Toolkit.LocomotionSystem system)
    // Offset: 0x540A154
    void OnBeginLocomotion(::UnityEngine::XR::Interaction::Toolkit::LocomotionSystem* system);
    // private System.Void OnEndLocomotion(UnityEngine.XR.Interaction.Toolkit.LocomotionSystem system)
    // Offset: 0x540A160
    void OnEndLocomotion(::UnityEngine::XR::Interaction::Toolkit::LocomotionSystem* system);
    // protected UnityEngine.XR.Interaction.Toolkit.XRRig get_xrRig()
    // Offset: 0x540A16C
    ::UnityEngine::XR::Interaction::Toolkit::XRRig* get_xrRig();
    // public System.Void .ctor()
    // Offset: 0x540A1E8
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static CharacterControllerDriver* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::CharacterControllerDriver::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<CharacterControllerDriver*, creationType>()));
    }
  }; // UnityEngine.XR.Interaction.Toolkit.CharacterControllerDriver
  #pragma pack(pop)
  static check_size<sizeof(CharacterControllerDriver), 56 + sizeof(::UnityEngine::CharacterController*)> __UnityEngine_XR_Interaction_Toolkit_CharacterControllerDriverSizeCheck;
  static_assert(sizeof(CharacterControllerDriver) == 0x40);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::CharacterControllerDriver::get_locomotionProvider
// Il2CppName: get_locomotionProvider
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::XR::Interaction::Toolkit::LocomotionProvider* (UnityEngine::XR::Interaction::Toolkit::CharacterControllerDriver::*)()>(&UnityEngine::XR::Interaction::Toolkit::CharacterControllerDriver::get_locomotionProvider)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::CharacterControllerDriver*), "get_locomotionProvider", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::CharacterControllerDriver::set_locomotionProvider
// Il2CppName: set_locomotionProvider
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::CharacterControllerDriver::*)(::UnityEngine::XR::Interaction::Toolkit::LocomotionProvider*)>(&UnityEngine::XR::Interaction::Toolkit::CharacterControllerDriver::set_locomotionProvider)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "LocomotionProvider")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::CharacterControllerDriver*), "set_locomotionProvider", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::CharacterControllerDriver::get_minHeight
// Il2CppName: get_minHeight
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::XR::Interaction::Toolkit::CharacterControllerDriver::*)()>(&UnityEngine::XR::Interaction::Toolkit::CharacterControllerDriver::get_minHeight)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::CharacterControllerDriver*), "get_minHeight", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::CharacterControllerDriver::set_minHeight
// Il2CppName: set_minHeight
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::CharacterControllerDriver::*)(float)>(&UnityEngine::XR::Interaction::Toolkit::CharacterControllerDriver::set_minHeight)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::CharacterControllerDriver*), "set_minHeight", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::CharacterControllerDriver::get_maxHeight
// Il2CppName: get_maxHeight
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::XR::Interaction::Toolkit::CharacterControllerDriver::*)()>(&UnityEngine::XR::Interaction::Toolkit::CharacterControllerDriver::get_maxHeight)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::CharacterControllerDriver*), "get_maxHeight", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::CharacterControllerDriver::set_maxHeight
// Il2CppName: set_maxHeight
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::CharacterControllerDriver::*)(float)>(&UnityEngine::XR::Interaction::Toolkit::CharacterControllerDriver::set_maxHeight)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::CharacterControllerDriver*), "set_maxHeight", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::CharacterControllerDriver::get_xrOrigin
// Il2CppName: get_xrOrigin
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Unity::XR::CoreUtils::XROrigin* (UnityEngine::XR::Interaction::Toolkit::CharacterControllerDriver::*)()>(&UnityEngine::XR::Interaction::Toolkit::CharacterControllerDriver::get_xrOrigin)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::CharacterControllerDriver*), "get_xrOrigin", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::CharacterControllerDriver::get_characterController
// Il2CppName: get_characterController
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::CharacterController* (UnityEngine::XR::Interaction::Toolkit::CharacterControllerDriver::*)()>(&UnityEngine::XR::Interaction::Toolkit::CharacterControllerDriver::get_characterController)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::CharacterControllerDriver*), "get_characterController", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::CharacterControllerDriver::Awake
// Il2CppName: Awake
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::CharacterControllerDriver::*)()>(&UnityEngine::XR::Interaction::Toolkit::CharacterControllerDriver::Awake)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::CharacterControllerDriver*), "Awake", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::CharacterControllerDriver::OnEnable
// Il2CppName: OnEnable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::CharacterControllerDriver::*)()>(&UnityEngine::XR::Interaction::Toolkit::CharacterControllerDriver::OnEnable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::CharacterControllerDriver*), "OnEnable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::CharacterControllerDriver::OnDisable
// Il2CppName: OnDisable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::CharacterControllerDriver::*)()>(&UnityEngine::XR::Interaction::Toolkit::CharacterControllerDriver::OnDisable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::CharacterControllerDriver*), "OnDisable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::CharacterControllerDriver::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::CharacterControllerDriver::*)()>(&UnityEngine::XR::Interaction::Toolkit::CharacterControllerDriver::Start)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::CharacterControllerDriver*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::CharacterControllerDriver::UpdateCharacterController
// Il2CppName: UpdateCharacterController
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::CharacterControllerDriver::*)()>(&UnityEngine::XR::Interaction::Toolkit::CharacterControllerDriver::UpdateCharacterController)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::CharacterControllerDriver*), "UpdateCharacterController", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::CharacterControllerDriver::Subscribe
// Il2CppName: Subscribe
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::CharacterControllerDriver::*)(::UnityEngine::XR::Interaction::Toolkit::LocomotionProvider*)>(&UnityEngine::XR::Interaction::Toolkit::CharacterControllerDriver::Subscribe)> {
  static const MethodInfo* get() {
    static auto* provider = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "LocomotionProvider")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::CharacterControllerDriver*), "Subscribe", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{provider});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::CharacterControllerDriver::Unsubscribe
// Il2CppName: Unsubscribe
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::CharacterControllerDriver::*)(::UnityEngine::XR::Interaction::Toolkit::LocomotionProvider*)>(&UnityEngine::XR::Interaction::Toolkit::CharacterControllerDriver::Unsubscribe)> {
  static const MethodInfo* get() {
    static auto* provider = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "LocomotionProvider")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::CharacterControllerDriver*), "Unsubscribe", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{provider});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::CharacterControllerDriver::SetupCharacterController
// Il2CppName: SetupCharacterController
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::CharacterControllerDriver::*)()>(&UnityEngine::XR::Interaction::Toolkit::CharacterControllerDriver::SetupCharacterController)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::CharacterControllerDriver*), "SetupCharacterController", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::CharacterControllerDriver::OnBeginLocomotion
// Il2CppName: OnBeginLocomotion
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::CharacterControllerDriver::*)(::UnityEngine::XR::Interaction::Toolkit::LocomotionSystem*)>(&UnityEngine::XR::Interaction::Toolkit::CharacterControllerDriver::OnBeginLocomotion)> {
  static const MethodInfo* get() {
    static auto* system = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "LocomotionSystem")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::CharacterControllerDriver*), "OnBeginLocomotion", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{system});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::CharacterControllerDriver::OnEndLocomotion
// Il2CppName: OnEndLocomotion
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::CharacterControllerDriver::*)(::UnityEngine::XR::Interaction::Toolkit::LocomotionSystem*)>(&UnityEngine::XR::Interaction::Toolkit::CharacterControllerDriver::OnEndLocomotion)> {
  static const MethodInfo* get() {
    static auto* system = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "LocomotionSystem")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::CharacterControllerDriver*), "OnEndLocomotion", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{system});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::CharacterControllerDriver::get_xrRig
// Il2CppName: get_xrRig
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::XR::Interaction::Toolkit::XRRig* (UnityEngine::XR::Interaction::Toolkit::CharacterControllerDriver::*)()>(&UnityEngine::XR::Interaction::Toolkit::CharacterControllerDriver::get_xrRig)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::CharacterControllerDriver*), "get_xrRig", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::CharacterControllerDriver::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
