// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Unity.XR.CoreUtils.XROrigin
#include "Unity/XR/CoreUtils/XROrigin.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: GameObject
  class GameObject;
  // Skipping declaration: Vector3 because it is already included!
}
// Forward declaring namespace: UnityEngine::XR
namespace UnityEngine::XR {
  // Skipping declaration: TrackingOriginModeFlags because it is already included!
}
// Completed forward declares
// Type namespace: UnityEngine.XR.Interaction.Toolkit
namespace UnityEngine::XR::Interaction::Toolkit {
  // Forward declaring type: XRRig
  class XRRig;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::XR::Interaction::Toolkit::XRRig);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::XR::Interaction::Toolkit::XRRig*, "UnityEngine.XR.Interaction.Toolkit", "XRRig");
// Type namespace: UnityEngine.XR.Interaction.Toolkit
namespace UnityEngine::XR::Interaction::Toolkit {
  // Size: 0x60
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.XR.Interaction.Toolkit.XRRig
  // [TokenAttribute] Offset: FFFFFFFF
  // [DisallowMultipleComponent] Offset: FFFFFFFF
  // [HelpURLAttribute] Offset: FFFFFFFF
  // [AddComponentMenu] Offset: FFFFFFFF
  // [ObsoleteAttribute] Offset: FFFFFFFF
  class XRRig : public ::Unity::XR::CoreUtils::XROrigin {
    public:
    // Writing base type padding for base size: 0x56 to desired offset: 0x58
    char ___base_padding[0x2] = {};
    public:
    // private UnityEngine.GameObject m_CameraGameObject
    // Size: 0x8
    // Offset: 0x58
    ::UnityEngine::GameObject* m_CameraGameObject;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    public:
    // Get instance field reference: private UnityEngine.GameObject m_CameraGameObject
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_m_CameraGameObject();
    // protected System.Void Awake()
    // Offset: 0x54148E4
    void Awake();
    // public UnityEngine.GameObject get_rig()
    // Offset: 0x5414A08
    ::UnityEngine::GameObject* get_rig();
    // public System.Void set_rig(UnityEngine.GameObject value)
    // Offset: 0x5414A10
    void set_rig(::UnityEngine::GameObject* value);
    // public UnityEngine.GameObject get_cameraGameObject()
    // Offset: 0x5414A18
    ::UnityEngine::GameObject* get_cameraGameObject();
    // public System.Void set_cameraGameObject(UnityEngine.GameObject value)
    // Offset: 0x5414A20
    void set_cameraGameObject(::UnityEngine::GameObject* value);
    // public UnityEngine.GameObject get_cameraFloorOffsetObject()
    // Offset: 0x5414AD8
    ::UnityEngine::GameObject* get_cameraFloorOffsetObject();
    // public System.Void set_cameraFloorOffsetObject(UnityEngine.GameObject value)
    // Offset: 0x5414AE0
    void set_cameraFloorOffsetObject(::UnityEngine::GameObject* value);
    // public Unity.XR.CoreUtils.XROrigin/TrackingOriginMode get_requestedTrackingOriginMode()
    // Offset: 0x5414AE8
    ::Unity::XR::CoreUtils::XROrigin::TrackingOriginMode get_requestedTrackingOriginMode();
    // public System.Void set_requestedTrackingOriginMode(Unity.XR.CoreUtils.XROrigin/TrackingOriginMode value)
    // Offset: 0x5414AF0
    void set_requestedTrackingOriginMode(::Unity::XR::CoreUtils::XROrigin::TrackingOriginMode value);
    // public System.Single get_cameraYOffset()
    // Offset: 0x5414AF8
    float get_cameraYOffset();
    // public System.Void set_cameraYOffset(System.Single value)
    // Offset: 0x5414B00
    void set_cameraYOffset(float value);
    // public UnityEngine.XR.TrackingOriginModeFlags get_currentTrackingOriginMode()
    // Offset: 0x5414B08
    ::UnityEngine::XR::TrackingOriginModeFlags get_currentTrackingOriginMode();
    // public UnityEngine.Vector3 get_rigInCameraSpacePos()
    // Offset: 0x5414B10
    ::UnityEngine::Vector3 get_rigInCameraSpacePos();
    // public UnityEngine.Vector3 get_cameraInRigSpacePos()
    // Offset: 0x5414B18
    ::UnityEngine::Vector3 get_cameraInRigSpacePos();
    // public System.Single get_cameraInRigSpaceHeight()
    // Offset: 0x5414B20
    float get_cameraInRigSpaceHeight();
    // public System.Boolean RotateAroundCameraUsingRigUp(System.Single angleDegrees)
    // Offset: 0x5414B28
    bool RotateAroundCameraUsingRigUp(float angleDegrees);
    // public System.Boolean MatchRigUp(UnityEngine.Vector3 destinationUp)
    // Offset: 0x5414B30
    bool MatchRigUp(::UnityEngine::Vector3 destinationUp);
    // public System.Boolean MatchRigUpCameraForward(UnityEngine.Vector3 destinationUp, UnityEngine.Vector3 destinationForward)
    // Offset: 0x5414B38
    bool MatchRigUpCameraForward(::UnityEngine::Vector3 destinationUp, ::UnityEngine::Vector3 destinationForward);
    // public System.Boolean MatchRigUpRigForward(UnityEngine.Vector3 destinationUp, UnityEngine.Vector3 destinationForward)
    // Offset: 0x5414B40
    bool MatchRigUpRigForward(::UnityEngine::Vector3 destinationUp, ::UnityEngine::Vector3 destinationForward);
    // public System.Void .ctor()
    // Offset: 0x5414B48
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static XRRig* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRig::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<XRRig*, creationType>()));
    }
  }; // UnityEngine.XR.Interaction.Toolkit.XRRig
  #pragma pack(pop)
  static check_size<sizeof(XRRig), 88 + sizeof(::UnityEngine::GameObject*)> __UnityEngine_XR_Interaction_Toolkit_XRRigSizeCheck;
  static_assert(sizeof(XRRig) == 0x60);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRRig::Awake
// Il2CppName: Awake
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRRig::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRRig::Awake)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRRig*), "Awake", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRRig::get_rig
// Il2CppName: get_rig
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::GameObject* (UnityEngine::XR::Interaction::Toolkit::XRRig::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRRig::get_rig)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRRig*), "get_rig", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRRig::set_rig
// Il2CppName: set_rig
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRRig::*)(::UnityEngine::GameObject*)>(&UnityEngine::XR::Interaction::Toolkit::XRRig::set_rig)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRRig*), "set_rig", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRRig::get_cameraGameObject
// Il2CppName: get_cameraGameObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::GameObject* (UnityEngine::XR::Interaction::Toolkit::XRRig::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRRig::get_cameraGameObject)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRRig*), "get_cameraGameObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRRig::set_cameraGameObject
// Il2CppName: set_cameraGameObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRRig::*)(::UnityEngine::GameObject*)>(&UnityEngine::XR::Interaction::Toolkit::XRRig::set_cameraGameObject)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRRig*), "set_cameraGameObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRRig::get_cameraFloorOffsetObject
// Il2CppName: get_cameraFloorOffsetObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::GameObject* (UnityEngine::XR::Interaction::Toolkit::XRRig::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRRig::get_cameraFloorOffsetObject)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRRig*), "get_cameraFloorOffsetObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRRig::set_cameraFloorOffsetObject
// Il2CppName: set_cameraFloorOffsetObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRRig::*)(::UnityEngine::GameObject*)>(&UnityEngine::XR::Interaction::Toolkit::XRRig::set_cameraFloorOffsetObject)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRRig*), "set_cameraFloorOffsetObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRRig::get_requestedTrackingOriginMode
// Il2CppName: get_requestedTrackingOriginMode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Unity::XR::CoreUtils::XROrigin::TrackingOriginMode (UnityEngine::XR::Interaction::Toolkit::XRRig::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRRig::get_requestedTrackingOriginMode)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRRig*), "get_requestedTrackingOriginMode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRRig::set_requestedTrackingOriginMode
// Il2CppName: set_requestedTrackingOriginMode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRRig::*)(::Unity::XR::CoreUtils::XROrigin::TrackingOriginMode)>(&UnityEngine::XR::Interaction::Toolkit::XRRig::set_requestedTrackingOriginMode)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("Unity.XR.CoreUtils", "XROrigin/TrackingOriginMode")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRRig*), "set_requestedTrackingOriginMode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRRig::get_cameraYOffset
// Il2CppName: get_cameraYOffset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::XR::Interaction::Toolkit::XRRig::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRRig::get_cameraYOffset)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRRig*), "get_cameraYOffset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRRig::set_cameraYOffset
// Il2CppName: set_cameraYOffset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRRig::*)(float)>(&UnityEngine::XR::Interaction::Toolkit::XRRig::set_cameraYOffset)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRRig*), "set_cameraYOffset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRRig::get_currentTrackingOriginMode
// Il2CppName: get_currentTrackingOriginMode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::XR::TrackingOriginModeFlags (UnityEngine::XR::Interaction::Toolkit::XRRig::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRRig::get_currentTrackingOriginMode)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRRig*), "get_currentTrackingOriginMode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRRig::get_rigInCameraSpacePos
// Il2CppName: get_rigInCameraSpacePos
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector3 (UnityEngine::XR::Interaction::Toolkit::XRRig::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRRig::get_rigInCameraSpacePos)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRRig*), "get_rigInCameraSpacePos", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRRig::get_cameraInRigSpacePos
// Il2CppName: get_cameraInRigSpacePos
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector3 (UnityEngine::XR::Interaction::Toolkit::XRRig::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRRig::get_cameraInRigSpacePos)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRRig*), "get_cameraInRigSpacePos", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRRig::get_cameraInRigSpaceHeight
// Il2CppName: get_cameraInRigSpaceHeight
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::XR::Interaction::Toolkit::XRRig::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRRig::get_cameraInRigSpaceHeight)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRRig*), "get_cameraInRigSpaceHeight", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRRig::RotateAroundCameraUsingRigUp
// Il2CppName: RotateAroundCameraUsingRigUp
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::XR::Interaction::Toolkit::XRRig::*)(float)>(&UnityEngine::XR::Interaction::Toolkit::XRRig::RotateAroundCameraUsingRigUp)> {
  static const MethodInfo* get() {
    static auto* angleDegrees = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRRig*), "RotateAroundCameraUsingRigUp", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{angleDegrees});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRRig::MatchRigUp
// Il2CppName: MatchRigUp
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::XR::Interaction::Toolkit::XRRig::*)(::UnityEngine::Vector3)>(&UnityEngine::XR::Interaction::Toolkit::XRRig::MatchRigUp)> {
  static const MethodInfo* get() {
    static auto* destinationUp = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRRig*), "MatchRigUp", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{destinationUp});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRRig::MatchRigUpCameraForward
// Il2CppName: MatchRigUpCameraForward
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::XR::Interaction::Toolkit::XRRig::*)(::UnityEngine::Vector3, ::UnityEngine::Vector3)>(&UnityEngine::XR::Interaction::Toolkit::XRRig::MatchRigUpCameraForward)> {
  static const MethodInfo* get() {
    static auto* destinationUp = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* destinationForward = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRRig*), "MatchRigUpCameraForward", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{destinationUp, destinationForward});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRRig::MatchRigUpRigForward
// Il2CppName: MatchRigUpRigForward
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::XR::Interaction::Toolkit::XRRig::*)(::UnityEngine::Vector3, ::UnityEngine::Vector3)>(&UnityEngine::XR::Interaction::Toolkit::XRRig::MatchRigUpRigForward)> {
  static const MethodInfo* get() {
    static auto* destinationUp = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* destinationForward = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRRig*), "MatchRigUpRigForward", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{destinationUp, destinationForward});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRRig::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
