// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.BaseInteractionEventArgs
#include "UnityEngine/XR/Interaction/Toolkit/BaseInteractionEventArgs.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.TeleportRequest
#include "UnityEngine/XR/Interaction/Toolkit/TeleportRequest.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Type namespace: UnityEngine.XR.Interaction.Toolkit
namespace UnityEngine::XR::Interaction::Toolkit {
  // Forward declaring type: TeleportingEventArgs
  class TeleportingEventArgs;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::XR::Interaction::Toolkit::TeleportingEventArgs);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::XR::Interaction::Toolkit::TeleportingEventArgs*, "UnityEngine.XR.Interaction.Toolkit", "TeleportingEventArgs");
// Type namespace: UnityEngine.XR.Interaction.Toolkit
namespace UnityEngine::XR::Interaction::Toolkit {
  // Size: 0x44
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.XR.Interaction.Toolkit.TeleportingEventArgs
  // [TokenAttribute] Offset: FFFFFFFF
  class TeleportingEventArgs : public ::UnityEngine::XR::Interaction::Toolkit::BaseInteractionEventArgs {
    public:
    public:
    // private UnityEngine.XR.Interaction.Toolkit.TeleportRequest <teleportRequest>k__BackingField
    // Size: 0x24
    // Offset: 0x20
    ::UnityEngine::XR::Interaction::Toolkit::TeleportRequest teleportRequest;
    // Field size check
    static_assert(sizeof(::UnityEngine::XR::Interaction::Toolkit::TeleportRequest) == 0x24);
    public:
    // Creating conversion operator: operator ::UnityEngine::XR::Interaction::Toolkit::TeleportRequest
    constexpr operator ::UnityEngine::XR::Interaction::Toolkit::TeleportRequest() const noexcept {
      return teleportRequest;
    }
    // Get instance field reference: private UnityEngine.XR.Interaction.Toolkit.TeleportRequest <teleportRequest>k__BackingField
    [[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::TeleportRequest& dyn_$teleportRequest$k__BackingField();
    // public UnityEngine.XR.Interaction.Toolkit.TeleportRequest get_teleportRequest()
    // Offset: 0x53FDF14
    ::UnityEngine::XR::Interaction::Toolkit::TeleportRequest get_teleportRequest();
    // public System.Void set_teleportRequest(UnityEngine.XR.Interaction.Toolkit.TeleportRequest value)
    // Offset: 0x53FDF28
    void set_teleportRequest(::UnityEngine::XR::Interaction::Toolkit::TeleportRequest value);
    // public System.Void .ctor()
    // Offset: 0x53FDF3C
    // Implemented from: UnityEngine.XR.Interaction.Toolkit.BaseInteractionEventArgs
    // Base method: System.Void BaseInteractionEventArgs::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static TeleportingEventArgs* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::TeleportingEventArgs::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<TeleportingEventArgs*, creationType>()));
    }
  }; // UnityEngine.XR.Interaction.Toolkit.TeleportingEventArgs
  #pragma pack(pop)
  static check_size<sizeof(TeleportingEventArgs), 32 + sizeof(::UnityEngine::XR::Interaction::Toolkit::TeleportRequest)> __UnityEngine_XR_Interaction_Toolkit_TeleportingEventArgsSizeCheck;
  static_assert(sizeof(TeleportingEventArgs) == 0x44);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::TeleportingEventArgs::get_teleportRequest
// Il2CppName: get_teleportRequest
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::XR::Interaction::Toolkit::TeleportRequest (UnityEngine::XR::Interaction::Toolkit::TeleportingEventArgs::*)()>(&UnityEngine::XR::Interaction::Toolkit::TeleportingEventArgs::get_teleportRequest)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::TeleportingEventArgs*), "get_teleportRequest", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::TeleportingEventArgs::set_teleportRequest
// Il2CppName: set_teleportRequest
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::TeleportingEventArgs::*)(::UnityEngine::XR::Interaction::Toolkit::TeleportRequest)>(&UnityEngine::XR::Interaction::Toolkit::TeleportingEventArgs::set_teleportRequest)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "TeleportRequest")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::TeleportingEventArgs*), "set_teleportRequest", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::TeleportingEventArgs::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
