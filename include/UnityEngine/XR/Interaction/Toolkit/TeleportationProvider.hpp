// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.LocomotionProvider
#include "UnityEngine/XR/Interaction/Toolkit/LocomotionProvider.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.TeleportRequest
#include "UnityEngine/XR/Interaction/Toolkit/TeleportRequest.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Type namespace: UnityEngine.XR.Interaction.Toolkit
namespace UnityEngine::XR::Interaction::Toolkit {
  // Forward declaring type: TeleportationProvider
  class TeleportationProvider;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::XR::Interaction::Toolkit::TeleportationProvider);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::XR::Interaction::Toolkit::TeleportationProvider*, "UnityEngine.XR.Interaction.Toolkit", "TeleportationProvider");
// Type namespace: UnityEngine.XR.Interaction.Toolkit
namespace UnityEngine::XR::Interaction::Toolkit {
  // Size: 0x7C
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.XR.Interaction.Toolkit.TeleportationProvider
  // [TokenAttribute] Offset: FFFFFFFF
  // [HelpURLAttribute] Offset: FFFFFFFF
  // [AddComponentMenu] Offset: FFFFFFFF
  class TeleportationProvider : public ::UnityEngine::XR::Interaction::Toolkit::LocomotionProvider {
    public:
    public:
    // private UnityEngine.XR.Interaction.Toolkit.TeleportRequest <currentRequest>k__BackingField
    // Size: 0x24
    // Offset: 0x48
    ::UnityEngine::XR::Interaction::Toolkit::TeleportRequest currentRequest;
    // Field size check
    static_assert(sizeof(::UnityEngine::XR::Interaction::Toolkit::TeleportRequest) == 0x24);
    // private System.Boolean <validRequest>k__BackingField
    // Size: 0x1
    // Offset: 0x6C
    bool validRequest;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: validRequest and: m_DelayTime
    char __padding1[0x3] = {};
    // private System.Single m_DelayTime
    // Size: 0x4
    // Offset: 0x70
    float m_DelayTime;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Boolean m_HasExclusiveLocomotion
    // Size: 0x1
    // Offset: 0x74
    bool m_HasExclusiveLocomotion;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: m_HasExclusiveLocomotion and: m_TimeStarted
    char __padding3[0x3] = {};
    // private System.Single m_TimeStarted
    // Size: 0x4
    // Offset: 0x78
    float m_TimeStarted;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    public:
    // Get instance field reference: private UnityEngine.XR.Interaction.Toolkit.TeleportRequest <currentRequest>k__BackingField
    [[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::TeleportRequest& dyn_$currentRequest$k__BackingField();
    // Get instance field reference: private System.Boolean <validRequest>k__BackingField
    [[deprecated("Use field access instead!")]] bool& dyn_$validRequest$k__BackingField();
    // Get instance field reference: private System.Single m_DelayTime
    [[deprecated("Use field access instead!")]] float& dyn_m_DelayTime();
    // Get instance field reference: private System.Boolean m_HasExclusiveLocomotion
    [[deprecated("Use field access instead!")]] bool& dyn_m_HasExclusiveLocomotion();
    // Get instance field reference: private System.Single m_TimeStarted
    [[deprecated("Use field access instead!")]] float& dyn_m_TimeStarted();
    // protected UnityEngine.XR.Interaction.Toolkit.TeleportRequest get_currentRequest()
    // Offset: 0x5411054
    ::UnityEngine::XR::Interaction::Toolkit::TeleportRequest get_currentRequest();
    // protected System.Void set_currentRequest(UnityEngine.XR.Interaction.Toolkit.TeleportRequest value)
    // Offset: 0x541106C
    void set_currentRequest(::UnityEngine::XR::Interaction::Toolkit::TeleportRequest value);
    // protected System.Boolean get_validRequest()
    // Offset: 0x5411084
    bool get_validRequest();
    // protected System.Void set_validRequest(System.Boolean value)
    // Offset: 0x541108C
    void set_validRequest(bool value);
    // public System.Single get_delayTime()
    // Offset: 0x5411098
    float get_delayTime();
    // public System.Void set_delayTime(System.Single value)
    // Offset: 0x54110A0
    void set_delayTime(float value);
    // public System.Boolean QueueTeleportRequest(UnityEngine.XR.Interaction.Toolkit.TeleportRequest teleportRequest)
    // Offset: 0x54110A8
    bool QueueTeleportRequest(::UnityEngine::XR::Interaction::Toolkit::TeleportRequest teleportRequest);
    // protected System.Void Update()
    // Offset: 0x5411218
    void Update();
    // protected override System.Void Awake()
    // Offset: 0x54110D0
    // Implemented from: UnityEngine.XR.Interaction.Toolkit.LocomotionProvider
    // Base method: System.Void LocomotionProvider::Awake()
    void Awake();
    // public System.Void .ctor()
    // Offset: 0x5411540
    // Implemented from: UnityEngine.XR.Interaction.Toolkit.LocomotionProvider
    // Base method: System.Void LocomotionProvider::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static TeleportationProvider* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::TeleportationProvider::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<TeleportationProvider*, creationType>()));
    }
  }; // UnityEngine.XR.Interaction.Toolkit.TeleportationProvider
  #pragma pack(pop)
  static check_size<sizeof(TeleportationProvider), 120 + sizeof(float)> __UnityEngine_XR_Interaction_Toolkit_TeleportationProviderSizeCheck;
  static_assert(sizeof(TeleportationProvider) == 0x7C);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::TeleportationProvider::get_currentRequest
// Il2CppName: get_currentRequest
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::XR::Interaction::Toolkit::TeleportRequest (UnityEngine::XR::Interaction::Toolkit::TeleportationProvider::*)()>(&UnityEngine::XR::Interaction::Toolkit::TeleportationProvider::get_currentRequest)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::TeleportationProvider*), "get_currentRequest", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::TeleportationProvider::set_currentRequest
// Il2CppName: set_currentRequest
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::TeleportationProvider::*)(::UnityEngine::XR::Interaction::Toolkit::TeleportRequest)>(&UnityEngine::XR::Interaction::Toolkit::TeleportationProvider::set_currentRequest)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "TeleportRequest")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::TeleportationProvider*), "set_currentRequest", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::TeleportationProvider::get_validRequest
// Il2CppName: get_validRequest
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::XR::Interaction::Toolkit::TeleportationProvider::*)()>(&UnityEngine::XR::Interaction::Toolkit::TeleportationProvider::get_validRequest)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::TeleportationProvider*), "get_validRequest", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::TeleportationProvider::set_validRequest
// Il2CppName: set_validRequest
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::TeleportationProvider::*)(bool)>(&UnityEngine::XR::Interaction::Toolkit::TeleportationProvider::set_validRequest)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::TeleportationProvider*), "set_validRequest", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::TeleportationProvider::get_delayTime
// Il2CppName: get_delayTime
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::XR::Interaction::Toolkit::TeleportationProvider::*)()>(&UnityEngine::XR::Interaction::Toolkit::TeleportationProvider::get_delayTime)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::TeleportationProvider*), "get_delayTime", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::TeleportationProvider::set_delayTime
// Il2CppName: set_delayTime
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::TeleportationProvider::*)(float)>(&UnityEngine::XR::Interaction::Toolkit::TeleportationProvider::set_delayTime)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::TeleportationProvider*), "set_delayTime", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::TeleportationProvider::QueueTeleportRequest
// Il2CppName: QueueTeleportRequest
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::XR::Interaction::Toolkit::TeleportationProvider::*)(::UnityEngine::XR::Interaction::Toolkit::TeleportRequest)>(&UnityEngine::XR::Interaction::Toolkit::TeleportationProvider::QueueTeleportRequest)> {
  static const MethodInfo* get() {
    static auto* teleportRequest = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "TeleportRequest")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::TeleportationProvider*), "QueueTeleportRequest", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{teleportRequest});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::TeleportationProvider::Update
// Il2CppName: Update
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::TeleportationProvider::*)()>(&UnityEngine::XR::Interaction::Toolkit::TeleportationProvider::Update)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::TeleportationProvider*), "Update", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::TeleportationProvider::Awake
// Il2CppName: Awake
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::TeleportationProvider::*)()>(&UnityEngine::XR::Interaction::Toolkit::TeleportationProvider::Awake)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::TeleportationProvider*), "Awake", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::TeleportationProvider::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
