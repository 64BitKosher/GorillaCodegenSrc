// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.Filtering.IXRInteractionStrengthFilter
#include "UnityEngine/XR/Interaction/Toolkit/Filtering/IXRInteractionStrengthFilter.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Func`4<T1, T2, T3, TResult>
  template<typename T1, typename T2, typename T3, typename TResult>
  class Func_4;
}
// Forward declaring namespace: UnityEngine::XR::Interaction::Toolkit
namespace UnityEngine::XR::Interaction::Toolkit {
  // Forward declaring type: IXRInteractor
  class IXRInteractor;
  // Forward declaring type: IXRInteractable
  class IXRInteractable;
}
// Completed forward declares
// Type namespace: UnityEngine.XR.Interaction.Toolkit.Filtering
namespace UnityEngine::XR::Interaction::Toolkit::Filtering {
  // Forward declaring type: XRInteractionStrengthFilterDelegate
  class XRInteractionStrengthFilterDelegate;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::XR::Interaction::Toolkit::Filtering::XRInteractionStrengthFilterDelegate);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::XR::Interaction::Toolkit::Filtering::XRInteractionStrengthFilterDelegate*, "UnityEngine.XR.Interaction.Toolkit.Filtering", "XRInteractionStrengthFilterDelegate");
// Type namespace: UnityEngine.XR.Interaction.Toolkit.Filtering
namespace UnityEngine::XR::Interaction::Toolkit::Filtering {
  // Size: 0x19
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.XR.Interaction.Toolkit.Filtering.XRInteractionStrengthFilterDelegate
  // [TokenAttribute] Offset: FFFFFFFF
  class XRInteractionStrengthFilterDelegate : public ::Il2CppObject/*, public ::UnityEngine::XR::Interaction::Toolkit::Filtering::IXRInteractionStrengthFilter*/ {
    public:
    public:
    // private System.Func`4<UnityEngine.XR.Interaction.Toolkit.IXRInteractor,UnityEngine.XR.Interaction.Toolkit.IXRInteractable,System.Single,System.Single> <delegateToProcess>k__BackingField
    // Size: 0x8
    // Offset: 0x10
    ::System::Func_4<::UnityEngine::XR::Interaction::Toolkit::IXRInteractor*, ::UnityEngine::XR::Interaction::Toolkit::IXRInteractable*, float, float>* delegateToProcess;
    // Field size check
    static_assert(sizeof(::System::Func_4<::UnityEngine::XR::Interaction::Toolkit::IXRInteractor*, ::UnityEngine::XR::Interaction::Toolkit::IXRInteractable*, float, float>*) == 0x8);
    // private System.Boolean <canProcess>k__BackingField
    // Size: 0x1
    // Offset: 0x18
    bool canProcess;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    public:
    // Creating interface conversion operator: operator ::UnityEngine::XR::Interaction::Toolkit::Filtering::IXRInteractionStrengthFilter
    operator ::UnityEngine::XR::Interaction::Toolkit::Filtering::IXRInteractionStrengthFilter() noexcept {
      return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::Filtering::IXRInteractionStrengthFilter*>(this);
    }
    // Get instance field reference: private System.Func`4<UnityEngine.XR.Interaction.Toolkit.IXRInteractor,UnityEngine.XR.Interaction.Toolkit.IXRInteractable,System.Single,System.Single> <delegateToProcess>k__BackingField
    [[deprecated("Use field access instead!")]] ::System::Func_4<::UnityEngine::XR::Interaction::Toolkit::IXRInteractor*, ::UnityEngine::XR::Interaction::Toolkit::IXRInteractable*, float, float>*& dyn_$delegateToProcess$k__BackingField();
    // Get instance field reference: private System.Boolean <canProcess>k__BackingField
    [[deprecated("Use field access instead!")]] bool& dyn_$canProcess$k__BackingField();
    // public System.Func`4<UnityEngine.XR.Interaction.Toolkit.IXRInteractor,UnityEngine.XR.Interaction.Toolkit.IXRInteractable,System.Single,System.Single> get_delegateToProcess()
    // Offset: 0x542B110
    ::System::Func_4<::UnityEngine::XR::Interaction::Toolkit::IXRInteractor*, ::UnityEngine::XR::Interaction::Toolkit::IXRInteractable*, float, float>* get_delegateToProcess();
    // public System.Void set_delegateToProcess(System.Func`4<UnityEngine.XR.Interaction.Toolkit.IXRInteractor,UnityEngine.XR.Interaction.Toolkit.IXRInteractable,System.Single,System.Single> value)
    // Offset: 0x542B118
    void set_delegateToProcess(::System::Func_4<::UnityEngine::XR::Interaction::Toolkit::IXRInteractor*, ::UnityEngine::XR::Interaction::Toolkit::IXRInteractable*, float, float>* value);
    // public System.Boolean get_canProcess()
    // Offset: 0x542B120
    bool get_canProcess();
    // public System.Void set_canProcess(System.Boolean value)
    // Offset: 0x542B128
    void set_canProcess(bool value);
    // public System.Void .ctor(System.Func`4<UnityEngine.XR.Interaction.Toolkit.IXRInteractor,UnityEngine.XR.Interaction.Toolkit.IXRInteractable,System.Single,System.Single> delegateToProcess)
    // Offset: 0x542B134
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static XRInteractionStrengthFilterDelegate* New_ctor(::System::Func_4<::UnityEngine::XR::Interaction::Toolkit::IXRInteractor*, ::UnityEngine::XR::Interaction::Toolkit::IXRInteractable*, float, float>* delegateToProcess) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::Filtering::XRInteractionStrengthFilterDelegate::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<XRInteractionStrengthFilterDelegate*, creationType>(delegateToProcess)));
    }
    // public System.Single Process(UnityEngine.XR.Interaction.Toolkit.IXRInteractor interactor, UnityEngine.XR.Interaction.Toolkit.IXRInteractable interactable, System.Single interactionStrength)
    // Offset: 0x542B1B8
    float Process(::UnityEngine::XR::Interaction::Toolkit::IXRInteractor* interactor, ::UnityEngine::XR::Interaction::Toolkit::IXRInteractable* interactable, float interactionStrength);
  }; // UnityEngine.XR.Interaction.Toolkit.Filtering.XRInteractionStrengthFilterDelegate
  #pragma pack(pop)
  static check_size<sizeof(XRInteractionStrengthFilterDelegate), 24 + sizeof(bool)> __UnityEngine_XR_Interaction_Toolkit_Filtering_XRInteractionStrengthFilterDelegateSizeCheck;
  static_assert(sizeof(XRInteractionStrengthFilterDelegate) == 0x19);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Filtering::XRInteractionStrengthFilterDelegate::get_delegateToProcess
// Il2CppName: get_delegateToProcess
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Func_4<::UnityEngine::XR::Interaction::Toolkit::IXRInteractor*, ::UnityEngine::XR::Interaction::Toolkit::IXRInteractable*, float, float>* (UnityEngine::XR::Interaction::Toolkit::Filtering::XRInteractionStrengthFilterDelegate::*)()>(&UnityEngine::XR::Interaction::Toolkit::Filtering::XRInteractionStrengthFilterDelegate::get_delegateToProcess)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Filtering::XRInteractionStrengthFilterDelegate*), "get_delegateToProcess", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Filtering::XRInteractionStrengthFilterDelegate::set_delegateToProcess
// Il2CppName: set_delegateToProcess
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Filtering::XRInteractionStrengthFilterDelegate::*)(::System::Func_4<::UnityEngine::XR::Interaction::Toolkit::IXRInteractor*, ::UnityEngine::XR::Interaction::Toolkit::IXRInteractable*, float, float>*)>(&UnityEngine::XR::Interaction::Toolkit::Filtering::XRInteractionStrengthFilterDelegate::set_delegateToProcess)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Func`4"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "IXRInteractor"), ::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "IXRInteractable"), ::il2cpp_utils::GetClassFromName("System", "Single"), ::il2cpp_utils::GetClassFromName("System", "Single")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Filtering::XRInteractionStrengthFilterDelegate*), "set_delegateToProcess", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Filtering::XRInteractionStrengthFilterDelegate::get_canProcess
// Il2CppName: get_canProcess
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::XR::Interaction::Toolkit::Filtering::XRInteractionStrengthFilterDelegate::*)()>(&UnityEngine::XR::Interaction::Toolkit::Filtering::XRInteractionStrengthFilterDelegate::get_canProcess)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Filtering::XRInteractionStrengthFilterDelegate*), "get_canProcess", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Filtering::XRInteractionStrengthFilterDelegate::set_canProcess
// Il2CppName: set_canProcess
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Filtering::XRInteractionStrengthFilterDelegate::*)(bool)>(&UnityEngine::XR::Interaction::Toolkit::Filtering::XRInteractionStrengthFilterDelegate::set_canProcess)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Filtering::XRInteractionStrengthFilterDelegate*), "set_canProcess", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Filtering::XRInteractionStrengthFilterDelegate::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Filtering::XRInteractionStrengthFilterDelegate::Process
// Il2CppName: Process
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::XR::Interaction::Toolkit::Filtering::XRInteractionStrengthFilterDelegate::*)(::UnityEngine::XR::Interaction::Toolkit::IXRInteractor*, ::UnityEngine::XR::Interaction::Toolkit::IXRInteractable*, float)>(&UnityEngine::XR::Interaction::Toolkit::Filtering::XRInteractionStrengthFilterDelegate::Process)> {
  static const MethodInfo* get() {
    static auto* interactor = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "IXRInteractor")->byval_arg;
    static auto* interactable = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "IXRInteractable")->byval_arg;
    static auto* interactionStrength = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Filtering::XRInteractionStrengthFilterDelegate*), "Process", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactor, interactable, interactionStrength});
  }
};
