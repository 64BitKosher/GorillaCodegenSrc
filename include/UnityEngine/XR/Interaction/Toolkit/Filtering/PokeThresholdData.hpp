// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.Filtering.PokeAxis
#include "UnityEngine/XR/Interaction/Toolkit/Filtering/PokeAxis.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Type namespace: UnityEngine.XR.Interaction.Toolkit.Filtering
namespace UnityEngine::XR::Interaction::Toolkit::Filtering {
  // Forward declaring type: PokeThresholdData
  class PokeThresholdData;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::XR::Interaction::Toolkit::Filtering::PokeThresholdData);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::XR::Interaction::Toolkit::Filtering::PokeThresholdData*, "UnityEngine.XR.Interaction.Toolkit.Filtering", "PokeThresholdData");
// Type namespace: UnityEngine.XR.Interaction.Toolkit.Filtering
namespace UnityEngine::XR::Interaction::Toolkit::Filtering {
  // Size: 0x20
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.XR.Interaction.Toolkit.Filtering.PokeThresholdData
  // [TokenAttribute] Offset: FFFFFFFF
  class PokeThresholdData : public ::Il2CppObject {
    public:
    public:
    // private UnityEngine.XR.Interaction.Toolkit.Filtering.PokeAxis m_PokeDirection
    // Size: 0x4
    // Offset: 0x10
    ::UnityEngine::XR::Interaction::Toolkit::Filtering::PokeAxis m_PokeDirection;
    // Field size check
    static_assert(sizeof(::UnityEngine::XR::Interaction::Toolkit::Filtering::PokeAxis) == 0x4);
    // private System.Single m_InteractionDepthOffset
    // Size: 0x4
    // Offset: 0x14
    float m_InteractionDepthOffset;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Boolean m_EnablePokeAngleThreshold
    // Size: 0x1
    // Offset: 0x18
    bool m_EnablePokeAngleThreshold;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: m_EnablePokeAngleThreshold and: m_PokeAngleThreshold
    char __padding2[0x3] = {};
    // private System.Single m_PokeAngleThreshold
    // Size: 0x4
    // Offset: 0x1C
    float m_PokeAngleThreshold;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    public:
    // Get instance field reference: private UnityEngine.XR.Interaction.Toolkit.Filtering.PokeAxis m_PokeDirection
    [[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::Filtering::PokeAxis& dyn_m_PokeDirection();
    // Get instance field reference: private System.Single m_InteractionDepthOffset
    [[deprecated("Use field access instead!")]] float& dyn_m_InteractionDepthOffset();
    // Get instance field reference: private System.Boolean m_EnablePokeAngleThreshold
    [[deprecated("Use field access instead!")]] bool& dyn_m_EnablePokeAngleThreshold();
    // Get instance field reference: private System.Single m_PokeAngleThreshold
    [[deprecated("Use field access instead!")]] float& dyn_m_PokeAngleThreshold();
    // public UnityEngine.XR.Interaction.Toolkit.Filtering.PokeAxis get_pokeDirection()
    // Offset: 0x542B55C
    ::UnityEngine::XR::Interaction::Toolkit::Filtering::PokeAxis get_pokeDirection();
    // public System.Void set_pokeDirection(UnityEngine.XR.Interaction.Toolkit.Filtering.PokeAxis value)
    // Offset: 0x542B564
    void set_pokeDirection(::UnityEngine::XR::Interaction::Toolkit::Filtering::PokeAxis value);
    // public System.Single get_interactionDepthOffset()
    // Offset: 0x542B56C
    float get_interactionDepthOffset();
    // public System.Void set_interactionDepthOffset(System.Single value)
    // Offset: 0x542B574
    void set_interactionDepthOffset(float value);
    // public System.Boolean get_enablePokeAngleThreshold()
    // Offset: 0x542B57C
    bool get_enablePokeAngleThreshold();
    // public System.Void set_enablePokeAngleThreshold(System.Boolean value)
    // Offset: 0x542B584
    void set_enablePokeAngleThreshold(bool value);
    // public System.Single get_pokeAngleThreshold()
    // Offset: 0x542B590
    float get_pokeAngleThreshold();
    // public System.Void set_pokeAngleThreshold(System.Single value)
    // Offset: 0x542B598
    void set_pokeAngleThreshold(float value);
    // public System.Single GetSelectEntranceVectorDotThreshold()
    // Offset: 0x542B5A0
    float GetSelectEntranceVectorDotThreshold();
    // public System.Void .ctor()
    // Offset: 0x542B5B4
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static PokeThresholdData* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::Filtering::PokeThresholdData::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<PokeThresholdData*, creationType>()));
    }
  }; // UnityEngine.XR.Interaction.Toolkit.Filtering.PokeThresholdData
  #pragma pack(pop)
  static check_size<sizeof(PokeThresholdData), 28 + sizeof(float)> __UnityEngine_XR_Interaction_Toolkit_Filtering_PokeThresholdDataSizeCheck;
  static_assert(sizeof(PokeThresholdData) == 0x20);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Filtering::PokeThresholdData::get_pokeDirection
// Il2CppName: get_pokeDirection
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::XR::Interaction::Toolkit::Filtering::PokeAxis (UnityEngine::XR::Interaction::Toolkit::Filtering::PokeThresholdData::*)()>(&UnityEngine::XR::Interaction::Toolkit::Filtering::PokeThresholdData::get_pokeDirection)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Filtering::PokeThresholdData*), "get_pokeDirection", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Filtering::PokeThresholdData::set_pokeDirection
// Il2CppName: set_pokeDirection
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Filtering::PokeThresholdData::*)(::UnityEngine::XR::Interaction::Toolkit::Filtering::PokeAxis)>(&UnityEngine::XR::Interaction::Toolkit::Filtering::PokeThresholdData::set_pokeDirection)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit.Filtering", "PokeAxis")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Filtering::PokeThresholdData*), "set_pokeDirection", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Filtering::PokeThresholdData::get_interactionDepthOffset
// Il2CppName: get_interactionDepthOffset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::XR::Interaction::Toolkit::Filtering::PokeThresholdData::*)()>(&UnityEngine::XR::Interaction::Toolkit::Filtering::PokeThresholdData::get_interactionDepthOffset)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Filtering::PokeThresholdData*), "get_interactionDepthOffset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Filtering::PokeThresholdData::set_interactionDepthOffset
// Il2CppName: set_interactionDepthOffset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Filtering::PokeThresholdData::*)(float)>(&UnityEngine::XR::Interaction::Toolkit::Filtering::PokeThresholdData::set_interactionDepthOffset)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Filtering::PokeThresholdData*), "set_interactionDepthOffset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Filtering::PokeThresholdData::get_enablePokeAngleThreshold
// Il2CppName: get_enablePokeAngleThreshold
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::XR::Interaction::Toolkit::Filtering::PokeThresholdData::*)()>(&UnityEngine::XR::Interaction::Toolkit::Filtering::PokeThresholdData::get_enablePokeAngleThreshold)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Filtering::PokeThresholdData*), "get_enablePokeAngleThreshold", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Filtering::PokeThresholdData::set_enablePokeAngleThreshold
// Il2CppName: set_enablePokeAngleThreshold
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Filtering::PokeThresholdData::*)(bool)>(&UnityEngine::XR::Interaction::Toolkit::Filtering::PokeThresholdData::set_enablePokeAngleThreshold)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Filtering::PokeThresholdData*), "set_enablePokeAngleThreshold", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Filtering::PokeThresholdData::get_pokeAngleThreshold
// Il2CppName: get_pokeAngleThreshold
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::XR::Interaction::Toolkit::Filtering::PokeThresholdData::*)()>(&UnityEngine::XR::Interaction::Toolkit::Filtering::PokeThresholdData::get_pokeAngleThreshold)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Filtering::PokeThresholdData*), "get_pokeAngleThreshold", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Filtering::PokeThresholdData::set_pokeAngleThreshold
// Il2CppName: set_pokeAngleThreshold
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Filtering::PokeThresholdData::*)(float)>(&UnityEngine::XR::Interaction::Toolkit::Filtering::PokeThresholdData::set_pokeAngleThreshold)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Filtering::PokeThresholdData*), "set_pokeAngleThreshold", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Filtering::PokeThresholdData::GetSelectEntranceVectorDotThreshold
// Il2CppName: GetSelectEntranceVectorDotThreshold
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::XR::Interaction::Toolkit::Filtering::PokeThresholdData::*)()>(&UnityEngine::XR::Interaction::Toolkit::Filtering::PokeThresholdData::GetSelectEntranceVectorDotThreshold)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Filtering::PokeThresholdData*), "GetSelectEntranceVectorDotThreshold", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Filtering::PokeThresholdData::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
