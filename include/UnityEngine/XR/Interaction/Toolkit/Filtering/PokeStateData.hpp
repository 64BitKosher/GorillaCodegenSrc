// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Including type: System.IEquatable`1
#include "System/IEquatable_1.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Transform
  class Transform;
}
// Completed forward declares
// Type namespace: UnityEngine.XR.Interaction.Toolkit.Filtering
namespace UnityEngine::XR::Interaction::Toolkit::Filtering {
  // Forward declaring type: PokeStateData
  struct PokeStateData;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::XR::Interaction::Toolkit::Filtering::PokeStateData, "UnityEngine.XR.Interaction.Toolkit.Filtering", "PokeStateData");
// Type namespace: UnityEngine.XR.Interaction.Toolkit.Filtering
namespace UnityEngine::XR::Interaction::Toolkit::Filtering {
  // Size: 0x28
  #pragma pack(push, 1)
  // WARNING Layout: Sequential may not be correctly taken into account!
  // Autogenerated type: UnityEngine.XR.Interaction.Toolkit.Filtering.PokeStateData
  // [TokenAttribute] Offset: FFFFFFFF
  struct PokeStateData/*, public ::System::ValueType, public ::System::IEquatable_1<::UnityEngine::XR::Interaction::Toolkit::Filtering::PokeStateData>*/ {
    public:
    public:
    // private System.Boolean <meetsRequirements>k__BackingField
    // Size: 0x1
    // Offset: 0x0
    bool meetsRequirements;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: meetsRequirements and: pokeInteractionPoint
    char __padding0[0x3] = {};
    // private UnityEngine.Vector3 <pokeInteractionPoint>k__BackingField
    // Size: 0xC
    // Offset: 0x4
    ::UnityEngine::Vector3 pokeInteractionPoint;
    // Field size check
    static_assert(sizeof(::UnityEngine::Vector3) == 0xC);
    // private UnityEngine.Vector3 <axisAlignedPokeInteractionPoint>k__BackingField
    // Size: 0xC
    // Offset: 0x10
    ::UnityEngine::Vector3 axisAlignedPokeInteractionPoint;
    // Field size check
    static_assert(sizeof(::UnityEngine::Vector3) == 0xC);
    // private System.Single <interactionStrength>k__BackingField
    // Size: 0x4
    // Offset: 0x1C
    float interactionStrength;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private UnityEngine.Transform <target>k__BackingField
    // Size: 0x8
    // Offset: 0x20
    ::UnityEngine::Transform* target;
    // Field size check
    static_assert(sizeof(::UnityEngine::Transform*) == 0x8);
    public:
    // Creating value type constructor for type: PokeStateData
    constexpr PokeStateData(bool meetsRequirements_ = {}, ::UnityEngine::Vector3 pokeInteractionPoint_ = {}, ::UnityEngine::Vector3 axisAlignedPokeInteractionPoint_ = {}, float interactionStrength_ = {}, ::UnityEngine::Transform* target_ = {}) noexcept : meetsRequirements{meetsRequirements_}, pokeInteractionPoint{pokeInteractionPoint_}, axisAlignedPokeInteractionPoint{axisAlignedPokeInteractionPoint_}, interactionStrength{interactionStrength_}, target{target_} {}
    // Creating interface conversion operator: operator ::System::ValueType
    operator ::System::ValueType() noexcept {
      return *reinterpret_cast<::System::ValueType*>(this);
    }
    // Creating interface conversion operator: operator ::System::IEquatable_1<::UnityEngine::XR::Interaction::Toolkit::Filtering::PokeStateData>
    operator ::System::IEquatable_1<::UnityEngine::XR::Interaction::Toolkit::Filtering::PokeStateData>() noexcept {
      return *reinterpret_cast<::System::IEquatable_1<::UnityEngine::XR::Interaction::Toolkit::Filtering::PokeStateData>*>(this);
    }
    // Get instance field reference: private System.Boolean <meetsRequirements>k__BackingField
    [[deprecated("Use field access instead!")]] bool& dyn_$meetsRequirements$k__BackingField();
    // Get instance field reference: private UnityEngine.Vector3 <pokeInteractionPoint>k__BackingField
    [[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& dyn_$pokeInteractionPoint$k__BackingField();
    // Get instance field reference: private UnityEngine.Vector3 <axisAlignedPokeInteractionPoint>k__BackingField
    [[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& dyn_$axisAlignedPokeInteractionPoint$k__BackingField();
    // Get instance field reference: private System.Single <interactionStrength>k__BackingField
    [[deprecated("Use field access instead!")]] float& dyn_$interactionStrength$k__BackingField();
    // Get instance field reference: private UnityEngine.Transform <target>k__BackingField
    [[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& dyn_$target$k__BackingField();
    // public System.Boolean get_meetsRequirements()
    // Offset: 0x542B1DC
    bool get_meetsRequirements();
    // public System.Void set_meetsRequirements(System.Boolean value)
    // Offset: 0x542B1E4
    void set_meetsRequirements(bool value);
    // public UnityEngine.Vector3 get_pokeInteractionPoint()
    // Offset: 0x542B1F0
    ::UnityEngine::Vector3 get_pokeInteractionPoint();
    // public System.Void set_pokeInteractionPoint(UnityEngine.Vector3 value)
    // Offset: 0x542B1FC
    void set_pokeInteractionPoint(::UnityEngine::Vector3 value);
    // public UnityEngine.Vector3 get_axisAlignedPokeInteractionPoint()
    // Offset: 0x542B208
    ::UnityEngine::Vector3 get_axisAlignedPokeInteractionPoint();
    // public System.Void set_axisAlignedPokeInteractionPoint(UnityEngine.Vector3 value)
    // Offset: 0x542B214
    void set_axisAlignedPokeInteractionPoint(::UnityEngine::Vector3 value);
    // public System.Single get_interactionStrength()
    // Offset: 0x542B220
    float get_interactionStrength();
    // public System.Void set_interactionStrength(System.Single value)
    // Offset: 0x542B228
    void set_interactionStrength(float value);
    // public UnityEngine.Transform get_target()
    // Offset: 0x542B230
    ::UnityEngine::Transform* get_target();
    // public System.Void set_target(UnityEngine.Transform value)
    // Offset: 0x542B238
    void set_target(::UnityEngine::Transform* value);
    // public System.Boolean Equals(UnityEngine.XR.Interaction.Toolkit.Filtering.PokeStateData other)
    // Offset: 0x542B240
    bool Equals(::UnityEngine::XR::Interaction::Toolkit::Filtering::PokeStateData other);
    // public override System.Boolean Equals(System.Object obj)
    // Offset: 0x542B364
    // Implemented from: System.ValueType
    // Base method: System.Boolean ValueType::Equals(System.Object obj)
    bool Equals(::Il2CppObject* obj);
    // public override System.Int32 GetHashCode()
    // Offset: 0x542B3F4
    // Implemented from: System.ValueType
    // Base method: System.Int32 ValueType::GetHashCode()
    int GetHashCode();
  }; // UnityEngine.XR.Interaction.Toolkit.Filtering.PokeStateData
  #pragma pack(pop)
  static check_size<sizeof(PokeStateData), 32 + sizeof(::UnityEngine::Transform*)> __UnityEngine_XR_Interaction_Toolkit_Filtering_PokeStateDataSizeCheck;
  static_assert(sizeof(PokeStateData) == 0x28);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Filtering::PokeStateData::get_meetsRequirements
// Il2CppName: get_meetsRequirements
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::XR::Interaction::Toolkit::Filtering::PokeStateData::*)()>(&UnityEngine::XR::Interaction::Toolkit::Filtering::PokeStateData::get_meetsRequirements)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Filtering::PokeStateData), "get_meetsRequirements", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Filtering::PokeStateData::set_meetsRequirements
// Il2CppName: set_meetsRequirements
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Filtering::PokeStateData::*)(bool)>(&UnityEngine::XR::Interaction::Toolkit::Filtering::PokeStateData::set_meetsRequirements)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Filtering::PokeStateData), "set_meetsRequirements", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Filtering::PokeStateData::get_pokeInteractionPoint
// Il2CppName: get_pokeInteractionPoint
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector3 (UnityEngine::XR::Interaction::Toolkit::Filtering::PokeStateData::*)()>(&UnityEngine::XR::Interaction::Toolkit::Filtering::PokeStateData::get_pokeInteractionPoint)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Filtering::PokeStateData), "get_pokeInteractionPoint", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Filtering::PokeStateData::set_pokeInteractionPoint
// Il2CppName: set_pokeInteractionPoint
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Filtering::PokeStateData::*)(::UnityEngine::Vector3)>(&UnityEngine::XR::Interaction::Toolkit::Filtering::PokeStateData::set_pokeInteractionPoint)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Filtering::PokeStateData), "set_pokeInteractionPoint", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Filtering::PokeStateData::get_axisAlignedPokeInteractionPoint
// Il2CppName: get_axisAlignedPokeInteractionPoint
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector3 (UnityEngine::XR::Interaction::Toolkit::Filtering::PokeStateData::*)()>(&UnityEngine::XR::Interaction::Toolkit::Filtering::PokeStateData::get_axisAlignedPokeInteractionPoint)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Filtering::PokeStateData), "get_axisAlignedPokeInteractionPoint", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Filtering::PokeStateData::set_axisAlignedPokeInteractionPoint
// Il2CppName: set_axisAlignedPokeInteractionPoint
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Filtering::PokeStateData::*)(::UnityEngine::Vector3)>(&UnityEngine::XR::Interaction::Toolkit::Filtering::PokeStateData::set_axisAlignedPokeInteractionPoint)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Filtering::PokeStateData), "set_axisAlignedPokeInteractionPoint", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Filtering::PokeStateData::get_interactionStrength
// Il2CppName: get_interactionStrength
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::XR::Interaction::Toolkit::Filtering::PokeStateData::*)()>(&UnityEngine::XR::Interaction::Toolkit::Filtering::PokeStateData::get_interactionStrength)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Filtering::PokeStateData), "get_interactionStrength", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Filtering::PokeStateData::set_interactionStrength
// Il2CppName: set_interactionStrength
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Filtering::PokeStateData::*)(float)>(&UnityEngine::XR::Interaction::Toolkit::Filtering::PokeStateData::set_interactionStrength)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Filtering::PokeStateData), "set_interactionStrength", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Filtering::PokeStateData::get_target
// Il2CppName: get_target
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Transform* (UnityEngine::XR::Interaction::Toolkit::Filtering::PokeStateData::*)()>(&UnityEngine::XR::Interaction::Toolkit::Filtering::PokeStateData::get_target)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Filtering::PokeStateData), "get_target", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Filtering::PokeStateData::set_target
// Il2CppName: set_target
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Filtering::PokeStateData::*)(::UnityEngine::Transform*)>(&UnityEngine::XR::Interaction::Toolkit::Filtering::PokeStateData::set_target)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Transform")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Filtering::PokeStateData), "set_target", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Filtering::PokeStateData::Equals
// Il2CppName: Equals
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::XR::Interaction::Toolkit::Filtering::PokeStateData::*)(::UnityEngine::XR::Interaction::Toolkit::Filtering::PokeStateData)>(&UnityEngine::XR::Interaction::Toolkit::Filtering::PokeStateData::Equals)> {
  static const MethodInfo* get() {
    static auto* other = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit.Filtering", "PokeStateData")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Filtering::PokeStateData), "Equals", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{other});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Filtering::PokeStateData::Equals
// Il2CppName: Equals
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::XR::Interaction::Toolkit::Filtering::PokeStateData::*)(::Il2CppObject*)>(&UnityEngine::XR::Interaction::Toolkit::Filtering::PokeStateData::Equals)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Filtering::PokeStateData), "Equals", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Filtering::PokeStateData::GetHashCode
// Il2CppName: GetHashCode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::XR::Interaction::Toolkit::Filtering::PokeStateData::*)()>(&UnityEngine::XR::Interaction::Toolkit::Filtering::PokeStateData::GetHashCode)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Filtering::PokeStateData), "GetHashCode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
