// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Enum
#include "System/Enum.hpp"
// Completed includes
// Type namespace: UnityEngine.XR.Interaction.Toolkit.Filtering
namespace UnityEngine::XR::Interaction::Toolkit::Filtering {
  // Forward declaring type: PokeAxis
  struct PokeAxis;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::XR::Interaction::Toolkit::Filtering::PokeAxis, "UnityEngine.XR.Interaction.Toolkit.Filtering", "PokeAxis");
// Type namespace: UnityEngine.XR.Interaction.Toolkit.Filtering
namespace UnityEngine::XR::Interaction::Toolkit::Filtering {
  // Size: 0x4
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.XR.Interaction.Toolkit.Filtering.PokeAxis
  // [TokenAttribute] Offset: FFFFFFFF
  struct PokeAxis/*, public ::System::Enum*/ {
    public:
    public:
    // public System.Int32 value__
    // Size: 0x4
    // Offset: 0x0
    int value;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Creating value type constructor for type: PokeAxis
    constexpr PokeAxis(int value_ = {}) noexcept : value{value_} {}
    // Creating interface conversion operator: operator ::System::Enum
    operator ::System::Enum() noexcept {
      return *reinterpret_cast<::System::Enum*>(this);
    }
    // Creating conversion operator: operator int
    constexpr operator int() const noexcept {
      return value;
    }
    // static field const value: static public UnityEngine.XR.Interaction.Toolkit.Filtering.PokeAxis None
    static constexpr const int None = 0;
    // Get static field: static public UnityEngine.XR.Interaction.Toolkit.Filtering.PokeAxis None
    static ::UnityEngine::XR::Interaction::Toolkit::Filtering::PokeAxis _get_None();
    // Set static field: static public UnityEngine.XR.Interaction.Toolkit.Filtering.PokeAxis None
    static void _set_None(::UnityEngine::XR::Interaction::Toolkit::Filtering::PokeAxis value);
    // static field const value: static public UnityEngine.XR.Interaction.Toolkit.Filtering.PokeAxis X
    static constexpr const int X = 1;
    // Get static field: static public UnityEngine.XR.Interaction.Toolkit.Filtering.PokeAxis X
    static ::UnityEngine::XR::Interaction::Toolkit::Filtering::PokeAxis _get_X();
    // Set static field: static public UnityEngine.XR.Interaction.Toolkit.Filtering.PokeAxis X
    static void _set_X(::UnityEngine::XR::Interaction::Toolkit::Filtering::PokeAxis value);
    // static field const value: static public UnityEngine.XR.Interaction.Toolkit.Filtering.PokeAxis Y
    static constexpr const int Y = 2;
    // Get static field: static public UnityEngine.XR.Interaction.Toolkit.Filtering.PokeAxis Y
    static ::UnityEngine::XR::Interaction::Toolkit::Filtering::PokeAxis _get_Y();
    // Set static field: static public UnityEngine.XR.Interaction.Toolkit.Filtering.PokeAxis Y
    static void _set_Y(::UnityEngine::XR::Interaction::Toolkit::Filtering::PokeAxis value);
    // static field const value: static public UnityEngine.XR.Interaction.Toolkit.Filtering.PokeAxis Z
    static constexpr const int Z = 3;
    // Get static field: static public UnityEngine.XR.Interaction.Toolkit.Filtering.PokeAxis Z
    static ::UnityEngine::XR::Interaction::Toolkit::Filtering::PokeAxis _get_Z();
    // Set static field: static public UnityEngine.XR.Interaction.Toolkit.Filtering.PokeAxis Z
    static void _set_Z(::UnityEngine::XR::Interaction::Toolkit::Filtering::PokeAxis value);
    // static field const value: static public UnityEngine.XR.Interaction.Toolkit.Filtering.PokeAxis NegativeX
    static constexpr const int NegativeX = 4;
    // Get static field: static public UnityEngine.XR.Interaction.Toolkit.Filtering.PokeAxis NegativeX
    static ::UnityEngine::XR::Interaction::Toolkit::Filtering::PokeAxis _get_NegativeX();
    // Set static field: static public UnityEngine.XR.Interaction.Toolkit.Filtering.PokeAxis NegativeX
    static void _set_NegativeX(::UnityEngine::XR::Interaction::Toolkit::Filtering::PokeAxis value);
    // static field const value: static public UnityEngine.XR.Interaction.Toolkit.Filtering.PokeAxis NegativeY
    static constexpr const int NegativeY = 5;
    // Get static field: static public UnityEngine.XR.Interaction.Toolkit.Filtering.PokeAxis NegativeY
    static ::UnityEngine::XR::Interaction::Toolkit::Filtering::PokeAxis _get_NegativeY();
    // Set static field: static public UnityEngine.XR.Interaction.Toolkit.Filtering.PokeAxis NegativeY
    static void _set_NegativeY(::UnityEngine::XR::Interaction::Toolkit::Filtering::PokeAxis value);
    // static field const value: static public UnityEngine.XR.Interaction.Toolkit.Filtering.PokeAxis NegativeZ
    static constexpr const int NegativeZ = 6;
    // Get static field: static public UnityEngine.XR.Interaction.Toolkit.Filtering.PokeAxis NegativeZ
    static ::UnityEngine::XR::Interaction::Toolkit::Filtering::PokeAxis _get_NegativeZ();
    // Set static field: static public UnityEngine.XR.Interaction.Toolkit.Filtering.PokeAxis NegativeZ
    static void _set_NegativeZ(::UnityEngine::XR::Interaction::Toolkit::Filtering::PokeAxis value);
    // Get instance field reference: public System.Int32 value__
    [[deprecated("Use field access instead!")]] int& dyn_value__();
  }; // UnityEngine.XR.Interaction.Toolkit.Filtering.PokeAxis
  #pragma pack(pop)
  static check_size<sizeof(PokeAxis), 0 + sizeof(int)> __UnityEngine_XR_Interaction_Toolkit_Filtering_PokeAxisSizeCheck;
  static_assert(sizeof(PokeAxis) == 0x4);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
