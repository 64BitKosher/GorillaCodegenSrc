// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.IDisposable
#include "System/IDisposable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::XR::Interaction::Toolkit::Filtering
namespace UnityEngine::XR::Interaction::Toolkit::Filtering {
  // Forward declaring type: XRTargetFilter
  class XRTargetFilter;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: AnimationCurve
  class AnimationCurve;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Type
  class Type;
}
// Forward declaring namespace: UnityEngine::XR::Interaction::Toolkit
namespace UnityEngine::XR::Interaction::Toolkit {
  // Forward declaring type: IXRInteractor
  class IXRInteractor;
  // Forward declaring type: IXRInteractable
  class IXRInteractable;
}
// Completed forward declares
// Type namespace: UnityEngine.XR.Interaction.Toolkit.Filtering
namespace UnityEngine::XR::Interaction::Toolkit::Filtering {
  // Forward declaring type: XRTargetEvaluator
  class XRTargetEvaluator;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetEvaluator);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetEvaluator*, "UnityEngine.XR.Interaction.Toolkit.Filtering", "XRTargetEvaluator");
// Type namespace: UnityEngine.XR.Interaction.Toolkit.Filtering
namespace UnityEngine::XR::Interaction::Toolkit::Filtering {
  // Size: 0x2B
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.XR.Interaction.Toolkit.Filtering.XRTargetEvaluator
  // [TokenAttribute] Offset: FFFFFFFF
  class XRTargetEvaluator : public ::Il2CppObject/*, public ::System::IDisposable*/ {
    public:
    public:
    // private UnityEngine.XR.Interaction.Toolkit.Filtering.XRTargetFilter m_Filter
    // Size: 0x8
    // Offset: 0x10
    ::UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetFilter* m_Filter;
    // Field size check
    static_assert(sizeof(::UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetFilter*) == 0x8);
    // private System.Boolean m_Enabled
    // Size: 0x1
    // Offset: 0x18
    bool m_Enabled;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: m_Enabled and: m_Weight
    char __padding1[0x7] = {};
    // private UnityEngine.AnimationCurve m_Weight
    // Size: 0x8
    // Offset: 0x20
    ::UnityEngine::AnimationCurve* m_Weight;
    // Field size check
    static_assert(sizeof(::UnityEngine::AnimationCurve*) == 0x8);
    // private System.Boolean m_IsAwake
    // Size: 0x1
    // Offset: 0x28
    bool m_IsAwake;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean m_IsEnabled
    // Size: 0x1
    // Offset: 0x29
    bool m_IsEnabled;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean m_IsRegistered
    // Size: 0x1
    // Offset: 0x2A
    bool m_IsRegistered;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    public:
    // Creating interface conversion operator: operator ::System::IDisposable
    operator ::System::IDisposable() noexcept {
      return *reinterpret_cast<::System::IDisposable*>(this);
    }
    // Get instance field reference: private UnityEngine.XR.Interaction.Toolkit.Filtering.XRTargetFilter m_Filter
    [[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetFilter*& dyn_m_Filter();
    // Get instance field reference: private System.Boolean m_Enabled
    [[deprecated("Use field access instead!")]] bool& dyn_m_Enabled();
    // Get instance field reference: private UnityEngine.AnimationCurve m_Weight
    [[deprecated("Use field access instead!")]] ::UnityEngine::AnimationCurve*& dyn_m_Weight();
    // Get instance field reference: private System.Boolean m_IsAwake
    [[deprecated("Use field access instead!")]] bool& dyn_m_IsAwake();
    // Get instance field reference: private System.Boolean m_IsEnabled
    [[deprecated("Use field access instead!")]] bool& dyn_m_IsEnabled();
    // Get instance field reference: private System.Boolean m_IsRegistered
    [[deprecated("Use field access instead!")]] bool& dyn_m_IsRegistered();
    // static System.Boolean IsInstanceType(System.Type evaluatorType)
    // Offset: 0x542EF98
    static bool IsInstanceType(::System::Type* evaluatorType);
    // static UnityEngine.XR.Interaction.Toolkit.Filtering.XRTargetEvaluator CreateInstance(System.Type evaluatorType, UnityEngine.XR.Interaction.Toolkit.Filtering.XRTargetFilter filter)
    // Offset: 0x542F094
    static ::UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetEvaluator* CreateInstance(::System::Type* evaluatorType, ::UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetFilter* filter);
    // public UnityEngine.XR.Interaction.Toolkit.Filtering.XRTargetFilter get_filter()
    // Offset: 0x542F178
    ::UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetFilter* get_filter();
    // public System.Boolean get_enabled()
    // Offset: 0x542F180
    bool get_enabled();
    // public System.Void set_enabled(System.Boolean value)
    // Offset: 0x542F188
    void set_enabled(bool value);
    // public UnityEngine.AnimationCurve get_weight()
    // Offset: 0x542F418
    ::UnityEngine::AnimationCurve* get_weight();
    // public System.Void set_weight(UnityEngine.AnimationCurve value)
    // Offset: 0x542F420
    void set_weight(::UnityEngine::AnimationCurve* value);
    // public System.Boolean get_disposed()
    // Offset: 0x542F360
    bool get_disposed();
    // private System.Void RegisterHandlers()
    // Offset: 0x542F428
    void RegisterHandlers();
    // private System.Void UnregisterHandlers()
    // Offset: 0x542F728
    void UnregisterHandlers();
    // System.Void AwakeInternal()
    // Offset: 0x542FA28
    void AwakeInternal();
    // System.Void DisposeInternal()
    // Offset: 0x542FA6C
    void DisposeInternal();
    // System.Void EnableInternal()
    // Offset: 0x542F3C0
    void EnableInternal();
    // System.Void DisableInternal()
    // Offset: 0x542F3FC
    void DisableInternal();
    // protected System.Void Awake()
    // Offset: 0x542FAB0
    void Awake();
    // protected System.Void OnDispose()
    // Offset: 0x542FAB4
    void OnDispose();
    // protected System.Void OnEnable()
    // Offset: 0x542E414
    void OnEnable();
    // protected System.Void OnDisable()
    // Offset: 0x542EE50
    void OnDisable();
    // public System.Void Reset()
    // Offset: 0x542E41C
    void Reset();
    // public System.Single GetWeightedScore(UnityEngine.XR.Interaction.Toolkit.IXRInteractor interactor, UnityEngine.XR.Interaction.Toolkit.IXRInteractable target)
    // Offset: 0x542FAB8
    float GetWeightedScore(::UnityEngine::XR::Interaction::Toolkit::IXRInteractor* interactor, ::UnityEngine::XR::Interaction::Toolkit::IXRInteractable* target);
    // protected System.Single CalculateNormalizedScore(UnityEngine.XR.Interaction.Toolkit.IXRInteractor interactor, UnityEngine.XR.Interaction.Toolkit.IXRInteractable target)
    // Offset: 0xFFFFFFFFFFFFFFFF
    float CalculateNormalizedScore(::UnityEngine::XR::Interaction::Toolkit::IXRInteractor* interactor, ::UnityEngine::XR::Interaction::Toolkit::IXRInteractable* target);
    // public System.Void Dispose()
    // Offset: 0x542FAE4
    void Dispose();
    // protected System.Void .ctor()
    // Offset: 0x542E740
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static XRTargetEvaluator* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetEvaluator::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<XRTargetEvaluator*, creationType>()));
    }
  }; // UnityEngine.XR.Interaction.Toolkit.Filtering.XRTargetEvaluator
  #pragma pack(pop)
  static check_size<sizeof(XRTargetEvaluator), 42 + sizeof(bool)> __UnityEngine_XR_Interaction_Toolkit_Filtering_XRTargetEvaluatorSizeCheck;
  static_assert(sizeof(XRTargetEvaluator) == 0x2B);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetEvaluator::IsInstanceType
// Il2CppName: IsInstanceType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::System::Type*)>(&UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetEvaluator::IsInstanceType)> {
  static const MethodInfo* get() {
    static auto* evaluatorType = &::il2cpp_utils::GetClassFromName("System", "Type")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetEvaluator*), "IsInstanceType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{evaluatorType});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetEvaluator::CreateInstance
// Il2CppName: CreateInstance
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetEvaluator* (*)(::System::Type*, ::UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetFilter*)>(&UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetEvaluator::CreateInstance)> {
  static const MethodInfo* get() {
    static auto* evaluatorType = &::il2cpp_utils::GetClassFromName("System", "Type")->byval_arg;
    static auto* filter = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit.Filtering", "XRTargetFilter")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetEvaluator*), "CreateInstance", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{evaluatorType, filter});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetEvaluator::get_filter
// Il2CppName: get_filter
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetFilter* (UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetEvaluator::*)()>(&UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetEvaluator::get_filter)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetEvaluator*), "get_filter", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetEvaluator::get_enabled
// Il2CppName: get_enabled
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetEvaluator::*)()>(&UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetEvaluator::get_enabled)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetEvaluator*), "get_enabled", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetEvaluator::set_enabled
// Il2CppName: set_enabled
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetEvaluator::*)(bool)>(&UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetEvaluator::set_enabled)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetEvaluator*), "set_enabled", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetEvaluator::get_weight
// Il2CppName: get_weight
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::AnimationCurve* (UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetEvaluator::*)()>(&UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetEvaluator::get_weight)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetEvaluator*), "get_weight", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetEvaluator::set_weight
// Il2CppName: set_weight
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetEvaluator::*)(::UnityEngine::AnimationCurve*)>(&UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetEvaluator::set_weight)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "AnimationCurve")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetEvaluator*), "set_weight", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetEvaluator::get_disposed
// Il2CppName: get_disposed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetEvaluator::*)()>(&UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetEvaluator::get_disposed)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetEvaluator*), "get_disposed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetEvaluator::RegisterHandlers
// Il2CppName: RegisterHandlers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetEvaluator::*)()>(&UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetEvaluator::RegisterHandlers)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetEvaluator*), "RegisterHandlers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetEvaluator::UnregisterHandlers
// Il2CppName: UnregisterHandlers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetEvaluator::*)()>(&UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetEvaluator::UnregisterHandlers)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetEvaluator*), "UnregisterHandlers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetEvaluator::AwakeInternal
// Il2CppName: AwakeInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetEvaluator::*)()>(&UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetEvaluator::AwakeInternal)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetEvaluator*), "AwakeInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetEvaluator::DisposeInternal
// Il2CppName: DisposeInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetEvaluator::*)()>(&UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetEvaluator::DisposeInternal)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetEvaluator*), "DisposeInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetEvaluator::EnableInternal
// Il2CppName: EnableInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetEvaluator::*)()>(&UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetEvaluator::EnableInternal)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetEvaluator*), "EnableInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetEvaluator::DisableInternal
// Il2CppName: DisableInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetEvaluator::*)()>(&UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetEvaluator::DisableInternal)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetEvaluator*), "DisableInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetEvaluator::Awake
// Il2CppName: Awake
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetEvaluator::*)()>(&UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetEvaluator::Awake)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetEvaluator*), "Awake", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetEvaluator::OnDispose
// Il2CppName: OnDispose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetEvaluator::*)()>(&UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetEvaluator::OnDispose)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetEvaluator*), "OnDispose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetEvaluator::OnEnable
// Il2CppName: OnEnable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetEvaluator::*)()>(&UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetEvaluator::OnEnable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetEvaluator*), "OnEnable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetEvaluator::OnDisable
// Il2CppName: OnDisable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetEvaluator::*)()>(&UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetEvaluator::OnDisable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetEvaluator*), "OnDisable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetEvaluator::Reset
// Il2CppName: Reset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetEvaluator::*)()>(&UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetEvaluator::Reset)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetEvaluator*), "Reset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetEvaluator::GetWeightedScore
// Il2CppName: GetWeightedScore
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetEvaluator::*)(::UnityEngine::XR::Interaction::Toolkit::IXRInteractor*, ::UnityEngine::XR::Interaction::Toolkit::IXRInteractable*)>(&UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetEvaluator::GetWeightedScore)> {
  static const MethodInfo* get() {
    static auto* interactor = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "IXRInteractor")->byval_arg;
    static auto* target = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "IXRInteractable")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetEvaluator*), "GetWeightedScore", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactor, target});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetEvaluator::CalculateNormalizedScore
// Il2CppName: CalculateNormalizedScore
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetEvaluator::*)(::UnityEngine::XR::Interaction::Toolkit::IXRInteractor*, ::UnityEngine::XR::Interaction::Toolkit::IXRInteractable*)>(&UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetEvaluator::CalculateNormalizedScore)> {
  static const MethodInfo* get() {
    static auto* interactor = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "IXRInteractor")->byval_arg;
    static auto* target = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "IXRInteractable")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetEvaluator*), "CalculateNormalizedScore", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactor, target});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetEvaluator::Dispose
// Il2CppName: Dispose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetEvaluator::*)()>(&UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetEvaluator::Dispose)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetEvaluator*), "Dispose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetEvaluator::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
