// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.Filtering.XRBaseTargetFilter
#include "UnityEngine/XR/Interaction/Toolkit/Filtering/XRBaseTargetFilter.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::XR::Interaction::Toolkit::Filtering
namespace UnityEngine::XR::Interaction::Toolkit::Filtering {
  // Forward declaring type: XRTargetEvaluator
  class XRTargetEvaluator;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
  // Forward declaring type: Dictionary`2<TKey, TValue>
  template<typename TKey, typename TValue>
  class Dictionary_2;
  // Forward declaring type: IEnumerator`1<T>
  template<typename T>
  class IEnumerator_1;
}
// Forward declaring namespace: UnityEngine::XR::Interaction::Toolkit
namespace UnityEngine::XR::Interaction::Toolkit {
  // Forward declaring type: IXRInteractor
  class IXRInteractor;
  // Forward declaring type: IXRInteractable
  class IXRInteractable;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Action`1<T>
  template<typename T>
  class Action_1;
  // Forward declaring type: Comparison`1<T>
  template<typename T>
  class Comparison_1;
  // Forward declaring type: Type
  class Type;
}
// Forward declaring namespace: UnityEngine::XR::Interaction::Toolkit::Utilities::Pooling
namespace UnityEngine::XR::Interaction::Toolkit::Utilities::Pooling {
  // Forward declaring type: LinkedPool`1<T>
  template<typename T>
  class LinkedPool_1;
}
// Forward declaring namespace: System::Collections
namespace System::Collections {
  // Forward declaring type: IEnumerator
  class IEnumerator;
}
// Completed forward declares
// Type namespace: UnityEngine.XR.Interaction.Toolkit.Filtering
namespace UnityEngine::XR::Interaction::Toolkit::Filtering {
  // Forward declaring type: XRTargetFilter
  class XRTargetFilter;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetFilter);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetFilter*, "UnityEngine.XR.Interaction.Toolkit.Filtering", "XRTargetFilter");
// Type namespace: UnityEngine.XR.Interaction.Toolkit.Filtering
namespace UnityEngine::XR::Interaction::Toolkit::Filtering {
  // Size: 0x48
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.XR.Interaction.Toolkit.Filtering.XRTargetFilter
  // [TokenAttribute] Offset: FFFFFFFF
  // [HelpURLAttribute] Offset: FFFFFFFF
  // [AddComponentMenu] Offset: FFFFFFFF
  class XRTargetFilter : public ::UnityEngine::XR::Interaction::Toolkit::Filtering::XRBaseTargetFilter/*, public ::System::Collections::Generic::IEnumerable_1<::UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetEvaluator*>*/ {
    public:
    // Nested type: ::UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetFilter::$$c
    class $$c;
    public:
    // private System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.IXRInteractor> m_LinkedInteractors
    // Size: 0x8
    // Offset: 0x20
    ::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::IXRInteractor*>* m_LinkedInteractors;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::IXRInteractor*>*) == 0x8);
    // private System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.Filtering.XRTargetEvaluator> m_Evaluators
    // Size: 0x8
    // Offset: 0x28
    ::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetEvaluator*>* m_Evaluators;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetEvaluator*>*) == 0x8);
    // private System.Boolean m_IsAwake
    // Size: 0x1
    // Offset: 0x30
    bool m_IsAwake;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean <isProcessing>k__BackingField
    // Size: 0x1
    // Offset: 0x31
    bool isProcessing;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: isProcessing and: interactorLinked
    char __padding3[0x6] = {};
    // private System.Action`1<UnityEngine.XR.Interaction.Toolkit.IXRInteractor> interactorLinked
    // Size: 0x8
    // Offset: 0x38
    ::System::Action_1<::UnityEngine::XR::Interaction::Toolkit::IXRInteractor*>* interactorLinked;
    // Field size check
    static_assert(sizeof(::System::Action_1<::UnityEngine::XR::Interaction::Toolkit::IXRInteractor*>*) == 0x8);
    // private System.Action`1<UnityEngine.XR.Interaction.Toolkit.IXRInteractor> interactorUnlinked
    // Size: 0x8
    // Offset: 0x40
    ::System::Action_1<::UnityEngine::XR::Interaction::Toolkit::IXRInteractor*>* interactorUnlinked;
    // Field size check
    static_assert(sizeof(::System::Action_1<::UnityEngine::XR::Interaction::Toolkit::IXRInteractor*>*) == 0x8);
    public:
    // Creating interface conversion operator: operator ::System::Collections::Generic::IEnumerable_1<::UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetEvaluator*>
    operator ::System::Collections::Generic::IEnumerable_1<::UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetEvaluator*>() noexcept {
      return *reinterpret_cast<::System::Collections::Generic::IEnumerable_1<::UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetEvaluator*>*>(this);
    }
    // Get static field: static private readonly UnityEngine.XR.Interaction.Toolkit.Utilities.Pooling.LinkedPool`1<System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.Filtering.XRTargetEvaluator>> s_EvaluatorListPool
    static ::UnityEngine::XR::Interaction::Toolkit::Utilities::Pooling::LinkedPool_1<::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetEvaluator*>*>* _get_s_EvaluatorListPool();
    // Set static field: static private readonly UnityEngine.XR.Interaction.Toolkit.Utilities.Pooling.LinkedPool`1<System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.Filtering.XRTargetEvaluator>> s_EvaluatorListPool
    static void _set_s_EvaluatorListPool(::UnityEngine::XR::Interaction::Toolkit::Utilities::Pooling::LinkedPool_1<::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetEvaluator*>*>* value);
    // Get static field: static private readonly System.Collections.Generic.Dictionary`2<UnityEngine.XR.Interaction.Toolkit.IXRInteractable,System.Single> s_InteractableFinalScoreMap
    static ::System::Collections::Generic::Dictionary_2<::UnityEngine::XR::Interaction::Toolkit::IXRInteractable*, float>* _get_s_InteractableFinalScoreMap();
    // Set static field: static private readonly System.Collections.Generic.Dictionary`2<UnityEngine.XR.Interaction.Toolkit.IXRInteractable,System.Single> s_InteractableFinalScoreMap
    static void _set_s_InteractableFinalScoreMap(::System::Collections::Generic::Dictionary_2<::UnityEngine::XR::Interaction::Toolkit::IXRInteractable*, float>* value);
    // Get static field: static private readonly System.Comparison`1<UnityEngine.XR.Interaction.Toolkit.IXRInteractable> s_InteractableScoreComparison
    static ::System::Comparison_1<::UnityEngine::XR::Interaction::Toolkit::IXRInteractable*>* _get_s_InteractableScoreComparison();
    // Set static field: static private readonly System.Comparison`1<UnityEngine.XR.Interaction.Toolkit.IXRInteractable> s_InteractableScoreComparison
    static void _set_s_InteractableScoreComparison(::System::Comparison_1<::UnityEngine::XR::Interaction::Toolkit::IXRInteractable*>* value);
    // Get instance field reference: private System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.IXRInteractor> m_LinkedInteractors
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::IXRInteractor*>*& dyn_m_LinkedInteractors();
    // Get instance field reference: private System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.Filtering.XRTargetEvaluator> m_Evaluators
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetEvaluator*>*& dyn_m_Evaluators();
    // Get instance field reference: private System.Boolean m_IsAwake
    [[deprecated("Use field access instead!")]] bool& dyn_m_IsAwake();
    // Get instance field reference: private System.Boolean <isProcessing>k__BackingField
    [[deprecated("Use field access instead!")]] bool& dyn_$isProcessing$k__BackingField();
    // Get instance field reference: private System.Action`1<UnityEngine.XR.Interaction.Toolkit.IXRInteractor> interactorLinked
    [[deprecated("Use field access instead!")]] ::System::Action_1<::UnityEngine::XR::Interaction::Toolkit::IXRInteractor*>*& dyn_interactorLinked();
    // Get instance field reference: private System.Action`1<UnityEngine.XR.Interaction.Toolkit.IXRInteractor> interactorUnlinked
    [[deprecated("Use field access instead!")]] ::System::Action_1<::UnityEngine::XR::Interaction::Toolkit::IXRInteractor*>*& dyn_interactorUnlinked();
    // static private System.Int32 InteractableScoreDescendingComparison(UnityEngine.XR.Interaction.Toolkit.IXRInteractable x, UnityEngine.XR.Interaction.Toolkit.IXRInteractable y)
    // Offset: 0x542FC78
    static int InteractableScoreDescendingComparison(::UnityEngine::XR::Interaction::Toolkit::IXRInteractable* x, ::UnityEngine::XR::Interaction::Toolkit::IXRInteractable* y);
    // System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.IXRInteractor> get_linkedInteractors()
    // Offset: 0x542FD44
    ::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::IXRInteractor*>* get_linkedInteractors();
    // System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.Filtering.XRTargetEvaluator> get_evaluators()
    // Offset: 0x542FD4C
    ::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetEvaluator*>* get_evaluators();
    // public System.Int32 get_evaluatorCount()
    // Offset: 0x542FD54
    int get_evaluatorCount();
    // System.Boolean get_isProcessing()
    // Offset: 0x542FD9C
    bool get_isProcessing();
    // private System.Void set_isProcessing(System.Boolean value)
    // Offset: 0x542FDA4
    void set_isProcessing(bool value);
    // public System.Void add_interactorLinked(System.Action`1<UnityEngine.XR.Interaction.Toolkit.IXRInteractor> value)
    // Offset: 0x542FDB0
    void add_interactorLinked(::System::Action_1<::UnityEngine::XR::Interaction::Toolkit::IXRInteractor*>* value);
    // public System.Void remove_interactorLinked(System.Action`1<UnityEngine.XR.Interaction.Toolkit.IXRInteractor> value)
    // Offset: 0x542FE60
    void remove_interactorLinked(::System::Action_1<::UnityEngine::XR::Interaction::Toolkit::IXRInteractor*>* value);
    // public System.Void add_interactorUnlinked(System.Action`1<UnityEngine.XR.Interaction.Toolkit.IXRInteractor> value)
    // Offset: 0x542FF10
    void add_interactorUnlinked(::System::Action_1<::UnityEngine::XR::Interaction::Toolkit::IXRInteractor*>* value);
    // public System.Void remove_interactorUnlinked(System.Action`1<UnityEngine.XR.Interaction.Toolkit.IXRInteractor> value)
    // Offset: 0x542FFC0
    void remove_interactorUnlinked(::System::Action_1<::UnityEngine::XR::Interaction::Toolkit::IXRInteractor*>* value);
    // private System.Void Awake()
    // Offset: 0x5430088
    void Awake();
    // private System.Void OnEnable()
    // Offset: 0x5430308
    void OnEnable();
    // private System.Void OnDisable()
    // Offset: 0x54304E0
    void OnDisable();
    // private System.Void OnDestroy()
    // Offset: 0x5430900
    void OnDestroy();
    // private System.Void Reset()
    // Offset: 0x5430B54
    void Reset();
    // System.Void RegisterEvaluatorHandlers(UnityEngine.XR.Interaction.Toolkit.Filtering.XRTargetEvaluator evaluator)
    // Offset: 0x542F468
    void RegisterEvaluatorHandlers(::UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetEvaluator* evaluator);
    // System.Void UnregisterEvaluatorHandlers(UnityEngine.XR.Interaction.Toolkit.Filtering.XRTargetEvaluator evaluator)
    // Offset: 0x542F764
    void UnregisterEvaluatorHandlers(::UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetEvaluator* evaluator);
    // public System.Void GetLinkedInteractors(System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.IXRInteractor> results)
    // Offset: 0x5430BB0
    void GetLinkedInteractors(::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::IXRInteractor*>* results);
    // public System.Void GetEvaluators(System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.Filtering.XRTargetEvaluator> results)
    // Offset: 0x543023C
    void GetEvaluators(::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetEvaluator*>* results);
    // private System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()
    // Offset: 0x5430C7C
    ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator();
    // public System.Collections.Generic.IEnumerator`1<UnityEngine.XR.Interaction.Toolkit.Filtering.XRTargetEvaluator> GetEnumerator()
    // Offset: 0x5430D1C
    ::System::Collections::Generic::IEnumerator_1<::UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetEvaluator*>* GetEnumerator();
    // public UnityEngine.XR.Interaction.Toolkit.Filtering.XRTargetEvaluator GetEvaluatorAt(System.Int32 index)
    // Offset: 0x5430DAC
    ::UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetEvaluator* GetEvaluatorAt(int index);
    // public UnityEngine.XR.Interaction.Toolkit.Filtering.XRTargetEvaluator GetEvaluator(System.Type type)
    // Offset: 0x5430E04
    ::UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetEvaluator* GetEvaluator(::System::Type* type);
    // public T GetEvaluator()
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class T>
    T GetEvaluator() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetFilter::GetEvaluator");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEvaluator", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}, ::std::vector<const Il2CppType*>{})));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}));
      return ::il2cpp_utils::RunMethodRethrow<T, false>(this, ___generic__method);
    }
    // public System.Void GetEnabledEvaluators(System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.Filtering.XRTargetEvaluator> results)
    // Offset: 0x54306B8
    void GetEnabledEvaluators(::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetEvaluator*>* results);
    // public UnityEngine.XR.Interaction.Toolkit.Filtering.XRTargetEvaluator AddEvaluator(System.Type evaluatorType)
    // Offset: 0x5430FE8
    ::UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetEvaluator* AddEvaluator(::System::Type* evaluatorType);
    // public T AddEvaluator()
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class T>
    T AddEvaluator() {
      static_assert(std::is_convertible_v<T, ::UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetEvaluator*>);
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetFilter::AddEvaluator");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddEvaluator", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}, ::std::vector<const Il2CppType*>{})));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}));
      return ::il2cpp_utils::RunMethodRethrow<T, false>(this, ___generic__method);
    }
    // public System.Void RemoveEvaluatorAt(System.Int32 index)
    // Offset: 0x5431164
    void RemoveEvaluatorAt(int index);
    // public System.Void RemoveEvaluator(UnityEngine.XR.Interaction.Toolkit.Filtering.XRTargetEvaluator evaluator)
    // Offset: 0x542FB68
    void RemoveEvaluator(::UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetEvaluator* evaluator);
    // public System.Void MoveEvaluatorTo(UnityEngine.XR.Interaction.Toolkit.Filtering.XRTargetEvaluator evaluator, System.Int32 newIndex)
    // Offset: 0x54312B4
    void MoveEvaluatorTo(::UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetEvaluator* evaluator, int newIndex);
    // static private System.Void .cctor()
    // Offset: 0x5431DD0
    static void _cctor();
    // public override System.Boolean get_canProcess()
    // Offset: 0x5430070
    // Implemented from: UnityEngine.XR.Interaction.Toolkit.Filtering.XRBaseTargetFilter
    // Base method: System.Boolean XRBaseTargetFilter::get_canProcess()
    bool get_canProcess();
    // public override System.Void Link(UnityEngine.XR.Interaction.Toolkit.IXRInteractor interactor)
    // Offset: 0x5431388
    // Implemented from: UnityEngine.XR.Interaction.Toolkit.Filtering.XRBaseTargetFilter
    // Base method: System.Void XRBaseTargetFilter::Link(UnityEngine.XR.Interaction.Toolkit.IXRInteractor interactor)
    void Link(::UnityEngine::XR::Interaction::Toolkit::IXRInteractor* interactor);
    // public override System.Void Unlink(UnityEngine.XR.Interaction.Toolkit.IXRInteractor interactor)
    // Offset: 0x54314D0
    // Implemented from: UnityEngine.XR.Interaction.Toolkit.Filtering.XRBaseTargetFilter
    // Base method: System.Void XRBaseTargetFilter::Unlink(UnityEngine.XR.Interaction.Toolkit.IXRInteractor interactor)
    void Unlink(::UnityEngine::XR::Interaction::Toolkit::IXRInteractor* interactor);
    // public override System.Void Process(UnityEngine.XR.Interaction.Toolkit.IXRInteractor interactor, System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.IXRInteractable> targets, System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.IXRInteractable> results)
    // Offset: 0x5431610
    // Implemented from: UnityEngine.XR.Interaction.Toolkit.Filtering.XRBaseTargetFilter
    // Base method: System.Void XRBaseTargetFilter::Process(UnityEngine.XR.Interaction.Toolkit.IXRInteractor interactor, System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.IXRInteractable> targets, System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.IXRInteractable> results)
    void Process(::UnityEngine::XR::Interaction::Toolkit::IXRInteractor* interactor, ::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::IXRInteractable*>* targets, ::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::IXRInteractable*>* results);
    // public System.Void .ctor()
    // Offset: 0x5431CF4
    // Implemented from: UnityEngine.XR.Interaction.Toolkit.Filtering.XRBaseTargetFilter
    // Base method: System.Void XRBaseTargetFilter::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static XRTargetFilter* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetFilter::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<XRTargetFilter*, creationType>()));
    }
  }; // UnityEngine.XR.Interaction.Toolkit.Filtering.XRTargetFilter
  #pragma pack(pop)
  static check_size<sizeof(XRTargetFilter), 64 + sizeof(::System::Action_1<::UnityEngine::XR::Interaction::Toolkit::IXRInteractor*>*)> __UnityEngine_XR_Interaction_Toolkit_Filtering_XRTargetFilterSizeCheck;
  static_assert(sizeof(XRTargetFilter) == 0x48);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetFilter::InteractableScoreDescendingComparison
// Il2CppName: InteractableScoreDescendingComparison
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::UnityEngine::XR::Interaction::Toolkit::IXRInteractable*, ::UnityEngine::XR::Interaction::Toolkit::IXRInteractable*)>(&UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetFilter::InteractableScoreDescendingComparison)> {
  static const MethodInfo* get() {
    static auto* x = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "IXRInteractable")->byval_arg;
    static auto* y = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "IXRInteractable")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetFilter*), "InteractableScoreDescendingComparison", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{x, y});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetFilter::get_linkedInteractors
// Il2CppName: get_linkedInteractors
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::IXRInteractor*>* (UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetFilter::*)()>(&UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetFilter::get_linkedInteractors)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetFilter*), "get_linkedInteractors", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetFilter::get_evaluators
// Il2CppName: get_evaluators
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetEvaluator*>* (UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetFilter::*)()>(&UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetFilter::get_evaluators)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetFilter*), "get_evaluators", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetFilter::get_evaluatorCount
// Il2CppName: get_evaluatorCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetFilter::*)()>(&UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetFilter::get_evaluatorCount)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetFilter*), "get_evaluatorCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetFilter::get_isProcessing
// Il2CppName: get_isProcessing
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetFilter::*)()>(&UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetFilter::get_isProcessing)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetFilter*), "get_isProcessing", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetFilter::set_isProcessing
// Il2CppName: set_isProcessing
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetFilter::*)(bool)>(&UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetFilter::set_isProcessing)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetFilter*), "set_isProcessing", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetFilter::add_interactorLinked
// Il2CppName: add_interactorLinked
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetFilter::*)(::System::Action_1<::UnityEngine::XR::Interaction::Toolkit::IXRInteractor*>*)>(&UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetFilter::add_interactorLinked)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "IXRInteractor")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetFilter*), "add_interactorLinked", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetFilter::remove_interactorLinked
// Il2CppName: remove_interactorLinked
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetFilter::*)(::System::Action_1<::UnityEngine::XR::Interaction::Toolkit::IXRInteractor*>*)>(&UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetFilter::remove_interactorLinked)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "IXRInteractor")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetFilter*), "remove_interactorLinked", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetFilter::add_interactorUnlinked
// Il2CppName: add_interactorUnlinked
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetFilter::*)(::System::Action_1<::UnityEngine::XR::Interaction::Toolkit::IXRInteractor*>*)>(&UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetFilter::add_interactorUnlinked)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "IXRInteractor")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetFilter*), "add_interactorUnlinked", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetFilter::remove_interactorUnlinked
// Il2CppName: remove_interactorUnlinked
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetFilter::*)(::System::Action_1<::UnityEngine::XR::Interaction::Toolkit::IXRInteractor*>*)>(&UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetFilter::remove_interactorUnlinked)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "IXRInteractor")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetFilter*), "remove_interactorUnlinked", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetFilter::Awake
// Il2CppName: Awake
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetFilter::*)()>(&UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetFilter::Awake)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetFilter*), "Awake", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetFilter::OnEnable
// Il2CppName: OnEnable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetFilter::*)()>(&UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetFilter::OnEnable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetFilter*), "OnEnable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetFilter::OnDisable
// Il2CppName: OnDisable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetFilter::*)()>(&UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetFilter::OnDisable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetFilter*), "OnDisable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetFilter::OnDestroy
// Il2CppName: OnDestroy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetFilter::*)()>(&UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetFilter::OnDestroy)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetFilter*), "OnDestroy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetFilter::Reset
// Il2CppName: Reset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetFilter::*)()>(&UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetFilter::Reset)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetFilter*), "Reset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetFilter::RegisterEvaluatorHandlers
// Il2CppName: RegisterEvaluatorHandlers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetFilter::*)(::UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetEvaluator*)>(&UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetFilter::RegisterEvaluatorHandlers)> {
  static const MethodInfo* get() {
    static auto* evaluator = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit.Filtering", "XRTargetEvaluator")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetFilter*), "RegisterEvaluatorHandlers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{evaluator});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetFilter::UnregisterEvaluatorHandlers
// Il2CppName: UnregisterEvaluatorHandlers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetFilter::*)(::UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetEvaluator*)>(&UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetFilter::UnregisterEvaluatorHandlers)> {
  static const MethodInfo* get() {
    static auto* evaluator = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit.Filtering", "XRTargetEvaluator")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetFilter*), "UnregisterEvaluatorHandlers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{evaluator});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetFilter::GetLinkedInteractors
// Il2CppName: GetLinkedInteractors
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetFilter::*)(::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::IXRInteractor*>*)>(&UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetFilter::GetLinkedInteractors)> {
  static const MethodInfo* get() {
    static auto* results = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "IXRInteractor")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetFilter*), "GetLinkedInteractors", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{results});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetFilter::GetEvaluators
// Il2CppName: GetEvaluators
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetFilter::*)(::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetEvaluator*>*)>(&UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetFilter::GetEvaluators)> {
  static const MethodInfo* get() {
    static auto* results = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit.Filtering", "XRTargetEvaluator")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetFilter*), "GetEvaluators", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{results});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetFilter::System_Collections_IEnumerable_GetEnumerator
// Il2CppName: System.Collections.IEnumerable.GetEnumerator
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::IEnumerator* (UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetFilter::*)()>(&UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetFilter::System_Collections_IEnumerable_GetEnumerator)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetFilter*), "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetFilter::GetEnumerator
// Il2CppName: GetEnumerator
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::IEnumerator_1<::UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetEvaluator*>* (UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetFilter::*)()>(&UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetFilter::GetEnumerator)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetFilter*), "GetEnumerator", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetFilter::GetEvaluatorAt
// Il2CppName: GetEvaluatorAt
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetEvaluator* (UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetFilter::*)(int)>(&UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetFilter::GetEvaluatorAt)> {
  static const MethodInfo* get() {
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetFilter*), "GetEvaluatorAt", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{index});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetFilter::GetEvaluator
// Il2CppName: GetEvaluator
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetEvaluator* (UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetFilter::*)(::System::Type*)>(&UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetFilter::GetEvaluator)> {
  static const MethodInfo* get() {
    static auto* type = &::il2cpp_utils::GetClassFromName("System", "Type")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetFilter*), "GetEvaluator", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{type});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetFilter::GetEvaluator
// Il2CppName: GetEvaluator
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetFilter::GetEnabledEvaluators
// Il2CppName: GetEnabledEvaluators
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetFilter::*)(::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetEvaluator*>*)>(&UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetFilter::GetEnabledEvaluators)> {
  static const MethodInfo* get() {
    static auto* results = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit.Filtering", "XRTargetEvaluator")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetFilter*), "GetEnabledEvaluators", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{results});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetFilter::AddEvaluator
// Il2CppName: AddEvaluator
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetEvaluator* (UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetFilter::*)(::System::Type*)>(&UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetFilter::AddEvaluator)> {
  static const MethodInfo* get() {
    static auto* evaluatorType = &::il2cpp_utils::GetClassFromName("System", "Type")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetFilter*), "AddEvaluator", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{evaluatorType});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetFilter::AddEvaluator
// Il2CppName: AddEvaluator
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetFilter::RemoveEvaluatorAt
// Il2CppName: RemoveEvaluatorAt
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetFilter::*)(int)>(&UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetFilter::RemoveEvaluatorAt)> {
  static const MethodInfo* get() {
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetFilter*), "RemoveEvaluatorAt", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{index});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetFilter::RemoveEvaluator
// Il2CppName: RemoveEvaluator
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetFilter::*)(::UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetEvaluator*)>(&UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetFilter::RemoveEvaluator)> {
  static const MethodInfo* get() {
    static auto* evaluator = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit.Filtering", "XRTargetEvaluator")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetFilter*), "RemoveEvaluator", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{evaluator});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetFilter::MoveEvaluatorTo
// Il2CppName: MoveEvaluatorTo
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetFilter::*)(::UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetEvaluator*, int)>(&UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetFilter::MoveEvaluatorTo)> {
  static const MethodInfo* get() {
    static auto* evaluator = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit.Filtering", "XRTargetEvaluator")->byval_arg;
    static auto* newIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetFilter*), "MoveEvaluatorTo", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{evaluator, newIndex});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetFilter::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetFilter::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetFilter*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetFilter::get_canProcess
// Il2CppName: get_canProcess
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetFilter::*)()>(&UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetFilter::get_canProcess)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetFilter*), "get_canProcess", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetFilter::Link
// Il2CppName: Link
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetFilter::*)(::UnityEngine::XR::Interaction::Toolkit::IXRInteractor*)>(&UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetFilter::Link)> {
  static const MethodInfo* get() {
    static auto* interactor = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "IXRInteractor")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetFilter*), "Link", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactor});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetFilter::Unlink
// Il2CppName: Unlink
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetFilter::*)(::UnityEngine::XR::Interaction::Toolkit::IXRInteractor*)>(&UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetFilter::Unlink)> {
  static const MethodInfo* get() {
    static auto* interactor = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "IXRInteractor")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetFilter*), "Unlink", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactor});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetFilter::Process
// Il2CppName: Process
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetFilter::*)(::UnityEngine::XR::Interaction::Toolkit::IXRInteractor*, ::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::IXRInteractable*>*, ::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::IXRInteractable*>*)>(&UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetFilter::Process)> {
  static const MethodInfo* get() {
    static auto* interactor = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "IXRInteractor")->byval_arg;
    static auto* targets = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "IXRInteractable")})->byval_arg;
    static auto* results = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "IXRInteractable")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetFilter*), "Process", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactor, targets, results});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Filtering::XRTargetFilter::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
