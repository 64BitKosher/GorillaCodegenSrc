// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.IXRActivateInteractable
#include "UnityEngine/XR/Interaction/Toolkit/IXRActivateInteractable.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractable
#include "UnityEngine/XR/Interaction/Toolkit/IXRHoverInteractable.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractable
#include "UnityEngine/XR/Interaction/Toolkit/IXRSelectInteractable.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.IXRInteractionStrengthInteractable
#include "UnityEngine/XR/Interaction/Toolkit/IXRInteractionStrengthInteractable.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.IXROverridesGazeAutoSelect
#include "UnityEngine/XR/Interaction/Toolkit/IXROverridesGazeAutoSelect.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.DistanceInfo
#include "UnityEngine/XR/Interaction/Toolkit/DistanceInfo.hpp"
// Including type: UnityEngine.LayerMask
#include "UnityEngine/LayerMask.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.InteractionLayerMask
#include "UnityEngine/XR/Interaction/Toolkit/InteractionLayerMask.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.InteractableSelectMode
#include "UnityEngine/XR/Interaction/Toolkit/InteractableSelectMode.hpp"
// Including type: UnityEngine.Pose
#include "UnityEngine/Pose.hpp"
// Including type: Unity.Profiling.ProfilerMarker
#include "Unity/Profiling/ProfilerMarker.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::XR::Interaction::Toolkit
namespace UnityEngine::XR::Interaction::Toolkit {
  // Forward declaring type: InteractableRegisteredEventArgs
  class InteractableRegisteredEventArgs;
  // Forward declaring type: InteractableUnregisteredEventArgs
  class InteractableUnregisteredEventArgs;
  // Skipping declaration: IXRInteractable because it is already included!
  // Forward declaring type: XRInteractionManager
  class XRInteractionManager;
  // Forward declaring type: HoverEnterEvent
  class HoverEnterEvent;
  // Forward declaring type: HoverExitEvent
  class HoverExitEvent;
  // Forward declaring type: SelectEnterEvent
  class SelectEnterEvent;
  // Forward declaring type: SelectExitEvent
  class SelectExitEvent;
  // Forward declaring type: ActivateEvent
  class ActivateEvent;
  // Forward declaring type: DeactivateEvent
  class DeactivateEvent;
  // Forward declaring type: IXRHoverInteractor
  class IXRHoverInteractor;
  // Forward declaring type: IXRSelectInteractor
  class IXRSelectInteractor;
  // Forward declaring type: IXRInteractor
  class IXRInteractor;
  // Forward declaring type: XRBaseControllerInteractor
  class XRBaseControllerInteractor;
  // Forward declaring type: XRInteractableEvent
  class XRInteractableEvent;
  // Forward declaring type: XRBaseInteractor
  class XRBaseInteractor;
  // Skipping declaration: DistanceCalculationMode because it is already included!
  // Forward declaring type: IXRFilterList`1<T>
  template<typename T>
  class IXRFilterList_1;
  // Forward declaring type: ActivateEventArgs
  class ActivateEventArgs;
  // Forward declaring type: DeactivateEventArgs
  class DeactivateEventArgs;
  // Forward declaring type: HoverEnterEventArgs
  class HoverEnterEventArgs;
  // Forward declaring type: HoverExitEventArgs
  class HoverExitEventArgs;
  // Forward declaring type: SelectEnterEventArgs
  class SelectEnterEventArgs;
  // Forward declaring type: SelectExitEventArgs
  class SelectExitEventArgs;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: GameObject
  class GameObject;
  // Forward declaring type: Collider
  class Collider;
  // Skipping declaration: Object because it is already included!
  // Forward declaring type: Transform
  class Transform;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Action`1<T>
  template<typename T>
  class Action_1;
  // Forward declaring type: Func`3<T1, T2, TResult>
  template<typename T1, typename T2, typename TResult>
  class Func_3;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
  // Forward declaring type: Dictionary`2<TKey, TValue>
  template<typename TKey, typename TValue>
  class Dictionary_2;
}
// Forward declaring namespace: Unity::XR::CoreUtils::Collections
namespace Unity::XR::CoreUtils::Collections {
  // Forward declaring type: HashSetList`1<T>
  template<typename T>
  class HashSetList_1;
}
// Forward declaring namespace: UnityEngine::XR::Interaction::Toolkit::Utilities
namespace UnityEngine::XR::Interaction::Toolkit::Utilities {
  // Forward declaring type: ExposedRegistrationList`1<T>
  template<typename T>
  class ExposedRegistrationList_1;
}
// Forward declaring namespace: UnityEngine::XR::Interaction::Toolkit::Filtering
namespace UnityEngine::XR::Interaction::Toolkit::Filtering {
  // Forward declaring type: IXRHoverFilter
  class IXRHoverFilter;
  // Forward declaring type: IXRSelectFilter
  class IXRSelectFilter;
  // Forward declaring type: IXRInteractionStrengthFilter
  class IXRInteractionStrengthFilter;
}
// Forward declaring namespace: Unity::XR::CoreUtils::Bindings::Variables
namespace Unity::XR::CoreUtils::Bindings::Variables {
  // Forward declaring type: BindableVariable`1<T>
  template<typename T>
  class BindableVariable_1;
  // Forward declaring type: IReadOnlyBindableVariable`1<T>
  template<typename T>
  class IReadOnlyBindableVariable_1;
}
// Completed forward declares
// Type namespace: UnityEngine.XR.Interaction.Toolkit
namespace UnityEngine::XR::Interaction::Toolkit {
  // Forward declaring type: XRBaseInteractable
  class XRBaseInteractable;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*, "UnityEngine.XR.Interaction.Toolkit", "XRBaseInteractable");
// Type namespace: UnityEngine.XR.Interaction.Toolkit
namespace UnityEngine::XR::Interaction::Toolkit {
  // Size: 0x1A0
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable
  // [TokenAttribute] Offset: FFFFFFFF
  // [SelectionBaseAttribute] Offset: FFFFFFFF
  // [DefaultExecutionOrder] Offset: FFFFFFFF
  class XRBaseInteractable : public ::UnityEngine::MonoBehaviour/*, public ::UnityEngine::XR::Interaction::Toolkit::IXRActivateInteractable, public ::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractable, public ::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable, public ::UnityEngine::XR::Interaction::Toolkit::IXRInteractionStrengthInteractable, public ::UnityEngine::XR::Interaction::Toolkit::IXROverridesGazeAutoSelect*/ {
    public:
    // Nested type: ::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::MovementType
    struct MovementType;
    // Nested type: ::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::DistanceCalculationMode
    struct DistanceCalculationMode;
    // Nested type: ::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::$$c
    class $$c;
    // Size: 0x4
    #pragma pack(push, 1)
    // Autogenerated type: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable/DistanceCalculationMode
    // [TokenAttribute] Offset: FFFFFFFF
    struct DistanceCalculationMode/*, public ::System::Enum*/ {
      public:
      public:
      // public System.Int32 value__
      // Size: 0x4
      // Offset: 0x0
      int value;
      // Field size check
      static_assert(sizeof(int) == 0x4);
      public:
      // Creating value type constructor for type: DistanceCalculationMode
      constexpr DistanceCalculationMode(int value_ = {}) noexcept : value{value_} {}
      // Creating interface conversion operator: operator ::System::Enum
      operator ::System::Enum() noexcept {
        return *reinterpret_cast<::System::Enum*>(this);
      }
      // Creating conversion operator: operator int
      constexpr operator int() const noexcept {
        return value;
      }
      // static field const value: static public UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable/DistanceCalculationMode TransformPosition
      static constexpr const int TransformPosition = 0;
      // Get static field: static public UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable/DistanceCalculationMode TransformPosition
      static ::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::DistanceCalculationMode _get_TransformPosition();
      // Set static field: static public UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable/DistanceCalculationMode TransformPosition
      static void _set_TransformPosition(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::DistanceCalculationMode value);
      // static field const value: static public UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable/DistanceCalculationMode ColliderPosition
      static constexpr const int ColliderPosition = 1;
      // Get static field: static public UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable/DistanceCalculationMode ColliderPosition
      static ::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::DistanceCalculationMode _get_ColliderPosition();
      // Set static field: static public UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable/DistanceCalculationMode ColliderPosition
      static void _set_ColliderPosition(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::DistanceCalculationMode value);
      // static field const value: static public UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable/DistanceCalculationMode ColliderVolume
      static constexpr const int ColliderVolume = 2;
      // Get static field: static public UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable/DistanceCalculationMode ColliderVolume
      static ::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::DistanceCalculationMode _get_ColliderVolume();
      // Set static field: static public UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable/DistanceCalculationMode ColliderVolume
      static void _set_ColliderVolume(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::DistanceCalculationMode value);
      // Get instance field reference: public System.Int32 value__
      [[deprecated("Use field access instead!")]] int& dyn_value__();
    }; // UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable/DistanceCalculationMode
    #pragma pack(pop)
    static check_size<sizeof(XRBaseInteractable::DistanceCalculationMode), 0 + sizeof(int)> __UnityEngine_XR_Interaction_Toolkit_XRBaseInteractable_DistanceCalculationModeSizeCheck;
    static_assert(sizeof(XRBaseInteractable::DistanceCalculationMode) == 0x4);
    public:
    // private System.Action`1<UnityEngine.XR.Interaction.Toolkit.InteractableRegisteredEventArgs> registered
    // Size: 0x8
    // Offset: 0x20
    ::System::Action_1<::UnityEngine::XR::Interaction::Toolkit::InteractableRegisteredEventArgs*>* registered;
    // Field size check
    static_assert(sizeof(::System::Action_1<::UnityEngine::XR::Interaction::Toolkit::InteractableRegisteredEventArgs*>*) == 0x8);
    // private System.Action`1<UnityEngine.XR.Interaction.Toolkit.InteractableUnregisteredEventArgs> unregistered
    // Size: 0x8
    // Offset: 0x28
    ::System::Action_1<::UnityEngine::XR::Interaction::Toolkit::InteractableUnregisteredEventArgs*>* unregistered;
    // Field size check
    static_assert(sizeof(::System::Action_1<::UnityEngine::XR::Interaction::Toolkit::InteractableUnregisteredEventArgs*>*) == 0x8);
    // private System.Func`3<UnityEngine.XR.Interaction.Toolkit.IXRInteractable,UnityEngine.Vector3,UnityEngine.XR.Interaction.Toolkit.DistanceInfo> <getDistanceOverride>k__BackingField
    // Size: 0x8
    // Offset: 0x30
    ::System::Func_3<::UnityEngine::XR::Interaction::Toolkit::IXRInteractable*, ::UnityEngine::Vector3, ::UnityEngine::XR::Interaction::Toolkit::DistanceInfo>* getDistanceOverride;
    // Field size check
    static_assert(sizeof(::System::Func_3<::UnityEngine::XR::Interaction::Toolkit::IXRInteractable*, ::UnityEngine::Vector3, ::UnityEngine::XR::Interaction::Toolkit::DistanceInfo>*) == 0x8);
    // private UnityEngine.XR.Interaction.Toolkit.XRInteractionManager m_InteractionManager
    // Size: 0x8
    // Offset: 0x38
    ::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager* m_InteractionManager;
    // Field size check
    static_assert(sizeof(::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*) == 0x8);
    // private System.Collections.Generic.List`1<UnityEngine.Collider> m_Colliders
    // Size: 0x8
    // Offset: 0x40
    ::System::Collections::Generic::List_1<::UnityEngine::Collider*>* m_Colliders;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::UnityEngine::Collider*>*) == 0x8);
    // private UnityEngine.LayerMask m_InteractionLayerMask
    // Size: 0x4
    // Offset: 0x48
    ::UnityEngine::LayerMask m_InteractionLayerMask;
    // Field size check
    static_assert(sizeof(::UnityEngine::LayerMask) == 0x4);
    // private UnityEngine.XR.Interaction.Toolkit.InteractionLayerMask m_InteractionLayers
    // Size: 0x8
    // Offset: 0x4C
    ::UnityEngine::XR::Interaction::Toolkit::InteractionLayerMask m_InteractionLayers;
    // Field size check
    static_assert(sizeof(::UnityEngine::XR::Interaction::Toolkit::InteractionLayerMask) == 0x8);
    // private UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable/DistanceCalculationMode m_DistanceCalculationMode
    // Size: 0x4
    // Offset: 0x54
    ::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::DistanceCalculationMode m_DistanceCalculationMode;
    // Field size check
    static_assert(sizeof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::DistanceCalculationMode) == 0x4);
    // private UnityEngine.XR.Interaction.Toolkit.InteractableSelectMode m_SelectMode
    // Size: 0x4
    // Offset: 0x58
    ::UnityEngine::XR::Interaction::Toolkit::InteractableSelectMode m_SelectMode;
    // Field size check
    static_assert(sizeof(::UnityEngine::XR::Interaction::Toolkit::InteractableSelectMode) == 0x4);
    // Padding between fields: m_SelectMode and: m_CustomReticle
    char __padding8[0x4] = {};
    // private UnityEngine.GameObject m_CustomReticle
    // Size: 0x8
    // Offset: 0x60
    ::UnityEngine::GameObject* m_CustomReticle;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // private System.Boolean m_AllowGazeInteraction
    // Size: 0x1
    // Offset: 0x68
    bool m_AllowGazeInteraction;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean m_AllowGazeSelect
    // Size: 0x1
    // Offset: 0x69
    bool m_AllowGazeSelect;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean m_OverrideGazeTimeToSelect
    // Size: 0x1
    // Offset: 0x6A
    bool m_OverrideGazeTimeToSelect;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: m_OverrideGazeTimeToSelect and: m_GazeTimeToSelect
    char __padding12[0x1] = {};
    // private System.Single m_GazeTimeToSelect
    // Size: 0x4
    // Offset: 0x6C
    float m_GazeTimeToSelect;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Boolean m_OverrideTimeToAutoDeselectGaze
    // Size: 0x1
    // Offset: 0x70
    bool m_OverrideTimeToAutoDeselectGaze;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: m_OverrideTimeToAutoDeselectGaze and: m_TimeToAutoDeselectGaze
    char __padding14[0x3] = {};
    // private System.Single m_TimeToAutoDeselectGaze
    // Size: 0x4
    // Offset: 0x74
    float m_TimeToAutoDeselectGaze;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Boolean m_AllowGazeAssistance
    // Size: 0x1
    // Offset: 0x78
    bool m_AllowGazeAssistance;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: m_AllowGazeAssistance and: m_FirstHoverEntered
    char __padding16[0x7] = {};
    // private UnityEngine.XR.Interaction.Toolkit.HoverEnterEvent m_FirstHoverEntered
    // Size: 0x8
    // Offset: 0x80
    ::UnityEngine::XR::Interaction::Toolkit::HoverEnterEvent* m_FirstHoverEntered;
    // Field size check
    static_assert(sizeof(::UnityEngine::XR::Interaction::Toolkit::HoverEnterEvent*) == 0x8);
    // private UnityEngine.XR.Interaction.Toolkit.HoverExitEvent m_LastHoverExited
    // Size: 0x8
    // Offset: 0x88
    ::UnityEngine::XR::Interaction::Toolkit::HoverExitEvent* m_LastHoverExited;
    // Field size check
    static_assert(sizeof(::UnityEngine::XR::Interaction::Toolkit::HoverExitEvent*) == 0x8);
    // private UnityEngine.XR.Interaction.Toolkit.HoverEnterEvent m_HoverEntered
    // Size: 0x8
    // Offset: 0x90
    ::UnityEngine::XR::Interaction::Toolkit::HoverEnterEvent* m_HoverEntered;
    // Field size check
    static_assert(sizeof(::UnityEngine::XR::Interaction::Toolkit::HoverEnterEvent*) == 0x8);
    // private UnityEngine.XR.Interaction.Toolkit.HoverExitEvent m_HoverExited
    // Size: 0x8
    // Offset: 0x98
    ::UnityEngine::XR::Interaction::Toolkit::HoverExitEvent* m_HoverExited;
    // Field size check
    static_assert(sizeof(::UnityEngine::XR::Interaction::Toolkit::HoverExitEvent*) == 0x8);
    // private UnityEngine.XR.Interaction.Toolkit.SelectEnterEvent m_FirstSelectEntered
    // Size: 0x8
    // Offset: 0xA0
    ::UnityEngine::XR::Interaction::Toolkit::SelectEnterEvent* m_FirstSelectEntered;
    // Field size check
    static_assert(sizeof(::UnityEngine::XR::Interaction::Toolkit::SelectEnterEvent*) == 0x8);
    // private UnityEngine.XR.Interaction.Toolkit.SelectExitEvent m_LastSelectExited
    // Size: 0x8
    // Offset: 0xA8
    ::UnityEngine::XR::Interaction::Toolkit::SelectExitEvent* m_LastSelectExited;
    // Field size check
    static_assert(sizeof(::UnityEngine::XR::Interaction::Toolkit::SelectExitEvent*) == 0x8);
    // private UnityEngine.XR.Interaction.Toolkit.SelectEnterEvent m_SelectEntered
    // Size: 0x8
    // Offset: 0xB0
    ::UnityEngine::XR::Interaction::Toolkit::SelectEnterEvent* m_SelectEntered;
    // Field size check
    static_assert(sizeof(::UnityEngine::XR::Interaction::Toolkit::SelectEnterEvent*) == 0x8);
    // private UnityEngine.XR.Interaction.Toolkit.SelectExitEvent m_SelectExited
    // Size: 0x8
    // Offset: 0xB8
    ::UnityEngine::XR::Interaction::Toolkit::SelectExitEvent* m_SelectExited;
    // Field size check
    static_assert(sizeof(::UnityEngine::XR::Interaction::Toolkit::SelectExitEvent*) == 0x8);
    // private UnityEngine.XR.Interaction.Toolkit.ActivateEvent m_Activated
    // Size: 0x8
    // Offset: 0xC0
    ::UnityEngine::XR::Interaction::Toolkit::ActivateEvent* m_Activated;
    // Field size check
    static_assert(sizeof(::UnityEngine::XR::Interaction::Toolkit::ActivateEvent*) == 0x8);
    // private UnityEngine.XR.Interaction.Toolkit.DeactivateEvent m_Deactivated
    // Size: 0x8
    // Offset: 0xC8
    ::UnityEngine::XR::Interaction::Toolkit::DeactivateEvent* m_Deactivated;
    // Field size check
    static_assert(sizeof(::UnityEngine::XR::Interaction::Toolkit::DeactivateEvent*) == 0x8);
    // private readonly Unity.XR.CoreUtils.Collections.HashSetList`1<UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractor> m_InteractorsHovering
    // Size: 0x8
    // Offset: 0xD0
    ::Unity::XR::CoreUtils::Collections::HashSetList_1<::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractor*>* m_InteractorsHovering;
    // Field size check
    static_assert(sizeof(::Unity::XR::CoreUtils::Collections::HashSetList_1<::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractor*>*) == 0x8);
    // private readonly Unity.XR.CoreUtils.Collections.HashSetList`1<UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractor> m_InteractorsSelecting
    // Size: 0x8
    // Offset: 0xD8
    ::Unity::XR::CoreUtils::Collections::HashSetList_1<::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractor*>* m_InteractorsSelecting;
    // Field size check
    static_assert(sizeof(::Unity::XR::CoreUtils::Collections::HashSetList_1<::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractor*>*) == 0x8);
    // private UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractor <firstInteractorSelecting>k__BackingField
    // Size: 0x8
    // Offset: 0xE0
    ::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractor* firstInteractorSelecting;
    // Field size check
    static_assert(sizeof(::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractor*) == 0x8);
    // private System.Collections.Generic.List`1<UnityEngine.Object> m_StartingHoverFilters
    // Size: 0x8
    // Offset: 0xE8
    ::System::Collections::Generic::List_1<::UnityEngine::Object*>* m_StartingHoverFilters;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::UnityEngine::Object*>*) == 0x8);
    // private readonly UnityEngine.XR.Interaction.Toolkit.Utilities.ExposedRegistrationList`1<UnityEngine.XR.Interaction.Toolkit.Filtering.IXRHoverFilter> m_HoverFilters
    // Size: 0x8
    // Offset: 0xF0
    ::UnityEngine::XR::Interaction::Toolkit::Utilities::ExposedRegistrationList_1<::UnityEngine::XR::Interaction::Toolkit::Filtering::IXRHoverFilter*>* m_HoverFilters;
    // Field size check
    static_assert(sizeof(::UnityEngine::XR::Interaction::Toolkit::Utilities::ExposedRegistrationList_1<::UnityEngine::XR::Interaction::Toolkit::Filtering::IXRHoverFilter*>*) == 0x8);
    // private System.Collections.Generic.List`1<UnityEngine.Object> m_StartingSelectFilters
    // Size: 0x8
    // Offset: 0xF8
    ::System::Collections::Generic::List_1<::UnityEngine::Object*>* m_StartingSelectFilters;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::UnityEngine::Object*>*) == 0x8);
    // private readonly UnityEngine.XR.Interaction.Toolkit.Utilities.ExposedRegistrationList`1<UnityEngine.XR.Interaction.Toolkit.Filtering.IXRSelectFilter> m_SelectFilters
    // Size: 0x8
    // Offset: 0x100
    ::UnityEngine::XR::Interaction::Toolkit::Utilities::ExposedRegistrationList_1<::UnityEngine::XR::Interaction::Toolkit::Filtering::IXRSelectFilter*>* m_SelectFilters;
    // Field size check
    static_assert(sizeof(::UnityEngine::XR::Interaction::Toolkit::Utilities::ExposedRegistrationList_1<::UnityEngine::XR::Interaction::Toolkit::Filtering::IXRSelectFilter*>*) == 0x8);
    // private System.Collections.Generic.List`1<UnityEngine.Object> m_StartingInteractionStrengthFilters
    // Size: 0x8
    // Offset: 0x108
    ::System::Collections::Generic::List_1<::UnityEngine::Object*>* m_StartingInteractionStrengthFilters;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::UnityEngine::Object*>*) == 0x8);
    // private readonly UnityEngine.XR.Interaction.Toolkit.Utilities.ExposedRegistrationList`1<UnityEngine.XR.Interaction.Toolkit.Filtering.IXRInteractionStrengthFilter> m_InteractionStrengthFilters
    // Size: 0x8
    // Offset: 0x110
    ::UnityEngine::XR::Interaction::Toolkit::Utilities::ExposedRegistrationList_1<::UnityEngine::XR::Interaction::Toolkit::Filtering::IXRInteractionStrengthFilter*>* m_InteractionStrengthFilters;
    // Field size check
    static_assert(sizeof(::UnityEngine::XR::Interaction::Toolkit::Utilities::ExposedRegistrationList_1<::UnityEngine::XR::Interaction::Toolkit::Filtering::IXRInteractionStrengthFilter*>*) == 0x8);
    // private readonly Unity.XR.CoreUtils.Bindings.Variables.BindableVariable`1<System.Single> m_LargestInteractionStrength
    // Size: 0x8
    // Offset: 0x118
    ::Unity::XR::CoreUtils::Bindings::Variables::BindableVariable_1<float>* m_LargestInteractionStrength;
    // Field size check
    static_assert(sizeof(::Unity::XR::CoreUtils::Bindings::Variables::BindableVariable_1<float>*) == 0x8);
    // private readonly System.Collections.Generic.Dictionary`2<UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractor,UnityEngine.Pose> m_AttachPoseOnSelect
    // Size: 0x8
    // Offset: 0x120
    ::System::Collections::Generic::Dictionary_2<::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractor*, ::UnityEngine::Pose>* m_AttachPoseOnSelect;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::Dictionary_2<::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractor*, ::UnityEngine::Pose>*) == 0x8);
    // private readonly System.Collections.Generic.Dictionary`2<UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractor,UnityEngine.Pose> m_LocalAttachPoseOnSelect
    // Size: 0x8
    // Offset: 0x128
    ::System::Collections::Generic::Dictionary_2<::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractor*, ::UnityEngine::Pose>* m_LocalAttachPoseOnSelect;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::Dictionary_2<::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractor*, ::UnityEngine::Pose>*) == 0x8);
    // private readonly System.Collections.Generic.Dictionary`2<UnityEngine.XR.Interaction.Toolkit.IXRInteractor,UnityEngine.GameObject> m_ReticleCache
    // Size: 0x8
    // Offset: 0x130
    ::System::Collections::Generic::Dictionary_2<::UnityEngine::XR::Interaction::Toolkit::IXRInteractor*, ::UnityEngine::GameObject*>* m_ReticleCache;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::Dictionary_2<::UnityEngine::XR::Interaction::Toolkit::IXRInteractor*, ::UnityEngine::GameObject*>*) == 0x8);
    // private readonly Unity.XR.CoreUtils.Collections.HashSetList`1<UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor> m_VariableSelectInteractors
    // Size: 0x8
    // Offset: 0x138
    ::Unity::XR::CoreUtils::Collections::HashSetList_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor*>* m_VariableSelectInteractors;
    // Field size check
    static_assert(sizeof(::Unity::XR::CoreUtils::Collections::HashSetList_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor*>*) == 0x8);
    // private readonly System.Collections.Generic.Dictionary`2<UnityEngine.XR.Interaction.Toolkit.IXRInteractor,System.Single> m_InteractionStrengths
    // Size: 0x8
    // Offset: 0x140
    ::System::Collections::Generic::Dictionary_2<::UnityEngine::XR::Interaction::Toolkit::IXRInteractor*, float>* m_InteractionStrengths;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::Dictionary_2<::UnityEngine::XR::Interaction::Toolkit::IXRInteractor*, float>*) == 0x8);
    // private UnityEngine.XR.Interaction.Toolkit.XRInteractionManager m_RegisteredInteractionManager
    // Size: 0x8
    // Offset: 0x148
    ::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager* m_RegisteredInteractionManager;
    // Field size check
    static_assert(sizeof(::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*) == 0x8);
    // private UnityEngine.XR.Interaction.Toolkit.XRInteractableEvent m_OnFirstHoverEntered
    // Size: 0x8
    // Offset: 0x150
    ::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent* m_OnFirstHoverEntered;
    // Field size check
    static_assert(sizeof(::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent*) == 0x8);
    // private UnityEngine.XR.Interaction.Toolkit.XRInteractableEvent m_OnLastHoverExited
    // Size: 0x8
    // Offset: 0x158
    ::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent* m_OnLastHoverExited;
    // Field size check
    static_assert(sizeof(::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent*) == 0x8);
    // private UnityEngine.XR.Interaction.Toolkit.XRInteractableEvent m_OnHoverEntered
    // Size: 0x8
    // Offset: 0x160
    ::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent* m_OnHoverEntered;
    // Field size check
    static_assert(sizeof(::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent*) == 0x8);
    // private UnityEngine.XR.Interaction.Toolkit.XRInteractableEvent m_OnHoverExited
    // Size: 0x8
    // Offset: 0x168
    ::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent* m_OnHoverExited;
    // Field size check
    static_assert(sizeof(::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent*) == 0x8);
    // private UnityEngine.XR.Interaction.Toolkit.XRInteractableEvent m_OnSelectEntered
    // Size: 0x8
    // Offset: 0x170
    ::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent* m_OnSelectEntered;
    // Field size check
    static_assert(sizeof(::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent*) == 0x8);
    // private UnityEngine.XR.Interaction.Toolkit.XRInteractableEvent m_OnSelectExited
    // Size: 0x8
    // Offset: 0x178
    ::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent* m_OnSelectExited;
    // Field size check
    static_assert(sizeof(::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent*) == 0x8);
    // private UnityEngine.XR.Interaction.Toolkit.XRInteractableEvent m_OnSelectCanceled
    // Size: 0x8
    // Offset: 0x180
    ::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent* m_OnSelectCanceled;
    // Field size check
    static_assert(sizeof(::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent*) == 0x8);
    // private UnityEngine.XR.Interaction.Toolkit.XRInteractableEvent m_OnActivate
    // Size: 0x8
    // Offset: 0x188
    ::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent* m_OnActivate;
    // Field size check
    static_assert(sizeof(::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent*) == 0x8);
    // private UnityEngine.XR.Interaction.Toolkit.XRInteractableEvent m_OnDeactivate
    // Size: 0x8
    // Offset: 0x190
    ::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent* m_OnDeactivate;
    // Field size check
    static_assert(sizeof(::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent*) == 0x8);
    // private readonly System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor> <hoveringInteractors>k__BackingField
    // Size: 0x8
    // Offset: 0x198
    ::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*>* hoveringInteractors;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*>*) == 0x8);
    public:
    // Creating interface conversion operator: operator ::UnityEngine::XR::Interaction::Toolkit::IXRActivateInteractable
    operator ::UnityEngine::XR::Interaction::Toolkit::IXRActivateInteractable() noexcept {
      return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::IXRActivateInteractable*>(this);
    }
    // Creating interface conversion operator: operator ::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractable
    operator ::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractable() noexcept {
      return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractable*>(this);
    }
    // Creating interface conversion operator: operator ::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable
    operator ::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable() noexcept {
      return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable*>(this);
    }
    // Creating interface conversion operator: operator ::UnityEngine::XR::Interaction::Toolkit::IXRInteractionStrengthInteractable
    operator ::UnityEngine::XR::Interaction::Toolkit::IXRInteractionStrengthInteractable() noexcept {
      return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::IXRInteractionStrengthInteractable*>(this);
    }
    // Creating interface conversion operator: operator ::UnityEngine::XR::Interaction::Toolkit::IXROverridesGazeAutoSelect
    operator ::UnityEngine::XR::Interaction::Toolkit::IXROverridesGazeAutoSelect() noexcept {
      return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::IXROverridesGazeAutoSelect*>(this);
    }
    // static field const value: static private System.Single k_InteractionStrengthHover
    static constexpr const float k_InteractionStrengthHover = 0;
    // Get static field: static private System.Single k_InteractionStrengthHover
    static float _get_k_InteractionStrengthHover();
    // Set static field: static private System.Single k_InteractionStrengthHover
    static void _set_k_InteractionStrengthHover(float value);
    // static field const value: static private System.Single k_InteractionStrengthSelect
    static constexpr const float k_InteractionStrengthSelect = 1;
    // Get static field: static private System.Single k_InteractionStrengthSelect
    static float _get_k_InteractionStrengthSelect();
    // Set static field: static private System.Single k_InteractionStrengthSelect
    static void _set_k_InteractionStrengthSelect(float value);
    // Get static field: static private UnityEngine.XR.Interaction.Toolkit.XRInteractionManager s_InteractionManagerCache
    static ::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager* _get_s_InteractionManagerCache();
    // Set static field: static private UnityEngine.XR.Interaction.Toolkit.XRInteractionManager s_InteractionManagerCache
    static void _set_s_InteractionManagerCache(::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager* value);
    // Get static field: static private readonly Unity.Profiling.ProfilerMarker s_ProcessInteractionStrengthMarker
    static ::Unity::Profiling::ProfilerMarker _get_s_ProcessInteractionStrengthMarker();
    // Set static field: static private readonly Unity.Profiling.ProfilerMarker s_ProcessInteractionStrengthMarker
    static void _set_s_ProcessInteractionStrengthMarker(::Unity::Profiling::ProfilerMarker value);
    // Get instance field reference: private System.Action`1<UnityEngine.XR.Interaction.Toolkit.InteractableRegisteredEventArgs> registered
    [[deprecated("Use field access instead!")]] ::System::Action_1<::UnityEngine::XR::Interaction::Toolkit::InteractableRegisteredEventArgs*>*& dyn_registered();
    // Get instance field reference: private System.Action`1<UnityEngine.XR.Interaction.Toolkit.InteractableUnregisteredEventArgs> unregistered
    [[deprecated("Use field access instead!")]] ::System::Action_1<::UnityEngine::XR::Interaction::Toolkit::InteractableUnregisteredEventArgs*>*& dyn_unregistered();
    // Get instance field reference: private System.Func`3<UnityEngine.XR.Interaction.Toolkit.IXRInteractable,UnityEngine.Vector3,UnityEngine.XR.Interaction.Toolkit.DistanceInfo> <getDistanceOverride>k__BackingField
    [[deprecated("Use field access instead!")]] ::System::Func_3<::UnityEngine::XR::Interaction::Toolkit::IXRInteractable*, ::UnityEngine::Vector3, ::UnityEngine::XR::Interaction::Toolkit::DistanceInfo>*& dyn_$getDistanceOverride$k__BackingField();
    // Get instance field reference: private UnityEngine.XR.Interaction.Toolkit.XRInteractionManager m_InteractionManager
    [[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*& dyn_m_InteractionManager();
    // Get instance field reference: private System.Collections.Generic.List`1<UnityEngine.Collider> m_Colliders
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::Collider*>*& dyn_m_Colliders();
    // Get instance field reference: private UnityEngine.LayerMask m_InteractionLayerMask
    [[deprecated("Use field access instead!")]] ::UnityEngine::LayerMask& dyn_m_InteractionLayerMask();
    // Get instance field reference: private UnityEngine.XR.Interaction.Toolkit.InteractionLayerMask m_InteractionLayers
    [[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::InteractionLayerMask& dyn_m_InteractionLayers();
    // Get instance field reference: private UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable/DistanceCalculationMode m_DistanceCalculationMode
    [[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::DistanceCalculationMode& dyn_m_DistanceCalculationMode();
    // Get instance field reference: private UnityEngine.XR.Interaction.Toolkit.InteractableSelectMode m_SelectMode
    [[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::InteractableSelectMode& dyn_m_SelectMode();
    // Get instance field reference: private UnityEngine.GameObject m_CustomReticle
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_m_CustomReticle();
    // Get instance field reference: private System.Boolean m_AllowGazeInteraction
    [[deprecated("Use field access instead!")]] bool& dyn_m_AllowGazeInteraction();
    // Get instance field reference: private System.Boolean m_AllowGazeSelect
    [[deprecated("Use field access instead!")]] bool& dyn_m_AllowGazeSelect();
    // Get instance field reference: private System.Boolean m_OverrideGazeTimeToSelect
    [[deprecated("Use field access instead!")]] bool& dyn_m_OverrideGazeTimeToSelect();
    // Get instance field reference: private System.Single m_GazeTimeToSelect
    [[deprecated("Use field access instead!")]] float& dyn_m_GazeTimeToSelect();
    // Get instance field reference: private System.Boolean m_OverrideTimeToAutoDeselectGaze
    [[deprecated("Use field access instead!")]] bool& dyn_m_OverrideTimeToAutoDeselectGaze();
    // Get instance field reference: private System.Single m_TimeToAutoDeselectGaze
    [[deprecated("Use field access instead!")]] float& dyn_m_TimeToAutoDeselectGaze();
    // Get instance field reference: private System.Boolean m_AllowGazeAssistance
    [[deprecated("Use field access instead!")]] bool& dyn_m_AllowGazeAssistance();
    // Get instance field reference: private UnityEngine.XR.Interaction.Toolkit.HoverEnterEvent m_FirstHoverEntered
    [[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::HoverEnterEvent*& dyn_m_FirstHoverEntered();
    // Get instance field reference: private UnityEngine.XR.Interaction.Toolkit.HoverExitEvent m_LastHoverExited
    [[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::HoverExitEvent*& dyn_m_LastHoverExited();
    // Get instance field reference: private UnityEngine.XR.Interaction.Toolkit.HoverEnterEvent m_HoverEntered
    [[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::HoverEnterEvent*& dyn_m_HoverEntered();
    // Get instance field reference: private UnityEngine.XR.Interaction.Toolkit.HoverExitEvent m_HoverExited
    [[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::HoverExitEvent*& dyn_m_HoverExited();
    // Get instance field reference: private UnityEngine.XR.Interaction.Toolkit.SelectEnterEvent m_FirstSelectEntered
    [[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::SelectEnterEvent*& dyn_m_FirstSelectEntered();
    // Get instance field reference: private UnityEngine.XR.Interaction.Toolkit.SelectExitEvent m_LastSelectExited
    [[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::SelectExitEvent*& dyn_m_LastSelectExited();
    // Get instance field reference: private UnityEngine.XR.Interaction.Toolkit.SelectEnterEvent m_SelectEntered
    [[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::SelectEnterEvent*& dyn_m_SelectEntered();
    // Get instance field reference: private UnityEngine.XR.Interaction.Toolkit.SelectExitEvent m_SelectExited
    [[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::SelectExitEvent*& dyn_m_SelectExited();
    // Get instance field reference: private UnityEngine.XR.Interaction.Toolkit.ActivateEvent m_Activated
    [[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::ActivateEvent*& dyn_m_Activated();
    // Get instance field reference: private UnityEngine.XR.Interaction.Toolkit.DeactivateEvent m_Deactivated
    [[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::DeactivateEvent*& dyn_m_Deactivated();
    // Get instance field reference: private readonly Unity.XR.CoreUtils.Collections.HashSetList`1<UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractor> m_InteractorsHovering
    [[deprecated("Use field access instead!")]] ::Unity::XR::CoreUtils::Collections::HashSetList_1<::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractor*>*& dyn_m_InteractorsHovering();
    // Get instance field reference: private readonly Unity.XR.CoreUtils.Collections.HashSetList`1<UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractor> m_InteractorsSelecting
    [[deprecated("Use field access instead!")]] ::Unity::XR::CoreUtils::Collections::HashSetList_1<::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractor*>*& dyn_m_InteractorsSelecting();
    // Get instance field reference: private UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractor <firstInteractorSelecting>k__BackingField
    [[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractor*& dyn_$firstInteractorSelecting$k__BackingField();
    // Get instance field reference: private System.Collections.Generic.List`1<UnityEngine.Object> m_StartingHoverFilters
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::Object*>*& dyn_m_StartingHoverFilters();
    // Get instance field reference: private readonly UnityEngine.XR.Interaction.Toolkit.Utilities.ExposedRegistrationList`1<UnityEngine.XR.Interaction.Toolkit.Filtering.IXRHoverFilter> m_HoverFilters
    [[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::Utilities::ExposedRegistrationList_1<::UnityEngine::XR::Interaction::Toolkit::Filtering::IXRHoverFilter*>*& dyn_m_HoverFilters();
    // Get instance field reference: private System.Collections.Generic.List`1<UnityEngine.Object> m_StartingSelectFilters
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::Object*>*& dyn_m_StartingSelectFilters();
    // Get instance field reference: private readonly UnityEngine.XR.Interaction.Toolkit.Utilities.ExposedRegistrationList`1<UnityEngine.XR.Interaction.Toolkit.Filtering.IXRSelectFilter> m_SelectFilters
    [[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::Utilities::ExposedRegistrationList_1<::UnityEngine::XR::Interaction::Toolkit::Filtering::IXRSelectFilter*>*& dyn_m_SelectFilters();
    // Get instance field reference: private System.Collections.Generic.List`1<UnityEngine.Object> m_StartingInteractionStrengthFilters
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::Object*>*& dyn_m_StartingInteractionStrengthFilters();
    // Get instance field reference: private readonly UnityEngine.XR.Interaction.Toolkit.Utilities.ExposedRegistrationList`1<UnityEngine.XR.Interaction.Toolkit.Filtering.IXRInteractionStrengthFilter> m_InteractionStrengthFilters
    [[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::Utilities::ExposedRegistrationList_1<::UnityEngine::XR::Interaction::Toolkit::Filtering::IXRInteractionStrengthFilter*>*& dyn_m_InteractionStrengthFilters();
    // Get instance field reference: private readonly Unity.XR.CoreUtils.Bindings.Variables.BindableVariable`1<System.Single> m_LargestInteractionStrength
    [[deprecated("Use field access instead!")]] ::Unity::XR::CoreUtils::Bindings::Variables::BindableVariable_1<float>*& dyn_m_LargestInteractionStrength();
    // Get instance field reference: private readonly System.Collections.Generic.Dictionary`2<UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractor,UnityEngine.Pose> m_AttachPoseOnSelect
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractor*, ::UnityEngine::Pose>*& dyn_m_AttachPoseOnSelect();
    // Get instance field reference: private readonly System.Collections.Generic.Dictionary`2<UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractor,UnityEngine.Pose> m_LocalAttachPoseOnSelect
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractor*, ::UnityEngine::Pose>*& dyn_m_LocalAttachPoseOnSelect();
    // Get instance field reference: private readonly System.Collections.Generic.Dictionary`2<UnityEngine.XR.Interaction.Toolkit.IXRInteractor,UnityEngine.GameObject> m_ReticleCache
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::UnityEngine::XR::Interaction::Toolkit::IXRInteractor*, ::UnityEngine::GameObject*>*& dyn_m_ReticleCache();
    // Get instance field reference: private readonly Unity.XR.CoreUtils.Collections.HashSetList`1<UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor> m_VariableSelectInteractors
    [[deprecated("Use field access instead!")]] ::Unity::XR::CoreUtils::Collections::HashSetList_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor*>*& dyn_m_VariableSelectInteractors();
    // Get instance field reference: private readonly System.Collections.Generic.Dictionary`2<UnityEngine.XR.Interaction.Toolkit.IXRInteractor,System.Single> m_InteractionStrengths
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::UnityEngine::XR::Interaction::Toolkit::IXRInteractor*, float>*& dyn_m_InteractionStrengths();
    // Get instance field reference: private UnityEngine.XR.Interaction.Toolkit.XRInteractionManager m_RegisteredInteractionManager
    [[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*& dyn_m_RegisteredInteractionManager();
    // Get instance field reference: private UnityEngine.XR.Interaction.Toolkit.XRInteractableEvent m_OnFirstHoverEntered
    [[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent*& dyn_m_OnFirstHoverEntered();
    // Get instance field reference: private UnityEngine.XR.Interaction.Toolkit.XRInteractableEvent m_OnLastHoverExited
    [[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent*& dyn_m_OnLastHoverExited();
    // Get instance field reference: private UnityEngine.XR.Interaction.Toolkit.XRInteractableEvent m_OnHoverEntered
    [[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent*& dyn_m_OnHoverEntered();
    // Get instance field reference: private UnityEngine.XR.Interaction.Toolkit.XRInteractableEvent m_OnHoverExited
    [[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent*& dyn_m_OnHoverExited();
    // Get instance field reference: private UnityEngine.XR.Interaction.Toolkit.XRInteractableEvent m_OnSelectEntered
    [[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent*& dyn_m_OnSelectEntered();
    // Get instance field reference: private UnityEngine.XR.Interaction.Toolkit.XRInteractableEvent m_OnSelectExited
    [[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent*& dyn_m_OnSelectExited();
    // Get instance field reference: private UnityEngine.XR.Interaction.Toolkit.XRInteractableEvent m_OnSelectCanceled
    [[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent*& dyn_m_OnSelectCanceled();
    // Get instance field reference: private UnityEngine.XR.Interaction.Toolkit.XRInteractableEvent m_OnActivate
    [[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent*& dyn_m_OnActivate();
    // Get instance field reference: private UnityEngine.XR.Interaction.Toolkit.XRInteractableEvent m_OnDeactivate
    [[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent*& dyn_m_OnDeactivate();
    // Get instance field reference: private readonly System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor> <hoveringInteractors>k__BackingField
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*>*& dyn_$hoveringInteractors$k__BackingField();
    // public System.Void add_registered(System.Action`1<UnityEngine.XR.Interaction.Toolkit.InteractableRegisteredEventArgs> value)
    // Offset: 0x53D8324
    void add_registered(::System::Action_1<::UnityEngine::XR::Interaction::Toolkit::InteractableRegisteredEventArgs*>* value);
    // public System.Void remove_registered(System.Action`1<UnityEngine.XR.Interaction.Toolkit.InteractableRegisteredEventArgs> value)
    // Offset: 0x53D83D4
    void remove_registered(::System::Action_1<::UnityEngine::XR::Interaction::Toolkit::InteractableRegisteredEventArgs*>* value);
    // public System.Void add_unregistered(System.Action`1<UnityEngine.XR.Interaction.Toolkit.InteractableUnregisteredEventArgs> value)
    // Offset: 0x53D8484
    void add_unregistered(::System::Action_1<::UnityEngine::XR::Interaction::Toolkit::InteractableUnregisteredEventArgs*>* value);
    // public System.Void remove_unregistered(System.Action`1<UnityEngine.XR.Interaction.Toolkit.InteractableUnregisteredEventArgs> value)
    // Offset: 0x53D8534
    void remove_unregistered(::System::Action_1<::UnityEngine::XR::Interaction::Toolkit::InteractableUnregisteredEventArgs*>* value);
    // public System.Func`3<UnityEngine.XR.Interaction.Toolkit.IXRInteractable,UnityEngine.Vector3,UnityEngine.XR.Interaction.Toolkit.DistanceInfo> get_getDistanceOverride()
    // Offset: 0x53D85E4
    ::System::Func_3<::UnityEngine::XR::Interaction::Toolkit::IXRInteractable*, ::UnityEngine::Vector3, ::UnityEngine::XR::Interaction::Toolkit::DistanceInfo>* get_getDistanceOverride();
    // public System.Void set_getDistanceOverride(System.Func`3<UnityEngine.XR.Interaction.Toolkit.IXRInteractable,UnityEngine.Vector3,UnityEngine.XR.Interaction.Toolkit.DistanceInfo> value)
    // Offset: 0x53D85EC
    void set_getDistanceOverride(::System::Func_3<::UnityEngine::XR::Interaction::Toolkit::IXRInteractable*, ::UnityEngine::Vector3, ::UnityEngine::XR::Interaction::Toolkit::DistanceInfo>* value);
    // public UnityEngine.XR.Interaction.Toolkit.XRInteractionManager get_interactionManager()
    // Offset: 0x53D85F4
    ::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager* get_interactionManager();
    // public System.Void set_interactionManager(UnityEngine.XR.Interaction.Toolkit.XRInteractionManager value)
    // Offset: 0x53D85FC
    void set_interactionManager(::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager* value);
    // public System.Collections.Generic.List`1<UnityEngine.Collider> get_colliders()
    // Offset: 0x53D877C
    ::System::Collections::Generic::List_1<::UnityEngine::Collider*>* get_colliders();
    // public UnityEngine.XR.Interaction.Toolkit.InteractionLayerMask get_interactionLayers()
    // Offset: 0x53D8784
    ::UnityEngine::XR::Interaction::Toolkit::InteractionLayerMask get_interactionLayers();
    // public System.Void set_interactionLayers(UnityEngine.XR.Interaction.Toolkit.InteractionLayerMask value)
    // Offset: 0x53D878C
    void set_interactionLayers(::UnityEngine::XR::Interaction::Toolkit::InteractionLayerMask value);
    // public UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable/DistanceCalculationMode get_distanceCalculationMode()
    // Offset: 0x53D8794
    ::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::DistanceCalculationMode get_distanceCalculationMode();
    // public System.Void set_distanceCalculationMode(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable/DistanceCalculationMode value)
    // Offset: 0x53D879C
    void set_distanceCalculationMode(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::DistanceCalculationMode value);
    // public UnityEngine.XR.Interaction.Toolkit.InteractableSelectMode get_selectMode()
    // Offset: 0x53D87A4
    ::UnityEngine::XR::Interaction::Toolkit::InteractableSelectMode get_selectMode();
    // public System.Void set_selectMode(UnityEngine.XR.Interaction.Toolkit.InteractableSelectMode value)
    // Offset: 0x53D87AC
    void set_selectMode(::UnityEngine::XR::Interaction::Toolkit::InteractableSelectMode value);
    // public UnityEngine.GameObject get_customReticle()
    // Offset: 0x53D87B4
    ::UnityEngine::GameObject* get_customReticle();
    // public System.Void set_customReticle(UnityEngine.GameObject value)
    // Offset: 0x53D87BC
    void set_customReticle(::UnityEngine::GameObject* value);
    // public System.Boolean get_allowGazeInteraction()
    // Offset: 0x53D87C4
    bool get_allowGazeInteraction();
    // public System.Void set_allowGazeInteraction(System.Boolean value)
    // Offset: 0x53D87CC
    void set_allowGazeInteraction(bool value);
    // public System.Boolean get_allowGazeSelect()
    // Offset: 0x53D87D8
    bool get_allowGazeSelect();
    // public System.Void set_allowGazeSelect(System.Boolean value)
    // Offset: 0x53D87E0
    void set_allowGazeSelect(bool value);
    // public System.Boolean get_overrideGazeTimeToSelect()
    // Offset: 0x53D87EC
    bool get_overrideGazeTimeToSelect();
    // public System.Void set_overrideGazeTimeToSelect(System.Boolean value)
    // Offset: 0x53D87F4
    void set_overrideGazeTimeToSelect(bool value);
    // public System.Single get_gazeTimeToSelect()
    // Offset: 0x53D8800
    float get_gazeTimeToSelect();
    // public System.Void set_gazeTimeToSelect(System.Single value)
    // Offset: 0x53D8808
    void set_gazeTimeToSelect(float value);
    // public System.Boolean get_overrideTimeToAutoDeselectGaze()
    // Offset: 0x53D8810
    bool get_overrideTimeToAutoDeselectGaze();
    // public System.Void set_overrideTimeToAutoDeselectGaze(System.Boolean value)
    // Offset: 0x53D8818
    void set_overrideTimeToAutoDeselectGaze(bool value);
    // public System.Single get_timeToAutoDeselectGaze()
    // Offset: 0x53D8824
    float get_timeToAutoDeselectGaze();
    // public System.Void set_timeToAutoDeselectGaze(System.Single value)
    // Offset: 0x53D882C
    void set_timeToAutoDeselectGaze(float value);
    // public System.Boolean get_allowGazeAssistance()
    // Offset: 0x53D8834
    bool get_allowGazeAssistance();
    // public System.Void set_allowGazeAssistance(System.Boolean value)
    // Offset: 0x53D883C
    void set_allowGazeAssistance(bool value);
    // public UnityEngine.XR.Interaction.Toolkit.HoverEnterEvent get_firstHoverEntered()
    // Offset: 0x53D8848
    ::UnityEngine::XR::Interaction::Toolkit::HoverEnterEvent* get_firstHoverEntered();
    // public System.Void set_firstHoverEntered(UnityEngine.XR.Interaction.Toolkit.HoverEnterEvent value)
    // Offset: 0x53D8850
    void set_firstHoverEntered(::UnityEngine::XR::Interaction::Toolkit::HoverEnterEvent* value);
    // public UnityEngine.XR.Interaction.Toolkit.HoverExitEvent get_lastHoverExited()
    // Offset: 0x53D8858
    ::UnityEngine::XR::Interaction::Toolkit::HoverExitEvent* get_lastHoverExited();
    // public System.Void set_lastHoverExited(UnityEngine.XR.Interaction.Toolkit.HoverExitEvent value)
    // Offset: 0x53D8860
    void set_lastHoverExited(::UnityEngine::XR::Interaction::Toolkit::HoverExitEvent* value);
    // public UnityEngine.XR.Interaction.Toolkit.HoverEnterEvent get_hoverEntered()
    // Offset: 0x53D8868
    ::UnityEngine::XR::Interaction::Toolkit::HoverEnterEvent* get_hoverEntered();
    // public System.Void set_hoverEntered(UnityEngine.XR.Interaction.Toolkit.HoverEnterEvent value)
    // Offset: 0x53D8870
    void set_hoverEntered(::UnityEngine::XR::Interaction::Toolkit::HoverEnterEvent* value);
    // public UnityEngine.XR.Interaction.Toolkit.HoverExitEvent get_hoverExited()
    // Offset: 0x53D8878
    ::UnityEngine::XR::Interaction::Toolkit::HoverExitEvent* get_hoverExited();
    // public System.Void set_hoverExited(UnityEngine.XR.Interaction.Toolkit.HoverExitEvent value)
    // Offset: 0x53D8880
    void set_hoverExited(::UnityEngine::XR::Interaction::Toolkit::HoverExitEvent* value);
    // public UnityEngine.XR.Interaction.Toolkit.SelectEnterEvent get_firstSelectEntered()
    // Offset: 0x53D8888
    ::UnityEngine::XR::Interaction::Toolkit::SelectEnterEvent* get_firstSelectEntered();
    // public System.Void set_firstSelectEntered(UnityEngine.XR.Interaction.Toolkit.SelectEnterEvent value)
    // Offset: 0x53D8890
    void set_firstSelectEntered(::UnityEngine::XR::Interaction::Toolkit::SelectEnterEvent* value);
    // public UnityEngine.XR.Interaction.Toolkit.SelectExitEvent get_lastSelectExited()
    // Offset: 0x53D8898
    ::UnityEngine::XR::Interaction::Toolkit::SelectExitEvent* get_lastSelectExited();
    // public System.Void set_lastSelectExited(UnityEngine.XR.Interaction.Toolkit.SelectExitEvent value)
    // Offset: 0x53D88A0
    void set_lastSelectExited(::UnityEngine::XR::Interaction::Toolkit::SelectExitEvent* value);
    // public UnityEngine.XR.Interaction.Toolkit.SelectEnterEvent get_selectEntered()
    // Offset: 0x53D88A8
    ::UnityEngine::XR::Interaction::Toolkit::SelectEnterEvent* get_selectEntered();
    // public System.Void set_selectEntered(UnityEngine.XR.Interaction.Toolkit.SelectEnterEvent value)
    // Offset: 0x53D88B0
    void set_selectEntered(::UnityEngine::XR::Interaction::Toolkit::SelectEnterEvent* value);
    // public UnityEngine.XR.Interaction.Toolkit.SelectExitEvent get_selectExited()
    // Offset: 0x53D88B8
    ::UnityEngine::XR::Interaction::Toolkit::SelectExitEvent* get_selectExited();
    // public System.Void set_selectExited(UnityEngine.XR.Interaction.Toolkit.SelectExitEvent value)
    // Offset: 0x53D88C0
    void set_selectExited(::UnityEngine::XR::Interaction::Toolkit::SelectExitEvent* value);
    // public UnityEngine.XR.Interaction.Toolkit.ActivateEvent get_activated()
    // Offset: 0x53D88C8
    ::UnityEngine::XR::Interaction::Toolkit::ActivateEvent* get_activated();
    // public System.Void set_activated(UnityEngine.XR.Interaction.Toolkit.ActivateEvent value)
    // Offset: 0x53D88D0
    void set_activated(::UnityEngine::XR::Interaction::Toolkit::ActivateEvent* value);
    // public UnityEngine.XR.Interaction.Toolkit.DeactivateEvent get_deactivated()
    // Offset: 0x53D88D8
    ::UnityEngine::XR::Interaction::Toolkit::DeactivateEvent* get_deactivated();
    // public System.Void set_deactivated(UnityEngine.XR.Interaction.Toolkit.DeactivateEvent value)
    // Offset: 0x53D88E0
    void set_deactivated(::UnityEngine::XR::Interaction::Toolkit::DeactivateEvent* value);
    // public System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractor> get_interactorsHovering()
    // Offset: 0x53D88E8
    ::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractor*>* get_interactorsHovering();
    // public System.Boolean get_isHovered()
    // Offset: 0x53D8978
    bool get_isHovered();
    // public System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractor> get_interactorsSelecting()
    // Offset: 0x53D89D4
    ::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractor*>* get_interactorsSelecting();
    // public UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractor get_firstInteractorSelecting()
    // Offset: 0x53D8A64
    ::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractor* get_firstInteractorSelecting();
    // private System.Void set_firstInteractorSelecting(UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractor value)
    // Offset: 0x53D8A6C
    void set_firstInteractorSelecting(::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractor* value);
    // public System.Boolean get_isSelected()
    // Offset: 0x53D8A74
    bool get_isSelected();
    // public System.Collections.Generic.List`1<UnityEngine.Object> get_startingHoverFilters()
    // Offset: 0x53D8AD0
    ::System::Collections::Generic::List_1<::UnityEngine::Object*>* get_startingHoverFilters();
    // public System.Void set_startingHoverFilters(System.Collections.Generic.List`1<UnityEngine.Object> value)
    // Offset: 0x53D8AD8
    void set_startingHoverFilters(::System::Collections::Generic::List_1<::UnityEngine::Object*>* value);
    // public UnityEngine.XR.Interaction.Toolkit.IXRFilterList`1<UnityEngine.XR.Interaction.Toolkit.Filtering.IXRHoverFilter> get_hoverFilters()
    // Offset: 0x53D8AE0
    ::UnityEngine::XR::Interaction::Toolkit::IXRFilterList_1<::UnityEngine::XR::Interaction::Toolkit::Filtering::IXRHoverFilter*>* get_hoverFilters();
    // public System.Collections.Generic.List`1<UnityEngine.Object> get_startingSelectFilters()
    // Offset: 0x53D8AE8
    ::System::Collections::Generic::List_1<::UnityEngine::Object*>* get_startingSelectFilters();
    // public System.Void set_startingSelectFilters(System.Collections.Generic.List`1<UnityEngine.Object> value)
    // Offset: 0x53D8AF0
    void set_startingSelectFilters(::System::Collections::Generic::List_1<::UnityEngine::Object*>* value);
    // public UnityEngine.XR.Interaction.Toolkit.IXRFilterList`1<UnityEngine.XR.Interaction.Toolkit.Filtering.IXRSelectFilter> get_selectFilters()
    // Offset: 0x53D8AF8
    ::UnityEngine::XR::Interaction::Toolkit::IXRFilterList_1<::UnityEngine::XR::Interaction::Toolkit::Filtering::IXRSelectFilter*>* get_selectFilters();
    // public System.Collections.Generic.List`1<UnityEngine.Object> get_startingInteractionStrengthFilters()
    // Offset: 0x53D8B00
    ::System::Collections::Generic::List_1<::UnityEngine::Object*>* get_startingInteractionStrengthFilters();
    // public System.Void set_startingInteractionStrengthFilters(System.Collections.Generic.List`1<UnityEngine.Object> value)
    // Offset: 0x53D8B08
    void set_startingInteractionStrengthFilters(::System::Collections::Generic::List_1<::UnityEngine::Object*>* value);
    // public UnityEngine.XR.Interaction.Toolkit.IXRFilterList`1<UnityEngine.XR.Interaction.Toolkit.Filtering.IXRInteractionStrengthFilter> get_interactionStrengthFilters()
    // Offset: 0x53D8B18
    ::UnityEngine::XR::Interaction::Toolkit::IXRFilterList_1<::UnityEngine::XR::Interaction::Toolkit::Filtering::IXRInteractionStrengthFilter*>* get_interactionStrengthFilters();
    // public Unity.XR.CoreUtils.Bindings.Variables.IReadOnlyBindableVariable`1<System.Single> get_largestInteractionStrength()
    // Offset: 0x53D8B20
    ::Unity::XR::CoreUtils::Bindings::Variables::IReadOnlyBindableVariable_1<float>* get_largestInteractionStrength();
    // protected System.Void Reset()
    // Offset: 0x53D8B28
    void Reset();
    // protected System.Void Awake()
    // Offset: 0x53D8B2C
    void Awake();
    // protected System.Void OnEnable()
    // Offset: 0x53D9120
    void OnEnable();
    // protected System.Void OnDisable()
    // Offset: 0x53D9138
    void OnDisable();
    // protected System.Void OnDestroy()
    // Offset: 0x53D91E0
    void OnDestroy();
    // private System.Void FindCreateInteractionManager()
    // Offset: 0x53D8E28
    void FindCreateInteractionManager();
    // private System.Void RegisterWithInteractionManager()
    // Offset: 0x53D8698
    void RegisterWithInteractionManager();
    // private System.Void UnregisterWithInteractionManager()
    // Offset: 0x53D913C
    void UnregisterWithInteractionManager();
    // public UnityEngine.Transform GetAttachTransform(UnityEngine.XR.Interaction.Toolkit.IXRInteractor interactor)
    // Offset: 0x53D91E4
    ::UnityEngine::Transform* GetAttachTransform(::UnityEngine::XR::Interaction::Toolkit::IXRInteractor* interactor);
    // public UnityEngine.Pose GetAttachPoseOnSelect(UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractor interactor)
    // Offset: 0x53D91EC
    ::UnityEngine::Pose GetAttachPoseOnSelect(::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractor* interactor);
    // public UnityEngine.Pose GetLocalAttachPoseOnSelect(UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractor interactor)
    // Offset: 0x53D92BC
    ::UnityEngine::Pose GetLocalAttachPoseOnSelect(::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractor* interactor);
    // public System.Single GetDistanceSqrToInteractor(UnityEngine.XR.Interaction.Toolkit.IXRInteractor interactor)
    // Offset: 0x53D938C
    float GetDistanceSqrToInteractor(::UnityEngine::XR::Interaction::Toolkit::IXRInteractor* interactor);
    // public UnityEngine.XR.Interaction.Toolkit.DistanceInfo GetDistance(UnityEngine.Vector3 position)
    // Offset: 0x53D94B4
    ::UnityEngine::XR::Interaction::Toolkit::DistanceInfo GetDistance(::UnityEngine::Vector3 position);
    // public System.Single GetInteractionStrength(UnityEngine.XR.Interaction.Toolkit.IXRInteractor interactor)
    // Offset: 0x53D95E8
    float GetInteractionStrength(::UnityEngine::XR::Interaction::Toolkit::IXRInteractor* interactor);
    // public System.Boolean IsHoverableBy(UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractor interactor)
    // Offset: 0x53D9664
    bool IsHoverableBy(::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractor* interactor);
    // public System.Boolean IsSelectableBy(UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractor interactor)
    // Offset: 0x53D96E8
    bool IsSelectableBy(::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractor* interactor);
    // public System.Boolean IsHovered(UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractor interactor)
    // Offset: 0x53D9774
    bool IsHovered(::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractor* interactor);
    // public System.Boolean IsSelected(UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractor interactor)
    // Offset: 0x53D97CC
    bool IsSelected(::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractor* interactor);
    // protected System.Boolean IsHovered(UnityEngine.XR.Interaction.Toolkit.IXRInteractor interactor)
    // Offset: 0x53D9824
    bool IsHovered(::UnityEngine::XR::Interaction::Toolkit::IXRInteractor* interactor);
    // protected System.Boolean IsSelected(UnityEngine.XR.Interaction.Toolkit.IXRInteractor interactor)
    // Offset: 0x53D9898
    bool IsSelected(::UnityEngine::XR::Interaction::Toolkit::IXRInteractor* interactor);
    // public UnityEngine.GameObject GetCustomReticle(UnityEngine.XR.Interaction.Toolkit.IXRInteractor interactor)
    // Offset: 0x53D990C
    ::UnityEngine::GameObject* GetCustomReticle(::UnityEngine::XR::Interaction::Toolkit::IXRInteractor* interactor);
    // public System.Void AttachCustomReticle(UnityEngine.XR.Interaction.Toolkit.IXRInteractor interactor)
    // Offset: 0x53D9984
    void AttachCustomReticle(::UnityEngine::XR::Interaction::Toolkit::IXRInteractor* interactor);
    // public System.Void RemoveCustomReticle(UnityEngine.XR.Interaction.Toolkit.IXRInteractor interactor)
    // Offset: 0x53D9C28
    void RemoveCustomReticle(::UnityEngine::XR::Interaction::Toolkit::IXRInteractor* interactor);
    // protected System.Void CaptureAttachPose(UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractor interactor)
    // Offset: 0x53D9E34
    void CaptureAttachPose(::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractor* interactor);
    // public System.Void ProcessInteractable(UnityEngine.XR.Interaction.Toolkit.XRInteractionUpdateOrder/UpdatePhase updatePhase)
    // Offset: 0x53DA074
    void ProcessInteractable(::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::UpdatePhase updatePhase);
    // private System.Void UnityEngine.XR.Interaction.Toolkit.IXRInteractionStrengthInteractable.ProcessInteractionStrength(UnityEngine.XR.Interaction.Toolkit.XRInteractionUpdateOrder/UpdatePhase updatePhase)
    // Offset: 0x53DA078
    void UnityEngine_XR_Interaction_Toolkit_IXRInteractionStrengthInteractable_ProcessInteractionStrength(::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::UpdatePhase updatePhase);
    // private System.Void UnityEngine.XR.Interaction.Toolkit.IXRInteractable.OnRegistered(UnityEngine.XR.Interaction.Toolkit.InteractableRegisteredEventArgs args)
    // Offset: 0x53DA088
    void UnityEngine_XR_Interaction_Toolkit_IXRInteractable_OnRegistered(::UnityEngine::XR::Interaction::Toolkit::InteractableRegisteredEventArgs* args);
    // private System.Void UnityEngine.XR.Interaction.Toolkit.IXRInteractable.OnUnregistered(UnityEngine.XR.Interaction.Toolkit.InteractableUnregisteredEventArgs args)
    // Offset: 0x53DA098
    void UnityEngine_XR_Interaction_Toolkit_IXRInteractable_OnUnregistered(::UnityEngine::XR::Interaction::Toolkit::InteractableUnregisteredEventArgs* args);
    // private System.Void UnityEngine.XR.Interaction.Toolkit.IXRActivateInteractable.OnActivated(UnityEngine.XR.Interaction.Toolkit.ActivateEventArgs args)
    // Offset: 0x53DA0A8
    void UnityEngine_XR_Interaction_Toolkit_IXRActivateInteractable_OnActivated(::UnityEngine::XR::Interaction::Toolkit::ActivateEventArgs* args);
    // private System.Void UnityEngine.XR.Interaction.Toolkit.IXRActivateInteractable.OnDeactivated(UnityEngine.XR.Interaction.Toolkit.DeactivateEventArgs args)
    // Offset: 0x53DA0B8
    void UnityEngine_XR_Interaction_Toolkit_IXRActivateInteractable_OnDeactivated(::UnityEngine::XR::Interaction::Toolkit::DeactivateEventArgs* args);
    // private System.Boolean UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractable.IsHoverableBy(UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractor interactor)
    // Offset: 0x53DA0C8
    bool UnityEngine_XR_Interaction_Toolkit_IXRHoverInteractable_IsHoverableBy(::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractor* interactor);
    // private System.Void UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractable.OnHoverEntering(UnityEngine.XR.Interaction.Toolkit.HoverEnterEventArgs args)
    // Offset: 0x53DA198
    void UnityEngine_XR_Interaction_Toolkit_IXRHoverInteractable_OnHoverEntering(::UnityEngine::XR::Interaction::Toolkit::HoverEnterEventArgs* args);
    // private System.Void UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractable.OnHoverEntered(UnityEngine.XR.Interaction.Toolkit.HoverEnterEventArgs args)
    // Offset: 0x53DA1A8
    void UnityEngine_XR_Interaction_Toolkit_IXRHoverInteractable_OnHoverEntered(::UnityEngine::XR::Interaction::Toolkit::HoverEnterEventArgs* args);
    // private System.Void UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractable.OnHoverExiting(UnityEngine.XR.Interaction.Toolkit.HoverExitEventArgs args)
    // Offset: 0x53DA1B8
    void UnityEngine_XR_Interaction_Toolkit_IXRHoverInteractable_OnHoverExiting(::UnityEngine::XR::Interaction::Toolkit::HoverExitEventArgs* args);
    // private System.Void UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractable.OnHoverExited(UnityEngine.XR.Interaction.Toolkit.HoverExitEventArgs args)
    // Offset: 0x53DA1C8
    void UnityEngine_XR_Interaction_Toolkit_IXRHoverInteractable_OnHoverExited(::UnityEngine::XR::Interaction::Toolkit::HoverExitEventArgs* args);
    // private System.Boolean UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractable.IsSelectableBy(UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractor interactor)
    // Offset: 0x53DA1D8
    bool UnityEngine_XR_Interaction_Toolkit_IXRSelectInteractable_IsSelectableBy(::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractor* interactor);
    // private System.Void UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractable.OnSelectEntering(UnityEngine.XR.Interaction.Toolkit.SelectEnterEventArgs args)
    // Offset: 0x53DA2A8
    void UnityEngine_XR_Interaction_Toolkit_IXRSelectInteractable_OnSelectEntering(::UnityEngine::XR::Interaction::Toolkit::SelectEnterEventArgs* args);
    // private System.Void UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractable.OnSelectEntered(UnityEngine.XR.Interaction.Toolkit.SelectEnterEventArgs args)
    // Offset: 0x53DA2B8
    void UnityEngine_XR_Interaction_Toolkit_IXRSelectInteractable_OnSelectEntered(::UnityEngine::XR::Interaction::Toolkit::SelectEnterEventArgs* args);
    // private System.Void UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractable.OnSelectExiting(UnityEngine.XR.Interaction.Toolkit.SelectExitEventArgs args)
    // Offset: 0x53DA2C8
    void UnityEngine_XR_Interaction_Toolkit_IXRSelectInteractable_OnSelectExiting(::UnityEngine::XR::Interaction::Toolkit::SelectExitEventArgs* args);
    // private System.Void UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractable.OnSelectExited(UnityEngine.XR.Interaction.Toolkit.SelectExitEventArgs args)
    // Offset: 0x53DA2D8
    void UnityEngine_XR_Interaction_Toolkit_IXRSelectInteractable_OnSelectExited(::UnityEngine::XR::Interaction::Toolkit::SelectExitEventArgs* args);
    // protected System.Void OnRegistered(UnityEngine.XR.Interaction.Toolkit.InteractableRegisteredEventArgs args)
    // Offset: 0x53DA2E8
    void OnRegistered(::UnityEngine::XR::Interaction::Toolkit::InteractableRegisteredEventArgs* args);
    // protected System.Void OnUnregistered(UnityEngine.XR.Interaction.Toolkit.InteractableUnregisteredEventArgs args)
    // Offset: 0x53DA420
    void OnUnregistered(::UnityEngine::XR::Interaction::Toolkit::InteractableUnregisteredEventArgs* args);
    // protected System.Void OnHoverEntering(UnityEngine.XR.Interaction.Toolkit.HoverEnterEventArgs args)
    // Offset: 0x53DA558
    void OnHoverEntering(::UnityEngine::XR::Interaction::Toolkit::HoverEnterEventArgs* args);
    // protected System.Void OnHoverEntered(UnityEngine.XR.Interaction.Toolkit.HoverEnterEventArgs args)
    // Offset: 0x53DA7B4
    void OnHoverEntered(::UnityEngine::XR::Interaction::Toolkit::HoverEnterEventArgs* args);
    // protected System.Void OnHoverExiting(UnityEngine.XR.Interaction.Toolkit.HoverExitEventArgs args)
    // Offset: 0x53DA874
    void OnHoverExiting(::UnityEngine::XR::Interaction::Toolkit::HoverExitEventArgs* args);
    // protected System.Void OnHoverExited(UnityEngine.XR.Interaction.Toolkit.HoverExitEventArgs args)
    // Offset: 0x53DAAC8
    void OnHoverExited(::UnityEngine::XR::Interaction::Toolkit::HoverExitEventArgs* args);
    // protected System.Void OnSelectEntering(UnityEngine.XR.Interaction.Toolkit.SelectEnterEventArgs args)
    // Offset: 0x53DAB84
    void OnSelectEntering(::UnityEngine::XR::Interaction::Toolkit::SelectEnterEventArgs* args);
    // protected System.Void OnSelectEntered(UnityEngine.XR.Interaction.Toolkit.SelectEnterEventArgs args)
    // Offset: 0x53DACEC
    void OnSelectEntered(::UnityEngine::XR::Interaction::Toolkit::SelectEnterEventArgs* args);
    // protected System.Void OnSelectExiting(UnityEngine.XR.Interaction.Toolkit.SelectExitEventArgs args)
    // Offset: 0x53DADAC
    void OnSelectExiting(::UnityEngine::XR::Interaction::Toolkit::SelectExitEventArgs* args);
    // protected System.Void OnSelectExited(UnityEngine.XR.Interaction.Toolkit.SelectExitEventArgs args)
    // Offset: 0x53DAF08
    void OnSelectExited(::UnityEngine::XR::Interaction::Toolkit::SelectExitEventArgs* args);
    // protected System.Void OnActivated(UnityEngine.XR.Interaction.Toolkit.ActivateEventArgs args)
    // Offset: 0x53DB04C
    void OnActivated(::UnityEngine::XR::Interaction::Toolkit::ActivateEventArgs* args);
    // protected System.Void OnDeactivated(UnityEngine.XR.Interaction.Toolkit.DeactivateEventArgs args)
    // Offset: 0x53DB0CC
    void OnDeactivated(::UnityEngine::XR::Interaction::Toolkit::DeactivateEventArgs* args);
    // protected System.Void ProcessInteractionStrength(UnityEngine.XR.Interaction.Toolkit.XRInteractionUpdateOrder/UpdatePhase updatePhase)
    // Offset: 0x53DB14C
    void ProcessInteractionStrength(::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::UpdatePhase updatePhase);
    // protected System.Boolean ProcessHoverFilters(UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractor interactor)
    // Offset: 0x53DA188
    bool ProcessHoverFilters(::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractor* interactor);
    // protected System.Boolean ProcessSelectFilters(UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractor interactor)
    // Offset: 0x53DA298
    bool ProcessSelectFilters(::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractor* interactor);
    // protected System.Single ProcessInteractionStrengthFilters(UnityEngine.XR.Interaction.Toolkit.IXRInteractor interactor, System.Single interactionStrength)
    // Offset: 0x53DB698
    float ProcessInteractionStrengthFilters(::UnityEngine::XR::Interaction::Toolkit::IXRInteractor* interactor, float interactionStrength);
    // public UnityEngine.LayerMask get_interactionLayerMask()
    // Offset: 0x53DB6A8
    ::UnityEngine::LayerMask get_interactionLayerMask();
    // public System.Void set_interactionLayerMask(UnityEngine.LayerMask value)
    // Offset: 0x53DB6B0
    void set_interactionLayerMask(::UnityEngine::LayerMask value);
    // public UnityEngine.XR.Interaction.Toolkit.XRInteractableEvent get_onFirstHoverEntered()
    // Offset: 0x53DB6B8
    ::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent* get_onFirstHoverEntered();
    // public System.Void set_onFirstHoverEntered(UnityEngine.XR.Interaction.Toolkit.XRInteractableEvent value)
    // Offset: 0x53DB6C0
    void set_onFirstHoverEntered(::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent* value);
    // public UnityEngine.XR.Interaction.Toolkit.XRInteractableEvent get_onLastHoverExited()
    // Offset: 0x53DB6D0
    ::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent* get_onLastHoverExited();
    // public System.Void set_onLastHoverExited(UnityEngine.XR.Interaction.Toolkit.XRInteractableEvent value)
    // Offset: 0x53DB6D8
    void set_onLastHoverExited(::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent* value);
    // public UnityEngine.XR.Interaction.Toolkit.XRInteractableEvent get_onHoverEntered()
    // Offset: 0x53DB6E8
    ::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent* get_onHoverEntered();
    // public System.Void set_onHoverEntered(UnityEngine.XR.Interaction.Toolkit.XRInteractableEvent value)
    // Offset: 0x53DB6F0
    void set_onHoverEntered(::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent* value);
    // public UnityEngine.XR.Interaction.Toolkit.XRInteractableEvent get_onHoverExited()
    // Offset: 0x53DB700
    ::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent* get_onHoverExited();
    // public System.Void set_onHoverExited(UnityEngine.XR.Interaction.Toolkit.XRInteractableEvent value)
    // Offset: 0x53DB708
    void set_onHoverExited(::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent* value);
    // public UnityEngine.XR.Interaction.Toolkit.XRInteractableEvent get_onSelectEntered()
    // Offset: 0x53DB718
    ::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent* get_onSelectEntered();
    // public System.Void set_onSelectEntered(UnityEngine.XR.Interaction.Toolkit.XRInteractableEvent value)
    // Offset: 0x53DB720
    void set_onSelectEntered(::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent* value);
    // public UnityEngine.XR.Interaction.Toolkit.XRInteractableEvent get_onSelectExited()
    // Offset: 0x53DB730
    ::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent* get_onSelectExited();
    // public System.Void set_onSelectExited(UnityEngine.XR.Interaction.Toolkit.XRInteractableEvent value)
    // Offset: 0x53DB738
    void set_onSelectExited(::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent* value);
    // public UnityEngine.XR.Interaction.Toolkit.XRInteractableEvent get_onSelectCanceled()
    // Offset: 0x53DB748
    ::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent* get_onSelectCanceled();
    // public System.Void set_onSelectCanceled(UnityEngine.XR.Interaction.Toolkit.XRInteractableEvent value)
    // Offset: 0x53DB750
    void set_onSelectCanceled(::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent* value);
    // public UnityEngine.XR.Interaction.Toolkit.XRInteractableEvent get_onActivate()
    // Offset: 0x53DB760
    ::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent* get_onActivate();
    // public System.Void set_onActivate(UnityEngine.XR.Interaction.Toolkit.XRInteractableEvent value)
    // Offset: 0x53DB768
    void set_onActivate(::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent* value);
    // public UnityEngine.XR.Interaction.Toolkit.XRInteractableEvent get_onDeactivate()
    // Offset: 0x53DB778
    ::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent* get_onDeactivate();
    // public System.Void set_onDeactivate(UnityEngine.XR.Interaction.Toolkit.XRInteractableEvent value)
    // Offset: 0x53DB780
    void set_onDeactivate(::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent* value);
    // public UnityEngine.XR.Interaction.Toolkit.XRInteractableEvent get_onFirstHoverEnter()
    // Offset: 0x53DB790
    ::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent* get_onFirstHoverEnter();
    // public UnityEngine.XR.Interaction.Toolkit.XRInteractableEvent get_onHoverEnter()
    // Offset: 0x53DB798
    ::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent* get_onHoverEnter();
    // public UnityEngine.XR.Interaction.Toolkit.XRInteractableEvent get_onHoverExit()
    // Offset: 0x53DB7A0
    ::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent* get_onHoverExit();
    // public UnityEngine.XR.Interaction.Toolkit.XRInteractableEvent get_onLastHoverExit()
    // Offset: 0x53DB7A8
    ::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent* get_onLastHoverExit();
    // public UnityEngine.XR.Interaction.Toolkit.XRInteractableEvent get_onSelectEnter()
    // Offset: 0x53DB7B0
    ::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent* get_onSelectEnter();
    // public UnityEngine.XR.Interaction.Toolkit.XRInteractableEvent get_onSelectExit()
    // Offset: 0x53DB7B8
    ::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent* get_onSelectExit();
    // public UnityEngine.XR.Interaction.Toolkit.XRInteractableEvent get_onSelectCancel()
    // Offset: 0x53DB7C0
    ::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent* get_onSelectCancel();
    // protected System.Void OnHoverEntering(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor interactor)
    // Offset: 0x53DB7C8
    void OnHoverEntering(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor);
    // protected System.Void OnHoverEntered(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor interactor)
    // Offset: 0x53DB7CC
    void OnHoverEntered(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor);
    // protected System.Void OnHoverExiting(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor interactor)
    // Offset: 0x53DB864
    void OnHoverExiting(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor);
    // protected System.Void OnHoverExited(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor interactor)
    // Offset: 0x53DB868
    void OnHoverExited(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor);
    // protected System.Void OnSelectEntering(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor interactor)
    // Offset: 0x53DB8FC
    void OnSelectEntering(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor);
    // protected System.Void OnSelectEntered(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor interactor)
    // Offset: 0x53DB900
    void OnSelectEntered(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor);
    // protected System.Void OnSelectExiting(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor interactor)
    // Offset: 0x53DB960
    void OnSelectExiting(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor);
    // protected System.Void OnSelectExited(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor interactor)
    // Offset: 0x53DB964
    void OnSelectExited(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor);
    // protected System.Void OnSelectCanceling(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor interactor)
    // Offset: 0x53DB9C4
    void OnSelectCanceling(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor);
    // protected System.Void OnSelectCanceled(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor interactor)
    // Offset: 0x53DB9C8
    void OnSelectCanceled(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor);
    // protected System.Void OnActivate(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor interactor)
    // Offset: 0x53DBA28
    void OnActivate(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor);
    // protected System.Void OnDeactivate(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor interactor)
    // Offset: 0x53DBA88
    void OnDeactivate(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor);
    // public System.Single GetDistanceSqrToInteractor(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor interactor)
    // Offset: 0x53DBAE8
    float GetDistanceSqrToInteractor(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor);
    // public System.Void AttachCustomReticle(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor interactor)
    // Offset: 0x53DBAF8
    void AttachCustomReticle(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor);
    // public System.Void RemoveCustomReticle(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor interactor)
    // Offset: 0x53DBB08
    void RemoveCustomReticle(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor);
    // public System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor> get_hoveringInteractors()
    // Offset: 0x53DBB18
    ::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*>* get_hoveringInteractors();
    // public UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor get_selectingInteractor()
    // Offset: 0x53DBB20
    ::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* get_selectingInteractor();
    // protected System.Void set_selectingInteractor(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor value)
    // Offset: 0x53DBBD4
    void set_selectingInteractor(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* value);
    // public System.Boolean IsHoverableBy(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor interactor)
    // Offset: 0x53DBCC0
    bool IsHoverableBy(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor);
    // public System.Boolean IsSelectableBy(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor interactor)
    // Offset: 0x53DBCD0
    bool IsSelectableBy(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor);
    // protected System.Void .ctor()
    // Offset: 0x53DBCE0
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static XRBaseInteractable* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<XRBaseInteractable*, creationType>()));
    }
    // static private System.Void .cctor()
    // Offset: 0x53DC584
    static void _cctor();
    // private UnityEngine.Transform UnityEngine.XR.Interaction.Toolkit.IXRInteractable.get_transform()
    // Offset: 0x53DC5F8
    ::UnityEngine::Transform* UnityEngine_XR_Interaction_Toolkit_IXRInteractable_get_transform();
  }; // UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable
  #pragma pack(pop)
  static check_size<sizeof(XRBaseInteractable), 408 + sizeof(::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*>*)> __UnityEngine_XR_Interaction_Toolkit_XRBaseInteractableSizeCheck;
  static_assert(sizeof(XRBaseInteractable) == 0x1A0);
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::DistanceCalculationMode, "UnityEngine.XR.Interaction.Toolkit", "XRBaseInteractable/DistanceCalculationMode");
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::add_registered
// Il2CppName: add_registered
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)(::System::Action_1<::UnityEngine::XR::Interaction::Toolkit::InteractableRegisteredEventArgs*>*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::add_registered)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "InteractableRegisteredEventArgs")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "add_registered", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::remove_registered
// Il2CppName: remove_registered
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)(::System::Action_1<::UnityEngine::XR::Interaction::Toolkit::InteractableRegisteredEventArgs*>*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::remove_registered)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "InteractableRegisteredEventArgs")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "remove_registered", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::add_unregistered
// Il2CppName: add_unregistered
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)(::System::Action_1<::UnityEngine::XR::Interaction::Toolkit::InteractableUnregisteredEventArgs*>*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::add_unregistered)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "InteractableUnregisteredEventArgs")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "add_unregistered", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::remove_unregistered
// Il2CppName: remove_unregistered
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)(::System::Action_1<::UnityEngine::XR::Interaction::Toolkit::InteractableUnregisteredEventArgs*>*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::remove_unregistered)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "InteractableUnregisteredEventArgs")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "remove_unregistered", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_getDistanceOverride
// Il2CppName: get_getDistanceOverride
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Func_3<::UnityEngine::XR::Interaction::Toolkit::IXRInteractable*, ::UnityEngine::Vector3, ::UnityEngine::XR::Interaction::Toolkit::DistanceInfo>* (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_getDistanceOverride)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "get_getDistanceOverride", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_getDistanceOverride
// Il2CppName: set_getDistanceOverride
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)(::System::Func_3<::UnityEngine::XR::Interaction::Toolkit::IXRInteractable*, ::UnityEngine::Vector3, ::UnityEngine::XR::Interaction::Toolkit::DistanceInfo>*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_getDistanceOverride)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Func`3"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "IXRInteractable"), ::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3"), ::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "DistanceInfo")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "set_getDistanceOverride", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_interactionManager
// Il2CppName: get_interactionManager
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager* (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_interactionManager)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "get_interactionManager", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_interactionManager
// Il2CppName: set_interactionManager
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)(::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_interactionManager)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "XRInteractionManager")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "set_interactionManager", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_colliders
// Il2CppName: get_colliders
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::List_1<::UnityEngine::Collider*>* (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_colliders)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "get_colliders", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_interactionLayers
// Il2CppName: get_interactionLayers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::XR::Interaction::Toolkit::InteractionLayerMask (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_interactionLayers)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "get_interactionLayers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_interactionLayers
// Il2CppName: set_interactionLayers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)(::UnityEngine::XR::Interaction::Toolkit::InteractionLayerMask)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_interactionLayers)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "InteractionLayerMask")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "set_interactionLayers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_distanceCalculationMode
// Il2CppName: get_distanceCalculationMode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::DistanceCalculationMode (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_distanceCalculationMode)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "get_distanceCalculationMode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_distanceCalculationMode
// Il2CppName: set_distanceCalculationMode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::DistanceCalculationMode)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_distanceCalculationMode)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "XRBaseInteractable/DistanceCalculationMode")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "set_distanceCalculationMode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_selectMode
// Il2CppName: get_selectMode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::XR::Interaction::Toolkit::InteractableSelectMode (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_selectMode)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "get_selectMode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_selectMode
// Il2CppName: set_selectMode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)(::UnityEngine::XR::Interaction::Toolkit::InteractableSelectMode)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_selectMode)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "InteractableSelectMode")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "set_selectMode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_customReticle
// Il2CppName: get_customReticle
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::GameObject* (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_customReticle)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "get_customReticle", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_customReticle
// Il2CppName: set_customReticle
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)(::UnityEngine::GameObject*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_customReticle)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "set_customReticle", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_allowGazeInteraction
// Il2CppName: get_allowGazeInteraction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_allowGazeInteraction)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "get_allowGazeInteraction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_allowGazeInteraction
// Il2CppName: set_allowGazeInteraction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)(bool)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_allowGazeInteraction)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "set_allowGazeInteraction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_allowGazeSelect
// Il2CppName: get_allowGazeSelect
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_allowGazeSelect)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "get_allowGazeSelect", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_allowGazeSelect
// Il2CppName: set_allowGazeSelect
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)(bool)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_allowGazeSelect)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "set_allowGazeSelect", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_overrideGazeTimeToSelect
// Il2CppName: get_overrideGazeTimeToSelect
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_overrideGazeTimeToSelect)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "get_overrideGazeTimeToSelect", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_overrideGazeTimeToSelect
// Il2CppName: set_overrideGazeTimeToSelect
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)(bool)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_overrideGazeTimeToSelect)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "set_overrideGazeTimeToSelect", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_gazeTimeToSelect
// Il2CppName: get_gazeTimeToSelect
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_gazeTimeToSelect)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "get_gazeTimeToSelect", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_gazeTimeToSelect
// Il2CppName: set_gazeTimeToSelect
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)(float)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_gazeTimeToSelect)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "set_gazeTimeToSelect", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_overrideTimeToAutoDeselectGaze
// Il2CppName: get_overrideTimeToAutoDeselectGaze
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_overrideTimeToAutoDeselectGaze)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "get_overrideTimeToAutoDeselectGaze", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_overrideTimeToAutoDeselectGaze
// Il2CppName: set_overrideTimeToAutoDeselectGaze
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)(bool)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_overrideTimeToAutoDeselectGaze)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "set_overrideTimeToAutoDeselectGaze", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_timeToAutoDeselectGaze
// Il2CppName: get_timeToAutoDeselectGaze
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_timeToAutoDeselectGaze)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "get_timeToAutoDeselectGaze", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_timeToAutoDeselectGaze
// Il2CppName: set_timeToAutoDeselectGaze
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)(float)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_timeToAutoDeselectGaze)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "set_timeToAutoDeselectGaze", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_allowGazeAssistance
// Il2CppName: get_allowGazeAssistance
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_allowGazeAssistance)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "get_allowGazeAssistance", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_allowGazeAssistance
// Il2CppName: set_allowGazeAssistance
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)(bool)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_allowGazeAssistance)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "set_allowGazeAssistance", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_firstHoverEntered
// Il2CppName: get_firstHoverEntered
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::XR::Interaction::Toolkit::HoverEnterEvent* (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_firstHoverEntered)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "get_firstHoverEntered", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_firstHoverEntered
// Il2CppName: set_firstHoverEntered
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)(::UnityEngine::XR::Interaction::Toolkit::HoverEnterEvent*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_firstHoverEntered)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "HoverEnterEvent")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "set_firstHoverEntered", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_lastHoverExited
// Il2CppName: get_lastHoverExited
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::XR::Interaction::Toolkit::HoverExitEvent* (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_lastHoverExited)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "get_lastHoverExited", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_lastHoverExited
// Il2CppName: set_lastHoverExited
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)(::UnityEngine::XR::Interaction::Toolkit::HoverExitEvent*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_lastHoverExited)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "HoverExitEvent")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "set_lastHoverExited", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_hoverEntered
// Il2CppName: get_hoverEntered
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::XR::Interaction::Toolkit::HoverEnterEvent* (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_hoverEntered)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "get_hoverEntered", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_hoverEntered
// Il2CppName: set_hoverEntered
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)(::UnityEngine::XR::Interaction::Toolkit::HoverEnterEvent*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_hoverEntered)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "HoverEnterEvent")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "set_hoverEntered", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_hoverExited
// Il2CppName: get_hoverExited
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::XR::Interaction::Toolkit::HoverExitEvent* (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_hoverExited)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "get_hoverExited", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_hoverExited
// Il2CppName: set_hoverExited
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)(::UnityEngine::XR::Interaction::Toolkit::HoverExitEvent*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_hoverExited)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "HoverExitEvent")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "set_hoverExited", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_firstSelectEntered
// Il2CppName: get_firstSelectEntered
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::XR::Interaction::Toolkit::SelectEnterEvent* (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_firstSelectEntered)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "get_firstSelectEntered", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_firstSelectEntered
// Il2CppName: set_firstSelectEntered
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)(::UnityEngine::XR::Interaction::Toolkit::SelectEnterEvent*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_firstSelectEntered)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "SelectEnterEvent")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "set_firstSelectEntered", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_lastSelectExited
// Il2CppName: get_lastSelectExited
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::XR::Interaction::Toolkit::SelectExitEvent* (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_lastSelectExited)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "get_lastSelectExited", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_lastSelectExited
// Il2CppName: set_lastSelectExited
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)(::UnityEngine::XR::Interaction::Toolkit::SelectExitEvent*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_lastSelectExited)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "SelectExitEvent")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "set_lastSelectExited", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_selectEntered
// Il2CppName: get_selectEntered
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::XR::Interaction::Toolkit::SelectEnterEvent* (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_selectEntered)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "get_selectEntered", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_selectEntered
// Il2CppName: set_selectEntered
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)(::UnityEngine::XR::Interaction::Toolkit::SelectEnterEvent*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_selectEntered)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "SelectEnterEvent")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "set_selectEntered", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_selectExited
// Il2CppName: get_selectExited
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::XR::Interaction::Toolkit::SelectExitEvent* (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_selectExited)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "get_selectExited", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_selectExited
// Il2CppName: set_selectExited
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)(::UnityEngine::XR::Interaction::Toolkit::SelectExitEvent*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_selectExited)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "SelectExitEvent")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "set_selectExited", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_activated
// Il2CppName: get_activated
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::XR::Interaction::Toolkit::ActivateEvent* (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_activated)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "get_activated", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_activated
// Il2CppName: set_activated
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)(::UnityEngine::XR::Interaction::Toolkit::ActivateEvent*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_activated)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "ActivateEvent")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "set_activated", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_deactivated
// Il2CppName: get_deactivated
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::XR::Interaction::Toolkit::DeactivateEvent* (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_deactivated)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "get_deactivated", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_deactivated
// Il2CppName: set_deactivated
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)(::UnityEngine::XR::Interaction::Toolkit::DeactivateEvent*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_deactivated)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "DeactivateEvent")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "set_deactivated", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_interactorsHovering
// Il2CppName: get_interactorsHovering
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractor*>* (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_interactorsHovering)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "get_interactorsHovering", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_isHovered
// Il2CppName: get_isHovered
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_isHovered)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "get_isHovered", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_interactorsSelecting
// Il2CppName: get_interactorsSelecting
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractor*>* (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_interactorsSelecting)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "get_interactorsSelecting", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_firstInteractorSelecting
// Il2CppName: get_firstInteractorSelecting
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractor* (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_firstInteractorSelecting)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "get_firstInteractorSelecting", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_firstInteractorSelecting
// Il2CppName: set_firstInteractorSelecting
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)(::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractor*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_firstInteractorSelecting)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "IXRSelectInteractor")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "set_firstInteractorSelecting", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_isSelected
// Il2CppName: get_isSelected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_isSelected)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "get_isSelected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_startingHoverFilters
// Il2CppName: get_startingHoverFilters
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::List_1<::UnityEngine::Object*>* (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_startingHoverFilters)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "get_startingHoverFilters", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_startingHoverFilters
// Il2CppName: set_startingHoverFilters
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)(::System::Collections::Generic::List_1<::UnityEngine::Object*>*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_startingHoverFilters)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine", "Object")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "set_startingHoverFilters", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_hoverFilters
// Il2CppName: get_hoverFilters
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::XR::Interaction::Toolkit::IXRFilterList_1<::UnityEngine::XR::Interaction::Toolkit::Filtering::IXRHoverFilter*>* (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_hoverFilters)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "get_hoverFilters", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_startingSelectFilters
// Il2CppName: get_startingSelectFilters
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::List_1<::UnityEngine::Object*>* (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_startingSelectFilters)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "get_startingSelectFilters", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_startingSelectFilters
// Il2CppName: set_startingSelectFilters
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)(::System::Collections::Generic::List_1<::UnityEngine::Object*>*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_startingSelectFilters)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine", "Object")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "set_startingSelectFilters", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_selectFilters
// Il2CppName: get_selectFilters
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::XR::Interaction::Toolkit::IXRFilterList_1<::UnityEngine::XR::Interaction::Toolkit::Filtering::IXRSelectFilter*>* (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_selectFilters)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "get_selectFilters", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_startingInteractionStrengthFilters
// Il2CppName: get_startingInteractionStrengthFilters
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::List_1<::UnityEngine::Object*>* (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_startingInteractionStrengthFilters)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "get_startingInteractionStrengthFilters", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_startingInteractionStrengthFilters
// Il2CppName: set_startingInteractionStrengthFilters
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)(::System::Collections::Generic::List_1<::UnityEngine::Object*>*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_startingInteractionStrengthFilters)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine", "Object")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "set_startingInteractionStrengthFilters", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_interactionStrengthFilters
// Il2CppName: get_interactionStrengthFilters
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::XR::Interaction::Toolkit::IXRFilterList_1<::UnityEngine::XR::Interaction::Toolkit::Filtering::IXRInteractionStrengthFilter*>* (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_interactionStrengthFilters)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "get_interactionStrengthFilters", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_largestInteractionStrength
// Il2CppName: get_largestInteractionStrength
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Unity::XR::CoreUtils::Bindings::Variables::IReadOnlyBindableVariable_1<float>* (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_largestInteractionStrength)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "get_largestInteractionStrength", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::Reset
// Il2CppName: Reset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::Reset)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "Reset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::Awake
// Il2CppName: Awake
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::Awake)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "Awake", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::OnEnable
// Il2CppName: OnEnable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::OnEnable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "OnEnable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::OnDisable
// Il2CppName: OnDisable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::OnDisable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "OnDisable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::OnDestroy
// Il2CppName: OnDestroy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::OnDestroy)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "OnDestroy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::FindCreateInteractionManager
// Il2CppName: FindCreateInteractionManager
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::FindCreateInteractionManager)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "FindCreateInteractionManager", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::RegisterWithInteractionManager
// Il2CppName: RegisterWithInteractionManager
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::RegisterWithInteractionManager)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "RegisterWithInteractionManager", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::UnregisterWithInteractionManager
// Il2CppName: UnregisterWithInteractionManager
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::UnregisterWithInteractionManager)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "UnregisterWithInteractionManager", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::GetAttachTransform
// Il2CppName: GetAttachTransform
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Transform* (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)(::UnityEngine::XR::Interaction::Toolkit::IXRInteractor*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::GetAttachTransform)> {
  static const MethodInfo* get() {
    static auto* interactor = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "IXRInteractor")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "GetAttachTransform", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactor});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::GetAttachPoseOnSelect
// Il2CppName: GetAttachPoseOnSelect
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Pose (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)(::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractor*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::GetAttachPoseOnSelect)> {
  static const MethodInfo* get() {
    static auto* interactor = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "IXRSelectInteractor")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "GetAttachPoseOnSelect", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactor});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::GetLocalAttachPoseOnSelect
// Il2CppName: GetLocalAttachPoseOnSelect
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Pose (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)(::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractor*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::GetLocalAttachPoseOnSelect)> {
  static const MethodInfo* get() {
    static auto* interactor = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "IXRSelectInteractor")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "GetLocalAttachPoseOnSelect", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactor});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::GetDistanceSqrToInteractor
// Il2CppName: GetDistanceSqrToInteractor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)(::UnityEngine::XR::Interaction::Toolkit::IXRInteractor*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::GetDistanceSqrToInteractor)> {
  static const MethodInfo* get() {
    static auto* interactor = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "IXRInteractor")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "GetDistanceSqrToInteractor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactor});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::GetDistance
// Il2CppName: GetDistance
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::XR::Interaction::Toolkit::DistanceInfo (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)(::UnityEngine::Vector3)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::GetDistance)> {
  static const MethodInfo* get() {
    static auto* position = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "GetDistance", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{position});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::GetInteractionStrength
// Il2CppName: GetInteractionStrength
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)(::UnityEngine::XR::Interaction::Toolkit::IXRInteractor*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::GetInteractionStrength)> {
  static const MethodInfo* get() {
    static auto* interactor = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "IXRInteractor")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "GetInteractionStrength", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactor});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::IsHoverableBy
// Il2CppName: IsHoverableBy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)(::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractor*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::IsHoverableBy)> {
  static const MethodInfo* get() {
    static auto* interactor = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "IXRHoverInteractor")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "IsHoverableBy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactor});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::IsSelectableBy
// Il2CppName: IsSelectableBy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)(::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractor*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::IsSelectableBy)> {
  static const MethodInfo* get() {
    static auto* interactor = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "IXRSelectInteractor")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "IsSelectableBy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactor});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::IsHovered
// Il2CppName: IsHovered
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)(::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractor*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::IsHovered)> {
  static const MethodInfo* get() {
    static auto* interactor = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "IXRHoverInteractor")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "IsHovered", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactor});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::IsSelected
// Il2CppName: IsSelected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)(::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractor*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::IsSelected)> {
  static const MethodInfo* get() {
    static auto* interactor = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "IXRSelectInteractor")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "IsSelected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactor});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::IsHovered
// Il2CppName: IsHovered
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)(::UnityEngine::XR::Interaction::Toolkit::IXRInteractor*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::IsHovered)> {
  static const MethodInfo* get() {
    static auto* interactor = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "IXRInteractor")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "IsHovered", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactor});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::IsSelected
// Il2CppName: IsSelected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)(::UnityEngine::XR::Interaction::Toolkit::IXRInteractor*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::IsSelected)> {
  static const MethodInfo* get() {
    static auto* interactor = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "IXRInteractor")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "IsSelected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactor});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::GetCustomReticle
// Il2CppName: GetCustomReticle
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::GameObject* (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)(::UnityEngine::XR::Interaction::Toolkit::IXRInteractor*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::GetCustomReticle)> {
  static const MethodInfo* get() {
    static auto* interactor = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "IXRInteractor")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "GetCustomReticle", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactor});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::AttachCustomReticle
// Il2CppName: AttachCustomReticle
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)(::UnityEngine::XR::Interaction::Toolkit::IXRInteractor*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::AttachCustomReticle)> {
  static const MethodInfo* get() {
    static auto* interactor = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "IXRInteractor")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "AttachCustomReticle", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactor});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::RemoveCustomReticle
// Il2CppName: RemoveCustomReticle
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)(::UnityEngine::XR::Interaction::Toolkit::IXRInteractor*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::RemoveCustomReticle)> {
  static const MethodInfo* get() {
    static auto* interactor = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "IXRInteractor")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "RemoveCustomReticle", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactor});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::CaptureAttachPose
// Il2CppName: CaptureAttachPose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)(::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractor*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::CaptureAttachPose)> {
  static const MethodInfo* get() {
    static auto* interactor = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "IXRSelectInteractor")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "CaptureAttachPose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactor});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::ProcessInteractable
// Il2CppName: ProcessInteractable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)(::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::UpdatePhase)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::ProcessInteractable)> {
  static const MethodInfo* get() {
    static auto* updatePhase = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "XRInteractionUpdateOrder/UpdatePhase")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "ProcessInteractable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{updatePhase});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::UnityEngine_XR_Interaction_Toolkit_IXRInteractionStrengthInteractable_ProcessInteractionStrength
// Il2CppName: UnityEngine.XR.Interaction.Toolkit.IXRInteractionStrengthInteractable.ProcessInteractionStrength
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)(::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::UpdatePhase)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::UnityEngine_XR_Interaction_Toolkit_IXRInteractionStrengthInteractable_ProcessInteractionStrength)> {
  static const MethodInfo* get() {
    static auto* updatePhase = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "XRInteractionUpdateOrder/UpdatePhase")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "UnityEngine.XR.Interaction.Toolkit.IXRInteractionStrengthInteractable.ProcessInteractionStrength", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{updatePhase});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::UnityEngine_XR_Interaction_Toolkit_IXRInteractable_OnRegistered
// Il2CppName: UnityEngine.XR.Interaction.Toolkit.IXRInteractable.OnRegistered
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)(::UnityEngine::XR::Interaction::Toolkit::InteractableRegisteredEventArgs*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::UnityEngine_XR_Interaction_Toolkit_IXRInteractable_OnRegistered)> {
  static const MethodInfo* get() {
    static auto* args = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "InteractableRegisteredEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "UnityEngine.XR.Interaction.Toolkit.IXRInteractable.OnRegistered", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{args});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::UnityEngine_XR_Interaction_Toolkit_IXRInteractable_OnUnregistered
// Il2CppName: UnityEngine.XR.Interaction.Toolkit.IXRInteractable.OnUnregistered
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)(::UnityEngine::XR::Interaction::Toolkit::InteractableUnregisteredEventArgs*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::UnityEngine_XR_Interaction_Toolkit_IXRInteractable_OnUnregistered)> {
  static const MethodInfo* get() {
    static auto* args = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "InteractableUnregisteredEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "UnityEngine.XR.Interaction.Toolkit.IXRInteractable.OnUnregistered", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{args});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::UnityEngine_XR_Interaction_Toolkit_IXRActivateInteractable_OnActivated
// Il2CppName: UnityEngine.XR.Interaction.Toolkit.IXRActivateInteractable.OnActivated
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)(::UnityEngine::XR::Interaction::Toolkit::ActivateEventArgs*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::UnityEngine_XR_Interaction_Toolkit_IXRActivateInteractable_OnActivated)> {
  static const MethodInfo* get() {
    static auto* args = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "ActivateEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "UnityEngine.XR.Interaction.Toolkit.IXRActivateInteractable.OnActivated", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{args});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::UnityEngine_XR_Interaction_Toolkit_IXRActivateInteractable_OnDeactivated
// Il2CppName: UnityEngine.XR.Interaction.Toolkit.IXRActivateInteractable.OnDeactivated
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)(::UnityEngine::XR::Interaction::Toolkit::DeactivateEventArgs*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::UnityEngine_XR_Interaction_Toolkit_IXRActivateInteractable_OnDeactivated)> {
  static const MethodInfo* get() {
    static auto* args = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "DeactivateEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "UnityEngine.XR.Interaction.Toolkit.IXRActivateInteractable.OnDeactivated", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{args});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::UnityEngine_XR_Interaction_Toolkit_IXRHoverInteractable_IsHoverableBy
// Il2CppName: UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractable.IsHoverableBy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)(::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractor*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::UnityEngine_XR_Interaction_Toolkit_IXRHoverInteractable_IsHoverableBy)> {
  static const MethodInfo* get() {
    static auto* interactor = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "IXRHoverInteractor")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractable.IsHoverableBy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactor});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::UnityEngine_XR_Interaction_Toolkit_IXRHoverInteractable_OnHoverEntering
// Il2CppName: UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractable.OnHoverEntering
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)(::UnityEngine::XR::Interaction::Toolkit::HoverEnterEventArgs*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::UnityEngine_XR_Interaction_Toolkit_IXRHoverInteractable_OnHoverEntering)> {
  static const MethodInfo* get() {
    static auto* args = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "HoverEnterEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractable.OnHoverEntering", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{args});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::UnityEngine_XR_Interaction_Toolkit_IXRHoverInteractable_OnHoverEntered
// Il2CppName: UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractable.OnHoverEntered
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)(::UnityEngine::XR::Interaction::Toolkit::HoverEnterEventArgs*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::UnityEngine_XR_Interaction_Toolkit_IXRHoverInteractable_OnHoverEntered)> {
  static const MethodInfo* get() {
    static auto* args = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "HoverEnterEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractable.OnHoverEntered", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{args});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::UnityEngine_XR_Interaction_Toolkit_IXRHoverInteractable_OnHoverExiting
// Il2CppName: UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractable.OnHoverExiting
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)(::UnityEngine::XR::Interaction::Toolkit::HoverExitEventArgs*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::UnityEngine_XR_Interaction_Toolkit_IXRHoverInteractable_OnHoverExiting)> {
  static const MethodInfo* get() {
    static auto* args = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "HoverExitEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractable.OnHoverExiting", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{args});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::UnityEngine_XR_Interaction_Toolkit_IXRHoverInteractable_OnHoverExited
// Il2CppName: UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractable.OnHoverExited
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)(::UnityEngine::XR::Interaction::Toolkit::HoverExitEventArgs*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::UnityEngine_XR_Interaction_Toolkit_IXRHoverInteractable_OnHoverExited)> {
  static const MethodInfo* get() {
    static auto* args = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "HoverExitEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractable.OnHoverExited", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{args});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::UnityEngine_XR_Interaction_Toolkit_IXRSelectInteractable_IsSelectableBy
// Il2CppName: UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractable.IsSelectableBy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)(::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractor*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::UnityEngine_XR_Interaction_Toolkit_IXRSelectInteractable_IsSelectableBy)> {
  static const MethodInfo* get() {
    static auto* interactor = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "IXRSelectInteractor")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractable.IsSelectableBy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactor});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::UnityEngine_XR_Interaction_Toolkit_IXRSelectInteractable_OnSelectEntering
// Il2CppName: UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractable.OnSelectEntering
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)(::UnityEngine::XR::Interaction::Toolkit::SelectEnterEventArgs*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::UnityEngine_XR_Interaction_Toolkit_IXRSelectInteractable_OnSelectEntering)> {
  static const MethodInfo* get() {
    static auto* args = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "SelectEnterEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractable.OnSelectEntering", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{args});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::UnityEngine_XR_Interaction_Toolkit_IXRSelectInteractable_OnSelectEntered
// Il2CppName: UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractable.OnSelectEntered
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)(::UnityEngine::XR::Interaction::Toolkit::SelectEnterEventArgs*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::UnityEngine_XR_Interaction_Toolkit_IXRSelectInteractable_OnSelectEntered)> {
  static const MethodInfo* get() {
    static auto* args = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "SelectEnterEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractable.OnSelectEntered", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{args});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::UnityEngine_XR_Interaction_Toolkit_IXRSelectInteractable_OnSelectExiting
// Il2CppName: UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractable.OnSelectExiting
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)(::UnityEngine::XR::Interaction::Toolkit::SelectExitEventArgs*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::UnityEngine_XR_Interaction_Toolkit_IXRSelectInteractable_OnSelectExiting)> {
  static const MethodInfo* get() {
    static auto* args = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "SelectExitEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractable.OnSelectExiting", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{args});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::UnityEngine_XR_Interaction_Toolkit_IXRSelectInteractable_OnSelectExited
// Il2CppName: UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractable.OnSelectExited
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)(::UnityEngine::XR::Interaction::Toolkit::SelectExitEventArgs*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::UnityEngine_XR_Interaction_Toolkit_IXRSelectInteractable_OnSelectExited)> {
  static const MethodInfo* get() {
    static auto* args = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "SelectExitEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractable.OnSelectExited", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{args});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::OnRegistered
// Il2CppName: OnRegistered
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)(::UnityEngine::XR::Interaction::Toolkit::InteractableRegisteredEventArgs*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::OnRegistered)> {
  static const MethodInfo* get() {
    static auto* args = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "InteractableRegisteredEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "OnRegistered", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{args});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::OnUnregistered
// Il2CppName: OnUnregistered
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)(::UnityEngine::XR::Interaction::Toolkit::InteractableUnregisteredEventArgs*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::OnUnregistered)> {
  static const MethodInfo* get() {
    static auto* args = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "InteractableUnregisteredEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "OnUnregistered", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{args});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::OnHoverEntering
// Il2CppName: OnHoverEntering
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)(::UnityEngine::XR::Interaction::Toolkit::HoverEnterEventArgs*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::OnHoverEntering)> {
  static const MethodInfo* get() {
    static auto* args = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "HoverEnterEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "OnHoverEntering", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{args});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::OnHoverEntered
// Il2CppName: OnHoverEntered
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)(::UnityEngine::XR::Interaction::Toolkit::HoverEnterEventArgs*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::OnHoverEntered)> {
  static const MethodInfo* get() {
    static auto* args = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "HoverEnterEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "OnHoverEntered", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{args});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::OnHoverExiting
// Il2CppName: OnHoverExiting
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)(::UnityEngine::XR::Interaction::Toolkit::HoverExitEventArgs*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::OnHoverExiting)> {
  static const MethodInfo* get() {
    static auto* args = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "HoverExitEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "OnHoverExiting", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{args});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::OnHoverExited
// Il2CppName: OnHoverExited
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)(::UnityEngine::XR::Interaction::Toolkit::HoverExitEventArgs*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::OnHoverExited)> {
  static const MethodInfo* get() {
    static auto* args = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "HoverExitEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "OnHoverExited", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{args});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::OnSelectEntering
// Il2CppName: OnSelectEntering
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)(::UnityEngine::XR::Interaction::Toolkit::SelectEnterEventArgs*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::OnSelectEntering)> {
  static const MethodInfo* get() {
    static auto* args = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "SelectEnterEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "OnSelectEntering", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{args});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::OnSelectEntered
// Il2CppName: OnSelectEntered
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)(::UnityEngine::XR::Interaction::Toolkit::SelectEnterEventArgs*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::OnSelectEntered)> {
  static const MethodInfo* get() {
    static auto* args = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "SelectEnterEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "OnSelectEntered", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{args});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::OnSelectExiting
// Il2CppName: OnSelectExiting
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)(::UnityEngine::XR::Interaction::Toolkit::SelectExitEventArgs*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::OnSelectExiting)> {
  static const MethodInfo* get() {
    static auto* args = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "SelectExitEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "OnSelectExiting", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{args});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::OnSelectExited
// Il2CppName: OnSelectExited
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)(::UnityEngine::XR::Interaction::Toolkit::SelectExitEventArgs*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::OnSelectExited)> {
  static const MethodInfo* get() {
    static auto* args = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "SelectExitEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "OnSelectExited", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{args});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::OnActivated
// Il2CppName: OnActivated
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)(::UnityEngine::XR::Interaction::Toolkit::ActivateEventArgs*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::OnActivated)> {
  static const MethodInfo* get() {
    static auto* args = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "ActivateEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "OnActivated", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{args});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::OnDeactivated
// Il2CppName: OnDeactivated
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)(::UnityEngine::XR::Interaction::Toolkit::DeactivateEventArgs*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::OnDeactivated)> {
  static const MethodInfo* get() {
    static auto* args = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "DeactivateEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "OnDeactivated", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{args});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::ProcessInteractionStrength
// Il2CppName: ProcessInteractionStrength
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)(::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::UpdatePhase)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::ProcessInteractionStrength)> {
  static const MethodInfo* get() {
    static auto* updatePhase = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "XRInteractionUpdateOrder/UpdatePhase")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "ProcessInteractionStrength", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{updatePhase});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::ProcessHoverFilters
// Il2CppName: ProcessHoverFilters
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)(::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractor*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::ProcessHoverFilters)> {
  static const MethodInfo* get() {
    static auto* interactor = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "IXRHoverInteractor")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "ProcessHoverFilters", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactor});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::ProcessSelectFilters
// Il2CppName: ProcessSelectFilters
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)(::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractor*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::ProcessSelectFilters)> {
  static const MethodInfo* get() {
    static auto* interactor = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "IXRSelectInteractor")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "ProcessSelectFilters", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactor});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::ProcessInteractionStrengthFilters
// Il2CppName: ProcessInteractionStrengthFilters
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)(::UnityEngine::XR::Interaction::Toolkit::IXRInteractor*, float)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::ProcessInteractionStrengthFilters)> {
  static const MethodInfo* get() {
    static auto* interactor = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "IXRInteractor")->byval_arg;
    static auto* interactionStrength = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "ProcessInteractionStrengthFilters", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactor, interactionStrength});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_interactionLayerMask
// Il2CppName: get_interactionLayerMask
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::LayerMask (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_interactionLayerMask)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "get_interactionLayerMask", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_interactionLayerMask
// Il2CppName: set_interactionLayerMask
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)(::UnityEngine::LayerMask)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_interactionLayerMask)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "LayerMask")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "set_interactionLayerMask", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_onFirstHoverEntered
// Il2CppName: get_onFirstHoverEntered
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent* (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_onFirstHoverEntered)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "get_onFirstHoverEntered", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_onFirstHoverEntered
// Il2CppName: set_onFirstHoverEntered
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)(::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_onFirstHoverEntered)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "XRInteractableEvent")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "set_onFirstHoverEntered", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_onLastHoverExited
// Il2CppName: get_onLastHoverExited
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent* (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_onLastHoverExited)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "get_onLastHoverExited", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_onLastHoverExited
// Il2CppName: set_onLastHoverExited
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)(::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_onLastHoverExited)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "XRInteractableEvent")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "set_onLastHoverExited", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_onHoverEntered
// Il2CppName: get_onHoverEntered
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent* (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_onHoverEntered)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "get_onHoverEntered", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_onHoverEntered
// Il2CppName: set_onHoverEntered
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)(::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_onHoverEntered)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "XRInteractableEvent")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "set_onHoverEntered", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_onHoverExited
// Il2CppName: get_onHoverExited
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent* (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_onHoverExited)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "get_onHoverExited", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_onHoverExited
// Il2CppName: set_onHoverExited
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)(::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_onHoverExited)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "XRInteractableEvent")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "set_onHoverExited", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_onSelectEntered
// Il2CppName: get_onSelectEntered
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent* (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_onSelectEntered)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "get_onSelectEntered", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_onSelectEntered
// Il2CppName: set_onSelectEntered
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)(::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_onSelectEntered)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "XRInteractableEvent")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "set_onSelectEntered", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_onSelectExited
// Il2CppName: get_onSelectExited
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent* (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_onSelectExited)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "get_onSelectExited", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_onSelectExited
// Il2CppName: set_onSelectExited
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)(::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_onSelectExited)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "XRInteractableEvent")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "set_onSelectExited", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_onSelectCanceled
// Il2CppName: get_onSelectCanceled
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent* (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_onSelectCanceled)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "get_onSelectCanceled", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_onSelectCanceled
// Il2CppName: set_onSelectCanceled
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)(::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_onSelectCanceled)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "XRInteractableEvent")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "set_onSelectCanceled", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_onActivate
// Il2CppName: get_onActivate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent* (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_onActivate)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "get_onActivate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_onActivate
// Il2CppName: set_onActivate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)(::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_onActivate)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "XRInteractableEvent")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "set_onActivate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_onDeactivate
// Il2CppName: get_onDeactivate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent* (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_onDeactivate)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "get_onDeactivate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_onDeactivate
// Il2CppName: set_onDeactivate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)(::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_onDeactivate)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "XRInteractableEvent")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "set_onDeactivate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_onFirstHoverEnter
// Il2CppName: get_onFirstHoverEnter
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent* (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_onFirstHoverEnter)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "get_onFirstHoverEnter", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_onHoverEnter
// Il2CppName: get_onHoverEnter
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent* (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_onHoverEnter)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "get_onHoverEnter", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_onHoverExit
// Il2CppName: get_onHoverExit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent* (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_onHoverExit)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "get_onHoverExit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_onLastHoverExit
// Il2CppName: get_onLastHoverExit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent* (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_onLastHoverExit)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "get_onLastHoverExit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_onSelectEnter
// Il2CppName: get_onSelectEnter
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent* (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_onSelectEnter)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "get_onSelectEnter", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_onSelectExit
// Il2CppName: get_onSelectExit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent* (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_onSelectExit)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "get_onSelectExit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_onSelectCancel
// Il2CppName: get_onSelectCancel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent* (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_onSelectCancel)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "get_onSelectCancel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::OnHoverEntering
// Il2CppName: OnHoverEntering
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::OnHoverEntering)> {
  static const MethodInfo* get() {
    static auto* interactor = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "XRBaseInteractor")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "OnHoverEntering", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactor});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::OnHoverEntered
// Il2CppName: OnHoverEntered
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::OnHoverEntered)> {
  static const MethodInfo* get() {
    static auto* interactor = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "XRBaseInteractor")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "OnHoverEntered", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactor});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::OnHoverExiting
// Il2CppName: OnHoverExiting
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::OnHoverExiting)> {
  static const MethodInfo* get() {
    static auto* interactor = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "XRBaseInteractor")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "OnHoverExiting", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactor});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::OnHoverExited
// Il2CppName: OnHoverExited
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::OnHoverExited)> {
  static const MethodInfo* get() {
    static auto* interactor = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "XRBaseInteractor")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "OnHoverExited", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactor});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::OnSelectEntering
// Il2CppName: OnSelectEntering
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::OnSelectEntering)> {
  static const MethodInfo* get() {
    static auto* interactor = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "XRBaseInteractor")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "OnSelectEntering", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactor});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::OnSelectEntered
// Il2CppName: OnSelectEntered
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::OnSelectEntered)> {
  static const MethodInfo* get() {
    static auto* interactor = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "XRBaseInteractor")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "OnSelectEntered", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactor});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::OnSelectExiting
// Il2CppName: OnSelectExiting
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::OnSelectExiting)> {
  static const MethodInfo* get() {
    static auto* interactor = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "XRBaseInteractor")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "OnSelectExiting", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactor});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::OnSelectExited
// Il2CppName: OnSelectExited
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::OnSelectExited)> {
  static const MethodInfo* get() {
    static auto* interactor = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "XRBaseInteractor")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "OnSelectExited", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactor});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::OnSelectCanceling
// Il2CppName: OnSelectCanceling
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::OnSelectCanceling)> {
  static const MethodInfo* get() {
    static auto* interactor = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "XRBaseInteractor")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "OnSelectCanceling", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactor});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::OnSelectCanceled
// Il2CppName: OnSelectCanceled
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::OnSelectCanceled)> {
  static const MethodInfo* get() {
    static auto* interactor = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "XRBaseInteractor")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "OnSelectCanceled", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactor});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::OnActivate
// Il2CppName: OnActivate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::OnActivate)> {
  static const MethodInfo* get() {
    static auto* interactor = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "XRBaseInteractor")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "OnActivate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactor});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::OnDeactivate
// Il2CppName: OnDeactivate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::OnDeactivate)> {
  static const MethodInfo* get() {
    static auto* interactor = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "XRBaseInteractor")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "OnDeactivate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactor});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::GetDistanceSqrToInteractor
// Il2CppName: GetDistanceSqrToInteractor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::GetDistanceSqrToInteractor)> {
  static const MethodInfo* get() {
    static auto* interactor = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "XRBaseInteractor")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "GetDistanceSqrToInteractor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactor});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::AttachCustomReticle
// Il2CppName: AttachCustomReticle
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::AttachCustomReticle)> {
  static const MethodInfo* get() {
    static auto* interactor = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "XRBaseInteractor")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "AttachCustomReticle", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactor});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::RemoveCustomReticle
// Il2CppName: RemoveCustomReticle
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::RemoveCustomReticle)> {
  static const MethodInfo* get() {
    static auto* interactor = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "XRBaseInteractor")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "RemoveCustomReticle", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactor});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_hoveringInteractors
// Il2CppName: get_hoveringInteractors
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*>* (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_hoveringInteractors)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "get_hoveringInteractors", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_selectingInteractor
// Il2CppName: get_selectingInteractor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_selectingInteractor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "get_selectingInteractor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_selectingInteractor
// Il2CppName: set_selectingInteractor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_selectingInteractor)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "XRBaseInteractor")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "set_selectingInteractor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::IsHoverableBy
// Il2CppName: IsHoverableBy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::IsHoverableBy)> {
  static const MethodInfo* get() {
    static auto* interactor = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "XRBaseInteractor")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "IsHoverableBy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactor});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::IsSelectableBy
// Il2CppName: IsSelectableBy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::IsSelectableBy)> {
  static const MethodInfo* get() {
    static auto* interactor = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "XRBaseInteractor")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "IsSelectableBy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactor});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::UnityEngine_XR_Interaction_Toolkit_IXRInteractable_get_transform
// Il2CppName: UnityEngine.XR.Interaction.Toolkit.IXRInteractable.get_transform
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Transform* (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::UnityEngine_XR_Interaction_Toolkit_IXRInteractable_get_transform)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "UnityEngine.XR.Interaction.Toolkit.IXRInteractable.get_transform", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
