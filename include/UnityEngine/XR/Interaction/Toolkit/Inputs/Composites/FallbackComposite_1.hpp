// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.InputSystem.InputBindingComposite`1
#include "UnityEngine/InputSystem/InputBindingComposite_1.hpp"
// Including type: System.Collections.Generic.IComparer`1
#include "System/Collections/Generic/IComparer_1.hpp"
// Including type: UnityEngine.Quaternion
#include "UnityEngine/Quaternion.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::XR::Interaction::Toolkit::Inputs::Composites
namespace UnityEngine::XR::Interaction::Toolkit::Inputs::Composites {
  // Skipping declaration: QuaternionCompositeComparer because it is already included!
}
// Completed forward declares
// Type namespace: UnityEngine.XR.Interaction.Toolkit.Inputs.Composites
namespace UnityEngine::XR::Interaction::Toolkit::Inputs::Composites {
  // Forward declaring type: FallbackComposite`1<TValue>
  template<typename TValue>
  class FallbackComposite_1;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE_GENERIC_CLASS(::UnityEngine::XR::Interaction::Toolkit::Inputs::Composites::FallbackComposite_1, "UnityEngine.XR.Interaction.Toolkit.Inputs.Composites", "FallbackComposite`1");
// Type namespace: UnityEngine.XR.Interaction.Toolkit.Inputs.Composites
namespace UnityEngine::XR::Interaction::Toolkit::Inputs::Composites {
  // WARNING Size may be invalid!
  // Autogenerated type: UnityEngine.XR.Interaction.Toolkit.Inputs.Composites.FallbackComposite`1
  // [TokenAttribute] Offset: FFFFFFFF
  // [PreserveAttribute] Offset: FFFFFFFF
  template<typename TValue>
  class FallbackComposite_1 : public ::UnityEngine::InputSystem::InputBindingComposite_1<TValue> {
    public:
    // Nested type: ::UnityEngine::XR::Interaction::Toolkit::Inputs::Composites::FallbackComposite_1::QuaternionCompositeComparer<TValue>
    struct QuaternionCompositeComparer;
    // WARNING Size may be invalid!
    // WARNING Layout: Sequential may not be correctly taken into account!
    // Autogenerated type: UnityEngine.XR.Interaction.Toolkit.Inputs.Composites.FallbackComposite`1/QuaternionCompositeComparer
    // [TokenAttribute] Offset: FFFFFFFF
    struct QuaternionCompositeComparer : public ::il2cpp_utils::il2cpp_type_check::NestedType/*, public ::System::ValueType, public ::System::Collections::Generic::IComparer_1<::UnityEngine::Quaternion>*/ {
      public:
      using declaring_type = FallbackComposite_1<TValue>*;
      static constexpr std::string_view NESTED_NAME = "QuaternionCompositeComparer";
      static constexpr bool IS_VALUE_TYPE = true;
      // Creating value type constructor for type: QuaternionCompositeComparer
      constexpr QuaternionCompositeComparer() noexcept {}
      // Creating interface conversion operator: operator ::System::ValueType
      operator ::System::ValueType() noexcept {
        return *reinterpret_cast<::System::ValueType*>(this);
      }
      // Creating interface conversion operator: operator ::System::Collections::Generic::IComparer_1<::UnityEngine::Quaternion>
      operator ::System::Collections::Generic::IComparer_1<::UnityEngine::Quaternion>() noexcept {
        return *reinterpret_cast<::System::Collections::Generic::IComparer_1<::UnityEngine::Quaternion>*>(this);
      }
      // public System.Int32 Compare(UnityEngine.Quaternion x, UnityEngine.Quaternion y)
      // Offset: 0xFFFFFFFFFFFFFFFF
      int Compare(::UnityEngine::Quaternion x, ::UnityEngine::Quaternion y) {
        static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::Inputs::Composites::FallbackComposite_1::QuaternionCompositeComparer::Compare");
        auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(typename ::UnityEngine::XR::Interaction::Toolkit::Inputs::Composites::FallbackComposite_1<TValue>::QuaternionCompositeComparer), -1));
        return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, x, y);
      }
    }; // UnityEngine.XR.Interaction.Toolkit.Inputs.Composites.FallbackComposite`1/QuaternionCompositeComparer
    // Could not write size check! Type: UnityEngine.XR.Interaction.Toolkit.Inputs.Composites.FallbackComposite`1/QuaternionCompositeComparer is generic, or has no fields that are valid for size checks!
    // protected System.Void .ctor()
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static FallbackComposite_1<TValue>* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::Inputs::Composites::FallbackComposite_1::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<FallbackComposite_1<TValue>*, creationType>()));
    }
  }; // UnityEngine.XR.Interaction.Toolkit.Inputs.Composites.FallbackComposite`1
  // Could not write size check! Type: UnityEngine.XR.Interaction.Toolkit.Inputs.Composites.FallbackComposite`1 is generic, or has no fields that are valid for size checks!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
