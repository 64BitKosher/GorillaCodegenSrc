// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.AffordanceSystem.State.BaseAffordanceStateProvider
#include "UnityEngine/XR/Interaction/Toolkit/AffordanceSystem/State/BaseAffordanceStateProvider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::XR::Interaction::Toolkit
namespace UnityEngine::XR::Interaction::Toolkit {
  // Forward declaring type: IXRInteractable
  class IXRInteractable;
  // Forward declaring type: IXRHoverInteractable
  class IXRHoverInteractable;
  // Forward declaring type: IXRSelectInteractable
  class IXRSelectInteractable;
  // Forward declaring type: IXRActivateInteractable
  class IXRActivateInteractable;
  // Forward declaring type: IXRInteractionStrengthInteractable
  class IXRInteractionStrengthInteractable;
  // Forward declaring type: InteractableRegisteredEventArgs
  class InteractableRegisteredEventArgs;
  // Forward declaring type: InteractableUnregisteredEventArgs
  class InteractableUnregisteredEventArgs;
  // Forward declaring type: HoverEnterEventArgs
  class HoverEnterEventArgs;
  // Forward declaring type: HoverExitEventArgs
  class HoverExitEventArgs;
  // Forward declaring type: SelectEnterEventArgs
  class SelectEnterEventArgs;
  // Forward declaring type: SelectExitEventArgs
  class SelectExitEventArgs;
  // Forward declaring type: ActivateEventArgs
  class ActivateEventArgs;
  // Forward declaring type: DeactivateEventArgs
  class DeactivateEventArgs;
}
// Forward declaring namespace: Unity::XR::CoreUtils::Datums
namespace Unity::XR::CoreUtils::Datums {
  // Forward declaring type: AnimationCurveDatumProperty
  class AnimationCurveDatumProperty;
}
// Forward declaring namespace: UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State
namespace UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State {
  // Skipping declaration: SelectClickAnimationMode because it is already included!
  // Skipping declaration: ActivateClickAnimationMode because it is already included!
  // Skipping declaration: AffordanceStateData because it is already included!
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Skipping declaration: Object because it is already included!
  // Forward declaring type: Coroutine
  class Coroutine;
}
// Forward declaring namespace: System::Collections
namespace System::Collections {
  // Forward declaring type: IEnumerator
  class IEnumerator;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Action
  class Action;
}
// Completed forward declares
// Type namespace: UnityEngine.XR.Interaction.Toolkit.AffordanceSystem.State
namespace UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State {
  // Forward declaring type: XRInteractableAffordanceStateProvider
  class XRInteractableAffordanceStateProvider;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider*, "UnityEngine.XR.Interaction.Toolkit.AffordanceSystem.State", "XRInteractableAffordanceStateProvider");
// Type namespace: UnityEngine.XR.Interaction.Toolkit.AffordanceSystem.State
namespace UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State {
  // Size: 0xCC
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.XR.Interaction.Toolkit.AffordanceSystem.State.XRInteractableAffordanceStateProvider
  // [TokenAttribute] Offset: FFFFFFFF
  // [DisallowMultipleComponent] Offset: FFFFFFFF
  // [HelpURLAttribute] Offset: FFFFFFFF
  // [AddComponentMenu] Offset: FFFFFFFF
  class XRInteractableAffordanceStateProvider : public ::UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::BaseAffordanceStateProvider {
    public:
    // Nested type: ::UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider::SelectClickAnimationMode
    struct SelectClickAnimationMode;
    // Nested type: ::UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider::ActivateClickAnimationMode
    struct ActivateClickAnimationMode;
    // Nested type: ::UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider::$ClickAnimation$d__80
    class $ClickAnimation$d__80;
    // Nested type: ::UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider::$HoveredPriorityRoutine$d__82
    class $HoveredPriorityRoutine$d__82;
    // Size: 0x4
    #pragma pack(push, 1)
    // Autogenerated type: UnityEngine.XR.Interaction.Toolkit.AffordanceSystem.State.XRInteractableAffordanceStateProvider/SelectClickAnimationMode
    // [TokenAttribute] Offset: FFFFFFFF
    struct SelectClickAnimationMode/*, public ::System::Enum*/ {
      public:
      public:
      // public System.Int32 value__
      // Size: 0x4
      // Offset: 0x0
      int value;
      // Field size check
      static_assert(sizeof(int) == 0x4);
      public:
      // Creating value type constructor for type: SelectClickAnimationMode
      constexpr SelectClickAnimationMode(int value_ = {}) noexcept : value{value_} {}
      // Creating interface conversion operator: operator ::System::Enum
      operator ::System::Enum() noexcept {
        return *reinterpret_cast<::System::Enum*>(this);
      }
      // Creating conversion operator: operator int
      constexpr operator int() const noexcept {
        return value;
      }
      // static field const value: static public UnityEngine.XR.Interaction.Toolkit.AffordanceSystem.State.XRInteractableAffordanceStateProvider/SelectClickAnimationMode None
      static constexpr const int None = 0;
      // Get static field: static public UnityEngine.XR.Interaction.Toolkit.AffordanceSystem.State.XRInteractableAffordanceStateProvider/SelectClickAnimationMode None
      static ::UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider::SelectClickAnimationMode _get_None();
      // Set static field: static public UnityEngine.XR.Interaction.Toolkit.AffordanceSystem.State.XRInteractableAffordanceStateProvider/SelectClickAnimationMode None
      static void _set_None(::UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider::SelectClickAnimationMode value);
      // static field const value: static public UnityEngine.XR.Interaction.Toolkit.AffordanceSystem.State.XRInteractableAffordanceStateProvider/SelectClickAnimationMode SelectEntered
      static constexpr const int SelectEntered = 1;
      // Get static field: static public UnityEngine.XR.Interaction.Toolkit.AffordanceSystem.State.XRInteractableAffordanceStateProvider/SelectClickAnimationMode SelectEntered
      static ::UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider::SelectClickAnimationMode _get_SelectEntered();
      // Set static field: static public UnityEngine.XR.Interaction.Toolkit.AffordanceSystem.State.XRInteractableAffordanceStateProvider/SelectClickAnimationMode SelectEntered
      static void _set_SelectEntered(::UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider::SelectClickAnimationMode value);
      // static field const value: static public UnityEngine.XR.Interaction.Toolkit.AffordanceSystem.State.XRInteractableAffordanceStateProvider/SelectClickAnimationMode SelectExited
      static constexpr const int SelectExited = 2;
      // Get static field: static public UnityEngine.XR.Interaction.Toolkit.AffordanceSystem.State.XRInteractableAffordanceStateProvider/SelectClickAnimationMode SelectExited
      static ::UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider::SelectClickAnimationMode _get_SelectExited();
      // Set static field: static public UnityEngine.XR.Interaction.Toolkit.AffordanceSystem.State.XRInteractableAffordanceStateProvider/SelectClickAnimationMode SelectExited
      static void _set_SelectExited(::UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider::SelectClickAnimationMode value);
      // Get instance field reference: public System.Int32 value__
      [[deprecated("Use field access instead!")]] int& dyn_value__();
    }; // UnityEngine.XR.Interaction.Toolkit.AffordanceSystem.State.XRInteractableAffordanceStateProvider/SelectClickAnimationMode
    #pragma pack(pop)
    static check_size<sizeof(XRInteractableAffordanceStateProvider::SelectClickAnimationMode), 0 + sizeof(int)> __UnityEngine_XR_Interaction_Toolkit_AffordanceSystem_State_XRInteractableAffordanceStateProvider_SelectClickAnimationModeSizeCheck;
    static_assert(sizeof(XRInteractableAffordanceStateProvider::SelectClickAnimationMode) == 0x4);
    // Size: 0x4
    #pragma pack(push, 1)
    // Autogenerated type: UnityEngine.XR.Interaction.Toolkit.AffordanceSystem.State.XRInteractableAffordanceStateProvider/ActivateClickAnimationMode
    // [TokenAttribute] Offset: FFFFFFFF
    struct ActivateClickAnimationMode/*, public ::System::Enum*/ {
      public:
      public:
      // public System.Int32 value__
      // Size: 0x4
      // Offset: 0x0
      int value;
      // Field size check
      static_assert(sizeof(int) == 0x4);
      public:
      // Creating value type constructor for type: ActivateClickAnimationMode
      constexpr ActivateClickAnimationMode(int value_ = {}) noexcept : value{value_} {}
      // Creating interface conversion operator: operator ::System::Enum
      operator ::System::Enum() noexcept {
        return *reinterpret_cast<::System::Enum*>(this);
      }
      // Creating conversion operator: operator int
      constexpr operator int() const noexcept {
        return value;
      }
      // static field const value: static public UnityEngine.XR.Interaction.Toolkit.AffordanceSystem.State.XRInteractableAffordanceStateProvider/ActivateClickAnimationMode None
      static constexpr const int None = 0;
      // Get static field: static public UnityEngine.XR.Interaction.Toolkit.AffordanceSystem.State.XRInteractableAffordanceStateProvider/ActivateClickAnimationMode None
      static ::UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider::ActivateClickAnimationMode _get_None();
      // Set static field: static public UnityEngine.XR.Interaction.Toolkit.AffordanceSystem.State.XRInteractableAffordanceStateProvider/ActivateClickAnimationMode None
      static void _set_None(::UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider::ActivateClickAnimationMode value);
      // static field const value: static public UnityEngine.XR.Interaction.Toolkit.AffordanceSystem.State.XRInteractableAffordanceStateProvider/ActivateClickAnimationMode Activated
      static constexpr const int Activated = 1;
      // Get static field: static public UnityEngine.XR.Interaction.Toolkit.AffordanceSystem.State.XRInteractableAffordanceStateProvider/ActivateClickAnimationMode Activated
      static ::UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider::ActivateClickAnimationMode _get_Activated();
      // Set static field: static public UnityEngine.XR.Interaction.Toolkit.AffordanceSystem.State.XRInteractableAffordanceStateProvider/ActivateClickAnimationMode Activated
      static void _set_Activated(::UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider::ActivateClickAnimationMode value);
      // static field const value: static public UnityEngine.XR.Interaction.Toolkit.AffordanceSystem.State.XRInteractableAffordanceStateProvider/ActivateClickAnimationMode Deactivated
      static constexpr const int Deactivated = 2;
      // Get static field: static public UnityEngine.XR.Interaction.Toolkit.AffordanceSystem.State.XRInteractableAffordanceStateProvider/ActivateClickAnimationMode Deactivated
      static ::UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider::ActivateClickAnimationMode _get_Deactivated();
      // Set static field: static public UnityEngine.XR.Interaction.Toolkit.AffordanceSystem.State.XRInteractableAffordanceStateProvider/ActivateClickAnimationMode Deactivated
      static void _set_Deactivated(::UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider::ActivateClickAnimationMode value);
      // Get instance field reference: public System.Int32 value__
      [[deprecated("Use field access instead!")]] int& dyn_value__();
    }; // UnityEngine.XR.Interaction.Toolkit.AffordanceSystem.State.XRInteractableAffordanceStateProvider/ActivateClickAnimationMode
    #pragma pack(pop)
    static check_size<sizeof(XRInteractableAffordanceStateProvider::ActivateClickAnimationMode), 0 + sizeof(int)> __UnityEngine_XR_Interaction_Toolkit_AffordanceSystem_State_XRInteractableAffordanceStateProvider_ActivateClickAnimationModeSizeCheck;
    static_assert(sizeof(XRInteractableAffordanceStateProvider::ActivateClickAnimationMode) == 0x4);
    public:
    // private UnityEngine.Object m_InteractableSource
    // Size: 0x8
    // Offset: 0x60
    ::UnityEngine::Object* m_InteractableSource;
    // Field size check
    static_assert(sizeof(::UnityEngine::Object*) == 0x8);
    // private System.Boolean m_IgnoreHoverEvents
    // Size: 0x1
    // Offset: 0x68
    bool m_IgnoreHoverEvents;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean m_IgnoreHoverPriorityEvents
    // Size: 0x1
    // Offset: 0x69
    bool m_IgnoreHoverPriorityEvents;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean m_IgnoreSelectEvents
    // Size: 0x1
    // Offset: 0x6A
    bool m_IgnoreSelectEvents;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean m_IgnoreActivateEvents
    // Size: 0x1
    // Offset: 0x6B
    bool m_IgnoreActivateEvents;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private UnityEngine.XR.Interaction.Toolkit.AffordanceSystem.State.XRInteractableAffordanceStateProvider/SelectClickAnimationMode m_SelectClickAnimationMode
    // Size: 0x4
    // Offset: 0x6C
    ::UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider::SelectClickAnimationMode m_SelectClickAnimationMode;
    // Field size check
    static_assert(sizeof(::UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider::SelectClickAnimationMode) == 0x4);
    // private UnityEngine.XR.Interaction.Toolkit.AffordanceSystem.State.XRInteractableAffordanceStateProvider/ActivateClickAnimationMode m_ActivateClickAnimationMode
    // Size: 0x4
    // Offset: 0x70
    ::UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider::ActivateClickAnimationMode m_ActivateClickAnimationMode;
    // Field size check
    static_assert(sizeof(::UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider::ActivateClickAnimationMode) == 0x4);
    // private System.Single m_ClickAnimationDuration
    // Size: 0x4
    // Offset: 0x74
    float m_ClickAnimationDuration;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private Unity.XR.CoreUtils.Datums.AnimationCurveDatumProperty m_ClickAnimationCurve
    // Size: 0x8
    // Offset: 0x78
    ::Unity::XR::CoreUtils::Datums::AnimationCurveDatumProperty* m_ClickAnimationCurve;
    // Field size check
    static_assert(sizeof(::Unity::XR::CoreUtils::Datums::AnimationCurveDatumProperty*) == 0x8);
    // private UnityEngine.XR.Interaction.Toolkit.IXRInteractable m_Interactable
    // Size: 0x8
    // Offset: 0x80
    ::UnityEngine::XR::Interaction::Toolkit::IXRInteractable* m_Interactable;
    // Field size check
    static_assert(sizeof(::UnityEngine::XR::Interaction::Toolkit::IXRInteractable*) == 0x8);
    // private UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractable m_HoverInteractable
    // Size: 0x8
    // Offset: 0x88
    ::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractable* m_HoverInteractable;
    // Field size check
    static_assert(sizeof(::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractable*) == 0x8);
    // private UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractable m_SelectInteractable
    // Size: 0x8
    // Offset: 0x90
    ::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable* m_SelectInteractable;
    // Field size check
    static_assert(sizeof(::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable*) == 0x8);
    // private UnityEngine.XR.Interaction.Toolkit.IXRActivateInteractable m_ActivateInteractable
    // Size: 0x8
    // Offset: 0x98
    ::UnityEngine::XR::Interaction::Toolkit::IXRActivateInteractable* m_ActivateInteractable;
    // Field size check
    static_assert(sizeof(::UnityEngine::XR::Interaction::Toolkit::IXRActivateInteractable*) == 0x8);
    // private UnityEngine.XR.Interaction.Toolkit.IXRInteractionStrengthInteractable m_InteractionStrengthInteractable
    // Size: 0x8
    // Offset: 0xA0
    ::UnityEngine::XR::Interaction::Toolkit::IXRInteractionStrengthInteractable* m_InteractionStrengthInteractable;
    // Field size check
    static_assert(sizeof(::UnityEngine::XR::Interaction::Toolkit::IXRInteractionStrengthInteractable*) == 0x8);
    // private UnityEngine.Coroutine m_SelectedClickAnimation
    // Size: 0x8
    // Offset: 0xA8
    ::UnityEngine::Coroutine* m_SelectedClickAnimation;
    // Field size check
    static_assert(sizeof(::UnityEngine::Coroutine*) == 0x8);
    // private UnityEngine.Coroutine m_ActivatedClickAnimation
    // Size: 0x8
    // Offset: 0xB0
    ::UnityEngine::Coroutine* m_ActivatedClickAnimation;
    // Field size check
    static_assert(sizeof(::UnityEngine::Coroutine*) == 0x8);
    // private UnityEngine.Coroutine m_HoveredPriorityRoutine
    // Size: 0x8
    // Offset: 0xB8
    ::UnityEngine::Coroutine* m_HoveredPriorityRoutine;
    // Field size check
    static_assert(sizeof(::UnityEngine::Coroutine*) == 0x8);
    // private System.Boolean m_IsBoundToInteractionEvents
    // Size: 0x1
    // Offset: 0xC0
    bool m_IsBoundToInteractionEvents;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean m_IsActivated
    // Size: 0x1
    // Offset: 0xC1
    bool m_IsActivated;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean m_IsRegistered
    // Size: 0x1
    // Offset: 0xC2
    bool m_IsRegistered;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean m_IsHoveredPriority
    // Size: 0x1
    // Offset: 0xC3
    bool m_IsHoveredPriority;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean m_HasInteractionStrengthInteractable
    // Size: 0x1
    // Offset: 0xC4
    bool m_HasInteractionStrengthInteractable;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: m_HasInteractionStrengthInteractable and: m_HoveringPriorityInteractorCount
    char __padding21[0x3] = {};
    // private System.Int32 m_HoveringPriorityInteractorCount
    // Size: 0x4
    // Offset: 0xC8
    int m_HoveringPriorityInteractorCount;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Get instance field reference: private UnityEngine.Object m_InteractableSource
    [[deprecated("Use field access instead!")]] ::UnityEngine::Object*& dyn_m_InteractableSource();
    // Get instance field reference: private System.Boolean m_IgnoreHoverEvents
    [[deprecated("Use field access instead!")]] bool& dyn_m_IgnoreHoverEvents();
    // Get instance field reference: private System.Boolean m_IgnoreHoverPriorityEvents
    [[deprecated("Use field access instead!")]] bool& dyn_m_IgnoreHoverPriorityEvents();
    // Get instance field reference: private System.Boolean m_IgnoreSelectEvents
    [[deprecated("Use field access instead!")]] bool& dyn_m_IgnoreSelectEvents();
    // Get instance field reference: private System.Boolean m_IgnoreActivateEvents
    [[deprecated("Use field access instead!")]] bool& dyn_m_IgnoreActivateEvents();
    // Get instance field reference: private UnityEngine.XR.Interaction.Toolkit.AffordanceSystem.State.XRInteractableAffordanceStateProvider/SelectClickAnimationMode m_SelectClickAnimationMode
    [[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider::SelectClickAnimationMode& dyn_m_SelectClickAnimationMode();
    // Get instance field reference: private UnityEngine.XR.Interaction.Toolkit.AffordanceSystem.State.XRInteractableAffordanceStateProvider/ActivateClickAnimationMode m_ActivateClickAnimationMode
    [[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider::ActivateClickAnimationMode& dyn_m_ActivateClickAnimationMode();
    // Get instance field reference: private System.Single m_ClickAnimationDuration
    [[deprecated("Use field access instead!")]] float& dyn_m_ClickAnimationDuration();
    // Get instance field reference: private Unity.XR.CoreUtils.Datums.AnimationCurveDatumProperty m_ClickAnimationCurve
    [[deprecated("Use field access instead!")]] ::Unity::XR::CoreUtils::Datums::AnimationCurveDatumProperty*& dyn_m_ClickAnimationCurve();
    // Get instance field reference: private UnityEngine.XR.Interaction.Toolkit.IXRInteractable m_Interactable
    [[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::IXRInteractable*& dyn_m_Interactable();
    // Get instance field reference: private UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractable m_HoverInteractable
    [[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractable*& dyn_m_HoverInteractable();
    // Get instance field reference: private UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractable m_SelectInteractable
    [[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable*& dyn_m_SelectInteractable();
    // Get instance field reference: private UnityEngine.XR.Interaction.Toolkit.IXRActivateInteractable m_ActivateInteractable
    [[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::IXRActivateInteractable*& dyn_m_ActivateInteractable();
    // Get instance field reference: private UnityEngine.XR.Interaction.Toolkit.IXRInteractionStrengthInteractable m_InteractionStrengthInteractable
    [[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::IXRInteractionStrengthInteractable*& dyn_m_InteractionStrengthInteractable();
    // Get instance field reference: private UnityEngine.Coroutine m_SelectedClickAnimation
    [[deprecated("Use field access instead!")]] ::UnityEngine::Coroutine*& dyn_m_SelectedClickAnimation();
    // Get instance field reference: private UnityEngine.Coroutine m_ActivatedClickAnimation
    [[deprecated("Use field access instead!")]] ::UnityEngine::Coroutine*& dyn_m_ActivatedClickAnimation();
    // Get instance field reference: private UnityEngine.Coroutine m_HoveredPriorityRoutine
    [[deprecated("Use field access instead!")]] ::UnityEngine::Coroutine*& dyn_m_HoveredPriorityRoutine();
    // Get instance field reference: private System.Boolean m_IsBoundToInteractionEvents
    [[deprecated("Use field access instead!")]] bool& dyn_m_IsBoundToInteractionEvents();
    // Get instance field reference: private System.Boolean m_IsActivated
    [[deprecated("Use field access instead!")]] bool& dyn_m_IsActivated();
    // Get instance field reference: private System.Boolean m_IsRegistered
    [[deprecated("Use field access instead!")]] bool& dyn_m_IsRegistered();
    // Get instance field reference: private System.Boolean m_IsHoveredPriority
    [[deprecated("Use field access instead!")]] bool& dyn_m_IsHoveredPriority();
    // Get instance field reference: private System.Boolean m_HasInteractionStrengthInteractable
    [[deprecated("Use field access instead!")]] bool& dyn_m_HasInteractionStrengthInteractable();
    // Get instance field reference: private System.Int32 m_HoveringPriorityInteractorCount
    [[deprecated("Use field access instead!")]] int& dyn_m_HoveringPriorityInteractorCount();
    // public UnityEngine.Object get_interactableSource()
    // Offset: 0x543EC38
    ::UnityEngine::Object* get_interactableSource();
    // public System.Void set_interactableSource(UnityEngine.Object value)
    // Offset: 0x543EC40
    void set_interactableSource(::UnityEngine::Object* value);
    // public System.Boolean get_ignoreHoverEvents()
    // Offset: 0x543EEFC
    bool get_ignoreHoverEvents();
    // public System.Void set_ignoreHoverEvents(System.Boolean value)
    // Offset: 0x543EF04
    void set_ignoreHoverEvents(bool value);
    // public System.Boolean get_ignoreHoverPriorityEvents()
    // Offset: 0x543EF10
    bool get_ignoreHoverPriorityEvents();
    // public System.Void set_ignoreHoverPriorityEvents(System.Boolean value)
    // Offset: 0x543EF18
    void set_ignoreHoverPriorityEvents(bool value);
    // public System.Boolean get_ignoreSelectEvents()
    // Offset: 0x543F074
    bool get_ignoreSelectEvents();
    // public System.Void set_ignoreSelectEvents(System.Boolean value)
    // Offset: 0x543F07C
    void set_ignoreSelectEvents(bool value);
    // public System.Boolean get_ignoreActivateEvents()
    // Offset: 0x543F088
    bool get_ignoreActivateEvents();
    // public System.Void set_ignoreActivateEvents(System.Boolean value)
    // Offset: 0x543F090
    void set_ignoreActivateEvents(bool value);
    // public UnityEngine.XR.Interaction.Toolkit.AffordanceSystem.State.XRInteractableAffordanceStateProvider/SelectClickAnimationMode get_selectClickAnimationMode()
    // Offset: 0x543F09C
    ::UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider::SelectClickAnimationMode get_selectClickAnimationMode();
    // public System.Void set_selectClickAnimationMode(UnityEngine.XR.Interaction.Toolkit.AffordanceSystem.State.XRInteractableAffordanceStateProvider/SelectClickAnimationMode value)
    // Offset: 0x543F0A4
    void set_selectClickAnimationMode(::UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider::SelectClickAnimationMode value);
    // public UnityEngine.XR.Interaction.Toolkit.AffordanceSystem.State.XRInteractableAffordanceStateProvider/ActivateClickAnimationMode get_activateClickAnimationMode()
    // Offset: 0x543F0AC
    ::UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider::ActivateClickAnimationMode get_activateClickAnimationMode();
    // public System.Void set_activateClickAnimationMode(UnityEngine.XR.Interaction.Toolkit.AffordanceSystem.State.XRInteractableAffordanceStateProvider/ActivateClickAnimationMode value)
    // Offset: 0x543F0B4
    void set_activateClickAnimationMode(::UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider::ActivateClickAnimationMode value);
    // public System.Single get_clickAnimationDuration()
    // Offset: 0x543F0BC
    float get_clickAnimationDuration();
    // public System.Void set_clickAnimationDuration(System.Single value)
    // Offset: 0x543F0C4
    void set_clickAnimationDuration(float value);
    // public Unity.XR.CoreUtils.Datums.AnimationCurveDatumProperty get_clickAnimationCurve()
    // Offset: 0x543F0CC
    ::Unity::XR::CoreUtils::Datums::AnimationCurveDatumProperty* get_clickAnimationCurve();
    // public System.Void set_clickAnimationCurve(Unity.XR.CoreUtils.Datums.AnimationCurveDatumProperty value)
    // Offset: 0x543F0D4
    void set_clickAnimationCurve(::Unity::XR::CoreUtils::Datums::AnimationCurveDatumProperty* value);
    // protected System.Boolean get_isHovered()
    // Offset: 0x543F0DC
    bool get_isHovered();
    // protected System.Boolean get_isSelected()
    // Offset: 0x543F18C
    bool get_isSelected();
    // protected System.Boolean get_isActivated()
    // Offset: 0x543F23C
    bool get_isActivated();
    // protected System.Boolean get_isRegistered()
    // Offset: 0x543F244
    bool get_isRegistered();
    // protected System.Void Awake()
    // Offset: 0x543F24C
    void Awake();
    // public System.Boolean SetBoundInteractionReceiver(UnityEngine.XR.Interaction.Toolkit.IXRInteractable receiver)
    // Offset: 0x543ED00
    bool SetBoundInteractionReceiver(::UnityEngine::XR::Interaction::Toolkit::IXRInteractable* receiver);
    // protected System.Void OnRegistered(UnityEngine.XR.Interaction.Toolkit.InteractableRegisteredEventArgs args)
    // Offset: 0x543F470
    void OnRegistered(::UnityEngine::XR::Interaction::Toolkit::InteractableRegisteredEventArgs* args);
    // protected System.Void OnUnregistered(UnityEngine.XR.Interaction.Toolkit.InteractableUnregisteredEventArgs args)
    // Offset: 0x543F47C
    void OnUnregistered(::UnityEngine::XR::Interaction::Toolkit::InteractableUnregisteredEventArgs* args);
    // protected System.Void OnFirstHoverEntered(UnityEngine.XR.Interaction.Toolkit.HoverEnterEventArgs args)
    // Offset: 0x543F484
    void OnFirstHoverEntered(::UnityEngine::XR::Interaction::Toolkit::HoverEnterEventArgs* args);
    // protected System.Void OnLastHoverExited(UnityEngine.XR.Interaction.Toolkit.HoverExitEventArgs args)
    // Offset: 0x543F488
    void OnLastHoverExited(::UnityEngine::XR::Interaction::Toolkit::HoverExitEventArgs* args);
    // protected System.Void OnHoverEntered(UnityEngine.XR.Interaction.Toolkit.HoverEnterEventArgs args)
    // Offset: 0x543F48C
    void OnHoverEntered(::UnityEngine::XR::Interaction::Toolkit::HoverEnterEventArgs* args);
    // protected System.Void OnHoverExited(UnityEngine.XR.Interaction.Toolkit.HoverExitEventArgs args)
    // Offset: 0x543F60C
    void OnHoverExited(::UnityEngine::XR::Interaction::Toolkit::HoverExitEventArgs* args);
    // private System.Void StopHoveredPriorityRoutine()
    // Offset: 0x543EFC0
    void StopHoveredPriorityRoutine();
    // protected System.Void OnFirstSelectEntered(UnityEngine.XR.Interaction.Toolkit.SelectEnterEventArgs args)
    // Offset: 0x543F6A4
    void OnFirstSelectEntered(::UnityEngine::XR::Interaction::Toolkit::SelectEnterEventArgs* args);
    // protected System.Void OnLastSelectExited(UnityEngine.XR.Interaction.Toolkit.SelectExitEventArgs args)
    // Offset: 0x543F730
    void OnLastSelectExited(::UnityEngine::XR::Interaction::Toolkit::SelectExitEventArgs* args);
    // protected System.Void OnActivatedEvent(UnityEngine.XR.Interaction.Toolkit.ActivateEventArgs args)
    // Offset: 0x543F7D0
    void OnActivatedEvent(::UnityEngine::XR::Interaction::Toolkit::ActivateEventArgs* args);
    // protected System.Void OnDeactivatedEvent(UnityEngine.XR.Interaction.Toolkit.DeactivateEventArgs args)
    // Offset: 0x543F864
    void OnDeactivatedEvent(::UnityEngine::XR::Interaction::Toolkit::DeactivateEventArgs* args);
    // protected System.Void OnLargestInteractionStrengthChanged(System.Single value)
    // Offset: 0x543F908
    void OnLargestInteractionStrengthChanged(float value);
    // protected System.Void SelectedClickBehavior()
    // Offset: 0x543F920
    void SelectedClickBehavior();
    // protected System.Void ActivatedClickBehavior()
    // Offset: 0x543FA08
    void ActivatedClickBehavior();
    // private System.Void StopActivatedCoroutine()
    // Offset: 0x543FAD8
    void StopActivatedCoroutine();
    // private System.Void StopSelectedCoroutine()
    // Offset: 0x543FB1C
    void StopSelectedCoroutine();
    // private System.Void StopAllActivateAnimations()
    // Offset: 0x543F9F0
    void StopAllActivateAnimations();
    // protected System.Collections.IEnumerator ClickAnimation(System.Byte targetStateIndex, System.Single duration, System.Action onComplete)
    // Offset: 0x543FB60
    ::System::Collections::IEnumerator* ClickAnimation(uint8_t targetStateIndex, float duration, ::System::Action* onComplete);
    // protected UnityEngine.XR.Interaction.Toolkit.AffordanceSystem.State.AffordanceStateData GenerateNewAffordanceState()
    // Offset: 0x543FC28
    ::UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::AffordanceStateData GenerateNewAffordanceState();
    // private System.Collections.IEnumerator HoveredPriorityRoutine()
    // Offset: 0x543F5A0
    ::System::Collections::IEnumerator* HoveredPriorityRoutine();
    // public System.Void RefreshState()
    // Offset: 0x543F00C
    void RefreshState();
    // private System.Void <SelectedClickBehavior>b__75_0()
    // Offset: 0x54413A8
    void $SelectedClickBehavior$b__75_0();
    // private System.Void <ActivatedClickBehavior>b__76_0()
    // Offset: 0x54413B4
    void $ActivatedClickBehavior$b__76_0();
    // protected override System.Void OnValidate()
    // Offset: 0x543F3C0
    // Implemented from: UnityEngine.XR.Interaction.Toolkit.AffordanceSystem.State.BaseAffordanceStateProvider
    // Base method: System.Void BaseAffordanceStateProvider::OnValidate()
    void OnValidate();
    // protected override System.Void BindToProviders()
    // Offset: 0x54400D0
    // Implemented from: UnityEngine.XR.Interaction.Toolkit.AffordanceSystem.State.BaseAffordanceStateProvider
    // Base method: System.Void BaseAffordanceStateProvider::BindToProviders()
    void BindToProviders();
    // protected override System.Void ClearBindings()
    // Offset: 0x5440B38
    // Implemented from: UnityEngine.XR.Interaction.Toolkit.AffordanceSystem.State.BaseAffordanceStateProvider
    // Base method: System.Void BaseAffordanceStateProvider::ClearBindings()
    void ClearBindings();
    // public System.Void .ctor()
    // Offset: 0x5441308
    // Implemented from: UnityEngine.XR.Interaction.Toolkit.AffordanceSystem.State.BaseAffordanceStateProvider
    // Base method: System.Void BaseAffordanceStateProvider::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static XRInteractableAffordanceStateProvider* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<XRInteractableAffordanceStateProvider*, creationType>()));
    }
  }; // UnityEngine.XR.Interaction.Toolkit.AffordanceSystem.State.XRInteractableAffordanceStateProvider
  #pragma pack(pop)
  static check_size<sizeof(XRInteractableAffordanceStateProvider), 200 + sizeof(int)> __UnityEngine_XR_Interaction_Toolkit_AffordanceSystem_State_XRInteractableAffordanceStateProviderSizeCheck;
  static_assert(sizeof(XRInteractableAffordanceStateProvider) == 0xCC);
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider::ActivateClickAnimationMode, "UnityEngine.XR.Interaction.Toolkit.AffordanceSystem.State", "XRInteractableAffordanceStateProvider/ActivateClickAnimationMode");
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider::SelectClickAnimationMode, "UnityEngine.XR.Interaction.Toolkit.AffordanceSystem.State", "XRInteractableAffordanceStateProvider/SelectClickAnimationMode");
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider::get_interactableSource
// Il2CppName: get_interactableSource
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Object* (UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider::*)()>(&UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider::get_interactableSource)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider*), "get_interactableSource", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider::set_interactableSource
// Il2CppName: set_interactableSource
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider::*)(::UnityEngine::Object*)>(&UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider::set_interactableSource)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider*), "set_interactableSource", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider::get_ignoreHoverEvents
// Il2CppName: get_ignoreHoverEvents
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider::*)()>(&UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider::get_ignoreHoverEvents)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider*), "get_ignoreHoverEvents", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider::set_ignoreHoverEvents
// Il2CppName: set_ignoreHoverEvents
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider::*)(bool)>(&UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider::set_ignoreHoverEvents)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider*), "set_ignoreHoverEvents", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider::get_ignoreHoverPriorityEvents
// Il2CppName: get_ignoreHoverPriorityEvents
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider::*)()>(&UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider::get_ignoreHoverPriorityEvents)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider*), "get_ignoreHoverPriorityEvents", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider::set_ignoreHoverPriorityEvents
// Il2CppName: set_ignoreHoverPriorityEvents
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider::*)(bool)>(&UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider::set_ignoreHoverPriorityEvents)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider*), "set_ignoreHoverPriorityEvents", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider::get_ignoreSelectEvents
// Il2CppName: get_ignoreSelectEvents
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider::*)()>(&UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider::get_ignoreSelectEvents)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider*), "get_ignoreSelectEvents", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider::set_ignoreSelectEvents
// Il2CppName: set_ignoreSelectEvents
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider::*)(bool)>(&UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider::set_ignoreSelectEvents)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider*), "set_ignoreSelectEvents", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider::get_ignoreActivateEvents
// Il2CppName: get_ignoreActivateEvents
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider::*)()>(&UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider::get_ignoreActivateEvents)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider*), "get_ignoreActivateEvents", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider::set_ignoreActivateEvents
// Il2CppName: set_ignoreActivateEvents
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider::*)(bool)>(&UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider::set_ignoreActivateEvents)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider*), "set_ignoreActivateEvents", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider::get_selectClickAnimationMode
// Il2CppName: get_selectClickAnimationMode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider::SelectClickAnimationMode (UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider::*)()>(&UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider::get_selectClickAnimationMode)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider*), "get_selectClickAnimationMode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider::set_selectClickAnimationMode
// Il2CppName: set_selectClickAnimationMode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider::*)(::UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider::SelectClickAnimationMode)>(&UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider::set_selectClickAnimationMode)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit.AffordanceSystem.State", "XRInteractableAffordanceStateProvider/SelectClickAnimationMode")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider*), "set_selectClickAnimationMode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider::get_activateClickAnimationMode
// Il2CppName: get_activateClickAnimationMode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider::ActivateClickAnimationMode (UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider::*)()>(&UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider::get_activateClickAnimationMode)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider*), "get_activateClickAnimationMode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider::set_activateClickAnimationMode
// Il2CppName: set_activateClickAnimationMode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider::*)(::UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider::ActivateClickAnimationMode)>(&UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider::set_activateClickAnimationMode)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit.AffordanceSystem.State", "XRInteractableAffordanceStateProvider/ActivateClickAnimationMode")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider*), "set_activateClickAnimationMode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider::get_clickAnimationDuration
// Il2CppName: get_clickAnimationDuration
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider::*)()>(&UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider::get_clickAnimationDuration)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider*), "get_clickAnimationDuration", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider::set_clickAnimationDuration
// Il2CppName: set_clickAnimationDuration
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider::*)(float)>(&UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider::set_clickAnimationDuration)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider*), "set_clickAnimationDuration", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider::get_clickAnimationCurve
// Il2CppName: get_clickAnimationCurve
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Unity::XR::CoreUtils::Datums::AnimationCurveDatumProperty* (UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider::*)()>(&UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider::get_clickAnimationCurve)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider*), "get_clickAnimationCurve", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider::set_clickAnimationCurve
// Il2CppName: set_clickAnimationCurve
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider::*)(::Unity::XR::CoreUtils::Datums::AnimationCurveDatumProperty*)>(&UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider::set_clickAnimationCurve)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("Unity.XR.CoreUtils.Datums", "AnimationCurveDatumProperty")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider*), "set_clickAnimationCurve", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider::get_isHovered
// Il2CppName: get_isHovered
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider::*)()>(&UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider::get_isHovered)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider*), "get_isHovered", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider::get_isSelected
// Il2CppName: get_isSelected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider::*)()>(&UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider::get_isSelected)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider*), "get_isSelected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider::get_isActivated
// Il2CppName: get_isActivated
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider::*)()>(&UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider::get_isActivated)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider*), "get_isActivated", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider::get_isRegistered
// Il2CppName: get_isRegistered
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider::*)()>(&UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider::get_isRegistered)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider*), "get_isRegistered", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider::Awake
// Il2CppName: Awake
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider::*)()>(&UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider::Awake)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider*), "Awake", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider::SetBoundInteractionReceiver
// Il2CppName: SetBoundInteractionReceiver
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider::*)(::UnityEngine::XR::Interaction::Toolkit::IXRInteractable*)>(&UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider::SetBoundInteractionReceiver)> {
  static const MethodInfo* get() {
    static auto* receiver = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "IXRInteractable")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider*), "SetBoundInteractionReceiver", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{receiver});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider::OnRegistered
// Il2CppName: OnRegistered
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider::*)(::UnityEngine::XR::Interaction::Toolkit::InteractableRegisteredEventArgs*)>(&UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider::OnRegistered)> {
  static const MethodInfo* get() {
    static auto* args = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "InteractableRegisteredEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider*), "OnRegistered", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{args});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider::OnUnregistered
// Il2CppName: OnUnregistered
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider::*)(::UnityEngine::XR::Interaction::Toolkit::InteractableUnregisteredEventArgs*)>(&UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider::OnUnregistered)> {
  static const MethodInfo* get() {
    static auto* args = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "InteractableUnregisteredEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider*), "OnUnregistered", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{args});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider::OnFirstHoverEntered
// Il2CppName: OnFirstHoverEntered
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider::*)(::UnityEngine::XR::Interaction::Toolkit::HoverEnterEventArgs*)>(&UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider::OnFirstHoverEntered)> {
  static const MethodInfo* get() {
    static auto* args = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "HoverEnterEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider*), "OnFirstHoverEntered", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{args});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider::OnLastHoverExited
// Il2CppName: OnLastHoverExited
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider::*)(::UnityEngine::XR::Interaction::Toolkit::HoverExitEventArgs*)>(&UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider::OnLastHoverExited)> {
  static const MethodInfo* get() {
    static auto* args = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "HoverExitEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider*), "OnLastHoverExited", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{args});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider::OnHoverEntered
// Il2CppName: OnHoverEntered
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider::*)(::UnityEngine::XR::Interaction::Toolkit::HoverEnterEventArgs*)>(&UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider::OnHoverEntered)> {
  static const MethodInfo* get() {
    static auto* args = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "HoverEnterEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider*), "OnHoverEntered", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{args});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider::OnHoverExited
// Il2CppName: OnHoverExited
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider::*)(::UnityEngine::XR::Interaction::Toolkit::HoverExitEventArgs*)>(&UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider::OnHoverExited)> {
  static const MethodInfo* get() {
    static auto* args = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "HoverExitEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider*), "OnHoverExited", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{args});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider::StopHoveredPriorityRoutine
// Il2CppName: StopHoveredPriorityRoutine
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider::*)()>(&UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider::StopHoveredPriorityRoutine)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider*), "StopHoveredPriorityRoutine", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider::OnFirstSelectEntered
// Il2CppName: OnFirstSelectEntered
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider::*)(::UnityEngine::XR::Interaction::Toolkit::SelectEnterEventArgs*)>(&UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider::OnFirstSelectEntered)> {
  static const MethodInfo* get() {
    static auto* args = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "SelectEnterEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider*), "OnFirstSelectEntered", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{args});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider::OnLastSelectExited
// Il2CppName: OnLastSelectExited
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider::*)(::UnityEngine::XR::Interaction::Toolkit::SelectExitEventArgs*)>(&UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider::OnLastSelectExited)> {
  static const MethodInfo* get() {
    static auto* args = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "SelectExitEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider*), "OnLastSelectExited", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{args});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider::OnActivatedEvent
// Il2CppName: OnActivatedEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider::*)(::UnityEngine::XR::Interaction::Toolkit::ActivateEventArgs*)>(&UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider::OnActivatedEvent)> {
  static const MethodInfo* get() {
    static auto* args = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "ActivateEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider*), "OnActivatedEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{args});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider::OnDeactivatedEvent
// Il2CppName: OnDeactivatedEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider::*)(::UnityEngine::XR::Interaction::Toolkit::DeactivateEventArgs*)>(&UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider::OnDeactivatedEvent)> {
  static const MethodInfo* get() {
    static auto* args = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "DeactivateEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider*), "OnDeactivatedEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{args});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider::OnLargestInteractionStrengthChanged
// Il2CppName: OnLargestInteractionStrengthChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider::*)(float)>(&UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider::OnLargestInteractionStrengthChanged)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider*), "OnLargestInteractionStrengthChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider::SelectedClickBehavior
// Il2CppName: SelectedClickBehavior
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider::*)()>(&UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider::SelectedClickBehavior)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider*), "SelectedClickBehavior", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider::ActivatedClickBehavior
// Il2CppName: ActivatedClickBehavior
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider::*)()>(&UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider::ActivatedClickBehavior)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider*), "ActivatedClickBehavior", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider::StopActivatedCoroutine
// Il2CppName: StopActivatedCoroutine
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider::*)()>(&UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider::StopActivatedCoroutine)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider*), "StopActivatedCoroutine", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider::StopSelectedCoroutine
// Il2CppName: StopSelectedCoroutine
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider::*)()>(&UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider::StopSelectedCoroutine)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider*), "StopSelectedCoroutine", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider::StopAllActivateAnimations
// Il2CppName: StopAllActivateAnimations
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider::*)()>(&UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider::StopAllActivateAnimations)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider*), "StopAllActivateAnimations", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider::ClickAnimation
// Il2CppName: ClickAnimation
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::IEnumerator* (UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider::*)(uint8_t, float, ::System::Action*)>(&UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider::ClickAnimation)> {
  static const MethodInfo* get() {
    static auto* targetStateIndex = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    static auto* duration = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* onComplete = &::il2cpp_utils::GetClassFromName("System", "Action")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider*), "ClickAnimation", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{targetStateIndex, duration, onComplete});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider::GenerateNewAffordanceState
// Il2CppName: GenerateNewAffordanceState
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::AffordanceStateData (UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider::*)()>(&UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider::GenerateNewAffordanceState)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider*), "GenerateNewAffordanceState", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider::HoveredPriorityRoutine
// Il2CppName: HoveredPriorityRoutine
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::IEnumerator* (UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider::*)()>(&UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider::HoveredPriorityRoutine)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider*), "HoveredPriorityRoutine", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider::RefreshState
// Il2CppName: RefreshState
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider::*)()>(&UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider::RefreshState)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider*), "RefreshState", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider::$SelectedClickBehavior$b__75_0
// Il2CppName: <SelectedClickBehavior>b__75_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider::*)()>(&UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider::$SelectedClickBehavior$b__75_0)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider*), "<SelectedClickBehavior>b__75_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider::$ActivatedClickBehavior$b__76_0
// Il2CppName: <ActivatedClickBehavior>b__76_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider::*)()>(&UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider::$ActivatedClickBehavior$b__76_0)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider*), "<ActivatedClickBehavior>b__76_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider::OnValidate
// Il2CppName: OnValidate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider::*)()>(&UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider::OnValidate)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider*), "OnValidate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider::BindToProviders
// Il2CppName: BindToProviders
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider::*)()>(&UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider::BindToProviders)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider*), "BindToProviders", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider::ClearBindings
// Il2CppName: ClearBindings
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider::*)()>(&UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider::ClearBindings)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider*), "ClearBindings", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::XRInteractableAffordanceStateProvider::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
