// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.AffordanceSystem.State.AffordanceStateData
#include "UnityEngine/XR/Interaction/Toolkit/AffordanceSystem/State/AffordanceStateData.hpp"
// Including type: Unity.Jobs.JobHandle
#include "Unity/Jobs/JobHandle.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Unity::XR::CoreUtils::Bindings::Variables
namespace Unity::XR::CoreUtils::Bindings::Variables {
  // Forward declaring type: BindableVariable`1<T>
  template<typename T>
  class BindableVariable_1;
  // Forward declaring type: IReadOnlyBindableVariable`1<T>
  template<typename T>
  class IReadOnlyBindableVariable_1;
}
// Forward declaring namespace: Unity::XR::CoreUtils::Collections
namespace Unity::XR::CoreUtils::Collections {
  // Forward declaring type: HashSetList`1<T>
  template<typename T>
  class HashSetList_1;
}
// Forward declaring namespace: UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::Receiver
namespace UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::Receiver {
  // Forward declaring type: IAsyncAffordanceStateReceiver
  class IAsyncAffordanceStateReceiver;
  // Forward declaring type: ISynchronousAffordanceStateReceiver
  class ISynchronousAffordanceStateReceiver;
  // Forward declaring type: IAffordanceStateReceiver
  class IAffordanceStateReceiver;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Forward declaring namespace: Unity::XR::CoreUtils::Bindings
namespace Unity::XR::CoreUtils::Bindings {
  // Forward declaring type: BindingsGroup
  class BindingsGroup;
  // Forward declaring type: IEventBinding
  class IEventBinding;
}
// Completed forward declares
// Type namespace: UnityEngine.XR.Interaction.Toolkit.AffordanceSystem.State
namespace UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State {
  // Forward declaring type: BaseAffordanceStateProvider
  class BaseAffordanceStateProvider;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::BaseAffordanceStateProvider);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::BaseAffordanceStateProvider*, "UnityEngine.XR.Interaction.Toolkit.AffordanceSystem.State", "BaseAffordanceStateProvider");
// Type namespace: UnityEngine.XR.Interaction.Toolkit.AffordanceSystem.State
namespace UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State {
  // Size: 0x60
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.XR.Interaction.Toolkit.AffordanceSystem.State.BaseAffordanceStateProvider
  // [TokenAttribute] Offset: FFFFFFFF
  class BaseAffordanceStateProvider : public ::UnityEngine::MonoBehaviour {
    public:
    public:
    // private System.Single m_TransitionDuration
    // Size: 0x4
    // Offset: 0x20
    float m_TransitionDuration;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // Padding between fields: m_TransitionDuration and: m_AffordanceStateData
    char __padding0[0x4] = {};
    // private readonly Unity.XR.CoreUtils.Bindings.Variables.BindableVariable`1<UnityEngine.XR.Interaction.Toolkit.AffordanceSystem.State.AffordanceStateData> m_AffordanceStateData
    // Size: 0x8
    // Offset: 0x28
    ::Unity::XR::CoreUtils::Bindings::Variables::BindableVariable_1<::UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::AffordanceStateData>* m_AffordanceStateData;
    // Field size check
    static_assert(sizeof(::Unity::XR::CoreUtils::Bindings::Variables::BindableVariable_1<::UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::AffordanceStateData>*) == 0x8);
    // private readonly Unity.XR.CoreUtils.Collections.HashSetList`1<UnityEngine.XR.Interaction.Toolkit.AffordanceSystem.Receiver.IAsyncAffordanceStateReceiver> m_AsyncAffordanceReceivers
    // Size: 0x8
    // Offset: 0x30
    ::Unity::XR::CoreUtils::Collections::HashSetList_1<::UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::Receiver::IAsyncAffordanceStateReceiver*>* m_AsyncAffordanceReceivers;
    // Field size check
    static_assert(sizeof(::Unity::XR::CoreUtils::Collections::HashSetList_1<::UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::Receiver::IAsyncAffordanceStateReceiver*>*) == 0x8);
    // private readonly Unity.XR.CoreUtils.Collections.HashSetList`1<UnityEngine.XR.Interaction.Toolkit.AffordanceSystem.Receiver.ISynchronousAffordanceStateReceiver> m_SynchronousAffordanceReceivers
    // Size: 0x8
    // Offset: 0x38
    ::Unity::XR::CoreUtils::Collections::HashSetList_1<::UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::Receiver::ISynchronousAffordanceStateReceiver*>* m_SynchronousAffordanceReceivers;
    // Field size check
    static_assert(sizeof(::Unity::XR::CoreUtils::Collections::HashSetList_1<::UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::Receiver::ISynchronousAffordanceStateReceiver*>*) == 0x8);
    // private readonly System.Collections.Generic.List`1<Unity.Jobs.JobHandle> m_ScheduledJobs
    // Size: 0x8
    // Offset: 0x40
    ::System::Collections::Generic::List_1<::Unity::Jobs::JobHandle>* m_ScheduledJobs;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::Unity::Jobs::JobHandle>*) == 0x8);
    // private readonly Unity.XR.CoreUtils.Bindings.BindingsGroup m_BindingsGroup
    // Size: 0x8
    // Offset: 0x48
    ::Unity::XR::CoreUtils::Bindings::BindingsGroup* m_BindingsGroup;
    // Field size check
    static_assert(sizeof(::Unity::XR::CoreUtils::Bindings::BindingsGroup*) == 0x8);
    // private System.Single m_TimeSinceLastStateUpdate
    // Size: 0x4
    // Offset: 0x50
    float m_TimeSinceLastStateUpdate;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Boolean m_IsFirstFrame
    // Size: 0x1
    // Offset: 0x54
    bool m_IsFirstFrame;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean m_CompletingTweens
    // Size: 0x1
    // Offset: 0x55
    bool m_CompletingTweens;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: m_CompletingTweens and: m_InterpolationSpeed
    char __padding8[0x2] = {};
    // private System.Single m_InterpolationSpeed
    // Size: 0x4
    // Offset: 0x58
    float m_InterpolationSpeed;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Single m_MaxTransitionDuration
    // Size: 0x4
    // Offset: 0x5C
    float m_MaxTransitionDuration;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    public:
    // Get instance field reference: private System.Single m_TransitionDuration
    [[deprecated("Use field access instead!")]] float& dyn_m_TransitionDuration();
    // Get instance field reference: private readonly Unity.XR.CoreUtils.Bindings.Variables.BindableVariable`1<UnityEngine.XR.Interaction.Toolkit.AffordanceSystem.State.AffordanceStateData> m_AffordanceStateData
    [[deprecated("Use field access instead!")]] ::Unity::XR::CoreUtils::Bindings::Variables::BindableVariable_1<::UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::AffordanceStateData>*& dyn_m_AffordanceStateData();
    // Get instance field reference: private readonly Unity.XR.CoreUtils.Collections.HashSetList`1<UnityEngine.XR.Interaction.Toolkit.AffordanceSystem.Receiver.IAsyncAffordanceStateReceiver> m_AsyncAffordanceReceivers
    [[deprecated("Use field access instead!")]] ::Unity::XR::CoreUtils::Collections::HashSetList_1<::UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::Receiver::IAsyncAffordanceStateReceiver*>*& dyn_m_AsyncAffordanceReceivers();
    // Get instance field reference: private readonly Unity.XR.CoreUtils.Collections.HashSetList`1<UnityEngine.XR.Interaction.Toolkit.AffordanceSystem.Receiver.ISynchronousAffordanceStateReceiver> m_SynchronousAffordanceReceivers
    [[deprecated("Use field access instead!")]] ::Unity::XR::CoreUtils::Collections::HashSetList_1<::UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::Receiver::ISynchronousAffordanceStateReceiver*>*& dyn_m_SynchronousAffordanceReceivers();
    // Get instance field reference: private readonly System.Collections.Generic.List`1<Unity.Jobs.JobHandle> m_ScheduledJobs
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Unity::Jobs::JobHandle>*& dyn_m_ScheduledJobs();
    // Get instance field reference: private readonly Unity.XR.CoreUtils.Bindings.BindingsGroup m_BindingsGroup
    [[deprecated("Use field access instead!")]] ::Unity::XR::CoreUtils::Bindings::BindingsGroup*& dyn_m_BindingsGroup();
    // Get instance field reference: private System.Single m_TimeSinceLastStateUpdate
    [[deprecated("Use field access instead!")]] float& dyn_m_TimeSinceLastStateUpdate();
    // Get instance field reference: private System.Boolean m_IsFirstFrame
    [[deprecated("Use field access instead!")]] bool& dyn_m_IsFirstFrame();
    // Get instance field reference: private System.Boolean m_CompletingTweens
    [[deprecated("Use field access instead!")]] bool& dyn_m_CompletingTweens();
    // Get instance field reference: private System.Single m_InterpolationSpeed
    [[deprecated("Use field access instead!")]] float& dyn_m_InterpolationSpeed();
    // Get instance field reference: private System.Single m_MaxTransitionDuration
    [[deprecated("Use field access instead!")]] float& dyn_m_MaxTransitionDuration();
    // public System.Single get_transitionDuration()
    // Offset: 0x543DCC4
    float get_transitionDuration();
    // public System.Void set_transitionDuration(System.Single value)
    // Offset: 0x543DCCC
    void set_transitionDuration(float value);
    // public System.Boolean get_isCurrentlyTransitioning()
    // Offset: 0x543DD1C
    bool get_isCurrentlyTransitioning();
    // public Unity.XR.CoreUtils.Bindings.Variables.IReadOnlyBindableVariable`1<UnityEngine.XR.Interaction.Toolkit.AffordanceSystem.State.AffordanceStateData> get_currentAffordanceStateData()
    // Offset: 0x543DD7C
    ::Unity::XR::CoreUtils::Bindings::Variables::IReadOnlyBindableVariable_1<::UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::AffordanceStateData>* get_currentAffordanceStateData();
    // protected System.Void OnValidate()
    // Offset: 0x543DD84
    void OnValidate();
    // protected System.Void OnEnable()
    // Offset: 0x543DDAC
    void OnEnable();
    // protected System.Void OnDisable()
    // Offset: 0x543DDDC
    void OnDisable();
    // protected System.Void Update()
    // Offset: 0x543DDE8
    void Update();
    // protected System.Void BindToProviders()
    // Offset: 0x543E444
    void BindToProviders();
    // protected System.Void ClearBindings()
    // Offset: 0x543E534
    void ClearBindings();
    // protected System.Void AddBinding(Unity.XR.CoreUtils.Bindings.IEventBinding binding)
    // Offset: 0x543E518
    void AddBinding(::Unity::XR::CoreUtils::Bindings::IEventBinding* binding);
    // public System.Void UpdateAffordanceState(UnityEngine.XR.Interaction.Toolkit.AffordanceSystem.State.AffordanceStateData newAffordanceStateData)
    // Offset: 0x543E550
    void UpdateAffordanceState(::UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::AffordanceStateData newAffordanceStateData);
    // private System.Void OnAffordanceStateUpdated(UnityEngine.XR.Interaction.Toolkit.AffordanceSystem.State.AffordanceStateData newAffordanceStateData)
    // Offset: 0x543DE80
    void OnAffordanceStateUpdated(::UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::AffordanceStateData newAffordanceStateData);
    // public System.Boolean RegisterAffordanceReceiver(UnityEngine.XR.Interaction.Toolkit.AffordanceSystem.Receiver.IAffordanceStateReceiver receiver)
    // Offset: 0x543E5A8
    bool RegisterAffordanceReceiver(::UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::Receiver::IAffordanceStateReceiver* receiver);
    // private System.Boolean RegisterAffordanceReceiver(UnityEngine.XR.Interaction.Toolkit.AffordanceSystem.Receiver.IAsyncAffordanceStateReceiver receiver)
    // Offset: 0x543E6E4
    bool RegisterAffordanceReceiver(::UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::Receiver::IAsyncAffordanceStateReceiver* receiver);
    // private System.Boolean RegisterAffordanceReceiver(UnityEngine.XR.Interaction.Toolkit.AffordanceSystem.Receiver.ISynchronousAffordanceStateReceiver receiver)
    // Offset: 0x543E73C
    bool RegisterAffordanceReceiver(::UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::Receiver::ISynchronousAffordanceStateReceiver* receiver);
    // public System.Boolean UnregisterAffordanceReceiver(UnityEngine.XR.Interaction.Toolkit.AffordanceSystem.Receiver.IAffordanceStateReceiver receiver)
    // Offset: 0x543E794
    bool UnregisterAffordanceReceiver(::UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::Receiver::IAffordanceStateReceiver* receiver);
    // private System.Boolean UnregisterAffordanceReceiver(UnityEngine.XR.Interaction.Toolkit.AffordanceSystem.Receiver.IAsyncAffordanceStateReceiver receiver)
    // Offset: 0x543E8D0
    bool UnregisterAffordanceReceiver(::UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::Receiver::IAsyncAffordanceStateReceiver* receiver);
    // private System.Boolean UnregisterAffordanceReceiver(UnityEngine.XR.Interaction.Toolkit.AffordanceSystem.Receiver.ISynchronousAffordanceStateReceiver receiver)
    // Offset: 0x543E930
    bool UnregisterAffordanceReceiver(::UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::Receiver::ISynchronousAffordanceStateReceiver* receiver);
    // private System.Boolean CompleteJobs()
    // Offset: 0x543E988
    bool CompleteJobs();
    // private System.Void DoTween(System.Single tweenTarget)
    // Offset: 0x543E0BC
    void DoTween(float tweenTarget);
    // private System.Void RefreshTransitionDuration()
    // Offset: 0x543DCF4
    void RefreshTransitionDuration();
    // protected System.Void .ctor()
    // Offset: 0x543EA48
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static BaseAffordanceStateProvider* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::BaseAffordanceStateProvider::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<BaseAffordanceStateProvider*, creationType>()));
    }
  }; // UnityEngine.XR.Interaction.Toolkit.AffordanceSystem.State.BaseAffordanceStateProvider
  #pragma pack(pop)
  static check_size<sizeof(BaseAffordanceStateProvider), 92 + sizeof(float)> __UnityEngine_XR_Interaction_Toolkit_AffordanceSystem_State_BaseAffordanceStateProviderSizeCheck;
  static_assert(sizeof(BaseAffordanceStateProvider) == 0x60);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::BaseAffordanceStateProvider::get_transitionDuration
// Il2CppName: get_transitionDuration
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::BaseAffordanceStateProvider::*)()>(&UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::BaseAffordanceStateProvider::get_transitionDuration)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::BaseAffordanceStateProvider*), "get_transitionDuration", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::BaseAffordanceStateProvider::set_transitionDuration
// Il2CppName: set_transitionDuration
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::BaseAffordanceStateProvider::*)(float)>(&UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::BaseAffordanceStateProvider::set_transitionDuration)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::BaseAffordanceStateProvider*), "set_transitionDuration", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::BaseAffordanceStateProvider::get_isCurrentlyTransitioning
// Il2CppName: get_isCurrentlyTransitioning
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::BaseAffordanceStateProvider::*)()>(&UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::BaseAffordanceStateProvider::get_isCurrentlyTransitioning)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::BaseAffordanceStateProvider*), "get_isCurrentlyTransitioning", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::BaseAffordanceStateProvider::get_currentAffordanceStateData
// Il2CppName: get_currentAffordanceStateData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Unity::XR::CoreUtils::Bindings::Variables::IReadOnlyBindableVariable_1<::UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::AffordanceStateData>* (UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::BaseAffordanceStateProvider::*)()>(&UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::BaseAffordanceStateProvider::get_currentAffordanceStateData)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::BaseAffordanceStateProvider*), "get_currentAffordanceStateData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::BaseAffordanceStateProvider::OnValidate
// Il2CppName: OnValidate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::BaseAffordanceStateProvider::*)()>(&UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::BaseAffordanceStateProvider::OnValidate)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::BaseAffordanceStateProvider*), "OnValidate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::BaseAffordanceStateProvider::OnEnable
// Il2CppName: OnEnable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::BaseAffordanceStateProvider::*)()>(&UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::BaseAffordanceStateProvider::OnEnable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::BaseAffordanceStateProvider*), "OnEnable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::BaseAffordanceStateProvider::OnDisable
// Il2CppName: OnDisable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::BaseAffordanceStateProvider::*)()>(&UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::BaseAffordanceStateProvider::OnDisable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::BaseAffordanceStateProvider*), "OnDisable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::BaseAffordanceStateProvider::Update
// Il2CppName: Update
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::BaseAffordanceStateProvider::*)()>(&UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::BaseAffordanceStateProvider::Update)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::BaseAffordanceStateProvider*), "Update", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::BaseAffordanceStateProvider::BindToProviders
// Il2CppName: BindToProviders
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::BaseAffordanceStateProvider::*)()>(&UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::BaseAffordanceStateProvider::BindToProviders)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::BaseAffordanceStateProvider*), "BindToProviders", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::BaseAffordanceStateProvider::ClearBindings
// Il2CppName: ClearBindings
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::BaseAffordanceStateProvider::*)()>(&UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::BaseAffordanceStateProvider::ClearBindings)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::BaseAffordanceStateProvider*), "ClearBindings", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::BaseAffordanceStateProvider::AddBinding
// Il2CppName: AddBinding
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::BaseAffordanceStateProvider::*)(::Unity::XR::CoreUtils::Bindings::IEventBinding*)>(&UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::BaseAffordanceStateProvider::AddBinding)> {
  static const MethodInfo* get() {
    static auto* binding = &::il2cpp_utils::GetClassFromName("Unity.XR.CoreUtils.Bindings", "IEventBinding")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::BaseAffordanceStateProvider*), "AddBinding", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{binding});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::BaseAffordanceStateProvider::UpdateAffordanceState
// Il2CppName: UpdateAffordanceState
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::BaseAffordanceStateProvider::*)(::UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::AffordanceStateData)>(&UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::BaseAffordanceStateProvider::UpdateAffordanceState)> {
  static const MethodInfo* get() {
    static auto* newAffordanceStateData = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit.AffordanceSystem.State", "AffordanceStateData")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::BaseAffordanceStateProvider*), "UpdateAffordanceState", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{newAffordanceStateData});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::BaseAffordanceStateProvider::OnAffordanceStateUpdated
// Il2CppName: OnAffordanceStateUpdated
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::BaseAffordanceStateProvider::*)(::UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::AffordanceStateData)>(&UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::BaseAffordanceStateProvider::OnAffordanceStateUpdated)> {
  static const MethodInfo* get() {
    static auto* newAffordanceStateData = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit.AffordanceSystem.State", "AffordanceStateData")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::BaseAffordanceStateProvider*), "OnAffordanceStateUpdated", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{newAffordanceStateData});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::BaseAffordanceStateProvider::RegisterAffordanceReceiver
// Il2CppName: RegisterAffordanceReceiver
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::BaseAffordanceStateProvider::*)(::UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::Receiver::IAffordanceStateReceiver*)>(&UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::BaseAffordanceStateProvider::RegisterAffordanceReceiver)> {
  static const MethodInfo* get() {
    static auto* receiver = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit.AffordanceSystem.Receiver", "IAffordanceStateReceiver")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::BaseAffordanceStateProvider*), "RegisterAffordanceReceiver", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{receiver});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::BaseAffordanceStateProvider::RegisterAffordanceReceiver
// Il2CppName: RegisterAffordanceReceiver
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::BaseAffordanceStateProvider::*)(::UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::Receiver::IAsyncAffordanceStateReceiver*)>(&UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::BaseAffordanceStateProvider::RegisterAffordanceReceiver)> {
  static const MethodInfo* get() {
    static auto* receiver = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit.AffordanceSystem.Receiver", "IAsyncAffordanceStateReceiver")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::BaseAffordanceStateProvider*), "RegisterAffordanceReceiver", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{receiver});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::BaseAffordanceStateProvider::RegisterAffordanceReceiver
// Il2CppName: RegisterAffordanceReceiver
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::BaseAffordanceStateProvider::*)(::UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::Receiver::ISynchronousAffordanceStateReceiver*)>(&UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::BaseAffordanceStateProvider::RegisterAffordanceReceiver)> {
  static const MethodInfo* get() {
    static auto* receiver = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit.AffordanceSystem.Receiver", "ISynchronousAffordanceStateReceiver")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::BaseAffordanceStateProvider*), "RegisterAffordanceReceiver", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{receiver});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::BaseAffordanceStateProvider::UnregisterAffordanceReceiver
// Il2CppName: UnregisterAffordanceReceiver
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::BaseAffordanceStateProvider::*)(::UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::Receiver::IAffordanceStateReceiver*)>(&UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::BaseAffordanceStateProvider::UnregisterAffordanceReceiver)> {
  static const MethodInfo* get() {
    static auto* receiver = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit.AffordanceSystem.Receiver", "IAffordanceStateReceiver")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::BaseAffordanceStateProvider*), "UnregisterAffordanceReceiver", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{receiver});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::BaseAffordanceStateProvider::UnregisterAffordanceReceiver
// Il2CppName: UnregisterAffordanceReceiver
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::BaseAffordanceStateProvider::*)(::UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::Receiver::IAsyncAffordanceStateReceiver*)>(&UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::BaseAffordanceStateProvider::UnregisterAffordanceReceiver)> {
  static const MethodInfo* get() {
    static auto* receiver = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit.AffordanceSystem.Receiver", "IAsyncAffordanceStateReceiver")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::BaseAffordanceStateProvider*), "UnregisterAffordanceReceiver", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{receiver});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::BaseAffordanceStateProvider::UnregisterAffordanceReceiver
// Il2CppName: UnregisterAffordanceReceiver
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::BaseAffordanceStateProvider::*)(::UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::Receiver::ISynchronousAffordanceStateReceiver*)>(&UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::BaseAffordanceStateProvider::UnregisterAffordanceReceiver)> {
  static const MethodInfo* get() {
    static auto* receiver = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit.AffordanceSystem.Receiver", "ISynchronousAffordanceStateReceiver")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::BaseAffordanceStateProvider*), "UnregisterAffordanceReceiver", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{receiver});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::BaseAffordanceStateProvider::CompleteJobs
// Il2CppName: CompleteJobs
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::BaseAffordanceStateProvider::*)()>(&UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::BaseAffordanceStateProvider::CompleteJobs)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::BaseAffordanceStateProvider*), "CompleteJobs", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::BaseAffordanceStateProvider::DoTween
// Il2CppName: DoTween
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::BaseAffordanceStateProvider::*)(float)>(&UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::BaseAffordanceStateProvider::DoTween)> {
  static const MethodInfo* get() {
    static auto* tweenTarget = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::BaseAffordanceStateProvider*), "DoTween", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{tweenTarget});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::BaseAffordanceStateProvider::RefreshTransitionDuration
// Il2CppName: RefreshTransitionDuration
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::BaseAffordanceStateProvider::*)()>(&UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::BaseAffordanceStateProvider::RefreshTransitionDuration)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::BaseAffordanceStateProvider*), "RefreshTransitionDuration", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::State::BaseAffordanceStateProvider::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
