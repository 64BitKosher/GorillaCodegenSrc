// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.AffordanceSystem.Jobs.ITweenJob`1
#include "UnityEngine/XR/Interaction/Toolkit/AffordanceSystem/Jobs/ITweenJob_1.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
// Completed includes
// Type namespace: UnityEngine.XR.Interaction.Toolkit.AffordanceSystem.Jobs
namespace UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::Jobs {
  // Forward declaring type: ColorTweenJob
  struct ColorTweenJob;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::Jobs::ColorTweenJob, "UnityEngine.XR.Interaction.Toolkit.AffordanceSystem.Jobs", "ColorTweenJob");
// Type namespace: UnityEngine.XR.Interaction.Toolkit.AffordanceSystem.Jobs
namespace UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::Jobs {
  // WARNING Size may be invalid!
  // WARNING Layout: Sequential may not be correctly taken into account!
  // Autogenerated type: UnityEngine.XR.Interaction.Toolkit.AffordanceSystem.Jobs.ColorTweenJob
  // [TokenAttribute] Offset: FFFFFFFF
  // [BurstCompileAttribute] Offset: FFFFFFFF
  struct ColorTweenJob/*, public ::System::ValueType, public ::UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::Jobs::ITweenJob_1<::UnityEngine::Color>*/ {
    public:
    public:
    // private UnityEngine.XR.Interaction.Toolkit.AffordanceSystem.Jobs.TweenJobData`1<UnityEngine.Color> <jobData>k__BackingField
    // Size: 0xFFFFFFFF
    // Offset: 0x0
    ::UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::Jobs::TweenJobData_1<::UnityEngine::Color> jobData;
    // private System.Byte <colorBlendMode>k__BackingField
    // Size: 0x1
    // Offset: 0x78
    uint8_t colorBlendMode;
    // Field size check
    static_assert(sizeof(uint8_t) == 0x1);
    // private System.Single <colorBlendAmount>k__BackingField
    // Size: 0x4
    // Offset: 0x7C
    float colorBlendAmount;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    public:
    // Creating value type constructor for type: ColorTweenJob
    constexpr ColorTweenJob(::UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::Jobs::TweenJobData_1<::UnityEngine::Color> jobData_ = {}, uint8_t colorBlendMode_ = {}, float colorBlendAmount_ = {}) noexcept : jobData{jobData_}, colorBlendMode{colorBlendMode_}, colorBlendAmount{colorBlendAmount_} {}
    // Creating interface conversion operator: operator ::System::ValueType
    operator ::System::ValueType() noexcept {
      return *reinterpret_cast<::System::ValueType*>(this);
    }
    // Creating interface conversion operator: operator ::UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::Jobs::ITweenJob_1<::UnityEngine::Color>
    operator ::UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::Jobs::ITweenJob_1<::UnityEngine::Color>() noexcept {
      return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::Jobs::ITweenJob_1<::UnityEngine::Color>*>(this);
    }
    // Get instance field reference: private UnityEngine.XR.Interaction.Toolkit.AffordanceSystem.Jobs.TweenJobData`1<UnityEngine.Color> <jobData>k__BackingField
    [[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::Jobs::TweenJobData_1<::UnityEngine::Color>& dyn_$jobData$k__BackingField();
    // Get instance field reference: private System.Byte <colorBlendMode>k__BackingField
    [[deprecated("Use field access instead!")]] uint8_t& dyn_$colorBlendMode$k__BackingField();
    // Get instance field reference: private System.Single <colorBlendAmount>k__BackingField
    [[deprecated("Use field access instead!")]] float& dyn_$colorBlendAmount$k__BackingField();
    // public UnityEngine.XR.Interaction.Toolkit.AffordanceSystem.Jobs.TweenJobData`1<UnityEngine.Color> get_jobData()
    // Offset: 0x54446E8
    ::UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::Jobs::TweenJobData_1<::UnityEngine::Color> get_jobData();
    // public System.Void set_jobData(UnityEngine.XR.Interaction.Toolkit.AffordanceSystem.Jobs.TweenJobData`1<UnityEngine.Color> value)
    // Offset: 0x54446F8
    void set_jobData(::UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::Jobs::TweenJobData_1<::UnityEngine::Color> value);
    // public System.Byte get_colorBlendMode()
    // Offset: 0x544470C
    uint8_t get_colorBlendMode();
    // public System.Void set_colorBlendMode(System.Byte value)
    // Offset: 0x5444714
    void set_colorBlendMode(uint8_t value);
    // public System.Single get_colorBlendAmount()
    // Offset: 0x544471C
    float get_colorBlendAmount();
    // public System.Void set_colorBlendAmount(System.Single value)
    // Offset: 0x5444724
    void set_colorBlendAmount(float value);
    // public System.Void Execute()
    // Offset: 0x544472C
    void Execute();
    // private UnityEngine.Color ProcessTargetAffordanceValue(UnityEngine.Color initialValue, UnityEngine.Color newValue)
    // Offset: 0x5444A34
    ::UnityEngine::Color ProcessTargetAffordanceValue(::UnityEngine::Color initialValue, ::UnityEngine::Color newValue);
    // public UnityEngine.Color Lerp(UnityEngine.Color from, UnityEngine.Color to, System.Single t)
    // Offset: 0x5444940
    ::UnityEngine::Color Lerp(::UnityEngine::Color from, ::UnityEngine::Color to, float t);
    // public System.Boolean IsNearlyEqual(UnityEngine.Color from, UnityEngine.Color to)
    // Offset: 0x5444B30
    bool IsNearlyEqual(::UnityEngine::Color from, ::UnityEngine::Color to);
  }; // UnityEngine.XR.Interaction.Toolkit.AffordanceSystem.Jobs.ColorTweenJob
  // WARNING Not writing size check since size may be invalid!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::Jobs::ColorTweenJob::get_jobData
// Il2CppName: get_jobData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::Jobs::TweenJobData_1<::UnityEngine::Color> (UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::Jobs::ColorTweenJob::*)()>(&UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::Jobs::ColorTweenJob::get_jobData)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::Jobs::ColorTweenJob), "get_jobData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::Jobs::ColorTweenJob::set_jobData
// Il2CppName: set_jobData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::Jobs::ColorTweenJob::*)(::UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::Jobs::TweenJobData_1<::UnityEngine::Color>)>(&UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::Jobs::ColorTweenJob::set_jobData)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit.AffordanceSystem.Jobs", "TweenJobData`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine", "Color")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::Jobs::ColorTweenJob), "set_jobData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::Jobs::ColorTweenJob::get_colorBlendMode
// Il2CppName: get_colorBlendMode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint8_t (UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::Jobs::ColorTweenJob::*)()>(&UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::Jobs::ColorTweenJob::get_colorBlendMode)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::Jobs::ColorTweenJob), "get_colorBlendMode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::Jobs::ColorTweenJob::set_colorBlendMode
// Il2CppName: set_colorBlendMode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::Jobs::ColorTweenJob::*)(uint8_t)>(&UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::Jobs::ColorTweenJob::set_colorBlendMode)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::Jobs::ColorTweenJob), "set_colorBlendMode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::Jobs::ColorTweenJob::get_colorBlendAmount
// Il2CppName: get_colorBlendAmount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::Jobs::ColorTweenJob::*)()>(&UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::Jobs::ColorTweenJob::get_colorBlendAmount)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::Jobs::ColorTweenJob), "get_colorBlendAmount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::Jobs::ColorTweenJob::set_colorBlendAmount
// Il2CppName: set_colorBlendAmount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::Jobs::ColorTweenJob::*)(float)>(&UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::Jobs::ColorTweenJob::set_colorBlendAmount)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::Jobs::ColorTweenJob), "set_colorBlendAmount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::Jobs::ColorTweenJob::Execute
// Il2CppName: Execute
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::Jobs::ColorTweenJob::*)()>(&UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::Jobs::ColorTweenJob::Execute)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::Jobs::ColorTweenJob), "Execute", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::Jobs::ColorTweenJob::ProcessTargetAffordanceValue
// Il2CppName: ProcessTargetAffordanceValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Color (UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::Jobs::ColorTweenJob::*)(::UnityEngine::Color, ::UnityEngine::Color)>(&UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::Jobs::ColorTweenJob::ProcessTargetAffordanceValue)> {
  static const MethodInfo* get() {
    static auto* initialValue = &::il2cpp_utils::GetClassFromName("UnityEngine", "Color")->byval_arg;
    static auto* newValue = &::il2cpp_utils::GetClassFromName("UnityEngine", "Color")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::Jobs::ColorTweenJob), "ProcessTargetAffordanceValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{initialValue, newValue});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::Jobs::ColorTweenJob::Lerp
// Il2CppName: Lerp
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Color (UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::Jobs::ColorTweenJob::*)(::UnityEngine::Color, ::UnityEngine::Color, float)>(&UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::Jobs::ColorTweenJob::Lerp)> {
  static const MethodInfo* get() {
    static auto* from = &::il2cpp_utils::GetClassFromName("UnityEngine", "Color")->byval_arg;
    static auto* to = &::il2cpp_utils::GetClassFromName("UnityEngine", "Color")->byval_arg;
    static auto* t = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::Jobs::ColorTweenJob), "Lerp", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{from, to, t});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::Jobs::ColorTweenJob::IsNearlyEqual
// Il2CppName: IsNearlyEqual
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::Jobs::ColorTweenJob::*)(::UnityEngine::Color, ::UnityEngine::Color)>(&UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::Jobs::ColorTweenJob::IsNearlyEqual)> {
  static const MethodInfo* get() {
    static auto* from = &::il2cpp_utils::GetClassFromName("UnityEngine", "Color")->byval_arg;
    static auto* to = &::il2cpp_utils::GetClassFromName("UnityEngine", "Color")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::Jobs::ColorTweenJob), "IsNearlyEqual", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{from, to});
  }
};
