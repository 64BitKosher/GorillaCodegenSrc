// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.AffordanceSystem.Receiver.IAffordanceStateReceiver
#include "UnityEngine/XR/Interaction/Toolkit/AffordanceSystem/Receiver/IAffordanceStateReceiver.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Skipping declaration: ValueType because it is already included!
}
// Forward declaring namespace: UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::Theme
namespace UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::Theme {
  // Forward declaring type: BaseAffordanceTheme`1<T>
  template<typename T>
  class BaseAffordanceTheme_1;
}
// Forward declaring namespace: Unity::XR::CoreUtils::Bindings::Variables
namespace Unity::XR::CoreUtils::Bindings::Variables {
  // Forward declaring type: IReadOnlyBindableVariable`1<T>
  template<typename T>
  class IReadOnlyBindableVariable_1;
}
// Completed forward declares
// Type namespace: UnityEngine.XR.Interaction.Toolkit.AffordanceSystem.Receiver
namespace UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::Receiver {
  // Forward declaring type: IAffordanceStateReceiver`1<T>
  template<typename T>
  class IAffordanceStateReceiver_1;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE_GENERIC_CLASS(::UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::Receiver::IAffordanceStateReceiver_1, "UnityEngine.XR.Interaction.Toolkit.AffordanceSystem.Receiver", "IAffordanceStateReceiver`1");
// Type namespace: UnityEngine.XR.Interaction.Toolkit.AffordanceSystem.Receiver
namespace UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::Receiver {
  // WARNING Size may be invalid!
  // Autogenerated type: UnityEngine.XR.Interaction.Toolkit.AffordanceSystem.Receiver.IAffordanceStateReceiver`1
  // [TokenAttribute] Offset: FFFFFFFF
  template<typename T>
  class IAffordanceStateReceiver_1/*, public ::UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::Receiver::IAffordanceStateReceiver*/ {
    public:
    // Creating interface conversion operator: operator ::UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::Receiver::IAffordanceStateReceiver
    operator ::UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::Receiver::IAffordanceStateReceiver() noexcept {
      return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::Receiver::IAffordanceStateReceiver*>(this);
    }
    // public UnityEngine.XR.Interaction.Toolkit.AffordanceSystem.Theme.BaseAffordanceTheme`1<T> get_affordanceTheme()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::Theme::BaseAffordanceTheme_1<T>* get_affordanceTheme() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::Receiver::IAffordanceStateReceiver_1::get_affordanceTheme");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::Receiver::IAffordanceStateReceiver_1<T>*), -1));
      return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::Theme::BaseAffordanceTheme_1<T>*, false>(this, ___internal__method);
    }
    // public Unity.XR.CoreUtils.Bindings.Variables.IReadOnlyBindableVariable`1<T> get_currentAffordanceValue()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::Unity::XR::CoreUtils::Bindings::Variables::IReadOnlyBindableVariable_1<T>* get_currentAffordanceValue() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::Receiver::IAffordanceStateReceiver_1::get_currentAffordanceValue");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::Receiver::IAffordanceStateReceiver_1<T>*), -1));
      return ::il2cpp_utils::RunMethodRethrow<::Unity::XR::CoreUtils::Bindings::Variables::IReadOnlyBindableVariable_1<T>*, false>(this, ___internal__method);
    }
  }; // UnityEngine.XR.Interaction.Toolkit.AffordanceSystem.Receiver.IAffordanceStateReceiver`1
  // Could not write size check! Type: UnityEngine.XR.Interaction.Toolkit.AffordanceSystem.Receiver.IAffordanceStateReceiver`1 is generic, or has no fields that are valid for size checks!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
