// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.AffordanceSystem.Receiver.Primitives.ColorAffordanceReceiver
#include "UnityEngine/XR/Interaction/Toolkit/AffordanceSystem/Receiver/Primitives/ColorAffordanceReceiver.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::UI
namespace UnityEngine::UI {
  // Forward declaring type: Image
  class Image;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: CanvasGroup
  class CanvasGroup;
  // Skipping declaration: Color because it is already included!
}
// Completed forward declares
// Type namespace: UnityEngine.XR.Interaction.Toolkit.AffordanceSystem.Receiver.UI
namespace UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::Receiver::UI {
  // Forward declaring type: ImageColorAffordanceReceiver
  class ImageColorAffordanceReceiver;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::Receiver::UI::ImageColorAffordanceReceiver);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::Receiver::UI::ImageColorAffordanceReceiver*, "UnityEngine.XR.Interaction.Toolkit.AffordanceSystem.Receiver.UI", "ImageColorAffordanceReceiver");
// Type namespace: UnityEngine.XR.Interaction.Toolkit.AffordanceSystem.Receiver.UI
namespace UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::Receiver::UI {
  // WARNING Size may be invalid!
  // Autogenerated type: UnityEngine.XR.Interaction.Toolkit.AffordanceSystem.Receiver.UI.ImageColorAffordanceReceiver
  // [TokenAttribute] Offset: FFFFFFFF
  // [HelpURLAttribute] Offset: FFFFFFFF
  // [AddComponentMenu] Offset: FFFFFFFF
  class ImageColorAffordanceReceiver : public ::UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::Receiver::Primitives::ColorAffordanceReceiver {
    public:
    public:
    // private UnityEngine.UI.Image m_Image
    // Size: 0x8
    // Offset: 0xB0
    ::UnityEngine::UI::Image* m_Image;
    // Field size check
    static_assert(sizeof(::UnityEngine::UI::Image*) == 0x8);
    // private UnityEngine.CanvasGroup m_CanvasGroup
    // Size: 0x8
    // Offset: 0xB8
    ::UnityEngine::CanvasGroup* m_CanvasGroup;
    // Field size check
    static_assert(sizeof(::UnityEngine::CanvasGroup*) == 0x8);
    // private System.Boolean m_IgnoreAlpha
    // Size: 0x1
    // Offset: 0xC0
    bool m_IgnoreAlpha;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean m_HasImage
    // Size: 0x1
    // Offset: 0xC1
    bool m_HasImage;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean m_HasCanvasGroup
    // Size: 0x1
    // Offset: 0xC2
    bool m_HasCanvasGroup;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    public:
    // Get instance field reference: private UnityEngine.UI.Image m_Image
    [[deprecated("Use field access instead!")]] ::UnityEngine::UI::Image*& dyn_m_Image();
    // Get instance field reference: private UnityEngine.CanvasGroup m_CanvasGroup
    [[deprecated("Use field access instead!")]] ::UnityEngine::CanvasGroup*& dyn_m_CanvasGroup();
    // Get instance field reference: private System.Boolean m_IgnoreAlpha
    [[deprecated("Use field access instead!")]] bool& dyn_m_IgnoreAlpha();
    // Get instance field reference: private System.Boolean m_HasImage
    [[deprecated("Use field access instead!")]] bool& dyn_m_HasImage();
    // Get instance field reference: private System.Boolean m_HasCanvasGroup
    [[deprecated("Use field access instead!")]] bool& dyn_m_HasCanvasGroup();
    // public UnityEngine.UI.Image get_image()
    // Offset: 0x5441D34
    ::UnityEngine::UI::Image* get_image();
    // public System.Void set_image(UnityEngine.UI.Image value)
    // Offset: 0x5441D3C
    void set_image(::UnityEngine::UI::Image* value);
    // public UnityEngine.CanvasGroup get_canvasGroup()
    // Offset: 0x5441D44
    ::UnityEngine::CanvasGroup* get_canvasGroup();
    // public System.Void set_canvasGroup(UnityEngine.CanvasGroup value)
    // Offset: 0x5441D4C
    void set_canvasGroup(::UnityEngine::CanvasGroup* value);
    // public System.Boolean get_ignoreAlpha()
    // Offset: 0x5441D54
    bool get_ignoreAlpha();
    // public System.Void set_ignoreAlpha(System.Boolean value)
    // Offset: 0x5441D5C
    void set_ignoreAlpha(bool value);
    // protected UnityEngine.Color GetCurrentValueForCapture()
    // Offset: 0x5441F78
    ::UnityEngine::Color GetCurrentValueForCapture();
    // protected override System.Void OnEnable()
    // Offset: 0x5441D68
    // Implemented from: UnityEngine.XR.Interaction.Toolkit.AffordanceSystem.Receiver.BaseAffordanceStateReceiver`1
    // Base method: System.Void BaseAffordanceStateReceiver_1::OnEnable()
    void OnEnable();
    // protected override System.Void OnAffordanceValueUpdated(UnityEngine.Color newValue)
    // Offset: 0x5441E18
    // Implemented from: UnityEngine.XR.Interaction.Toolkit.AffordanceSystem.Receiver.Primitives.ColorAffordanceReceiver
    // Base method: System.Void ColorAffordanceReceiver::OnAffordanceValueUpdated(UnityEngine.Color newValue)
    void OnAffordanceValueUpdated(::UnityEngine::Color newValue);
    // public System.Void .ctor()
    // Offset: 0x5441FEC
    // Implemented from: UnityEngine.XR.Interaction.Toolkit.AffordanceSystem.Receiver.Primitives.ColorAffordanceReceiver
    // Base method: System.Void ColorAffordanceReceiver::.ctor()
    // Base method: System.Void BaseAsyncAffordanceStateReceiver_1::.ctor()
    // Base method: System.Void BaseAffordanceStateReceiver_1::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static ImageColorAffordanceReceiver* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::Receiver::UI::ImageColorAffordanceReceiver::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<ImageColorAffordanceReceiver*, creationType>()));
    }
  }; // UnityEngine.XR.Interaction.Toolkit.AffordanceSystem.Receiver.UI.ImageColorAffordanceReceiver
  // WARNING Not writing size check since size may be invalid!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::Receiver::UI::ImageColorAffordanceReceiver::get_image
// Il2CppName: get_image
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UI::Image* (UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::Receiver::UI::ImageColorAffordanceReceiver::*)()>(&UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::Receiver::UI::ImageColorAffordanceReceiver::get_image)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::Receiver::UI::ImageColorAffordanceReceiver*), "get_image", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::Receiver::UI::ImageColorAffordanceReceiver::set_image
// Il2CppName: set_image
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::Receiver::UI::ImageColorAffordanceReceiver::*)(::UnityEngine::UI::Image*)>(&UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::Receiver::UI::ImageColorAffordanceReceiver::set_image)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.UI", "Image")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::Receiver::UI::ImageColorAffordanceReceiver*), "set_image", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::Receiver::UI::ImageColorAffordanceReceiver::get_canvasGroup
// Il2CppName: get_canvasGroup
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::CanvasGroup* (UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::Receiver::UI::ImageColorAffordanceReceiver::*)()>(&UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::Receiver::UI::ImageColorAffordanceReceiver::get_canvasGroup)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::Receiver::UI::ImageColorAffordanceReceiver*), "get_canvasGroup", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::Receiver::UI::ImageColorAffordanceReceiver::set_canvasGroup
// Il2CppName: set_canvasGroup
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::Receiver::UI::ImageColorAffordanceReceiver::*)(::UnityEngine::CanvasGroup*)>(&UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::Receiver::UI::ImageColorAffordanceReceiver::set_canvasGroup)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "CanvasGroup")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::Receiver::UI::ImageColorAffordanceReceiver*), "set_canvasGroup", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::Receiver::UI::ImageColorAffordanceReceiver::get_ignoreAlpha
// Il2CppName: get_ignoreAlpha
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::Receiver::UI::ImageColorAffordanceReceiver::*)()>(&UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::Receiver::UI::ImageColorAffordanceReceiver::get_ignoreAlpha)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::Receiver::UI::ImageColorAffordanceReceiver*), "get_ignoreAlpha", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::Receiver::UI::ImageColorAffordanceReceiver::set_ignoreAlpha
// Il2CppName: set_ignoreAlpha
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::Receiver::UI::ImageColorAffordanceReceiver::*)(bool)>(&UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::Receiver::UI::ImageColorAffordanceReceiver::set_ignoreAlpha)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::Receiver::UI::ImageColorAffordanceReceiver*), "set_ignoreAlpha", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::Receiver::UI::ImageColorAffordanceReceiver::GetCurrentValueForCapture
// Il2CppName: GetCurrentValueForCapture
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Color (UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::Receiver::UI::ImageColorAffordanceReceiver::*)()>(&UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::Receiver::UI::ImageColorAffordanceReceiver::GetCurrentValueForCapture)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::Receiver::UI::ImageColorAffordanceReceiver*), "GetCurrentValueForCapture", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::Receiver::UI::ImageColorAffordanceReceiver::OnEnable
// Il2CppName: OnEnable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::Receiver::UI::ImageColorAffordanceReceiver::*)()>(&UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::Receiver::UI::ImageColorAffordanceReceiver::OnEnable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::Receiver::UI::ImageColorAffordanceReceiver*), "OnEnable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::Receiver::UI::ImageColorAffordanceReceiver::OnAffordanceValueUpdated
// Il2CppName: OnAffordanceValueUpdated
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::Receiver::UI::ImageColorAffordanceReceiver::*)(::UnityEngine::Color)>(&UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::Receiver::UI::ImageColorAffordanceReceiver::OnAffordanceValueUpdated)> {
  static const MethodInfo* get() {
    static auto* newValue = &::il2cpp_utils::GetClassFromName("UnityEngine", "Color")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::Receiver::UI::ImageColorAffordanceReceiver*), "OnAffordanceValueUpdated", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{newValue});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::Receiver::UI::ImageColorAffordanceReceiver::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
