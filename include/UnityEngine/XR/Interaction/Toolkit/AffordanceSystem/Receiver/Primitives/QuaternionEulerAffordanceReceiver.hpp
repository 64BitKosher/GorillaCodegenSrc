// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.AffordanceSystem.Receiver.Primitives.Vector3AffordanceReceiver
#include "UnityEngine/XR/Interaction/Toolkit/AffordanceSystem/Receiver/Primitives/Vector3AffordanceReceiver.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Unity::XR::CoreUtils
namespace Unity::XR::CoreUtils {
  // Forward declaring type: QuaternionUnityEvent
  class QuaternionUnityEvent;
}
// Forward declaring namespace: Unity::Mathematics
namespace Unity::Mathematics {
  // Skipping declaration: float3 because it is already included!
}
// Completed forward declares
// Type namespace: UnityEngine.XR.Interaction.Toolkit.AffordanceSystem.Receiver.Primitives
namespace UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::Receiver::Primitives {
  // Forward declaring type: QuaternionEulerAffordanceReceiver
  class QuaternionEulerAffordanceReceiver;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::Receiver::Primitives::QuaternionEulerAffordanceReceiver);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::Receiver::Primitives::QuaternionEulerAffordanceReceiver*, "UnityEngine.XR.Interaction.Toolkit.AffordanceSystem.Receiver.Primitives", "QuaternionEulerAffordanceReceiver");
// Type namespace: UnityEngine.XR.Interaction.Toolkit.AffordanceSystem.Receiver.Primitives
namespace UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::Receiver::Primitives {
  // WARNING Size may be invalid!
  // Autogenerated type: UnityEngine.XR.Interaction.Toolkit.AffordanceSystem.Receiver.Primitives.QuaternionEulerAffordanceReceiver
  // [TokenAttribute] Offset: FFFFFFFF
  // [HelpURLAttribute] Offset: FFFFFFFF
  // [AddComponentMenu] Offset: FFFFFFFF
  class QuaternionEulerAffordanceReceiver : public ::UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::Receiver::Primitives::Vector3AffordanceReceiver {
    public:
    public:
    // private Unity.XR.CoreUtils.QuaternionUnityEvent m_QuaternionValueUpdated
    // Size: 0x8
    // Offset: 0xB0
    ::Unity::XR::CoreUtils::QuaternionUnityEvent* m_QuaternionValueUpdated;
    // Field size check
    static_assert(sizeof(::Unity::XR::CoreUtils::QuaternionUnityEvent*) == 0x8);
    public:
    // Get instance field reference: private Unity.XR.CoreUtils.QuaternionUnityEvent m_QuaternionValueUpdated
    [[deprecated("Use field access instead!")]] ::Unity::XR::CoreUtils::QuaternionUnityEvent*& dyn_m_QuaternionValueUpdated();
    // public Unity.XR.CoreUtils.QuaternionUnityEvent get_quaternionValueUpdated()
    // Offset: 0x5443BF8
    ::Unity::XR::CoreUtils::QuaternionUnityEvent* get_quaternionValueUpdated();
    // public System.Void set_quaternionValueUpdated(Unity.XR.CoreUtils.QuaternionUnityEvent value)
    // Offset: 0x5443C00
    void set_quaternionValueUpdated(::Unity::XR::CoreUtils::QuaternionUnityEvent* value);
    // protected override System.Void OnAffordanceValueUpdated(Unity.Mathematics.float3 newValue)
    // Offset: 0x5443C08
    // Implemented from: UnityEngine.XR.Interaction.Toolkit.AffordanceSystem.Receiver.Primitives.Vector3AffordanceReceiver
    // Base method: System.Void Vector3AffordanceReceiver::OnAffordanceValueUpdated(Unity.Mathematics.float3 newValue)
    void OnAffordanceValueUpdated(::Unity::Mathematics::float3 newValue);
    // public System.Void .ctor()
    // Offset: 0x5443CCC
    // Implemented from: UnityEngine.XR.Interaction.Toolkit.AffordanceSystem.Receiver.Primitives.Vector3AffordanceReceiver
    // Base method: System.Void Vector3AffordanceReceiver::.ctor()
    // Base method: System.Void BaseAsyncAffordanceStateReceiver_1::.ctor()
    // Base method: System.Void BaseAffordanceStateReceiver_1::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static QuaternionEulerAffordanceReceiver* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::Receiver::Primitives::QuaternionEulerAffordanceReceiver::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<QuaternionEulerAffordanceReceiver*, creationType>()));
    }
  }; // UnityEngine.XR.Interaction.Toolkit.AffordanceSystem.Receiver.Primitives.QuaternionEulerAffordanceReceiver
  // WARNING Not writing size check since size may be invalid!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::Receiver::Primitives::QuaternionEulerAffordanceReceiver::get_quaternionValueUpdated
// Il2CppName: get_quaternionValueUpdated
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Unity::XR::CoreUtils::QuaternionUnityEvent* (UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::Receiver::Primitives::QuaternionEulerAffordanceReceiver::*)()>(&UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::Receiver::Primitives::QuaternionEulerAffordanceReceiver::get_quaternionValueUpdated)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::Receiver::Primitives::QuaternionEulerAffordanceReceiver*), "get_quaternionValueUpdated", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::Receiver::Primitives::QuaternionEulerAffordanceReceiver::set_quaternionValueUpdated
// Il2CppName: set_quaternionValueUpdated
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::Receiver::Primitives::QuaternionEulerAffordanceReceiver::*)(::Unity::XR::CoreUtils::QuaternionUnityEvent*)>(&UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::Receiver::Primitives::QuaternionEulerAffordanceReceiver::set_quaternionValueUpdated)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("Unity.XR.CoreUtils", "QuaternionUnityEvent")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::Receiver::Primitives::QuaternionEulerAffordanceReceiver*), "set_quaternionValueUpdated", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::Receiver::Primitives::QuaternionEulerAffordanceReceiver::OnAffordanceValueUpdated
// Il2CppName: OnAffordanceValueUpdated
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::Receiver::Primitives::QuaternionEulerAffordanceReceiver::*)(::Unity::Mathematics::float3)>(&UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::Receiver::Primitives::QuaternionEulerAffordanceReceiver::OnAffordanceValueUpdated)> {
  static const MethodInfo* get() {
    static auto* newValue = &::il2cpp_utils::GetClassFromName("Unity.Mathematics", "float3")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::Receiver::Primitives::QuaternionEulerAffordanceReceiver*), "OnAffordanceValueUpdated", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{newValue});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::AffordanceSystem::Receiver::Primitives::QuaternionEulerAffordanceReceiver::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
