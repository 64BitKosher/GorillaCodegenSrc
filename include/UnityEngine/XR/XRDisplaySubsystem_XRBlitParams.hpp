// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.XR.XRDisplaySubsystem
#include "UnityEngine/XR/XRDisplaySubsystem.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Including type: UnityEngine.Rect
#include "UnityEngine/Rect.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: RenderTexture
  class RenderTexture;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::XR::XRDisplaySubsystem::XRBlitParams, "UnityEngine.XR", "XRDisplaySubsystem/XRBlitParams");
// Type namespace: UnityEngine.XR
namespace UnityEngine::XR {
  // Size: 0x38
  #pragma pack(push, 1)
  // WARNING Layout: Sequential may not be correctly taken into account!
  // Autogenerated type: UnityEngine.XR.XRDisplaySubsystem/XRBlitParams
  // [TokenAttribute] Offset: FFFFFFFF
  // [NativeHeaderAttribute] Offset: FFFFFFFF
  // [NativeHeaderAttribute] Offset: FFFFFFFF
  struct XRDisplaySubsystem::XRBlitParams/*, public ::System::ValueType*/ {
    public:
    public:
    // public UnityEngine.RenderTexture srcTex
    // Size: 0x8
    // Offset: 0x0
    ::UnityEngine::RenderTexture* srcTex;
    // Field size check
    static_assert(sizeof(::UnityEngine::RenderTexture*) == 0x8);
    // public System.Int32 srcTexArraySlice
    // Size: 0x4
    // Offset: 0x8
    int srcTexArraySlice;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // public UnityEngine.Rect srcRect
    // Size: 0x10
    // Offset: 0xC
    ::UnityEngine::Rect srcRect;
    // Field size check
    static_assert(sizeof(::UnityEngine::Rect) == 0x10);
    // public UnityEngine.Rect destRect
    // Size: 0x10
    // Offset: 0x1C
    ::UnityEngine::Rect destRect;
    // Field size check
    static_assert(sizeof(::UnityEngine::Rect) == 0x10);
    // Padding between fields: destRect and: foveatedRenderingInfo
    char __padding3[0x4] = {};
    // public System.IntPtr foveatedRenderingInfo
    // Size: 0x8
    // Offset: 0x30
    ::System::IntPtr foveatedRenderingInfo;
    // Field size check
    static_assert(sizeof(::System::IntPtr) == 0x8);
    public:
    // Creating value type constructor for type: XRBlitParams
    constexpr XRBlitParams(::UnityEngine::RenderTexture* srcTex_ = {}, int srcTexArraySlice_ = {}, ::UnityEngine::Rect srcRect_ = {}, ::UnityEngine::Rect destRect_ = {}, ::System::IntPtr foveatedRenderingInfo_ = {}) noexcept : srcTex{srcTex_}, srcTexArraySlice{srcTexArraySlice_}, srcRect{srcRect_}, destRect{destRect_}, foveatedRenderingInfo{foveatedRenderingInfo_} {}
    // Creating interface conversion operator: operator ::System::ValueType
    operator ::System::ValueType() noexcept {
      return *reinterpret_cast<::System::ValueType*>(this);
    }
    // Get instance field reference: public UnityEngine.RenderTexture srcTex
    [[deprecated("Use field access instead!")]] ::UnityEngine::RenderTexture*& dyn_srcTex();
    // Get instance field reference: public System.Int32 srcTexArraySlice
    [[deprecated("Use field access instead!")]] int& dyn_srcTexArraySlice();
    // Get instance field reference: public UnityEngine.Rect srcRect
    [[deprecated("Use field access instead!")]] ::UnityEngine::Rect& dyn_srcRect();
    // Get instance field reference: public UnityEngine.Rect destRect
    [[deprecated("Use field access instead!")]] ::UnityEngine::Rect& dyn_destRect();
    // Get instance field reference: public System.IntPtr foveatedRenderingInfo
    [[deprecated("Use field access instead!")]] ::System::IntPtr& dyn_foveatedRenderingInfo();
  }; // UnityEngine.XR.XRDisplaySubsystem/XRBlitParams
  #pragma pack(pop)
  static check_size<sizeof(XRDisplaySubsystem::XRBlitParams), 48 + sizeof(::System::IntPtr)> __UnityEngine_XR_XRDisplaySubsystem_XRBlitParamsSizeCheck;
  static_assert(sizeof(XRDisplaySubsystem::XRBlitParams) == 0x38);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
