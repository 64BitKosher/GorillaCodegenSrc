// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.EnumDataUtility
#include "UnityEngine/EnumDataUtility.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Func`2<T, TResult>
  template<typename T, typename TResult>
  class Func_2;
}
// Forward declaring namespace: System::Reflection
namespace System::Reflection {
  // Forward declaring type: FieldInfo
  class FieldInfo;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::EnumDataUtility::$$c__DisplayClass2_0);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::EnumDataUtility::$$c__DisplayClass2_0*, "UnityEngine", "EnumDataUtility/<>c__DisplayClass2_0");
// Type namespace: UnityEngine
namespace UnityEngine {
  // Size: 0x18
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.EnumDataUtility/<>c__DisplayClass2_0
  // [TokenAttribute] Offset: FFFFFFFF
  // [CompilerGeneratedAttribute] Offset: FFFFFFFF
  class EnumDataUtility::$$c__DisplayClass2_0 : public ::Il2CppObject {
    public:
    public:
    // public System.Func`2<System.String,System.String> nicifyName
    // Size: 0x8
    // Offset: 0x10
    ::System::Func_2<::StringW, ::StringW>* nicifyName;
    // Field size check
    static_assert(sizeof(::System::Func_2<::StringW, ::StringW>*) == 0x8);
    public:
    // Creating conversion operator: operator ::System::Func_2<::StringW, ::StringW>*
    constexpr operator ::System::Func_2<::StringW, ::StringW>*() const noexcept {
      return nicifyName;
    }
    // Get instance field reference: public System.Func`2<System.String,System.String> nicifyName
    [[deprecated("Use field access instead!")]] ::System::Func_2<::StringW, ::StringW>*& dyn_nicifyName();
    // public System.Void .ctor()
    // Offset: 0x54C4924
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static EnumDataUtility::$$c__DisplayClass2_0* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EnumDataUtility::$$c__DisplayClass2_0::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<EnumDataUtility::$$c__DisplayClass2_0*, creationType>()));
    }
    // System.String <GetCachedEnumData>b__0(System.Reflection.FieldInfo f)
    // Offset: 0x54C55B4
    ::StringW $GetCachedEnumData$b__0(::System::Reflection::FieldInfo* f);
  }; // UnityEngine.EnumDataUtility/<>c__DisplayClass2_0
  #pragma pack(pop)
  static check_size<sizeof(EnumDataUtility::$$c__DisplayClass2_0), 16 + sizeof(::System::Func_2<::StringW, ::StringW>*)> __UnityEngine_EnumDataUtility_$$c__DisplayClass2_0SizeCheck;
  static_assert(sizeof(EnumDataUtility::$$c__DisplayClass2_0) == 0x18);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::EnumDataUtility::$$c__DisplayClass2_0::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::EnumDataUtility::$$c__DisplayClass2_0::$GetCachedEnumData$b__0
// Il2CppName: <GetCachedEnumData>b__0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (UnityEngine::EnumDataUtility::$$c__DisplayClass2_0::*)(::System::Reflection::FieldInfo*)>(&UnityEngine::EnumDataUtility::$$c__DisplayClass2_0::$GetCachedEnumData$b__0)> {
  static const MethodInfo* get() {
    static auto* f = &::il2cpp_utils::GetClassFromName("System.Reflection", "FieldInfo")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::EnumDataUtility::$$c__DisplayClass2_0*), "<GetCachedEnumData>b__0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{f});
  }
};
