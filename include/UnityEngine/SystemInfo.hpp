// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: BatteryStatus
  struct BatteryStatus;
  // Forward declaring type: OperatingSystemFamily
  struct OperatingSystemFamily;
  // Forward declaring type: DeviceType
  struct DeviceType;
  // Forward declaring type: RenderTextureFormat
  struct RenderTextureFormat;
  // Forward declaring type: TextureFormat
  struct TextureFormat;
  // Forward declaring type: HDRDisplaySupportFlags
  struct HDRDisplaySupportFlags;
  // Forward declaring type: RenderTextureDescriptor
  struct RenderTextureDescriptor;
}
// Forward declaring namespace: UnityEngine::Rendering
namespace UnityEngine::Rendering {
  // Forward declaring type: GraphicsDeviceType
  struct GraphicsDeviceType;
  // Forward declaring type: FoveatedRenderingCaps
  struct FoveatedRenderingCaps;
  // Forward declaring type: CopyTextureSupport
  struct CopyTextureSupport;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Enum
  class Enum;
}
// Forward declaring namespace: UnityEngine::Experimental::Rendering
namespace UnityEngine::Experimental::Rendering {
  // Forward declaring type: GraphicsFormat
  struct GraphicsFormat;
  // Forward declaring type: FormatUsage
  struct FormatUsage;
  // Forward declaring type: DefaultFormat
  struct DefaultFormat;
}
// Completed forward declares
// Type namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: SystemInfo
  class SystemInfo;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::SystemInfo);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::SystemInfo*, "UnityEngine", "SystemInfo");
// Type namespace: UnityEngine
namespace UnityEngine {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.SystemInfo
  // [TokenAttribute] Offset: FFFFFFFF
  // [NativeHeaderAttribute] Offset: FFFFFFFF
  // [NativeHeaderAttribute] Offset: FFFFFFFF
  // [NativeHeaderAttribute] Offset: FFFFFFFF
  // [NativeHeaderAttribute] Offset: FFFFFFFF
  // [NativeHeaderAttribute] Offset: FFFFFFFF
  // [NativeHeaderAttribute] Offset: FFFFFFFF
  class SystemInfo : public ::Il2CppObject {
    public:
    // static public System.Single get_batteryLevel()
    // Offset: 0x54CCC90
    static float get_batteryLevel();
    // static public UnityEngine.BatteryStatus get_batteryStatus()
    // Offset: 0x54CCCE0
    static ::UnityEngine::BatteryStatus get_batteryStatus();
    // static public System.String get_operatingSystem()
    // Offset: 0x54CCD30
    static ::StringW get_operatingSystem();
    // static public UnityEngine.OperatingSystemFamily get_operatingSystemFamily()
    // Offset: 0x54CCD80
    static ::UnityEngine::OperatingSystemFamily get_operatingSystemFamily();
    // static public System.String get_processorType()
    // Offset: 0x54CCDD0
    static ::StringW get_processorType();
    // static public System.Int32 get_processorFrequency()
    // Offset: 0x54CCE20
    static int get_processorFrequency();
    // static public System.Int32 get_processorCount()
    // Offset: 0x54CCE70
    static int get_processorCount();
    // static public System.Int32 get_systemMemorySize()
    // Offset: 0x54CCEC0
    static int get_systemMemorySize();
    // static public System.String get_deviceUniqueIdentifier()
    // Offset: 0x54CCF10
    static ::StringW get_deviceUniqueIdentifier();
    // static public System.String get_deviceName()
    // Offset: 0x54CCF60
    static ::StringW get_deviceName();
    // static public System.String get_deviceModel()
    // Offset: 0x54CCFB0
    static ::StringW get_deviceModel();
    // static public System.Boolean get_supportsAccelerometer()
    // Offset: 0x54CD000
    static bool get_supportsAccelerometer();
    // static public System.Boolean get_supportsGyroscope()
    // Offset: 0x54CD050
    static bool get_supportsGyroscope();
    // static public System.Boolean get_supportsLocationService()
    // Offset: 0x54CD0A0
    static bool get_supportsLocationService();
    // static public System.Boolean get_supportsAudio()
    // Offset: 0x54CD0F0
    static bool get_supportsAudio();
    // static public UnityEngine.DeviceType get_deviceType()
    // Offset: 0x54CD140
    static ::UnityEngine::DeviceType get_deviceType();
    // static public System.Int32 get_graphicsMemorySize()
    // Offset: 0x54CD190
    static int get_graphicsMemorySize();
    // static public System.String get_graphicsDeviceName()
    // Offset: 0x54CD1E0
    static ::StringW get_graphicsDeviceName();
    // static public System.String get_graphicsDeviceVendor()
    // Offset: 0x54CD230
    static ::StringW get_graphicsDeviceVendor();
    // static public System.Int32 get_graphicsDeviceID()
    // Offset: 0x54CD280
    static int get_graphicsDeviceID();
    // static public System.Int32 get_graphicsDeviceVendorID()
    // Offset: 0x54CD2D0
    static int get_graphicsDeviceVendorID();
    // static public UnityEngine.Rendering.GraphicsDeviceType get_graphicsDeviceType()
    // Offset: 0x54CD320
    static ::UnityEngine::Rendering::GraphicsDeviceType get_graphicsDeviceType();
    // static public System.Boolean get_graphicsUVStartsAtTop()
    // Offset: 0x54CD370
    static bool get_graphicsUVStartsAtTop();
    // static public System.String get_graphicsDeviceVersion()
    // Offset: 0x54CD3C0
    static ::StringW get_graphicsDeviceVersion();
    // static public System.Int32 get_graphicsShaderLevel()
    // Offset: 0x54CD410
    static int get_graphicsShaderLevel();
    // static public System.Boolean get_graphicsMultiThreaded()
    // Offset: 0x54CD460
    static bool get_graphicsMultiThreaded();
    // static public UnityEngine.Rendering.FoveatedRenderingCaps get_foveatedRenderingCaps()
    // Offset: 0x54CD4B0
    static ::UnityEngine::Rendering::FoveatedRenderingCaps get_foveatedRenderingCaps();
    // static public System.Boolean get_hasHiddenSurfaceRemovalOnGPU()
    // Offset: 0x54CD500
    static bool get_hasHiddenSurfaceRemovalOnGPU();
    // static public System.Boolean get_supportsShadows()
    // Offset: 0x54CD550
    static bool get_supportsShadows();
    // static public UnityEngine.Rendering.CopyTextureSupport get_copyTextureSupport()
    // Offset: 0x54CD5A0
    static ::UnityEngine::Rendering::CopyTextureSupport get_copyTextureSupport();
    // static public System.Boolean get_supportsComputeShaders()
    // Offset: 0x54CD5F0
    static bool get_supportsComputeShaders();
    // static public System.Boolean get_supportsRenderTargetArrayIndexFromVertexShader()
    // Offset: 0x54CD640
    static bool get_supportsRenderTargetArrayIndexFromVertexShader();
    // static public System.Boolean get_supportsInstancing()
    // Offset: 0x54CD690
    static bool get_supportsInstancing();
    // static public System.Int32 get_supportedRenderTargetCount()
    // Offset: 0x54CD6E0
    static int get_supportedRenderTargetCount();
    // static public System.Int32 get_supportsMultisampledTextures()
    // Offset: 0x54CD730
    static int get_supportsMultisampledTextures();
    // static public System.Boolean get_supportsMultisampleAutoResolve()
    // Offset: 0x54CD780
    static bool get_supportsMultisampleAutoResolve();
    // static public System.Boolean get_usesReversedZBuffer()
    // Offset: 0x54CD7D0
    static bool get_usesReversedZBuffer();
    // static private System.Boolean IsValidEnumValue(System.Enum value)
    // Offset: 0x54CD820
    static bool IsValidEnumValue(::System::Enum* value);
    // static public System.Boolean SupportsRenderTextureFormat(UnityEngine.RenderTextureFormat format)
    // Offset: 0x54CD898
    static bool SupportsRenderTextureFormat(::UnityEngine::RenderTextureFormat format);
    // static public System.Boolean SupportsTextureFormat(UnityEngine.TextureFormat format)
    // Offset: 0x54CD9A8
    static bool SupportsTextureFormat(::UnityEngine::TextureFormat format);
    // static public System.Int32 get_maxTextureSize()
    // Offset: 0x54CDAB8
    static int get_maxTextureSize();
    // static public System.Int32 get_maxTextureArraySlices()
    // Offset: 0x54CDB08
    static int get_maxTextureArraySlices();
    // static System.Int32 get_maxRenderTextureSize()
    // Offset: 0x54CDB58
    static int get_maxRenderTextureSize();
    // static public System.Boolean get_supportsGraphicsFence()
    // Offset: 0x54CDBA8
    static bool get_supportsGraphicsFence();
    // static public System.Int64 get_maxGraphicsBufferSize()
    // Offset: 0x54CC11C
    static int64_t get_maxGraphicsBufferSize();
    // static public System.Boolean get_usesLoadStoreActions()
    // Offset: 0x54CDC20
    static bool get_usesLoadStoreActions();
    // static public UnityEngine.HDRDisplaySupportFlags get_hdrDisplaySupportFlags()
    // Offset: 0x54CDC70
    static ::UnityEngine::HDRDisplaySupportFlags get_hdrDisplaySupportFlags();
    // static public System.Boolean get_supportsMultiview()
    // Offset: 0x54CDCC0
    static bool get_supportsMultiview();
    // static public System.Boolean get_supportsStoreAndResolveAction()
    // Offset: 0x54CDD10
    static bool get_supportsStoreAndResolveAction();
    // static public System.Boolean get_supportsMultisampleResolveDepth()
    // Offset: 0x54CDD60
    static bool get_supportsMultisampleResolveDepth();
    // static public System.Boolean get_supportsMultisampleResolveStencil()
    // Offset: 0x54CDDB0
    static bool get_supportsMultisampleResolveStencil();
    // static public System.Boolean get_supportsIndirectArgumentsBuffer()
    // Offset: 0x54CDE00
    static bool get_supportsIndirectArgumentsBuffer();
    // static private System.Single GetBatteryLevel()
    // Offset: 0x54CCCB8
    static float GetBatteryLevel();
    // static private UnityEngine.BatteryStatus GetBatteryStatus()
    // Offset: 0x54CCD08
    static ::UnityEngine::BatteryStatus GetBatteryStatus();
    // static private System.String GetOperatingSystem()
    // Offset: 0x54CCD58
    static ::StringW GetOperatingSystem();
    // static private UnityEngine.OperatingSystemFamily GetOperatingSystemFamily()
    // Offset: 0x54CCDA8
    static ::UnityEngine::OperatingSystemFamily GetOperatingSystemFamily();
    // static private System.String GetProcessorType()
    // Offset: 0x54CCDF8
    static ::StringW GetProcessorType();
    // static private System.Int32 GetProcessorFrequencyMHz()
    // Offset: 0x54CCE48
    static int GetProcessorFrequencyMHz();
    // static private System.Int32 GetProcessorCount()
    // Offset: 0x54CCE98
    static int GetProcessorCount();
    // static private System.Int32 GetPhysicalMemoryMB()
    // Offset: 0x54CCEE8
    static int GetPhysicalMemoryMB();
    // static private System.String GetDeviceUniqueIdentifier()
    // Offset: 0x54CCF38
    static ::StringW GetDeviceUniqueIdentifier();
    // static private System.String GetDeviceName()
    // Offset: 0x54CCF88
    static ::StringW GetDeviceName();
    // static private System.String GetDeviceModel()
    // Offset: 0x54CCFD8
    static ::StringW GetDeviceModel();
    // static private System.Boolean SupportsAccelerometer()
    // Offset: 0x54CD028
    static bool SupportsAccelerometer();
    // static private System.Boolean IsGyroAvailable()
    // Offset: 0x54CD078
    static bool IsGyroAvailable();
    // static private System.Boolean SupportsLocationService()
    // Offset: 0x54CD0C8
    static bool SupportsLocationService();
    // static private System.Boolean SupportsAudio()
    // Offset: 0x54CD118
    static bool SupportsAudio();
    // static private UnityEngine.DeviceType GetDeviceType()
    // Offset: 0x54CD168
    static ::UnityEngine::DeviceType GetDeviceType();
    // static private System.Int32 GetGraphicsMemorySize()
    // Offset: 0x54CD1B8
    static int GetGraphicsMemorySize();
    // static private System.String GetGraphicsDeviceName()
    // Offset: 0x54CD208
    static ::StringW GetGraphicsDeviceName();
    // static private System.String GetGraphicsDeviceVendor()
    // Offset: 0x54CD258
    static ::StringW GetGraphicsDeviceVendor();
    // static private System.Int32 GetGraphicsDeviceID()
    // Offset: 0x54CD2A8
    static int GetGraphicsDeviceID();
    // static private System.Int32 GetGraphicsDeviceVendorID()
    // Offset: 0x54CD2F8
    static int GetGraphicsDeviceVendorID();
    // static private UnityEngine.Rendering.GraphicsDeviceType GetGraphicsDeviceType()
    // Offset: 0x54CD348
    static ::UnityEngine::Rendering::GraphicsDeviceType GetGraphicsDeviceType();
    // static private System.Boolean GetGraphicsUVStartsAtTop()
    // Offset: 0x54CD398
    static bool GetGraphicsUVStartsAtTop();
    // static private System.String GetGraphicsDeviceVersion()
    // Offset: 0x54CD3E8
    static ::StringW GetGraphicsDeviceVersion();
    // static private System.Int32 GetGraphicsShaderLevel()
    // Offset: 0x54CD438
    static int GetGraphicsShaderLevel();
    // static private System.Boolean GetGraphicsMultiThreaded()
    // Offset: 0x54CD488
    static bool GetGraphicsMultiThreaded();
    // static private UnityEngine.Rendering.FoveatedRenderingCaps GetFoveatedRenderingCaps()
    // Offset: 0x54CD4D8
    static ::UnityEngine::Rendering::FoveatedRenderingCaps GetFoveatedRenderingCaps();
    // static private System.Boolean HasHiddenSurfaceRemovalOnGPU()
    // Offset: 0x54CD528
    static bool HasHiddenSurfaceRemovalOnGPU();
    // static private System.Boolean SupportsShadows()
    // Offset: 0x54CD578
    static bool SupportsShadows();
    // static private UnityEngine.Rendering.CopyTextureSupport GetCopyTextureSupport()
    // Offset: 0x54CD5C8
    static ::UnityEngine::Rendering::CopyTextureSupport GetCopyTextureSupport();
    // static private System.Boolean SupportsComputeShaders()
    // Offset: 0x54CD618
    static bool SupportsComputeShaders();
    // static private System.Boolean SupportsRenderTargetArrayIndexFromVertexShader()
    // Offset: 0x54CD668
    static bool SupportsRenderTargetArrayIndexFromVertexShader();
    // static private System.Boolean SupportsInstancing()
    // Offset: 0x54CD6B8
    static bool SupportsInstancing();
    // static private System.Int32 SupportedRenderTargetCount()
    // Offset: 0x54CD708
    static int SupportedRenderTargetCount();
    // static private System.Int32 SupportsMultisampledTextures()
    // Offset: 0x54CD758
    static int SupportsMultisampledTextures();
    // static private System.Boolean SupportsMultisampleAutoResolve()
    // Offset: 0x54CD7A8
    static bool SupportsMultisampleAutoResolve();
    // static private System.Boolean UsesReversedZBuffer()
    // Offset: 0x54CD7F8
    static bool UsesReversedZBuffer();
    // static private System.Boolean HasRenderTextureNative(UnityEngine.RenderTextureFormat format)
    // Offset: 0x54CD96C
    static bool HasRenderTextureNative(::UnityEngine::RenderTextureFormat format);
    // static private System.Boolean SupportsTextureFormatNative(UnityEngine.TextureFormat format)
    // Offset: 0x54CDA7C
    static bool SupportsTextureFormatNative(::UnityEngine::TextureFormat format);
    // static private System.Int32 GetMaxTextureSize()
    // Offset: 0x54CDAE0
    static int GetMaxTextureSize();
    // static private System.Int32 GetMaxTextureArraySlices()
    // Offset: 0x54CDB30
    static int GetMaxTextureArraySlices();
    // static private System.Int32 GetMaxRenderTextureSize()
    // Offset: 0x54CDB80
    static int GetMaxRenderTextureSize();
    // static private System.Boolean SupportsGPUFence()
    // Offset: 0x54CDBD0
    static bool SupportsGPUFence();
    // static private System.Int64 MaxGraphicsBufferSize()
    // Offset: 0x54CDBF8
    static int64_t MaxGraphicsBufferSize();
    // static public System.Boolean IsFormatSupported(UnityEngine.Experimental.Rendering.GraphicsFormat format, UnityEngine.Experimental.Rendering.FormatUsage usage)
    // Offset: 0x54CDE50
    static bool IsFormatSupported(::UnityEngine::Experimental::Rendering::GraphicsFormat format, ::UnityEngine::Experimental::Rendering::FormatUsage usage);
    // static public UnityEngine.Experimental.Rendering.GraphicsFormat GetCompatibleFormat(UnityEngine.Experimental.Rendering.GraphicsFormat format, UnityEngine.Experimental.Rendering.FormatUsage usage)
    // Offset: 0x54CDE94
    static ::UnityEngine::Experimental::Rendering::GraphicsFormat GetCompatibleFormat(::UnityEngine::Experimental::Rendering::GraphicsFormat format, ::UnityEngine::Experimental::Rendering::FormatUsage usage);
    // static public UnityEngine.Experimental.Rendering.GraphicsFormat GetGraphicsFormat(UnityEngine.Experimental.Rendering.DefaultFormat format)
    // Offset: 0x54CDED8
    static ::UnityEngine::Experimental::Rendering::GraphicsFormat GetGraphicsFormat(::UnityEngine::Experimental::Rendering::DefaultFormat format);
    // static public System.Int32 GetRenderTextureSupportedMSAASampleCount(UnityEngine.RenderTextureDescriptor desc)
    // Offset: 0x54CDF14
    static int GetRenderTextureSupportedMSAASampleCount(::UnityEngine::RenderTextureDescriptor desc);
    // static private System.Boolean UsesLoadStoreActions()
    // Offset: 0x54CDC48
    static bool UsesLoadStoreActions();
    // static private UnityEngine.HDRDisplaySupportFlags GetHDRDisplaySupportFlags()
    // Offset: 0x54CDC98
    static ::UnityEngine::HDRDisplaySupportFlags GetHDRDisplaySupportFlags();
    // static private System.Boolean SupportsMultiview()
    // Offset: 0x54CDCE8
    static bool SupportsMultiview();
    // static private System.Boolean SupportsStoreAndResolveAction()
    // Offset: 0x54CDD38
    static bool SupportsStoreAndResolveAction();
    // static private System.Boolean SupportsMultisampleResolveDepth()
    // Offset: 0x54CDD88
    static bool SupportsMultisampleResolveDepth();
    // static private System.Boolean SupportsMultisampleResolveStencil()
    // Offset: 0x54CDDD8
    static bool SupportsMultisampleResolveStencil();
    // static private System.Boolean SupportsIndirectArgumentsBuffer()
    // Offset: 0x54CDE28
    static bool SupportsIndirectArgumentsBuffer();
    // static private System.Int32 GetRenderTextureSupportedMSAASampleCount_Injected(ref UnityEngine.RenderTextureDescriptor desc)
    // Offset: 0x54CDF50
    static int GetRenderTextureSupportedMSAASampleCount_Injected(ByRef<::UnityEngine::RenderTextureDescriptor> desc);
  }; // UnityEngine.SystemInfo
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::SystemInfo::get_batteryLevel
// Il2CppName: get_batteryLevel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (*)()>(&UnityEngine::SystemInfo::get_batteryLevel)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::SystemInfo*), "get_batteryLevel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::SystemInfo::get_batteryStatus
// Il2CppName: get_batteryStatus
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::BatteryStatus (*)()>(&UnityEngine::SystemInfo::get_batteryStatus)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::SystemInfo*), "get_batteryStatus", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::SystemInfo::get_operatingSystem
// Il2CppName: get_operatingSystem
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)()>(&UnityEngine::SystemInfo::get_operatingSystem)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::SystemInfo*), "get_operatingSystem", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::SystemInfo::get_operatingSystemFamily
// Il2CppName: get_operatingSystemFamily
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::OperatingSystemFamily (*)()>(&UnityEngine::SystemInfo::get_operatingSystemFamily)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::SystemInfo*), "get_operatingSystemFamily", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::SystemInfo::get_processorType
// Il2CppName: get_processorType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)()>(&UnityEngine::SystemInfo::get_processorType)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::SystemInfo*), "get_processorType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::SystemInfo::get_processorFrequency
// Il2CppName: get_processorFrequency
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)()>(&UnityEngine::SystemInfo::get_processorFrequency)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::SystemInfo*), "get_processorFrequency", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::SystemInfo::get_processorCount
// Il2CppName: get_processorCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)()>(&UnityEngine::SystemInfo::get_processorCount)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::SystemInfo*), "get_processorCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::SystemInfo::get_systemMemorySize
// Il2CppName: get_systemMemorySize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)()>(&UnityEngine::SystemInfo::get_systemMemorySize)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::SystemInfo*), "get_systemMemorySize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::SystemInfo::get_deviceUniqueIdentifier
// Il2CppName: get_deviceUniqueIdentifier
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)()>(&UnityEngine::SystemInfo::get_deviceUniqueIdentifier)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::SystemInfo*), "get_deviceUniqueIdentifier", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::SystemInfo::get_deviceName
// Il2CppName: get_deviceName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)()>(&UnityEngine::SystemInfo::get_deviceName)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::SystemInfo*), "get_deviceName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::SystemInfo::get_deviceModel
// Il2CppName: get_deviceModel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)()>(&UnityEngine::SystemInfo::get_deviceModel)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::SystemInfo*), "get_deviceModel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::SystemInfo::get_supportsAccelerometer
// Il2CppName: get_supportsAccelerometer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&UnityEngine::SystemInfo::get_supportsAccelerometer)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::SystemInfo*), "get_supportsAccelerometer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::SystemInfo::get_supportsGyroscope
// Il2CppName: get_supportsGyroscope
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&UnityEngine::SystemInfo::get_supportsGyroscope)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::SystemInfo*), "get_supportsGyroscope", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::SystemInfo::get_supportsLocationService
// Il2CppName: get_supportsLocationService
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&UnityEngine::SystemInfo::get_supportsLocationService)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::SystemInfo*), "get_supportsLocationService", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::SystemInfo::get_supportsAudio
// Il2CppName: get_supportsAudio
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&UnityEngine::SystemInfo::get_supportsAudio)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::SystemInfo*), "get_supportsAudio", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::SystemInfo::get_deviceType
// Il2CppName: get_deviceType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::DeviceType (*)()>(&UnityEngine::SystemInfo::get_deviceType)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::SystemInfo*), "get_deviceType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::SystemInfo::get_graphicsMemorySize
// Il2CppName: get_graphicsMemorySize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)()>(&UnityEngine::SystemInfo::get_graphicsMemorySize)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::SystemInfo*), "get_graphicsMemorySize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::SystemInfo::get_graphicsDeviceName
// Il2CppName: get_graphicsDeviceName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)()>(&UnityEngine::SystemInfo::get_graphicsDeviceName)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::SystemInfo*), "get_graphicsDeviceName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::SystemInfo::get_graphicsDeviceVendor
// Il2CppName: get_graphicsDeviceVendor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)()>(&UnityEngine::SystemInfo::get_graphicsDeviceVendor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::SystemInfo*), "get_graphicsDeviceVendor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::SystemInfo::get_graphicsDeviceID
// Il2CppName: get_graphicsDeviceID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)()>(&UnityEngine::SystemInfo::get_graphicsDeviceID)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::SystemInfo*), "get_graphicsDeviceID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::SystemInfo::get_graphicsDeviceVendorID
// Il2CppName: get_graphicsDeviceVendorID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)()>(&UnityEngine::SystemInfo::get_graphicsDeviceVendorID)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::SystemInfo*), "get_graphicsDeviceVendorID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::SystemInfo::get_graphicsDeviceType
// Il2CppName: get_graphicsDeviceType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Rendering::GraphicsDeviceType (*)()>(&UnityEngine::SystemInfo::get_graphicsDeviceType)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::SystemInfo*), "get_graphicsDeviceType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::SystemInfo::get_graphicsUVStartsAtTop
// Il2CppName: get_graphicsUVStartsAtTop
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&UnityEngine::SystemInfo::get_graphicsUVStartsAtTop)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::SystemInfo*), "get_graphicsUVStartsAtTop", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::SystemInfo::get_graphicsDeviceVersion
// Il2CppName: get_graphicsDeviceVersion
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)()>(&UnityEngine::SystemInfo::get_graphicsDeviceVersion)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::SystemInfo*), "get_graphicsDeviceVersion", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::SystemInfo::get_graphicsShaderLevel
// Il2CppName: get_graphicsShaderLevel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)()>(&UnityEngine::SystemInfo::get_graphicsShaderLevel)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::SystemInfo*), "get_graphicsShaderLevel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::SystemInfo::get_graphicsMultiThreaded
// Il2CppName: get_graphicsMultiThreaded
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&UnityEngine::SystemInfo::get_graphicsMultiThreaded)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::SystemInfo*), "get_graphicsMultiThreaded", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::SystemInfo::get_foveatedRenderingCaps
// Il2CppName: get_foveatedRenderingCaps
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Rendering::FoveatedRenderingCaps (*)()>(&UnityEngine::SystemInfo::get_foveatedRenderingCaps)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::SystemInfo*), "get_foveatedRenderingCaps", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::SystemInfo::get_hasHiddenSurfaceRemovalOnGPU
// Il2CppName: get_hasHiddenSurfaceRemovalOnGPU
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&UnityEngine::SystemInfo::get_hasHiddenSurfaceRemovalOnGPU)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::SystemInfo*), "get_hasHiddenSurfaceRemovalOnGPU", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::SystemInfo::get_supportsShadows
// Il2CppName: get_supportsShadows
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&UnityEngine::SystemInfo::get_supportsShadows)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::SystemInfo*), "get_supportsShadows", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::SystemInfo::get_copyTextureSupport
// Il2CppName: get_copyTextureSupport
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Rendering::CopyTextureSupport (*)()>(&UnityEngine::SystemInfo::get_copyTextureSupport)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::SystemInfo*), "get_copyTextureSupport", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::SystemInfo::get_supportsComputeShaders
// Il2CppName: get_supportsComputeShaders
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&UnityEngine::SystemInfo::get_supportsComputeShaders)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::SystemInfo*), "get_supportsComputeShaders", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::SystemInfo::get_supportsRenderTargetArrayIndexFromVertexShader
// Il2CppName: get_supportsRenderTargetArrayIndexFromVertexShader
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&UnityEngine::SystemInfo::get_supportsRenderTargetArrayIndexFromVertexShader)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::SystemInfo*), "get_supportsRenderTargetArrayIndexFromVertexShader", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::SystemInfo::get_supportsInstancing
// Il2CppName: get_supportsInstancing
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&UnityEngine::SystemInfo::get_supportsInstancing)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::SystemInfo*), "get_supportsInstancing", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::SystemInfo::get_supportedRenderTargetCount
// Il2CppName: get_supportedRenderTargetCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)()>(&UnityEngine::SystemInfo::get_supportedRenderTargetCount)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::SystemInfo*), "get_supportedRenderTargetCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::SystemInfo::get_supportsMultisampledTextures
// Il2CppName: get_supportsMultisampledTextures
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)()>(&UnityEngine::SystemInfo::get_supportsMultisampledTextures)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::SystemInfo*), "get_supportsMultisampledTextures", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::SystemInfo::get_supportsMultisampleAutoResolve
// Il2CppName: get_supportsMultisampleAutoResolve
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&UnityEngine::SystemInfo::get_supportsMultisampleAutoResolve)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::SystemInfo*), "get_supportsMultisampleAutoResolve", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::SystemInfo::get_usesReversedZBuffer
// Il2CppName: get_usesReversedZBuffer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&UnityEngine::SystemInfo::get_usesReversedZBuffer)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::SystemInfo*), "get_usesReversedZBuffer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::SystemInfo::IsValidEnumValue
// Il2CppName: IsValidEnumValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::System::Enum*)>(&UnityEngine::SystemInfo::IsValidEnumValue)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Enum")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::SystemInfo*), "IsValidEnumValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::SystemInfo::SupportsRenderTextureFormat
// Il2CppName: SupportsRenderTextureFormat
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::UnityEngine::RenderTextureFormat)>(&UnityEngine::SystemInfo::SupportsRenderTextureFormat)> {
  static const MethodInfo* get() {
    static auto* format = &::il2cpp_utils::GetClassFromName("UnityEngine", "RenderTextureFormat")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::SystemInfo*), "SupportsRenderTextureFormat", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{format});
  }
};
// Writing MetadataGetter for method: UnityEngine::SystemInfo::SupportsTextureFormat
// Il2CppName: SupportsTextureFormat
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::UnityEngine::TextureFormat)>(&UnityEngine::SystemInfo::SupportsTextureFormat)> {
  static const MethodInfo* get() {
    static auto* format = &::il2cpp_utils::GetClassFromName("UnityEngine", "TextureFormat")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::SystemInfo*), "SupportsTextureFormat", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{format});
  }
};
// Writing MetadataGetter for method: UnityEngine::SystemInfo::get_maxTextureSize
// Il2CppName: get_maxTextureSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)()>(&UnityEngine::SystemInfo::get_maxTextureSize)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::SystemInfo*), "get_maxTextureSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::SystemInfo::get_maxTextureArraySlices
// Il2CppName: get_maxTextureArraySlices
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)()>(&UnityEngine::SystemInfo::get_maxTextureArraySlices)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::SystemInfo*), "get_maxTextureArraySlices", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::SystemInfo::get_maxRenderTextureSize
// Il2CppName: get_maxRenderTextureSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)()>(&UnityEngine::SystemInfo::get_maxRenderTextureSize)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::SystemInfo*), "get_maxRenderTextureSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::SystemInfo::get_supportsGraphicsFence
// Il2CppName: get_supportsGraphicsFence
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&UnityEngine::SystemInfo::get_supportsGraphicsFence)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::SystemInfo*), "get_supportsGraphicsFence", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::SystemInfo::get_maxGraphicsBufferSize
// Il2CppName: get_maxGraphicsBufferSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int64_t (*)()>(&UnityEngine::SystemInfo::get_maxGraphicsBufferSize)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::SystemInfo*), "get_maxGraphicsBufferSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::SystemInfo::get_usesLoadStoreActions
// Il2CppName: get_usesLoadStoreActions
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&UnityEngine::SystemInfo::get_usesLoadStoreActions)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::SystemInfo*), "get_usesLoadStoreActions", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::SystemInfo::get_hdrDisplaySupportFlags
// Il2CppName: get_hdrDisplaySupportFlags
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::HDRDisplaySupportFlags (*)()>(&UnityEngine::SystemInfo::get_hdrDisplaySupportFlags)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::SystemInfo*), "get_hdrDisplaySupportFlags", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::SystemInfo::get_supportsMultiview
// Il2CppName: get_supportsMultiview
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&UnityEngine::SystemInfo::get_supportsMultiview)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::SystemInfo*), "get_supportsMultiview", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::SystemInfo::get_supportsStoreAndResolveAction
// Il2CppName: get_supportsStoreAndResolveAction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&UnityEngine::SystemInfo::get_supportsStoreAndResolveAction)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::SystemInfo*), "get_supportsStoreAndResolveAction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::SystemInfo::get_supportsMultisampleResolveDepth
// Il2CppName: get_supportsMultisampleResolveDepth
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&UnityEngine::SystemInfo::get_supportsMultisampleResolveDepth)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::SystemInfo*), "get_supportsMultisampleResolveDepth", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::SystemInfo::get_supportsMultisampleResolveStencil
// Il2CppName: get_supportsMultisampleResolveStencil
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&UnityEngine::SystemInfo::get_supportsMultisampleResolveStencil)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::SystemInfo*), "get_supportsMultisampleResolveStencil", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::SystemInfo::get_supportsIndirectArgumentsBuffer
// Il2CppName: get_supportsIndirectArgumentsBuffer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&UnityEngine::SystemInfo::get_supportsIndirectArgumentsBuffer)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::SystemInfo*), "get_supportsIndirectArgumentsBuffer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::SystemInfo::GetBatteryLevel
// Il2CppName: GetBatteryLevel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (*)()>(&UnityEngine::SystemInfo::GetBatteryLevel)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::SystemInfo*), "GetBatteryLevel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::SystemInfo::GetBatteryStatus
// Il2CppName: GetBatteryStatus
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::BatteryStatus (*)()>(&UnityEngine::SystemInfo::GetBatteryStatus)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::SystemInfo*), "GetBatteryStatus", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::SystemInfo::GetOperatingSystem
// Il2CppName: GetOperatingSystem
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)()>(&UnityEngine::SystemInfo::GetOperatingSystem)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::SystemInfo*), "GetOperatingSystem", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::SystemInfo::GetOperatingSystemFamily
// Il2CppName: GetOperatingSystemFamily
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::OperatingSystemFamily (*)()>(&UnityEngine::SystemInfo::GetOperatingSystemFamily)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::SystemInfo*), "GetOperatingSystemFamily", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::SystemInfo::GetProcessorType
// Il2CppName: GetProcessorType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)()>(&UnityEngine::SystemInfo::GetProcessorType)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::SystemInfo*), "GetProcessorType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::SystemInfo::GetProcessorFrequencyMHz
// Il2CppName: GetProcessorFrequencyMHz
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)()>(&UnityEngine::SystemInfo::GetProcessorFrequencyMHz)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::SystemInfo*), "GetProcessorFrequencyMHz", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::SystemInfo::GetProcessorCount
// Il2CppName: GetProcessorCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)()>(&UnityEngine::SystemInfo::GetProcessorCount)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::SystemInfo*), "GetProcessorCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::SystemInfo::GetPhysicalMemoryMB
// Il2CppName: GetPhysicalMemoryMB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)()>(&UnityEngine::SystemInfo::GetPhysicalMemoryMB)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::SystemInfo*), "GetPhysicalMemoryMB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::SystemInfo::GetDeviceUniqueIdentifier
// Il2CppName: GetDeviceUniqueIdentifier
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)()>(&UnityEngine::SystemInfo::GetDeviceUniqueIdentifier)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::SystemInfo*), "GetDeviceUniqueIdentifier", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::SystemInfo::GetDeviceName
// Il2CppName: GetDeviceName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)()>(&UnityEngine::SystemInfo::GetDeviceName)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::SystemInfo*), "GetDeviceName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::SystemInfo::GetDeviceModel
// Il2CppName: GetDeviceModel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)()>(&UnityEngine::SystemInfo::GetDeviceModel)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::SystemInfo*), "GetDeviceModel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::SystemInfo::SupportsAccelerometer
// Il2CppName: SupportsAccelerometer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&UnityEngine::SystemInfo::SupportsAccelerometer)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::SystemInfo*), "SupportsAccelerometer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::SystemInfo::IsGyroAvailable
// Il2CppName: IsGyroAvailable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&UnityEngine::SystemInfo::IsGyroAvailable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::SystemInfo*), "IsGyroAvailable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::SystemInfo::SupportsLocationService
// Il2CppName: SupportsLocationService
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&UnityEngine::SystemInfo::SupportsLocationService)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::SystemInfo*), "SupportsLocationService", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::SystemInfo::SupportsAudio
// Il2CppName: SupportsAudio
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&UnityEngine::SystemInfo::SupportsAudio)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::SystemInfo*), "SupportsAudio", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::SystemInfo::GetDeviceType
// Il2CppName: GetDeviceType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::DeviceType (*)()>(&UnityEngine::SystemInfo::GetDeviceType)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::SystemInfo*), "GetDeviceType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::SystemInfo::GetGraphicsMemorySize
// Il2CppName: GetGraphicsMemorySize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)()>(&UnityEngine::SystemInfo::GetGraphicsMemorySize)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::SystemInfo*), "GetGraphicsMemorySize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::SystemInfo::GetGraphicsDeviceName
// Il2CppName: GetGraphicsDeviceName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)()>(&UnityEngine::SystemInfo::GetGraphicsDeviceName)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::SystemInfo*), "GetGraphicsDeviceName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::SystemInfo::GetGraphicsDeviceVendor
// Il2CppName: GetGraphicsDeviceVendor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)()>(&UnityEngine::SystemInfo::GetGraphicsDeviceVendor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::SystemInfo*), "GetGraphicsDeviceVendor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::SystemInfo::GetGraphicsDeviceID
// Il2CppName: GetGraphicsDeviceID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)()>(&UnityEngine::SystemInfo::GetGraphicsDeviceID)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::SystemInfo*), "GetGraphicsDeviceID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::SystemInfo::GetGraphicsDeviceVendorID
// Il2CppName: GetGraphicsDeviceVendorID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)()>(&UnityEngine::SystemInfo::GetGraphicsDeviceVendorID)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::SystemInfo*), "GetGraphicsDeviceVendorID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::SystemInfo::GetGraphicsDeviceType
// Il2CppName: GetGraphicsDeviceType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Rendering::GraphicsDeviceType (*)()>(&UnityEngine::SystemInfo::GetGraphicsDeviceType)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::SystemInfo*), "GetGraphicsDeviceType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::SystemInfo::GetGraphicsUVStartsAtTop
// Il2CppName: GetGraphicsUVStartsAtTop
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&UnityEngine::SystemInfo::GetGraphicsUVStartsAtTop)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::SystemInfo*), "GetGraphicsUVStartsAtTop", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::SystemInfo::GetGraphicsDeviceVersion
// Il2CppName: GetGraphicsDeviceVersion
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)()>(&UnityEngine::SystemInfo::GetGraphicsDeviceVersion)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::SystemInfo*), "GetGraphicsDeviceVersion", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::SystemInfo::GetGraphicsShaderLevel
// Il2CppName: GetGraphicsShaderLevel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)()>(&UnityEngine::SystemInfo::GetGraphicsShaderLevel)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::SystemInfo*), "GetGraphicsShaderLevel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::SystemInfo::GetGraphicsMultiThreaded
// Il2CppName: GetGraphicsMultiThreaded
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&UnityEngine::SystemInfo::GetGraphicsMultiThreaded)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::SystemInfo*), "GetGraphicsMultiThreaded", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::SystemInfo::GetFoveatedRenderingCaps
// Il2CppName: GetFoveatedRenderingCaps
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Rendering::FoveatedRenderingCaps (*)()>(&UnityEngine::SystemInfo::GetFoveatedRenderingCaps)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::SystemInfo*), "GetFoveatedRenderingCaps", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::SystemInfo::HasHiddenSurfaceRemovalOnGPU
// Il2CppName: HasHiddenSurfaceRemovalOnGPU
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&UnityEngine::SystemInfo::HasHiddenSurfaceRemovalOnGPU)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::SystemInfo*), "HasHiddenSurfaceRemovalOnGPU", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::SystemInfo::SupportsShadows
// Il2CppName: SupportsShadows
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&UnityEngine::SystemInfo::SupportsShadows)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::SystemInfo*), "SupportsShadows", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::SystemInfo::GetCopyTextureSupport
// Il2CppName: GetCopyTextureSupport
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Rendering::CopyTextureSupport (*)()>(&UnityEngine::SystemInfo::GetCopyTextureSupport)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::SystemInfo*), "GetCopyTextureSupport", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::SystemInfo::SupportsComputeShaders
// Il2CppName: SupportsComputeShaders
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&UnityEngine::SystemInfo::SupportsComputeShaders)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::SystemInfo*), "SupportsComputeShaders", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::SystemInfo::SupportsRenderTargetArrayIndexFromVertexShader
// Il2CppName: SupportsRenderTargetArrayIndexFromVertexShader
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&UnityEngine::SystemInfo::SupportsRenderTargetArrayIndexFromVertexShader)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::SystemInfo*), "SupportsRenderTargetArrayIndexFromVertexShader", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::SystemInfo::SupportsInstancing
// Il2CppName: SupportsInstancing
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&UnityEngine::SystemInfo::SupportsInstancing)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::SystemInfo*), "SupportsInstancing", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::SystemInfo::SupportedRenderTargetCount
// Il2CppName: SupportedRenderTargetCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)()>(&UnityEngine::SystemInfo::SupportedRenderTargetCount)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::SystemInfo*), "SupportedRenderTargetCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::SystemInfo::SupportsMultisampledTextures
// Il2CppName: SupportsMultisampledTextures
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)()>(&UnityEngine::SystemInfo::SupportsMultisampledTextures)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::SystemInfo*), "SupportsMultisampledTextures", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::SystemInfo::SupportsMultisampleAutoResolve
// Il2CppName: SupportsMultisampleAutoResolve
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&UnityEngine::SystemInfo::SupportsMultisampleAutoResolve)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::SystemInfo*), "SupportsMultisampleAutoResolve", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::SystemInfo::UsesReversedZBuffer
// Il2CppName: UsesReversedZBuffer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&UnityEngine::SystemInfo::UsesReversedZBuffer)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::SystemInfo*), "UsesReversedZBuffer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::SystemInfo::HasRenderTextureNative
// Il2CppName: HasRenderTextureNative
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::UnityEngine::RenderTextureFormat)>(&UnityEngine::SystemInfo::HasRenderTextureNative)> {
  static const MethodInfo* get() {
    static auto* format = &::il2cpp_utils::GetClassFromName("UnityEngine", "RenderTextureFormat")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::SystemInfo*), "HasRenderTextureNative", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{format});
  }
};
// Writing MetadataGetter for method: UnityEngine::SystemInfo::SupportsTextureFormatNative
// Il2CppName: SupportsTextureFormatNative
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::UnityEngine::TextureFormat)>(&UnityEngine::SystemInfo::SupportsTextureFormatNative)> {
  static const MethodInfo* get() {
    static auto* format = &::il2cpp_utils::GetClassFromName("UnityEngine", "TextureFormat")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::SystemInfo*), "SupportsTextureFormatNative", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{format});
  }
};
// Writing MetadataGetter for method: UnityEngine::SystemInfo::GetMaxTextureSize
// Il2CppName: GetMaxTextureSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)()>(&UnityEngine::SystemInfo::GetMaxTextureSize)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::SystemInfo*), "GetMaxTextureSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::SystemInfo::GetMaxTextureArraySlices
// Il2CppName: GetMaxTextureArraySlices
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)()>(&UnityEngine::SystemInfo::GetMaxTextureArraySlices)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::SystemInfo*), "GetMaxTextureArraySlices", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::SystemInfo::GetMaxRenderTextureSize
// Il2CppName: GetMaxRenderTextureSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)()>(&UnityEngine::SystemInfo::GetMaxRenderTextureSize)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::SystemInfo*), "GetMaxRenderTextureSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::SystemInfo::SupportsGPUFence
// Il2CppName: SupportsGPUFence
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&UnityEngine::SystemInfo::SupportsGPUFence)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::SystemInfo*), "SupportsGPUFence", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::SystemInfo::MaxGraphicsBufferSize
// Il2CppName: MaxGraphicsBufferSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int64_t (*)()>(&UnityEngine::SystemInfo::MaxGraphicsBufferSize)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::SystemInfo*), "MaxGraphicsBufferSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::SystemInfo::IsFormatSupported
// Il2CppName: IsFormatSupported
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::UnityEngine::Experimental::Rendering::GraphicsFormat, ::UnityEngine::Experimental::Rendering::FormatUsage)>(&UnityEngine::SystemInfo::IsFormatSupported)> {
  static const MethodInfo* get() {
    static auto* format = &::il2cpp_utils::GetClassFromName("UnityEngine.Experimental.Rendering", "GraphicsFormat")->byval_arg;
    static auto* usage = &::il2cpp_utils::GetClassFromName("UnityEngine.Experimental.Rendering", "FormatUsage")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::SystemInfo*), "IsFormatSupported", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{format, usage});
  }
};
// Writing MetadataGetter for method: UnityEngine::SystemInfo::GetCompatibleFormat
// Il2CppName: GetCompatibleFormat
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Experimental::Rendering::GraphicsFormat (*)(::UnityEngine::Experimental::Rendering::GraphicsFormat, ::UnityEngine::Experimental::Rendering::FormatUsage)>(&UnityEngine::SystemInfo::GetCompatibleFormat)> {
  static const MethodInfo* get() {
    static auto* format = &::il2cpp_utils::GetClassFromName("UnityEngine.Experimental.Rendering", "GraphicsFormat")->byval_arg;
    static auto* usage = &::il2cpp_utils::GetClassFromName("UnityEngine.Experimental.Rendering", "FormatUsage")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::SystemInfo*), "GetCompatibleFormat", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{format, usage});
  }
};
// Writing MetadataGetter for method: UnityEngine::SystemInfo::GetGraphicsFormat
// Il2CppName: GetGraphicsFormat
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Experimental::Rendering::GraphicsFormat (*)(::UnityEngine::Experimental::Rendering::DefaultFormat)>(&UnityEngine::SystemInfo::GetGraphicsFormat)> {
  static const MethodInfo* get() {
    static auto* format = &::il2cpp_utils::GetClassFromName("UnityEngine.Experimental.Rendering", "DefaultFormat")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::SystemInfo*), "GetGraphicsFormat", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{format});
  }
};
// Writing MetadataGetter for method: UnityEngine::SystemInfo::GetRenderTextureSupportedMSAASampleCount
// Il2CppName: GetRenderTextureSupportedMSAASampleCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::UnityEngine::RenderTextureDescriptor)>(&UnityEngine::SystemInfo::GetRenderTextureSupportedMSAASampleCount)> {
  static const MethodInfo* get() {
    static auto* desc = &::il2cpp_utils::GetClassFromName("UnityEngine", "RenderTextureDescriptor")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::SystemInfo*), "GetRenderTextureSupportedMSAASampleCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{desc});
  }
};
// Writing MetadataGetter for method: UnityEngine::SystemInfo::UsesLoadStoreActions
// Il2CppName: UsesLoadStoreActions
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&UnityEngine::SystemInfo::UsesLoadStoreActions)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::SystemInfo*), "UsesLoadStoreActions", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::SystemInfo::GetHDRDisplaySupportFlags
// Il2CppName: GetHDRDisplaySupportFlags
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::HDRDisplaySupportFlags (*)()>(&UnityEngine::SystemInfo::GetHDRDisplaySupportFlags)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::SystemInfo*), "GetHDRDisplaySupportFlags", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::SystemInfo::SupportsMultiview
// Il2CppName: SupportsMultiview
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&UnityEngine::SystemInfo::SupportsMultiview)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::SystemInfo*), "SupportsMultiview", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::SystemInfo::SupportsStoreAndResolveAction
// Il2CppName: SupportsStoreAndResolveAction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&UnityEngine::SystemInfo::SupportsStoreAndResolveAction)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::SystemInfo*), "SupportsStoreAndResolveAction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::SystemInfo::SupportsMultisampleResolveDepth
// Il2CppName: SupportsMultisampleResolveDepth
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&UnityEngine::SystemInfo::SupportsMultisampleResolveDepth)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::SystemInfo*), "SupportsMultisampleResolveDepth", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::SystemInfo::SupportsMultisampleResolveStencil
// Il2CppName: SupportsMultisampleResolveStencil
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&UnityEngine::SystemInfo::SupportsMultisampleResolveStencil)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::SystemInfo*), "SupportsMultisampleResolveStencil", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::SystemInfo::SupportsIndirectArgumentsBuffer
// Il2CppName: SupportsIndirectArgumentsBuffer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&UnityEngine::SystemInfo::SupportsIndirectArgumentsBuffer)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::SystemInfo*), "SupportsIndirectArgumentsBuffer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::SystemInfo::GetRenderTextureSupportedMSAASampleCount_Injected
// Il2CppName: GetRenderTextureSupportedMSAASampleCount_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(ByRef<::UnityEngine::RenderTextureDescriptor>)>(&UnityEngine::SystemInfo::GetRenderTextureSupportedMSAASampleCount_Injected)> {
  static const MethodInfo* get() {
    static auto* desc = &::il2cpp_utils::GetClassFromName("UnityEngine", "RenderTextureDescriptor")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::SystemInfo*), "GetRenderTextureSupportedMSAASampleCount_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{desc});
  }
};
