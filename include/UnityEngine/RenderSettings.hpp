// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::Rendering
namespace UnityEngine::Rendering {
  // Forward declaring type: AmbientMode
  struct AmbientMode;
  // Forward declaring type: SphericalHarmonicsL2
  struct SphericalHarmonicsL2;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Color
  struct Color;
  // Forward declaring type: Material
  class Material;
  // Forward declaring type: Light
  class Light;
}
// Completed forward declares
// Type namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: RenderSettings
  class RenderSettings;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::RenderSettings);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::RenderSettings*, "UnityEngine", "RenderSettings");
// Type namespace: UnityEngine
namespace UnityEngine {
  // Size: 0x18
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.RenderSettings
  // [TokenAttribute] Offset: FFFFFFFF
  // [NativeHeaderAttribute] Offset: FFFFFFFF
  // [StaticAccessorAttribute] Offset: FFFFFFFF
  // [NativeHeaderAttribute] Offset: FFFFFFFF
  class RenderSettings : public ::UnityEngine::Object {
    public:
    // static public System.Boolean get_fog()
    // Offset: 0x5492F7C
    static bool get_fog();
    // static public UnityEngine.Rendering.AmbientMode get_ambientMode()
    // Offset: 0x5492FA4
    static ::UnityEngine::Rendering::AmbientMode get_ambientMode();
    // static public UnityEngine.Color get_ambientSkyColor()
    // Offset: 0x5492FCC
    static ::UnityEngine::Color get_ambientSkyColor();
    // static public UnityEngine.Color get_ambientEquatorColor()
    // Offset: 0x5493050
    static ::UnityEngine::Color get_ambientEquatorColor();
    // static public UnityEngine.Color get_ambientGroundColor()
    // Offset: 0x54930D4
    static ::UnityEngine::Color get_ambientGroundColor();
    // static public UnityEngine.Color get_subtractiveShadowColor()
    // Offset: 0x5493158
    static ::UnityEngine::Color get_subtractiveShadowColor();
    // static public UnityEngine.Material get_skybox()
    // Offset: 0x54931DC
    static ::UnityEngine::Material* get_skybox();
    // static public System.Void set_skybox(UnityEngine.Material value)
    // Offset: 0x5493204
    static void set_skybox(::UnityEngine::Material* value);
    // static public UnityEngine.Light get_sun()
    // Offset: 0x5493240
    static ::UnityEngine::Light* get_sun();
    // static public UnityEngine.Rendering.SphericalHarmonicsL2 get_ambientProbe()
    // Offset: 0x5493268
    static ::UnityEngine::Rendering::SphericalHarmonicsL2 get_ambientProbe();
    // static public System.Single get_reflectionIntensity()
    // Offset: 0x5493310
    static float get_reflectionIntensity();
    // static private System.Void get_ambientSkyColor_Injected(out UnityEngine.Color ret)
    // Offset: 0x5493014
    static void get_ambientSkyColor_Injected(ByRef<::UnityEngine::Color> ret);
    // static private System.Void get_ambientEquatorColor_Injected(out UnityEngine.Color ret)
    // Offset: 0x5493098
    static void get_ambientEquatorColor_Injected(ByRef<::UnityEngine::Color> ret);
    // static private System.Void get_ambientGroundColor_Injected(out UnityEngine.Color ret)
    // Offset: 0x549311C
    static void get_ambientGroundColor_Injected(ByRef<::UnityEngine::Color> ret);
    // static private System.Void get_subtractiveShadowColor_Injected(out UnityEngine.Color ret)
    // Offset: 0x54931A0
    static void get_subtractiveShadowColor_Injected(ByRef<::UnityEngine::Color> ret);
    // static private System.Void get_ambientProbe_Injected(out UnityEngine.Rendering.SphericalHarmonicsL2 ret)
    // Offset: 0x54932D4
    static void get_ambientProbe_Injected(ByRef<::UnityEngine::Rendering::SphericalHarmonicsL2> ret);
  }; // UnityEngine.RenderSettings
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::RenderSettings::get_fog
// Il2CppName: get_fog
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&UnityEngine::RenderSettings::get_fog)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::RenderSettings*), "get_fog", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::RenderSettings::get_ambientMode
// Il2CppName: get_ambientMode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Rendering::AmbientMode (*)()>(&UnityEngine::RenderSettings::get_ambientMode)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::RenderSettings*), "get_ambientMode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::RenderSettings::get_ambientSkyColor
// Il2CppName: get_ambientSkyColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Color (*)()>(&UnityEngine::RenderSettings::get_ambientSkyColor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::RenderSettings*), "get_ambientSkyColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::RenderSettings::get_ambientEquatorColor
// Il2CppName: get_ambientEquatorColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Color (*)()>(&UnityEngine::RenderSettings::get_ambientEquatorColor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::RenderSettings*), "get_ambientEquatorColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::RenderSettings::get_ambientGroundColor
// Il2CppName: get_ambientGroundColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Color (*)()>(&UnityEngine::RenderSettings::get_ambientGroundColor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::RenderSettings*), "get_ambientGroundColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::RenderSettings::get_subtractiveShadowColor
// Il2CppName: get_subtractiveShadowColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Color (*)()>(&UnityEngine::RenderSettings::get_subtractiveShadowColor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::RenderSettings*), "get_subtractiveShadowColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::RenderSettings::get_skybox
// Il2CppName: get_skybox
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Material* (*)()>(&UnityEngine::RenderSettings::get_skybox)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::RenderSettings*), "get_skybox", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::RenderSettings::set_skybox
// Il2CppName: set_skybox
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::Material*)>(&UnityEngine::RenderSettings::set_skybox)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Material")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::RenderSettings*), "set_skybox", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::RenderSettings::get_sun
// Il2CppName: get_sun
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Light* (*)()>(&UnityEngine::RenderSettings::get_sun)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::RenderSettings*), "get_sun", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::RenderSettings::get_ambientProbe
// Il2CppName: get_ambientProbe
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Rendering::SphericalHarmonicsL2 (*)()>(&UnityEngine::RenderSettings::get_ambientProbe)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::RenderSettings*), "get_ambientProbe", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::RenderSettings::get_reflectionIntensity
// Il2CppName: get_reflectionIntensity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (*)()>(&UnityEngine::RenderSettings::get_reflectionIntensity)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::RenderSettings*), "get_reflectionIntensity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::RenderSettings::get_ambientSkyColor_Injected
// Il2CppName: get_ambientSkyColor_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(ByRef<::UnityEngine::Color>)>(&UnityEngine::RenderSettings::get_ambientSkyColor_Injected)> {
  static const MethodInfo* get() {
    static auto* ret = &::il2cpp_utils::GetClassFromName("UnityEngine", "Color")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::RenderSettings*), "get_ambientSkyColor_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ret});
  }
};
// Writing MetadataGetter for method: UnityEngine::RenderSettings::get_ambientEquatorColor_Injected
// Il2CppName: get_ambientEquatorColor_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(ByRef<::UnityEngine::Color>)>(&UnityEngine::RenderSettings::get_ambientEquatorColor_Injected)> {
  static const MethodInfo* get() {
    static auto* ret = &::il2cpp_utils::GetClassFromName("UnityEngine", "Color")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::RenderSettings*), "get_ambientEquatorColor_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ret});
  }
};
// Writing MetadataGetter for method: UnityEngine::RenderSettings::get_ambientGroundColor_Injected
// Il2CppName: get_ambientGroundColor_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(ByRef<::UnityEngine::Color>)>(&UnityEngine::RenderSettings::get_ambientGroundColor_Injected)> {
  static const MethodInfo* get() {
    static auto* ret = &::il2cpp_utils::GetClassFromName("UnityEngine", "Color")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::RenderSettings*), "get_ambientGroundColor_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ret});
  }
};
// Writing MetadataGetter for method: UnityEngine::RenderSettings::get_subtractiveShadowColor_Injected
// Il2CppName: get_subtractiveShadowColor_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(ByRef<::UnityEngine::Color>)>(&UnityEngine::RenderSettings::get_subtractiveShadowColor_Injected)> {
  static const MethodInfo* get() {
    static auto* ret = &::il2cpp_utils::GetClassFromName("UnityEngine", "Color")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::RenderSettings*), "get_subtractiveShadowColor_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ret});
  }
};
// Writing MetadataGetter for method: UnityEngine::RenderSettings::get_ambientProbe_Injected
// Il2CppName: get_ambientProbe_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(ByRef<::UnityEngine::Rendering::SphericalHarmonicsL2>)>(&UnityEngine::RenderSettings::get_ambientProbe_Injected)> {
  static const MethodInfo* get() {
    static auto* ret = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "SphericalHarmonicsL2")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::RenderSettings*), "get_ambientProbe_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ret});
  }
};
