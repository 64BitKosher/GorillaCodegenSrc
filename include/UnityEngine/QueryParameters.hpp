// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Including type: UnityEngine.QueryTriggerInteraction
#include "UnityEngine/QueryTriggerInteraction.hpp"
// Completed includes
// Type namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: QueryParameters
  struct QueryParameters;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::QueryParameters, "UnityEngine", "QueryParameters");
// Type namespace: UnityEngine
namespace UnityEngine {
  // Size: 0xD
  #pragma pack(push, 1)
  // WARNING Layout: Sequential may not be correctly taken into account!
  // Autogenerated type: UnityEngine.QueryParameters
  // [TokenAttribute] Offset: FFFFFFFF
  struct QueryParameters/*, public ::System::ValueType*/ {
    public:
    public:
    // public System.Int32 layerMask
    // Size: 0x4
    // Offset: 0x0
    int layerMask;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // public System.Boolean hitMultipleFaces
    // Size: 0x1
    // Offset: 0x4
    bool hitMultipleFaces;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: hitMultipleFaces and: hitTriggers
    char __padding1[0x3] = {};
    // public UnityEngine.QueryTriggerInteraction hitTriggers
    // Size: 0x4
    // Offset: 0x8
    ::UnityEngine::QueryTriggerInteraction hitTriggers;
    // Field size check
    static_assert(sizeof(::UnityEngine::QueryTriggerInteraction) == 0x4);
    // public System.Boolean hitBackfaces
    // Size: 0x1
    // Offset: 0xC
    bool hitBackfaces;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    public:
    // Creating value type constructor for type: QueryParameters
    constexpr QueryParameters(int layerMask_ = {}, bool hitMultipleFaces_ = {}, ::UnityEngine::QueryTriggerInteraction hitTriggers_ = {}, bool hitBackfaces_ = {}) noexcept : layerMask{layerMask_}, hitMultipleFaces{hitMultipleFaces_}, hitTriggers{hitTriggers_}, hitBackfaces{hitBackfaces_} {}
    // Creating interface conversion operator: operator ::System::ValueType
    operator ::System::ValueType() noexcept {
      return *reinterpret_cast<::System::ValueType*>(this);
    }
    // Get instance field reference: public System.Int32 layerMask
    [[deprecated("Use field access instead!")]] int& dyn_layerMask();
    // Get instance field reference: public System.Boolean hitMultipleFaces
    [[deprecated("Use field access instead!")]] bool& dyn_hitMultipleFaces();
    // Get instance field reference: public UnityEngine.QueryTriggerInteraction hitTriggers
    [[deprecated("Use field access instead!")]] ::UnityEngine::QueryTriggerInteraction& dyn_hitTriggers();
    // Get instance field reference: public System.Boolean hitBackfaces
    [[deprecated("Use field access instead!")]] bool& dyn_hitBackfaces();
  }; // UnityEngine.QueryParameters
  #pragma pack(pop)
  static check_size<sizeof(QueryParameters), 12 + sizeof(bool)> __UnityEngine_QueryParametersSizeCheck;
  static_assert(sizeof(QueryParameters) == 0xD);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
