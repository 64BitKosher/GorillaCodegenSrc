// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Meta.Voice.IVoiceRequestEvents`1
#include "Meta/Voice/IVoiceRequestEvents_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::Events
namespace UnityEngine::Events {
  // Forward declaring type: UnityEventBase
  class UnityEventBase;
}
// Forward declaring namespace: Meta::Voice
namespace Meta::Voice {
  // Forward declaring type: NLPRequestResponseEvent
  class NLPRequestResponseEvent;
}
// Completed forward declares
// Type namespace: Meta.Voice
namespace Meta::Voice {
  // Forward declaring type: INLPRequestEvents`1<TUnityEvent>
  template<typename TUnityEvent>
  class INLPRequestEvents_1;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE_GENERIC_CLASS(::Meta::Voice::INLPRequestEvents_1, "Meta.Voice", "INLPRequestEvents`1");
// Type namespace: Meta.Voice
namespace Meta::Voice {
  // WARNING Size may be invalid!
  // Autogenerated type: Meta.Voice.INLPRequestEvents`1
  // [TokenAttribute] Offset: FFFFFFFF
  template<typename TUnityEvent>
  class INLPRequestEvents_1/*, public ::Meta::Voice::IVoiceRequestEvents_1<TUnityEvent>*/ {
    public:
    // Creating interface conversion operator: operator ::Meta::Voice::IVoiceRequestEvents_1<TUnityEvent>
    operator ::Meta::Voice::IVoiceRequestEvents_1<TUnityEvent>() noexcept {
      return *reinterpret_cast<::Meta::Voice::IVoiceRequestEvents_1<TUnityEvent>*>(this);
    }
    // public Meta.Voice.NLPRequestResponseEvent get_OnFullResponse()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::Meta::Voice::NLPRequestResponseEvent* get_OnFullResponse() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::INLPRequestEvents_1::get_OnFullResponse");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Voice::INLPRequestEvents_1<TUnityEvent>*), -1));
      return ::il2cpp_utils::RunMethodRethrow<::Meta::Voice::NLPRequestResponseEvent*, false>(this, ___internal__method);
    }
  }; // Meta.Voice.INLPRequestEvents`1
  // Could not write size check! Type: Meta.Voice.INLPRequestEvents`1 is generic, or has no fields that are valid for size checks!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
