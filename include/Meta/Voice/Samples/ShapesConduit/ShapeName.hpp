// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Enum
#include "System/Enum.hpp"
// Completed includes
// Type namespace: Meta.Voice.Samples.ShapesConduit
namespace Meta::Voice::Samples::ShapesConduit {
  // Forward declaring type: ShapeName
  struct ShapeName;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::Meta::Voice::Samples::ShapesConduit::ShapeName, "Meta.Voice.Samples.ShapesConduit", "ShapeName");
// Type namespace: Meta.Voice.Samples.ShapesConduit
namespace Meta::Voice::Samples::ShapesConduit {
  // Size: 0x4
  #pragma pack(push, 1)
  // Autogenerated type: Meta.Voice.Samples.ShapesConduit.ShapeName
  // [TokenAttribute] Offset: FFFFFFFF
  struct ShapeName/*, public ::System::Enum*/ {
    public:
    public:
    // public System.Int32 value__
    // Size: 0x4
    // Offset: 0x0
    int value;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Creating value type constructor for type: ShapeName
    constexpr ShapeName(int value_ = {}) noexcept : value{value_} {}
    // Creating interface conversion operator: operator ::System::Enum
    operator ::System::Enum() noexcept {
      return *reinterpret_cast<::System::Enum*>(this);
    }
    // Creating conversion operator: operator int
    constexpr operator int() const noexcept {
      return value;
    }
    // static field const value: static public Meta.Voice.Samples.ShapesConduit.ShapeName capsule
    static constexpr const int capsule = 0;
    // Get static field: static public Meta.Voice.Samples.ShapesConduit.ShapeName capsule
    static ::Meta::Voice::Samples::ShapesConduit::ShapeName _get_capsule();
    // Set static field: static public Meta.Voice.Samples.ShapesConduit.ShapeName capsule
    static void _set_capsule(::Meta::Voice::Samples::ShapesConduit::ShapeName value);
    // static field const value: static public Meta.Voice.Samples.ShapesConduit.ShapeName cube
    static constexpr const int cube = 1;
    // Get static field: static public Meta.Voice.Samples.ShapesConduit.ShapeName cube
    static ::Meta::Voice::Samples::ShapesConduit::ShapeName _get_cube();
    // Set static field: static public Meta.Voice.Samples.ShapesConduit.ShapeName cube
    static void _set_cube(::Meta::Voice::Samples::ShapesConduit::ShapeName value);
    // static field const value: static public Meta.Voice.Samples.ShapesConduit.ShapeName cylinder
    static constexpr const int cylinder = 2;
    // Get static field: static public Meta.Voice.Samples.ShapesConduit.ShapeName cylinder
    static ::Meta::Voice::Samples::ShapesConduit::ShapeName _get_cylinder();
    // Set static field: static public Meta.Voice.Samples.ShapesConduit.ShapeName cylinder
    static void _set_cylinder(::Meta::Voice::Samples::ShapesConduit::ShapeName value);
    // static field const value: static public Meta.Voice.Samples.ShapesConduit.ShapeName sphere
    static constexpr const int sphere = 3;
    // Get static field: static public Meta.Voice.Samples.ShapesConduit.ShapeName sphere
    static ::Meta::Voice::Samples::ShapesConduit::ShapeName _get_sphere();
    // Set static field: static public Meta.Voice.Samples.ShapesConduit.ShapeName sphere
    static void _set_sphere(::Meta::Voice::Samples::ShapesConduit::ShapeName value);
    // Get instance field reference: public System.Int32 value__
    [[deprecated("Use field access instead!")]] int& dyn_value__();
  }; // Meta.Voice.Samples.ShapesConduit.ShapeName
  #pragma pack(pop)
  static check_size<sizeof(ShapeName), 0 + sizeof(int)> __Meta_Voice_Samples_ShapesConduit_ShapeNameSizeCheck;
  static_assert(sizeof(ShapeName) == 0x4);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
