// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Transform
  class Transform;
  // Forward declaring type: Color
  struct Color;
}
// Forward declaring namespace: Meta::WitAi::Json
namespace Meta::WitAi::Json {
  // Forward declaring type: WitResponseNode
  class WitResponseNode;
}
// Completed forward declares
// Type namespace: Meta.Voice.Samples.Shapes
namespace Meta::Voice::Samples::Shapes {
  // Forward declaring type: ColorChanger
  class ColorChanger;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Meta::Voice::Samples::Shapes::ColorChanger);
DEFINE_IL2CPP_ARG_TYPE(::Meta::Voice::Samples::Shapes::ColorChanger*, "Meta.Voice.Samples.Shapes", "ColorChanger");
// Type namespace: Meta.Voice.Samples.Shapes
namespace Meta::Voice::Samples::Shapes {
  // Size: 0x20
  #pragma pack(push, 1)
  // Autogenerated type: Meta.Voice.Samples.Shapes.ColorChanger
  // [TokenAttribute] Offset: FFFFFFFF
  class ColorChanger : public ::UnityEngine::MonoBehaviour {
    public:
    // private System.Void SetColor(UnityEngine.Transform trans, UnityEngine.Color color)
    // Offset: 0x4411220
    void SetColor(::UnityEngine::Transform* trans, ::UnityEngine::Color color);
    // public System.Void UpdateColor(Meta.WitAi.Json.WitResponseNode commandResult)
    // Offset: 0x44112B8
    void UpdateColor(::Meta::WitAi::Json::WitResponseNode* commandResult);
    // public System.Void UpdateColor(System.String[] colorNames, System.String[] shapes)
    // Offset: 0x4411348
    void UpdateColor(::ArrayW<::StringW> colorNames, ::ArrayW<::StringW> shapes);
    // public System.Void UpdateColorAllShapes(System.String[] colorNames)
    // Offset: 0x44114F0
    void UpdateColorAllShapes(::ArrayW<::StringW> colorNames);
    // public System.Void .ctor()
    // Offset: 0x44115F0
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static ColorChanger* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Samples::Shapes::ColorChanger::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<ColorChanger*, creationType>()));
    }
  }; // Meta.Voice.Samples.Shapes.ColorChanger
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Meta::Voice::Samples::Shapes::ColorChanger::SetColor
// Il2CppName: SetColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Meta::Voice::Samples::Shapes::ColorChanger::*)(::UnityEngine::Transform*, ::UnityEngine::Color)>(&Meta::Voice::Samples::Shapes::ColorChanger::SetColor)> {
  static const MethodInfo* get() {
    static auto* trans = &::il2cpp_utils::GetClassFromName("UnityEngine", "Transform")->byval_arg;
    static auto* color = &::il2cpp_utils::GetClassFromName("UnityEngine", "Color")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::Voice::Samples::Shapes::ColorChanger*), "SetColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{trans, color});
  }
};
// Writing MetadataGetter for method: Meta::Voice::Samples::Shapes::ColorChanger::UpdateColor
// Il2CppName: UpdateColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Meta::Voice::Samples::Shapes::ColorChanger::*)(::Meta::WitAi::Json::WitResponseNode*)>(&Meta::Voice::Samples::Shapes::ColorChanger::UpdateColor)> {
  static const MethodInfo* get() {
    static auto* commandResult = &::il2cpp_utils::GetClassFromName("Meta.WitAi.Json", "WitResponseNode")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::Voice::Samples::Shapes::ColorChanger*), "UpdateColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{commandResult});
  }
};
// Writing MetadataGetter for method: Meta::Voice::Samples::Shapes::ColorChanger::UpdateColor
// Il2CppName: UpdateColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Meta::Voice::Samples::Shapes::ColorChanger::*)(::ArrayW<::StringW>, ::ArrayW<::StringW>)>(&Meta::Voice::Samples::Shapes::ColorChanger::UpdateColor)> {
  static const MethodInfo* get() {
    static auto* colorNames = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "String"), 1)->byval_arg;
    static auto* shapes = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "String"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::Voice::Samples::Shapes::ColorChanger*), "UpdateColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{colorNames, shapes});
  }
};
// Writing MetadataGetter for method: Meta::Voice::Samples::Shapes::ColorChanger::UpdateColorAllShapes
// Il2CppName: UpdateColorAllShapes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Meta::Voice::Samples::Shapes::ColorChanger::*)(::ArrayW<::StringW>)>(&Meta::Voice::Samples::Shapes::ColorChanger::UpdateColorAllShapes)> {
  static const MethodInfo* get() {
    static auto* colorNames = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "String"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::Voice::Samples::Shapes::ColorChanger*), "UpdateColorAllShapes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{colorNames});
  }
};
// Writing MetadataGetter for method: Meta::Voice::Samples::Shapes::ColorChanger::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
