// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Meta::Voice::Samples::TTSVoices
namespace Meta::Voice::Samples::TTSVoices {
  // Forward declaring type: SimpleDropdownIndexEvent
  class SimpleDropdownIndexEvent;
  // Forward declaring type: SimpleDropdownOptionEvent
  class SimpleDropdownOptionEvent;
}
// Forward declaring namespace: UnityEngine::UI
namespace UnityEngine::UI {
  // Forward declaring type: Toggle
  class Toggle;
  // Forward declaring type: ScrollRect
  class ScrollRect;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Transform
  class Transform;
  // Forward declaring type: CanvasGroup
  class CanvasGroup;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Completed forward declares
// Type namespace: Meta.Voice.Samples.TTSVoices
namespace Meta::Voice::Samples::TTSVoices {
  // Forward declaring type: SimpleDropdownList
  class SimpleDropdownList;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Meta::Voice::Samples::TTSVoices::SimpleDropdownList);
DEFINE_IL2CPP_ARG_TYPE(::Meta::Voice::Samples::TTSVoices::SimpleDropdownList*, "Meta.Voice.Samples.TTSVoices", "SimpleDropdownList");
// Type namespace: Meta.Voice.Samples.TTSVoices
namespace Meta::Voice::Samples::TTSVoices {
  // Size: 0x88
  #pragma pack(push, 1)
  // Autogenerated type: Meta.Voice.Samples.TTSVoices.SimpleDropdownList
  // [TokenAttribute] Offset: FFFFFFFF
  class SimpleDropdownList : public ::UnityEngine::MonoBehaviour {
    public:
    // Nested type: ::Meta::Voice::Samples::TTSVoices::SimpleDropdownList::$$c__DisplayClass32_0
    class $$c__DisplayClass32_0;
    public:
    // private UnityEngine.UI.Toggle _dropdownToggle
    // Size: 0x8
    // Offset: 0x20
    ::UnityEngine::UI::Toggle* dropdownToggle;
    // Field size check
    static_assert(sizeof(::UnityEngine::UI::Toggle*) == 0x8);
    // private UnityEngine.Transform _dropdownButtonArrowImage
    // Size: 0x8
    // Offset: 0x28
    ::UnityEngine::Transform* dropdownButtonArrowImage;
    // Field size check
    static_assert(sizeof(::UnityEngine::Transform*) == 0x8);
    // public System.String DropdownToggleUnselectedText
    // Size: 0x8
    // Offset: 0x30
    ::StringW DropdownToggleUnselectedText;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private UnityEngine.CanvasGroup _dropdownListPopup
    // Size: 0x8
    // Offset: 0x38
    ::UnityEngine::CanvasGroup* dropdownListPopup;
    // Field size check
    static_assert(sizeof(::UnityEngine::CanvasGroup*) == 0x8);
    // private UnityEngine.UI.ScrollRect _dropdownListScrollRect
    // Size: 0x8
    // Offset: 0x40
    ::UnityEngine::UI::ScrollRect* dropdownListScrollRect;
    // Field size check
    static_assert(sizeof(::UnityEngine::UI::ScrollRect*) == 0x8);
    // private UnityEngine.UI.Toggle _dropdownListCellPrefab
    // Size: 0x8
    // Offset: 0x48
    ::UnityEngine::UI::Toggle* dropdownListCellPrefab;
    // Field size check
    static_assert(sizeof(::UnityEngine::UI::Toggle*) == 0x8);
    // private System.Single _dropdownCellTextPadding
    // Size: 0x4
    // Offset: 0x50
    float dropdownCellTextPadding;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // Padding between fields: dropdownCellTextPadding and: options
    char __padding6[0x4] = {};
    // private System.String[] _options
    // Size: 0x8
    // Offset: 0x58
    ::ArrayW<::StringW> options;
    // Field size check
    static_assert(sizeof(::ArrayW<::StringW>) == 0x8);
    // private System.Int32 _selectedOptionIndex
    // Size: 0x4
    // Offset: 0x60
    int selectedOptionIndex;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // Padding between fields: selectedOptionIndex and: onIndexSelected
    char __padding8[0x4] = {};
    // private Meta.Voice.Samples.TTSVoices.SimpleDropdownIndexEvent _onIndexSelected
    // Size: 0x8
    // Offset: 0x68
    ::Meta::Voice::Samples::TTSVoices::SimpleDropdownIndexEvent* onIndexSelected;
    // Field size check
    static_assert(sizeof(::Meta::Voice::Samples::TTSVoices::SimpleDropdownIndexEvent*) == 0x8);
    // private Meta.Voice.Samples.TTSVoices.SimpleDropdownOptionEvent _onOptionSelected
    // Size: 0x8
    // Offset: 0x70
    ::Meta::Voice::Samples::TTSVoices::SimpleDropdownOptionEvent* onOptionSelected;
    // Field size check
    static_assert(sizeof(::Meta::Voice::Samples::TTSVoices::SimpleDropdownOptionEvent*) == 0x8);
    // private System.Boolean <IsShowing>k__BackingField
    // Size: 0x1
    // Offset: 0x78
    bool IsShowing;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: IsShowing and: cells
    char __padding11[0x7] = {};
    // private System.Collections.Generic.List`1<UnityEngine.UI.Toggle> _cells
    // Size: 0x8
    // Offset: 0x80
    ::System::Collections::Generic::List_1<::UnityEngine::UI::Toggle*>* cells;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::UnityEngine::UI::Toggle*>*) == 0x8);
    public:
    // Get instance field reference: private UnityEngine.UI.Toggle _dropdownToggle
    [[deprecated("Use field access instead!")]] ::UnityEngine::UI::Toggle*& dyn__dropdownToggle();
    // Get instance field reference: private UnityEngine.Transform _dropdownButtonArrowImage
    [[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& dyn__dropdownButtonArrowImage();
    // Get instance field reference: public System.String DropdownToggleUnselectedText
    [[deprecated("Use field access instead!")]] ::StringW& dyn_DropdownToggleUnselectedText();
    // Get instance field reference: private UnityEngine.CanvasGroup _dropdownListPopup
    [[deprecated("Use field access instead!")]] ::UnityEngine::CanvasGroup*& dyn__dropdownListPopup();
    // Get instance field reference: private UnityEngine.UI.ScrollRect _dropdownListScrollRect
    [[deprecated("Use field access instead!")]] ::UnityEngine::UI::ScrollRect*& dyn__dropdownListScrollRect();
    // Get instance field reference: private UnityEngine.UI.Toggle _dropdownListCellPrefab
    [[deprecated("Use field access instead!")]] ::UnityEngine::UI::Toggle*& dyn__dropdownListCellPrefab();
    // Get instance field reference: private System.Single _dropdownCellTextPadding
    [[deprecated("Use field access instead!")]] float& dyn__dropdownCellTextPadding();
    // Get instance field reference: private System.String[] _options
    [[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& dyn__options();
    // Get instance field reference: private System.Int32 _selectedOptionIndex
    [[deprecated("Use field access instead!")]] int& dyn__selectedOptionIndex();
    // Get instance field reference: private Meta.Voice.Samples.TTSVoices.SimpleDropdownIndexEvent _onIndexSelected
    [[deprecated("Use field access instead!")]] ::Meta::Voice::Samples::TTSVoices::SimpleDropdownIndexEvent*& dyn__onIndexSelected();
    // Get instance field reference: private Meta.Voice.Samples.TTSVoices.SimpleDropdownOptionEvent _onOptionSelected
    [[deprecated("Use field access instead!")]] ::Meta::Voice::Samples::TTSVoices::SimpleDropdownOptionEvent*& dyn__onOptionSelected();
    // Get instance field reference: private System.Boolean <IsShowing>k__BackingField
    [[deprecated("Use field access instead!")]] bool& dyn_$IsShowing$k__BackingField();
    // Get instance field reference: private System.Collections.Generic.List`1<UnityEngine.UI.Toggle> _cells
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::UI::Toggle*>*& dyn__cells();
    // public System.String[] get_Options()
    // Offset: 0x44121C0
    ::ArrayW<::StringW> get_Options();
    // public System.Int32 get_SelectedOptionIndex()
    // Offset: 0x44121C8
    int get_SelectedOptionIndex();
    // public System.String get_SelectedOption()
    // Offset: 0x44121D0
    ::StringW get_SelectedOption();
    // public Meta.Voice.Samples.TTSVoices.SimpleDropdownIndexEvent get_OnIndexSelected()
    // Offset: 0x4412214
    ::Meta::Voice::Samples::TTSVoices::SimpleDropdownIndexEvent* get_OnIndexSelected();
    // public Meta.Voice.Samples.TTSVoices.SimpleDropdownOptionEvent get_OnOptionSelected()
    // Offset: 0x441221C
    ::Meta::Voice::Samples::TTSVoices::SimpleDropdownOptionEvent* get_OnOptionSelected();
    // public System.Boolean get_IsShowing()
    // Offset: 0x4412224
    bool get_IsShowing();
    // private System.Void set_IsShowing(System.Boolean value)
    // Offset: 0x441222C
    void set_IsShowing(bool value);
    // protected System.Void Awake()
    // Offset: 0x4412238
    void Awake();
    // private System.Void FindCellPrefab()
    // Offset: 0x441223C
    void FindCellPrefab();
    // protected System.Void Start()
    // Offset: 0x4412394
    void Start();
    // protected System.Void OnEnable()
    // Offset: 0x4412CB8
    void OnEnable();
    // protected System.Void OnDisable()
    // Offset: 0x4412D5C
    void OnDisable();
    // public System.Void LoadDropdown(System.String[] newOptions)
    // Offset: 0x4412584
    void LoadDropdown(::ArrayW<::StringW> newOptions);
    // protected System.Void LoadCell(UnityEngine.UI.Toggle cell, System.Int32 index, System.String option, ref System.Single y)
    // Offset: 0x4412E00
    void LoadCell(::UnityEngine::UI::Toggle* cell, int index, ::StringW option, ByRef<float> y);
    // public System.Void SelectOption(System.Int32 newIndex)
    // Offset: 0x4412AAC
    void SelectOption(int newIndex);
    // public System.Void SelectOption(System.String option)
    // Offset: 0x4413158
    void SelectOption(::StringW option);
    // private System.Void OnCellClick(System.Int32 index, System.Boolean toSelected)
    // Offset: 0x44131E4
    void OnCellClick(int index, bool toSelected);
    // public System.Int32 GetOptionIndex(System.String option)
    // Offset: 0x4413174
    int GetOptionIndex(::StringW option);
    // public System.Void SetShowing(System.Boolean toShowing)
    // Offset: 0x44123D4
    void SetShowing(bool toShowing);
    // private System.Void OnToggleClick(System.Boolean toToggle)
    // Offset: 0x44131FC
    void OnToggleClick(bool toToggle);
    // public System.Void .ctor()
    // Offset: 0x441321C
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static SimpleDropdownList* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Samples::TTSVoices::SimpleDropdownList::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<SimpleDropdownList*, creationType>()));
    }
  }; // Meta.Voice.Samples.TTSVoices.SimpleDropdownList
  #pragma pack(pop)
  static check_size<sizeof(SimpleDropdownList), 128 + sizeof(::System::Collections::Generic::List_1<::UnityEngine::UI::Toggle*>*)> __Meta_Voice_Samples_TTSVoices_SimpleDropdownListSizeCheck;
  static_assert(sizeof(SimpleDropdownList) == 0x88);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Meta::Voice::Samples::TTSVoices::SimpleDropdownList::get_Options
// Il2CppName: get_Options
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::StringW> (Meta::Voice::Samples::TTSVoices::SimpleDropdownList::*)()>(&Meta::Voice::Samples::TTSVoices::SimpleDropdownList::get_Options)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Meta::Voice::Samples::TTSVoices::SimpleDropdownList*), "get_Options", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Meta::Voice::Samples::TTSVoices::SimpleDropdownList::get_SelectedOptionIndex
// Il2CppName: get_SelectedOptionIndex
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Meta::Voice::Samples::TTSVoices::SimpleDropdownList::*)()>(&Meta::Voice::Samples::TTSVoices::SimpleDropdownList::get_SelectedOptionIndex)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Meta::Voice::Samples::TTSVoices::SimpleDropdownList*), "get_SelectedOptionIndex", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Meta::Voice::Samples::TTSVoices::SimpleDropdownList::get_SelectedOption
// Il2CppName: get_SelectedOption
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (Meta::Voice::Samples::TTSVoices::SimpleDropdownList::*)()>(&Meta::Voice::Samples::TTSVoices::SimpleDropdownList::get_SelectedOption)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Meta::Voice::Samples::TTSVoices::SimpleDropdownList*), "get_SelectedOption", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Meta::Voice::Samples::TTSVoices::SimpleDropdownList::get_OnIndexSelected
// Il2CppName: get_OnIndexSelected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Meta::Voice::Samples::TTSVoices::SimpleDropdownIndexEvent* (Meta::Voice::Samples::TTSVoices::SimpleDropdownList::*)()>(&Meta::Voice::Samples::TTSVoices::SimpleDropdownList::get_OnIndexSelected)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Meta::Voice::Samples::TTSVoices::SimpleDropdownList*), "get_OnIndexSelected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Meta::Voice::Samples::TTSVoices::SimpleDropdownList::get_OnOptionSelected
// Il2CppName: get_OnOptionSelected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Meta::Voice::Samples::TTSVoices::SimpleDropdownOptionEvent* (Meta::Voice::Samples::TTSVoices::SimpleDropdownList::*)()>(&Meta::Voice::Samples::TTSVoices::SimpleDropdownList::get_OnOptionSelected)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Meta::Voice::Samples::TTSVoices::SimpleDropdownList*), "get_OnOptionSelected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Meta::Voice::Samples::TTSVoices::SimpleDropdownList::get_IsShowing
// Il2CppName: get_IsShowing
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Meta::Voice::Samples::TTSVoices::SimpleDropdownList::*)()>(&Meta::Voice::Samples::TTSVoices::SimpleDropdownList::get_IsShowing)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Meta::Voice::Samples::TTSVoices::SimpleDropdownList*), "get_IsShowing", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Meta::Voice::Samples::TTSVoices::SimpleDropdownList::set_IsShowing
// Il2CppName: set_IsShowing
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Meta::Voice::Samples::TTSVoices::SimpleDropdownList::*)(bool)>(&Meta::Voice::Samples::TTSVoices::SimpleDropdownList::set_IsShowing)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::Voice::Samples::TTSVoices::SimpleDropdownList*), "set_IsShowing", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Meta::Voice::Samples::TTSVoices::SimpleDropdownList::Awake
// Il2CppName: Awake
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Meta::Voice::Samples::TTSVoices::SimpleDropdownList::*)()>(&Meta::Voice::Samples::TTSVoices::SimpleDropdownList::Awake)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Meta::Voice::Samples::TTSVoices::SimpleDropdownList*), "Awake", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Meta::Voice::Samples::TTSVoices::SimpleDropdownList::FindCellPrefab
// Il2CppName: FindCellPrefab
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Meta::Voice::Samples::TTSVoices::SimpleDropdownList::*)()>(&Meta::Voice::Samples::TTSVoices::SimpleDropdownList::FindCellPrefab)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Meta::Voice::Samples::TTSVoices::SimpleDropdownList*), "FindCellPrefab", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Meta::Voice::Samples::TTSVoices::SimpleDropdownList::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Meta::Voice::Samples::TTSVoices::SimpleDropdownList::*)()>(&Meta::Voice::Samples::TTSVoices::SimpleDropdownList::Start)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Meta::Voice::Samples::TTSVoices::SimpleDropdownList*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Meta::Voice::Samples::TTSVoices::SimpleDropdownList::OnEnable
// Il2CppName: OnEnable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Meta::Voice::Samples::TTSVoices::SimpleDropdownList::*)()>(&Meta::Voice::Samples::TTSVoices::SimpleDropdownList::OnEnable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Meta::Voice::Samples::TTSVoices::SimpleDropdownList*), "OnEnable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Meta::Voice::Samples::TTSVoices::SimpleDropdownList::OnDisable
// Il2CppName: OnDisable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Meta::Voice::Samples::TTSVoices::SimpleDropdownList::*)()>(&Meta::Voice::Samples::TTSVoices::SimpleDropdownList::OnDisable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Meta::Voice::Samples::TTSVoices::SimpleDropdownList*), "OnDisable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Meta::Voice::Samples::TTSVoices::SimpleDropdownList::LoadDropdown
// Il2CppName: LoadDropdown
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Meta::Voice::Samples::TTSVoices::SimpleDropdownList::*)(::ArrayW<::StringW>)>(&Meta::Voice::Samples::TTSVoices::SimpleDropdownList::LoadDropdown)> {
  static const MethodInfo* get() {
    static auto* newOptions = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "String"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::Voice::Samples::TTSVoices::SimpleDropdownList*), "LoadDropdown", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{newOptions});
  }
};
// Writing MetadataGetter for method: Meta::Voice::Samples::TTSVoices::SimpleDropdownList::LoadCell
// Il2CppName: LoadCell
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Meta::Voice::Samples::TTSVoices::SimpleDropdownList::*)(::UnityEngine::UI::Toggle*, int, ::StringW, ByRef<float>)>(&Meta::Voice::Samples::TTSVoices::SimpleDropdownList::LoadCell)> {
  static const MethodInfo* get() {
    static auto* cell = &::il2cpp_utils::GetClassFromName("UnityEngine.UI", "Toggle")->byval_arg;
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* option = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* y = &::il2cpp_utils::GetClassFromName("System", "Single")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::Voice::Samples::TTSVoices::SimpleDropdownList*), "LoadCell", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{cell, index, option, y});
  }
};
// Writing MetadataGetter for method: Meta::Voice::Samples::TTSVoices::SimpleDropdownList::SelectOption
// Il2CppName: SelectOption
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Meta::Voice::Samples::TTSVoices::SimpleDropdownList::*)(int)>(&Meta::Voice::Samples::TTSVoices::SimpleDropdownList::SelectOption)> {
  static const MethodInfo* get() {
    static auto* newIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::Voice::Samples::TTSVoices::SimpleDropdownList*), "SelectOption", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{newIndex});
  }
};
// Writing MetadataGetter for method: Meta::Voice::Samples::TTSVoices::SimpleDropdownList::SelectOption
// Il2CppName: SelectOption
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Meta::Voice::Samples::TTSVoices::SimpleDropdownList::*)(::StringW)>(&Meta::Voice::Samples::TTSVoices::SimpleDropdownList::SelectOption)> {
  static const MethodInfo* get() {
    static auto* option = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::Voice::Samples::TTSVoices::SimpleDropdownList*), "SelectOption", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{option});
  }
};
// Writing MetadataGetter for method: Meta::Voice::Samples::TTSVoices::SimpleDropdownList::OnCellClick
// Il2CppName: OnCellClick
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Meta::Voice::Samples::TTSVoices::SimpleDropdownList::*)(int, bool)>(&Meta::Voice::Samples::TTSVoices::SimpleDropdownList::OnCellClick)> {
  static const MethodInfo* get() {
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* toSelected = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::Voice::Samples::TTSVoices::SimpleDropdownList*), "OnCellClick", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{index, toSelected});
  }
};
// Writing MetadataGetter for method: Meta::Voice::Samples::TTSVoices::SimpleDropdownList::GetOptionIndex
// Il2CppName: GetOptionIndex
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Meta::Voice::Samples::TTSVoices::SimpleDropdownList::*)(::StringW)>(&Meta::Voice::Samples::TTSVoices::SimpleDropdownList::GetOptionIndex)> {
  static const MethodInfo* get() {
    static auto* option = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::Voice::Samples::TTSVoices::SimpleDropdownList*), "GetOptionIndex", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{option});
  }
};
// Writing MetadataGetter for method: Meta::Voice::Samples::TTSVoices::SimpleDropdownList::SetShowing
// Il2CppName: SetShowing
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Meta::Voice::Samples::TTSVoices::SimpleDropdownList::*)(bool)>(&Meta::Voice::Samples::TTSVoices::SimpleDropdownList::SetShowing)> {
  static const MethodInfo* get() {
    static auto* toShowing = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::Voice::Samples::TTSVoices::SimpleDropdownList*), "SetShowing", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{toShowing});
  }
};
// Writing MetadataGetter for method: Meta::Voice::Samples::TTSVoices::SimpleDropdownList::OnToggleClick
// Il2CppName: OnToggleClick
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Meta::Voice::Samples::TTSVoices::SimpleDropdownList::*)(bool)>(&Meta::Voice::Samples::TTSVoices::SimpleDropdownList::OnToggleClick)> {
  static const MethodInfo* get() {
    static auto* toToggle = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::Voice::Samples::TTSVoices::SimpleDropdownList*), "OnToggleClick", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{toToggle});
  }
};
// Writing MetadataGetter for method: Meta::Voice::Samples::TTSVoices::SimpleDropdownList::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
