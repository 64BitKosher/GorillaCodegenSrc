// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Meta::WitAi::TTS::Utilities
namespace Meta::WitAi::TTS::Utilities {
  // Forward declaring type: TTSSpeaker
  class TTSSpeaker;
}
// Forward declaring namespace: Meta::WitAi::TTS::Data
namespace Meta::WitAi::TTS::Data {
  // Forward declaring type: TTSClipData
  class TTSClipData;
}
// Completed forward declares
// Type namespace: Meta.Voice.Samples.TTSVoices
namespace Meta::Voice::Samples::TTSVoices {
  // Forward declaring type: TTSSpeakerObserver
  class TTSSpeakerObserver;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Meta::Voice::Samples::TTSVoices::TTSSpeakerObserver);
DEFINE_IL2CPP_ARG_TYPE(::Meta::Voice::Samples::TTSVoices::TTSSpeakerObserver*, "Meta.Voice.Samples.TTSVoices", "TTSSpeakerObserver");
// Type namespace: Meta.Voice.Samples.TTSVoices
namespace Meta::Voice::Samples::TTSVoices {
  // Size: 0x28
  #pragma pack(push, 1)
  // Autogenerated type: Meta.Voice.Samples.TTSVoices.TTSSpeakerObserver
  // [TokenAttribute] Offset: FFFFFFFF
  class TTSSpeakerObserver : public ::UnityEngine::MonoBehaviour {
    public:
    public:
    // private Meta.WitAi.TTS.Utilities.TTSSpeaker _speaker
    // Size: 0x8
    // Offset: 0x20
    ::Meta::WitAi::TTS::Utilities::TTSSpeaker* speaker;
    // Field size check
    static_assert(sizeof(::Meta::WitAi::TTS::Utilities::TTSSpeaker*) == 0x8);
    public:
    // Get instance field reference: private Meta.WitAi.TTS.Utilities.TTSSpeaker _speaker
    [[deprecated("Use field access instead!")]] ::Meta::WitAi::TTS::Utilities::TTSSpeaker*& dyn__speaker();
    // public Meta.WitAi.TTS.Utilities.TTSSpeaker get_Speaker()
    // Offset: 0x4415984
    ::Meta::WitAi::TTS::Utilities::TTSSpeaker* get_Speaker();
    // protected System.Void Awake()
    // Offset: 0x441598C
    void Awake();
    // protected System.Void OnEnable()
    // Offset: 0x4413E6C
    void OnEnable();
    // protected System.Void OnDisable()
    // Offset: 0x4414444
    void OnDisable();
    // protected System.Void OnPlaybackQueueBegin()
    // Offset: 0x4415A4C
    void OnPlaybackQueueBegin();
    // protected System.Void OnPlaybackQueueComplete()
    // Offset: 0x4415A50
    void OnPlaybackQueueComplete();
    // protected System.Void OnLoadBegin(Meta.WitAi.TTS.Utilities.TTSSpeaker speaker, Meta.WitAi.TTS.Data.TTSClipData clipData)
    // Offset: 0x4415A54
    void OnLoadBegin(::Meta::WitAi::TTS::Utilities::TTSSpeaker* speaker, ::Meta::WitAi::TTS::Data::TTSClipData* clipData);
    // protected System.Void OnLoadAbort(Meta.WitAi.TTS.Utilities.TTSSpeaker speaker, Meta.WitAi.TTS.Data.TTSClipData clipData)
    // Offset: 0x4415A58
    void OnLoadAbort(::Meta::WitAi::TTS::Utilities::TTSSpeaker* speaker, ::Meta::WitAi::TTS::Data::TTSClipData* clipData);
    // protected System.Void OnLoadFailed(Meta.WitAi.TTS.Utilities.TTSSpeaker speaker, Meta.WitAi.TTS.Data.TTSClipData clipData, System.String error)
    // Offset: 0x4415A5C
    void OnLoadFailed(::Meta::WitAi::TTS::Utilities::TTSSpeaker* speaker, ::Meta::WitAi::TTS::Data::TTSClipData* clipData, ::StringW error);
    // protected System.Void OnLoadSuccess(Meta.WitAi.TTS.Utilities.TTSSpeaker speaker, Meta.WitAi.TTS.Data.TTSClipData clipData)
    // Offset: 0x4415A60
    void OnLoadSuccess(::Meta::WitAi::TTS::Utilities::TTSSpeaker* speaker, ::Meta::WitAi::TTS::Data::TTSClipData* clipData);
    // protected System.Void OnPlaybackReady(Meta.WitAi.TTS.Utilities.TTSSpeaker speaker, Meta.WitAi.TTS.Data.TTSClipData clipData)
    // Offset: 0x4415A64
    void OnPlaybackReady(::Meta::WitAi::TTS::Utilities::TTSSpeaker* speaker, ::Meta::WitAi::TTS::Data::TTSClipData* clipData);
    // protected System.Void OnPlaybackStart(Meta.WitAi.TTS.Utilities.TTSSpeaker speaker, Meta.WitAi.TTS.Data.TTSClipData clipData)
    // Offset: 0x4415A68
    void OnPlaybackStart(::Meta::WitAi::TTS::Utilities::TTSSpeaker* speaker, ::Meta::WitAi::TTS::Data::TTSClipData* clipData);
    // protected System.Void OnPlaybackCancelled(Meta.WitAi.TTS.Utilities.TTSSpeaker speaker, Meta.WitAi.TTS.Data.TTSClipData clipData, System.String reason)
    // Offset: 0x4415A6C
    void OnPlaybackCancelled(::Meta::WitAi::TTS::Utilities::TTSSpeaker* speaker, ::Meta::WitAi::TTS::Data::TTSClipData* clipData, ::StringW reason);
    // protected System.Void OnPlaybackComplete(Meta.WitAi.TTS.Utilities.TTSSpeaker speaker, Meta.WitAi.TTS.Data.TTSClipData clipData)
    // Offset: 0x4415A70
    void OnPlaybackComplete(::Meta::WitAi::TTS::Utilities::TTSSpeaker* speaker, ::Meta::WitAi::TTS::Data::TTSClipData* clipData);
    // public System.Void .ctor()
    // Offset: 0x4414C4C
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static TTSSpeakerObserver* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Samples::TTSVoices::TTSSpeakerObserver::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<TTSSpeakerObserver*, creationType>()));
    }
  }; // Meta.Voice.Samples.TTSVoices.TTSSpeakerObserver
  #pragma pack(pop)
  static check_size<sizeof(TTSSpeakerObserver), 32 + sizeof(::Meta::WitAi::TTS::Utilities::TTSSpeaker*)> __Meta_Voice_Samples_TTSVoices_TTSSpeakerObserverSizeCheck;
  static_assert(sizeof(TTSSpeakerObserver) == 0x28);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Meta::Voice::Samples::TTSVoices::TTSSpeakerObserver::get_Speaker
// Il2CppName: get_Speaker
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Meta::WitAi::TTS::Utilities::TTSSpeaker* (Meta::Voice::Samples::TTSVoices::TTSSpeakerObserver::*)()>(&Meta::Voice::Samples::TTSVoices::TTSSpeakerObserver::get_Speaker)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Meta::Voice::Samples::TTSVoices::TTSSpeakerObserver*), "get_Speaker", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Meta::Voice::Samples::TTSVoices::TTSSpeakerObserver::Awake
// Il2CppName: Awake
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Meta::Voice::Samples::TTSVoices::TTSSpeakerObserver::*)()>(&Meta::Voice::Samples::TTSVoices::TTSSpeakerObserver::Awake)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Meta::Voice::Samples::TTSVoices::TTSSpeakerObserver*), "Awake", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Meta::Voice::Samples::TTSVoices::TTSSpeakerObserver::OnEnable
// Il2CppName: OnEnable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Meta::Voice::Samples::TTSVoices::TTSSpeakerObserver::*)()>(&Meta::Voice::Samples::TTSVoices::TTSSpeakerObserver::OnEnable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Meta::Voice::Samples::TTSVoices::TTSSpeakerObserver*), "OnEnable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Meta::Voice::Samples::TTSVoices::TTSSpeakerObserver::OnDisable
// Il2CppName: OnDisable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Meta::Voice::Samples::TTSVoices::TTSSpeakerObserver::*)()>(&Meta::Voice::Samples::TTSVoices::TTSSpeakerObserver::OnDisable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Meta::Voice::Samples::TTSVoices::TTSSpeakerObserver*), "OnDisable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Meta::Voice::Samples::TTSVoices::TTSSpeakerObserver::OnPlaybackQueueBegin
// Il2CppName: OnPlaybackQueueBegin
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Meta::Voice::Samples::TTSVoices::TTSSpeakerObserver::*)()>(&Meta::Voice::Samples::TTSVoices::TTSSpeakerObserver::OnPlaybackQueueBegin)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Meta::Voice::Samples::TTSVoices::TTSSpeakerObserver*), "OnPlaybackQueueBegin", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Meta::Voice::Samples::TTSVoices::TTSSpeakerObserver::OnPlaybackQueueComplete
// Il2CppName: OnPlaybackQueueComplete
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Meta::Voice::Samples::TTSVoices::TTSSpeakerObserver::*)()>(&Meta::Voice::Samples::TTSVoices::TTSSpeakerObserver::OnPlaybackQueueComplete)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Meta::Voice::Samples::TTSVoices::TTSSpeakerObserver*), "OnPlaybackQueueComplete", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Meta::Voice::Samples::TTSVoices::TTSSpeakerObserver::OnLoadBegin
// Il2CppName: OnLoadBegin
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Meta::Voice::Samples::TTSVoices::TTSSpeakerObserver::*)(::Meta::WitAi::TTS::Utilities::TTSSpeaker*, ::Meta::WitAi::TTS::Data::TTSClipData*)>(&Meta::Voice::Samples::TTSVoices::TTSSpeakerObserver::OnLoadBegin)> {
  static const MethodInfo* get() {
    static auto* speaker = &::il2cpp_utils::GetClassFromName("Meta.WitAi.TTS.Utilities", "TTSSpeaker")->byval_arg;
    static auto* clipData = &::il2cpp_utils::GetClassFromName("Meta.WitAi.TTS.Data", "TTSClipData")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::Voice::Samples::TTSVoices::TTSSpeakerObserver*), "OnLoadBegin", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{speaker, clipData});
  }
};
// Writing MetadataGetter for method: Meta::Voice::Samples::TTSVoices::TTSSpeakerObserver::OnLoadAbort
// Il2CppName: OnLoadAbort
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Meta::Voice::Samples::TTSVoices::TTSSpeakerObserver::*)(::Meta::WitAi::TTS::Utilities::TTSSpeaker*, ::Meta::WitAi::TTS::Data::TTSClipData*)>(&Meta::Voice::Samples::TTSVoices::TTSSpeakerObserver::OnLoadAbort)> {
  static const MethodInfo* get() {
    static auto* speaker = &::il2cpp_utils::GetClassFromName("Meta.WitAi.TTS.Utilities", "TTSSpeaker")->byval_arg;
    static auto* clipData = &::il2cpp_utils::GetClassFromName("Meta.WitAi.TTS.Data", "TTSClipData")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::Voice::Samples::TTSVoices::TTSSpeakerObserver*), "OnLoadAbort", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{speaker, clipData});
  }
};
// Writing MetadataGetter for method: Meta::Voice::Samples::TTSVoices::TTSSpeakerObserver::OnLoadFailed
// Il2CppName: OnLoadFailed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Meta::Voice::Samples::TTSVoices::TTSSpeakerObserver::*)(::Meta::WitAi::TTS::Utilities::TTSSpeaker*, ::Meta::WitAi::TTS::Data::TTSClipData*, ::StringW)>(&Meta::Voice::Samples::TTSVoices::TTSSpeakerObserver::OnLoadFailed)> {
  static const MethodInfo* get() {
    static auto* speaker = &::il2cpp_utils::GetClassFromName("Meta.WitAi.TTS.Utilities", "TTSSpeaker")->byval_arg;
    static auto* clipData = &::il2cpp_utils::GetClassFromName("Meta.WitAi.TTS.Data", "TTSClipData")->byval_arg;
    static auto* error = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::Voice::Samples::TTSVoices::TTSSpeakerObserver*), "OnLoadFailed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{speaker, clipData, error});
  }
};
// Writing MetadataGetter for method: Meta::Voice::Samples::TTSVoices::TTSSpeakerObserver::OnLoadSuccess
// Il2CppName: OnLoadSuccess
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Meta::Voice::Samples::TTSVoices::TTSSpeakerObserver::*)(::Meta::WitAi::TTS::Utilities::TTSSpeaker*, ::Meta::WitAi::TTS::Data::TTSClipData*)>(&Meta::Voice::Samples::TTSVoices::TTSSpeakerObserver::OnLoadSuccess)> {
  static const MethodInfo* get() {
    static auto* speaker = &::il2cpp_utils::GetClassFromName("Meta.WitAi.TTS.Utilities", "TTSSpeaker")->byval_arg;
    static auto* clipData = &::il2cpp_utils::GetClassFromName("Meta.WitAi.TTS.Data", "TTSClipData")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::Voice::Samples::TTSVoices::TTSSpeakerObserver*), "OnLoadSuccess", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{speaker, clipData});
  }
};
// Writing MetadataGetter for method: Meta::Voice::Samples::TTSVoices::TTSSpeakerObserver::OnPlaybackReady
// Il2CppName: OnPlaybackReady
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Meta::Voice::Samples::TTSVoices::TTSSpeakerObserver::*)(::Meta::WitAi::TTS::Utilities::TTSSpeaker*, ::Meta::WitAi::TTS::Data::TTSClipData*)>(&Meta::Voice::Samples::TTSVoices::TTSSpeakerObserver::OnPlaybackReady)> {
  static const MethodInfo* get() {
    static auto* speaker = &::il2cpp_utils::GetClassFromName("Meta.WitAi.TTS.Utilities", "TTSSpeaker")->byval_arg;
    static auto* clipData = &::il2cpp_utils::GetClassFromName("Meta.WitAi.TTS.Data", "TTSClipData")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::Voice::Samples::TTSVoices::TTSSpeakerObserver*), "OnPlaybackReady", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{speaker, clipData});
  }
};
// Writing MetadataGetter for method: Meta::Voice::Samples::TTSVoices::TTSSpeakerObserver::OnPlaybackStart
// Il2CppName: OnPlaybackStart
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Meta::Voice::Samples::TTSVoices::TTSSpeakerObserver::*)(::Meta::WitAi::TTS::Utilities::TTSSpeaker*, ::Meta::WitAi::TTS::Data::TTSClipData*)>(&Meta::Voice::Samples::TTSVoices::TTSSpeakerObserver::OnPlaybackStart)> {
  static const MethodInfo* get() {
    static auto* speaker = &::il2cpp_utils::GetClassFromName("Meta.WitAi.TTS.Utilities", "TTSSpeaker")->byval_arg;
    static auto* clipData = &::il2cpp_utils::GetClassFromName("Meta.WitAi.TTS.Data", "TTSClipData")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::Voice::Samples::TTSVoices::TTSSpeakerObserver*), "OnPlaybackStart", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{speaker, clipData});
  }
};
// Writing MetadataGetter for method: Meta::Voice::Samples::TTSVoices::TTSSpeakerObserver::OnPlaybackCancelled
// Il2CppName: OnPlaybackCancelled
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Meta::Voice::Samples::TTSVoices::TTSSpeakerObserver::*)(::Meta::WitAi::TTS::Utilities::TTSSpeaker*, ::Meta::WitAi::TTS::Data::TTSClipData*, ::StringW)>(&Meta::Voice::Samples::TTSVoices::TTSSpeakerObserver::OnPlaybackCancelled)> {
  static const MethodInfo* get() {
    static auto* speaker = &::il2cpp_utils::GetClassFromName("Meta.WitAi.TTS.Utilities", "TTSSpeaker")->byval_arg;
    static auto* clipData = &::il2cpp_utils::GetClassFromName("Meta.WitAi.TTS.Data", "TTSClipData")->byval_arg;
    static auto* reason = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::Voice::Samples::TTSVoices::TTSSpeakerObserver*), "OnPlaybackCancelled", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{speaker, clipData, reason});
  }
};
// Writing MetadataGetter for method: Meta::Voice::Samples::TTSVoices::TTSSpeakerObserver::OnPlaybackComplete
// Il2CppName: OnPlaybackComplete
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Meta::Voice::Samples::TTSVoices::TTSSpeakerObserver::*)(::Meta::WitAi::TTS::Utilities::TTSSpeaker*, ::Meta::WitAi::TTS::Data::TTSClipData*)>(&Meta::Voice::Samples::TTSVoices::TTSSpeakerObserver::OnPlaybackComplete)> {
  static const MethodInfo* get() {
    static auto* speaker = &::il2cpp_utils::GetClassFromName("Meta.WitAi.TTS.Utilities", "TTSSpeaker")->byval_arg;
    static auto* clipData = &::il2cpp_utils::GetClassFromName("Meta.WitAi.TTS.Data", "TTSClipData")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::Voice::Samples::TTSVoices::TTSSpeakerObserver*), "OnPlaybackComplete", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{speaker, clipData});
  }
};
// Writing MetadataGetter for method: Meta::Voice::Samples::TTSVoices::TTSSpeakerObserver::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
