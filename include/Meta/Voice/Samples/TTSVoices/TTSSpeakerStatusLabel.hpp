// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Meta.Voice.Samples.TTSVoices.TTSSpeakerObserver
#include "Meta/Voice/Samples/TTSVoices/TTSSpeakerObserver.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::UI
namespace UnityEngine::UI {
  // Forward declaring type: Text
  class Text;
}
// Forward declaring namespace: Meta::WitAi::TTS::Utilities
namespace Meta::WitAi::TTS::Utilities {
  // Forward declaring type: TTSSpeaker
  class TTSSpeaker;
}
// Forward declaring namespace: Meta::WitAi::TTS::Data
namespace Meta::WitAi::TTS::Data {
  // Forward declaring type: TTSClipData
  class TTSClipData;
}
// Completed forward declares
// Type namespace: Meta.Voice.Samples.TTSVoices
namespace Meta::Voice::Samples::TTSVoices {
  // Forward declaring type: TTSSpeakerStatusLabel
  class TTSSpeakerStatusLabel;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Meta::Voice::Samples::TTSVoices::TTSSpeakerStatusLabel);
DEFINE_IL2CPP_ARG_TYPE(::Meta::Voice::Samples::TTSVoices::TTSSpeakerStatusLabel*, "Meta.Voice.Samples.TTSVoices", "TTSSpeakerStatusLabel");
// Type namespace: Meta.Voice.Samples.TTSVoices
namespace Meta::Voice::Samples::TTSVoices {
  // Size: 0x30
  #pragma pack(push, 1)
  // Autogenerated type: Meta.Voice.Samples.TTSVoices.TTSSpeakerStatusLabel
  // [TokenAttribute] Offset: FFFFFFFF
  class TTSSpeakerStatusLabel : public ::Meta::Voice::Samples::TTSVoices::TTSSpeakerObserver {
    public:
    public:
    // private UnityEngine.UI.Text _label
    // Size: 0x8
    // Offset: 0x28
    ::UnityEngine::UI::Text* label;
    // Field size check
    static_assert(sizeof(::UnityEngine::UI::Text*) == 0x8);
    public:
    // Get instance field reference: private UnityEngine.UI.Text _label
    [[deprecated("Use field access instead!")]] ::UnityEngine::UI::Text*& dyn__label();
    // private System.Void RefreshLabel()
    // Offset: 0x4415A8C
    void RefreshLabel();
    // protected override System.Void OnEnable()
    // Offset: 0x4415A74
    // Implemented from: Meta.Voice.Samples.TTSVoices.TTSSpeakerObserver
    // Base method: System.Void TTSSpeakerObserver::OnEnable()
    void OnEnable();
    // protected override System.Void OnLoadBegin(Meta.WitAi.TTS.Utilities.TTSSpeaker speaker, Meta.WitAi.TTS.Data.TTSClipData clipData)
    // Offset: 0x4415E18
    // Implemented from: Meta.Voice.Samples.TTSVoices.TTSSpeakerObserver
    // Base method: System.Void TTSSpeakerObserver::OnLoadBegin(Meta.WitAi.TTS.Utilities.TTSSpeaker speaker, Meta.WitAi.TTS.Data.TTSClipData clipData)
    void OnLoadBegin(::Meta::WitAi::TTS::Utilities::TTSSpeaker* speaker, ::Meta::WitAi::TTS::Data::TTSClipData* clipData);
    // protected override System.Void OnLoadAbort(Meta.WitAi.TTS.Utilities.TTSSpeaker speaker, Meta.WitAi.TTS.Data.TTSClipData clipData)
    // Offset: 0x4415E1C
    // Implemented from: Meta.Voice.Samples.TTSVoices.TTSSpeakerObserver
    // Base method: System.Void TTSSpeakerObserver::OnLoadAbort(Meta.WitAi.TTS.Utilities.TTSSpeaker speaker, Meta.WitAi.TTS.Data.TTSClipData clipData)
    void OnLoadAbort(::Meta::WitAi::TTS::Utilities::TTSSpeaker* speaker, ::Meta::WitAi::TTS::Data::TTSClipData* clipData);
    // protected override System.Void OnLoadFailed(Meta.WitAi.TTS.Utilities.TTSSpeaker speaker, Meta.WitAi.TTS.Data.TTSClipData clipData, System.String error)
    // Offset: 0x4415E20
    // Implemented from: Meta.Voice.Samples.TTSVoices.TTSSpeakerObserver
    // Base method: System.Void TTSSpeakerObserver::OnLoadFailed(Meta.WitAi.TTS.Utilities.TTSSpeaker speaker, Meta.WitAi.TTS.Data.TTSClipData clipData, System.String error)
    void OnLoadFailed(::Meta::WitAi::TTS::Utilities::TTSSpeaker* speaker, ::Meta::WitAi::TTS::Data::TTSClipData* clipData, ::StringW error);
    // protected override System.Void OnLoadSuccess(Meta.WitAi.TTS.Utilities.TTSSpeaker speaker, Meta.WitAi.TTS.Data.TTSClipData clipData)
    // Offset: 0x4415E24
    // Implemented from: Meta.Voice.Samples.TTSVoices.TTSSpeakerObserver
    // Base method: System.Void TTSSpeakerObserver::OnLoadSuccess(Meta.WitAi.TTS.Utilities.TTSSpeaker speaker, Meta.WitAi.TTS.Data.TTSClipData clipData)
    void OnLoadSuccess(::Meta::WitAi::TTS::Utilities::TTSSpeaker* speaker, ::Meta::WitAi::TTS::Data::TTSClipData* clipData);
    // protected override System.Void OnPlaybackReady(Meta.WitAi.TTS.Utilities.TTSSpeaker speaker, Meta.WitAi.TTS.Data.TTSClipData clipData)
    // Offset: 0x4415E28
    // Implemented from: Meta.Voice.Samples.TTSVoices.TTSSpeakerObserver
    // Base method: System.Void TTSSpeakerObserver::OnPlaybackReady(Meta.WitAi.TTS.Utilities.TTSSpeaker speaker, Meta.WitAi.TTS.Data.TTSClipData clipData)
    void OnPlaybackReady(::Meta::WitAi::TTS::Utilities::TTSSpeaker* speaker, ::Meta::WitAi::TTS::Data::TTSClipData* clipData);
    // protected override System.Void OnPlaybackStart(Meta.WitAi.TTS.Utilities.TTSSpeaker speaker, Meta.WitAi.TTS.Data.TTSClipData clipData)
    // Offset: 0x4415E2C
    // Implemented from: Meta.Voice.Samples.TTSVoices.TTSSpeakerObserver
    // Base method: System.Void TTSSpeakerObserver::OnPlaybackStart(Meta.WitAi.TTS.Utilities.TTSSpeaker speaker, Meta.WitAi.TTS.Data.TTSClipData clipData)
    void OnPlaybackStart(::Meta::WitAi::TTS::Utilities::TTSSpeaker* speaker, ::Meta::WitAi::TTS::Data::TTSClipData* clipData);
    // protected override System.Void OnPlaybackCancelled(Meta.WitAi.TTS.Utilities.TTSSpeaker speaker, Meta.WitAi.TTS.Data.TTSClipData clipData, System.String reason)
    // Offset: 0x4415E30
    // Implemented from: Meta.Voice.Samples.TTSVoices.TTSSpeakerObserver
    // Base method: System.Void TTSSpeakerObserver::OnPlaybackCancelled(Meta.WitAi.TTS.Utilities.TTSSpeaker speaker, Meta.WitAi.TTS.Data.TTSClipData clipData, System.String reason)
    void OnPlaybackCancelled(::Meta::WitAi::TTS::Utilities::TTSSpeaker* speaker, ::Meta::WitAi::TTS::Data::TTSClipData* clipData, ::StringW reason);
    // protected override System.Void OnPlaybackComplete(Meta.WitAi.TTS.Utilities.TTSSpeaker speaker, Meta.WitAi.TTS.Data.TTSClipData clipData)
    // Offset: 0x4415E34
    // Implemented from: Meta.Voice.Samples.TTSVoices.TTSSpeakerObserver
    // Base method: System.Void TTSSpeakerObserver::OnPlaybackComplete(Meta.WitAi.TTS.Utilities.TTSSpeaker speaker, Meta.WitAi.TTS.Data.TTSClipData clipData)
    void OnPlaybackComplete(::Meta::WitAi::TTS::Utilities::TTSSpeaker* speaker, ::Meta::WitAi::TTS::Data::TTSClipData* clipData);
    // public System.Void .ctor()
    // Offset: 0x4415E38
    // Implemented from: Meta.Voice.Samples.TTSVoices.TTSSpeakerObserver
    // Base method: System.Void TTSSpeakerObserver::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static TTSSpeakerStatusLabel* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Samples::TTSVoices::TTSSpeakerStatusLabel::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<TTSSpeakerStatusLabel*, creationType>()));
    }
  }; // Meta.Voice.Samples.TTSVoices.TTSSpeakerStatusLabel
  #pragma pack(pop)
  static check_size<sizeof(TTSSpeakerStatusLabel), 40 + sizeof(::UnityEngine::UI::Text*)> __Meta_Voice_Samples_TTSVoices_TTSSpeakerStatusLabelSizeCheck;
  static_assert(sizeof(TTSSpeakerStatusLabel) == 0x30);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Meta::Voice::Samples::TTSVoices::TTSSpeakerStatusLabel::RefreshLabel
// Il2CppName: RefreshLabel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Meta::Voice::Samples::TTSVoices::TTSSpeakerStatusLabel::*)()>(&Meta::Voice::Samples::TTSVoices::TTSSpeakerStatusLabel::RefreshLabel)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Meta::Voice::Samples::TTSVoices::TTSSpeakerStatusLabel*), "RefreshLabel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Meta::Voice::Samples::TTSVoices::TTSSpeakerStatusLabel::OnEnable
// Il2CppName: OnEnable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Meta::Voice::Samples::TTSVoices::TTSSpeakerStatusLabel::*)()>(&Meta::Voice::Samples::TTSVoices::TTSSpeakerStatusLabel::OnEnable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Meta::Voice::Samples::TTSVoices::TTSSpeakerStatusLabel*), "OnEnable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Meta::Voice::Samples::TTSVoices::TTSSpeakerStatusLabel::OnLoadBegin
// Il2CppName: OnLoadBegin
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Meta::Voice::Samples::TTSVoices::TTSSpeakerStatusLabel::*)(::Meta::WitAi::TTS::Utilities::TTSSpeaker*, ::Meta::WitAi::TTS::Data::TTSClipData*)>(&Meta::Voice::Samples::TTSVoices::TTSSpeakerStatusLabel::OnLoadBegin)> {
  static const MethodInfo* get() {
    static auto* speaker = &::il2cpp_utils::GetClassFromName("Meta.WitAi.TTS.Utilities", "TTSSpeaker")->byval_arg;
    static auto* clipData = &::il2cpp_utils::GetClassFromName("Meta.WitAi.TTS.Data", "TTSClipData")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::Voice::Samples::TTSVoices::TTSSpeakerStatusLabel*), "OnLoadBegin", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{speaker, clipData});
  }
};
// Writing MetadataGetter for method: Meta::Voice::Samples::TTSVoices::TTSSpeakerStatusLabel::OnLoadAbort
// Il2CppName: OnLoadAbort
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Meta::Voice::Samples::TTSVoices::TTSSpeakerStatusLabel::*)(::Meta::WitAi::TTS::Utilities::TTSSpeaker*, ::Meta::WitAi::TTS::Data::TTSClipData*)>(&Meta::Voice::Samples::TTSVoices::TTSSpeakerStatusLabel::OnLoadAbort)> {
  static const MethodInfo* get() {
    static auto* speaker = &::il2cpp_utils::GetClassFromName("Meta.WitAi.TTS.Utilities", "TTSSpeaker")->byval_arg;
    static auto* clipData = &::il2cpp_utils::GetClassFromName("Meta.WitAi.TTS.Data", "TTSClipData")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::Voice::Samples::TTSVoices::TTSSpeakerStatusLabel*), "OnLoadAbort", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{speaker, clipData});
  }
};
// Writing MetadataGetter for method: Meta::Voice::Samples::TTSVoices::TTSSpeakerStatusLabel::OnLoadFailed
// Il2CppName: OnLoadFailed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Meta::Voice::Samples::TTSVoices::TTSSpeakerStatusLabel::*)(::Meta::WitAi::TTS::Utilities::TTSSpeaker*, ::Meta::WitAi::TTS::Data::TTSClipData*, ::StringW)>(&Meta::Voice::Samples::TTSVoices::TTSSpeakerStatusLabel::OnLoadFailed)> {
  static const MethodInfo* get() {
    static auto* speaker = &::il2cpp_utils::GetClassFromName("Meta.WitAi.TTS.Utilities", "TTSSpeaker")->byval_arg;
    static auto* clipData = &::il2cpp_utils::GetClassFromName("Meta.WitAi.TTS.Data", "TTSClipData")->byval_arg;
    static auto* error = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::Voice::Samples::TTSVoices::TTSSpeakerStatusLabel*), "OnLoadFailed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{speaker, clipData, error});
  }
};
// Writing MetadataGetter for method: Meta::Voice::Samples::TTSVoices::TTSSpeakerStatusLabel::OnLoadSuccess
// Il2CppName: OnLoadSuccess
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Meta::Voice::Samples::TTSVoices::TTSSpeakerStatusLabel::*)(::Meta::WitAi::TTS::Utilities::TTSSpeaker*, ::Meta::WitAi::TTS::Data::TTSClipData*)>(&Meta::Voice::Samples::TTSVoices::TTSSpeakerStatusLabel::OnLoadSuccess)> {
  static const MethodInfo* get() {
    static auto* speaker = &::il2cpp_utils::GetClassFromName("Meta.WitAi.TTS.Utilities", "TTSSpeaker")->byval_arg;
    static auto* clipData = &::il2cpp_utils::GetClassFromName("Meta.WitAi.TTS.Data", "TTSClipData")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::Voice::Samples::TTSVoices::TTSSpeakerStatusLabel*), "OnLoadSuccess", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{speaker, clipData});
  }
};
// Writing MetadataGetter for method: Meta::Voice::Samples::TTSVoices::TTSSpeakerStatusLabel::OnPlaybackReady
// Il2CppName: OnPlaybackReady
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Meta::Voice::Samples::TTSVoices::TTSSpeakerStatusLabel::*)(::Meta::WitAi::TTS::Utilities::TTSSpeaker*, ::Meta::WitAi::TTS::Data::TTSClipData*)>(&Meta::Voice::Samples::TTSVoices::TTSSpeakerStatusLabel::OnPlaybackReady)> {
  static const MethodInfo* get() {
    static auto* speaker = &::il2cpp_utils::GetClassFromName("Meta.WitAi.TTS.Utilities", "TTSSpeaker")->byval_arg;
    static auto* clipData = &::il2cpp_utils::GetClassFromName("Meta.WitAi.TTS.Data", "TTSClipData")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::Voice::Samples::TTSVoices::TTSSpeakerStatusLabel*), "OnPlaybackReady", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{speaker, clipData});
  }
};
// Writing MetadataGetter for method: Meta::Voice::Samples::TTSVoices::TTSSpeakerStatusLabel::OnPlaybackStart
// Il2CppName: OnPlaybackStart
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Meta::Voice::Samples::TTSVoices::TTSSpeakerStatusLabel::*)(::Meta::WitAi::TTS::Utilities::TTSSpeaker*, ::Meta::WitAi::TTS::Data::TTSClipData*)>(&Meta::Voice::Samples::TTSVoices::TTSSpeakerStatusLabel::OnPlaybackStart)> {
  static const MethodInfo* get() {
    static auto* speaker = &::il2cpp_utils::GetClassFromName("Meta.WitAi.TTS.Utilities", "TTSSpeaker")->byval_arg;
    static auto* clipData = &::il2cpp_utils::GetClassFromName("Meta.WitAi.TTS.Data", "TTSClipData")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::Voice::Samples::TTSVoices::TTSSpeakerStatusLabel*), "OnPlaybackStart", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{speaker, clipData});
  }
};
// Writing MetadataGetter for method: Meta::Voice::Samples::TTSVoices::TTSSpeakerStatusLabel::OnPlaybackCancelled
// Il2CppName: OnPlaybackCancelled
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Meta::Voice::Samples::TTSVoices::TTSSpeakerStatusLabel::*)(::Meta::WitAi::TTS::Utilities::TTSSpeaker*, ::Meta::WitAi::TTS::Data::TTSClipData*, ::StringW)>(&Meta::Voice::Samples::TTSVoices::TTSSpeakerStatusLabel::OnPlaybackCancelled)> {
  static const MethodInfo* get() {
    static auto* speaker = &::il2cpp_utils::GetClassFromName("Meta.WitAi.TTS.Utilities", "TTSSpeaker")->byval_arg;
    static auto* clipData = &::il2cpp_utils::GetClassFromName("Meta.WitAi.TTS.Data", "TTSClipData")->byval_arg;
    static auto* reason = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::Voice::Samples::TTSVoices::TTSSpeakerStatusLabel*), "OnPlaybackCancelled", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{speaker, clipData, reason});
  }
};
// Writing MetadataGetter for method: Meta::Voice::Samples::TTSVoices::TTSSpeakerStatusLabel::OnPlaybackComplete
// Il2CppName: OnPlaybackComplete
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Meta::Voice::Samples::TTSVoices::TTSSpeakerStatusLabel::*)(::Meta::WitAi::TTS::Utilities::TTSSpeaker*, ::Meta::WitAi::TTS::Data::TTSClipData*)>(&Meta::Voice::Samples::TTSVoices::TTSSpeakerStatusLabel::OnPlaybackComplete)> {
  static const MethodInfo* get() {
    static auto* speaker = &::il2cpp_utils::GetClassFromName("Meta.WitAi.TTS.Utilities", "TTSSpeaker")->byval_arg;
    static auto* clipData = &::il2cpp_utils::GetClassFromName("Meta.WitAi.TTS.Data", "TTSClipData")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::Voice::Samples::TTSVoices::TTSSpeakerStatusLabel*), "OnPlaybackComplete", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{speaker, clipData});
  }
};
// Writing MetadataGetter for method: Meta::Voice::Samples::TTSVoices::TTSSpeakerStatusLabel::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
