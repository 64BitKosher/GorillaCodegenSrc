// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Meta.Voice.Samples.Chess.ChessBoardController
#include "Meta/Voice/Samples/Chess/ChessBoardController.hpp"
// Including type: System.Enum
#include "System/Enum.hpp"
// Completed includes
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::Meta::Voice::Samples::Chess::ChessBoardController::ChessBoardLetter, "Meta.Voice.Samples.Chess", "ChessBoardController/ChessBoardLetter");
// Type namespace: Meta.Voice.Samples.Chess
namespace Meta::Voice::Samples::Chess {
  // Size: 0x4
  #pragma pack(push, 1)
  // Autogenerated type: Meta.Voice.Samples.Chess.ChessBoardController/ChessBoardLetter
  // [TokenAttribute] Offset: FFFFFFFF
  struct ChessBoardController::ChessBoardLetter/*, public ::System::Enum*/ {
    public:
    public:
    // public System.Int32 value__
    // Size: 0x4
    // Offset: 0x0
    int value;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Creating value type constructor for type: ChessBoardLetter
    constexpr ChessBoardLetter(int value_ = {}) noexcept : value{value_} {}
    // Creating interface conversion operator: operator ::System::Enum
    operator ::System::Enum() noexcept {
      return *reinterpret_cast<::System::Enum*>(this);
    }
    // Creating conversion operator: operator int
    constexpr operator int() const noexcept {
      return value;
    }
    // static field const value: static public Meta.Voice.Samples.Chess.ChessBoardController/ChessBoardLetter A
    static constexpr const int A = 0;
    // Get static field: static public Meta.Voice.Samples.Chess.ChessBoardController/ChessBoardLetter A
    static ::Meta::Voice::Samples::Chess::ChessBoardController::ChessBoardLetter _get_A();
    // Set static field: static public Meta.Voice.Samples.Chess.ChessBoardController/ChessBoardLetter A
    static void _set_A(::Meta::Voice::Samples::Chess::ChessBoardController::ChessBoardLetter value);
    // static field const value: static public Meta.Voice.Samples.Chess.ChessBoardController/ChessBoardLetter B
    static constexpr const int B = 1;
    // Get static field: static public Meta.Voice.Samples.Chess.ChessBoardController/ChessBoardLetter B
    static ::Meta::Voice::Samples::Chess::ChessBoardController::ChessBoardLetter _get_B();
    // Set static field: static public Meta.Voice.Samples.Chess.ChessBoardController/ChessBoardLetter B
    static void _set_B(::Meta::Voice::Samples::Chess::ChessBoardController::ChessBoardLetter value);
    // static field const value: static public Meta.Voice.Samples.Chess.ChessBoardController/ChessBoardLetter C
    static constexpr const int C = 2;
    // Get static field: static public Meta.Voice.Samples.Chess.ChessBoardController/ChessBoardLetter C
    static ::Meta::Voice::Samples::Chess::ChessBoardController::ChessBoardLetter _get_C();
    // Set static field: static public Meta.Voice.Samples.Chess.ChessBoardController/ChessBoardLetter C
    static void _set_C(::Meta::Voice::Samples::Chess::ChessBoardController::ChessBoardLetter value);
    // static field const value: static public Meta.Voice.Samples.Chess.ChessBoardController/ChessBoardLetter D
    static constexpr const int D = 3;
    // Get static field: static public Meta.Voice.Samples.Chess.ChessBoardController/ChessBoardLetter D
    static ::Meta::Voice::Samples::Chess::ChessBoardController::ChessBoardLetter _get_D();
    // Set static field: static public Meta.Voice.Samples.Chess.ChessBoardController/ChessBoardLetter D
    static void _set_D(::Meta::Voice::Samples::Chess::ChessBoardController::ChessBoardLetter value);
    // static field const value: static public Meta.Voice.Samples.Chess.ChessBoardController/ChessBoardLetter E
    static constexpr const int E = 4;
    // Get static field: static public Meta.Voice.Samples.Chess.ChessBoardController/ChessBoardLetter E
    static ::Meta::Voice::Samples::Chess::ChessBoardController::ChessBoardLetter _get_E();
    // Set static field: static public Meta.Voice.Samples.Chess.ChessBoardController/ChessBoardLetter E
    static void _set_E(::Meta::Voice::Samples::Chess::ChessBoardController::ChessBoardLetter value);
    // static field const value: static public Meta.Voice.Samples.Chess.ChessBoardController/ChessBoardLetter F
    static constexpr const int F = 5;
    // Get static field: static public Meta.Voice.Samples.Chess.ChessBoardController/ChessBoardLetter F
    static ::Meta::Voice::Samples::Chess::ChessBoardController::ChessBoardLetter _get_F();
    // Set static field: static public Meta.Voice.Samples.Chess.ChessBoardController/ChessBoardLetter F
    static void _set_F(::Meta::Voice::Samples::Chess::ChessBoardController::ChessBoardLetter value);
    // static field const value: static public Meta.Voice.Samples.Chess.ChessBoardController/ChessBoardLetter G
    static constexpr const int G = 6;
    // Get static field: static public Meta.Voice.Samples.Chess.ChessBoardController/ChessBoardLetter G
    static ::Meta::Voice::Samples::Chess::ChessBoardController::ChessBoardLetter _get_G();
    // Set static field: static public Meta.Voice.Samples.Chess.ChessBoardController/ChessBoardLetter G
    static void _set_G(::Meta::Voice::Samples::Chess::ChessBoardController::ChessBoardLetter value);
    // static field const value: static public Meta.Voice.Samples.Chess.ChessBoardController/ChessBoardLetter H
    static constexpr const int H = 7;
    // Get static field: static public Meta.Voice.Samples.Chess.ChessBoardController/ChessBoardLetter H
    static ::Meta::Voice::Samples::Chess::ChessBoardController::ChessBoardLetter _get_H();
    // Set static field: static public Meta.Voice.Samples.Chess.ChessBoardController/ChessBoardLetter H
    static void _set_H(::Meta::Voice::Samples::Chess::ChessBoardController::ChessBoardLetter value);
    // Get instance field reference: public System.Int32 value__
    [[deprecated("Use field access instead!")]] int& dyn_value__();
  }; // Meta.Voice.Samples.Chess.ChessBoardController/ChessBoardLetter
  #pragma pack(pop)
  static check_size<sizeof(ChessBoardController::ChessBoardLetter), 0 + sizeof(int)> __Meta_Voice_Samples_Chess_ChessBoardController_ChessBoardLetterSizeCheck;
  static_assert(sizeof(ChessBoardController::ChessBoardLetter) == 0x4);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
