// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::Events
namespace UnityEngine::Events {
  // Forward declaring type: UnityEventBase
  class UnityEventBase;
}
// Completed forward declares
// Type namespace: Meta.Voice
namespace Meta::Voice {
  // Forward declaring type: IVoiceRequestEvents`1<TUnityEvent>
  template<typename TUnityEvent>
  class IVoiceRequestEvents_1;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE_GENERIC_CLASS(::Meta::Voice::IVoiceRequestEvents_1, "Meta.Voice", "IVoiceRequestEvents`1");
// Type namespace: Meta.Voice
namespace Meta::Voice {
  // WARNING Size may be invalid!
  // Autogenerated type: Meta.Voice.IVoiceRequestEvents`1
  // [TokenAttribute] Offset: FFFFFFFF
  template<typename TUnityEvent>
  class IVoiceRequestEvents_1 {
    public:
    // public TUnityEvent get_OnStateChange()
    // Offset: 0xFFFFFFFFFFFFFFFF
    TUnityEvent get_OnStateChange() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::IVoiceRequestEvents_1::get_OnStateChange");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Voice::IVoiceRequestEvents_1<TUnityEvent>*), -1));
      return ::il2cpp_utils::RunMethodRethrow<TUnityEvent, false>(this, ___internal__method);
    }
    // public TUnityEvent get_OnDownloadProgressChange()
    // Offset: 0xFFFFFFFFFFFFFFFF
    TUnityEvent get_OnDownloadProgressChange() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::IVoiceRequestEvents_1::get_OnDownloadProgressChange");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Voice::IVoiceRequestEvents_1<TUnityEvent>*), -1));
      return ::il2cpp_utils::RunMethodRethrow<TUnityEvent, false>(this, ___internal__method);
    }
    // public TUnityEvent get_OnUploadProgressChange()
    // Offset: 0xFFFFFFFFFFFFFFFF
    TUnityEvent get_OnUploadProgressChange() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::IVoiceRequestEvents_1::get_OnUploadProgressChange");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Voice::IVoiceRequestEvents_1<TUnityEvent>*), -1));
      return ::il2cpp_utils::RunMethodRethrow<TUnityEvent, false>(this, ___internal__method);
    }
    // public TUnityEvent get_OnInit()
    // Offset: 0xFFFFFFFFFFFFFFFF
    TUnityEvent get_OnInit() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::IVoiceRequestEvents_1::get_OnInit");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Voice::IVoiceRequestEvents_1<TUnityEvent>*), -1));
      return ::il2cpp_utils::RunMethodRethrow<TUnityEvent, false>(this, ___internal__method);
    }
    // public TUnityEvent get_OnSend()
    // Offset: 0xFFFFFFFFFFFFFFFF
    TUnityEvent get_OnSend() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::IVoiceRequestEvents_1::get_OnSend");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Voice::IVoiceRequestEvents_1<TUnityEvent>*), -1));
      return ::il2cpp_utils::RunMethodRethrow<TUnityEvent, false>(this, ___internal__method);
    }
    // public TUnityEvent get_OnCancel()
    // Offset: 0xFFFFFFFFFFFFFFFF
    TUnityEvent get_OnCancel() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::IVoiceRequestEvents_1::get_OnCancel");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Voice::IVoiceRequestEvents_1<TUnityEvent>*), -1));
      return ::il2cpp_utils::RunMethodRethrow<TUnityEvent, false>(this, ___internal__method);
    }
    // public TUnityEvent get_OnFailed()
    // Offset: 0xFFFFFFFFFFFFFFFF
    TUnityEvent get_OnFailed() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::IVoiceRequestEvents_1::get_OnFailed");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Voice::IVoiceRequestEvents_1<TUnityEvent>*), -1));
      return ::il2cpp_utils::RunMethodRethrow<TUnityEvent, false>(this, ___internal__method);
    }
    // public TUnityEvent get_OnSuccess()
    // Offset: 0xFFFFFFFFFFFFFFFF
    TUnityEvent get_OnSuccess() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::IVoiceRequestEvents_1::get_OnSuccess");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Voice::IVoiceRequestEvents_1<TUnityEvent>*), -1));
      return ::il2cpp_utils::RunMethodRethrow<TUnityEvent, false>(this, ___internal__method);
    }
    // public TUnityEvent get_OnComplete()
    // Offset: 0xFFFFFFFFFFFFFFFF
    TUnityEvent get_OnComplete() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::IVoiceRequestEvents_1::get_OnComplete");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Voice::IVoiceRequestEvents_1<TUnityEvent>*), -1));
      return ::il2cpp_utils::RunMethodRethrow<TUnityEvent, false>(this, ___internal__method);
    }
  }; // Meta.Voice.IVoiceRequestEvents`1
  // Could not write size check! Type: Meta.Voice.IVoiceRequestEvents`1 is generic, or has no fields that are valid for size checks!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
