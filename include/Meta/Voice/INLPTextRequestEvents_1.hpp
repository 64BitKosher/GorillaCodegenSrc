// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Meta.Voice.INLPRequestEvents`1
#include "Meta/Voice/INLPRequestEvents_1.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::Events
namespace UnityEngine::Events {
  // Forward declaring type: UnityEventBase
  class UnityEventBase;
}
// Completed forward declares
// Type namespace: Meta.Voice
namespace Meta::Voice {
  // Forward declaring type: INLPTextRequestEvents`1<TUnityEvent>
  template<typename TUnityEvent>
  class INLPTextRequestEvents_1;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE_GENERIC_CLASS(::Meta::Voice::INLPTextRequestEvents_1, "Meta.Voice", "INLPTextRequestEvents`1");
// Type namespace: Meta.Voice
namespace Meta::Voice {
  // WARNING Size may be invalid!
  // Autogenerated type: Meta.Voice.INLPTextRequestEvents`1
  // [TokenAttribute] Offset: FFFFFFFF
  template<typename TUnityEvent>
  class INLPTextRequestEvents_1/*, public ::Meta::Voice::INLPRequestEvents_1<TUnityEvent>*/ {
    public:
    // Creating interface conversion operator: operator ::Meta::Voice::INLPRequestEvents_1<TUnityEvent>
    operator ::Meta::Voice::INLPRequestEvents_1<TUnityEvent>() noexcept {
      return *reinterpret_cast<::Meta::Voice::INLPRequestEvents_1<TUnityEvent>*>(this);
    }
  }; // Meta.Voice.INLPTextRequestEvents`1
  // Could not write size check! Type: Meta.Voice.INLPTextRequestEvents`1 is generic, or has no fields that are valid for size checks!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
