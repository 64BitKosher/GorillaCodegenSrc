// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Meta.Voice.TranscriptionRequest`4
#include "Meta/Voice/TranscriptionRequest_4.hpp"
// Including type: Meta.Voice.INLPAudioRequest`4
#include "Meta/Voice/INLPAudioRequest_4.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::Events
namespace UnityEngine::Events {
  // Forward declaring type: UnityEventBase
  class UnityEventBase;
}
// Forward declaring namespace: Meta::Voice
namespace Meta::Voice {
  // Forward declaring type: INLPAudioRequestOptions
  class INLPAudioRequestOptions;
  // Forward declaring type: NLPAudioRequestEvents`1<TUnityEvent>
  template<typename TUnityEvent>
  class NLPAudioRequestEvents_1;
  // Forward declaring type: INLPAudioRequestResults
  class INLPAudioRequestResults;
}
// Forward declaring namespace: Meta::WitAi::Json
namespace Meta::WitAi::Json {
  // Forward declaring type: WitResponseNode
  class WitResponseNode;
}
// Completed forward declares
// Type namespace: Meta.Voice
namespace Meta::Voice {
  // Forward declaring type: NLPAudioRequest`4<TUnityEvent, TOptions, TEvents, TResults>
  template<typename TUnityEvent, typename TOptions, typename TEvents, typename TResults>
  class NLPAudioRequest_4;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE_GENERIC_CLASS(::Meta::Voice::NLPAudioRequest_4, "Meta.Voice", "NLPAudioRequest`4");
// Type namespace: Meta.Voice
namespace Meta::Voice {
  // WARNING Size may be invalid!
  // Autogenerated type: Meta.Voice.NLPAudioRequest`4
  // [TokenAttribute] Offset: FFFFFFFF
  template<typename TUnityEvent, typename TOptions, typename TEvents, typename TResults>
  class NLPAudioRequest_4 : public ::Meta::Voice::TranscriptionRequest_4<TUnityEvent, TOptions, TEvents, TResults>/*, public ::Meta::Voice::INLPAudioRequest_4<TUnityEvent, TOptions, TEvents, TResults>*/ {
    public:
    public:
    // private System.Boolean _isFinalized
    // Size: 0x1
    // Offset: 0x0
    bool isFinalized;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    public:
    // Creating interface conversion operator: operator ::Meta::Voice::INLPAudioRequest_4<TUnityEvent, TOptions, TEvents, TResults>
    operator ::Meta::Voice::INLPAudioRequest_4<TUnityEvent, TOptions, TEvents, TResults>() noexcept {
      return *reinterpret_cast<::Meta::Voice::INLPAudioRequest_4<TUnityEvent, TOptions, TEvents, TResults>*>(this);
    }
    // Deleting conversion operator: operator ::Meta::Voice::VoiceAudioInputState
    constexpr operator ::Meta::Voice::VoiceAudioInputState() const noexcept = delete;
    // Autogenerated instance field getter
    // Get instance field: private System.Boolean _isFinalized
    [[deprecated("Use field access instead!")]] bool& dyn__isFinalized() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::NLPAudioRequest_4::dyn__isFinalized");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isFinalized"))->offset;
      return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // public Meta.WitAi.Json.WitResponseNode get_ResponseData()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::Meta::WitAi::Json::WitResponseNode* get_ResponseData() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::NLPAudioRequest_4::get_ResponseData");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ResponseData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      return ::il2cpp_utils::RunMethodRethrow<::Meta::WitAi::Json::WitResponseNode*, false>(this, ___internal__method);
    }
    // protected System.Void HandlePartialNlpResponse(Meta.WitAi.Json.WitResponseNode responseData)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void HandlePartialNlpResponse(::Meta::WitAi::Json::WitResponseNode* responseData) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::NLPAudioRequest_4::HandlePartialNlpResponse");
      auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Voice::NLPAudioRequest_4<TUnityEvent, TOptions, TEvents, TResults>*), -1)));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, responseData);
    }
    // protected System.Void ApplyResultResponseData(Meta.WitAi.Json.WitResponseNode newData)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void ApplyResultResponseData(::Meta::WitAi::Json::WitResponseNode* newData) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::NLPAudioRequest_4::ApplyResultResponseData");
      auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Voice::NLPAudioRequest_4<TUnityEvent, TOptions, TEvents, TResults>*), -1)));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newData);
    }
    // protected System.Void OnPartialResponse()
    // Offset: 0xFFFFFFFFFFFFFFFF
    void OnPartialResponse() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::NLPAudioRequest_4::OnPartialResponse");
      auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Voice::NLPAudioRequest_4<TUnityEvent, TOptions, TEvents, TResults>*), -1)));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
    }
    // protected System.Void HandleFinalNlpResponse(Meta.WitAi.Json.WitResponseNode responseData, System.String error)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void HandleFinalNlpResponse(::Meta::WitAi::Json::WitResponseNode* responseData, ::StringW error) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::NLPAudioRequest_4::HandleFinalNlpResponse");
      auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Voice::NLPAudioRequest_4<TUnityEvent, TOptions, TEvents, TResults>*), -1)));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, responseData, error);
    }
    // protected System.Void OnFullResponse()
    // Offset: 0xFFFFFFFFFFFFFFFF
    void OnFullResponse() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::NLPAudioRequest_4::OnFullResponse");
      auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Voice::NLPAudioRequest_4<TUnityEvent, TOptions, TEvents, TResults>*), -1)));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
    }
    // public System.Void CompleteEarly()
    // Offset: 0xFFFFFFFFFFFFFFFF
    void CompleteEarly() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::NLPAudioRequest_4::CompleteEarly");
      auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Voice::NLPAudioRequest_4<TUnityEvent, TOptions, TEvents, TResults>*), -1)));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
    }
    // protected System.Void .ctor(TOptions newOptions, TEvents newEvents)
    // Offset: 0xFFFFFFFFFFFFFFFF
    // Implemented from: Meta.Voice.TranscriptionRequest`4
    // Base method: System.Void TranscriptionRequest_4::.ctor(TOptions newOptions, TEvents newEvents)
    // Base method: System.Void VoiceRequest_4::.ctor(TOptions newOptions, TEvents newEvents)
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static NLPAudioRequest_4<TUnityEvent, TOptions, TEvents, TResults>* New_ctor(TOptions newOptions, TEvents newEvents) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::NLPAudioRequest_4::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<NLPAudioRequest_4<TUnityEvent, TOptions, TEvents, TResults>*, creationType>(newOptions, newEvents)));
    }
    // protected override System.Void OnInit()
    // Offset: 0xFFFFFFFFFFFFFFFF
    // Implemented from: Meta.Voice.VoiceRequest`4
    // Base method: System.Void VoiceRequest_4::OnInit()
    void OnInit() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::NLPAudioRequest_4::OnInit");
      auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Voice::VoiceRequest_4<TUnityEvent, TOptions, TEvents, TResults>*), -1)));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
    }
  }; // Meta.Voice.NLPAudioRequest`4
  // Could not write size check! Type: Meta.Voice.NLPAudioRequest`4 is generic, or has no fields that are valid for size checks!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
