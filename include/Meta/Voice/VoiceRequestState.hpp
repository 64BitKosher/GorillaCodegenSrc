// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Enum
#include "System/Enum.hpp"
// Completed includes
// Type namespace: Meta.Voice
namespace Meta::Voice {
  // Forward declaring type: VoiceRequestState
  struct VoiceRequestState;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::Meta::Voice::VoiceRequestState, "Meta.Voice", "VoiceRequestState");
// Type namespace: Meta.Voice
namespace Meta::Voice {
  // Size: 0x4
  #pragma pack(push, 1)
  // Autogenerated type: Meta.Voice.VoiceRequestState
  // [TokenAttribute] Offset: FFFFFFFF
  struct VoiceRequestState/*, public ::System::Enum*/ {
    public:
    public:
    // public System.Int32 value__
    // Size: 0x4
    // Offset: 0x0
    int value;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Creating value type constructor for type: VoiceRequestState
    constexpr VoiceRequestState(int value_ = {}) noexcept : value{value_} {}
    // Creating interface conversion operator: operator ::System::Enum
    operator ::System::Enum() noexcept {
      return *reinterpret_cast<::System::Enum*>(this);
    }
    // Creating conversion operator: operator int
    constexpr operator int() const noexcept {
      return value;
    }
    // static field const value: static public Meta.Voice.VoiceRequestState Initialized
    static constexpr const int Initialized = 0;
    // Get static field: static public Meta.Voice.VoiceRequestState Initialized
    static ::Meta::Voice::VoiceRequestState _get_Initialized();
    // Set static field: static public Meta.Voice.VoiceRequestState Initialized
    static void _set_Initialized(::Meta::Voice::VoiceRequestState value);
    // static field const value: static public Meta.Voice.VoiceRequestState Transmitting
    static constexpr const int Transmitting = 1;
    // Get static field: static public Meta.Voice.VoiceRequestState Transmitting
    static ::Meta::Voice::VoiceRequestState _get_Transmitting();
    // Set static field: static public Meta.Voice.VoiceRequestState Transmitting
    static void _set_Transmitting(::Meta::Voice::VoiceRequestState value);
    // static field const value: static public Meta.Voice.VoiceRequestState Canceled
    static constexpr const int Canceled = 2;
    // Get static field: static public Meta.Voice.VoiceRequestState Canceled
    static ::Meta::Voice::VoiceRequestState _get_Canceled();
    // Set static field: static public Meta.Voice.VoiceRequestState Canceled
    static void _set_Canceled(::Meta::Voice::VoiceRequestState value);
    // static field const value: static public Meta.Voice.VoiceRequestState Failed
    static constexpr const int Failed = 3;
    // Get static field: static public Meta.Voice.VoiceRequestState Failed
    static ::Meta::Voice::VoiceRequestState _get_Failed();
    // Set static field: static public Meta.Voice.VoiceRequestState Failed
    static void _set_Failed(::Meta::Voice::VoiceRequestState value);
    // static field const value: static public Meta.Voice.VoiceRequestState Successful
    static constexpr const int Successful = 4;
    // Get static field: static public Meta.Voice.VoiceRequestState Successful
    static ::Meta::Voice::VoiceRequestState _get_Successful();
    // Set static field: static public Meta.Voice.VoiceRequestState Successful
    static void _set_Successful(::Meta::Voice::VoiceRequestState value);
    // Get instance field reference: public System.Int32 value__
    [[deprecated("Use field access instead!")]] int& dyn_value__();
  }; // Meta.Voice.VoiceRequestState
  #pragma pack(pop)
  static check_size<sizeof(VoiceRequestState), 0 + sizeof(int)> __Meta_Voice_VoiceRequestStateSizeCheck;
  static_assert(sizeof(VoiceRequestState) == 0x4);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
