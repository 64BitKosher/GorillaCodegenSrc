// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Meta.Voice.IVoiceRequest`4
#include "Meta/Voice/IVoiceRequest_4.hpp"
// Including type: Meta.Voice.VoiceAudioInputState
#include "Meta/Voice/VoiceAudioInputState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::Events
namespace UnityEngine::Events {
  // Forward declaring type: UnityEventBase
  class UnityEventBase;
}
// Forward declaring namespace: Meta::Voice
namespace Meta::Voice {
  // Forward declaring type: ITranscriptionRequestOptions
  class ITranscriptionRequestOptions;
  // Forward declaring type: ITranscriptionRequestEvents`1<TUnityEvent>
  template<typename TUnityEvent>
  class ITranscriptionRequestEvents_1;
  // Forward declaring type: ITranscriptionRequestResults
  class ITranscriptionRequestResults;
}
// Completed forward declares
// Type namespace: Meta.Voice
namespace Meta::Voice {
  // Forward declaring type: ITranscriptionRequest`4<TUnityEvent, TOptions, TEvents, TResults>
  template<typename TUnityEvent, typename TOptions, typename TEvents, typename TResults>
  class ITranscriptionRequest_4;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE_GENERIC_CLASS(::Meta::Voice::ITranscriptionRequest_4, "Meta.Voice", "ITranscriptionRequest`4");
// Type namespace: Meta.Voice
namespace Meta::Voice {
  // WARNING Size may be invalid!
  // Autogenerated type: Meta.Voice.ITranscriptionRequest`4
  // [TokenAttribute] Offset: FFFFFFFF
  template<typename TUnityEvent, typename TOptions, typename TEvents, typename TResults>
  class ITranscriptionRequest_4/*, public ::Meta::Voice::IVoiceRequest_4<TUnityEvent, TOptions, TEvents, TResults>*/ {
    public:
    // Creating interface conversion operator: operator ::Meta::Voice::IVoiceRequest_4<TUnityEvent, TOptions, TEvents, TResults>
    operator ::Meta::Voice::IVoiceRequest_4<TUnityEvent, TOptions, TEvents, TResults>() noexcept {
      return *reinterpret_cast<::Meta::Voice::IVoiceRequest_4<TUnityEvent, TOptions, TEvents, TResults>*>(this);
    }
    // public Meta.Voice.VoiceAudioInputState get_AudioInputState()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::Meta::Voice::VoiceAudioInputState get_AudioInputState() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::ITranscriptionRequest_4::get_AudioInputState");
      auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Voice::ITranscriptionRequest_4<TUnityEvent, TOptions, TEvents, TResults>*), -1)));
      return ::il2cpp_utils::RunMethodRethrow<::Meta::Voice::VoiceAudioInputState, false>(this, ___internal__method);
    }
    // public System.Boolean get_IsAudioInputActivated()
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool get_IsAudioInputActivated() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::ITranscriptionRequest_4::get_IsAudioInputActivated");
      auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Voice::ITranscriptionRequest_4<TUnityEvent, TOptions, TEvents, TResults>*), -1)));
      return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
    }
    // public System.Boolean get_IsListening()
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool get_IsListening() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::ITranscriptionRequest_4::get_IsListening");
      auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Voice::ITranscriptionRequest_4<TUnityEvent, TOptions, TEvents, TResults>*), -1)));
      return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
    }
    // public System.Boolean get_CanActivateAudio()
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool get_CanActivateAudio() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::ITranscriptionRequest_4::get_CanActivateAudio");
      auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Voice::ITranscriptionRequest_4<TUnityEvent, TOptions, TEvents, TResults>*), -1)));
      return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
    }
    // public System.Void ActivateAudio()
    // Offset: 0xFFFFFFFFFFFFFFFF
    void ActivateAudio() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::ITranscriptionRequest_4::ActivateAudio");
      auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Voice::ITranscriptionRequest_4<TUnityEvent, TOptions, TEvents, TResults>*), -1)));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
    }
    // public System.Boolean get_CanDeactivateAudio()
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool get_CanDeactivateAudio() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::ITranscriptionRequest_4::get_CanDeactivateAudio");
      auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Voice::ITranscriptionRequest_4<TUnityEvent, TOptions, TEvents, TResults>*), -1)));
      return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
    }
    // public System.Void DeactivateAudio()
    // Offset: 0xFFFFFFFFFFFFFFFF
    void DeactivateAudio() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::ITranscriptionRequest_4::DeactivateAudio");
      auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Voice::ITranscriptionRequest_4<TUnityEvent, TOptions, TEvents, TResults>*), -1)));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
    }
  }; // Meta.Voice.ITranscriptionRequest`4
  // Could not write size check! Type: Meta.Voice.ITranscriptionRequest`4 is generic, or has no fields that are valid for size checks!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
