// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Meta::Voice::Audio
namespace Meta::Voice::Audio {
  // Forward declaring type: IAudioClipStream
  class IAudioClipStream;
}
// Completed forward declares
// Type namespace: Meta.Voice.Audio
namespace Meta::Voice::Audio {
  // Forward declaring type: IAudioPlayer
  class IAudioPlayer;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Meta::Voice::Audio::IAudioPlayer);
DEFINE_IL2CPP_ARG_TYPE(::Meta::Voice::Audio::IAudioPlayer*, "Meta.Voice.Audio", "IAudioPlayer");
// Type namespace: Meta.Voice.Audio
namespace Meta::Voice::Audio {
  // Size: 0x0
  #pragma pack(push, 1)
  // Autogenerated type: Meta.Voice.Audio.IAudioPlayer
  // [TokenAttribute] Offset: FFFFFFFF
  class IAudioPlayer {
    public:
    // public Meta.Voice.Audio.IAudioClipStream get_ClipStream()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::Meta::Voice::Audio::IAudioClipStream* get_ClipStream();
    // public System.Boolean get_IsPlaying()
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool get_IsPlaying();
    // public System.Int32 get_ElapsedSamples()
    // Offset: 0xFFFFFFFFFFFFFFFF
    int get_ElapsedSamples();
    // public System.Void Init()
    // Offset: 0xFFFFFFFFFFFFFFFF
    void Init();
    // public System.String GetPlaybackErrors()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::StringW GetPlaybackErrors();
    // public System.Void Play(Meta.Voice.Audio.IAudioClipStream clipStream, System.Int32 offsetSamples)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void Play(::Meta::Voice::Audio::IAudioClipStream* clipStream, int offsetSamples);
    // public System.Void Pause()
    // Offset: 0xFFFFFFFFFFFFFFFF
    void Pause();
    // public System.Void Resume()
    // Offset: 0xFFFFFFFFFFFFFFFF
    void Resume();
    // public System.Void Stop()
    // Offset: 0xFFFFFFFFFFFFFFFF
    void Stop();
  }; // Meta.Voice.Audio.IAudioPlayer
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Meta::Voice::Audio::IAudioPlayer::get_ClipStream
// Il2CppName: get_ClipStream
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Meta::Voice::Audio::IAudioClipStream* (Meta::Voice::Audio::IAudioPlayer::*)()>(&Meta::Voice::Audio::IAudioPlayer::get_ClipStream)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Meta::Voice::Audio::IAudioPlayer*), "get_ClipStream", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Meta::Voice::Audio::IAudioPlayer::get_IsPlaying
// Il2CppName: get_IsPlaying
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Meta::Voice::Audio::IAudioPlayer::*)()>(&Meta::Voice::Audio::IAudioPlayer::get_IsPlaying)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Meta::Voice::Audio::IAudioPlayer*), "get_IsPlaying", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Meta::Voice::Audio::IAudioPlayer::get_ElapsedSamples
// Il2CppName: get_ElapsedSamples
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Meta::Voice::Audio::IAudioPlayer::*)()>(&Meta::Voice::Audio::IAudioPlayer::get_ElapsedSamples)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Meta::Voice::Audio::IAudioPlayer*), "get_ElapsedSamples", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Meta::Voice::Audio::IAudioPlayer::Init
// Il2CppName: Init
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Meta::Voice::Audio::IAudioPlayer::*)()>(&Meta::Voice::Audio::IAudioPlayer::Init)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Meta::Voice::Audio::IAudioPlayer*), "Init", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Meta::Voice::Audio::IAudioPlayer::GetPlaybackErrors
// Il2CppName: GetPlaybackErrors
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (Meta::Voice::Audio::IAudioPlayer::*)()>(&Meta::Voice::Audio::IAudioPlayer::GetPlaybackErrors)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Meta::Voice::Audio::IAudioPlayer*), "GetPlaybackErrors", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Meta::Voice::Audio::IAudioPlayer::Play
// Il2CppName: Play
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Meta::Voice::Audio::IAudioPlayer::*)(::Meta::Voice::Audio::IAudioClipStream*, int)>(&Meta::Voice::Audio::IAudioPlayer::Play)> {
  static const MethodInfo* get() {
    static auto* clipStream = &::il2cpp_utils::GetClassFromName("Meta.Voice.Audio", "IAudioClipStream")->byval_arg;
    static auto* offsetSamples = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::Voice::Audio::IAudioPlayer*), "Play", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{clipStream, offsetSamples});
  }
};
// Writing MetadataGetter for method: Meta::Voice::Audio::IAudioPlayer::Pause
// Il2CppName: Pause
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Meta::Voice::Audio::IAudioPlayer::*)()>(&Meta::Voice::Audio::IAudioPlayer::Pause)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Meta::Voice::Audio::IAudioPlayer*), "Pause", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Meta::Voice::Audio::IAudioPlayer::Resume
// Il2CppName: Resume
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Meta::Voice::Audio::IAudioPlayer::*)()>(&Meta::Voice::Audio::IAudioPlayer::Resume)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Meta::Voice::Audio::IAudioPlayer*), "Resume", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Meta::Voice::Audio::IAudioPlayer::Stop
// Il2CppName: Stop
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Meta::Voice::Audio::IAudioPlayer::*)()>(&Meta::Voice::Audio::IAudioPlayer::Stop)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Meta::Voice::Audio::IAudioPlayer*), "Stop", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
