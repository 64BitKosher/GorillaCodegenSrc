// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.MulticastDelegate
#include "System/MulticastDelegate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Meta::Voice::Audio
namespace Meta::Voice::Audio {
  // Forward declaring type: IAudioClipStream
  class IAudioClipStream;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: IAsyncResult
  class IAsyncResult;
  // Forward declaring type: AsyncCallback
  class AsyncCallback;
}
// Completed forward declares
// Type namespace: Meta.Voice.Audio
namespace Meta::Voice::Audio {
  // Forward declaring type: AudioClipStreamDelegate
  class AudioClipStreamDelegate;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Meta::Voice::Audio::AudioClipStreamDelegate);
DEFINE_IL2CPP_ARG_TYPE(::Meta::Voice::Audio::AudioClipStreamDelegate*, "Meta.Voice.Audio", "AudioClipStreamDelegate");
// Type namespace: Meta.Voice.Audio
namespace Meta::Voice::Audio {
  // Size: 0x80
  #pragma pack(push, 1)
  // Autogenerated type: Meta.Voice.Audio.AudioClipStreamDelegate
  // [TokenAttribute] Offset: FFFFFFFF
  class AudioClipStreamDelegate : public ::System::MulticastDelegate {
    public:
    // public System.Void .ctor(System.Object object, System.IntPtr method)
    // Offset: 0x443D540
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static AudioClipStreamDelegate* New_ctor(::Il2CppObject* object, ::System::IntPtr method) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Audio::AudioClipStreamDelegate::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<AudioClipStreamDelegate*, creationType>(object, method)));
    }
    // public System.Void Invoke(Meta.Voice.Audio.IAudioClipStream clipStream)
    // Offset: 0x443D648
    void Invoke(::Meta::Voice::Audio::IAudioClipStream* clipStream);
    // public System.IAsyncResult BeginInvoke(Meta.Voice.Audio.IAudioClipStream clipStream, System.AsyncCallback callback, System.Object object)
    // Offset: 0x443D65C
    ::System::IAsyncResult* BeginInvoke(::Meta::Voice::Audio::IAudioClipStream* clipStream, ::System::AsyncCallback* callback, ::Il2CppObject* object);
    // public System.Void EndInvoke(System.IAsyncResult result)
    // Offset: 0x443D67C
    void EndInvoke(::System::IAsyncResult* result);
  }; // Meta.Voice.Audio.AudioClipStreamDelegate
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Meta::Voice::Audio::AudioClipStreamDelegate::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: Meta::Voice::Audio::AudioClipStreamDelegate::Invoke
// Il2CppName: Invoke
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Meta::Voice::Audio::AudioClipStreamDelegate::*)(::Meta::Voice::Audio::IAudioClipStream*)>(&Meta::Voice::Audio::AudioClipStreamDelegate::Invoke)> {
  static const MethodInfo* get() {
    static auto* clipStream = &::il2cpp_utils::GetClassFromName("Meta.Voice.Audio", "IAudioClipStream")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::Voice::Audio::AudioClipStreamDelegate*), "Invoke", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{clipStream});
  }
};
// Writing MetadataGetter for method: Meta::Voice::Audio::AudioClipStreamDelegate::BeginInvoke
// Il2CppName: BeginInvoke
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IAsyncResult* (Meta::Voice::Audio::AudioClipStreamDelegate::*)(::Meta::Voice::Audio::IAudioClipStream*, ::System::AsyncCallback*, ::Il2CppObject*)>(&Meta::Voice::Audio::AudioClipStreamDelegate::BeginInvoke)> {
  static const MethodInfo* get() {
    static auto* clipStream = &::il2cpp_utils::GetClassFromName("Meta.Voice.Audio", "IAudioClipStream")->byval_arg;
    static auto* callback = &::il2cpp_utils::GetClassFromName("System", "AsyncCallback")->byval_arg;
    static auto* object = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::Voice::Audio::AudioClipStreamDelegate*), "BeginInvoke", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{clipStream, callback, object});
  }
};
// Writing MetadataGetter for method: Meta::Voice::Audio::AudioClipStreamDelegate::EndInvoke
// Il2CppName: EndInvoke
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Meta::Voice::Audio::AudioClipStreamDelegate::*)(::System::IAsyncResult*)>(&Meta::Voice::Audio::AudioClipStreamDelegate::EndInvoke)> {
  static const MethodInfo* get() {
    static auto* result = &::il2cpp_utils::GetClassFromName("System", "IAsyncResult")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::Voice::Audio::AudioClipStreamDelegate*), "EndInvoke", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{result});
  }
};
