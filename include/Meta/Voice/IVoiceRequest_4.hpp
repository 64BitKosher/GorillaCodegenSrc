// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Meta.Voice.VoiceRequestState
#include "Meta/Voice/VoiceRequestState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::Events
namespace UnityEngine::Events {
  // Forward declaring type: UnityEventBase
  class UnityEventBase;
}
// Forward declaring namespace: Meta::Voice
namespace Meta::Voice {
  // Forward declaring type: IVoiceRequestOptions
  class IVoiceRequestOptions;
  // Forward declaring type: IVoiceRequestEvents`1<TUnityEvent>
  template<typename TUnityEvent>
  class IVoiceRequestEvents_1;
  // Forward declaring type: IVoiceRequestResults
  class IVoiceRequestResults;
}
// Completed forward declares
// Type namespace: Meta.Voice
namespace Meta::Voice {
  // Forward declaring type: IVoiceRequest`4<TUnityEvent, TOptions, TEvents, TResults>
  template<typename TUnityEvent, typename TOptions, typename TEvents, typename TResults>
  class IVoiceRequest_4;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE_GENERIC_CLASS(::Meta::Voice::IVoiceRequest_4, "Meta.Voice", "IVoiceRequest`4");
// Type namespace: Meta.Voice
namespace Meta::Voice {
  // WARNING Size may be invalid!
  // Autogenerated type: Meta.Voice.IVoiceRequest`4
  // [TokenAttribute] Offset: FFFFFFFF
  template<typename TUnityEvent, typename TOptions, typename TEvents, typename TResults>
  class IVoiceRequest_4 {
    public:
    // public Meta.Voice.VoiceRequestState get_State()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::Meta::Voice::VoiceRequestState get_State() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::IVoiceRequest_4::get_State");
      auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Voice::IVoiceRequest_4<TUnityEvent, TOptions, TEvents, TResults>*), -1)));
      return ::il2cpp_utils::RunMethodRethrow<::Meta::Voice::VoiceRequestState, false>(this, ___internal__method);
    }
    // public System.Single get_DownloadProgress()
    // Offset: 0xFFFFFFFFFFFFFFFF
    float get_DownloadProgress() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::IVoiceRequest_4::get_DownloadProgress");
      auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Voice::IVoiceRequest_4<TUnityEvent, TOptions, TEvents, TResults>*), -1)));
      return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
    }
    // public System.Single get_UploadProgress()
    // Offset: 0xFFFFFFFFFFFFFFFF
    float get_UploadProgress() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::IVoiceRequest_4::get_UploadProgress");
      auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Voice::IVoiceRequest_4<TUnityEvent, TOptions, TEvents, TResults>*), -1)));
      return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
    }
    // public TOptions get_Options()
    // Offset: 0xFFFFFFFFFFFFFFFF
    TOptions get_Options() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::IVoiceRequest_4::get_Options");
      auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Voice::IVoiceRequest_4<TUnityEvent, TOptions, TEvents, TResults>*), -1)));
      return ::il2cpp_utils::RunMethodRethrow<TOptions, false>(this, ___internal__method);
    }
    // public TEvents get_Events()
    // Offset: 0xFFFFFFFFFFFFFFFF
    TEvents get_Events() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::IVoiceRequest_4::get_Events");
      auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Voice::IVoiceRequest_4<TUnityEvent, TOptions, TEvents, TResults>*), -1)));
      return ::il2cpp_utils::RunMethodRethrow<TEvents, false>(this, ___internal__method);
    }
    // public TResults get_Results()
    // Offset: 0xFFFFFFFFFFFFFFFF
    TResults get_Results() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::IVoiceRequest_4::get_Results");
      auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Voice::IVoiceRequest_4<TUnityEvent, TOptions, TEvents, TResults>*), -1)));
      return ::il2cpp_utils::RunMethodRethrow<TResults, false>(this, ___internal__method);
    }
    // public System.Boolean get_CanSend()
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool get_CanSend() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::IVoiceRequest_4::get_CanSend");
      auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Voice::IVoiceRequest_4<TUnityEvent, TOptions, TEvents, TResults>*), -1)));
      return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
    }
    // public System.Void Send()
    // Offset: 0xFFFFFFFFFFFFFFFF
    void Send() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::IVoiceRequest_4::Send");
      auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Voice::IVoiceRequest_4<TUnityEvent, TOptions, TEvents, TResults>*), -1)));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
    }
    // public System.Void Cancel(System.String message)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void Cancel(::StringW message) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::IVoiceRequest_4::Cancel");
      auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Voice::IVoiceRequest_4<TUnityEvent, TOptions, TEvents, TResults>*), -1)));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message);
    }
  }; // Meta.Voice.IVoiceRequest`4
  // Could not write size check! Type: Meta.Voice.IVoiceRequest`4 is generic, or has no fields that are valid for size checks!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
