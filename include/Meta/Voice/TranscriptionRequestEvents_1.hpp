// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Meta.Voice.VoiceRequestEvents`1
#include "Meta/Voice/VoiceRequestEvents_1.hpp"
// Including type: Meta.Voice.ITranscriptionRequestEvents`1
#include "Meta/Voice/ITranscriptionRequestEvents_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::Events
namespace UnityEngine::Events {
  // Forward declaring type: UnityEventBase
  class UnityEventBase;
}
// Forward declaring namespace: Meta::Voice
namespace Meta::Voice {
  // Forward declaring type: TranscriptionRequestEvent
  class TranscriptionRequestEvent;
}
// Completed forward declares
// Type namespace: Meta.Voice
namespace Meta::Voice {
  // Forward declaring type: TranscriptionRequestEvents`1<TUnityEvent>
  template<typename TUnityEvent>
  class TranscriptionRequestEvents_1;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE_GENERIC_CLASS(::Meta::Voice::TranscriptionRequestEvents_1, "Meta.Voice", "TranscriptionRequestEvents`1");
// Type namespace: Meta.Voice
namespace Meta::Voice {
  // WARNING Size may be invalid!
  // Autogenerated type: Meta.Voice.TranscriptionRequestEvents`1
  // [TokenAttribute] Offset: FFFFFFFF
  template<typename TUnityEvent>
  class TranscriptionRequestEvents_1 : public ::Meta::Voice::VoiceRequestEvents_1<TUnityEvent>/*, public ::Meta::Voice::ITranscriptionRequestEvents_1<TUnityEvent>*/ {
    public:
    public:
    // private TUnityEvent _onAudioInputStateChange
    // Size: 0xFFFFFFFF
    // Offset: 0x0
    TUnityEvent onAudioInputStateChange;
    // private TUnityEvent _onAudioActivation
    // Size: 0xFFFFFFFF
    // Offset: 0x0
    TUnityEvent onAudioActivation;
    // private TUnityEvent _onStartListening
    // Size: 0xFFFFFFFF
    // Offset: 0x0
    TUnityEvent onStartListening;
    // private TUnityEvent _onAudioDeactivation
    // Size: 0xFFFFFFFF
    // Offset: 0x0
    TUnityEvent onAudioDeactivation;
    // private TUnityEvent _onStopListening
    // Size: 0xFFFFFFFF
    // Offset: 0x0
    TUnityEvent onStopListening;
    // private Meta.Voice.TranscriptionRequestEvent _onPartialTranscription
    // Size: 0x8
    // Offset: 0x0
    ::Meta::Voice::TranscriptionRequestEvent* onPartialTranscription;
    // Field size check
    static_assert(sizeof(::Meta::Voice::TranscriptionRequestEvent*) == 0x8);
    // private Meta.Voice.TranscriptionRequestEvent _onFullTranscription
    // Size: 0x8
    // Offset: 0x0
    ::Meta::Voice::TranscriptionRequestEvent* onFullTranscription;
    // Field size check
    static_assert(sizeof(::Meta::Voice::TranscriptionRequestEvent*) == 0x8);
    public:
    // Creating interface conversion operator: operator ::Meta::Voice::ITranscriptionRequestEvents_1<TUnityEvent>
    operator ::Meta::Voice::ITranscriptionRequestEvents_1<TUnityEvent>() noexcept {
      return *reinterpret_cast<::Meta::Voice::ITranscriptionRequestEvents_1<TUnityEvent>*>(this);
    }
    // Autogenerated instance field getter
    // Get instance field: private TUnityEvent _onAudioInputStateChange
    [[deprecated("Use field access instead!")]] TUnityEvent& dyn__onAudioInputStateChange() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::TranscriptionRequestEvents_1::dyn__onAudioInputStateChange");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_onAudioInputStateChange"))->offset;
      return *reinterpret_cast<TUnityEvent*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: private TUnityEvent _onAudioActivation
    [[deprecated("Use field access instead!")]] TUnityEvent& dyn__onAudioActivation() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::TranscriptionRequestEvents_1::dyn__onAudioActivation");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_onAudioActivation"))->offset;
      return *reinterpret_cast<TUnityEvent*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: private TUnityEvent _onStartListening
    [[deprecated("Use field access instead!")]] TUnityEvent& dyn__onStartListening() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::TranscriptionRequestEvents_1::dyn__onStartListening");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_onStartListening"))->offset;
      return *reinterpret_cast<TUnityEvent*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: private TUnityEvent _onAudioDeactivation
    [[deprecated("Use field access instead!")]] TUnityEvent& dyn__onAudioDeactivation() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::TranscriptionRequestEvents_1::dyn__onAudioDeactivation");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_onAudioDeactivation"))->offset;
      return *reinterpret_cast<TUnityEvent*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: private TUnityEvent _onStopListening
    [[deprecated("Use field access instead!")]] TUnityEvent& dyn__onStopListening() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::TranscriptionRequestEvents_1::dyn__onStopListening");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_onStopListening"))->offset;
      return *reinterpret_cast<TUnityEvent*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: private Meta.Voice.TranscriptionRequestEvent _onPartialTranscription
    [[deprecated("Use field access instead!")]] ::Meta::Voice::TranscriptionRequestEvent*& dyn__onPartialTranscription() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::TranscriptionRequestEvents_1::dyn__onPartialTranscription");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_onPartialTranscription"))->offset;
      return *reinterpret_cast<::Meta::Voice::TranscriptionRequestEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: private Meta.Voice.TranscriptionRequestEvent _onFullTranscription
    [[deprecated("Use field access instead!")]] ::Meta::Voice::TranscriptionRequestEvent*& dyn__onFullTranscription() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::TranscriptionRequestEvents_1::dyn__onFullTranscription");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_onFullTranscription"))->offset;
      return *reinterpret_cast<::Meta::Voice::TranscriptionRequestEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // public TUnityEvent get_OnAudioInputStateChange()
    // Offset: 0xFFFFFFFFFFFFFFFF
    TUnityEvent get_OnAudioInputStateChange() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::TranscriptionRequestEvents_1::get_OnAudioInputStateChange");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Voice::TranscriptionRequestEvents_1<TUnityEvent>*), -1));
      return ::il2cpp_utils::RunMethodRethrow<TUnityEvent, false>(this, ___internal__method);
    }
    // public TUnityEvent get_OnAudioActivation()
    // Offset: 0xFFFFFFFFFFFFFFFF
    TUnityEvent get_OnAudioActivation() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::TranscriptionRequestEvents_1::get_OnAudioActivation");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Voice::TranscriptionRequestEvents_1<TUnityEvent>*), -1));
      return ::il2cpp_utils::RunMethodRethrow<TUnityEvent, false>(this, ___internal__method);
    }
    // public TUnityEvent get_OnStartListening()
    // Offset: 0xFFFFFFFFFFFFFFFF
    TUnityEvent get_OnStartListening() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::TranscriptionRequestEvents_1::get_OnStartListening");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Voice::TranscriptionRequestEvents_1<TUnityEvent>*), -1));
      return ::il2cpp_utils::RunMethodRethrow<TUnityEvent, false>(this, ___internal__method);
    }
    // public TUnityEvent get_OnAudioDeactivation()
    // Offset: 0xFFFFFFFFFFFFFFFF
    TUnityEvent get_OnAudioDeactivation() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::TranscriptionRequestEvents_1::get_OnAudioDeactivation");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Voice::TranscriptionRequestEvents_1<TUnityEvent>*), -1));
      return ::il2cpp_utils::RunMethodRethrow<TUnityEvent, false>(this, ___internal__method);
    }
    // public TUnityEvent get_OnStopListening()
    // Offset: 0xFFFFFFFFFFFFFFFF
    TUnityEvent get_OnStopListening() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::TranscriptionRequestEvents_1::get_OnStopListening");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Voice::TranscriptionRequestEvents_1<TUnityEvent>*), -1));
      return ::il2cpp_utils::RunMethodRethrow<TUnityEvent, false>(this, ___internal__method);
    }
    // public Meta.Voice.TranscriptionRequestEvent get_OnPartialTranscription()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::Meta::Voice::TranscriptionRequestEvent* get_OnPartialTranscription() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::TranscriptionRequestEvents_1::get_OnPartialTranscription");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Voice::TranscriptionRequestEvents_1<TUnityEvent>*), -1));
      return ::il2cpp_utils::RunMethodRethrow<::Meta::Voice::TranscriptionRequestEvent*, false>(this, ___internal__method);
    }
    // public Meta.Voice.TranscriptionRequestEvent get_OnFullTranscription()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::Meta::Voice::TranscriptionRequestEvent* get_OnFullTranscription() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::TranscriptionRequestEvents_1::get_OnFullTranscription");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Voice::TranscriptionRequestEvents_1<TUnityEvent>*), -1));
      return ::il2cpp_utils::RunMethodRethrow<::Meta::Voice::TranscriptionRequestEvent*, false>(this, ___internal__method);
    }
    // public System.Void .ctor()
    // Offset: 0xFFFFFFFFFFFFFFFF
    // Implemented from: Meta.Voice.VoiceRequestEvents`1
    // Base method: System.Void VoiceRequestEvents_1::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static TranscriptionRequestEvents_1<TUnityEvent>* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::TranscriptionRequestEvents_1::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<TranscriptionRequestEvents_1<TUnityEvent>*, creationType>()));
    }
  }; // Meta.Voice.TranscriptionRequestEvents`1
  // Could not write size check! Type: Meta.Voice.TranscriptionRequestEvents`1 is generic, or has no fields that are valid for size checks!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
