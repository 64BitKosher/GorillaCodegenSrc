// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Meta.Voice.NLPAudioRequest`4
#include "Meta/Voice/NLPAudioRequest_4.hpp"
// Including type: Meta.Voice.INLPTextRequest`4
#include "Meta/Voice/INLPTextRequest_4.hpp"
// Including type: Meta.Voice.NLPRequestInputType
#include "Meta/Voice/NLPRequestInputType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::Events
namespace UnityEngine::Events {
  // Forward declaring type: UnityEventBase
  class UnityEventBase;
}
// Forward declaring namespace: Meta::Voice
namespace Meta::Voice {
  // Forward declaring type: INLPAudioRequestOptions
  class INLPAudioRequestOptions;
  // Forward declaring type: INLPTextRequestOptions
  class INLPTextRequestOptions;
  // Forward declaring type: NLPAudioRequestEvents`1<TUnityEvent>
  template<typename TUnityEvent>
  class NLPAudioRequestEvents_1;
  // Forward declaring type: INLPTextRequestEvents`1<TUnityEvent>
  template<typename TUnityEvent>
  class INLPTextRequestEvents_1;
  // Forward declaring type: INLPAudioRequestResults
  class INLPAudioRequestResults;
  // Forward declaring type: INLPTextRequestResults
  class INLPTextRequestResults;
}
// Forward declaring namespace: System::Text
namespace System::Text {
  // Forward declaring type: StringBuilder
  class StringBuilder;
}
// Completed forward declares
// Type namespace: Meta.Voice
namespace Meta::Voice {
  // Forward declaring type: NLPRequest`4<TUnityEvent, TOptions, TEvents, TResults>
  template<typename TUnityEvent, typename TOptions, typename TEvents, typename TResults>
  class NLPRequest_4;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE_GENERIC_CLASS(::Meta::Voice::NLPRequest_4, "Meta.Voice", "NLPRequest`4");
// Type namespace: Meta.Voice
namespace Meta::Voice {
  // WARNING Size may be invalid!
  // Autogenerated type: Meta.Voice.NLPRequest`4
  // [TokenAttribute] Offset: FFFFFFFF
  template<typename TUnityEvent, typename TOptions, typename TEvents, typename TResults>
  class NLPRequest_4 : public ::Meta::Voice::NLPAudioRequest_4<TUnityEvent, TOptions, TEvents, TResults>/*, public ::Meta::Voice::INLPTextRequest_4<TUnityEvent, TOptions, TEvents, TResults>*/ {
    public:
    public:
    // private Meta.Voice.NLPRequestInputType <InputType>k__BackingField
    // Size: 0x4
    // Offset: 0x0
    ::Meta::Voice::NLPRequestInputType InputType;
    // Field size check
    static_assert(sizeof(::Meta::Voice::NLPRequestInputType) == 0x4);
    // private System.Boolean _initialized
    // Size: 0x1
    // Offset: 0x0
    bool initialized;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    public:
    // Creating interface conversion operator: operator ::Meta::Voice::INLPTextRequest_4<TUnityEvent, TOptions, TEvents, TResults>
    operator ::Meta::Voice::INLPTextRequest_4<TUnityEvent, TOptions, TEvents, TResults>() noexcept {
      return *reinterpret_cast<::Meta::Voice::INLPTextRequest_4<TUnityEvent, TOptions, TEvents, TResults>*>(this);
    }
    // Autogenerated instance field getter
    // Get instance field: private Meta.Voice.NLPRequestInputType <InputType>k__BackingField
    [[deprecated("Use field access instead!")]] ::Meta::Voice::NLPRequestInputType& dyn_$InputType$k__BackingField() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::NLPRequest_4::dyn_$InputType$k__BackingField");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<InputType>k__BackingField"))->offset;
      return *reinterpret_cast<::Meta::Voice::NLPRequestInputType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: private System.Boolean _initialized
    [[deprecated("Use field access instead!")]] bool& dyn__initialized() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::NLPRequest_4::dyn__initialized");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_initialized"))->offset;
      return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // public Meta.Voice.NLPRequestInputType get_InputType()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::Meta::Voice::NLPRequestInputType get_InputType() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::NLPRequest_4::get_InputType");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_InputType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      return ::il2cpp_utils::RunMethodRethrow<::Meta::Voice::NLPRequestInputType, false>(this, ___internal__method);
    }
    // private System.Void set_InputType(Meta.Voice.NLPRequestInputType value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void set_InputType(::Meta::Voice::NLPRequestInputType value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::NLPRequest_4::set_InputType");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_InputType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
    }
    // protected System.Void .ctor(Meta.Voice.NLPRequestInputType newInputType, TOptions newOptions, TEvents newEvents)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static NLPRequest_4<TUnityEvent, TOptions, TEvents, TResults>* New_ctor(::Meta::Voice::NLPRequestInputType newInputType, TOptions newOptions, TEvents newEvents) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::NLPRequest_4::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<NLPRequest_4<TUnityEvent, TOptions, TEvents, TResults>*, creationType>(newInputType, newOptions, newEvents)));
    }
    // protected override System.Void SetState(Meta.Voice.VoiceRequestState newState)
    // Offset: 0xFFFFFFFFFFFFFFFF
    // Implemented from: Meta.Voice.VoiceRequest`4
    // Base method: System.Void VoiceRequest_4::SetState(Meta.Voice.VoiceRequestState newState)
    void SetState(::Meta::Voice::VoiceRequestState newState) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::NLPRequest_4::SetState");
      auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Voice::VoiceRequest_4<TUnityEvent, TOptions, TEvents, TResults>*), -1)));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newState);
    }
    // protected override System.Void AppendLogData(System.Text.StringBuilder log, System.Boolean warning)
    // Offset: 0xFFFFFFFFFFFFFFFF
    // Implemented from: Meta.Voice.TranscriptionRequest`4
    // Base method: System.Void TranscriptionRequest_4::AppendLogData(System.Text.StringBuilder log, System.Boolean warning)
    void AppendLogData(::System::Text::StringBuilder* log, bool warning) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::NLPRequest_4::AppendLogData");
      auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Voice::TranscriptionRequest_4<TUnityEvent, TOptions, TEvents, TResults>*), -1)));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, log, warning);
    }
    // protected override System.String GetActivateAudioError()
    // Offset: 0xFFFFFFFFFFFFFFFF
    // Implemented from: Meta.Voice.TranscriptionRequest`4
    // Base method: System.String TranscriptionRequest_4::GetActivateAudioError()
    ::StringW GetActivateAudioError() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::NLPRequest_4::GetActivateAudioError");
      auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Voice::TranscriptionRequest_4<TUnityEvent, TOptions, TEvents, TResults>*), -1)));
      return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
    }
    // protected override System.String GetSendError()
    // Offset: 0xFFFFFFFFFFFFFFFF
    // Implemented from: Meta.Voice.VoiceRequest`4
    // Base method: System.String VoiceRequest_4::GetSendError()
    ::StringW GetSendError() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::NLPRequest_4::GetSendError");
      auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Voice::VoiceRequest_4<TUnityEvent, TOptions, TEvents, TResults>*), -1)));
      return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
    }
  }; // Meta.Voice.NLPRequest`4
  // Could not write size check! Type: Meta.Voice.NLPRequest`4 is generic, or has no fields that are valid for size checks!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
