// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: OVRTelemetryMarker
  struct OVRTelemetryMarker;
}
// Forward declaring namespace: Meta::XR::BuildingBlocks
namespace Meta::XR::BuildingBlocks {
  // Forward declaring type: BuildingBlock
  class BuildingBlock;
}
// Completed forward declares
// Type namespace: Meta.XR.BuildingBlocks
namespace Meta::XR::BuildingBlocks {
  // Forward declaring type: Telemetry
  class Telemetry;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Meta::XR::BuildingBlocks::Telemetry);
DEFINE_IL2CPP_ARG_TYPE(::Meta::XR::BuildingBlocks::Telemetry*, "Meta.XR.BuildingBlocks", "Telemetry");
// Type namespace: Meta.XR.BuildingBlocks
namespace Meta::XR::BuildingBlocks {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: Meta.XR.BuildingBlocks.Telemetry
  // [TokenAttribute] Offset: FFFFFFFF
  // [ExtensionAttribute] Offset: FFFFFFFF
  class Telemetry : public ::Il2CppObject {
    public:
    // static public OVRTelemetryMarker AddBlockInfo(OVRTelemetryMarker marker, Meta.XR.BuildingBlocks.BuildingBlock block)
    // Offset: 0x446AB30
    static ::GlobalNamespace::OVRTelemetryMarker AddBlockInfo(::GlobalNamespace::OVRTelemetryMarker marker, ::Meta::XR::BuildingBlocks::BuildingBlock* block);
  }; // Meta.XR.BuildingBlocks.Telemetry
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Meta::XR::BuildingBlocks::Telemetry::AddBlockInfo
// Il2CppName: AddBlockInfo
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::OVRTelemetryMarker (*)(::GlobalNamespace::OVRTelemetryMarker, ::Meta::XR::BuildingBlocks::BuildingBlock*)>(&Meta::XR::BuildingBlocks::Telemetry::AddBlockInfo)> {
  static const MethodInfo* get() {
    static auto* marker = &::il2cpp_utils::GetClassFromName("", "OVRTelemetryMarker")->byval_arg;
    static auto* block = &::il2cpp_utils::GetClassFromName("Meta.XR.BuildingBlocks", "BuildingBlock")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::XR::BuildingBlocks::Telemetry*), "AddBlockInfo", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{marker, block});
  }
};
