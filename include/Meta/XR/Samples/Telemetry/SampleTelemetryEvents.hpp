// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Meta::XR::Samples::Telemetry
namespace Meta::XR::Samples::Telemetry {
}
// Completed forward declares
// Type namespace: Meta.XR.Samples.Telemetry
namespace Meta::XR::Samples::Telemetry {
  // Forward declaring type: SampleTelemetryEvents
  class SampleTelemetryEvents;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Meta::XR::Samples::Telemetry::SampleTelemetryEvents);
DEFINE_IL2CPP_ARG_TYPE(::Meta::XR::Samples::Telemetry::SampleTelemetryEvents*, "Meta.XR.Samples.Telemetry", "SampleTelemetryEvents");
// Type namespace: Meta.XR.Samples.Telemetry
namespace Meta::XR::Samples::Telemetry {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: Meta.XR.Samples.Telemetry.SampleTelemetryEvents
  // [TokenAttribute] Offset: FFFFFFFF
  class SampleTelemetryEvents : public ::Il2CppObject {
    public:
    // Nested type: ::Meta::XR::Samples::Telemetry::SampleTelemetryEvents::EventTypes
    class EventTypes;
    // Nested type: ::Meta::XR::Samples::Telemetry::SampleTelemetryEvents::AnnotationTypes
    class AnnotationTypes;
  }; // Meta.XR.Samples.Telemetry.SampleTelemetryEvents
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
