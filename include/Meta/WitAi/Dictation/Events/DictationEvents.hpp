// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Meta.WitAi.Events.SpeechEvents
#include "Meta/WitAi/Events/SpeechEvents.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Meta::WitAi::Dictation::Events
namespace Meta::WitAi::Dictation::Events {
  // Forward declaring type: DictationSessionEvent
  class DictationSessionEvent;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: String
  class String;
}
// Forward declaring namespace: UnityEngine::Events
namespace UnityEngine::Events {
  // Forward declaring type: UnityEvent
  class UnityEvent;
}
// Forward declaring namespace: Meta::WitAi::Events
namespace Meta::WitAi::Events {
  // Forward declaring type: WitMicLevelChangedEvent
  class WitMicLevelChangedEvent;
  // Forward declaring type: WitErrorEvent
  class WitErrorEvent;
  // Forward declaring type: WitResponseEvent
  class WitResponseEvent;
}
// Completed forward declares
// Type namespace: Meta.WitAi.Dictation.Events
namespace Meta::WitAi::Dictation::Events {
  // Forward declaring type: DictationEvents
  class DictationEvents;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Meta::WitAi::Dictation::Events::DictationEvents);
DEFINE_IL2CPP_ARG_TYPE(::Meta::WitAi::Dictation::Events::DictationEvents*, "Meta.WitAi.Dictation.Events", "DictationEvents");
// Type namespace: Meta.WitAi.Dictation.Events
namespace Meta::WitAi::Dictation::Events {
  // Size: 0xE8
  #pragma pack(push, 1)
  // Autogenerated type: Meta.WitAi.Dictation.Events.DictationEvents
  // [TokenAttribute] Offset: FFFFFFFF
  class DictationEvents : public ::Meta::WitAi::Events::SpeechEvents {
    public:
    public:
    // private Meta.WitAi.Dictation.Events.DictationSessionEvent _onDictationSessionStarted
    // Size: 0x8
    // Offset: 0xD8
    ::Meta::WitAi::Dictation::Events::DictationSessionEvent* onDictationSessionStarted;
    // Field size check
    static_assert(sizeof(::Meta::WitAi::Dictation::Events::DictationSessionEvent*) == 0x8);
    // private Meta.WitAi.Dictation.Events.DictationSessionEvent _onDictationSessionStopped
    // Size: 0x8
    // Offset: 0xE0
    ::Meta::WitAi::Dictation::Events::DictationSessionEvent* onDictationSessionStopped;
    // Field size check
    static_assert(sizeof(::Meta::WitAi::Dictation::Events::DictationSessionEvent*) == 0x8);
    public:
    // static field const value: static private System.String EVENT_CATEGORY_DICTATION_EVENTS
    static constexpr const char* EVENT_CATEGORY_DICTATION_EVENTS = "Dictation Events";
    // Get static field: static private System.String EVENT_CATEGORY_DICTATION_EVENTS
    static ::StringW _get_EVENT_CATEGORY_DICTATION_EVENTS();
    // Set static field: static private System.String EVENT_CATEGORY_DICTATION_EVENTS
    static void _set_EVENT_CATEGORY_DICTATION_EVENTS(::StringW value);
    // Get instance field reference: private Meta.WitAi.Dictation.Events.DictationSessionEvent _onDictationSessionStarted
    [[deprecated("Use field access instead!")]] ::Meta::WitAi::Dictation::Events::DictationSessionEvent*& dyn__onDictationSessionStarted();
    // Get instance field reference: private Meta.WitAi.Dictation.Events.DictationSessionEvent _onDictationSessionStopped
    [[deprecated("Use field access instead!")]] ::Meta::WitAi::Dictation::Events::DictationSessionEvent*& dyn__onDictationSessionStopped();
    // public Meta.WitAi.Dictation.Events.DictationSessionEvent get_OnDictationSessionStarted()
    // Offset: 0x2AD2098
    ::Meta::WitAi::Dictation::Events::DictationSessionEvent* get_OnDictationSessionStarted();
    // public Meta.WitAi.Dictation.Events.DictationSessionEvent get_OnDictationSessionStopped()
    // Offset: 0x2AD20A0
    ::Meta::WitAi::Dictation::Events::DictationSessionEvent* get_OnDictationSessionStopped();
    // public Meta.WitAi.Dictation.Events.DictationSessionEvent get_onDictationSessionStarted()
    // Offset: 0x2AD20A8
    ::Meta::WitAi::Dictation::Events::DictationSessionEvent* get_onDictationSessionStarted();
    // public Meta.WitAi.Dictation.Events.DictationSessionEvent get_onDictationSessionStopped()
    // Offset: 0x2AD20B0
    ::Meta::WitAi::Dictation::Events::DictationSessionEvent* get_onDictationSessionStopped();
    // public UnityEngine.Events.UnityEvent get_onStart()
    // Offset: 0x2AD20B8
    ::UnityEngine::Events::UnityEvent* get_onStart();
    // public UnityEngine.Events.UnityEvent get_onStopped()
    // Offset: 0x2AD20C0
    ::UnityEngine::Events::UnityEvent* get_onStopped();
    // public Meta.WitAi.Events.WitMicLevelChangedEvent get_onMicAudioLevel()
    // Offset: 0x2AD20C8
    ::Meta::WitAi::Events::WitMicLevelChangedEvent* get_onMicAudioLevel();
    // public Meta.WitAi.Events.WitErrorEvent get_onError()
    // Offset: 0x2AD20D0
    ::Meta::WitAi::Events::WitErrorEvent* get_onError();
    // public Meta.WitAi.Events.WitResponseEvent get_onResponse()
    // Offset: 0x2AD20D8
    ::Meta::WitAi::Events::WitResponseEvent* get_onResponse();
    // public System.Void .ctor()
    // Offset: 0x2AD1234
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static DictationEvents* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Dictation::Events::DictationEvents::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<DictationEvents*, creationType>()));
    }
  }; // Meta.WitAi.Dictation.Events.DictationEvents
  #pragma pack(pop)
  static check_size<sizeof(DictationEvents), 224 + sizeof(::Meta::WitAi::Dictation::Events::DictationSessionEvent*)> __Meta_WitAi_Dictation_Events_DictationEventsSizeCheck;
  static_assert(sizeof(DictationEvents) == 0xE8);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Meta::WitAi::Dictation::Events::DictationEvents::get_OnDictationSessionStarted
// Il2CppName: get_OnDictationSessionStarted
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Meta::WitAi::Dictation::Events::DictationSessionEvent* (Meta::WitAi::Dictation::Events::DictationEvents::*)()>(&Meta::WitAi::Dictation::Events::DictationEvents::get_OnDictationSessionStarted)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::Dictation::Events::DictationEvents*), "get_OnDictationSessionStarted", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::Dictation::Events::DictationEvents::get_OnDictationSessionStopped
// Il2CppName: get_OnDictationSessionStopped
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Meta::WitAi::Dictation::Events::DictationSessionEvent* (Meta::WitAi::Dictation::Events::DictationEvents::*)()>(&Meta::WitAi::Dictation::Events::DictationEvents::get_OnDictationSessionStopped)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::Dictation::Events::DictationEvents*), "get_OnDictationSessionStopped", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::Dictation::Events::DictationEvents::get_onDictationSessionStarted
// Il2CppName: get_onDictationSessionStarted
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Meta::WitAi::Dictation::Events::DictationSessionEvent* (Meta::WitAi::Dictation::Events::DictationEvents::*)()>(&Meta::WitAi::Dictation::Events::DictationEvents::get_onDictationSessionStarted)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::Dictation::Events::DictationEvents*), "get_onDictationSessionStarted", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::Dictation::Events::DictationEvents::get_onDictationSessionStopped
// Il2CppName: get_onDictationSessionStopped
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Meta::WitAi::Dictation::Events::DictationSessionEvent* (Meta::WitAi::Dictation::Events::DictationEvents::*)()>(&Meta::WitAi::Dictation::Events::DictationEvents::get_onDictationSessionStopped)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::Dictation::Events::DictationEvents*), "get_onDictationSessionStopped", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::Dictation::Events::DictationEvents::get_onStart
// Il2CppName: get_onStart
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Events::UnityEvent* (Meta::WitAi::Dictation::Events::DictationEvents::*)()>(&Meta::WitAi::Dictation::Events::DictationEvents::get_onStart)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::Dictation::Events::DictationEvents*), "get_onStart", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::Dictation::Events::DictationEvents::get_onStopped
// Il2CppName: get_onStopped
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Events::UnityEvent* (Meta::WitAi::Dictation::Events::DictationEvents::*)()>(&Meta::WitAi::Dictation::Events::DictationEvents::get_onStopped)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::Dictation::Events::DictationEvents*), "get_onStopped", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::Dictation::Events::DictationEvents::get_onMicAudioLevel
// Il2CppName: get_onMicAudioLevel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Meta::WitAi::Events::WitMicLevelChangedEvent* (Meta::WitAi::Dictation::Events::DictationEvents::*)()>(&Meta::WitAi::Dictation::Events::DictationEvents::get_onMicAudioLevel)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::Dictation::Events::DictationEvents*), "get_onMicAudioLevel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::Dictation::Events::DictationEvents::get_onError
// Il2CppName: get_onError
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Meta::WitAi::Events::WitErrorEvent* (Meta::WitAi::Dictation::Events::DictationEvents::*)()>(&Meta::WitAi::Dictation::Events::DictationEvents::get_onError)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::Dictation::Events::DictationEvents*), "get_onError", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::Dictation::Events::DictationEvents::get_onResponse
// Il2CppName: get_onResponse
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Meta::WitAi::Events::WitResponseEvent* (Meta::WitAi::Dictation::Events::DictationEvents::*)()>(&Meta::WitAi::Dictation::Events::DictationEvents::get_onResponse)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::Dictation::Events::DictationEvents*), "get_onResponse", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::Dictation::Events::DictationEvents::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
