// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Meta.WitAi.ServiceReferences.AudioInputServiceReference
#include "Meta/WitAi/ServiceReferences/AudioInputServiceReference.hpp"
// Including type: Meta.WitAi.Interfaces.IAudioInputEvents
#include "Meta/WitAi/Interfaces/IAudioInputEvents.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Meta::WitAi::Events
namespace Meta::WitAi::Events {
  // Forward declaring type: WitMicLevelChangedEvent
  class WitMicLevelChangedEvent;
}
// Forward declaring namespace: UnityEngine::Events
namespace UnityEngine::Events {
  // Forward declaring type: UnityEvent
  class UnityEvent;
}
// Forward declaring namespace: Meta::WitAi::Events::UnityEventListeners
namespace Meta::WitAi::Events::UnityEventListeners {
  // Forward declaring type: AudioEventListener
  class AudioEventListener;
}
// Completed forward declares
// Type namespace: Meta.WitAi.ServiceReferences
namespace Meta::WitAi::ServiceReferences {
  // Forward declaring type: CombinedAudioEventReference
  class CombinedAudioEventReference;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Meta::WitAi::ServiceReferences::CombinedAudioEventReference);
DEFINE_IL2CPP_ARG_TYPE(::Meta::WitAi::ServiceReferences::CombinedAudioEventReference*, "Meta.WitAi.ServiceReferences", "CombinedAudioEventReference");
// Type namespace: Meta.WitAi.ServiceReferences
namespace Meta::WitAi::ServiceReferences {
  // Size: 0x40
  #pragma pack(push, 1)
  // Autogenerated type: Meta.WitAi.ServiceReferences.CombinedAudioEventReference
  // [TokenAttribute] Offset: FFFFFFFF
  class CombinedAudioEventReference : public ::Meta::WitAi::ServiceReferences::AudioInputServiceReference/*, public ::Meta::WitAi::Interfaces::IAudioInputEvents*/ {
    public:
    public:
    // private Meta.WitAi.Events.WitMicLevelChangedEvent _onMicAudioLevelChanged
    // Size: 0x8
    // Offset: 0x20
    ::Meta::WitAi::Events::WitMicLevelChangedEvent* onMicAudioLevelChanged;
    // Field size check
    static_assert(sizeof(::Meta::WitAi::Events::WitMicLevelChangedEvent*) == 0x8);
    // private UnityEngine.Events.UnityEvent _onMicStartedListening
    // Size: 0x8
    // Offset: 0x28
    ::UnityEngine::Events::UnityEvent* onMicStartedListening;
    // Field size check
    static_assert(sizeof(::UnityEngine::Events::UnityEvent*) == 0x8);
    // private UnityEngine.Events.UnityEvent _onMicStoppedListening
    // Size: 0x8
    // Offset: 0x30
    ::UnityEngine::Events::UnityEvent* onMicStoppedListening;
    // Field size check
    static_assert(sizeof(::UnityEngine::Events::UnityEvent*) == 0x8);
    // private Meta.WitAi.Events.UnityEventListeners.AudioEventListener[] _sourceListeners
    // Size: 0x8
    // Offset: 0x38
    ::ArrayW<::Meta::WitAi::Events::UnityEventListeners::AudioEventListener*> sourceListeners;
    // Field size check
    static_assert(sizeof(::ArrayW<::Meta::WitAi::Events::UnityEventListeners::AudioEventListener*>) == 0x8);
    public:
    // Creating interface conversion operator: operator ::Meta::WitAi::Interfaces::IAudioInputEvents
    operator ::Meta::WitAi::Interfaces::IAudioInputEvents() noexcept {
      return *reinterpret_cast<::Meta::WitAi::Interfaces::IAudioInputEvents*>(this);
    }
    // Get instance field reference: private Meta.WitAi.Events.WitMicLevelChangedEvent _onMicAudioLevelChanged
    [[deprecated("Use field access instead!")]] ::Meta::WitAi::Events::WitMicLevelChangedEvent*& dyn__onMicAudioLevelChanged();
    // Get instance field reference: private UnityEngine.Events.UnityEvent _onMicStartedListening
    [[deprecated("Use field access instead!")]] ::UnityEngine::Events::UnityEvent*& dyn__onMicStartedListening();
    // Get instance field reference: private UnityEngine.Events.UnityEvent _onMicStoppedListening
    [[deprecated("Use field access instead!")]] ::UnityEngine::Events::UnityEvent*& dyn__onMicStoppedListening();
    // Get instance field reference: private Meta.WitAi.Events.UnityEventListeners.AudioEventListener[] _sourceListeners
    [[deprecated("Use field access instead!")]] ::ArrayW<::Meta::WitAi::Events::UnityEventListeners::AudioEventListener*>& dyn__sourceListeners();
    // private System.Void Awake()
    // Offset: 0x44373D4
    void Awake();
    // private System.Void OnEnable()
    // Offset: 0x4437450
    void OnEnable();
    // private System.Void OnDisable()
    // Offset: 0x44375EC
    void OnDisable();
    // public Meta.WitAi.Events.WitMicLevelChangedEvent get_OnMicAudioLevelChanged()
    // Offset: 0x4437788
    ::Meta::WitAi::Events::WitMicLevelChangedEvent* get_OnMicAudioLevelChanged();
    // public UnityEngine.Events.UnityEvent get_OnMicStartedListening()
    // Offset: 0x4437790
    ::UnityEngine::Events::UnityEvent* get_OnMicStartedListening();
    // public UnityEngine.Events.UnityEvent get_OnMicStoppedListening()
    // Offset: 0x4437798
    ::UnityEngine::Events::UnityEvent* get_OnMicStoppedListening();
    // public override Meta.WitAi.Interfaces.IAudioInputEvents get_AudioEvents()
    // Offset: 0x44373D0
    // Implemented from: Meta.WitAi.ServiceReferences.AudioInputServiceReference
    // Base method: Meta.WitAi.Interfaces.IAudioInputEvents AudioInputServiceReference::get_AudioEvents()
    ::Meta::WitAi::Interfaces::IAudioInputEvents* get_AudioEvents();
    // public System.Void .ctor()
    // Offset: 0x44377A0
    // Implemented from: Meta.WitAi.ServiceReferences.AudioInputServiceReference
    // Base method: System.Void AudioInputServiceReference::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static CombinedAudioEventReference* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::ServiceReferences::CombinedAudioEventReference::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<CombinedAudioEventReference*, creationType>()));
    }
  }; // Meta.WitAi.ServiceReferences.CombinedAudioEventReference
  #pragma pack(pop)
  static check_size<sizeof(CombinedAudioEventReference), 56 + sizeof(::ArrayW<::Meta::WitAi::Events::UnityEventListeners::AudioEventListener*>)> __Meta_WitAi_ServiceReferences_CombinedAudioEventReferenceSizeCheck;
  static_assert(sizeof(CombinedAudioEventReference) == 0x40);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Meta::WitAi::ServiceReferences::CombinedAudioEventReference::Awake
// Il2CppName: Awake
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Meta::WitAi::ServiceReferences::CombinedAudioEventReference::*)()>(&Meta::WitAi::ServiceReferences::CombinedAudioEventReference::Awake)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::ServiceReferences::CombinedAudioEventReference*), "Awake", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::ServiceReferences::CombinedAudioEventReference::OnEnable
// Il2CppName: OnEnable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Meta::WitAi::ServiceReferences::CombinedAudioEventReference::*)()>(&Meta::WitAi::ServiceReferences::CombinedAudioEventReference::OnEnable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::ServiceReferences::CombinedAudioEventReference*), "OnEnable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::ServiceReferences::CombinedAudioEventReference::OnDisable
// Il2CppName: OnDisable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Meta::WitAi::ServiceReferences::CombinedAudioEventReference::*)()>(&Meta::WitAi::ServiceReferences::CombinedAudioEventReference::OnDisable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::ServiceReferences::CombinedAudioEventReference*), "OnDisable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::ServiceReferences::CombinedAudioEventReference::get_OnMicAudioLevelChanged
// Il2CppName: get_OnMicAudioLevelChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Meta::WitAi::Events::WitMicLevelChangedEvent* (Meta::WitAi::ServiceReferences::CombinedAudioEventReference::*)()>(&Meta::WitAi::ServiceReferences::CombinedAudioEventReference::get_OnMicAudioLevelChanged)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::ServiceReferences::CombinedAudioEventReference*), "get_OnMicAudioLevelChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::ServiceReferences::CombinedAudioEventReference::get_OnMicStartedListening
// Il2CppName: get_OnMicStartedListening
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Events::UnityEvent* (Meta::WitAi::ServiceReferences::CombinedAudioEventReference::*)()>(&Meta::WitAi::ServiceReferences::CombinedAudioEventReference::get_OnMicStartedListening)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::ServiceReferences::CombinedAudioEventReference*), "get_OnMicStartedListening", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::ServiceReferences::CombinedAudioEventReference::get_OnMicStoppedListening
// Il2CppName: get_OnMicStoppedListening
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Events::UnityEvent* (Meta::WitAi::ServiceReferences::CombinedAudioEventReference::*)()>(&Meta::WitAi::ServiceReferences::CombinedAudioEventReference::get_OnMicStoppedListening)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::ServiceReferences::CombinedAudioEventReference*), "get_OnMicStoppedListening", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::ServiceReferences::CombinedAudioEventReference::get_AudioEvents
// Il2CppName: get_AudioEvents
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Meta::WitAi::Interfaces::IAudioInputEvents* (Meta::WitAi::ServiceReferences::CombinedAudioEventReference::*)()>(&Meta::WitAi::ServiceReferences::CombinedAudioEventReference::get_AudioEvents)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::ServiceReferences::CombinedAudioEventReference*), "get_AudioEvents", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::ServiceReferences::CombinedAudioEventReference::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
