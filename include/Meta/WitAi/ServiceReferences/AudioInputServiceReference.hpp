// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
// Including type: Meta.WitAi.Interfaces.IAudioEventProvider
#include "Meta/WitAi/Interfaces/IAudioEventProvider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Meta::WitAi::Interfaces
namespace Meta::WitAi::Interfaces {
  // Forward declaring type: IAudioInputEvents
  class IAudioInputEvents;
}
// Completed forward declares
// Type namespace: Meta.WitAi.ServiceReferences
namespace Meta::WitAi::ServiceReferences {
  // Forward declaring type: AudioInputServiceReference
  class AudioInputServiceReference;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Meta::WitAi::ServiceReferences::AudioInputServiceReference);
DEFINE_IL2CPP_ARG_TYPE(::Meta::WitAi::ServiceReferences::AudioInputServiceReference*, "Meta.WitAi.ServiceReferences", "AudioInputServiceReference");
// Type namespace: Meta.WitAi.ServiceReferences
namespace Meta::WitAi::ServiceReferences {
  // Size: 0x20
  #pragma pack(push, 1)
  // Autogenerated type: Meta.WitAi.ServiceReferences.AudioInputServiceReference
  // [TokenAttribute] Offset: FFFFFFFF
  class AudioInputServiceReference : public ::UnityEngine::MonoBehaviour/*, public ::Meta::WitAi::Interfaces::IAudioEventProvider*/ {
    public:
    // Creating interface conversion operator: operator ::Meta::WitAi::Interfaces::IAudioEventProvider
    operator ::Meta::WitAi::Interfaces::IAudioEventProvider() noexcept {
      return *reinterpret_cast<::Meta::WitAi::Interfaces::IAudioEventProvider*>(this);
    }
    // public Meta.WitAi.Interfaces.IAudioInputEvents get_AudioEvents()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::Meta::WitAi::Interfaces::IAudioInputEvents* get_AudioEvents();
    // protected System.Void .ctor()
    // Offset: 0x44373C8
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static AudioInputServiceReference* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::ServiceReferences::AudioInputServiceReference::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<AudioInputServiceReference*, creationType>()));
    }
  }; // Meta.WitAi.ServiceReferences.AudioInputServiceReference
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Meta::WitAi::ServiceReferences::AudioInputServiceReference::get_AudioEvents
// Il2CppName: get_AudioEvents
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Meta::WitAi::Interfaces::IAudioInputEvents* (Meta::WitAi::ServiceReferences::AudioInputServiceReference::*)()>(&Meta::WitAi::ServiceReferences::AudioInputServiceReference::get_AudioEvents)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::ServiceReferences::AudioInputServiceReference*), "get_AudioEvents", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::ServiceReferences::AudioInputServiceReference::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
