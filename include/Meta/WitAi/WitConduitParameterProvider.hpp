// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Meta.Conduit.ParameterProvider
#include "Meta/Conduit/ParameterProvider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Reflection
namespace System::Reflection {
  // Forward declaring type: ParameterInfo
  class ParameterInfo;
}
// Completed forward declares
// Type namespace: Meta.WitAi
namespace Meta::WitAi {
  // Forward declaring type: WitConduitParameterProvider
  class WitConduitParameterProvider;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Meta::WitAi::WitConduitParameterProvider);
DEFINE_IL2CPP_ARG_TYPE(::Meta::WitAi::WitConduitParameterProvider*, "Meta.WitAi", "WitConduitParameterProvider");
// Type namespace: Meta.WitAi
namespace Meta::WitAi {
  // Size: 0x38
  #pragma pack(push, 1)
  // Autogenerated type: Meta.WitAi.WitConduitParameterProvider
  // [TokenAttribute] Offset: FFFFFFFF
  // [ObsoleteAttribute] Offset: FFFFFFFF
  class WitConduitParameterProvider : public ::Meta::Conduit::ParameterProvider {
    public:
    // public System.Void .ctor()
    // Offset: 0x442B1F4
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static WitConduitParameterProvider* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitConduitParameterProvider::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<WitConduitParameterProvider*, creationType>()));
    }
    // protected override System.Object GetSpecializedParameter(System.Reflection.ParameterInfo formalParameter)
    // Offset: 0x442AB3C
    // Implemented from: Meta.Conduit.ParameterProvider
    // Base method: System.Object ParameterProvider::GetSpecializedParameter(System.Reflection.ParameterInfo formalParameter)
    ::Il2CppObject* GetSpecializedParameter(::System::Reflection::ParameterInfo* formalParameter);
    // protected override System.Boolean SupportedSpecializedParameter(System.Reflection.ParameterInfo formalParameter)
    // Offset: 0x442B0D8
    // Implemented from: Meta.Conduit.ParameterProvider
    // Base method: System.Boolean ParameterProvider::SupportedSpecializedParameter(System.Reflection.ParameterInfo formalParameter)
    bool SupportedSpecializedParameter(::System::Reflection::ParameterInfo* formalParameter);
  }; // Meta.WitAi.WitConduitParameterProvider
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Meta::WitAi::WitConduitParameterProvider::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: Meta::WitAi::WitConduitParameterProvider::GetSpecializedParameter
// Il2CppName: GetSpecializedParameter
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (Meta::WitAi::WitConduitParameterProvider::*)(::System::Reflection::ParameterInfo*)>(&Meta::WitAi::WitConduitParameterProvider::GetSpecializedParameter)> {
  static const MethodInfo* get() {
    static auto* formalParameter = &::il2cpp_utils::GetClassFromName("System.Reflection", "ParameterInfo")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::WitConduitParameterProvider*), "GetSpecializedParameter", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{formalParameter});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::WitConduitParameterProvider::SupportedSpecializedParameter
// Il2CppName: SupportedSpecializedParameter
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Meta::WitAi::WitConduitParameterProvider::*)(::System::Reflection::ParameterInfo*)>(&Meta::WitAi::WitConduitParameterProvider::SupportedSpecializedParameter)> {
  static const MethodInfo* get() {
    static auto* formalParameter = &::il2cpp_utils::GetClassFromName("System.Reflection", "ParameterInfo")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::WitConduitParameterProvider*), "SupportedSpecializedParameter", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{formalParameter});
  }
};
