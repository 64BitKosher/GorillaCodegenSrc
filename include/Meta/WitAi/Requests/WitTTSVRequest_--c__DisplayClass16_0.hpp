// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Meta.WitAi.Requests.WitTTSVRequest
#include "Meta/WitAi/Requests/WitTTSVRequest.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: Dictionary`2<TKey, TValue>
  template<typename TKey, typename TValue>
  class Dictionary_2;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Action`1<T>
  template<typename T>
  class Action_1;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Meta::WitAi::Requests::WitTTSVRequest::$$c__DisplayClass16_0);
DEFINE_IL2CPP_ARG_TYPE(::Meta::WitAi::Requests::WitTTSVRequest::$$c__DisplayClass16_0*, "Meta.WitAi.Requests", "WitTTSVRequest/<>c__DisplayClass16_0");
// Type namespace: Meta.WitAi.Requests
namespace Meta::WitAi::Requests {
  // Size: 0x30
  #pragma pack(push, 1)
  // Autogenerated type: Meta.WitAi.Requests.WitTTSVRequest/<>c__DisplayClass16_0
  // [TokenAttribute] Offset: FFFFFFFF
  // [CompilerGeneratedAttribute] Offset: FFFFFFFF
  class WitTTSVRequest::$$c__DisplayClass16_0 : public ::Il2CppObject {
    public:
    public:
    // public Meta.WitAi.Requests.WitTTSVRequest <>4__this
    // Size: 0x8
    // Offset: 0x10
    ::Meta::WitAi::Requests::WitTTSVRequest* $$4__this;
    // Field size check
    static_assert(sizeof(::Meta::WitAi::Requests::WitTTSVRequest*) == 0x8);
    // public System.String textToSpeak
    // Size: 0x8
    // Offset: 0x18
    ::StringW textToSpeak;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public System.Collections.Generic.Dictionary`2<System.String,System.String> ttsData
    // Size: 0x8
    // Offset: 0x20
    ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* ttsData;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>*) == 0x8);
    // public System.Action`1<System.Byte[]> onEncoded
    // Size: 0x8
    // Offset: 0x28
    ::System::Action_1<::ArrayW<uint8_t>>* onEncoded;
    // Field size check
    static_assert(sizeof(::System::Action_1<::ArrayW<uint8_t>>*) == 0x8);
    public:
    // Get instance field reference: public Meta.WitAi.Requests.WitTTSVRequest <>4__this
    [[deprecated("Use field access instead!")]] ::Meta::WitAi::Requests::WitTTSVRequest*& dyn_$$4__this();
    // Get instance field reference: public System.String textToSpeak
    [[deprecated("Use field access instead!")]] ::StringW& dyn_textToSpeak();
    // Get instance field reference: public System.Collections.Generic.Dictionary`2<System.String,System.String> ttsData
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>*& dyn_ttsData();
    // Get instance field reference: public System.Action`1<System.Byte[]> onEncoded
    [[deprecated("Use field access instead!")]] ::System::Action_1<::ArrayW<uint8_t>>*& dyn_onEncoded();
    // public System.Void .ctor()
    // Offset: 0x4445814
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static WitTTSVRequest::$$c__DisplayClass16_0* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::WitTTSVRequest::$$c__DisplayClass16_0::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<WitTTSVRequest::$$c__DisplayClass16_0*, creationType>()));
    }
    // System.Byte[] <EncodePostBytesAsync>b__0()
    // Offset: 0x4445CF0
    ::ArrayW<uint8_t> $EncodePostBytesAsync$b__0();
    // System.Void <EncodePostBytesAsync>b__1(System.Byte[] bytes, System.String error)
    // Offset: 0x4445D0C
    void $EncodePostBytesAsync$b__1(::ArrayW<uint8_t> bytes, ::StringW error);
  }; // Meta.WitAi.Requests.WitTTSVRequest/<>c__DisplayClass16_0
  #pragma pack(pop)
  static check_size<sizeof(WitTTSVRequest::$$c__DisplayClass16_0), 40 + sizeof(::System::Action_1<::ArrayW<uint8_t>>*)> __Meta_WitAi_Requests_WitTTSVRequest_$$c__DisplayClass16_0SizeCheck;
  static_assert(sizeof(WitTTSVRequest::$$c__DisplayClass16_0) == 0x30);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Meta::WitAi::Requests::WitTTSVRequest::$$c__DisplayClass16_0::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: Meta::WitAi::Requests::WitTTSVRequest::$$c__DisplayClass16_0::$EncodePostBytesAsync$b__0
// Il2CppName: <EncodePostBytesAsync>b__0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<uint8_t> (Meta::WitAi::Requests::WitTTSVRequest::$$c__DisplayClass16_0::*)()>(&Meta::WitAi::Requests::WitTTSVRequest::$$c__DisplayClass16_0::$EncodePostBytesAsync$b__0)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::Requests::WitTTSVRequest::$$c__DisplayClass16_0*), "<EncodePostBytesAsync>b__0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::Requests::WitTTSVRequest::$$c__DisplayClass16_0::$EncodePostBytesAsync$b__1
// Il2CppName: <EncodePostBytesAsync>b__1
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Meta::WitAi::Requests::WitTTSVRequest::$$c__DisplayClass16_0::*)(::ArrayW<uint8_t>, ::StringW)>(&Meta::WitAi::Requests::WitTTSVRequest::$$c__DisplayClass16_0::$EncodePostBytesAsync$b__1)> {
  static const MethodInfo* get() {
    static auto* bytes = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    static auto* error = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::Requests::WitTTSVRequest::$$c__DisplayClass16_0*), "<EncodePostBytesAsync>b__1", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{bytes, error});
  }
};
