// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include <initializer_list>
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Meta.Voice.INLPAudioRequestOptions
#include "Meta/Voice/INLPAudioRequestOptions.hpp"
// Including type: Meta.Voice.INLPTextRequestOptions
#include "Meta/Voice/INLPTextRequestOptions.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Meta::WitAi::Requests
namespace Meta::WitAi::Requests {
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: Dictionary`2<TKey, TValue>
  template<typename TKey, typename TValue>
  class Dictionary_2;
}
// Completed forward declares
// Type namespace: Meta.WitAi.Requests
namespace Meta::WitAi::Requests {
  // Forward declaring type: VoiceServiceRequestOptions
  class VoiceServiceRequestOptions;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Meta::WitAi::Requests::VoiceServiceRequestOptions);
DEFINE_IL2CPP_ARG_TYPE(::Meta::WitAi::Requests::VoiceServiceRequestOptions*, "Meta.WitAi.Requests", "VoiceServiceRequestOptions");
// Type namespace: Meta.WitAi.Requests
namespace Meta::WitAi::Requests {
  // Size: 0x2C
  #pragma pack(push, 1)
  // Autogenerated type: Meta.WitAi.Requests.VoiceServiceRequestOptions
  // [TokenAttribute] Offset: FFFFFFFF
  class VoiceServiceRequestOptions : public ::Il2CppObject/*, public ::Meta::Voice::INLPAudioRequestOptions, public ::Meta::Voice::INLPTextRequestOptions*/ {
    public:
    // Nested type: ::Meta::WitAi::Requests::VoiceServiceRequestOptions::QueryParam
    class QueryParam;
    public:
    // private System.String <RequestId>k__BackingField
    // Size: 0x8
    // Offset: 0x10
    ::StringW RequestId;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private System.Collections.Generic.Dictionary`2<System.String,System.String> <QueryParams>k__BackingField
    // Size: 0x8
    // Offset: 0x18
    ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* QueryParams;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>*) == 0x8);
    // private System.String <Text>k__BackingField
    // Size: 0x8
    // Offset: 0x20
    ::StringW Text;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private System.Single <AudioThreshold>k__BackingField
    // Size: 0x4
    // Offset: 0x28
    float AudioThreshold;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    public:
    // Creating interface conversion operator: operator ::Meta::Voice::INLPAudioRequestOptions
    operator ::Meta::Voice::INLPAudioRequestOptions() noexcept {
      return *reinterpret_cast<::Meta::Voice::INLPAudioRequestOptions*>(this);
    }
    // Creating interface conversion operator: operator ::Meta::Voice::INLPTextRequestOptions
    operator ::Meta::Voice::INLPTextRequestOptions() noexcept {
      return *reinterpret_cast<::Meta::Voice::INLPTextRequestOptions*>(this);
    }
    // Get instance field reference: private System.String <RequestId>k__BackingField
    [[deprecated("Use field access instead!")]] ::StringW& dyn_$RequestId$k__BackingField();
    // Get instance field reference: private System.Collections.Generic.Dictionary`2<System.String,System.String> <QueryParams>k__BackingField
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>*& dyn_$QueryParams$k__BackingField();
    // Get instance field reference: private System.String <Text>k__BackingField
    [[deprecated("Use field access instead!")]] ::StringW& dyn_$Text$k__BackingField();
    // Get instance field reference: private System.Single <AudioThreshold>k__BackingField
    [[deprecated("Use field access instead!")]] float& dyn_$AudioThreshold$k__BackingField();
    // public System.String get_RequestId()
    // Offset: 0x44398F0
    ::StringW get_RequestId();
    // private System.Void set_RequestId(System.String value)
    // Offset: 0x44398F8
    void set_RequestId(::StringW value);
    // public System.Collections.Generic.Dictionary`2<System.String,System.String> get_QueryParams()
    // Offset: 0x4439900
    ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* get_QueryParams();
    // private System.Void set_QueryParams(System.Collections.Generic.Dictionary`2<System.String,System.String> value)
    // Offset: 0x4439908
    void set_QueryParams(::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* value);
    // public System.String get_Text()
    // Offset: 0x4439910
    ::StringW get_Text();
    // public System.Void set_Text(System.String value)
    // Offset: 0x4439918
    void set_Text(::StringW value);
    // public System.Single get_AudioThreshold()
    // Offset: 0x4439920
    float get_AudioThreshold();
    // public System.Void set_AudioThreshold(System.Single value)
    // Offset: 0x4439928
    void set_AudioThreshold(float value);
    // public System.Void .ctor(params Meta.WitAi.Requests.VoiceServiceRequestOptions/QueryParam[] newParams)
    // Offset: 0x4439930
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static VoiceServiceRequestOptions* New_ctor(::ArrayW<::Meta::WitAi::Requests::VoiceServiceRequestOptions::QueryParam*> newParams) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::VoiceServiceRequestOptions::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<VoiceServiceRequestOptions*, creationType>(newParams)));
    }
    // public System.Void .ctor(System.String newRequestId, params Meta.WitAi.Requests.VoiceServiceRequestOptions/QueryParam[] newParams)
    // Offset: 0x4439AA4
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static VoiceServiceRequestOptions* New_ctor(::StringW newRequestId, ::ArrayW<::Meta::WitAi::Requests::VoiceServiceRequestOptions::QueryParam*> newParams) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::VoiceServiceRequestOptions::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<VoiceServiceRequestOptions*, creationType>(newRequestId, newParams)));
    }
    // protected System.String GetUniqueRequestId()
    // Offset: 0x4439B20
    ::StringW GetUniqueRequestId();
    // static public System.Collections.Generic.Dictionary`2<System.String,System.String> ConvertQueryParams(Meta.WitAi.Requests.VoiceServiceRequestOptions/QueryParam[] newParams)
    // Offset: 0x4439988
    static ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* ConvertQueryParams(::ArrayW<::Meta::WitAi::Requests::VoiceServiceRequestOptions::QueryParam*> newParams);
  }; // Meta.WitAi.Requests.VoiceServiceRequestOptions
  #pragma pack(pop)
  static check_size<sizeof(VoiceServiceRequestOptions), 40 + sizeof(float)> __Meta_WitAi_Requests_VoiceServiceRequestOptionsSizeCheck;
  static_assert(sizeof(VoiceServiceRequestOptions) == 0x2C);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Meta::WitAi::Requests::VoiceServiceRequestOptions::get_RequestId
// Il2CppName: get_RequestId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (Meta::WitAi::Requests::VoiceServiceRequestOptions::*)()>(&Meta::WitAi::Requests::VoiceServiceRequestOptions::get_RequestId)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::Requests::VoiceServiceRequestOptions*), "get_RequestId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::Requests::VoiceServiceRequestOptions::set_RequestId
// Il2CppName: set_RequestId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Meta::WitAi::Requests::VoiceServiceRequestOptions::*)(::StringW)>(&Meta::WitAi::Requests::VoiceServiceRequestOptions::set_RequestId)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::Requests::VoiceServiceRequestOptions*), "set_RequestId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::Requests::VoiceServiceRequestOptions::get_QueryParams
// Il2CppName: get_QueryParams
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* (Meta::WitAi::Requests::VoiceServiceRequestOptions::*)()>(&Meta::WitAi::Requests::VoiceServiceRequestOptions::get_QueryParams)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::Requests::VoiceServiceRequestOptions*), "get_QueryParams", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::Requests::VoiceServiceRequestOptions::set_QueryParams
// Il2CppName: set_QueryParams
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Meta::WitAi::Requests::VoiceServiceRequestOptions::*)(::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>*)>(&Meta::WitAi::Requests::VoiceServiceRequestOptions::set_QueryParams)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "Dictionary`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::Requests::VoiceServiceRequestOptions*), "set_QueryParams", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::Requests::VoiceServiceRequestOptions::get_Text
// Il2CppName: get_Text
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (Meta::WitAi::Requests::VoiceServiceRequestOptions::*)()>(&Meta::WitAi::Requests::VoiceServiceRequestOptions::get_Text)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::Requests::VoiceServiceRequestOptions*), "get_Text", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::Requests::VoiceServiceRequestOptions::set_Text
// Il2CppName: set_Text
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Meta::WitAi::Requests::VoiceServiceRequestOptions::*)(::StringW)>(&Meta::WitAi::Requests::VoiceServiceRequestOptions::set_Text)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::Requests::VoiceServiceRequestOptions*), "set_Text", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::Requests::VoiceServiceRequestOptions::get_AudioThreshold
// Il2CppName: get_AudioThreshold
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (Meta::WitAi::Requests::VoiceServiceRequestOptions::*)()>(&Meta::WitAi::Requests::VoiceServiceRequestOptions::get_AudioThreshold)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::Requests::VoiceServiceRequestOptions*), "get_AudioThreshold", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::Requests::VoiceServiceRequestOptions::set_AudioThreshold
// Il2CppName: set_AudioThreshold
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Meta::WitAi::Requests::VoiceServiceRequestOptions::*)(float)>(&Meta::WitAi::Requests::VoiceServiceRequestOptions::set_AudioThreshold)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::Requests::VoiceServiceRequestOptions*), "set_AudioThreshold", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::Requests::VoiceServiceRequestOptions::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: Meta::WitAi::Requests::VoiceServiceRequestOptions::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: Meta::WitAi::Requests::VoiceServiceRequestOptions::GetUniqueRequestId
// Il2CppName: GetUniqueRequestId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (Meta::WitAi::Requests::VoiceServiceRequestOptions::*)()>(&Meta::WitAi::Requests::VoiceServiceRequestOptions::GetUniqueRequestId)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::Requests::VoiceServiceRequestOptions*), "GetUniqueRequestId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::Requests::VoiceServiceRequestOptions::ConvertQueryParams
// Il2CppName: ConvertQueryParams
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* (*)(::ArrayW<::Meta::WitAi::Requests::VoiceServiceRequestOptions::QueryParam*>)>(&Meta::WitAi::Requests::VoiceServiceRequestOptions::ConvertQueryParams)> {
  static const MethodInfo* get() {
    static auto* newParams = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("Meta.WitAi.Requests", "VoiceServiceRequestOptions/QueryParam"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::Requests::VoiceServiceRequestOptions*), "ConvertQueryParams", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{newParams});
  }
};
