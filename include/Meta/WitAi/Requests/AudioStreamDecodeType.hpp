// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Enum
#include "System/Enum.hpp"
// Completed includes
// Type namespace: Meta.WitAi.Requests
namespace Meta::WitAi::Requests {
  // Forward declaring type: AudioStreamDecodeType
  struct AudioStreamDecodeType;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::Meta::WitAi::Requests::AudioStreamDecodeType, "Meta.WitAi.Requests", "AudioStreamDecodeType");
// Type namespace: Meta.WitAi.Requests
namespace Meta::WitAi::Requests {
  // Size: 0x4
  #pragma pack(push, 1)
  // Autogenerated type: Meta.WitAi.Requests.AudioStreamDecodeType
  // [TokenAttribute] Offset: FFFFFFFF
  struct AudioStreamDecodeType/*, public ::System::Enum*/ {
    public:
    public:
    // public System.Int32 value__
    // Size: 0x4
    // Offset: 0x0
    int value;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Creating value type constructor for type: AudioStreamDecodeType
    constexpr AudioStreamDecodeType(int value_ = {}) noexcept : value{value_} {}
    // Creating interface conversion operator: operator ::System::Enum
    operator ::System::Enum() noexcept {
      return *reinterpret_cast<::System::Enum*>(this);
    }
    // Creating conversion operator: operator int
    constexpr operator int() const noexcept {
      return value;
    }
    // static field const value: static public Meta.WitAi.Requests.AudioStreamDecodeType PCM16
    static constexpr const int PCM16 = 0;
    // Get static field: static public Meta.WitAi.Requests.AudioStreamDecodeType PCM16
    static ::Meta::WitAi::Requests::AudioStreamDecodeType _get_PCM16();
    // Set static field: static public Meta.WitAi.Requests.AudioStreamDecodeType PCM16
    static void _set_PCM16(::Meta::WitAi::Requests::AudioStreamDecodeType value);
    // static field const value: static public Meta.WitAi.Requests.AudioStreamDecodeType MP3
    static constexpr const int MP3 = 1;
    // Get static field: static public Meta.WitAi.Requests.AudioStreamDecodeType MP3
    static ::Meta::WitAi::Requests::AudioStreamDecodeType _get_MP3();
    // Set static field: static public Meta.WitAi.Requests.AudioStreamDecodeType MP3
    static void _set_MP3(::Meta::WitAi::Requests::AudioStreamDecodeType value);
    // static field const value: static public Meta.WitAi.Requests.AudioStreamDecodeType WAV
    static constexpr const int WAV = 2;
    // Get static field: static public Meta.WitAi.Requests.AudioStreamDecodeType WAV
    static ::Meta::WitAi::Requests::AudioStreamDecodeType _get_WAV();
    // Set static field: static public Meta.WitAi.Requests.AudioStreamDecodeType WAV
    static void _set_WAV(::Meta::WitAi::Requests::AudioStreamDecodeType value);
    // Get instance field reference: public System.Int32 value__
    [[deprecated("Use field access instead!")]] int& dyn_value__();
  }; // Meta.WitAi.Requests.AudioStreamDecodeType
  #pragma pack(pop)
  static check_size<sizeof(AudioStreamDecodeType), 0 + sizeof(int)> __Meta_WitAi_Requests_AudioStreamDecodeTypeSizeCheck;
  static_assert(sizeof(AudioStreamDecodeType) == 0x4);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
