// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Meta.Voice.INLPTextRequestResults
#include "Meta/Voice/INLPTextRequestResults.hpp"
// Including type: Meta.Voice.INLPAudioRequestResults
#include "Meta/Voice/INLPAudioRequestResults.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Meta::WitAi::Json
namespace Meta::WitAi::Json {
  // Forward declaring type: WitResponseNode
  class WitResponseNode;
}
// Completed forward declares
// Type namespace: Meta.WitAi.Requests
namespace Meta::WitAi::Requests {
  // Forward declaring type: VoiceServiceRequestResults
  class VoiceServiceRequestResults;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Meta::WitAi::Requests::VoiceServiceRequestResults);
DEFINE_IL2CPP_ARG_TYPE(::Meta::WitAi::Requests::VoiceServiceRequestResults*, "Meta.WitAi.Requests", "VoiceServiceRequestResults");
// Type namespace: Meta.WitAi.Requests
namespace Meta::WitAi::Requests {
  // Size: 0x40
  #pragma pack(push, 1)
  // Autogenerated type: Meta.WitAi.Requests.VoiceServiceRequestResults
  // [TokenAttribute] Offset: FFFFFFFF
  class VoiceServiceRequestResults : public ::Il2CppObject/*, public ::Meta::Voice::INLPTextRequestResults, public ::Meta::Voice::INLPAudioRequestResults*/ {
    public:
    public:
    // private System.Int32 <StatusCode>k__BackingField
    // Size: 0x4
    // Offset: 0x10
    int StatusCode;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // Padding between fields: StatusCode and: Message
    char __padding0[0x4] = {};
    // private System.String <Message>k__BackingField
    // Size: 0x8
    // Offset: 0x18
    ::StringW Message;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private System.String <Transcription>k__BackingField
    // Size: 0x8
    // Offset: 0x20
    ::StringW Transcription;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private System.Boolean <IsFinalTranscription>k__BackingField
    // Size: 0x1
    // Offset: 0x28
    bool IsFinalTranscription;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: IsFinalTranscription and: FinalTranscriptions
    char __padding3[0x7] = {};
    // private System.String[] <FinalTranscriptions>k__BackingField
    // Size: 0x8
    // Offset: 0x30
    ::ArrayW<::StringW> FinalTranscriptions;
    // Field size check
    static_assert(sizeof(::ArrayW<::StringW>) == 0x8);
    // private Meta.WitAi.Json.WitResponseNode <ResponseData>k__BackingField
    // Size: 0x8
    // Offset: 0x38
    ::Meta::WitAi::Json::WitResponseNode* ResponseData;
    // Field size check
    static_assert(sizeof(::Meta::WitAi::Json::WitResponseNode*) == 0x8);
    public:
    // Creating interface conversion operator: operator ::Meta::Voice::INLPTextRequestResults
    operator ::Meta::Voice::INLPTextRequestResults() noexcept {
      return *reinterpret_cast<::Meta::Voice::INLPTextRequestResults*>(this);
    }
    // Creating interface conversion operator: operator ::Meta::Voice::INLPAudioRequestResults
    operator ::Meta::Voice::INLPAudioRequestResults() noexcept {
      return *reinterpret_cast<::Meta::Voice::INLPAudioRequestResults*>(this);
    }
    // Get instance field reference: private System.Int32 <StatusCode>k__BackingField
    [[deprecated("Use field access instead!")]] int& dyn_$StatusCode$k__BackingField();
    // Get instance field reference: private System.String <Message>k__BackingField
    [[deprecated("Use field access instead!")]] ::StringW& dyn_$Message$k__BackingField();
    // Get instance field reference: private System.String <Transcription>k__BackingField
    [[deprecated("Use field access instead!")]] ::StringW& dyn_$Transcription$k__BackingField();
    // Get instance field reference: private System.Boolean <IsFinalTranscription>k__BackingField
    [[deprecated("Use field access instead!")]] bool& dyn_$IsFinalTranscription$k__BackingField();
    // Get instance field reference: private System.String[] <FinalTranscriptions>k__BackingField
    [[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& dyn_$FinalTranscriptions$k__BackingField();
    // Get instance field reference: private Meta.WitAi.Json.WitResponseNode <ResponseData>k__BackingField
    [[deprecated("Use field access instead!")]] ::Meta::WitAi::Json::WitResponseNode*& dyn_$ResponseData$k__BackingField();
    // public System.Int32 get_StatusCode()
    // Offset: 0x4439B4C
    int get_StatusCode();
    // System.Void set_StatusCode(System.Int32 value)
    // Offset: 0x4439B54
    void set_StatusCode(int value);
    // public System.String get_Message()
    // Offset: 0x4439B5C
    ::StringW get_Message();
    // private System.Void set_Message(System.String value)
    // Offset: 0x4439B64
    void set_Message(::StringW value);
    // public System.String get_Transcription()
    // Offset: 0x4439B6C
    ::StringW get_Transcription();
    // System.Void set_Transcription(System.String value)
    // Offset: 0x4439B74
    void set_Transcription(::StringW value);
    // public System.Boolean get_IsFinalTranscription()
    // Offset: 0x4439B7C
    bool get_IsFinalTranscription();
    // System.Void set_IsFinalTranscription(System.Boolean value)
    // Offset: 0x4439B84
    void set_IsFinalTranscription(bool value);
    // public System.String[] get_FinalTranscriptions()
    // Offset: 0x4439B90
    ::ArrayW<::StringW> get_FinalTranscriptions();
    // System.Void set_FinalTranscriptions(System.String[] value)
    // Offset: 0x4439B98
    void set_FinalTranscriptions(::ArrayW<::StringW> value);
    // public Meta.WitAi.Json.WitResponseNode get_ResponseData()
    // Offset: 0x4439BA0
    ::Meta::WitAi::Json::WitResponseNode* get_ResponseData();
    // System.Void set_ResponseData(Meta.WitAi.Json.WitResponseNode value)
    // Offset: 0x4439BA8
    void set_ResponseData(::Meta::WitAi::Json::WitResponseNode* value);
    // public System.Void .ctor()
    // Offset: 0x4437CD8
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static VoiceServiceRequestResults* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::VoiceServiceRequestResults::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<VoiceServiceRequestResults*, creationType>()));
    }
    // public System.Void .ctor(System.String newMessage)
    // Offset: 0x4438048
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static VoiceServiceRequestResults* New_ctor(::StringW newMessage) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::VoiceServiceRequestResults::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<VoiceServiceRequestResults*, creationType>(newMessage)));
    }
  }; // Meta.WitAi.Requests.VoiceServiceRequestResults
  #pragma pack(pop)
  static check_size<sizeof(VoiceServiceRequestResults), 56 + sizeof(::Meta::WitAi::Json::WitResponseNode*)> __Meta_WitAi_Requests_VoiceServiceRequestResultsSizeCheck;
  static_assert(sizeof(VoiceServiceRequestResults) == 0x40);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Meta::WitAi::Requests::VoiceServiceRequestResults::get_StatusCode
// Il2CppName: get_StatusCode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Meta::WitAi::Requests::VoiceServiceRequestResults::*)()>(&Meta::WitAi::Requests::VoiceServiceRequestResults::get_StatusCode)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::Requests::VoiceServiceRequestResults*), "get_StatusCode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::Requests::VoiceServiceRequestResults::set_StatusCode
// Il2CppName: set_StatusCode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Meta::WitAi::Requests::VoiceServiceRequestResults::*)(int)>(&Meta::WitAi::Requests::VoiceServiceRequestResults::set_StatusCode)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::Requests::VoiceServiceRequestResults*), "set_StatusCode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::Requests::VoiceServiceRequestResults::get_Message
// Il2CppName: get_Message
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (Meta::WitAi::Requests::VoiceServiceRequestResults::*)()>(&Meta::WitAi::Requests::VoiceServiceRequestResults::get_Message)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::Requests::VoiceServiceRequestResults*), "get_Message", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::Requests::VoiceServiceRequestResults::set_Message
// Il2CppName: set_Message
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Meta::WitAi::Requests::VoiceServiceRequestResults::*)(::StringW)>(&Meta::WitAi::Requests::VoiceServiceRequestResults::set_Message)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::Requests::VoiceServiceRequestResults*), "set_Message", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::Requests::VoiceServiceRequestResults::get_Transcription
// Il2CppName: get_Transcription
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (Meta::WitAi::Requests::VoiceServiceRequestResults::*)()>(&Meta::WitAi::Requests::VoiceServiceRequestResults::get_Transcription)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::Requests::VoiceServiceRequestResults*), "get_Transcription", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::Requests::VoiceServiceRequestResults::set_Transcription
// Il2CppName: set_Transcription
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Meta::WitAi::Requests::VoiceServiceRequestResults::*)(::StringW)>(&Meta::WitAi::Requests::VoiceServiceRequestResults::set_Transcription)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::Requests::VoiceServiceRequestResults*), "set_Transcription", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::Requests::VoiceServiceRequestResults::get_IsFinalTranscription
// Il2CppName: get_IsFinalTranscription
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Meta::WitAi::Requests::VoiceServiceRequestResults::*)()>(&Meta::WitAi::Requests::VoiceServiceRequestResults::get_IsFinalTranscription)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::Requests::VoiceServiceRequestResults*), "get_IsFinalTranscription", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::Requests::VoiceServiceRequestResults::set_IsFinalTranscription
// Il2CppName: set_IsFinalTranscription
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Meta::WitAi::Requests::VoiceServiceRequestResults::*)(bool)>(&Meta::WitAi::Requests::VoiceServiceRequestResults::set_IsFinalTranscription)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::Requests::VoiceServiceRequestResults*), "set_IsFinalTranscription", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::Requests::VoiceServiceRequestResults::get_FinalTranscriptions
// Il2CppName: get_FinalTranscriptions
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::StringW> (Meta::WitAi::Requests::VoiceServiceRequestResults::*)()>(&Meta::WitAi::Requests::VoiceServiceRequestResults::get_FinalTranscriptions)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::Requests::VoiceServiceRequestResults*), "get_FinalTranscriptions", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::Requests::VoiceServiceRequestResults::set_FinalTranscriptions
// Il2CppName: set_FinalTranscriptions
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Meta::WitAi::Requests::VoiceServiceRequestResults::*)(::ArrayW<::StringW>)>(&Meta::WitAi::Requests::VoiceServiceRequestResults::set_FinalTranscriptions)> {
  static const MethodInfo* get() {
    static auto* value = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "String"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::Requests::VoiceServiceRequestResults*), "set_FinalTranscriptions", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::Requests::VoiceServiceRequestResults::get_ResponseData
// Il2CppName: get_ResponseData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Meta::WitAi::Json::WitResponseNode* (Meta::WitAi::Requests::VoiceServiceRequestResults::*)()>(&Meta::WitAi::Requests::VoiceServiceRequestResults::get_ResponseData)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::Requests::VoiceServiceRequestResults*), "get_ResponseData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::Requests::VoiceServiceRequestResults::set_ResponseData
// Il2CppName: set_ResponseData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Meta::WitAi::Requests::VoiceServiceRequestResults::*)(::Meta::WitAi::Json::WitResponseNode*)>(&Meta::WitAi::Requests::VoiceServiceRequestResults::set_ResponseData)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("Meta.WitAi.Json", "WitResponseNode")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::Requests::VoiceServiceRequestResults*), "set_ResponseData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::Requests::VoiceServiceRequestResults::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: Meta::WitAi::Requests::VoiceServiceRequestResults::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
