// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Meta.WitAi.Requests.WitTTSVRequest
#include "Meta/WitAi/Requests/WitTTSVRequest.hpp"
// Including type: Meta.WitAi.Requests.VRequest
#include "Meta/WitAi/Requests/VRequest.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Meta::Voice::Audio
namespace Meta::Voice::Audio {
  // Forward declaring type: IAudioClipStream
  class IAudioClipStream;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Meta::WitAi::Requests::WitTTSVRequest::$$c__DisplayClass14_0);
DEFINE_IL2CPP_ARG_TYPE(::Meta::WitAi::Requests::WitTTSVRequest::$$c__DisplayClass14_0*, "Meta.WitAi.Requests", "WitTTSVRequest/<>c__DisplayClass14_0");
// Type namespace: Meta.WitAi.Requests
namespace Meta::WitAi::Requests {
  // Size: 0x28
  #pragma pack(push, 1)
  // Autogenerated type: Meta.WitAi.Requests.WitTTSVRequest/<>c__DisplayClass14_0
  // [TokenAttribute] Offset: FFFFFFFF
  // [CompilerGeneratedAttribute] Offset: FFFFFFFF
  class WitTTSVRequest::$$c__DisplayClass14_0 : public ::Il2CppObject {
    public:
    public:
    // public Meta.WitAi.Requests.WitTTSVRequest <>4__this
    // Size: 0x8
    // Offset: 0x10
    ::Meta::WitAi::Requests::WitTTSVRequest* $$4__this;
    // Field size check
    static_assert(sizeof(::Meta::WitAi::Requests::WitTTSVRequest*) == 0x8);
    // public Meta.Voice.Audio.IAudioClipStream clipStream
    // Size: 0x8
    // Offset: 0x18
    ::Meta::Voice::Audio::IAudioClipStream* clipStream;
    // Field size check
    static_assert(sizeof(::Meta::Voice::Audio::IAudioClipStream*) == 0x8);
    // public Meta.WitAi.Requests.VRequest/RequestCompleteDelegate`1<Meta.Voice.Audio.IAudioClipStream> onClipReady
    // Size: 0x8
    // Offset: 0x20
    ::Meta::WitAi::Requests::VRequest::RequestCompleteDelegate_1<::Meta::Voice::Audio::IAudioClipStream*>* onClipReady;
    // Field size check
    static_assert(sizeof(::Meta::WitAi::Requests::VRequest::RequestCompleteDelegate_1<::Meta::Voice::Audio::IAudioClipStream*>*) == 0x8);
    public:
    // Get instance field reference: public Meta.WitAi.Requests.WitTTSVRequest <>4__this
    [[deprecated("Use field access instead!")]] ::Meta::WitAi::Requests::WitTTSVRequest*& dyn_$$4__this();
    // Get instance field reference: public Meta.Voice.Audio.IAudioClipStream clipStream
    [[deprecated("Use field access instead!")]] ::Meta::Voice::Audio::IAudioClipStream*& dyn_clipStream();
    // Get instance field reference: public Meta.WitAi.Requests.VRequest/RequestCompleteDelegate`1<Meta.Voice.Audio.IAudioClipStream> onClipReady
    [[deprecated("Use field access instead!")]] ::Meta::WitAi::Requests::VRequest::RequestCompleteDelegate_1<::Meta::Voice::Audio::IAudioClipStream*>*& dyn_onClipReady();
    // public System.Void .ctor()
    // Offset: 0x4445538
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static WitTTSVRequest::$$c__DisplayClass14_0* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::WitTTSVRequest::$$c__DisplayClass14_0::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<WitTTSVRequest::$$c__DisplayClass14_0*, creationType>()));
    }
    // System.Void <RequestStream>b__0(System.Byte[] bytes)
    // Offset: 0x4445C60
    void $RequestStream$b__0(::ArrayW<uint8_t> bytes);
  }; // Meta.WitAi.Requests.WitTTSVRequest/<>c__DisplayClass14_0
  #pragma pack(pop)
  static check_size<sizeof(WitTTSVRequest::$$c__DisplayClass14_0), 32 + sizeof(::Meta::WitAi::Requests::VRequest::RequestCompleteDelegate_1<::Meta::Voice::Audio::IAudioClipStream*>*)> __Meta_WitAi_Requests_WitTTSVRequest_$$c__DisplayClass14_0SizeCheck;
  static_assert(sizeof(WitTTSVRequest::$$c__DisplayClass14_0) == 0x28);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Meta::WitAi::Requests::WitTTSVRequest::$$c__DisplayClass14_0::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: Meta::WitAi::Requests::WitTTSVRequest::$$c__DisplayClass14_0::$RequestStream$b__0
// Il2CppName: <RequestStream>b__0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Meta::WitAi::Requests::WitTTSVRequest::$$c__DisplayClass14_0::*)(::ArrayW<uint8_t>)>(&Meta::WitAi::Requests::WitTTSVRequest::$$c__DisplayClass14_0::$RequestStream$b__0)> {
  static const MethodInfo* get() {
    static auto* bytes = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::Requests::WitTTSVRequest::$$c__DisplayClass14_0*), "<RequestStream>b__0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{bytes});
  }
};
