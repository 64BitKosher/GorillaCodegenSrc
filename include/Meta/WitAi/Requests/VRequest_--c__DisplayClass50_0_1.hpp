// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Meta.WitAi.Requests.VRequest
#include "Meta/WitAi/Requests/VRequest.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE_GENERIC_CLASS(::Meta::WitAi::Requests::VRequest::$$c__DisplayClass50_0_1, "Meta.WitAi.Requests", "VRequest/<>c__DisplayClass50_0`1");
// Type namespace: Meta.WitAi.Requests
namespace Meta::WitAi::Requests {
  // WARNING Size may be invalid!
  // Autogenerated type: Meta.WitAi.Requests.VRequest/<>c__DisplayClass50_0`1
  // [TokenAttribute] Offset: FFFFFFFF
  // [CompilerGeneratedAttribute] Offset: FFFFFFFF
  template<typename TData>
  class VRequest::$$c__DisplayClass50_0_1 : public ::Il2CppObject {
    public:
    public:
    // public Meta.WitAi.Requests.VRequest/RequestCompleteDelegate`1<TData> onComplete
    // Size: 0x8
    // Offset: 0x0
    ::Meta::WitAi::Requests::VRequest::RequestCompleteDelegate_1<TData>* onComplete;
    // Field size check
    static_assert(sizeof(::Meta::WitAi::Requests::VRequest::RequestCompleteDelegate_1<TData>*) == 0x8);
    public:
    // Creating conversion operator: operator ::Meta::WitAi::Requests::VRequest::RequestCompleteDelegate_1<TData>*
    constexpr operator ::Meta::WitAi::Requests::VRequest::RequestCompleteDelegate_1<TData>*() const noexcept {
      return onComplete;
    }
    // Autogenerated instance field getter
    // Get instance field: public Meta.WitAi.Requests.VRequest/RequestCompleteDelegate`1<TData> onComplete
    [[deprecated("Use field access instead!")]] ::Meta::WitAi::Requests::VRequest::RequestCompleteDelegate_1<TData>*& dyn_onComplete() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::VRequest::$$c__DisplayClass50_0_1::dyn_onComplete");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onComplete"))->offset;
      return *reinterpret_cast<::Meta::WitAi::Requests::VRequest::RequestCompleteDelegate_1<TData>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // public System.Void .ctor()
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static VRequest::$$c__DisplayClass50_0_1<TData>* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::VRequest::$$c__DisplayClass50_0_1::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<VRequest::$$c__DisplayClass50_0_1<TData>*, creationType>()));
    }
    // System.Void <RequestJson>b__0(System.String text, System.String error)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void $RequestJson$b__0(::StringW text, ::StringW error) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::VRequest::$$c__DisplayClass50_0_1::<RequestJson>b__0");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<RequestJson>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text), ::il2cpp_utils::ExtractType(error)})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, text, error);
    }
  }; // Meta.WitAi.Requests.VRequest/<>c__DisplayClass50_0`1
  // Could not write size check! Type: Meta.WitAi.Requests.VRequest/<>c__DisplayClass50_0`1 is generic, or has no fields that are valid for size checks!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
