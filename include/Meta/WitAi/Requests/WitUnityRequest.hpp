// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Meta.WitAi.Requests.VoiceServiceRequest
#include "Meta/WitAi/Requests/VoiceServiceRequest.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Meta::WitAi::Data::Configuration
namespace Meta::WitAi::Data::Configuration {
  // Forward declaring type: WitConfiguration
  class WitConfiguration;
}
// Forward declaring namespace: Meta::WitAi::Requests
namespace Meta::WitAi::Requests {
  // Forward declaring type: WitVRequest
  class WitVRequest;
  // Forward declaring type: VoiceServiceRequestEvents
  class VoiceServiceRequestEvents;
}
// Forward declaring namespace: Meta::WitAi::Configuration
namespace Meta::WitAi::Configuration {
  // Forward declaring type: WitRequestOptions
  class WitRequestOptions;
}
// Forward declaring namespace: Meta::Voice
namespace Meta::Voice {
  // Skipping declaration: VoiceRequestState because it is already included!
}
// Forward declaring namespace: Meta::WitAi::Json
namespace Meta::WitAi::Json {
  // Forward declaring type: WitResponseNode
  class WitResponseNode;
}
// Completed forward declares
// Type namespace: Meta.WitAi.Requests
namespace Meta::WitAi::Requests {
  // Forward declaring type: WitUnityRequest
  class WitUnityRequest;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Meta::WitAi::Requests::WitUnityRequest);
DEFINE_IL2CPP_ARG_TYPE(::Meta::WitAi::Requests::WitUnityRequest*, "Meta.WitAi.Requests", "WitUnityRequest");
// Type namespace: Meta.WitAi.Requests
namespace Meta::WitAi::Requests {
  // WARNING Size may be invalid!
  // Autogenerated type: Meta.WitAi.Requests.WitUnityRequest
  // [TokenAttribute] Offset: FFFFFFFF
  class WitUnityRequest : public ::Meta::WitAi::Requests::VoiceServiceRequest {
    public:
    public:
    // private Meta.WitAi.Data.Configuration.WitConfiguration <Configuration>k__BackingField
    // Size: 0x8
    // Offset: 0x58
    ::Meta::WitAi::Data::Configuration::WitConfiguration* Configuration;
    // Field size check
    static_assert(sizeof(::Meta::WitAi::Data::Configuration::WitConfiguration*) == 0x8);
    // private readonly Meta.WitAi.Requests.WitVRequest _request
    // Size: 0x8
    // Offset: 0x60
    ::Meta::WitAi::Requests::WitVRequest* request;
    // Field size check
    static_assert(sizeof(::Meta::WitAi::Requests::WitVRequest*) == 0x8);
    // private System.String <Endpoint>k__BackingField
    // Size: 0x8
    // Offset: 0x68
    ::StringW Endpoint;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private System.Boolean <ShouldPost>k__BackingField
    // Size: 0x1
    // Offset: 0x70
    bool ShouldPost;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean _initialized
    // Size: 0x1
    // Offset: 0x71
    bool initialized;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    public:
    // Get instance field reference: private Meta.WitAi.Data.Configuration.WitConfiguration <Configuration>k__BackingField
    [[deprecated("Use field access instead!")]] ::Meta::WitAi::Data::Configuration::WitConfiguration*& dyn_$Configuration$k__BackingField();
    // Get instance field reference: private readonly Meta.WitAi.Requests.WitVRequest _request
    [[deprecated("Use field access instead!")]] ::Meta::WitAi::Requests::WitVRequest*& dyn__request();
    // Get instance field reference: private System.String <Endpoint>k__BackingField
    [[deprecated("Use field access instead!")]] ::StringW& dyn_$Endpoint$k__BackingField();
    // Get instance field reference: private System.Boolean <ShouldPost>k__BackingField
    [[deprecated("Use field access instead!")]] bool& dyn_$ShouldPost$k__BackingField();
    // Get instance field reference: private System.Boolean _initialized
    [[deprecated("Use field access instead!")]] bool& dyn__initialized();
    // public Meta.WitAi.Data.Configuration.WitConfiguration get_Configuration()
    // Offset: 0x4439BB0
    ::Meta::WitAi::Data::Configuration::WitConfiguration* get_Configuration();
    // private System.Void set_Configuration(Meta.WitAi.Data.Configuration.WitConfiguration value)
    // Offset: 0x4439BB8
    void set_Configuration(::Meta::WitAi::Data::Configuration::WitConfiguration* value);
    // public System.String get_Endpoint()
    // Offset: 0x4439BC0
    ::StringW get_Endpoint();
    // public System.Void set_Endpoint(System.String value)
    // Offset: 0x4439BC8
    void set_Endpoint(::StringW value);
    // public System.Boolean get_ShouldPost()
    // Offset: 0x4439BD0
    bool get_ShouldPost();
    // public System.Void set_ShouldPost(System.Boolean value)
    // Offset: 0x4439BD8
    void set_ShouldPost(bool value);
    // public System.Void .ctor(Meta.WitAi.Data.Configuration.WitConfiguration newConfiguration, Meta.Voice.NLPRequestInputType newDataType, Meta.WitAi.Configuration.WitRequestOptions newOptions, Meta.WitAi.Requests.VoiceServiceRequestEvents newEvents)
    // Offset: 0x443100C
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static WitUnityRequest* New_ctor(::Meta::WitAi::Data::Configuration::WitConfiguration* newConfiguration, ::Meta::Voice::NLPRequestInputType newDataType, ::Meta::WitAi::Configuration::WitRequestOptions* newOptions, ::Meta::WitAi::Requests::VoiceServiceRequestEvents* newEvents) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::WitUnityRequest::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<WitUnityRequest*, creationType>(newConfiguration, newDataType, newOptions, newEvents)));
    }
    // protected override System.Void SetState(Meta.Voice.VoiceRequestState newState)
    // Offset: 0x4439BE4
    // Implemented from: Meta.Voice.NLPRequest`4
    // Base method: System.Void NLPRequest_4::SetState(Meta.Voice.VoiceRequestState newState)
    void SetState(::Meta::Voice::VoiceRequestState newState);
    // protected override System.String GetSendError()
    // Offset: 0x4439C48
    // Implemented from: Meta.Voice.NLPRequest`4
    // Base method: System.String NLPRequest_4::GetSendError()
    ::StringW GetSendError();
    // protected override System.Void HandleSend()
    // Offset: 0x4439D10
    // Implemented from: Meta.Voice.VoiceRequest`4
    // Base method: System.Void VoiceRequest_4::HandleSend()
    void HandleSend();
    // protected override System.Void HandleFinalNlpResponse(Meta.WitAi.Json.WitResponseNode responseData, System.String error)
    // Offset: 0x4439E28
    // Implemented from: Meta.Voice.NLPAudioRequest`4
    // Base method: System.Void NLPAudioRequest_4::HandleFinalNlpResponse(Meta.WitAi.Json.WitResponseNode responseData, System.String error)
    void HandleFinalNlpResponse(::Meta::WitAi::Json::WitResponseNode* responseData, ::StringW error);
    // protected override System.Void HandleCancel()
    // Offset: 0x4439EA0
    // Implemented from: Meta.Voice.VoiceRequest`4
    // Base method: System.Void VoiceRequest_4::HandleCancel()
    void HandleCancel();
    // protected override System.String GetActivateAudioError()
    // Offset: 0x4439EB8
    // Implemented from: Meta.Voice.NLPRequest`4
    // Base method: System.String NLPRequest_4::GetActivateAudioError()
    ::StringW GetActivateAudioError();
    // protected override System.Void HandleAudioActivation()
    // Offset: 0x4439EF8
    // Implemented from: Meta.Voice.TranscriptionRequest`4
    // Base method: System.Void TranscriptionRequest_4::HandleAudioActivation()
    void HandleAudioActivation();
    // protected override System.Void HandleAudioDeactivation()
    // Offset: 0x4439F0C
    // Implemented from: Meta.Voice.TranscriptionRequest`4
    // Base method: System.Void TranscriptionRequest_4::HandleAudioDeactivation()
    void HandleAudioDeactivation();
  }; // Meta.WitAi.Requests.WitUnityRequest
  // WARNING Not writing size check since size may be invalid!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Meta::WitAi::Requests::WitUnityRequest::get_Configuration
// Il2CppName: get_Configuration
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Meta::WitAi::Data::Configuration::WitConfiguration* (Meta::WitAi::Requests::WitUnityRequest::*)()>(&Meta::WitAi::Requests::WitUnityRequest::get_Configuration)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::Requests::WitUnityRequest*), "get_Configuration", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::Requests::WitUnityRequest::set_Configuration
// Il2CppName: set_Configuration
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Meta::WitAi::Requests::WitUnityRequest::*)(::Meta::WitAi::Data::Configuration::WitConfiguration*)>(&Meta::WitAi::Requests::WitUnityRequest::set_Configuration)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("Meta.WitAi.Data.Configuration", "WitConfiguration")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::Requests::WitUnityRequest*), "set_Configuration", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::Requests::WitUnityRequest::get_Endpoint
// Il2CppName: get_Endpoint
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (Meta::WitAi::Requests::WitUnityRequest::*)()>(&Meta::WitAi::Requests::WitUnityRequest::get_Endpoint)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::Requests::WitUnityRequest*), "get_Endpoint", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::Requests::WitUnityRequest::set_Endpoint
// Il2CppName: set_Endpoint
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Meta::WitAi::Requests::WitUnityRequest::*)(::StringW)>(&Meta::WitAi::Requests::WitUnityRequest::set_Endpoint)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::Requests::WitUnityRequest*), "set_Endpoint", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::Requests::WitUnityRequest::get_ShouldPost
// Il2CppName: get_ShouldPost
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Meta::WitAi::Requests::WitUnityRequest::*)()>(&Meta::WitAi::Requests::WitUnityRequest::get_ShouldPost)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::Requests::WitUnityRequest*), "get_ShouldPost", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::Requests::WitUnityRequest::set_ShouldPost
// Il2CppName: set_ShouldPost
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Meta::WitAi::Requests::WitUnityRequest::*)(bool)>(&Meta::WitAi::Requests::WitUnityRequest::set_ShouldPost)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::Requests::WitUnityRequest*), "set_ShouldPost", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::Requests::WitUnityRequest::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: Meta::WitAi::Requests::WitUnityRequest::SetState
// Il2CppName: SetState
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Meta::WitAi::Requests::WitUnityRequest::*)(::Meta::Voice::VoiceRequestState)>(&Meta::WitAi::Requests::WitUnityRequest::SetState)> {
  static const MethodInfo* get() {
    static auto* newState = &::il2cpp_utils::GetClassFromName("Meta.Voice", "VoiceRequestState")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::Requests::WitUnityRequest*), "SetState", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{newState});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::Requests::WitUnityRequest::GetSendError
// Il2CppName: GetSendError
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (Meta::WitAi::Requests::WitUnityRequest::*)()>(&Meta::WitAi::Requests::WitUnityRequest::GetSendError)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::Requests::WitUnityRequest*), "GetSendError", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::Requests::WitUnityRequest::HandleSend
// Il2CppName: HandleSend
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Meta::WitAi::Requests::WitUnityRequest::*)()>(&Meta::WitAi::Requests::WitUnityRequest::HandleSend)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::Requests::WitUnityRequest*), "HandleSend", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::Requests::WitUnityRequest::HandleFinalNlpResponse
// Il2CppName: HandleFinalNlpResponse
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Meta::WitAi::Requests::WitUnityRequest::*)(::Meta::WitAi::Json::WitResponseNode*, ::StringW)>(&Meta::WitAi::Requests::WitUnityRequest::HandleFinalNlpResponse)> {
  static const MethodInfo* get() {
    static auto* responseData = &::il2cpp_utils::GetClassFromName("Meta.WitAi.Json", "WitResponseNode")->byval_arg;
    static auto* error = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::Requests::WitUnityRequest*), "HandleFinalNlpResponse", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{responseData, error});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::Requests::WitUnityRequest::HandleCancel
// Il2CppName: HandleCancel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Meta::WitAi::Requests::WitUnityRequest::*)()>(&Meta::WitAi::Requests::WitUnityRequest::HandleCancel)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::Requests::WitUnityRequest*), "HandleCancel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::Requests::WitUnityRequest::GetActivateAudioError
// Il2CppName: GetActivateAudioError
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (Meta::WitAi::Requests::WitUnityRequest::*)()>(&Meta::WitAi::Requests::WitUnityRequest::GetActivateAudioError)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::Requests::WitUnityRequest*), "GetActivateAudioError", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::Requests::WitUnityRequest::HandleAudioActivation
// Il2CppName: HandleAudioActivation
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Meta::WitAi::Requests::WitUnityRequest::*)()>(&Meta::WitAi::Requests::WitUnityRequest::HandleAudioActivation)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::Requests::WitUnityRequest*), "HandleAudioActivation", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::Requests::WitUnityRequest::HandleAudioDeactivation
// Il2CppName: HandleAudioDeactivation
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Meta::WitAi::Requests::WitUnityRequest::*)()>(&Meta::WitAi::Requests::WitUnityRequest::HandleAudioDeactivation)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::Requests::WitUnityRequest*), "HandleAudioDeactivation", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
