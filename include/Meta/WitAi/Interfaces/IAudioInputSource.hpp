// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Action
  class Action;
  // Forward declaring type: Action`3<T1, T2, T3>
  template<typename T1, typename T2, typename T3>
  class Action_3;
}
// Forward declaring namespace: Meta::WitAi::Data
namespace Meta::WitAi::Data {
  // Forward declaring type: AudioEncoding
  class AudioEncoding;
}
// Completed forward declares
// Type namespace: Meta.WitAi.Interfaces
namespace Meta::WitAi::Interfaces {
  // Forward declaring type: IAudioInputSource
  class IAudioInputSource;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Meta::WitAi::Interfaces::IAudioInputSource);
DEFINE_IL2CPP_ARG_TYPE(::Meta::WitAi::Interfaces::IAudioInputSource*, "Meta.WitAi.Interfaces", "IAudioInputSource");
// Type namespace: Meta.WitAi.Interfaces
namespace Meta::WitAi::Interfaces {
  // Size: 0x0
  #pragma pack(push, 1)
  // Autogenerated type: Meta.WitAi.Interfaces.IAudioInputSource
  // [TokenAttribute] Offset: FFFFFFFF
  class IAudioInputSource {
    public:
    // public System.Void add_OnStartRecording(System.Action value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void add_OnStartRecording(::System::Action* value);
    // public System.Void remove_OnStartRecording(System.Action value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void remove_OnStartRecording(::System::Action* value);
    // public System.Void add_OnStartRecordingFailed(System.Action value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void add_OnStartRecordingFailed(::System::Action* value);
    // public System.Void remove_OnStartRecordingFailed(System.Action value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void remove_OnStartRecordingFailed(::System::Action* value);
    // public System.Void add_OnSampleReady(System.Action`3<System.Int32,System.Single[],System.Single> value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void add_OnSampleReady(::System::Action_3<int, ::ArrayW<float>, float>* value);
    // public System.Void remove_OnSampleReady(System.Action`3<System.Int32,System.Single[],System.Single> value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void remove_OnSampleReady(::System::Action_3<int, ::ArrayW<float>, float>* value);
    // public System.Void add_OnStopRecording(System.Action value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void add_OnStopRecording(::System::Action* value);
    // public System.Void remove_OnStopRecording(System.Action value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void remove_OnStopRecording(::System::Action* value);
    // public System.Void StartRecording(System.Int32 sampleLen)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void StartRecording(int sampleLen);
    // public System.Void StopRecording()
    // Offset: 0xFFFFFFFFFFFFFFFF
    void StopRecording();
    // public System.Boolean get_IsRecording()
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool get_IsRecording();
    // public Meta.WitAi.Data.AudioEncoding get_AudioEncoding()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::Meta::WitAi::Data::AudioEncoding* get_AudioEncoding();
    // public System.Boolean get_IsInputAvailable()
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool get_IsInputAvailable();
    // public System.Void CheckForInput()
    // Offset: 0xFFFFFFFFFFFFFFFF
    void CheckForInput();
  }; // Meta.WitAi.Interfaces.IAudioInputSource
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Meta::WitAi::Interfaces::IAudioInputSource::add_OnStartRecording
// Il2CppName: add_OnStartRecording
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Meta::WitAi::Interfaces::IAudioInputSource::*)(::System::Action*)>(&Meta::WitAi::Interfaces::IAudioInputSource::add_OnStartRecording)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Action")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::Interfaces::IAudioInputSource*), "add_OnStartRecording", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::Interfaces::IAudioInputSource::remove_OnStartRecording
// Il2CppName: remove_OnStartRecording
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Meta::WitAi::Interfaces::IAudioInputSource::*)(::System::Action*)>(&Meta::WitAi::Interfaces::IAudioInputSource::remove_OnStartRecording)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Action")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::Interfaces::IAudioInputSource*), "remove_OnStartRecording", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::Interfaces::IAudioInputSource::add_OnStartRecordingFailed
// Il2CppName: add_OnStartRecordingFailed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Meta::WitAi::Interfaces::IAudioInputSource::*)(::System::Action*)>(&Meta::WitAi::Interfaces::IAudioInputSource::add_OnStartRecordingFailed)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Action")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::Interfaces::IAudioInputSource*), "add_OnStartRecordingFailed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::Interfaces::IAudioInputSource::remove_OnStartRecordingFailed
// Il2CppName: remove_OnStartRecordingFailed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Meta::WitAi::Interfaces::IAudioInputSource::*)(::System::Action*)>(&Meta::WitAi::Interfaces::IAudioInputSource::remove_OnStartRecordingFailed)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Action")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::Interfaces::IAudioInputSource*), "remove_OnStartRecordingFailed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::Interfaces::IAudioInputSource::add_OnSampleReady
// Il2CppName: add_OnSampleReady
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Meta::WitAi::Interfaces::IAudioInputSource::*)(::System::Action_3<int, ::ArrayW<float>, float>*)>(&Meta::WitAi::Interfaces::IAudioInputSource::add_OnSampleReady)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`3"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Int32"), il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Single"), 1), ::il2cpp_utils::GetClassFromName("System", "Single")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::Interfaces::IAudioInputSource*), "add_OnSampleReady", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::Interfaces::IAudioInputSource::remove_OnSampleReady
// Il2CppName: remove_OnSampleReady
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Meta::WitAi::Interfaces::IAudioInputSource::*)(::System::Action_3<int, ::ArrayW<float>, float>*)>(&Meta::WitAi::Interfaces::IAudioInputSource::remove_OnSampleReady)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`3"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Int32"), il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Single"), 1), ::il2cpp_utils::GetClassFromName("System", "Single")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::Interfaces::IAudioInputSource*), "remove_OnSampleReady", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::Interfaces::IAudioInputSource::add_OnStopRecording
// Il2CppName: add_OnStopRecording
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Meta::WitAi::Interfaces::IAudioInputSource::*)(::System::Action*)>(&Meta::WitAi::Interfaces::IAudioInputSource::add_OnStopRecording)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Action")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::Interfaces::IAudioInputSource*), "add_OnStopRecording", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::Interfaces::IAudioInputSource::remove_OnStopRecording
// Il2CppName: remove_OnStopRecording
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Meta::WitAi::Interfaces::IAudioInputSource::*)(::System::Action*)>(&Meta::WitAi::Interfaces::IAudioInputSource::remove_OnStopRecording)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Action")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::Interfaces::IAudioInputSource*), "remove_OnStopRecording", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::Interfaces::IAudioInputSource::StartRecording
// Il2CppName: StartRecording
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Meta::WitAi::Interfaces::IAudioInputSource::*)(int)>(&Meta::WitAi::Interfaces::IAudioInputSource::StartRecording)> {
  static const MethodInfo* get() {
    static auto* sampleLen = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::Interfaces::IAudioInputSource*), "StartRecording", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sampleLen});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::Interfaces::IAudioInputSource::StopRecording
// Il2CppName: StopRecording
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Meta::WitAi::Interfaces::IAudioInputSource::*)()>(&Meta::WitAi::Interfaces::IAudioInputSource::StopRecording)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::Interfaces::IAudioInputSource*), "StopRecording", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::Interfaces::IAudioInputSource::get_IsRecording
// Il2CppName: get_IsRecording
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Meta::WitAi::Interfaces::IAudioInputSource::*)()>(&Meta::WitAi::Interfaces::IAudioInputSource::get_IsRecording)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::Interfaces::IAudioInputSource*), "get_IsRecording", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::Interfaces::IAudioInputSource::get_AudioEncoding
// Il2CppName: get_AudioEncoding
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Meta::WitAi::Data::AudioEncoding* (Meta::WitAi::Interfaces::IAudioInputSource::*)()>(&Meta::WitAi::Interfaces::IAudioInputSource::get_AudioEncoding)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::Interfaces::IAudioInputSource*), "get_AudioEncoding", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::Interfaces::IAudioInputSource::get_IsInputAvailable
// Il2CppName: get_IsInputAvailable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Meta::WitAi::Interfaces::IAudioInputSource::*)()>(&Meta::WitAi::Interfaces::IAudioInputSource::get_IsInputAvailable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::Interfaces::IAudioInputSource*), "get_IsInputAvailable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::Interfaces::IAudioInputSource::CheckForInput
// Il2CppName: CheckForInput
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Meta::WitAi::Interfaces::IAudioInputSource::*)()>(&Meta::WitAi::Interfaces::IAudioInputSource::CheckForInput)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::Interfaces::IAudioInputSource*), "CheckForInput", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
