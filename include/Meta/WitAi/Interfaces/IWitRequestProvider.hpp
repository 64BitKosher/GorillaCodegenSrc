// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Meta::WitAi
namespace Meta::WitAi {
  // Forward declaring type: WitRequest
  class WitRequest;
}
// Forward declaring namespace: Meta::WitAi::Data::Configuration
namespace Meta::WitAi::Data::Configuration {
  // Forward declaring type: WitConfiguration
  class WitConfiguration;
}
// Forward declaring namespace: Meta::WitAi::Configuration
namespace Meta::WitAi::Configuration {
  // Forward declaring type: WitRequestOptions
  class WitRequestOptions;
}
// Forward declaring namespace: Meta::WitAi::Requests
namespace Meta::WitAi::Requests {
  // Forward declaring type: VoiceServiceRequestEvents
  class VoiceServiceRequestEvents;
}
// Forward declaring namespace: Meta::WitAi::Interfaces
namespace Meta::WitAi::Interfaces {
  // Forward declaring type: IDynamicEntitiesProvider
  class IDynamicEntitiesProvider;
}
// Completed forward declares
// Type namespace: Meta.WitAi.Interfaces
namespace Meta::WitAi::Interfaces {
  // Forward declaring type: IWitRequestProvider
  class IWitRequestProvider;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Meta::WitAi::Interfaces::IWitRequestProvider);
DEFINE_IL2CPP_ARG_TYPE(::Meta::WitAi::Interfaces::IWitRequestProvider*, "Meta.WitAi.Interfaces", "IWitRequestProvider");
// Type namespace: Meta.WitAi.Interfaces
namespace Meta::WitAi::Interfaces {
  // Size: 0x0
  #pragma pack(push, 1)
  // Autogenerated type: Meta.WitAi.Interfaces.IWitRequestProvider
  // [TokenAttribute] Offset: FFFFFFFF
  class IWitRequestProvider {
    public:
    // public Meta.WitAi.WitRequest CreateWitRequest(Meta.WitAi.Data.Configuration.WitConfiguration config, Meta.WitAi.Configuration.WitRequestOptions requestOptions, Meta.WitAi.Requests.VoiceServiceRequestEvents requestEvents, Meta.WitAi.Interfaces.IDynamicEntitiesProvider[] additionalEntityProviders)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::Meta::WitAi::WitRequest* CreateWitRequest(::Meta::WitAi::Data::Configuration::WitConfiguration* config, ::Meta::WitAi::Configuration::WitRequestOptions* requestOptions, ::Meta::WitAi::Requests::VoiceServiceRequestEvents* requestEvents, ::ArrayW<::Meta::WitAi::Interfaces::IDynamicEntitiesProvider*> additionalEntityProviders);
  }; // Meta.WitAi.Interfaces.IWitRequestProvider
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Meta::WitAi::Interfaces::IWitRequestProvider::CreateWitRequest
// Il2CppName: CreateWitRequest
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Meta::WitAi::WitRequest* (Meta::WitAi::Interfaces::IWitRequestProvider::*)(::Meta::WitAi::Data::Configuration::WitConfiguration*, ::Meta::WitAi::Configuration::WitRequestOptions*, ::Meta::WitAi::Requests::VoiceServiceRequestEvents*, ::ArrayW<::Meta::WitAi::Interfaces::IDynamicEntitiesProvider*>)>(&Meta::WitAi::Interfaces::IWitRequestProvider::CreateWitRequest)> {
  static const MethodInfo* get() {
    static auto* config = &::il2cpp_utils::GetClassFromName("Meta.WitAi.Data.Configuration", "WitConfiguration")->byval_arg;
    static auto* requestOptions = &::il2cpp_utils::GetClassFromName("Meta.WitAi.Configuration", "WitRequestOptions")->byval_arg;
    static auto* requestEvents = &::il2cpp_utils::GetClassFromName("Meta.WitAi.Requests", "VoiceServiceRequestEvents")->byval_arg;
    static auto* additionalEntityProviders = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("Meta.WitAi.Interfaces", "IDynamicEntitiesProvider"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::Interfaces::IWitRequestProvider*), "CreateWitRequest", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{config, requestOptions, requestEvents, additionalEntityProviders});
  }
};
