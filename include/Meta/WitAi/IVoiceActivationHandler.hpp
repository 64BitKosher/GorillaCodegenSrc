// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Meta::WitAi::Requests
namespace Meta::WitAi::Requests {
  // Forward declaring type: VoiceServiceRequest
  class VoiceServiceRequest;
  // Forward declaring type: VoiceServiceRequestEvents
  class VoiceServiceRequestEvents;
}
// Forward declaring namespace: Meta::WitAi::Configuration
namespace Meta::WitAi::Configuration {
  // Forward declaring type: WitRequestOptions
  class WitRequestOptions;
}
// Completed forward declares
// Type namespace: Meta.WitAi
namespace Meta::WitAi {
  // Forward declaring type: IVoiceActivationHandler
  class IVoiceActivationHandler;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Meta::WitAi::IVoiceActivationHandler);
DEFINE_IL2CPP_ARG_TYPE(::Meta::WitAi::IVoiceActivationHandler*, "Meta.WitAi", "IVoiceActivationHandler");
// Type namespace: Meta.WitAi
namespace Meta::WitAi {
  // Size: 0x0
  #pragma pack(push, 1)
  // Autogenerated type: Meta.WitAi.IVoiceActivationHandler
  // [TokenAttribute] Offset: FFFFFFFF
  class IVoiceActivationHandler {
    public:
    // public System.Boolean get_Active()
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool get_Active();
    // public Meta.WitAi.Requests.VoiceServiceRequest Activate(System.String text, Meta.WitAi.Configuration.WitRequestOptions requestOptions, Meta.WitAi.Requests.VoiceServiceRequestEvents requestEvents)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::Meta::WitAi::Requests::VoiceServiceRequest* Activate(::StringW text, ::Meta::WitAi::Configuration::WitRequestOptions* requestOptions, ::Meta::WitAi::Requests::VoiceServiceRequestEvents* requestEvents);
    // public Meta.WitAi.Requests.VoiceServiceRequest Activate(Meta.WitAi.Configuration.WitRequestOptions requestOptions, Meta.WitAi.Requests.VoiceServiceRequestEvents requestEvents)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::Meta::WitAi::Requests::VoiceServiceRequest* Activate(::Meta::WitAi::Configuration::WitRequestOptions* requestOptions, ::Meta::WitAi::Requests::VoiceServiceRequestEvents* requestEvents);
    // public Meta.WitAi.Requests.VoiceServiceRequest ActivateImmediately(Meta.WitAi.Configuration.WitRequestOptions requestOptions, Meta.WitAi.Requests.VoiceServiceRequestEvents requestEvents)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::Meta::WitAi::Requests::VoiceServiceRequest* ActivateImmediately(::Meta::WitAi::Configuration::WitRequestOptions* requestOptions, ::Meta::WitAi::Requests::VoiceServiceRequestEvents* requestEvents);
    // public System.Void Deactivate()
    // Offset: 0xFFFFFFFFFFFFFFFF
    void Deactivate();
    // public System.Void DeactivateAndAbortRequest()
    // Offset: 0xFFFFFFFFFFFFFFFF
    void DeactivateAndAbortRequest();
    // public System.Void DeactivateAndAbortRequest(Meta.WitAi.Requests.VoiceServiceRequest request)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void DeactivateAndAbortRequest(::Meta::WitAi::Requests::VoiceServiceRequest* request);
  }; // Meta.WitAi.IVoiceActivationHandler
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Meta::WitAi::IVoiceActivationHandler::get_Active
// Il2CppName: get_Active
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Meta::WitAi::IVoiceActivationHandler::*)()>(&Meta::WitAi::IVoiceActivationHandler::get_Active)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::IVoiceActivationHandler*), "get_Active", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::IVoiceActivationHandler::Activate
// Il2CppName: Activate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Meta::WitAi::Requests::VoiceServiceRequest* (Meta::WitAi::IVoiceActivationHandler::*)(::StringW, ::Meta::WitAi::Configuration::WitRequestOptions*, ::Meta::WitAi::Requests::VoiceServiceRequestEvents*)>(&Meta::WitAi::IVoiceActivationHandler::Activate)> {
  static const MethodInfo* get() {
    static auto* text = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* requestOptions = &::il2cpp_utils::GetClassFromName("Meta.WitAi.Configuration", "WitRequestOptions")->byval_arg;
    static auto* requestEvents = &::il2cpp_utils::GetClassFromName("Meta.WitAi.Requests", "VoiceServiceRequestEvents")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::IVoiceActivationHandler*), "Activate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{text, requestOptions, requestEvents});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::IVoiceActivationHandler::Activate
// Il2CppName: Activate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Meta::WitAi::Requests::VoiceServiceRequest* (Meta::WitAi::IVoiceActivationHandler::*)(::Meta::WitAi::Configuration::WitRequestOptions*, ::Meta::WitAi::Requests::VoiceServiceRequestEvents*)>(&Meta::WitAi::IVoiceActivationHandler::Activate)> {
  static const MethodInfo* get() {
    static auto* requestOptions = &::il2cpp_utils::GetClassFromName("Meta.WitAi.Configuration", "WitRequestOptions")->byval_arg;
    static auto* requestEvents = &::il2cpp_utils::GetClassFromName("Meta.WitAi.Requests", "VoiceServiceRequestEvents")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::IVoiceActivationHandler*), "Activate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{requestOptions, requestEvents});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::IVoiceActivationHandler::ActivateImmediately
// Il2CppName: ActivateImmediately
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Meta::WitAi::Requests::VoiceServiceRequest* (Meta::WitAi::IVoiceActivationHandler::*)(::Meta::WitAi::Configuration::WitRequestOptions*, ::Meta::WitAi::Requests::VoiceServiceRequestEvents*)>(&Meta::WitAi::IVoiceActivationHandler::ActivateImmediately)> {
  static const MethodInfo* get() {
    static auto* requestOptions = &::il2cpp_utils::GetClassFromName("Meta.WitAi.Configuration", "WitRequestOptions")->byval_arg;
    static auto* requestEvents = &::il2cpp_utils::GetClassFromName("Meta.WitAi.Requests", "VoiceServiceRequestEvents")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::IVoiceActivationHandler*), "ActivateImmediately", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{requestOptions, requestEvents});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::IVoiceActivationHandler::Deactivate
// Il2CppName: Deactivate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Meta::WitAi::IVoiceActivationHandler::*)()>(&Meta::WitAi::IVoiceActivationHandler::Deactivate)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::IVoiceActivationHandler*), "Deactivate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::IVoiceActivationHandler::DeactivateAndAbortRequest
// Il2CppName: DeactivateAndAbortRequest
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Meta::WitAi::IVoiceActivationHandler::*)()>(&Meta::WitAi::IVoiceActivationHandler::DeactivateAndAbortRequest)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::IVoiceActivationHandler*), "DeactivateAndAbortRequest", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::IVoiceActivationHandler::DeactivateAndAbortRequest
// Il2CppName: DeactivateAndAbortRequest
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Meta::WitAi::IVoiceActivationHandler::*)(::Meta::WitAi::Requests::VoiceServiceRequest*)>(&Meta::WitAi::IVoiceActivationHandler::DeactivateAndAbortRequest)> {
  static const MethodInfo* get() {
    static auto* request = &::il2cpp_utils::GetClassFromName("Meta.WitAi.Requests", "VoiceServiceRequest")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::IVoiceActivationHandler*), "DeactivateAndAbortRequest", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{request});
  }
};
