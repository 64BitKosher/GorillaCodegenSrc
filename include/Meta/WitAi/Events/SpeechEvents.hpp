// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Meta.WitAi.Events.EventRegistry
#include "Meta/WitAi/Events/EventRegistry.hpp"
// Including type: Meta.WitAi.Interfaces.ISpeechEvents
#include "Meta/WitAi/Interfaces/ISpeechEvents.hpp"
// Including type: Meta.WitAi.Interfaces.ITranscriptionEvent
#include "Meta/WitAi/Interfaces/ITranscriptionEvent.hpp"
// Including type: Meta.WitAi.Interfaces.IAudioInputEvents
#include "Meta/WitAi/Interfaces/IAudioInputEvents.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Meta::WitAi::Events
namespace Meta::WitAi::Events {
  // Forward declaring type: WitRequestOptionsEvent
  class WitRequestOptionsEvent;
  // Forward declaring type: VoiceServiceRequestEvent
  class VoiceServiceRequestEvent;
  // Forward declaring type: WitRequestCreatedEvent
  class WitRequestCreatedEvent;
  // Forward declaring type: WitTranscriptionEvent
  class WitTranscriptionEvent;
  // Forward declaring type: WitResponseEvent
  class WitResponseEvent;
  // Forward declaring type: WitErrorEvent
  class WitErrorEvent;
  // Forward declaring type: WitMicLevelChangedEvent
  class WitMicLevelChangedEvent;
}
// Forward declaring namespace: UnityEngine::Events
namespace UnityEngine::Events {
  // Forward declaring type: UnityEvent
  class UnityEvent;
  // Forward declaring type: UnityEvent`1<T0>
  template<typename T0>
  class UnityEvent_1;
  // Forward declaring type: UnityEvent`2<T0, T1>
  template<typename T0, typename T1>
  class UnityEvent_2;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: HashSet`1<T>
  template<typename T>
  class HashSet_1;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: String
  class String;
  // Forward declaring type: Func`2<T, TResult>
  template<typename T, typename TResult>
  class Func_2;
}
// Completed forward declares
// Type namespace: Meta.WitAi.Events
namespace Meta::WitAi::Events {
  // Forward declaring type: SpeechEvents
  class SpeechEvents;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Meta::WitAi::Events::SpeechEvents);
DEFINE_IL2CPP_ARG_TYPE(::Meta::WitAi::Events::SpeechEvents*, "Meta.WitAi.Events", "SpeechEvents");
// Type namespace: Meta.WitAi.Events
namespace Meta::WitAi::Events {
  // Size: 0xD8
  #pragma pack(push, 1)
  // Autogenerated type: Meta.WitAi.Events.SpeechEvents
  // [TokenAttribute] Offset: FFFFFFFF
  class SpeechEvents : public ::Meta::WitAi::Events::EventRegistry/*, public ::Meta::WitAi::Interfaces::ISpeechEvents, public ::Meta::WitAi::Interfaces::ITranscriptionEvent, public ::Meta::WitAi::Interfaces::IAudioInputEvents*/ {
    public:
    // Nested type: ::Meta::WitAi::Events::SpeechEvents::$$c
    class $$c;
    // Nested type: ::Meta::WitAi::Events::SpeechEvents::$$c__DisplayClass86_0
    class $$c__DisplayClass86_0;
    // Nested type: ::Meta::WitAi::Events::SpeechEvents::$$c__DisplayClass87_0_1<T>
    template<typename T>
    class $$c__DisplayClass87_0_1;
    // Nested type: ::Meta::WitAi::Events::SpeechEvents::$$c__DisplayClass88_0_2<T, U>
    template<typename T, typename U>
    class $$c__DisplayClass88_0_2;
    public:
    // private Meta.WitAi.Events.WitRequestOptionsEvent _onRequestOptionSetup
    // Size: 0x8
    // Offset: 0x20
    ::Meta::WitAi::Events::WitRequestOptionsEvent* onRequestOptionSetup;
    // Field size check
    static_assert(sizeof(::Meta::WitAi::Events::WitRequestOptionsEvent*) == 0x8);
    // private Meta.WitAi.Events.VoiceServiceRequestEvent _onRequestInitialized
    // Size: 0x8
    // Offset: 0x28
    ::Meta::WitAi::Events::VoiceServiceRequestEvent* onRequestInitialized;
    // Field size check
    static_assert(sizeof(::Meta::WitAi::Events::VoiceServiceRequestEvent*) == 0x8);
    // private Meta.WitAi.Events.WitRequestCreatedEvent _onRequestCreated
    // Size: 0x8
    // Offset: 0x30
    ::Meta::WitAi::Events::WitRequestCreatedEvent* onRequestCreated;
    // Field size check
    static_assert(sizeof(::Meta::WitAi::Events::WitRequestCreatedEvent*) == 0x8);
    // private Meta.WitAi.Events.VoiceServiceRequestEvent _onSend
    // Size: 0x8
    // Offset: 0x38
    ::Meta::WitAi::Events::VoiceServiceRequestEvent* onSend;
    // Field size check
    static_assert(sizeof(::Meta::WitAi::Events::VoiceServiceRequestEvent*) == 0x8);
    // private UnityEngine.Events.UnityEvent _onMinimumWakeThresholdHit
    // Size: 0x8
    // Offset: 0x40
    ::UnityEngine::Events::UnityEvent* onMinimumWakeThresholdHit;
    // Field size check
    static_assert(sizeof(::UnityEngine::Events::UnityEvent*) == 0x8);
    // private UnityEngine.Events.UnityEvent _onMicDataSent
    // Size: 0x8
    // Offset: 0x48
    ::UnityEngine::Events::UnityEvent* onMicDataSent;
    // Field size check
    static_assert(sizeof(::UnityEngine::Events::UnityEvent*) == 0x8);
    // private UnityEngine.Events.UnityEvent _onStoppedListeningDueToDeactivation
    // Size: 0x8
    // Offset: 0x50
    ::UnityEngine::Events::UnityEvent* onStoppedListeningDueToDeactivation;
    // Field size check
    static_assert(sizeof(::UnityEngine::Events::UnityEvent*) == 0x8);
    // private UnityEngine.Events.UnityEvent _onStoppedListeningDueToInactivity
    // Size: 0x8
    // Offset: 0x58
    ::UnityEngine::Events::UnityEvent* onStoppedListeningDueToInactivity;
    // Field size check
    static_assert(sizeof(::UnityEngine::Events::UnityEvent*) == 0x8);
    // private UnityEngine.Events.UnityEvent _onStoppedListeningDueToTimeout
    // Size: 0x8
    // Offset: 0x60
    ::UnityEngine::Events::UnityEvent* onStoppedListeningDueToTimeout;
    // Field size check
    static_assert(sizeof(::UnityEngine::Events::UnityEvent*) == 0x8);
    // private UnityEngine.Events.UnityEvent _onAborting
    // Size: 0x8
    // Offset: 0x68
    ::UnityEngine::Events::UnityEvent* onAborting;
    // Field size check
    static_assert(sizeof(::UnityEngine::Events::UnityEvent*) == 0x8);
    // private UnityEngine.Events.UnityEvent _onAborted
    // Size: 0x8
    // Offset: 0x70
    ::UnityEngine::Events::UnityEvent* onAborted;
    // Field size check
    static_assert(sizeof(::UnityEngine::Events::UnityEvent*) == 0x8);
    // private Meta.WitAi.Events.WitTranscriptionEvent _onCanceled
    // Size: 0x8
    // Offset: 0x78
    ::Meta::WitAi::Events::WitTranscriptionEvent* onCanceled;
    // Field size check
    static_assert(sizeof(::Meta::WitAi::Events::WitTranscriptionEvent*) == 0x8);
    // private Meta.WitAi.Events.WitResponseEvent _onPartialResponse
    // Size: 0x8
    // Offset: 0x80
    ::Meta::WitAi::Events::WitResponseEvent* onPartialResponse;
    // Field size check
    static_assert(sizeof(::Meta::WitAi::Events::WitResponseEvent*) == 0x8);
    // private Meta.WitAi.Events.WitResponseEvent _onResponse
    // Size: 0x8
    // Offset: 0x88
    ::Meta::WitAi::Events::WitResponseEvent* onResponse;
    // Field size check
    static_assert(sizeof(::Meta::WitAi::Events::WitResponseEvent*) == 0x8);
    // private Meta.WitAi.Events.WitErrorEvent _onError
    // Size: 0x8
    // Offset: 0x90
    ::Meta::WitAi::Events::WitErrorEvent* onError;
    // Field size check
    static_assert(sizeof(::Meta::WitAi::Events::WitErrorEvent*) == 0x8);
    // private UnityEngine.Events.UnityEvent _onRequestCompleted
    // Size: 0x8
    // Offset: 0x98
    ::UnityEngine::Events::UnityEvent* onRequestCompleted;
    // Field size check
    static_assert(sizeof(::UnityEngine::Events::UnityEvent*) == 0x8);
    // private Meta.WitAi.Events.VoiceServiceRequestEvent _onComplete
    // Size: 0x8
    // Offset: 0xA0
    ::Meta::WitAi::Events::VoiceServiceRequestEvent* onComplete;
    // Field size check
    static_assert(sizeof(::Meta::WitAi::Events::VoiceServiceRequestEvent*) == 0x8);
    // private UnityEngine.Events.UnityEvent _onStartListening
    // Size: 0x8
    // Offset: 0xA8
    ::UnityEngine::Events::UnityEvent* onStartListening;
    // Field size check
    static_assert(sizeof(::UnityEngine::Events::UnityEvent*) == 0x8);
    // private UnityEngine.Events.UnityEvent _onStoppedListening
    // Size: 0x8
    // Offset: 0xB0
    ::UnityEngine::Events::UnityEvent* onStoppedListening;
    // Field size check
    static_assert(sizeof(::UnityEngine::Events::UnityEvent*) == 0x8);
    // private Meta.WitAi.Events.WitMicLevelChangedEvent _onMicLevelChanged
    // Size: 0x8
    // Offset: 0xB8
    ::Meta::WitAi::Events::WitMicLevelChangedEvent* onMicLevelChanged;
    // Field size check
    static_assert(sizeof(::Meta::WitAi::Events::WitMicLevelChangedEvent*) == 0x8);
    // private Meta.WitAi.Events.WitTranscriptionEvent _onPartialTranscription
    // Size: 0x8
    // Offset: 0xC0
    ::Meta::WitAi::Events::WitTranscriptionEvent* onPartialTranscription;
    // Field size check
    static_assert(sizeof(::Meta::WitAi::Events::WitTranscriptionEvent*) == 0x8);
    // private Meta.WitAi.Events.WitTranscriptionEvent _onFullTranscription
    // Size: 0x8
    // Offset: 0xC8
    ::Meta::WitAi::Events::WitTranscriptionEvent* onFullTranscription;
    // Field size check
    static_assert(sizeof(::Meta::WitAi::Events::WitTranscriptionEvent*) == 0x8);
    // private System.Collections.Generic.HashSet`1<Meta.WitAi.Events.SpeechEvents> _listeners
    // Size: 0x8
    // Offset: 0xD0
    ::System::Collections::Generic::HashSet_1<::Meta::WitAi::Events::SpeechEvents*>* listeners;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::HashSet_1<::Meta::WitAi::Events::SpeechEvents*>*) == 0x8);
    public:
    // Creating interface conversion operator: operator ::Meta::WitAi::Interfaces::ISpeechEvents
    operator ::Meta::WitAi::Interfaces::ISpeechEvents() noexcept {
      return *reinterpret_cast<::Meta::WitAi::Interfaces::ISpeechEvents*>(this);
    }
    // Creating interface conversion operator: operator ::Meta::WitAi::Interfaces::ITranscriptionEvent
    operator ::Meta::WitAi::Interfaces::ITranscriptionEvent() noexcept {
      return *reinterpret_cast<::Meta::WitAi::Interfaces::ITranscriptionEvent*>(this);
    }
    // Creating interface conversion operator: operator ::Meta::WitAi::Interfaces::IAudioInputEvents
    operator ::Meta::WitAi::Interfaces::IAudioInputEvents() noexcept {
      return *reinterpret_cast<::Meta::WitAi::Interfaces::IAudioInputEvents*>(this);
    }
    // static field const value: static protected System.String EVENT_CATEGORY_ACTIVATION_SETUP
    static constexpr const char* EVENT_CATEGORY_ACTIVATION_SETUP = "Activation Setup Events";
    // Get static field: static protected System.String EVENT_CATEGORY_ACTIVATION_SETUP
    static ::StringW _get_EVENT_CATEGORY_ACTIVATION_SETUP();
    // Set static field: static protected System.String EVENT_CATEGORY_ACTIVATION_SETUP
    static void _set_EVENT_CATEGORY_ACTIVATION_SETUP(::StringW value);
    // static field const value: static protected System.String EVENT_CATEGORY_ACTIVATION_INFO
    static constexpr const char* EVENT_CATEGORY_ACTIVATION_INFO = "Activation Info Events";
    // Get static field: static protected System.String EVENT_CATEGORY_ACTIVATION_INFO
    static ::StringW _get_EVENT_CATEGORY_ACTIVATION_INFO();
    // Set static field: static protected System.String EVENT_CATEGORY_ACTIVATION_INFO
    static void _set_EVENT_CATEGORY_ACTIVATION_INFO(::StringW value);
    // static field const value: static protected System.String EVENT_CATEGORY_ACTIVATION_CANCELATION
    static constexpr const char* EVENT_CATEGORY_ACTIVATION_CANCELATION = "Activation Cancelation Events";
    // Get static field: static protected System.String EVENT_CATEGORY_ACTIVATION_CANCELATION
    static ::StringW _get_EVENT_CATEGORY_ACTIVATION_CANCELATION();
    // Set static field: static protected System.String EVENT_CATEGORY_ACTIVATION_CANCELATION
    static void _set_EVENT_CATEGORY_ACTIVATION_CANCELATION(::StringW value);
    // static field const value: static protected System.String EVENT_CATEGORY_ACTIVATION_RESPONSE
    static constexpr const char* EVENT_CATEGORY_ACTIVATION_RESPONSE = "Activation Response Events";
    // Get static field: static protected System.String EVENT_CATEGORY_ACTIVATION_RESPONSE
    static ::StringW _get_EVENT_CATEGORY_ACTIVATION_RESPONSE();
    // Set static field: static protected System.String EVENT_CATEGORY_ACTIVATION_RESPONSE
    static void _set_EVENT_CATEGORY_ACTIVATION_RESPONSE(::StringW value);
    // static field const value: static protected System.String EVENT_CATEGORY_AUDIO_EVENTS
    static constexpr const char* EVENT_CATEGORY_AUDIO_EVENTS = "Audio Events";
    // Get static field: static protected System.String EVENT_CATEGORY_AUDIO_EVENTS
    static ::StringW _get_EVENT_CATEGORY_AUDIO_EVENTS();
    // Set static field: static protected System.String EVENT_CATEGORY_AUDIO_EVENTS
    static void _set_EVENT_CATEGORY_AUDIO_EVENTS(::StringW value);
    // static field const value: static protected System.String EVENT_CATEGORY_TRANSCRIPTION_EVENTS
    static constexpr const char* EVENT_CATEGORY_TRANSCRIPTION_EVENTS = "Transcription Events";
    // Get static field: static protected System.String EVENT_CATEGORY_TRANSCRIPTION_EVENTS
    static ::StringW _get_EVENT_CATEGORY_TRANSCRIPTION_EVENTS();
    // Set static field: static protected System.String EVENT_CATEGORY_TRANSCRIPTION_EVENTS
    static void _set_EVENT_CATEGORY_TRANSCRIPTION_EVENTS(::StringW value);
    // Get instance field reference: private Meta.WitAi.Events.WitRequestOptionsEvent _onRequestOptionSetup
    [[deprecated("Use field access instead!")]] ::Meta::WitAi::Events::WitRequestOptionsEvent*& dyn__onRequestOptionSetup();
    // Get instance field reference: private Meta.WitAi.Events.VoiceServiceRequestEvent _onRequestInitialized
    [[deprecated("Use field access instead!")]] ::Meta::WitAi::Events::VoiceServiceRequestEvent*& dyn__onRequestInitialized();
    // Get instance field reference: private Meta.WitAi.Events.WitRequestCreatedEvent _onRequestCreated
    [[deprecated("Use field access instead!")]] ::Meta::WitAi::Events::WitRequestCreatedEvent*& dyn__onRequestCreated();
    // Get instance field reference: private Meta.WitAi.Events.VoiceServiceRequestEvent _onSend
    [[deprecated("Use field access instead!")]] ::Meta::WitAi::Events::VoiceServiceRequestEvent*& dyn__onSend();
    // Get instance field reference: private UnityEngine.Events.UnityEvent _onMinimumWakeThresholdHit
    [[deprecated("Use field access instead!")]] ::UnityEngine::Events::UnityEvent*& dyn__onMinimumWakeThresholdHit();
    // Get instance field reference: private UnityEngine.Events.UnityEvent _onMicDataSent
    [[deprecated("Use field access instead!")]] ::UnityEngine::Events::UnityEvent*& dyn__onMicDataSent();
    // Get instance field reference: private UnityEngine.Events.UnityEvent _onStoppedListeningDueToDeactivation
    [[deprecated("Use field access instead!")]] ::UnityEngine::Events::UnityEvent*& dyn__onStoppedListeningDueToDeactivation();
    // Get instance field reference: private UnityEngine.Events.UnityEvent _onStoppedListeningDueToInactivity
    [[deprecated("Use field access instead!")]] ::UnityEngine::Events::UnityEvent*& dyn__onStoppedListeningDueToInactivity();
    // Get instance field reference: private UnityEngine.Events.UnityEvent _onStoppedListeningDueToTimeout
    [[deprecated("Use field access instead!")]] ::UnityEngine::Events::UnityEvent*& dyn__onStoppedListeningDueToTimeout();
    // Get instance field reference: private UnityEngine.Events.UnityEvent _onAborting
    [[deprecated("Use field access instead!")]] ::UnityEngine::Events::UnityEvent*& dyn__onAborting();
    // Get instance field reference: private UnityEngine.Events.UnityEvent _onAborted
    [[deprecated("Use field access instead!")]] ::UnityEngine::Events::UnityEvent*& dyn__onAborted();
    // Get instance field reference: private Meta.WitAi.Events.WitTranscriptionEvent _onCanceled
    [[deprecated("Use field access instead!")]] ::Meta::WitAi::Events::WitTranscriptionEvent*& dyn__onCanceled();
    // Get instance field reference: private Meta.WitAi.Events.WitResponseEvent _onPartialResponse
    [[deprecated("Use field access instead!")]] ::Meta::WitAi::Events::WitResponseEvent*& dyn__onPartialResponse();
    // Get instance field reference: private Meta.WitAi.Events.WitResponseEvent _onResponse
    [[deprecated("Use field access instead!")]] ::Meta::WitAi::Events::WitResponseEvent*& dyn__onResponse();
    // Get instance field reference: private Meta.WitAi.Events.WitErrorEvent _onError
    [[deprecated("Use field access instead!")]] ::Meta::WitAi::Events::WitErrorEvent*& dyn__onError();
    // Get instance field reference: private UnityEngine.Events.UnityEvent _onRequestCompleted
    [[deprecated("Use field access instead!")]] ::UnityEngine::Events::UnityEvent*& dyn__onRequestCompleted();
    // Get instance field reference: private Meta.WitAi.Events.VoiceServiceRequestEvent _onComplete
    [[deprecated("Use field access instead!")]] ::Meta::WitAi::Events::VoiceServiceRequestEvent*& dyn__onComplete();
    // Get instance field reference: private UnityEngine.Events.UnityEvent _onStartListening
    [[deprecated("Use field access instead!")]] ::UnityEngine::Events::UnityEvent*& dyn__onStartListening();
    // Get instance field reference: private UnityEngine.Events.UnityEvent _onStoppedListening
    [[deprecated("Use field access instead!")]] ::UnityEngine::Events::UnityEvent*& dyn__onStoppedListening();
    // Get instance field reference: private Meta.WitAi.Events.WitMicLevelChangedEvent _onMicLevelChanged
    [[deprecated("Use field access instead!")]] ::Meta::WitAi::Events::WitMicLevelChangedEvent*& dyn__onMicLevelChanged();
    // Get instance field reference: private Meta.WitAi.Events.WitTranscriptionEvent _onPartialTranscription
    [[deprecated("Use field access instead!")]] ::Meta::WitAi::Events::WitTranscriptionEvent*& dyn__onPartialTranscription();
    // Get instance field reference: private Meta.WitAi.Events.WitTranscriptionEvent _onFullTranscription
    [[deprecated("Use field access instead!")]] ::Meta::WitAi::Events::WitTranscriptionEvent*& dyn__onFullTranscription();
    // Get instance field reference: private System.Collections.Generic.HashSet`1<Meta.WitAi.Events.SpeechEvents> _listeners
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::HashSet_1<::Meta::WitAi::Events::SpeechEvents*>*& dyn__listeners();
    // public Meta.WitAi.Events.WitRequestOptionsEvent get_OnRequestOptionSetup()
    // Offset: 0x443AC68
    ::Meta::WitAi::Events::WitRequestOptionsEvent* get_OnRequestOptionSetup();
    // public Meta.WitAi.Events.VoiceServiceRequestEvent get_OnRequestInitialized()
    // Offset: 0x443AC70
    ::Meta::WitAi::Events::VoiceServiceRequestEvent* get_OnRequestInitialized();
    // public Meta.WitAi.Events.WitRequestCreatedEvent get_OnRequestCreated()
    // Offset: 0x443AC78
    ::Meta::WitAi::Events::WitRequestCreatedEvent* get_OnRequestCreated();
    // public Meta.WitAi.Events.VoiceServiceRequestEvent get_OnSend()
    // Offset: 0x443AC80
    ::Meta::WitAi::Events::VoiceServiceRequestEvent* get_OnSend();
    // public UnityEngine.Events.UnityEvent get_OnMinimumWakeThresholdHit()
    // Offset: 0x443AC88
    ::UnityEngine::Events::UnityEvent* get_OnMinimumWakeThresholdHit();
    // public UnityEngine.Events.UnityEvent get_OnMicDataSent()
    // Offset: 0x443AC90
    ::UnityEngine::Events::UnityEvent* get_OnMicDataSent();
    // public UnityEngine.Events.UnityEvent get_OnStoppedListeningDueToDeactivation()
    // Offset: 0x443AC98
    ::UnityEngine::Events::UnityEvent* get_OnStoppedListeningDueToDeactivation();
    // public UnityEngine.Events.UnityEvent get_OnStoppedListeningDueToInactivity()
    // Offset: 0x443ACA0
    ::UnityEngine::Events::UnityEvent* get_OnStoppedListeningDueToInactivity();
    // public UnityEngine.Events.UnityEvent get_OnStoppedListeningDueToTimeout()
    // Offset: 0x443ACA8
    ::UnityEngine::Events::UnityEvent* get_OnStoppedListeningDueToTimeout();
    // public UnityEngine.Events.UnityEvent get_OnAborting()
    // Offset: 0x443ACB0
    ::UnityEngine::Events::UnityEvent* get_OnAborting();
    // public UnityEngine.Events.UnityEvent get_OnAborted()
    // Offset: 0x443ACB8
    ::UnityEngine::Events::UnityEvent* get_OnAborted();
    // public Meta.WitAi.Events.WitTranscriptionEvent get_OnCanceled()
    // Offset: 0x443ACC0
    ::Meta::WitAi::Events::WitTranscriptionEvent* get_OnCanceled();
    // public Meta.WitAi.Events.WitResponseEvent get_OnPartialResponse()
    // Offset: 0x443ACC8
    ::Meta::WitAi::Events::WitResponseEvent* get_OnPartialResponse();
    // public Meta.WitAi.Events.WitResponseEvent get_OnResponse()
    // Offset: 0x443ACD0
    ::Meta::WitAi::Events::WitResponseEvent* get_OnResponse();
    // public Meta.WitAi.Events.WitErrorEvent get_OnError()
    // Offset: 0x443ACD8
    ::Meta::WitAi::Events::WitErrorEvent* get_OnError();
    // public UnityEngine.Events.UnityEvent get_OnRequestCompleted()
    // Offset: 0x443ACE0
    ::UnityEngine::Events::UnityEvent* get_OnRequestCompleted();
    // public Meta.WitAi.Events.VoiceServiceRequestEvent get_OnComplete()
    // Offset: 0x443ACE8
    ::Meta::WitAi::Events::VoiceServiceRequestEvent* get_OnComplete();
    // public UnityEngine.Events.UnityEvent get_OnStartListening()
    // Offset: 0x443ACF0
    ::UnityEngine::Events::UnityEvent* get_OnStartListening();
    // public UnityEngine.Events.UnityEvent get_OnMicStartedListening()
    // Offset: 0x443ACF8
    ::UnityEngine::Events::UnityEvent* get_OnMicStartedListening();
    // public UnityEngine.Events.UnityEvent get_OnStoppedListening()
    // Offset: 0x443AD00
    ::UnityEngine::Events::UnityEvent* get_OnStoppedListening();
    // public UnityEngine.Events.UnityEvent get_OnMicStoppedListening()
    // Offset: 0x443AD08
    ::UnityEngine::Events::UnityEvent* get_OnMicStoppedListening();
    // public Meta.WitAi.Events.WitMicLevelChangedEvent get_OnMicLevelChanged()
    // Offset: 0x443AD10
    ::Meta::WitAi::Events::WitMicLevelChangedEvent* get_OnMicLevelChanged();
    // public Meta.WitAi.Events.WitMicLevelChangedEvent get_OnMicAudioLevelChanged()
    // Offset: 0x443AD18
    ::Meta::WitAi::Events::WitMicLevelChangedEvent* get_OnMicAudioLevelChanged();
    // public Meta.WitAi.Events.WitTranscriptionEvent get_OnPartialTranscription()
    // Offset: 0x443AD20
    ::Meta::WitAi::Events::WitTranscriptionEvent* get_OnPartialTranscription();
    // public Meta.WitAi.Events.WitTranscriptionEvent get_onPartialTranscription()
    // Offset: 0x443AD28
    ::Meta::WitAi::Events::WitTranscriptionEvent* get_onPartialTranscription();
    // public Meta.WitAi.Events.WitTranscriptionEvent get_OnFullTranscription()
    // Offset: 0x443AD30
    ::Meta::WitAi::Events::WitTranscriptionEvent* get_OnFullTranscription();
    // public Meta.WitAi.Events.WitTranscriptionEvent get_onFullTranscription()
    // Offset: 0x443AD38
    ::Meta::WitAi::Events::WitTranscriptionEvent* get_onFullTranscription();
    // public System.Void AddListener(Meta.WitAi.Events.SpeechEvents listener)
    // Offset: 0x443AD40
    void AddListener(::Meta::WitAi::Events::SpeechEvents* listener);
    // public System.Void RemoveListener(Meta.WitAi.Events.SpeechEvents listener)
    // Offset: 0x443AE04
    void RemoveListener(::Meta::WitAi::Events::SpeechEvents* listener);
    // protected System.Void SetEvents(System.Boolean add)
    // Offset: 0x443AEC8
    void SetEvents(bool add);
    // protected System.Void SetEvent(System.Func`2<Meta.WitAi.Events.SpeechEvents,UnityEngine.Events.UnityEvent> getEvent, System.Boolean add)
    // Offset: 0x443BC68
    void SetEvent(::System::Func_2<::Meta::WitAi::Events::SpeechEvents*, ::UnityEngine::Events::UnityEvent*>* getEvent, bool add);
    // protected System.Void SetEvent(System.Func`2<Meta.WitAi.Events.SpeechEvents,UnityEngine.Events.UnityEvent`1<T>> getEvent, System.Boolean add)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class T>
    void SetEvent(::System::Func_2<::Meta::WitAi::Events::SpeechEvents*, ::UnityEngine::Events::UnityEvent_1<T>*>* getEvent, bool add) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Events::SpeechEvents::SetEvent");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetEvent", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(getEvent), ::il2cpp_utils::ExtractType(add)})));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___generic__method, getEvent, add);
    }
    // protected System.Void SetEvent(System.Func`2<Meta.WitAi.Events.SpeechEvents,UnityEngine.Events.UnityEvent`2<T,U>> getEvent, System.Boolean add)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class T, class U>
    void SetEvent(::System::Func_2<::Meta::WitAi::Events::SpeechEvents*, ::UnityEngine::Events::UnityEvent_2<T, U>*>* getEvent, bool add) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Events::SpeechEvents::SetEvent");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetEvent", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<U>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(getEvent), ::il2cpp_utils::ExtractType(add)})));
      static auto* ___generic__method = THROW_UNLESS((::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<U>::get()})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___generic__method, getEvent, add);
    }
    // public System.Void .ctor()
    // Offset: 0x443A694
    // Implemented from: Meta.WitAi.Events.EventRegistry
    // Base method: System.Void EventRegistry::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static SpeechEvents* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Events::SpeechEvents::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<SpeechEvents*, creationType>()));
    }
  }; // Meta.WitAi.Events.SpeechEvents
  #pragma pack(pop)
  static check_size<sizeof(SpeechEvents), 208 + sizeof(::System::Collections::Generic::HashSet_1<::Meta::WitAi::Events::SpeechEvents*>*)> __Meta_WitAi_Events_SpeechEventsSizeCheck;
  static_assert(sizeof(SpeechEvents) == 0xD8);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Meta::WitAi::Events::SpeechEvents::get_OnRequestOptionSetup
// Il2CppName: get_OnRequestOptionSetup
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Meta::WitAi::Events::WitRequestOptionsEvent* (Meta::WitAi::Events::SpeechEvents::*)()>(&Meta::WitAi::Events::SpeechEvents::get_OnRequestOptionSetup)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::Events::SpeechEvents*), "get_OnRequestOptionSetup", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::Events::SpeechEvents::get_OnRequestInitialized
// Il2CppName: get_OnRequestInitialized
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Meta::WitAi::Events::VoiceServiceRequestEvent* (Meta::WitAi::Events::SpeechEvents::*)()>(&Meta::WitAi::Events::SpeechEvents::get_OnRequestInitialized)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::Events::SpeechEvents*), "get_OnRequestInitialized", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::Events::SpeechEvents::get_OnRequestCreated
// Il2CppName: get_OnRequestCreated
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Meta::WitAi::Events::WitRequestCreatedEvent* (Meta::WitAi::Events::SpeechEvents::*)()>(&Meta::WitAi::Events::SpeechEvents::get_OnRequestCreated)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::Events::SpeechEvents*), "get_OnRequestCreated", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::Events::SpeechEvents::get_OnSend
// Il2CppName: get_OnSend
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Meta::WitAi::Events::VoiceServiceRequestEvent* (Meta::WitAi::Events::SpeechEvents::*)()>(&Meta::WitAi::Events::SpeechEvents::get_OnSend)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::Events::SpeechEvents*), "get_OnSend", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::Events::SpeechEvents::get_OnMinimumWakeThresholdHit
// Il2CppName: get_OnMinimumWakeThresholdHit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Events::UnityEvent* (Meta::WitAi::Events::SpeechEvents::*)()>(&Meta::WitAi::Events::SpeechEvents::get_OnMinimumWakeThresholdHit)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::Events::SpeechEvents*), "get_OnMinimumWakeThresholdHit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::Events::SpeechEvents::get_OnMicDataSent
// Il2CppName: get_OnMicDataSent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Events::UnityEvent* (Meta::WitAi::Events::SpeechEvents::*)()>(&Meta::WitAi::Events::SpeechEvents::get_OnMicDataSent)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::Events::SpeechEvents*), "get_OnMicDataSent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::Events::SpeechEvents::get_OnStoppedListeningDueToDeactivation
// Il2CppName: get_OnStoppedListeningDueToDeactivation
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Events::UnityEvent* (Meta::WitAi::Events::SpeechEvents::*)()>(&Meta::WitAi::Events::SpeechEvents::get_OnStoppedListeningDueToDeactivation)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::Events::SpeechEvents*), "get_OnStoppedListeningDueToDeactivation", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::Events::SpeechEvents::get_OnStoppedListeningDueToInactivity
// Il2CppName: get_OnStoppedListeningDueToInactivity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Events::UnityEvent* (Meta::WitAi::Events::SpeechEvents::*)()>(&Meta::WitAi::Events::SpeechEvents::get_OnStoppedListeningDueToInactivity)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::Events::SpeechEvents*), "get_OnStoppedListeningDueToInactivity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::Events::SpeechEvents::get_OnStoppedListeningDueToTimeout
// Il2CppName: get_OnStoppedListeningDueToTimeout
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Events::UnityEvent* (Meta::WitAi::Events::SpeechEvents::*)()>(&Meta::WitAi::Events::SpeechEvents::get_OnStoppedListeningDueToTimeout)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::Events::SpeechEvents*), "get_OnStoppedListeningDueToTimeout", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::Events::SpeechEvents::get_OnAborting
// Il2CppName: get_OnAborting
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Events::UnityEvent* (Meta::WitAi::Events::SpeechEvents::*)()>(&Meta::WitAi::Events::SpeechEvents::get_OnAborting)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::Events::SpeechEvents*), "get_OnAborting", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::Events::SpeechEvents::get_OnAborted
// Il2CppName: get_OnAborted
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Events::UnityEvent* (Meta::WitAi::Events::SpeechEvents::*)()>(&Meta::WitAi::Events::SpeechEvents::get_OnAborted)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::Events::SpeechEvents*), "get_OnAborted", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::Events::SpeechEvents::get_OnCanceled
// Il2CppName: get_OnCanceled
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Meta::WitAi::Events::WitTranscriptionEvent* (Meta::WitAi::Events::SpeechEvents::*)()>(&Meta::WitAi::Events::SpeechEvents::get_OnCanceled)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::Events::SpeechEvents*), "get_OnCanceled", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::Events::SpeechEvents::get_OnPartialResponse
// Il2CppName: get_OnPartialResponse
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Meta::WitAi::Events::WitResponseEvent* (Meta::WitAi::Events::SpeechEvents::*)()>(&Meta::WitAi::Events::SpeechEvents::get_OnPartialResponse)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::Events::SpeechEvents*), "get_OnPartialResponse", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::Events::SpeechEvents::get_OnResponse
// Il2CppName: get_OnResponse
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Meta::WitAi::Events::WitResponseEvent* (Meta::WitAi::Events::SpeechEvents::*)()>(&Meta::WitAi::Events::SpeechEvents::get_OnResponse)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::Events::SpeechEvents*), "get_OnResponse", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::Events::SpeechEvents::get_OnError
// Il2CppName: get_OnError
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Meta::WitAi::Events::WitErrorEvent* (Meta::WitAi::Events::SpeechEvents::*)()>(&Meta::WitAi::Events::SpeechEvents::get_OnError)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::Events::SpeechEvents*), "get_OnError", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::Events::SpeechEvents::get_OnRequestCompleted
// Il2CppName: get_OnRequestCompleted
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Events::UnityEvent* (Meta::WitAi::Events::SpeechEvents::*)()>(&Meta::WitAi::Events::SpeechEvents::get_OnRequestCompleted)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::Events::SpeechEvents*), "get_OnRequestCompleted", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::Events::SpeechEvents::get_OnComplete
// Il2CppName: get_OnComplete
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Meta::WitAi::Events::VoiceServiceRequestEvent* (Meta::WitAi::Events::SpeechEvents::*)()>(&Meta::WitAi::Events::SpeechEvents::get_OnComplete)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::Events::SpeechEvents*), "get_OnComplete", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::Events::SpeechEvents::get_OnStartListening
// Il2CppName: get_OnStartListening
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Events::UnityEvent* (Meta::WitAi::Events::SpeechEvents::*)()>(&Meta::WitAi::Events::SpeechEvents::get_OnStartListening)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::Events::SpeechEvents*), "get_OnStartListening", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::Events::SpeechEvents::get_OnMicStartedListening
// Il2CppName: get_OnMicStartedListening
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Events::UnityEvent* (Meta::WitAi::Events::SpeechEvents::*)()>(&Meta::WitAi::Events::SpeechEvents::get_OnMicStartedListening)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::Events::SpeechEvents*), "get_OnMicStartedListening", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::Events::SpeechEvents::get_OnStoppedListening
// Il2CppName: get_OnStoppedListening
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Events::UnityEvent* (Meta::WitAi::Events::SpeechEvents::*)()>(&Meta::WitAi::Events::SpeechEvents::get_OnStoppedListening)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::Events::SpeechEvents*), "get_OnStoppedListening", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::Events::SpeechEvents::get_OnMicStoppedListening
// Il2CppName: get_OnMicStoppedListening
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Events::UnityEvent* (Meta::WitAi::Events::SpeechEvents::*)()>(&Meta::WitAi::Events::SpeechEvents::get_OnMicStoppedListening)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::Events::SpeechEvents*), "get_OnMicStoppedListening", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::Events::SpeechEvents::get_OnMicLevelChanged
// Il2CppName: get_OnMicLevelChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Meta::WitAi::Events::WitMicLevelChangedEvent* (Meta::WitAi::Events::SpeechEvents::*)()>(&Meta::WitAi::Events::SpeechEvents::get_OnMicLevelChanged)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::Events::SpeechEvents*), "get_OnMicLevelChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::Events::SpeechEvents::get_OnMicAudioLevelChanged
// Il2CppName: get_OnMicAudioLevelChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Meta::WitAi::Events::WitMicLevelChangedEvent* (Meta::WitAi::Events::SpeechEvents::*)()>(&Meta::WitAi::Events::SpeechEvents::get_OnMicAudioLevelChanged)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::Events::SpeechEvents*), "get_OnMicAudioLevelChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::Events::SpeechEvents::get_OnPartialTranscription
// Il2CppName: get_OnPartialTranscription
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Meta::WitAi::Events::WitTranscriptionEvent* (Meta::WitAi::Events::SpeechEvents::*)()>(&Meta::WitAi::Events::SpeechEvents::get_OnPartialTranscription)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::Events::SpeechEvents*), "get_OnPartialTranscription", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::Events::SpeechEvents::get_onPartialTranscription
// Il2CppName: get_onPartialTranscription
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Meta::WitAi::Events::WitTranscriptionEvent* (Meta::WitAi::Events::SpeechEvents::*)()>(&Meta::WitAi::Events::SpeechEvents::get_onPartialTranscription)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::Events::SpeechEvents*), "get_onPartialTranscription", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::Events::SpeechEvents::get_OnFullTranscription
// Il2CppName: get_OnFullTranscription
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Meta::WitAi::Events::WitTranscriptionEvent* (Meta::WitAi::Events::SpeechEvents::*)()>(&Meta::WitAi::Events::SpeechEvents::get_OnFullTranscription)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::Events::SpeechEvents*), "get_OnFullTranscription", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::Events::SpeechEvents::get_onFullTranscription
// Il2CppName: get_onFullTranscription
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Meta::WitAi::Events::WitTranscriptionEvent* (Meta::WitAi::Events::SpeechEvents::*)()>(&Meta::WitAi::Events::SpeechEvents::get_onFullTranscription)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::Events::SpeechEvents*), "get_onFullTranscription", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::Events::SpeechEvents::AddListener
// Il2CppName: AddListener
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Meta::WitAi::Events::SpeechEvents::*)(::Meta::WitAi::Events::SpeechEvents*)>(&Meta::WitAi::Events::SpeechEvents::AddListener)> {
  static const MethodInfo* get() {
    static auto* listener = &::il2cpp_utils::GetClassFromName("Meta.WitAi.Events", "SpeechEvents")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::Events::SpeechEvents*), "AddListener", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{listener});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::Events::SpeechEvents::RemoveListener
// Il2CppName: RemoveListener
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Meta::WitAi::Events::SpeechEvents::*)(::Meta::WitAi::Events::SpeechEvents*)>(&Meta::WitAi::Events::SpeechEvents::RemoveListener)> {
  static const MethodInfo* get() {
    static auto* listener = &::il2cpp_utils::GetClassFromName("Meta.WitAi.Events", "SpeechEvents")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::Events::SpeechEvents*), "RemoveListener", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{listener});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::Events::SpeechEvents::SetEvents
// Il2CppName: SetEvents
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Meta::WitAi::Events::SpeechEvents::*)(bool)>(&Meta::WitAi::Events::SpeechEvents::SetEvents)> {
  static const MethodInfo* get() {
    static auto* add = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::Events::SpeechEvents*), "SetEvents", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{add});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::Events::SpeechEvents::SetEvent
// Il2CppName: SetEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Meta::WitAi::Events::SpeechEvents::*)(::System::Func_2<::Meta::WitAi::Events::SpeechEvents*, ::UnityEngine::Events::UnityEvent*>*, bool)>(&Meta::WitAi::Events::SpeechEvents::SetEvent)> {
  static const MethodInfo* get() {
    static auto* getEvent = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Func`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("Meta.WitAi.Events", "SpeechEvents"), ::il2cpp_utils::GetClassFromName("UnityEngine.Events", "UnityEvent")})->byval_arg;
    static auto* add = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::Events::SpeechEvents*), "SetEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{getEvent, add});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::Events::SpeechEvents::SetEvent
// Il2CppName: SetEvent
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: Meta::WitAi::Events::SpeechEvents::SetEvent
// Il2CppName: SetEvent
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: Meta::WitAi::Events::SpeechEvents::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
