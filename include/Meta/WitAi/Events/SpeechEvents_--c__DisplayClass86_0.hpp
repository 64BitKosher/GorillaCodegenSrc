// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Meta.WitAi.Events.SpeechEvents
#include "Meta/WitAi/Events/SpeechEvents.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Func`2<T, TResult>
  template<typename T, typename TResult>
  class Func_2;
}
// Forward declaring namespace: UnityEngine::Events
namespace UnityEngine::Events {
  // Forward declaring type: UnityEvent
  class UnityEvent;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Meta::WitAi::Events::SpeechEvents::$$c__DisplayClass86_0);
DEFINE_IL2CPP_ARG_TYPE(::Meta::WitAi::Events::SpeechEvents::$$c__DisplayClass86_0*, "Meta.WitAi.Events", "SpeechEvents/<>c__DisplayClass86_0");
// Type namespace: Meta.WitAi.Events
namespace Meta::WitAi::Events {
  // Size: 0x20
  #pragma pack(push, 1)
  // Autogenerated type: Meta.WitAi.Events.SpeechEvents/<>c__DisplayClass86_0
  // [TokenAttribute] Offset: FFFFFFFF
  // [CompilerGeneratedAttribute] Offset: FFFFFFFF
  class SpeechEvents::$$c__DisplayClass86_0 : public ::Il2CppObject {
    public:
    public:
    // public Meta.WitAi.Events.SpeechEvents <>4__this
    // Size: 0x8
    // Offset: 0x10
    ::Meta::WitAi::Events::SpeechEvents* $$4__this;
    // Field size check
    static_assert(sizeof(::Meta::WitAi::Events::SpeechEvents*) == 0x8);
    // public System.Func`2<Meta.WitAi.Events.SpeechEvents,UnityEngine.Events.UnityEvent> getEvent
    // Size: 0x8
    // Offset: 0x18
    ::System::Func_2<::Meta::WitAi::Events::SpeechEvents*, ::UnityEngine::Events::UnityEvent*>* getEvent;
    // Field size check
    static_assert(sizeof(::System::Func_2<::Meta::WitAi::Events::SpeechEvents*, ::UnityEngine::Events::UnityEvent*>*) == 0x8);
    public:
    // Get instance field reference: public Meta.WitAi.Events.SpeechEvents <>4__this
    [[deprecated("Use field access instead!")]] ::Meta::WitAi::Events::SpeechEvents*& dyn_$$4__this();
    // Get instance field reference: public System.Func`2<Meta.WitAi.Events.SpeechEvents,UnityEngine.Events.UnityEvent> getEvent
    [[deprecated("Use field access instead!")]] ::System::Func_2<::Meta::WitAi::Events::SpeechEvents*, ::UnityEngine::Events::UnityEvent*>*& dyn_getEvent();
    // public System.Void .ctor()
    // Offset: 0x443BD9C
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static SpeechEvents::$$c__DisplayClass86_0* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Events::SpeechEvents::$$c__DisplayClass86_0::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<SpeechEvents::$$c__DisplayClass86_0*, creationType>()));
    }
    // System.Void <SetEvent>b__0()
    // Offset: 0x443BFB8
    void $SetEvent$b__0();
  }; // Meta.WitAi.Events.SpeechEvents/<>c__DisplayClass86_0
  #pragma pack(pop)
  static check_size<sizeof(SpeechEvents::$$c__DisplayClass86_0), 24 + sizeof(::System::Func_2<::Meta::WitAi::Events::SpeechEvents*, ::UnityEngine::Events::UnityEvent*>*)> __Meta_WitAi_Events_SpeechEvents_$$c__DisplayClass86_0SizeCheck;
  static_assert(sizeof(SpeechEvents::$$c__DisplayClass86_0) == 0x20);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Meta::WitAi::Events::SpeechEvents::$$c__DisplayClass86_0::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: Meta::WitAi::Events::SpeechEvents::$$c__DisplayClass86_0::$SetEvent$b__0
// Il2CppName: <SetEvent>b__0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Meta::WitAi::Events::SpeechEvents::$$c__DisplayClass86_0::*)()>(&Meta::WitAi::Events::SpeechEvents::$$c__DisplayClass86_0::$SetEvent$b__0)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::Events::SpeechEvents::$$c__DisplayClass86_0*), "<SetEvent>b__0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
