// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Meta.WitAi.TTS.TTSService
#include "Meta/WitAi/TTS/TTSService.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Meta::WitAi::TTS::Data
namespace Meta::WitAi::TTS::Data {
  // Forward declaring type: TTSClipData
  class TTSClipData;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Action`3<T1, T2, T3>
  template<typename T1, typename T2, typename T3>
  class Action_3;
  // Forward declaring type: Action`1<T>
  template<typename T>
  class Action_1;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Meta::WitAi::TTS::TTSService::$$c__DisplayClass79_0);
DEFINE_IL2CPP_ARG_TYPE(::Meta::WitAi::TTS::TTSService::$$c__DisplayClass79_0*, "Meta.WitAi.TTS", "TTSService/<>c__DisplayClass79_0");
// Type namespace: Meta.WitAi.TTS
namespace Meta::WitAi::TTS {
  // Size: 0x38
  #pragma pack(push, 1)
  // Autogenerated type: Meta.WitAi.TTS.TTSService/<>c__DisplayClass79_0
  // [TokenAttribute] Offset: FFFFFFFF
  // [CompilerGeneratedAttribute] Offset: FFFFFFFF
  class TTSService::$$c__DisplayClass79_0 : public ::Il2CppObject {
    public:
    public:
    // public Meta.WitAi.TTS.TTSService <>4__this
    // Size: 0x8
    // Offset: 0x10
    ::Meta::WitAi::TTS::TTSService* $$4__this;
    // Field size check
    static_assert(sizeof(::Meta::WitAi::TTS::TTSService*) == 0x8);
    // public System.String downloadPath
    // Size: 0x8
    // Offset: 0x18
    ::StringW downloadPath;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public Meta.WitAi.TTS.Data.TTSClipData clipData
    // Size: 0x8
    // Offset: 0x20
    ::Meta::WitAi::TTS::Data::TTSClipData* clipData;
    // Field size check
    static_assert(sizeof(::Meta::WitAi::TTS::Data::TTSClipData*) == 0x8);
    // public System.Action`3<Meta.WitAi.TTS.Data.TTSClipData,System.String,System.String> onDownloadComplete
    // Size: 0x8
    // Offset: 0x28
    ::System::Action_3<::Meta::WitAi::TTS::Data::TTSClipData*, ::StringW, ::StringW>* onDownloadComplete;
    // Field size check
    static_assert(sizeof(::System::Action_3<::Meta::WitAi::TTS::Data::TTSClipData*, ::StringW, ::StringW>*) == 0x8);
    // public System.Action`1<System.String> <>9__1
    // Size: 0x8
    // Offset: 0x30
    ::System::Action_1<::StringW>* $$9__1;
    // Field size check
    static_assert(sizeof(::System::Action_1<::StringW>*) == 0x8);
    public:
    // Get instance field reference: public Meta.WitAi.TTS.TTSService <>4__this
    [[deprecated("Use field access instead!")]] ::Meta::WitAi::TTS::TTSService*& dyn_$$4__this();
    // Get instance field reference: public System.String downloadPath
    [[deprecated("Use field access instead!")]] ::StringW& dyn_downloadPath();
    // Get instance field reference: public Meta.WitAi.TTS.Data.TTSClipData clipData
    [[deprecated("Use field access instead!")]] ::Meta::WitAi::TTS::Data::TTSClipData*& dyn_clipData();
    // Get instance field reference: public System.Action`3<Meta.WitAi.TTS.Data.TTSClipData,System.String,System.String> onDownloadComplete
    [[deprecated("Use field access instead!")]] ::System::Action_3<::Meta::WitAi::TTS::Data::TTSClipData*, ::StringW, ::StringW>*& dyn_onDownloadComplete();
    // Get instance field reference: public System.Action`1<System.String> <>9__1
    [[deprecated("Use field access instead!")]] ::System::Action_1<::StringW>*& dyn_$$9__1();
    // public System.Void .ctor()
    // Offset: 0x4456DE4
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static TTSService::$$c__DisplayClass79_0* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::TTS::TTSService::$$c__DisplayClass79_0::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<TTSService::$$c__DisplayClass79_0*, creationType>()));
    }
    // System.Void <DownloadToDiskCache>b__0(Meta.WitAi.TTS.Data.TTSClipData clip, System.Boolean found)
    // Offset: 0x4457D40
    void $DownloadToDiskCache$b__0(::Meta::WitAi::TTS::Data::TTSClipData* clip, bool found);
    // System.Void <DownloadToDiskCache>b__1(System.String error)
    // Offset: 0x4458068
    void $DownloadToDiskCache$b__1(::StringW error);
  }; // Meta.WitAi.TTS.TTSService/<>c__DisplayClass79_0
  #pragma pack(pop)
  static check_size<sizeof(TTSService::$$c__DisplayClass79_0), 48 + sizeof(::System::Action_1<::StringW>*)> __Meta_WitAi_TTS_TTSService_$$c__DisplayClass79_0SizeCheck;
  static_assert(sizeof(TTSService::$$c__DisplayClass79_0) == 0x38);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Meta::WitAi::TTS::TTSService::$$c__DisplayClass79_0::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: Meta::WitAi::TTS::TTSService::$$c__DisplayClass79_0::$DownloadToDiskCache$b__0
// Il2CppName: <DownloadToDiskCache>b__0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Meta::WitAi::TTS::TTSService::$$c__DisplayClass79_0::*)(::Meta::WitAi::TTS::Data::TTSClipData*, bool)>(&Meta::WitAi::TTS::TTSService::$$c__DisplayClass79_0::$DownloadToDiskCache$b__0)> {
  static const MethodInfo* get() {
    static auto* clip = &::il2cpp_utils::GetClassFromName("Meta.WitAi.TTS.Data", "TTSClipData")->byval_arg;
    static auto* found = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::TTS::TTSService::$$c__DisplayClass79_0*), "<DownloadToDiskCache>b__0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{clip, found});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::TTS::TTSService::$$c__DisplayClass79_0::$DownloadToDiskCache$b__1
// Il2CppName: <DownloadToDiskCache>b__1
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Meta::WitAi::TTS::TTSService::$$c__DisplayClass79_0::*)(::StringW)>(&Meta::WitAi::TTS::TTSService::$$c__DisplayClass79_0::$DownloadToDiskCache$b__1)> {
  static const MethodInfo* get() {
    static auto* error = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::TTS::TTSService::$$c__DisplayClass79_0*), "<DownloadToDiskCache>b__1", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{error});
  }
};
