// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Meta::WitAi::TTS::Events
namespace Meta::WitAi::TTS::Events {
  // Forward declaring type: TTSClipEvent
  class TTSClipEvent;
  // Forward declaring type: TTSClipErrorEvent
  class TTSClipErrorEvent;
}
// Completed forward declares
// Type namespace: Meta.WitAi.TTS.Events
namespace Meta::WitAi::TTS::Events {
  // Forward declaring type: TTSWebRequestEvents
  class TTSWebRequestEvents;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Meta::WitAi::TTS::Events::TTSWebRequestEvents);
DEFINE_IL2CPP_ARG_TYPE(::Meta::WitAi::TTS::Events::TTSWebRequestEvents*, "Meta.WitAi.TTS.Events", "TTSWebRequestEvents");
// Type namespace: Meta.WitAi.TTS.Events
namespace Meta::WitAi::TTS::Events {
  // Size: 0x40
  #pragma pack(push, 1)
  // Autogenerated type: Meta.WitAi.TTS.Events.TTSWebRequestEvents
  // [TokenAttribute] Offset: FFFFFFFF
  class TTSWebRequestEvents : public ::Il2CppObject {
    public:
    public:
    // public Meta.WitAi.TTS.Events.TTSClipEvent OnRequestBegin
    // Size: 0x8
    // Offset: 0x10
    ::Meta::WitAi::TTS::Events::TTSClipEvent* OnRequestBegin;
    // Field size check
    static_assert(sizeof(::Meta::WitAi::TTS::Events::TTSClipEvent*) == 0x8);
    // public Meta.WitAi.TTS.Events.TTSClipEvent OnRequestCancel
    // Size: 0x8
    // Offset: 0x18
    ::Meta::WitAi::TTS::Events::TTSClipEvent* OnRequestCancel;
    // Field size check
    static_assert(sizeof(::Meta::WitAi::TTS::Events::TTSClipEvent*) == 0x8);
    // public Meta.WitAi.TTS.Events.TTSClipErrorEvent OnRequestError
    // Size: 0x8
    // Offset: 0x20
    ::Meta::WitAi::TTS::Events::TTSClipErrorEvent* OnRequestError;
    // Field size check
    static_assert(sizeof(::Meta::WitAi::TTS::Events::TTSClipErrorEvent*) == 0x8);
    // public Meta.WitAi.TTS.Events.TTSClipEvent OnRequestFirstResponse
    // Size: 0x8
    // Offset: 0x28
    ::Meta::WitAi::TTS::Events::TTSClipEvent* OnRequestFirstResponse;
    // Field size check
    static_assert(sizeof(::Meta::WitAi::TTS::Events::TTSClipEvent*) == 0x8);
    // public Meta.WitAi.TTS.Events.TTSClipEvent OnRequestReady
    // Size: 0x8
    // Offset: 0x30
    ::Meta::WitAi::TTS::Events::TTSClipEvent* OnRequestReady;
    // Field size check
    static_assert(sizeof(::Meta::WitAi::TTS::Events::TTSClipEvent*) == 0x8);
    // public Meta.WitAi.TTS.Events.TTSClipEvent OnRequestComplete
    // Size: 0x8
    // Offset: 0x38
    ::Meta::WitAi::TTS::Events::TTSClipEvent* OnRequestComplete;
    // Field size check
    static_assert(sizeof(::Meta::WitAi::TTS::Events::TTSClipEvent*) == 0x8);
    public:
    // Get instance field reference: public Meta.WitAi.TTS.Events.TTSClipEvent OnRequestBegin
    [[deprecated("Use field access instead!")]] ::Meta::WitAi::TTS::Events::TTSClipEvent*& dyn_OnRequestBegin();
    // Get instance field reference: public Meta.WitAi.TTS.Events.TTSClipEvent OnRequestCancel
    [[deprecated("Use field access instead!")]] ::Meta::WitAi::TTS::Events::TTSClipEvent*& dyn_OnRequestCancel();
    // Get instance field reference: public Meta.WitAi.TTS.Events.TTSClipErrorEvent OnRequestError
    [[deprecated("Use field access instead!")]] ::Meta::WitAi::TTS::Events::TTSClipErrorEvent*& dyn_OnRequestError();
    // Get instance field reference: public Meta.WitAi.TTS.Events.TTSClipEvent OnRequestFirstResponse
    [[deprecated("Use field access instead!")]] ::Meta::WitAi::TTS::Events::TTSClipEvent*& dyn_OnRequestFirstResponse();
    // Get instance field reference: public Meta.WitAi.TTS.Events.TTSClipEvent OnRequestReady
    [[deprecated("Use field access instead!")]] ::Meta::WitAi::TTS::Events::TTSClipEvent*& dyn_OnRequestReady();
    // Get instance field reference: public Meta.WitAi.TTS.Events.TTSClipEvent OnRequestComplete
    [[deprecated("Use field access instead!")]] ::Meta::WitAi::TTS::Events::TTSClipEvent*& dyn_OnRequestComplete();
    // public System.Void .ctor()
    // Offset: 0x4463F80
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static TTSWebRequestEvents* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::TTS::Events::TTSWebRequestEvents::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<TTSWebRequestEvents*, creationType>()));
    }
  }; // Meta.WitAi.TTS.Events.TTSWebRequestEvents
  #pragma pack(pop)
  static check_size<sizeof(TTSWebRequestEvents), 56 + sizeof(::Meta::WitAi::TTS::Events::TTSClipEvent*)> __Meta_WitAi_TTS_Events_TTSWebRequestEventsSizeCheck;
  static_assert(sizeof(TTSWebRequestEvents) == 0x40);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Meta::WitAi::TTS::Events::TTSWebRequestEvents::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
