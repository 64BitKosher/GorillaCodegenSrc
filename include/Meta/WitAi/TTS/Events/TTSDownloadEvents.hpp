// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Meta::WitAi::TTS::Events
namespace Meta::WitAi::TTS::Events {
  // Forward declaring type: TTSClipDownloadEvent
  class TTSClipDownloadEvent;
  // Forward declaring type: TTSClipDownloadErrorEvent
  class TTSClipDownloadErrorEvent;
}
// Completed forward declares
// Type namespace: Meta.WitAi.TTS.Events
namespace Meta::WitAi::TTS::Events {
  // Forward declaring type: TTSDownloadEvents
  class TTSDownloadEvents;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Meta::WitAi::TTS::Events::TTSDownloadEvents);
DEFINE_IL2CPP_ARG_TYPE(::Meta::WitAi::TTS::Events::TTSDownloadEvents*, "Meta.WitAi.TTS.Events", "TTSDownloadEvents");
// Type namespace: Meta.WitAi.TTS.Events
namespace Meta::WitAi::TTS::Events {
  // Size: 0x30
  #pragma pack(push, 1)
  // Autogenerated type: Meta.WitAi.TTS.Events.TTSDownloadEvents
  // [TokenAttribute] Offset: FFFFFFFF
  class TTSDownloadEvents : public ::Il2CppObject {
    public:
    public:
    // public Meta.WitAi.TTS.Events.TTSClipDownloadEvent OnDownloadBegin
    // Size: 0x8
    // Offset: 0x10
    ::Meta::WitAi::TTS::Events::TTSClipDownloadEvent* OnDownloadBegin;
    // Field size check
    static_assert(sizeof(::Meta::WitAi::TTS::Events::TTSClipDownloadEvent*) == 0x8);
    // public Meta.WitAi.TTS.Events.TTSClipDownloadEvent OnDownloadSuccess
    // Size: 0x8
    // Offset: 0x18
    ::Meta::WitAi::TTS::Events::TTSClipDownloadEvent* OnDownloadSuccess;
    // Field size check
    static_assert(sizeof(::Meta::WitAi::TTS::Events::TTSClipDownloadEvent*) == 0x8);
    // public Meta.WitAi.TTS.Events.TTSClipDownloadEvent OnDownloadCancel
    // Size: 0x8
    // Offset: 0x20
    ::Meta::WitAi::TTS::Events::TTSClipDownloadEvent* OnDownloadCancel;
    // Field size check
    static_assert(sizeof(::Meta::WitAi::TTS::Events::TTSClipDownloadEvent*) == 0x8);
    // public Meta.WitAi.TTS.Events.TTSClipDownloadErrorEvent OnDownloadError
    // Size: 0x8
    // Offset: 0x28
    ::Meta::WitAi::TTS::Events::TTSClipDownloadErrorEvent* OnDownloadError;
    // Field size check
    static_assert(sizeof(::Meta::WitAi::TTS::Events::TTSClipDownloadErrorEvent*) == 0x8);
    public:
    // Get instance field reference: public Meta.WitAi.TTS.Events.TTSClipDownloadEvent OnDownloadBegin
    [[deprecated("Use field access instead!")]] ::Meta::WitAi::TTS::Events::TTSClipDownloadEvent*& dyn_OnDownloadBegin();
    // Get instance field reference: public Meta.WitAi.TTS.Events.TTSClipDownloadEvent OnDownloadSuccess
    [[deprecated("Use field access instead!")]] ::Meta::WitAi::TTS::Events::TTSClipDownloadEvent*& dyn_OnDownloadSuccess();
    // Get instance field reference: public Meta.WitAi.TTS.Events.TTSClipDownloadEvent OnDownloadCancel
    [[deprecated("Use field access instead!")]] ::Meta::WitAi::TTS::Events::TTSClipDownloadEvent*& dyn_OnDownloadCancel();
    // Get instance field reference: public Meta.WitAi.TTS.Events.TTSClipDownloadErrorEvent OnDownloadError
    [[deprecated("Use field access instead!")]] ::Meta::WitAi::TTS::Events::TTSClipDownloadErrorEvent*& dyn_OnDownloadError();
    // public System.Void .ctor()
    // Offset: 0x445B350
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static TTSDownloadEvents* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::TTS::Events::TTSDownloadEvents::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<TTSDownloadEvents*, creationType>()));
    }
  }; // Meta.WitAi.TTS.Events.TTSDownloadEvents
  #pragma pack(pop)
  static check_size<sizeof(TTSDownloadEvents), 40 + sizeof(::Meta::WitAi::TTS::Events::TTSClipDownloadErrorEvent*)> __Meta_WitAi_TTS_Events_TTSDownloadEventsSizeCheck;
  static_assert(sizeof(TTSDownloadEvents) == 0x30);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Meta::WitAi::TTS::Events::TTSDownloadEvents::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
