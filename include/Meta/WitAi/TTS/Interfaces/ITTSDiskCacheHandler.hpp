// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Meta::WitAi::TTS::Events
namespace Meta::WitAi::TTS::Events {
  // Forward declaring type: TTSStreamEvents
  class TTSStreamEvents;
}
// Forward declaring namespace: Meta::WitAi::TTS::Data
namespace Meta::WitAi::TTS::Data {
  // Forward declaring type: TTSDiskCacheSettings
  class TTSDiskCacheSettings;
  // Forward declaring type: TTSClipData
  class TTSClipData;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Action`2<T1, T2>
  template<typename T1, typename T2>
  class Action_2;
}
// Completed forward declares
// Type namespace: Meta.WitAi.TTS.Interfaces
namespace Meta::WitAi::TTS::Interfaces {
  // Forward declaring type: ITTSDiskCacheHandler
  class ITTSDiskCacheHandler;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Meta::WitAi::TTS::Interfaces::ITTSDiskCacheHandler);
DEFINE_IL2CPP_ARG_TYPE(::Meta::WitAi::TTS::Interfaces::ITTSDiskCacheHandler*, "Meta.WitAi.TTS.Interfaces", "ITTSDiskCacheHandler");
// Type namespace: Meta.WitAi.TTS.Interfaces
namespace Meta::WitAi::TTS::Interfaces {
  // Size: 0x0
  #pragma pack(push, 1)
  // Autogenerated type: Meta.WitAi.TTS.Interfaces.ITTSDiskCacheHandler
  // [TokenAttribute] Offset: FFFFFFFF
  class ITTSDiskCacheHandler {
    public:
    // public Meta.WitAi.TTS.Events.TTSStreamEvents get_DiskStreamEvents()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::Meta::WitAi::TTS::Events::TTSStreamEvents* get_DiskStreamEvents();
    // public System.Void set_DiskStreamEvents(Meta.WitAi.TTS.Events.TTSStreamEvents value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void set_DiskStreamEvents(::Meta::WitAi::TTS::Events::TTSStreamEvents* value);
    // public Meta.WitAi.TTS.Data.TTSDiskCacheSettings get_DiskCacheDefaultSettings()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::Meta::WitAi::TTS::Data::TTSDiskCacheSettings* get_DiskCacheDefaultSettings();
    // public System.String GetDiskCachePath(Meta.WitAi.TTS.Data.TTSClipData clipData)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::StringW GetDiskCachePath(::Meta::WitAi::TTS::Data::TTSClipData* clipData);
    // public System.Boolean ShouldCacheToDisk(Meta.WitAi.TTS.Data.TTSClipData clipData)
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool ShouldCacheToDisk(::Meta::WitAi::TTS::Data::TTSClipData* clipData);
    // public System.Void CheckCachedToDisk(Meta.WitAi.TTS.Data.TTSClipData clipData, System.Action`2<Meta.WitAi.TTS.Data.TTSClipData,System.Boolean> onCheckComplete)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void CheckCachedToDisk(::Meta::WitAi::TTS::Data::TTSClipData* clipData, ::System::Action_2<::Meta::WitAi::TTS::Data::TTSClipData*, bool>* onCheckComplete);
    // public System.Void StreamFromDiskCache(Meta.WitAi.TTS.Data.TTSClipData clipData)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void StreamFromDiskCache(::Meta::WitAi::TTS::Data::TTSClipData* clipData);
    // public System.Void CancelDiskCacheStream(Meta.WitAi.TTS.Data.TTSClipData clipData)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void CancelDiskCacheStream(::Meta::WitAi::TTS::Data::TTSClipData* clipData);
  }; // Meta.WitAi.TTS.Interfaces.ITTSDiskCacheHandler
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Meta::WitAi::TTS::Interfaces::ITTSDiskCacheHandler::get_DiskStreamEvents
// Il2CppName: get_DiskStreamEvents
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Meta::WitAi::TTS::Events::TTSStreamEvents* (Meta::WitAi::TTS::Interfaces::ITTSDiskCacheHandler::*)()>(&Meta::WitAi::TTS::Interfaces::ITTSDiskCacheHandler::get_DiskStreamEvents)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::TTS::Interfaces::ITTSDiskCacheHandler*), "get_DiskStreamEvents", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::TTS::Interfaces::ITTSDiskCacheHandler::set_DiskStreamEvents
// Il2CppName: set_DiskStreamEvents
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Meta::WitAi::TTS::Interfaces::ITTSDiskCacheHandler::*)(::Meta::WitAi::TTS::Events::TTSStreamEvents*)>(&Meta::WitAi::TTS::Interfaces::ITTSDiskCacheHandler::set_DiskStreamEvents)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("Meta.WitAi.TTS.Events", "TTSStreamEvents")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::TTS::Interfaces::ITTSDiskCacheHandler*), "set_DiskStreamEvents", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::TTS::Interfaces::ITTSDiskCacheHandler::get_DiskCacheDefaultSettings
// Il2CppName: get_DiskCacheDefaultSettings
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Meta::WitAi::TTS::Data::TTSDiskCacheSettings* (Meta::WitAi::TTS::Interfaces::ITTSDiskCacheHandler::*)()>(&Meta::WitAi::TTS::Interfaces::ITTSDiskCacheHandler::get_DiskCacheDefaultSettings)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::TTS::Interfaces::ITTSDiskCacheHandler*), "get_DiskCacheDefaultSettings", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::TTS::Interfaces::ITTSDiskCacheHandler::GetDiskCachePath
// Il2CppName: GetDiskCachePath
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (Meta::WitAi::TTS::Interfaces::ITTSDiskCacheHandler::*)(::Meta::WitAi::TTS::Data::TTSClipData*)>(&Meta::WitAi::TTS::Interfaces::ITTSDiskCacheHandler::GetDiskCachePath)> {
  static const MethodInfo* get() {
    static auto* clipData = &::il2cpp_utils::GetClassFromName("Meta.WitAi.TTS.Data", "TTSClipData")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::TTS::Interfaces::ITTSDiskCacheHandler*), "GetDiskCachePath", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{clipData});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::TTS::Interfaces::ITTSDiskCacheHandler::ShouldCacheToDisk
// Il2CppName: ShouldCacheToDisk
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Meta::WitAi::TTS::Interfaces::ITTSDiskCacheHandler::*)(::Meta::WitAi::TTS::Data::TTSClipData*)>(&Meta::WitAi::TTS::Interfaces::ITTSDiskCacheHandler::ShouldCacheToDisk)> {
  static const MethodInfo* get() {
    static auto* clipData = &::il2cpp_utils::GetClassFromName("Meta.WitAi.TTS.Data", "TTSClipData")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::TTS::Interfaces::ITTSDiskCacheHandler*), "ShouldCacheToDisk", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{clipData});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::TTS::Interfaces::ITTSDiskCacheHandler::CheckCachedToDisk
// Il2CppName: CheckCachedToDisk
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Meta::WitAi::TTS::Interfaces::ITTSDiskCacheHandler::*)(::Meta::WitAi::TTS::Data::TTSClipData*, ::System::Action_2<::Meta::WitAi::TTS::Data::TTSClipData*, bool>*)>(&Meta::WitAi::TTS::Interfaces::ITTSDiskCacheHandler::CheckCachedToDisk)> {
  static const MethodInfo* get() {
    static auto* clipData = &::il2cpp_utils::GetClassFromName("Meta.WitAi.TTS.Data", "TTSClipData")->byval_arg;
    static auto* onCheckComplete = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("Meta.WitAi.TTS.Data", "TTSClipData"), ::il2cpp_utils::GetClassFromName("System", "Boolean")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::TTS::Interfaces::ITTSDiskCacheHandler*), "CheckCachedToDisk", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{clipData, onCheckComplete});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::TTS::Interfaces::ITTSDiskCacheHandler::StreamFromDiskCache
// Il2CppName: StreamFromDiskCache
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Meta::WitAi::TTS::Interfaces::ITTSDiskCacheHandler::*)(::Meta::WitAi::TTS::Data::TTSClipData*)>(&Meta::WitAi::TTS::Interfaces::ITTSDiskCacheHandler::StreamFromDiskCache)> {
  static const MethodInfo* get() {
    static auto* clipData = &::il2cpp_utils::GetClassFromName("Meta.WitAi.TTS.Data", "TTSClipData")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::TTS::Interfaces::ITTSDiskCacheHandler*), "StreamFromDiskCache", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{clipData});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::TTS::Interfaces::ITTSDiskCacheHandler::CancelDiskCacheStream
// Il2CppName: CancelDiskCacheStream
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Meta::WitAi::TTS::Interfaces::ITTSDiskCacheHandler::*)(::Meta::WitAi::TTS::Data::TTSClipData*)>(&Meta::WitAi::TTS::Interfaces::ITTSDiskCacheHandler::CancelDiskCacheStream)> {
  static const MethodInfo* get() {
    static auto* clipData = &::il2cpp_utils::GetClassFromName("Meta.WitAi.TTS.Data", "TTSClipData")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::TTS::Interfaces::ITTSDiskCacheHandler*), "CancelDiskCacheStream", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{clipData});
  }
};
