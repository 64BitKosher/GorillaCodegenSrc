// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Meta::WitAi::TTS::Events
namespace Meta::WitAi::TTS::Events {
  // Forward declaring type: TTSWebRequestEvents
  class TTSWebRequestEvents;
  // Forward declaring type: TTSStreamEvents
  class TTSStreamEvents;
  // Forward declaring type: TTSDownloadEvents
  class TTSDownloadEvents;
}
// Forward declaring namespace: Meta::WitAi::TTS::Data
namespace Meta::WitAi::TTS::Data {
  // Forward declaring type: TTSClipData
  class TTSClipData;
}
// Completed forward declares
// Type namespace: Meta.WitAi.TTS.Interfaces
namespace Meta::WitAi::TTS::Interfaces {
  // Forward declaring type: ITTSWebHandler
  class ITTSWebHandler;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Meta::WitAi::TTS::Interfaces::ITTSWebHandler);
DEFINE_IL2CPP_ARG_TYPE(::Meta::WitAi::TTS::Interfaces::ITTSWebHandler*, "Meta.WitAi.TTS.Interfaces", "ITTSWebHandler");
// Type namespace: Meta.WitAi.TTS.Interfaces
namespace Meta::WitAi::TTS::Interfaces {
  // Size: 0x0
  #pragma pack(push, 1)
  // Autogenerated type: Meta.WitAi.TTS.Interfaces.ITTSWebHandler
  // [TokenAttribute] Offset: FFFFFFFF
  class ITTSWebHandler {
    public:
    // public Meta.WitAi.TTS.Events.TTSWebRequestEvents get_WebRequestEvents()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::Meta::WitAi::TTS::Events::TTSWebRequestEvents* get_WebRequestEvents();
    // public Meta.WitAi.TTS.Events.TTSStreamEvents get_WebStreamEvents()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::Meta::WitAi::TTS::Events::TTSStreamEvents* get_WebStreamEvents();
    // public System.String IsTextValid(System.String textToSpeak)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::StringW IsTextValid(::StringW textToSpeak);
    // public System.Void RequestStreamFromWeb(Meta.WitAi.TTS.Data.TTSClipData clipData)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void RequestStreamFromWeb(::Meta::WitAi::TTS::Data::TTSClipData* clipData);
    // public System.Boolean CancelWebStream(Meta.WitAi.TTS.Data.TTSClipData clipData)
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool CancelWebStream(::Meta::WitAi::TTS::Data::TTSClipData* clipData);
    // public Meta.WitAi.TTS.Events.TTSDownloadEvents get_WebDownloadEvents()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::Meta::WitAi::TTS::Events::TTSDownloadEvents* get_WebDownloadEvents();
    // public System.Void RequestDownloadFromWeb(Meta.WitAi.TTS.Data.TTSClipData clipData, System.String downloadPath)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void RequestDownloadFromWeb(::Meta::WitAi::TTS::Data::TTSClipData* clipData, ::StringW downloadPath);
    // public System.Boolean CancelWebDownload(Meta.WitAi.TTS.Data.TTSClipData clipData, System.String downloadPath)
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool CancelWebDownload(::Meta::WitAi::TTS::Data::TTSClipData* clipData, ::StringW downloadPath);
  }; // Meta.WitAi.TTS.Interfaces.ITTSWebHandler
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Meta::WitAi::TTS::Interfaces::ITTSWebHandler::get_WebRequestEvents
// Il2CppName: get_WebRequestEvents
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Meta::WitAi::TTS::Events::TTSWebRequestEvents* (Meta::WitAi::TTS::Interfaces::ITTSWebHandler::*)()>(&Meta::WitAi::TTS::Interfaces::ITTSWebHandler::get_WebRequestEvents)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::TTS::Interfaces::ITTSWebHandler*), "get_WebRequestEvents", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::TTS::Interfaces::ITTSWebHandler::get_WebStreamEvents
// Il2CppName: get_WebStreamEvents
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Meta::WitAi::TTS::Events::TTSStreamEvents* (Meta::WitAi::TTS::Interfaces::ITTSWebHandler::*)()>(&Meta::WitAi::TTS::Interfaces::ITTSWebHandler::get_WebStreamEvents)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::TTS::Interfaces::ITTSWebHandler*), "get_WebStreamEvents", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::TTS::Interfaces::ITTSWebHandler::IsTextValid
// Il2CppName: IsTextValid
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (Meta::WitAi::TTS::Interfaces::ITTSWebHandler::*)(::StringW)>(&Meta::WitAi::TTS::Interfaces::ITTSWebHandler::IsTextValid)> {
  static const MethodInfo* get() {
    static auto* textToSpeak = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::TTS::Interfaces::ITTSWebHandler*), "IsTextValid", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{textToSpeak});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::TTS::Interfaces::ITTSWebHandler::RequestStreamFromWeb
// Il2CppName: RequestStreamFromWeb
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Meta::WitAi::TTS::Interfaces::ITTSWebHandler::*)(::Meta::WitAi::TTS::Data::TTSClipData*)>(&Meta::WitAi::TTS::Interfaces::ITTSWebHandler::RequestStreamFromWeb)> {
  static const MethodInfo* get() {
    static auto* clipData = &::il2cpp_utils::GetClassFromName("Meta.WitAi.TTS.Data", "TTSClipData")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::TTS::Interfaces::ITTSWebHandler*), "RequestStreamFromWeb", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{clipData});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::TTS::Interfaces::ITTSWebHandler::CancelWebStream
// Il2CppName: CancelWebStream
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Meta::WitAi::TTS::Interfaces::ITTSWebHandler::*)(::Meta::WitAi::TTS::Data::TTSClipData*)>(&Meta::WitAi::TTS::Interfaces::ITTSWebHandler::CancelWebStream)> {
  static const MethodInfo* get() {
    static auto* clipData = &::il2cpp_utils::GetClassFromName("Meta.WitAi.TTS.Data", "TTSClipData")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::TTS::Interfaces::ITTSWebHandler*), "CancelWebStream", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{clipData});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::TTS::Interfaces::ITTSWebHandler::get_WebDownloadEvents
// Il2CppName: get_WebDownloadEvents
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Meta::WitAi::TTS::Events::TTSDownloadEvents* (Meta::WitAi::TTS::Interfaces::ITTSWebHandler::*)()>(&Meta::WitAi::TTS::Interfaces::ITTSWebHandler::get_WebDownloadEvents)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::TTS::Interfaces::ITTSWebHandler*), "get_WebDownloadEvents", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::TTS::Interfaces::ITTSWebHandler::RequestDownloadFromWeb
// Il2CppName: RequestDownloadFromWeb
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Meta::WitAi::TTS::Interfaces::ITTSWebHandler::*)(::Meta::WitAi::TTS::Data::TTSClipData*, ::StringW)>(&Meta::WitAi::TTS::Interfaces::ITTSWebHandler::RequestDownloadFromWeb)> {
  static const MethodInfo* get() {
    static auto* clipData = &::il2cpp_utils::GetClassFromName("Meta.WitAi.TTS.Data", "TTSClipData")->byval_arg;
    static auto* downloadPath = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::TTS::Interfaces::ITTSWebHandler*), "RequestDownloadFromWeb", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{clipData, downloadPath});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::TTS::Interfaces::ITTSWebHandler::CancelWebDownload
// Il2CppName: CancelWebDownload
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Meta::WitAi::TTS::Interfaces::ITTSWebHandler::*)(::Meta::WitAi::TTS::Data::TTSClipData*, ::StringW)>(&Meta::WitAi::TTS::Interfaces::ITTSWebHandler::CancelWebDownload)> {
  static const MethodInfo* get() {
    static auto* clipData = &::il2cpp_utils::GetClassFromName("Meta.WitAi.TTS.Data", "TTSClipData")->byval_arg;
    static auto* downloadPath = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::TTS::Interfaces::ITTSWebHandler*), "CancelWebDownload", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{clipData, downloadPath});
  }
};
