// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Meta.WitAi.TTS.TTSService
#include "Meta/WitAi/TTS/TTSService.hpp"
// Including type: Meta.WitAi.TTS.Interfaces.ITTSVoiceProvider
#include "Meta/WitAi/TTS/Interfaces/ITTSVoiceProvider.hpp"
// Including type: Meta.WitAi.TTS.Interfaces.ITTSWebHandler
#include "Meta/WitAi/TTS/Interfaces/ITTSWebHandler.hpp"
// Including type: Meta.WitAi.Interfaces.IWitConfigurationProvider
#include "Meta/WitAi/Interfaces/IWitConfigurationProvider.hpp"
// Including type: Meta.WitAi.TTS.Integrations.TTSWitRequestSettings
#include "Meta/WitAi/TTS/Integrations/TTSWitRequestSettings.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Meta::WitAi::TTS::Integrations
namespace Meta::WitAi::TTS::Integrations {
  // Forward declaring type: TTSWitVoiceSettings
  class TTSWitVoiceSettings;
}
// Forward declaring namespace: Meta::WitAi::TTS::Interfaces
namespace Meta::WitAi::TTS::Interfaces {
  // Forward declaring type: ITTSRuntimeCacheHandler
  class ITTSRuntimeCacheHandler;
  // Forward declaring type: ITTSDiskCacheHandler
  class ITTSDiskCacheHandler;
}
// Forward declaring namespace: Meta::WitAi::TTS::Events
namespace Meta::WitAi::TTS::Events {
  // Forward declaring type: TTSStreamEvents
  class TTSStreamEvents;
  // Forward declaring type: TTSDownloadEvents
  class TTSDownloadEvents;
  // Forward declaring type: TTSWebRequestEvents
  class TTSWebRequestEvents;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: Dictionary`2<TKey, TValue>
  template<typename TKey, typename TValue>
  class Dictionary_2;
}
// Forward declaring namespace: Meta::WitAi::Requests
namespace Meta::WitAi::Requests {
  // Forward declaring type: VRequest
  class VRequest;
  // Forward declaring type: WitVRequest
  class WitVRequest;
  // Forward declaring type: WitTTSVRequest
  class WitTTSVRequest;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: String
  class String;
  // Forward declaring type: Type
  class Type;
}
// Forward declaring namespace: System::Reflection
namespace System::Reflection {
  // Forward declaring type: FieldInfo
  class FieldInfo;
}
// Forward declaring namespace: Meta::WitAi::Data::Configuration
namespace Meta::WitAi::Data::Configuration {
  // Forward declaring type: WitConfiguration
  class WitConfiguration;
}
// Forward declaring namespace: Meta::WitAi::TTS::Data
namespace Meta::WitAi::TTS::Data {
  // Forward declaring type: TTSClipData
  class TTSClipData;
  // Forward declaring type: TTSVoiceSettings
  class TTSVoiceSettings;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: AudioType
  struct AudioType;
}
// Completed forward declares
// Type namespace: Meta.WitAi.TTS.Integrations
namespace Meta::WitAi::TTS::Integrations {
  // Forward declaring type: TTSWit
  class TTSWit;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Meta::WitAi::TTS::Integrations::TTSWit);
DEFINE_IL2CPP_ARG_TYPE(::Meta::WitAi::TTS::Integrations::TTSWit*, "Meta.WitAi.TTS.Integrations", "TTSWit");
// Type namespace: Meta.WitAi.TTS.Integrations
namespace Meta::WitAi::TTS::Integrations {
  // Size: 0x88
  #pragma pack(push, 1)
  // Autogenerated type: Meta.WitAi.TTS.Integrations.TTSWit
  // [TokenAttribute] Offset: FFFFFFFF
  class TTSWit : public ::Meta::WitAi::TTS::TTSService/*, public ::Meta::WitAi::TTS::Interfaces::ITTSVoiceProvider, public ::Meta::WitAi::TTS::Interfaces::ITTSWebHandler, public ::Meta::WitAi::Interfaces::IWitConfigurationProvider*/ {
    public:
    // Nested type: ::Meta::WitAi::TTS::Integrations::TTSWit::$$c__DisplayClass15_0
    class $$c__DisplayClass15_0;
    // Nested type: ::Meta::WitAi::TTS::Integrations::TTSWit::$$c__DisplayClass26_0
    class $$c__DisplayClass26_0;
    // Nested type: ::Meta::WitAi::TTS::Integrations::TTSWit::$$c__DisplayClass33_0
    class $$c__DisplayClass33_0;
    // Nested type: ::Meta::WitAi::TTS::Integrations::TTSWit::$$c__DisplayClass46_0
    class $$c__DisplayClass46_0;
    public:
    // private Meta.WitAi.TTS.Interfaces.ITTSRuntimeCacheHandler _runtimeCache
    // Size: 0x8
    // Offset: 0x40
    ::Meta::WitAi::TTS::Interfaces::ITTSRuntimeCacheHandler* runtimeCache;
    // Field size check
    static_assert(sizeof(::Meta::WitAi::TTS::Interfaces::ITTSRuntimeCacheHandler*) == 0x8);
    // private Meta.WitAi.TTS.Interfaces.ITTSDiskCacheHandler _diskCache
    // Size: 0x8
    // Offset: 0x48
    ::Meta::WitAi::TTS::Interfaces::ITTSDiskCacheHandler* diskCache;
    // Field size check
    static_assert(sizeof(::Meta::WitAi::TTS::Interfaces::ITTSDiskCacheHandler*) == 0x8);
    // public Meta.WitAi.TTS.Integrations.TTSWitRequestSettings RequestSettings
    // Size: 0xD
    // Offset: 0x50
    ::Meta::WitAi::TTS::Integrations::TTSWitRequestSettings RequestSettings;
    // Field size check
    static_assert(sizeof(::Meta::WitAi::TTS::Integrations::TTSWitRequestSettings) == 0xD);
    // Padding between fields: RequestSettings and: WebStreamEvents
    char __padding2[0x3] = {};
    // private Meta.WitAi.TTS.Events.TTSStreamEvents <WebStreamEvents>k__BackingField
    // Size: 0x8
    // Offset: 0x60
    ::Meta::WitAi::TTS::Events::TTSStreamEvents* WebStreamEvents;
    // Field size check
    static_assert(sizeof(::Meta::WitAi::TTS::Events::TTSStreamEvents*) == 0x8);
    // private System.Collections.Generic.Dictionary`2<System.String,Meta.WitAi.Requests.VRequest> _webStreams
    // Size: 0x8
    // Offset: 0x68
    ::System::Collections::Generic::Dictionary_2<::StringW, ::Meta::WitAi::Requests::VRequest*>* webStreams;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::Dictionary_2<::StringW, ::Meta::WitAi::Requests::VRequest*>*) == 0x8);
    // private Meta.WitAi.TTS.Events.TTSDownloadEvents <WebDownloadEvents>k__BackingField
    // Size: 0x8
    // Offset: 0x70
    ::Meta::WitAi::TTS::Events::TTSDownloadEvents* WebDownloadEvents;
    // Field size check
    static_assert(sizeof(::Meta::WitAi::TTS::Events::TTSDownloadEvents*) == 0x8);
    // private System.Collections.Generic.Dictionary`2<System.String,Meta.WitAi.Requests.WitVRequest> _webDownloads
    // Size: 0x8
    // Offset: 0x78
    ::System::Collections::Generic::Dictionary_2<::StringW, ::Meta::WitAi::Requests::WitVRequest*>* webDownloads;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::Dictionary_2<::StringW, ::Meta::WitAi::Requests::WitVRequest*>*) == 0x8);
    // private Meta.WitAi.TTS.Integrations.TTSWitVoiceSettings[] _presetVoiceSettings
    // Size: 0x8
    // Offset: 0x80
    ::ArrayW<::Meta::WitAi::TTS::Integrations::TTSWitVoiceSettings*> presetVoiceSettings;
    // Field size check
    static_assert(sizeof(::ArrayW<::Meta::WitAi::TTS::Integrations::TTSWitVoiceSettings*>) == 0x8);
    public:
    // Creating interface conversion operator: operator ::Meta::WitAi::TTS::Interfaces::ITTSVoiceProvider
    operator ::Meta::WitAi::TTS::Interfaces::ITTSVoiceProvider() noexcept {
      return *reinterpret_cast<::Meta::WitAi::TTS::Interfaces::ITTSVoiceProvider*>(this);
    }
    // Creating interface conversion operator: operator ::Meta::WitAi::TTS::Interfaces::ITTSWebHandler
    operator ::Meta::WitAi::TTS::Interfaces::ITTSWebHandler() noexcept {
      return *reinterpret_cast<::Meta::WitAi::TTS::Interfaces::ITTSWebHandler*>(this);
    }
    // Creating interface conversion operator: operator ::Meta::WitAi::Interfaces::IWitConfigurationProvider
    operator ::Meta::WitAi::Interfaces::IWitConfigurationProvider() noexcept {
      return *reinterpret_cast<::Meta::WitAi::Interfaces::IWitConfigurationProvider*>(this);
    }
    // static field const value: static private System.String VOICE_KEY
    static constexpr const char* VOICE_KEY = "voice";
    // Get static field: static private System.String VOICE_KEY
    static ::StringW _get_VOICE_KEY();
    // Set static field: static private System.String VOICE_KEY
    static void _set_VOICE_KEY(::StringW value);
    // static field const value: static private System.String STYLE_KEY
    static constexpr const char* STYLE_KEY = "style";
    // Get static field: static private System.String STYLE_KEY
    static ::StringW _get_STYLE_KEY();
    // Set static field: static private System.String STYLE_KEY
    static void _set_STYLE_KEY(::StringW value);
    // Get static field: static private readonly System.Collections.Generic.Dictionary`2<System.Type,System.Reflection.FieldInfo[]> _settingsFields
    static ::System::Collections::Generic::Dictionary_2<::System::Type*, ::ArrayW<::System::Reflection::FieldInfo*>>* _get__settingsFields();
    // Set static field: static private readonly System.Collections.Generic.Dictionary`2<System.Type,System.Reflection.FieldInfo[]> _settingsFields
    static void _set__settingsFields(::System::Collections::Generic::Dictionary_2<::System::Type*, ::ArrayW<::System::Reflection::FieldInfo*>>* value);
    // Get instance field reference: private Meta.WitAi.TTS.Interfaces.ITTSRuntimeCacheHandler _runtimeCache
    [[deprecated("Use field access instead!")]] ::Meta::WitAi::TTS::Interfaces::ITTSRuntimeCacheHandler*& dyn__runtimeCache();
    // Get instance field reference: private Meta.WitAi.TTS.Interfaces.ITTSDiskCacheHandler _diskCache
    [[deprecated("Use field access instead!")]] ::Meta::WitAi::TTS::Interfaces::ITTSDiskCacheHandler*& dyn__diskCache();
    // Get instance field reference: public Meta.WitAi.TTS.Integrations.TTSWitRequestSettings RequestSettings
    [[deprecated("Use field access instead!")]] ::Meta::WitAi::TTS::Integrations::TTSWitRequestSettings& dyn_RequestSettings();
    // Get instance field reference: private Meta.WitAi.TTS.Events.TTSStreamEvents <WebStreamEvents>k__BackingField
    [[deprecated("Use field access instead!")]] ::Meta::WitAi::TTS::Events::TTSStreamEvents*& dyn_$WebStreamEvents$k__BackingField();
    // Get instance field reference: private System.Collections.Generic.Dictionary`2<System.String,Meta.WitAi.Requests.VRequest> _webStreams
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::StringW, ::Meta::WitAi::Requests::VRequest*>*& dyn__webStreams();
    // Get instance field reference: private Meta.WitAi.TTS.Events.TTSDownloadEvents <WebDownloadEvents>k__BackingField
    [[deprecated("Use field access instead!")]] ::Meta::WitAi::TTS::Events::TTSDownloadEvents*& dyn_$WebDownloadEvents$k__BackingField();
    // Get instance field reference: private System.Collections.Generic.Dictionary`2<System.String,Meta.WitAi.Requests.WitVRequest> _webDownloads
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::StringW, ::Meta::WitAi::Requests::WitVRequest*>*& dyn__webDownloads();
    // Get instance field reference: private Meta.WitAi.TTS.Integrations.TTSWitVoiceSettings[] _presetVoiceSettings
    [[deprecated("Use field access instead!")]] ::ArrayW<::Meta::WitAi::TTS::Integrations::TTSWitVoiceSettings*>& dyn__presetVoiceSettings();
    // public Meta.WitAi.TTS.Events.TTSWebRequestEvents get_WebRequestEvents()
    // Offset: 0x4459E80
    ::Meta::WitAi::TTS::Events::TTSWebRequestEvents* get_WebRequestEvents();
    // public Meta.WitAi.Data.Configuration.WitConfiguration get_Configuration()
    // Offset: 0x4459E9C
    ::Meta::WitAi::Data::Configuration::WitConfiguration* get_Configuration();
    // private Meta.WitAi.Requests.WitTTSVRequest GetTtsRequest(Meta.WitAi.TTS.Data.TTSClipData clipData)
    // Offset: 0x4459EB0
    ::Meta::WitAi::Requests::WitTTSVRequest* GetTtsRequest(::Meta::WitAi::TTS::Data::TTSClipData* clipData);
    // private System.Void OnRequestProgressUpdated(Meta.WitAi.TTS.Data.TTSClipData clipData, System.Single newProgress)
    // Offset: 0x445A080
    void OnRequestProgressUpdated(::Meta::WitAi::TTS::Data::TTSClipData* clipData, float newProgress);
    // private System.Void OnRequestFirstResponse(Meta.WitAi.TTS.Data.TTSClipData clipData)
    // Offset: 0x445A08C
    void OnRequestFirstResponse(::Meta::WitAi::TTS::Data::TTSClipData* clipData);
    // public Meta.WitAi.TTS.Events.TTSStreamEvents get_WebStreamEvents()
    // Offset: 0x445A104
    ::Meta::WitAi::TTS::Events::TTSStreamEvents* get_WebStreamEvents();
    // public System.Void set_WebStreamEvents(Meta.WitAi.TTS.Events.TTSStreamEvents value)
    // Offset: 0x445A10C
    void set_WebStreamEvents(::Meta::WitAi::TTS::Events::TTSStreamEvents* value);
    // public System.String IsTextValid(System.String textToSpeak)
    // Offset: 0x445A204
    ::StringW IsTextValid(::StringW textToSpeak);
    // public System.Void RequestStreamFromWeb(Meta.WitAi.TTS.Data.TTSClipData clipData)
    // Offset: 0x445A278
    void RequestStreamFromWeb(::Meta::WitAi::TTS::Data::TTSClipData* clipData);
    // public System.Boolean CancelWebStream(Meta.WitAi.TTS.Data.TTSClipData clipData)
    // Offset: 0x445A588
    bool CancelWebStream(::Meta::WitAi::TTS::Data::TTSClipData* clipData);
    // public Meta.WitAi.TTS.Events.TTSDownloadEvents get_WebDownloadEvents()
    // Offset: 0x445A6C0
    ::Meta::WitAi::TTS::Events::TTSDownloadEvents* get_WebDownloadEvents();
    // public System.Void set_WebDownloadEvents(Meta.WitAi.TTS.Events.TTSDownloadEvents value)
    // Offset: 0x445A6C8
    void set_WebDownloadEvents(::Meta::WitAi::TTS::Events::TTSDownloadEvents* value);
    // public System.Void RequestDownloadFromWeb(Meta.WitAi.TTS.Data.TTSClipData clipData, System.String downloadPath)
    // Offset: 0x445A6D0
    void RequestDownloadFromWeb(::Meta::WitAi::TTS::Data::TTSClipData* clipData, ::StringW downloadPath);
    // public System.Boolean CancelWebDownload(Meta.WitAi.TTS.Data.TTSClipData clipData, System.String downloadPath)
    // Offset: 0x445A950
    bool CancelWebDownload(::Meta::WitAi::TTS::Data::TTSClipData* clipData, ::StringW downloadPath);
    // public Meta.WitAi.TTS.Integrations.TTSWitVoiceSettings[] get_PresetWitVoiceSettings()
    // Offset: 0x445AAA4
    ::ArrayW<::Meta::WitAi::TTS::Integrations::TTSWitVoiceSettings*> get_PresetWitVoiceSettings();
    // public Meta.WitAi.TTS.Data.TTSVoiceSettings[] get_PresetVoiceSettings()
    // Offset: 0x445AAAC
    ::ArrayW<::Meta::WitAi::TTS::Data::TTSVoiceSettings*> get_PresetVoiceSettings();
    // public Meta.WitAi.TTS.Data.TTSVoiceSettings get_VoiceDefaultSettings()
    // Offset: 0x445AB14
    ::Meta::WitAi::TTS::Data::TTSVoiceSettings* get_VoiceDefaultSettings();
    // public System.Collections.Generic.Dictionary`2<System.String,System.String> EncodeVoiceSettings(Meta.WitAi.TTS.Data.TTSVoiceSettings voiceSettings)
    // Offset: 0x445AB68
    ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* EncodeVoiceSettings(::Meta::WitAi::TTS::Data::TTSVoiceSettings* voiceSettings);
    // static private System.Reflection.FieldInfo[] GetVoiceSettingsFields(Meta.WitAi.TTS.Data.TTSVoiceSettings voiceSettings)
    // Offset: 0x445AF3C
    static ::ArrayW<::System::Reflection::FieldInfo*> GetVoiceSettingsFields(::Meta::WitAi::TTS::Data::TTSVoiceSettings* voiceSettings);
    // private System.String IsRequestValid(Meta.WitAi.TTS.Data.TTSClipData clipData, Meta.WitAi.Data.Configuration.WitConfiguration configuration)
    // Offset: 0x445A4F8
    ::StringW IsRequestValid(::Meta::WitAi::TTS::Data::TTSClipData* clipData, ::Meta::WitAi::Data::Configuration::WitConfiguration* configuration);
    // static private System.Void .cctor()
    // Offset: 0x445B434
    static void _cctor();
    // public override Meta.WitAi.TTS.Interfaces.ITTSVoiceProvider get_VoiceProvider()
    // Offset: 0x4459D80
    // Implemented from: Meta.WitAi.TTS.TTSService
    // Base method: Meta.WitAi.TTS.Interfaces.ITTSVoiceProvider TTSService::get_VoiceProvider()
    ::Meta::WitAi::TTS::Interfaces::ITTSVoiceProvider* get_VoiceProvider();
    // public override Meta.WitAi.TTS.Interfaces.ITTSWebHandler get_WebHandler()
    // Offset: 0x4459D84
    // Implemented from: Meta.WitAi.TTS.TTSService
    // Base method: Meta.WitAi.TTS.Interfaces.ITTSWebHandler TTSService::get_WebHandler()
    ::Meta::WitAi::TTS::Interfaces::ITTSWebHandler* get_WebHandler();
    // public override Meta.WitAi.TTS.Interfaces.ITTSRuntimeCacheHandler get_RuntimeCacheHandler()
    // Offset: 0x4459D88
    // Implemented from: Meta.WitAi.TTS.TTSService
    // Base method: Meta.WitAi.TTS.Interfaces.ITTSRuntimeCacheHandler TTSService::get_RuntimeCacheHandler()
    ::Meta::WitAi::TTS::Interfaces::ITTSRuntimeCacheHandler* get_RuntimeCacheHandler();
    // public override Meta.WitAi.TTS.Interfaces.ITTSDiskCacheHandler get_DiskCacheHandler()
    // Offset: 0x4459E04
    // Implemented from: Meta.WitAi.TTS.TTSService
    // Base method: Meta.WitAi.TTS.Interfaces.ITTSDiskCacheHandler TTSService::get_DiskCacheHandler()
    ::Meta::WitAi::TTS::Interfaces::ITTSDiskCacheHandler* get_DiskCacheHandler();
    // protected override UnityEngine.AudioType GetAudioType()
    // Offset: 0x4459EA4
    // Implemented from: Meta.WitAi.TTS.TTSService
    // Base method: UnityEngine.AudioType TTSService::GetAudioType()
    ::UnityEngine::AudioType GetAudioType();
    // public override System.String GetInvalidError()
    // Offset: 0x445A114
    // Implemented from: Meta.WitAi.TTS.TTSService
    // Base method: System.String TTSService::GetInvalidError()
    ::StringW GetInvalidError();
    // public System.Void .ctor()
    // Offset: 0x445B1E4
    // Implemented from: Meta.WitAi.TTS.TTSService
    // Base method: System.Void TTSService::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static TTSWit* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::TTS::Integrations::TTSWit::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<TTSWit*, creationType>()));
    }
  }; // Meta.WitAi.TTS.Integrations.TTSWit
  #pragma pack(pop)
  static check_size<sizeof(TTSWit), 128 + sizeof(::ArrayW<::Meta::WitAi::TTS::Integrations::TTSWitVoiceSettings*>)> __Meta_WitAi_TTS_Integrations_TTSWitSizeCheck;
  static_assert(sizeof(TTSWit) == 0x88);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Meta::WitAi::TTS::Integrations::TTSWit::get_WebRequestEvents
// Il2CppName: get_WebRequestEvents
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Meta::WitAi::TTS::Events::TTSWebRequestEvents* (Meta::WitAi::TTS::Integrations::TTSWit::*)()>(&Meta::WitAi::TTS::Integrations::TTSWit::get_WebRequestEvents)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::TTS::Integrations::TTSWit*), "get_WebRequestEvents", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::TTS::Integrations::TTSWit::get_Configuration
// Il2CppName: get_Configuration
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Meta::WitAi::Data::Configuration::WitConfiguration* (Meta::WitAi::TTS::Integrations::TTSWit::*)()>(&Meta::WitAi::TTS::Integrations::TTSWit::get_Configuration)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::TTS::Integrations::TTSWit*), "get_Configuration", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::TTS::Integrations::TTSWit::GetTtsRequest
// Il2CppName: GetTtsRequest
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Meta::WitAi::Requests::WitTTSVRequest* (Meta::WitAi::TTS::Integrations::TTSWit::*)(::Meta::WitAi::TTS::Data::TTSClipData*)>(&Meta::WitAi::TTS::Integrations::TTSWit::GetTtsRequest)> {
  static const MethodInfo* get() {
    static auto* clipData = &::il2cpp_utils::GetClassFromName("Meta.WitAi.TTS.Data", "TTSClipData")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::TTS::Integrations::TTSWit*), "GetTtsRequest", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{clipData});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::TTS::Integrations::TTSWit::OnRequestProgressUpdated
// Il2CppName: OnRequestProgressUpdated
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Meta::WitAi::TTS::Integrations::TTSWit::*)(::Meta::WitAi::TTS::Data::TTSClipData*, float)>(&Meta::WitAi::TTS::Integrations::TTSWit::OnRequestProgressUpdated)> {
  static const MethodInfo* get() {
    static auto* clipData = &::il2cpp_utils::GetClassFromName("Meta.WitAi.TTS.Data", "TTSClipData")->byval_arg;
    static auto* newProgress = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::TTS::Integrations::TTSWit*), "OnRequestProgressUpdated", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{clipData, newProgress});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::TTS::Integrations::TTSWit::OnRequestFirstResponse
// Il2CppName: OnRequestFirstResponse
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Meta::WitAi::TTS::Integrations::TTSWit::*)(::Meta::WitAi::TTS::Data::TTSClipData*)>(&Meta::WitAi::TTS::Integrations::TTSWit::OnRequestFirstResponse)> {
  static const MethodInfo* get() {
    static auto* clipData = &::il2cpp_utils::GetClassFromName("Meta.WitAi.TTS.Data", "TTSClipData")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::TTS::Integrations::TTSWit*), "OnRequestFirstResponse", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{clipData});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::TTS::Integrations::TTSWit::get_WebStreamEvents
// Il2CppName: get_WebStreamEvents
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Meta::WitAi::TTS::Events::TTSStreamEvents* (Meta::WitAi::TTS::Integrations::TTSWit::*)()>(&Meta::WitAi::TTS::Integrations::TTSWit::get_WebStreamEvents)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::TTS::Integrations::TTSWit*), "get_WebStreamEvents", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::TTS::Integrations::TTSWit::set_WebStreamEvents
// Il2CppName: set_WebStreamEvents
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Meta::WitAi::TTS::Integrations::TTSWit::*)(::Meta::WitAi::TTS::Events::TTSStreamEvents*)>(&Meta::WitAi::TTS::Integrations::TTSWit::set_WebStreamEvents)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("Meta.WitAi.TTS.Events", "TTSStreamEvents")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::TTS::Integrations::TTSWit*), "set_WebStreamEvents", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::TTS::Integrations::TTSWit::IsTextValid
// Il2CppName: IsTextValid
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (Meta::WitAi::TTS::Integrations::TTSWit::*)(::StringW)>(&Meta::WitAi::TTS::Integrations::TTSWit::IsTextValid)> {
  static const MethodInfo* get() {
    static auto* textToSpeak = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::TTS::Integrations::TTSWit*), "IsTextValid", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{textToSpeak});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::TTS::Integrations::TTSWit::RequestStreamFromWeb
// Il2CppName: RequestStreamFromWeb
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Meta::WitAi::TTS::Integrations::TTSWit::*)(::Meta::WitAi::TTS::Data::TTSClipData*)>(&Meta::WitAi::TTS::Integrations::TTSWit::RequestStreamFromWeb)> {
  static const MethodInfo* get() {
    static auto* clipData = &::il2cpp_utils::GetClassFromName("Meta.WitAi.TTS.Data", "TTSClipData")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::TTS::Integrations::TTSWit*), "RequestStreamFromWeb", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{clipData});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::TTS::Integrations::TTSWit::CancelWebStream
// Il2CppName: CancelWebStream
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Meta::WitAi::TTS::Integrations::TTSWit::*)(::Meta::WitAi::TTS::Data::TTSClipData*)>(&Meta::WitAi::TTS::Integrations::TTSWit::CancelWebStream)> {
  static const MethodInfo* get() {
    static auto* clipData = &::il2cpp_utils::GetClassFromName("Meta.WitAi.TTS.Data", "TTSClipData")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::TTS::Integrations::TTSWit*), "CancelWebStream", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{clipData});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::TTS::Integrations::TTSWit::get_WebDownloadEvents
// Il2CppName: get_WebDownloadEvents
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Meta::WitAi::TTS::Events::TTSDownloadEvents* (Meta::WitAi::TTS::Integrations::TTSWit::*)()>(&Meta::WitAi::TTS::Integrations::TTSWit::get_WebDownloadEvents)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::TTS::Integrations::TTSWit*), "get_WebDownloadEvents", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::TTS::Integrations::TTSWit::set_WebDownloadEvents
// Il2CppName: set_WebDownloadEvents
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Meta::WitAi::TTS::Integrations::TTSWit::*)(::Meta::WitAi::TTS::Events::TTSDownloadEvents*)>(&Meta::WitAi::TTS::Integrations::TTSWit::set_WebDownloadEvents)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("Meta.WitAi.TTS.Events", "TTSDownloadEvents")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::TTS::Integrations::TTSWit*), "set_WebDownloadEvents", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::TTS::Integrations::TTSWit::RequestDownloadFromWeb
// Il2CppName: RequestDownloadFromWeb
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Meta::WitAi::TTS::Integrations::TTSWit::*)(::Meta::WitAi::TTS::Data::TTSClipData*, ::StringW)>(&Meta::WitAi::TTS::Integrations::TTSWit::RequestDownloadFromWeb)> {
  static const MethodInfo* get() {
    static auto* clipData = &::il2cpp_utils::GetClassFromName("Meta.WitAi.TTS.Data", "TTSClipData")->byval_arg;
    static auto* downloadPath = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::TTS::Integrations::TTSWit*), "RequestDownloadFromWeb", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{clipData, downloadPath});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::TTS::Integrations::TTSWit::CancelWebDownload
// Il2CppName: CancelWebDownload
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Meta::WitAi::TTS::Integrations::TTSWit::*)(::Meta::WitAi::TTS::Data::TTSClipData*, ::StringW)>(&Meta::WitAi::TTS::Integrations::TTSWit::CancelWebDownload)> {
  static const MethodInfo* get() {
    static auto* clipData = &::il2cpp_utils::GetClassFromName("Meta.WitAi.TTS.Data", "TTSClipData")->byval_arg;
    static auto* downloadPath = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::TTS::Integrations::TTSWit*), "CancelWebDownload", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{clipData, downloadPath});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::TTS::Integrations::TTSWit::get_PresetWitVoiceSettings
// Il2CppName: get_PresetWitVoiceSettings
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::Meta::WitAi::TTS::Integrations::TTSWitVoiceSettings*> (Meta::WitAi::TTS::Integrations::TTSWit::*)()>(&Meta::WitAi::TTS::Integrations::TTSWit::get_PresetWitVoiceSettings)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::TTS::Integrations::TTSWit*), "get_PresetWitVoiceSettings", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::TTS::Integrations::TTSWit::get_PresetVoiceSettings
// Il2CppName: get_PresetVoiceSettings
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::Meta::WitAi::TTS::Data::TTSVoiceSettings*> (Meta::WitAi::TTS::Integrations::TTSWit::*)()>(&Meta::WitAi::TTS::Integrations::TTSWit::get_PresetVoiceSettings)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::TTS::Integrations::TTSWit*), "get_PresetVoiceSettings", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::TTS::Integrations::TTSWit::get_VoiceDefaultSettings
// Il2CppName: get_VoiceDefaultSettings
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Meta::WitAi::TTS::Data::TTSVoiceSettings* (Meta::WitAi::TTS::Integrations::TTSWit::*)()>(&Meta::WitAi::TTS::Integrations::TTSWit::get_VoiceDefaultSettings)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::TTS::Integrations::TTSWit*), "get_VoiceDefaultSettings", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::TTS::Integrations::TTSWit::EncodeVoiceSettings
// Il2CppName: EncodeVoiceSettings
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* (Meta::WitAi::TTS::Integrations::TTSWit::*)(::Meta::WitAi::TTS::Data::TTSVoiceSettings*)>(&Meta::WitAi::TTS::Integrations::TTSWit::EncodeVoiceSettings)> {
  static const MethodInfo* get() {
    static auto* voiceSettings = &::il2cpp_utils::GetClassFromName("Meta.WitAi.TTS.Data", "TTSVoiceSettings")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::TTS::Integrations::TTSWit*), "EncodeVoiceSettings", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{voiceSettings});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::TTS::Integrations::TTSWit::GetVoiceSettingsFields
// Il2CppName: GetVoiceSettingsFields
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::System::Reflection::FieldInfo*> (*)(::Meta::WitAi::TTS::Data::TTSVoiceSettings*)>(&Meta::WitAi::TTS::Integrations::TTSWit::GetVoiceSettingsFields)> {
  static const MethodInfo* get() {
    static auto* voiceSettings = &::il2cpp_utils::GetClassFromName("Meta.WitAi.TTS.Data", "TTSVoiceSettings")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::TTS::Integrations::TTSWit*), "GetVoiceSettingsFields", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{voiceSettings});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::TTS::Integrations::TTSWit::IsRequestValid
// Il2CppName: IsRequestValid
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (Meta::WitAi::TTS::Integrations::TTSWit::*)(::Meta::WitAi::TTS::Data::TTSClipData*, ::Meta::WitAi::Data::Configuration::WitConfiguration*)>(&Meta::WitAi::TTS::Integrations::TTSWit::IsRequestValid)> {
  static const MethodInfo* get() {
    static auto* clipData = &::il2cpp_utils::GetClassFromName("Meta.WitAi.TTS.Data", "TTSClipData")->byval_arg;
    static auto* configuration = &::il2cpp_utils::GetClassFromName("Meta.WitAi.Data.Configuration", "WitConfiguration")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::TTS::Integrations::TTSWit*), "IsRequestValid", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{clipData, configuration});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::TTS::Integrations::TTSWit::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&Meta::WitAi::TTS::Integrations::TTSWit::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::TTS::Integrations::TTSWit*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::TTS::Integrations::TTSWit::get_VoiceProvider
// Il2CppName: get_VoiceProvider
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Meta::WitAi::TTS::Interfaces::ITTSVoiceProvider* (Meta::WitAi::TTS::Integrations::TTSWit::*)()>(&Meta::WitAi::TTS::Integrations::TTSWit::get_VoiceProvider)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::TTS::Integrations::TTSWit*), "get_VoiceProvider", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::TTS::Integrations::TTSWit::get_WebHandler
// Il2CppName: get_WebHandler
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Meta::WitAi::TTS::Interfaces::ITTSWebHandler* (Meta::WitAi::TTS::Integrations::TTSWit::*)()>(&Meta::WitAi::TTS::Integrations::TTSWit::get_WebHandler)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::TTS::Integrations::TTSWit*), "get_WebHandler", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::TTS::Integrations::TTSWit::get_RuntimeCacheHandler
// Il2CppName: get_RuntimeCacheHandler
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Meta::WitAi::TTS::Interfaces::ITTSRuntimeCacheHandler* (Meta::WitAi::TTS::Integrations::TTSWit::*)()>(&Meta::WitAi::TTS::Integrations::TTSWit::get_RuntimeCacheHandler)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::TTS::Integrations::TTSWit*), "get_RuntimeCacheHandler", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::TTS::Integrations::TTSWit::get_DiskCacheHandler
// Il2CppName: get_DiskCacheHandler
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Meta::WitAi::TTS::Interfaces::ITTSDiskCacheHandler* (Meta::WitAi::TTS::Integrations::TTSWit::*)()>(&Meta::WitAi::TTS::Integrations::TTSWit::get_DiskCacheHandler)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::TTS::Integrations::TTSWit*), "get_DiskCacheHandler", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::TTS::Integrations::TTSWit::GetAudioType
// Il2CppName: GetAudioType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::AudioType (Meta::WitAi::TTS::Integrations::TTSWit::*)()>(&Meta::WitAi::TTS::Integrations::TTSWit::GetAudioType)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::TTS::Integrations::TTSWit*), "GetAudioType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::TTS::Integrations::TTSWit::GetInvalidError
// Il2CppName: GetInvalidError
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (Meta::WitAi::TTS::Integrations::TTSWit::*)()>(&Meta::WitAi::TTS::Integrations::TTSWit::GetInvalidError)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::TTS::Integrations::TTSWit*), "GetInvalidError", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::TTS::Integrations::TTSWit::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
