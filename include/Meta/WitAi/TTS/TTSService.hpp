// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Meta::WitAi::TTS
namespace Meta::WitAi::TTS {
}
// Forward declaring namespace: Meta::Voice::Audio
namespace Meta::Voice::Audio {
  // Forward declaring type: IAudioSystem
  class IAudioSystem;
  // Forward declaring type: IAudioClipStream
  class IAudioClipStream;
}
// Forward declaring namespace: Meta::WitAi::TTS::Events
namespace Meta::WitAi::TTS::Events {
  // Forward declaring type: TTSServiceEvents
  class TTSServiceEvents;
}
// Forward declaring namespace: System::Security::Cryptography
namespace System::Security::Cryptography {
  // Forward declaring type: SHA256
  class SHA256;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Action`1<T>
  template<typename T>
  class Action_1;
  // Forward declaring type: String
  class String;
  // Forward declaring type: Action`2<T1, T2>
  template<typename T1, typename T2>
  class Action_2;
  // Forward declaring type: Action
  class Action;
  // Forward declaring type: Action`3<T1, T2, T3>
  template<typename T1, typename T2, typename T3>
  class Action_3;
}
// Forward declaring namespace: Meta::WitAi::TTS::Interfaces
namespace Meta::WitAi::TTS::Interfaces {
  // Forward declaring type: ITTSRuntimeCacheHandler
  class ITTSRuntimeCacheHandler;
  // Forward declaring type: ITTSDiskCacheHandler
  class ITTSDiskCacheHandler;
  // Forward declaring type: ITTSWebHandler
  class ITTSWebHandler;
  // Forward declaring type: ITTSVoiceProvider
  class ITTSVoiceProvider;
}
// Forward declaring namespace: Meta::WitAi::TTS::Data
namespace Meta::WitAi::TTS::Data {
  // Forward declaring type: TTSClipData
  class TTSClipData;
  // Forward declaring type: TTSVoiceSettings
  class TTSVoiceSettings;
  // Forward declaring type: TTSDiskCacheSettings
  class TTSDiskCacheSettings;
  // Forward declaring type: TTSClipLoadState
  struct TTSClipLoadState;
}
// Forward declaring namespace: System::Text
namespace System::Text {
  // Forward declaring type: StringBuilder
  class StringBuilder;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: AudioType
  struct AudioType;
}
// Forward declaring namespace: System::Collections
namespace System::Collections {
  // Forward declaring type: IEnumerator
  class IEnumerator;
}
// Completed forward declares
// Type namespace: Meta.WitAi.TTS
namespace Meta::WitAi::TTS {
  // Forward declaring type: TTSService
  class TTSService;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Meta::WitAi::TTS::TTSService);
DEFINE_IL2CPP_ARG_TYPE(::Meta::WitAi::TTS::TTSService*, "Meta.WitAi.TTS", "TTSService");
// Type namespace: Meta.WitAi.TTS
namespace Meta::WitAi::TTS {
  // Size: 0x40
  #pragma pack(push, 1)
  // Autogenerated type: Meta.WitAi.TTS.TTSService
  // [TokenAttribute] Offset: FFFFFFFF
  class TTSService : public ::UnityEngine::MonoBehaviour {
    public:
    // Nested type: ::Meta::WitAi::TTS::TTSService::$$c
    class $$c;
    // Nested type: ::Meta::WitAi::TTS::TTSService::$$c__DisplayClass48_0
    class $$c__DisplayClass48_0;
    // Nested type: ::Meta::WitAi::TTS::TTSService::$$c__DisplayClass53_0
    class $$c__DisplayClass53_0;
    // Nested type: ::Meta::WitAi::TTS::TTSService::$$c__DisplayClass62_0
    class $$c__DisplayClass62_0;
    // Nested type: ::Meta::WitAi::TTS::TTSService::$$c__DisplayClass79_0
    class $$c__DisplayClass79_0;
    // Nested type: ::Meta::WitAi::TTS::TTSService::$$c__DisplayClass85_0
    class $$c__DisplayClass85_0;
    // Nested type: ::Meta::WitAi::TTS::TTSService::$CallAfterAMoment$d__49
    class $CallAfterAMoment$d__49;
    public:
    // private Meta.Voice.Audio.IAudioSystem _audioSystem
    // Size: 0x8
    // Offset: 0x20
    ::Meta::Voice::Audio::IAudioSystem* audioSystem;
    // Field size check
    static_assert(sizeof(::Meta::Voice::Audio::IAudioSystem*) == 0x8);
    // private Meta.WitAi.TTS.Events.TTSServiceEvents _events
    // Size: 0x8
    // Offset: 0x28
    ::Meta::WitAi::TTS::Events::TTSServiceEvents* events;
    // Field size check
    static_assert(sizeof(::Meta::WitAi::TTS::Events::TTSServiceEvents*) == 0x8);
    // private System.Boolean _delegates
    // Size: 0x1
    // Offset: 0x30
    bool delegates;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: delegates and: CLIP_HASH
    char __padding2[0x7] = {};
    // private readonly System.Security.Cryptography.SHA256 CLIP_HASH
    // Size: 0x8
    // Offset: 0x38
    ::System::Security::Cryptography::SHA256* CLIP_HASH;
    // Field size check
    static_assert(sizeof(::System::Security::Cryptography::SHA256*) == 0x8);
    public:
    // Get static field: static private Meta.WitAi.TTS.TTSService _instance
    static ::Meta::WitAi::TTS::TTSService* _get__instance();
    // Set static field: static private Meta.WitAi.TTS.TTSService _instance
    static void _set__instance(::Meta::WitAi::TTS::TTSService* value);
    // Get static field: static private System.Action`1<Meta.WitAi.TTS.TTSService> OnServiceStart
    static ::System::Action_1<::Meta::WitAi::TTS::TTSService*>* _get_OnServiceStart();
    // Set static field: static private System.Action`1<Meta.WitAi.TTS.TTSService> OnServiceStart
    static void _set_OnServiceStart(::System::Action_1<::Meta::WitAi::TTS::TTSService*>* value);
    // Get static field: static private System.Action`1<Meta.WitAi.TTS.TTSService> OnServiceDestroy
    static ::System::Action_1<::Meta::WitAi::TTS::TTSService*>* _get_OnServiceDestroy();
    // Set static field: static private System.Action`1<Meta.WitAi.TTS.TTSService> OnServiceDestroy
    static void _set_OnServiceDestroy(::System::Action_1<::Meta::WitAi::TTS::TTSService*>* value);
    // static field const value: static private System.String CLIP_ID_DELIM
    static constexpr const char* CLIP_ID_DELIM = "|";
    // Get static field: static private System.String CLIP_ID_DELIM
    static ::StringW _get_CLIP_ID_DELIM();
    // Set static field: static private System.String CLIP_ID_DELIM
    static void _set_CLIP_ID_DELIM(::StringW value);
    // Get instance field reference: private Meta.Voice.Audio.IAudioSystem _audioSystem
    [[deprecated("Use field access instead!")]] ::Meta::Voice::Audio::IAudioSystem*& dyn__audioSystem();
    // Get instance field reference: private Meta.WitAi.TTS.Events.TTSServiceEvents _events
    [[deprecated("Use field access instead!")]] ::Meta::WitAi::TTS::Events::TTSServiceEvents*& dyn__events();
    // Get instance field reference: private System.Boolean _delegates
    [[deprecated("Use field access instead!")]] bool& dyn__delegates();
    // Get instance field reference: private readonly System.Security.Cryptography.SHA256 CLIP_HASH
    [[deprecated("Use field access instead!")]] ::System::Security::Cryptography::SHA256*& dyn_CLIP_HASH();
    // static public Meta.WitAi.TTS.TTSService get_Instance()
    // Offset: 0x44518C4
    static ::Meta::WitAi::TTS::TTSService* get_Instance();
    // public Meta.Voice.Audio.IAudioSystem get_AudioSystem()
    // Offset: 0x4451A60
    ::Meta::Voice::Audio::IAudioSystem* get_AudioSystem();
    // public System.Void set_AudioSystem(Meta.Voice.Audio.IAudioSystem value)
    // Offset: 0x4451B50
    void set_AudioSystem(::Meta::Voice::Audio::IAudioSystem* value);
    // public Meta.WitAi.TTS.Interfaces.ITTSRuntimeCacheHandler get_RuntimeCacheHandler()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::Meta::WitAi::TTS::Interfaces::ITTSRuntimeCacheHandler* get_RuntimeCacheHandler();
    // public Meta.WitAi.TTS.Interfaces.ITTSDiskCacheHandler get_DiskCacheHandler()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::Meta::WitAi::TTS::Interfaces::ITTSDiskCacheHandler* get_DiskCacheHandler();
    // public Meta.WitAi.TTS.Interfaces.ITTSWebHandler get_WebHandler()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::Meta::WitAi::TTS::Interfaces::ITTSWebHandler* get_WebHandler();
    // public Meta.WitAi.TTS.Interfaces.ITTSVoiceProvider get_VoiceProvider()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::Meta::WitAi::TTS::Interfaces::ITTSVoiceProvider* get_VoiceProvider();
    // static public System.Void add_OnServiceStart(System.Action`1<Meta.WitAi.TTS.TTSService> value)
    // Offset: 0x4451B58
    static void add_OnServiceStart(::System::Action_1<::Meta::WitAi::TTS::TTSService*>* value);
    // static public System.Void remove_OnServiceStart(System.Action`1<Meta.WitAi.TTS.TTSService> value)
    // Offset: 0x4451C28
    static void remove_OnServiceStart(::System::Action_1<::Meta::WitAi::TTS::TTSService*>* value);
    // static public System.Void add_OnServiceDestroy(System.Action`1<Meta.WitAi.TTS.TTSService> value)
    // Offset: 0x4451CF8
    static void add_OnServiceDestroy(::System::Action_1<::Meta::WitAi::TTS::TTSService*>* value);
    // static public System.Void remove_OnServiceDestroy(System.Action`1<Meta.WitAi.TTS.TTSService> value)
    // Offset: 0x4451DC8
    static void remove_OnServiceDestroy(::System::Action_1<::Meta::WitAi::TTS::TTSService*>* value);
    // public System.String GetInvalidError()
    // Offset: 0x4451E98
    ::StringW GetInvalidError();
    // public Meta.WitAi.TTS.Events.TTSServiceEvents get_Events()
    // Offset: 0x4451F3C
    ::Meta::WitAi::TTS::Events::TTSServiceEvents* get_Events();
    // protected System.Void Awake()
    // Offset: 0x4451F44
    void Awake();
    // protected System.Void Start()
    // Offset: 0x4451FA4
    void Start();
    // protected System.Void OnEnable()
    // Offset: 0x4452010
    void OnEnable();
    // protected System.Void OnDisable()
    // Offset: 0x4452048
    void OnDisable();
    // protected System.Void AddDelegates()
    // Offset: 0x4452058
    void AddDelegates();
    // protected System.Void RemoveDelegates()
    // Offset: 0x4452C28
    void RemoveDelegates();
    // protected System.Void OnDestroy()
    // Offset: 0x44537F4
    void OnDestroy();
    // protected System.String GetClipLog(System.String logMessage, Meta.WitAi.TTS.Data.TTSClipData clipData)
    // Offset: 0x4453AE4
    ::StringW GetClipLog(::StringW logMessage, ::Meta::WitAi::TTS::Data::TTSClipData* clipData);
    // public System.String GetFinalText(System.String textToSpeak, Meta.WitAi.TTS.Data.TTSVoiceSettings voiceSettings)
    // Offset: 0x4453E80
    ::StringW GetFinalText(::StringW textToSpeak, ::Meta::WitAi::TTS::Data::TTSVoiceSettings* voiceSettings);
    // protected System.Void AppendFinalText(System.Text.StringBuilder builder, System.String textToSpeak, Meta.WitAi.TTS.Data.TTSVoiceSettings voiceSettings)
    // Offset: 0x4453F18
    void AppendFinalText(::System::Text::StringBuilder* builder, ::StringW textToSpeak, ::Meta::WitAi::TTS::Data::TTSVoiceSettings* voiceSettings);
    // public System.String GetClipID(System.String textToSpeak, Meta.WitAi.TTS.Data.TTSVoiceSettings voiceSettings)
    // Offset: 0x4453FE0
    ::StringW GetClipID(::StringW textToSpeak, ::Meta::WitAi::TTS::Data::TTSVoiceSettings* voiceSettings);
    // private System.String GetSha256Hash(System.Security.Cryptography.SHA256 shaHash, System.String input)
    // Offset: 0x4454310
    ::StringW GetSha256Hash(::System::Security::Cryptography::SHA256* shaHash, ::StringW input);
    // protected Meta.WitAi.TTS.Data.TTSClipData CreateClipData(System.String textToSpeak, System.String clipID, Meta.WitAi.TTS.Data.TTSVoiceSettings voiceSettings, Meta.WitAi.TTS.Data.TTSDiskCacheSettings diskCacheSettings)
    // Offset: 0x4454430
    ::Meta::WitAi::TTS::Data::TTSClipData* CreateClipData(::StringW textToSpeak, ::StringW clipID, ::Meta::WitAi::TTS::Data::TTSVoiceSettings* voiceSettings, ::Meta::WitAi::TTS::Data::TTSDiskCacheSettings* diskCacheSettings);
    // protected Meta.Voice.Audio.IAudioClipStream CreateClipStream()
    // Offset: 0x4454A90
    ::Meta::Voice::Audio::IAudioClipStream* CreateClipStream();
    // protected UnityEngine.AudioType GetAudioType()
    // Offset: 0x4454B94
    ::UnityEngine::AudioType GetAudioType();
    // protected System.Void SetClipLoadState(Meta.WitAi.TTS.Data.TTSClipData clipData, Meta.WitAi.TTS.Data.TTSClipLoadState loadState)
    // Offset: 0x4454B9C
    void SetClipLoadState(::Meta::WitAi::TTS::Data::TTSClipData* clipData, ::Meta::WitAi::TTS::Data::TTSClipLoadState loadState);
    // public Meta.WitAi.TTS.Data.TTSClipData Load(System.String textToSpeak, System.Action`2<Meta.WitAi.TTS.Data.TTSClipData,System.String> onStreamReady)
    // Offset: 0x4454BD0
    ::Meta::WitAi::TTS::Data::TTSClipData* Load(::StringW textToSpeak, ::System::Action_2<::Meta::WitAi::TTS::Data::TTSClipData*, ::StringW>* onStreamReady);
    // public Meta.WitAi.TTS.Data.TTSClipData Load(System.String textToSpeak, System.String presetVoiceId, System.Action`2<Meta.WitAi.TTS.Data.TTSClipData,System.String> onStreamReady)
    // Offset: 0x4454BF0
    ::Meta::WitAi::TTS::Data::TTSClipData* Load(::StringW textToSpeak, ::StringW presetVoiceId, ::System::Action_2<::Meta::WitAi::TTS::Data::TTSClipData*, ::StringW>* onStreamReady);
    // public Meta.WitAi.TTS.Data.TTSClipData Load(System.String textToSpeak, System.String presetVoiceId, Meta.WitAi.TTS.Data.TTSDiskCacheSettings diskCacheSettings, System.Action`2<Meta.WitAi.TTS.Data.TTSClipData,System.String> onStreamReady)
    // Offset: 0x4454E48
    ::Meta::WitAi::TTS::Data::TTSClipData* Load(::StringW textToSpeak, ::StringW presetVoiceId, ::Meta::WitAi::TTS::Data::TTSDiskCacheSettings* diskCacheSettings, ::System::Action_2<::Meta::WitAi::TTS::Data::TTSClipData*, ::StringW>* onStreamReady);
    // public Meta.WitAi.TTS.Data.TTSClipData Load(System.String textToSpeak, Meta.WitAi.TTS.Data.TTSVoiceSettings voiceSettings, Meta.WitAi.TTS.Data.TTSDiskCacheSettings diskCacheSettings, System.Action`2<Meta.WitAi.TTS.Data.TTSClipData,System.String> onStreamReady)
    // Offset: 0x4454EA0
    ::Meta::WitAi::TTS::Data::TTSClipData* Load(::StringW textToSpeak, ::Meta::WitAi::TTS::Data::TTSVoiceSettings* voiceSettings, ::Meta::WitAi::TTS::Data::TTSDiskCacheSettings* diskCacheSettings, ::System::Action_2<::Meta::WitAi::TTS::Data::TTSClipData*, ::StringW>* onStreamReady);
    // public Meta.WitAi.TTS.Data.TTSClipData Load(System.String textToSpeak, System.String clipID, Meta.WitAi.TTS.Data.TTSVoiceSettings voiceSettings, Meta.WitAi.TTS.Data.TTSDiskCacheSettings diskCacheSettings, System.Action`2<Meta.WitAi.TTS.Data.TTSClipData,System.String> onStreamReady)
    // Offset: 0x4454EC0
    ::Meta::WitAi::TTS::Data::TTSClipData* Load(::StringW textToSpeak, ::StringW clipID, ::Meta::WitAi::TTS::Data::TTSVoiceSettings* voiceSettings, ::Meta::WitAi::TTS::Data::TTSDiskCacheSettings* diskCacheSettings, ::System::Action_2<::Meta::WitAi::TTS::Data::TTSClipData*, ::StringW>* onStreamReady);
    // private System.Collections.IEnumerator CallAfterAMoment(System.Action call)
    // Offset: 0x44553E4
    ::System::Collections::IEnumerator* CallAfterAMoment(::System::Action* call);
    // private System.Void OnLoadBegin(Meta.WitAi.TTS.Data.TTSClipData clipData)
    // Offset: 0x4455450
    void OnLoadBegin(::Meta::WitAi::TTS::Data::TTSClipData* clipData);
    // private System.Void OnDiskStreamBegin(Meta.WitAi.TTS.Data.TTSClipData clipData)
    // Offset: 0x4455540
    void OnDiskStreamBegin(::Meta::WitAi::TTS::Data::TTSClipData* clipData);
    // private System.Void OnWebStreamBegin(Meta.WitAi.TTS.Data.TTSClipData clipData)
    // Offset: 0x4455818
    void OnWebStreamBegin(::Meta::WitAi::TTS::Data::TTSClipData* clipData);
    // private System.Void OnStreamBegin(Meta.WitAi.TTS.Data.TTSClipData clipData, System.Boolean fromDisk)
    // Offset: 0x4455548
    void OnStreamBegin(::Meta::WitAi::TTS::Data::TTSClipData* clipData, bool fromDisk);
    // private System.Void OnDiskStreamCancel(Meta.WitAi.TTS.Data.TTSClipData clipData)
    // Offset: 0x4455828
    void OnDiskStreamCancel(::Meta::WitAi::TTS::Data::TTSClipData* clipData);
    // private System.Void OnWebStreamCancel(Meta.WitAi.TTS.Data.TTSClipData clipData)
    // Offset: 0x4455994
    void OnWebStreamCancel(::Meta::WitAi::TTS::Data::TTSClipData* clipData);
    // private System.Void OnStreamCancel(Meta.WitAi.TTS.Data.TTSClipData clipData, System.Boolean fromDisk)
    // Offset: 0x4455830
    void OnStreamCancel(::Meta::WitAi::TTS::Data::TTSClipData* clipData, bool fromDisk);
    // private System.Void OnDiskStreamError(Meta.WitAi.TTS.Data.TTSClipData clipData, System.String error)
    // Offset: 0x4455A80
    void OnDiskStreamError(::Meta::WitAi::TTS::Data::TTSClipData* clipData, ::StringW error);
    // private System.Void OnWebStreamError(Meta.WitAi.TTS.Data.TTSClipData clipData, System.String error)
    // Offset: 0x4455C24
    void OnWebStreamError(::Meta::WitAi::TTS::Data::TTSClipData* clipData, ::StringW error);
    // private System.Void OnStreamError(Meta.WitAi.TTS.Data.TTSClipData clipData, System.String error, System.Boolean fromDisk)
    // Offset: 0x4455A88
    void OnStreamError(::Meta::WitAi::TTS::Data::TTSClipData* clipData, ::StringW error, bool fromDisk);
    // private System.Void OnDiskStreamReady(Meta.WitAi.TTS.Data.TTSClipData clipData)
    // Offset: 0x4455C2C
    void OnDiskStreamReady(::Meta::WitAi::TTS::Data::TTSClipData* clipData);
    // private System.Void OnWebStreamReady(Meta.WitAi.TTS.Data.TTSClipData clipData)
    // Offset: 0x445620C
    void OnWebStreamReady(::Meta::WitAi::TTS::Data::TTSClipData* clipData);
    // private System.Void OnStreamReady(Meta.WitAi.TTS.Data.TTSClipData clipData, System.Boolean fromDisk)
    // Offset: 0x4455C34
    void OnStreamReady(::Meta::WitAi::TTS::Data::TTSClipData* clipData, bool fromDisk);
    // private System.Void OnStreamUpdated(Meta.WitAi.TTS.Data.TTSClipData clipData, Meta.Voice.Audio.IAudioClipStream clipStream, System.Boolean fromDisk)
    // Offset: 0x445621C
    void OnStreamUpdated(::Meta::WitAi::TTS::Data::TTSClipData* clipData, ::Meta::Voice::Audio::IAudioClipStream* clipStream, bool fromDisk);
    // private System.Void OnStreamComplete(Meta.WitAi.TTS.Data.TTSClipData clipData, Meta.Voice.Audio.IAudioClipStream clipStream, System.Boolean fromDisk)
    // Offset: 0x4456334
    void OnStreamComplete(::Meta::WitAi::TTS::Data::TTSClipData* clipData, ::Meta::Voice::Audio::IAudioClipStream* clipStream, bool fromDisk);
    // public System.Void UnloadAll()
    // Offset: 0x44538D4
    void UnloadAll();
    // public System.Void Unload(Meta.WitAi.TTS.Data.TTSClipData clipData)
    // Offset: 0x445599C
    void Unload(::Meta::WitAi::TTS::Data::TTSClipData* clipData);
    // protected System.Void OnUnloadBegin(Meta.WitAi.TTS.Data.TTSClipData clipData)
    // Offset: 0x445647C
    void OnUnloadBegin(::Meta::WitAi::TTS::Data::TTSClipData* clipData);
    // public Meta.WitAi.TTS.Data.TTSClipData GetRuntimeCachedClip(System.String clipID)
    // Offset: 0x4454780
    ::Meta::WitAi::TTS::Data::TTSClipData* GetRuntimeCachedClip(::StringW clipID);
    // public Meta.WitAi.TTS.Data.TTSClipData[] GetAllRuntimeCachedClips()
    // Offset: 0x4456824
    ::ArrayW<::Meta::WitAi::TTS::Data::TTSClipData*> GetAllRuntimeCachedClips();
    // protected System.Void OnRuntimeClipAdded(Meta.WitAi.TTS.Data.TTSClipData clipData)
    // Offset: 0x44568E0
    void OnRuntimeClipAdded(::Meta::WitAi::TTS::Data::TTSClipData* clipData);
    // protected System.Void OnRuntimeClipRemoved(Meta.WitAi.TTS.Data.TTSClipData clipData)
    // Offset: 0x44568E4
    void OnRuntimeClipRemoved(::Meta::WitAi::TTS::Data::TTSClipData* clipData);
    // public System.Boolean ShouldCacheToDisk(Meta.WitAi.TTS.Data.TTSClipData clipData)
    // Offset: 0x44568F4
    bool ShouldCacheToDisk(::Meta::WitAi::TTS::Data::TTSClipData* clipData);
    // public System.String GetDiskCachePath(System.String textToSpeak, System.String clipID, Meta.WitAi.TTS.Data.TTSVoiceSettings voiceSettings, Meta.WitAi.TTS.Data.TTSDiskCacheSettings diskCacheSettings)
    // Offset: 0x4456714
    ::StringW GetDiskCachePath(::StringW textToSpeak, ::StringW clipID, ::Meta::WitAi::TTS::Data::TTSVoiceSettings* voiceSettings, ::Meta::WitAi::TTS::Data::TTSDiskCacheSettings* diskCacheSettings);
    // public Meta.WitAi.TTS.Data.TTSClipData DownloadToDiskCache(System.String textToSpeak, System.Action`3<Meta.WitAi.TTS.Data.TTSClipData,System.String,System.String> onDownloadComplete)
    // Offset: 0x44569D0
    ::Meta::WitAi::TTS::Data::TTSClipData* DownloadToDiskCache(::StringW textToSpeak, ::System::Action_3<::Meta::WitAi::TTS::Data::TTSClipData*, ::StringW, ::StringW>* onDownloadComplete);
    // public Meta.WitAi.TTS.Data.TTSClipData DownloadToDiskCache(System.String textToSpeak, System.String presetVoiceId, System.Action`3<Meta.WitAi.TTS.Data.TTSClipData,System.String,System.String> onDownloadComplete)
    // Offset: 0x4456A7C
    ::Meta::WitAi::TTS::Data::TTSClipData* DownloadToDiskCache(::StringW textToSpeak, ::StringW presetVoiceId, ::System::Action_3<::Meta::WitAi::TTS::Data::TTSClipData*, ::StringW, ::StringW>* onDownloadComplete);
    // public Meta.WitAi.TTS.Data.TTSClipData DownloadToDiskCache(System.String textToSpeak, System.String presetVoiceId, Meta.WitAi.TTS.Data.TTSDiskCacheSettings diskCacheSettings, System.Action`3<Meta.WitAi.TTS.Data.TTSClipData,System.String,System.String> onDownloadComplete)
    // Offset: 0x4456AEC
    ::Meta::WitAi::TTS::Data::TTSClipData* DownloadToDiskCache(::StringW textToSpeak, ::StringW presetVoiceId, ::Meta::WitAi::TTS::Data::TTSDiskCacheSettings* diskCacheSettings, ::System::Action_3<::Meta::WitAi::TTS::Data::TTSClipData*, ::StringW, ::StringW>* onDownloadComplete);
    // public Meta.WitAi.TTS.Data.TTSClipData DownloadToDiskCache(System.String textToSpeak, Meta.WitAi.TTS.Data.TTSVoiceSettings voiceSettings, Meta.WitAi.TTS.Data.TTSDiskCacheSettings diskCacheSettings, System.Action`3<Meta.WitAi.TTS.Data.TTSClipData,System.String,System.String> onDownloadComplete)
    // Offset: 0x4456B68
    ::Meta::WitAi::TTS::Data::TTSClipData* DownloadToDiskCache(::StringW textToSpeak, ::Meta::WitAi::TTS::Data::TTSVoiceSettings* voiceSettings, ::Meta::WitAi::TTS::Data::TTSDiskCacheSettings* diskCacheSettings, ::System::Action_3<::Meta::WitAi::TTS::Data::TTSClipData*, ::StringW, ::StringW>* onDownloadComplete);
    // public Meta.WitAi.TTS.Data.TTSClipData DownloadToDiskCache(System.String textToSpeak, System.String clipID, Meta.WitAi.TTS.Data.TTSVoiceSettings voiceSettings, Meta.WitAi.TTS.Data.TTSDiskCacheSettings diskCacheSettings, System.Action`3<Meta.WitAi.TTS.Data.TTSClipData,System.String,System.String> onDownloadComplete)
    // Offset: 0x4456A2C
    ::Meta::WitAi::TTS::Data::TTSClipData* DownloadToDiskCache(::StringW textToSpeak, ::StringW clipID, ::Meta::WitAi::TTS::Data::TTSVoiceSettings* voiceSettings, ::Meta::WitAi::TTS::Data::TTSDiskCacheSettings* diskCacheSettings, ::System::Action_3<::Meta::WitAi::TTS::Data::TTSClipData*, ::StringW, ::StringW>* onDownloadComplete);
    // protected System.Void DownloadToDiskCache(Meta.WitAi.TTS.Data.TTSClipData clipData, System.Action`3<Meta.WitAi.TTS.Data.TTSClipData,System.String,System.String> onDownloadComplete)
    // Offset: 0x4456BC4
    void DownloadToDiskCache(::Meta::WitAi::TTS::Data::TTSClipData* clipData, ::System::Action_3<::Meta::WitAi::TTS::Data::TTSClipData*, ::StringW, ::StringW>* onDownloadComplete);
    // private System.Void OnWebDownloadBegin(Meta.WitAi.TTS.Data.TTSClipData clipData, System.String downloadPath)
    // Offset: 0x4456DEC
    void OnWebDownloadBegin(::Meta::WitAi::TTS::Data::TTSClipData* clipData, ::StringW downloadPath);
    // private System.Void OnWebDownloadSuccess(Meta.WitAi.TTS.Data.TTSClipData clipData, System.String downloadPath)
    // Offset: 0x4456EB8
    void OnWebDownloadSuccess(::Meta::WitAi::TTS::Data::TTSClipData* clipData, ::StringW downloadPath);
    // private System.Void OnWebDownloadCancel(Meta.WitAi.TTS.Data.TTSClipData clipData, System.String downloadPath)
    // Offset: 0x4456FD8
    void OnWebDownloadCancel(::Meta::WitAi::TTS::Data::TTSClipData* clipData, ::StringW downloadPath);
    // private System.Void OnWebDownloadError(Meta.WitAi.TTS.Data.TTSClipData clipData, System.String downloadPath, System.String error)
    // Offset: 0x44570F0
    void OnWebDownloadError(::Meta::WitAi::TTS::Data::TTSClipData* clipData, ::StringW downloadPath, ::StringW error);
    // public Meta.WitAi.TTS.Data.TTSVoiceSettings[] GetAllPresetVoiceSettings()
    // Offset: 0x4457260
    ::ArrayW<::Meta::WitAi::TTS::Data::TTSVoiceSettings*> GetAllPresetVoiceSettings();
    // public Meta.WitAi.TTS.Data.TTSVoiceSettings GetPresetVoiceSettings(System.String presetVoiceId)
    // Offset: 0x4454C3C
    ::Meta::WitAi::TTS::Data::TTSVoiceSettings* GetPresetVoiceSettings(::StringW presetVoiceId);
    // protected System.Void .ctor()
    // Offset: 0x4457324
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static TTSService* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::TTS::TTSService::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<TTSService*, creationType>()));
    }
  }; // Meta.WitAi.TTS.TTSService
  #pragma pack(pop)
  static check_size<sizeof(TTSService), 56 + sizeof(::System::Security::Cryptography::SHA256*)> __Meta_WitAi_TTS_TTSServiceSizeCheck;
  static_assert(sizeof(TTSService) == 0x40);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Meta::WitAi::TTS::TTSService::get_Instance
// Il2CppName: get_Instance
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Meta::WitAi::TTS::TTSService* (*)()>(&Meta::WitAi::TTS::TTSService::get_Instance)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::TTS::TTSService*), "get_Instance", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::TTS::TTSService::get_AudioSystem
// Il2CppName: get_AudioSystem
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Meta::Voice::Audio::IAudioSystem* (Meta::WitAi::TTS::TTSService::*)()>(&Meta::WitAi::TTS::TTSService::get_AudioSystem)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::TTS::TTSService*), "get_AudioSystem", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::TTS::TTSService::set_AudioSystem
// Il2CppName: set_AudioSystem
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Meta::WitAi::TTS::TTSService::*)(::Meta::Voice::Audio::IAudioSystem*)>(&Meta::WitAi::TTS::TTSService::set_AudioSystem)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("Meta.Voice.Audio", "IAudioSystem")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::TTS::TTSService*), "set_AudioSystem", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::TTS::TTSService::get_RuntimeCacheHandler
// Il2CppName: get_RuntimeCacheHandler
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Meta::WitAi::TTS::Interfaces::ITTSRuntimeCacheHandler* (Meta::WitAi::TTS::TTSService::*)()>(&Meta::WitAi::TTS::TTSService::get_RuntimeCacheHandler)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::TTS::TTSService*), "get_RuntimeCacheHandler", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::TTS::TTSService::get_DiskCacheHandler
// Il2CppName: get_DiskCacheHandler
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Meta::WitAi::TTS::Interfaces::ITTSDiskCacheHandler* (Meta::WitAi::TTS::TTSService::*)()>(&Meta::WitAi::TTS::TTSService::get_DiskCacheHandler)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::TTS::TTSService*), "get_DiskCacheHandler", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::TTS::TTSService::get_WebHandler
// Il2CppName: get_WebHandler
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Meta::WitAi::TTS::Interfaces::ITTSWebHandler* (Meta::WitAi::TTS::TTSService::*)()>(&Meta::WitAi::TTS::TTSService::get_WebHandler)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::TTS::TTSService*), "get_WebHandler", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::TTS::TTSService::get_VoiceProvider
// Il2CppName: get_VoiceProvider
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Meta::WitAi::TTS::Interfaces::ITTSVoiceProvider* (Meta::WitAi::TTS::TTSService::*)()>(&Meta::WitAi::TTS::TTSService::get_VoiceProvider)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::TTS::TTSService*), "get_VoiceProvider", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::TTS::TTSService::add_OnServiceStart
// Il2CppName: add_OnServiceStart
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::Action_1<::Meta::WitAi::TTS::TTSService*>*)>(&Meta::WitAi::TTS::TTSService::add_OnServiceStart)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("Meta.WitAi.TTS", "TTSService")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::TTS::TTSService*), "add_OnServiceStart", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::TTS::TTSService::remove_OnServiceStart
// Il2CppName: remove_OnServiceStart
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::Action_1<::Meta::WitAi::TTS::TTSService*>*)>(&Meta::WitAi::TTS::TTSService::remove_OnServiceStart)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("Meta.WitAi.TTS", "TTSService")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::TTS::TTSService*), "remove_OnServiceStart", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::TTS::TTSService::add_OnServiceDestroy
// Il2CppName: add_OnServiceDestroy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::Action_1<::Meta::WitAi::TTS::TTSService*>*)>(&Meta::WitAi::TTS::TTSService::add_OnServiceDestroy)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("Meta.WitAi.TTS", "TTSService")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::TTS::TTSService*), "add_OnServiceDestroy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::TTS::TTSService::remove_OnServiceDestroy
// Il2CppName: remove_OnServiceDestroy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::Action_1<::Meta::WitAi::TTS::TTSService*>*)>(&Meta::WitAi::TTS::TTSService::remove_OnServiceDestroy)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("Meta.WitAi.TTS", "TTSService")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::TTS::TTSService*), "remove_OnServiceDestroy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::TTS::TTSService::GetInvalidError
// Il2CppName: GetInvalidError
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (Meta::WitAi::TTS::TTSService::*)()>(&Meta::WitAi::TTS::TTSService::GetInvalidError)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::TTS::TTSService*), "GetInvalidError", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::TTS::TTSService::get_Events
// Il2CppName: get_Events
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Meta::WitAi::TTS::Events::TTSServiceEvents* (Meta::WitAi::TTS::TTSService::*)()>(&Meta::WitAi::TTS::TTSService::get_Events)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::TTS::TTSService*), "get_Events", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::TTS::TTSService::Awake
// Il2CppName: Awake
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Meta::WitAi::TTS::TTSService::*)()>(&Meta::WitAi::TTS::TTSService::Awake)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::TTS::TTSService*), "Awake", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::TTS::TTSService::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Meta::WitAi::TTS::TTSService::*)()>(&Meta::WitAi::TTS::TTSService::Start)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::TTS::TTSService*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::TTS::TTSService::OnEnable
// Il2CppName: OnEnable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Meta::WitAi::TTS::TTSService::*)()>(&Meta::WitAi::TTS::TTSService::OnEnable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::TTS::TTSService*), "OnEnable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::TTS::TTSService::OnDisable
// Il2CppName: OnDisable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Meta::WitAi::TTS::TTSService::*)()>(&Meta::WitAi::TTS::TTSService::OnDisable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::TTS::TTSService*), "OnDisable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::TTS::TTSService::AddDelegates
// Il2CppName: AddDelegates
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Meta::WitAi::TTS::TTSService::*)()>(&Meta::WitAi::TTS::TTSService::AddDelegates)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::TTS::TTSService*), "AddDelegates", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::TTS::TTSService::RemoveDelegates
// Il2CppName: RemoveDelegates
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Meta::WitAi::TTS::TTSService::*)()>(&Meta::WitAi::TTS::TTSService::RemoveDelegates)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::TTS::TTSService*), "RemoveDelegates", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::TTS::TTSService::OnDestroy
// Il2CppName: OnDestroy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Meta::WitAi::TTS::TTSService::*)()>(&Meta::WitAi::TTS::TTSService::OnDestroy)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::TTS::TTSService*), "OnDestroy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::TTS::TTSService::GetClipLog
// Il2CppName: GetClipLog
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (Meta::WitAi::TTS::TTSService::*)(::StringW, ::Meta::WitAi::TTS::Data::TTSClipData*)>(&Meta::WitAi::TTS::TTSService::GetClipLog)> {
  static const MethodInfo* get() {
    static auto* logMessage = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* clipData = &::il2cpp_utils::GetClassFromName("Meta.WitAi.TTS.Data", "TTSClipData")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::TTS::TTSService*), "GetClipLog", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{logMessage, clipData});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::TTS::TTSService::GetFinalText
// Il2CppName: GetFinalText
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (Meta::WitAi::TTS::TTSService::*)(::StringW, ::Meta::WitAi::TTS::Data::TTSVoiceSettings*)>(&Meta::WitAi::TTS::TTSService::GetFinalText)> {
  static const MethodInfo* get() {
    static auto* textToSpeak = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* voiceSettings = &::il2cpp_utils::GetClassFromName("Meta.WitAi.TTS.Data", "TTSVoiceSettings")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::TTS::TTSService*), "GetFinalText", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{textToSpeak, voiceSettings});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::TTS::TTSService::AppendFinalText
// Il2CppName: AppendFinalText
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Meta::WitAi::TTS::TTSService::*)(::System::Text::StringBuilder*, ::StringW, ::Meta::WitAi::TTS::Data::TTSVoiceSettings*)>(&Meta::WitAi::TTS::TTSService::AppendFinalText)> {
  static const MethodInfo* get() {
    static auto* builder = &::il2cpp_utils::GetClassFromName("System.Text", "StringBuilder")->byval_arg;
    static auto* textToSpeak = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* voiceSettings = &::il2cpp_utils::GetClassFromName("Meta.WitAi.TTS.Data", "TTSVoiceSettings")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::TTS::TTSService*), "AppendFinalText", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{builder, textToSpeak, voiceSettings});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::TTS::TTSService::GetClipID
// Il2CppName: GetClipID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (Meta::WitAi::TTS::TTSService::*)(::StringW, ::Meta::WitAi::TTS::Data::TTSVoiceSettings*)>(&Meta::WitAi::TTS::TTSService::GetClipID)> {
  static const MethodInfo* get() {
    static auto* textToSpeak = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* voiceSettings = &::il2cpp_utils::GetClassFromName("Meta.WitAi.TTS.Data", "TTSVoiceSettings")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::TTS::TTSService*), "GetClipID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{textToSpeak, voiceSettings});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::TTS::TTSService::GetSha256Hash
// Il2CppName: GetSha256Hash
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (Meta::WitAi::TTS::TTSService::*)(::System::Security::Cryptography::SHA256*, ::StringW)>(&Meta::WitAi::TTS::TTSService::GetSha256Hash)> {
  static const MethodInfo* get() {
    static auto* shaHash = &::il2cpp_utils::GetClassFromName("System.Security.Cryptography", "SHA256")->byval_arg;
    static auto* input = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::TTS::TTSService*), "GetSha256Hash", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{shaHash, input});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::TTS::TTSService::CreateClipData
// Il2CppName: CreateClipData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Meta::WitAi::TTS::Data::TTSClipData* (Meta::WitAi::TTS::TTSService::*)(::StringW, ::StringW, ::Meta::WitAi::TTS::Data::TTSVoiceSettings*, ::Meta::WitAi::TTS::Data::TTSDiskCacheSettings*)>(&Meta::WitAi::TTS::TTSService::CreateClipData)> {
  static const MethodInfo* get() {
    static auto* textToSpeak = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* clipID = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* voiceSettings = &::il2cpp_utils::GetClassFromName("Meta.WitAi.TTS.Data", "TTSVoiceSettings")->byval_arg;
    static auto* diskCacheSettings = &::il2cpp_utils::GetClassFromName("Meta.WitAi.TTS.Data", "TTSDiskCacheSettings")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::TTS::TTSService*), "CreateClipData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{textToSpeak, clipID, voiceSettings, diskCacheSettings});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::TTS::TTSService::CreateClipStream
// Il2CppName: CreateClipStream
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Meta::Voice::Audio::IAudioClipStream* (Meta::WitAi::TTS::TTSService::*)()>(&Meta::WitAi::TTS::TTSService::CreateClipStream)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::TTS::TTSService*), "CreateClipStream", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::TTS::TTSService::GetAudioType
// Il2CppName: GetAudioType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::AudioType (Meta::WitAi::TTS::TTSService::*)()>(&Meta::WitAi::TTS::TTSService::GetAudioType)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::TTS::TTSService*), "GetAudioType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::TTS::TTSService::SetClipLoadState
// Il2CppName: SetClipLoadState
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Meta::WitAi::TTS::TTSService::*)(::Meta::WitAi::TTS::Data::TTSClipData*, ::Meta::WitAi::TTS::Data::TTSClipLoadState)>(&Meta::WitAi::TTS::TTSService::SetClipLoadState)> {
  static const MethodInfo* get() {
    static auto* clipData = &::il2cpp_utils::GetClassFromName("Meta.WitAi.TTS.Data", "TTSClipData")->byval_arg;
    static auto* loadState = &::il2cpp_utils::GetClassFromName("Meta.WitAi.TTS.Data", "TTSClipLoadState")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::TTS::TTSService*), "SetClipLoadState", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{clipData, loadState});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::TTS::TTSService::Load
// Il2CppName: Load
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Meta::WitAi::TTS::Data::TTSClipData* (Meta::WitAi::TTS::TTSService::*)(::StringW, ::System::Action_2<::Meta::WitAi::TTS::Data::TTSClipData*, ::StringW>*)>(&Meta::WitAi::TTS::TTSService::Load)> {
  static const MethodInfo* get() {
    static auto* textToSpeak = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* onStreamReady = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("Meta.WitAi.TTS.Data", "TTSClipData"), ::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::TTS::TTSService*), "Load", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{textToSpeak, onStreamReady});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::TTS::TTSService::Load
// Il2CppName: Load
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Meta::WitAi::TTS::Data::TTSClipData* (Meta::WitAi::TTS::TTSService::*)(::StringW, ::StringW, ::System::Action_2<::Meta::WitAi::TTS::Data::TTSClipData*, ::StringW>*)>(&Meta::WitAi::TTS::TTSService::Load)> {
  static const MethodInfo* get() {
    static auto* textToSpeak = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* presetVoiceId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* onStreamReady = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("Meta.WitAi.TTS.Data", "TTSClipData"), ::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::TTS::TTSService*), "Load", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{textToSpeak, presetVoiceId, onStreamReady});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::TTS::TTSService::Load
// Il2CppName: Load
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Meta::WitAi::TTS::Data::TTSClipData* (Meta::WitAi::TTS::TTSService::*)(::StringW, ::StringW, ::Meta::WitAi::TTS::Data::TTSDiskCacheSettings*, ::System::Action_2<::Meta::WitAi::TTS::Data::TTSClipData*, ::StringW>*)>(&Meta::WitAi::TTS::TTSService::Load)> {
  static const MethodInfo* get() {
    static auto* textToSpeak = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* presetVoiceId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* diskCacheSettings = &::il2cpp_utils::GetClassFromName("Meta.WitAi.TTS.Data", "TTSDiskCacheSettings")->byval_arg;
    static auto* onStreamReady = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("Meta.WitAi.TTS.Data", "TTSClipData"), ::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::TTS::TTSService*), "Load", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{textToSpeak, presetVoiceId, diskCacheSettings, onStreamReady});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::TTS::TTSService::Load
// Il2CppName: Load
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Meta::WitAi::TTS::Data::TTSClipData* (Meta::WitAi::TTS::TTSService::*)(::StringW, ::Meta::WitAi::TTS::Data::TTSVoiceSettings*, ::Meta::WitAi::TTS::Data::TTSDiskCacheSettings*, ::System::Action_2<::Meta::WitAi::TTS::Data::TTSClipData*, ::StringW>*)>(&Meta::WitAi::TTS::TTSService::Load)> {
  static const MethodInfo* get() {
    static auto* textToSpeak = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* voiceSettings = &::il2cpp_utils::GetClassFromName("Meta.WitAi.TTS.Data", "TTSVoiceSettings")->byval_arg;
    static auto* diskCacheSettings = &::il2cpp_utils::GetClassFromName("Meta.WitAi.TTS.Data", "TTSDiskCacheSettings")->byval_arg;
    static auto* onStreamReady = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("Meta.WitAi.TTS.Data", "TTSClipData"), ::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::TTS::TTSService*), "Load", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{textToSpeak, voiceSettings, diskCacheSettings, onStreamReady});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::TTS::TTSService::Load
// Il2CppName: Load
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Meta::WitAi::TTS::Data::TTSClipData* (Meta::WitAi::TTS::TTSService::*)(::StringW, ::StringW, ::Meta::WitAi::TTS::Data::TTSVoiceSettings*, ::Meta::WitAi::TTS::Data::TTSDiskCacheSettings*, ::System::Action_2<::Meta::WitAi::TTS::Data::TTSClipData*, ::StringW>*)>(&Meta::WitAi::TTS::TTSService::Load)> {
  static const MethodInfo* get() {
    static auto* textToSpeak = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* clipID = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* voiceSettings = &::il2cpp_utils::GetClassFromName("Meta.WitAi.TTS.Data", "TTSVoiceSettings")->byval_arg;
    static auto* diskCacheSettings = &::il2cpp_utils::GetClassFromName("Meta.WitAi.TTS.Data", "TTSDiskCacheSettings")->byval_arg;
    static auto* onStreamReady = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("Meta.WitAi.TTS.Data", "TTSClipData"), ::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::TTS::TTSService*), "Load", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{textToSpeak, clipID, voiceSettings, diskCacheSettings, onStreamReady});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::TTS::TTSService::CallAfterAMoment
// Il2CppName: CallAfterAMoment
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::IEnumerator* (Meta::WitAi::TTS::TTSService::*)(::System::Action*)>(&Meta::WitAi::TTS::TTSService::CallAfterAMoment)> {
  static const MethodInfo* get() {
    static auto* call = &::il2cpp_utils::GetClassFromName("System", "Action")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::TTS::TTSService*), "CallAfterAMoment", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{call});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::TTS::TTSService::OnLoadBegin
// Il2CppName: OnLoadBegin
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Meta::WitAi::TTS::TTSService::*)(::Meta::WitAi::TTS::Data::TTSClipData*)>(&Meta::WitAi::TTS::TTSService::OnLoadBegin)> {
  static const MethodInfo* get() {
    static auto* clipData = &::il2cpp_utils::GetClassFromName("Meta.WitAi.TTS.Data", "TTSClipData")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::TTS::TTSService*), "OnLoadBegin", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{clipData});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::TTS::TTSService::OnDiskStreamBegin
// Il2CppName: OnDiskStreamBegin
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Meta::WitAi::TTS::TTSService::*)(::Meta::WitAi::TTS::Data::TTSClipData*)>(&Meta::WitAi::TTS::TTSService::OnDiskStreamBegin)> {
  static const MethodInfo* get() {
    static auto* clipData = &::il2cpp_utils::GetClassFromName("Meta.WitAi.TTS.Data", "TTSClipData")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::TTS::TTSService*), "OnDiskStreamBegin", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{clipData});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::TTS::TTSService::OnWebStreamBegin
// Il2CppName: OnWebStreamBegin
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Meta::WitAi::TTS::TTSService::*)(::Meta::WitAi::TTS::Data::TTSClipData*)>(&Meta::WitAi::TTS::TTSService::OnWebStreamBegin)> {
  static const MethodInfo* get() {
    static auto* clipData = &::il2cpp_utils::GetClassFromName("Meta.WitAi.TTS.Data", "TTSClipData")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::TTS::TTSService*), "OnWebStreamBegin", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{clipData});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::TTS::TTSService::OnStreamBegin
// Il2CppName: OnStreamBegin
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Meta::WitAi::TTS::TTSService::*)(::Meta::WitAi::TTS::Data::TTSClipData*, bool)>(&Meta::WitAi::TTS::TTSService::OnStreamBegin)> {
  static const MethodInfo* get() {
    static auto* clipData = &::il2cpp_utils::GetClassFromName("Meta.WitAi.TTS.Data", "TTSClipData")->byval_arg;
    static auto* fromDisk = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::TTS::TTSService*), "OnStreamBegin", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{clipData, fromDisk});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::TTS::TTSService::OnDiskStreamCancel
// Il2CppName: OnDiskStreamCancel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Meta::WitAi::TTS::TTSService::*)(::Meta::WitAi::TTS::Data::TTSClipData*)>(&Meta::WitAi::TTS::TTSService::OnDiskStreamCancel)> {
  static const MethodInfo* get() {
    static auto* clipData = &::il2cpp_utils::GetClassFromName("Meta.WitAi.TTS.Data", "TTSClipData")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::TTS::TTSService*), "OnDiskStreamCancel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{clipData});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::TTS::TTSService::OnWebStreamCancel
// Il2CppName: OnWebStreamCancel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Meta::WitAi::TTS::TTSService::*)(::Meta::WitAi::TTS::Data::TTSClipData*)>(&Meta::WitAi::TTS::TTSService::OnWebStreamCancel)> {
  static const MethodInfo* get() {
    static auto* clipData = &::il2cpp_utils::GetClassFromName("Meta.WitAi.TTS.Data", "TTSClipData")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::TTS::TTSService*), "OnWebStreamCancel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{clipData});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::TTS::TTSService::OnStreamCancel
// Il2CppName: OnStreamCancel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Meta::WitAi::TTS::TTSService::*)(::Meta::WitAi::TTS::Data::TTSClipData*, bool)>(&Meta::WitAi::TTS::TTSService::OnStreamCancel)> {
  static const MethodInfo* get() {
    static auto* clipData = &::il2cpp_utils::GetClassFromName("Meta.WitAi.TTS.Data", "TTSClipData")->byval_arg;
    static auto* fromDisk = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::TTS::TTSService*), "OnStreamCancel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{clipData, fromDisk});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::TTS::TTSService::OnDiskStreamError
// Il2CppName: OnDiskStreamError
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Meta::WitAi::TTS::TTSService::*)(::Meta::WitAi::TTS::Data::TTSClipData*, ::StringW)>(&Meta::WitAi::TTS::TTSService::OnDiskStreamError)> {
  static const MethodInfo* get() {
    static auto* clipData = &::il2cpp_utils::GetClassFromName("Meta.WitAi.TTS.Data", "TTSClipData")->byval_arg;
    static auto* error = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::TTS::TTSService*), "OnDiskStreamError", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{clipData, error});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::TTS::TTSService::OnWebStreamError
// Il2CppName: OnWebStreamError
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Meta::WitAi::TTS::TTSService::*)(::Meta::WitAi::TTS::Data::TTSClipData*, ::StringW)>(&Meta::WitAi::TTS::TTSService::OnWebStreamError)> {
  static const MethodInfo* get() {
    static auto* clipData = &::il2cpp_utils::GetClassFromName("Meta.WitAi.TTS.Data", "TTSClipData")->byval_arg;
    static auto* error = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::TTS::TTSService*), "OnWebStreamError", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{clipData, error});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::TTS::TTSService::OnStreamError
// Il2CppName: OnStreamError
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Meta::WitAi::TTS::TTSService::*)(::Meta::WitAi::TTS::Data::TTSClipData*, ::StringW, bool)>(&Meta::WitAi::TTS::TTSService::OnStreamError)> {
  static const MethodInfo* get() {
    static auto* clipData = &::il2cpp_utils::GetClassFromName("Meta.WitAi.TTS.Data", "TTSClipData")->byval_arg;
    static auto* error = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* fromDisk = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::TTS::TTSService*), "OnStreamError", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{clipData, error, fromDisk});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::TTS::TTSService::OnDiskStreamReady
// Il2CppName: OnDiskStreamReady
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Meta::WitAi::TTS::TTSService::*)(::Meta::WitAi::TTS::Data::TTSClipData*)>(&Meta::WitAi::TTS::TTSService::OnDiskStreamReady)> {
  static const MethodInfo* get() {
    static auto* clipData = &::il2cpp_utils::GetClassFromName("Meta.WitAi.TTS.Data", "TTSClipData")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::TTS::TTSService*), "OnDiskStreamReady", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{clipData});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::TTS::TTSService::OnWebStreamReady
// Il2CppName: OnWebStreamReady
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Meta::WitAi::TTS::TTSService::*)(::Meta::WitAi::TTS::Data::TTSClipData*)>(&Meta::WitAi::TTS::TTSService::OnWebStreamReady)> {
  static const MethodInfo* get() {
    static auto* clipData = &::il2cpp_utils::GetClassFromName("Meta.WitAi.TTS.Data", "TTSClipData")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::TTS::TTSService*), "OnWebStreamReady", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{clipData});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::TTS::TTSService::OnStreamReady
// Il2CppName: OnStreamReady
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Meta::WitAi::TTS::TTSService::*)(::Meta::WitAi::TTS::Data::TTSClipData*, bool)>(&Meta::WitAi::TTS::TTSService::OnStreamReady)> {
  static const MethodInfo* get() {
    static auto* clipData = &::il2cpp_utils::GetClassFromName("Meta.WitAi.TTS.Data", "TTSClipData")->byval_arg;
    static auto* fromDisk = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::TTS::TTSService*), "OnStreamReady", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{clipData, fromDisk});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::TTS::TTSService::OnStreamUpdated
// Il2CppName: OnStreamUpdated
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Meta::WitAi::TTS::TTSService::*)(::Meta::WitAi::TTS::Data::TTSClipData*, ::Meta::Voice::Audio::IAudioClipStream*, bool)>(&Meta::WitAi::TTS::TTSService::OnStreamUpdated)> {
  static const MethodInfo* get() {
    static auto* clipData = &::il2cpp_utils::GetClassFromName("Meta.WitAi.TTS.Data", "TTSClipData")->byval_arg;
    static auto* clipStream = &::il2cpp_utils::GetClassFromName("Meta.Voice.Audio", "IAudioClipStream")->byval_arg;
    static auto* fromDisk = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::TTS::TTSService*), "OnStreamUpdated", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{clipData, clipStream, fromDisk});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::TTS::TTSService::OnStreamComplete
// Il2CppName: OnStreamComplete
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Meta::WitAi::TTS::TTSService::*)(::Meta::WitAi::TTS::Data::TTSClipData*, ::Meta::Voice::Audio::IAudioClipStream*, bool)>(&Meta::WitAi::TTS::TTSService::OnStreamComplete)> {
  static const MethodInfo* get() {
    static auto* clipData = &::il2cpp_utils::GetClassFromName("Meta.WitAi.TTS.Data", "TTSClipData")->byval_arg;
    static auto* clipStream = &::il2cpp_utils::GetClassFromName("Meta.Voice.Audio", "IAudioClipStream")->byval_arg;
    static auto* fromDisk = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::TTS::TTSService*), "OnStreamComplete", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{clipData, clipStream, fromDisk});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::TTS::TTSService::UnloadAll
// Il2CppName: UnloadAll
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Meta::WitAi::TTS::TTSService::*)()>(&Meta::WitAi::TTS::TTSService::UnloadAll)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::TTS::TTSService*), "UnloadAll", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::TTS::TTSService::Unload
// Il2CppName: Unload
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Meta::WitAi::TTS::TTSService::*)(::Meta::WitAi::TTS::Data::TTSClipData*)>(&Meta::WitAi::TTS::TTSService::Unload)> {
  static const MethodInfo* get() {
    static auto* clipData = &::il2cpp_utils::GetClassFromName("Meta.WitAi.TTS.Data", "TTSClipData")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::TTS::TTSService*), "Unload", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{clipData});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::TTS::TTSService::OnUnloadBegin
// Il2CppName: OnUnloadBegin
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Meta::WitAi::TTS::TTSService::*)(::Meta::WitAi::TTS::Data::TTSClipData*)>(&Meta::WitAi::TTS::TTSService::OnUnloadBegin)> {
  static const MethodInfo* get() {
    static auto* clipData = &::il2cpp_utils::GetClassFromName("Meta.WitAi.TTS.Data", "TTSClipData")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::TTS::TTSService*), "OnUnloadBegin", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{clipData});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::TTS::TTSService::GetRuntimeCachedClip
// Il2CppName: GetRuntimeCachedClip
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Meta::WitAi::TTS::Data::TTSClipData* (Meta::WitAi::TTS::TTSService::*)(::StringW)>(&Meta::WitAi::TTS::TTSService::GetRuntimeCachedClip)> {
  static const MethodInfo* get() {
    static auto* clipID = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::TTS::TTSService*), "GetRuntimeCachedClip", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{clipID});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::TTS::TTSService::GetAllRuntimeCachedClips
// Il2CppName: GetAllRuntimeCachedClips
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::Meta::WitAi::TTS::Data::TTSClipData*> (Meta::WitAi::TTS::TTSService::*)()>(&Meta::WitAi::TTS::TTSService::GetAllRuntimeCachedClips)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::TTS::TTSService*), "GetAllRuntimeCachedClips", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::TTS::TTSService::OnRuntimeClipAdded
// Il2CppName: OnRuntimeClipAdded
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Meta::WitAi::TTS::TTSService::*)(::Meta::WitAi::TTS::Data::TTSClipData*)>(&Meta::WitAi::TTS::TTSService::OnRuntimeClipAdded)> {
  static const MethodInfo* get() {
    static auto* clipData = &::il2cpp_utils::GetClassFromName("Meta.WitAi.TTS.Data", "TTSClipData")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::TTS::TTSService*), "OnRuntimeClipAdded", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{clipData});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::TTS::TTSService::OnRuntimeClipRemoved
// Il2CppName: OnRuntimeClipRemoved
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Meta::WitAi::TTS::TTSService::*)(::Meta::WitAi::TTS::Data::TTSClipData*)>(&Meta::WitAi::TTS::TTSService::OnRuntimeClipRemoved)> {
  static const MethodInfo* get() {
    static auto* clipData = &::il2cpp_utils::GetClassFromName("Meta.WitAi.TTS.Data", "TTSClipData")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::TTS::TTSService*), "OnRuntimeClipRemoved", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{clipData});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::TTS::TTSService::ShouldCacheToDisk
// Il2CppName: ShouldCacheToDisk
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Meta::WitAi::TTS::TTSService::*)(::Meta::WitAi::TTS::Data::TTSClipData*)>(&Meta::WitAi::TTS::TTSService::ShouldCacheToDisk)> {
  static const MethodInfo* get() {
    static auto* clipData = &::il2cpp_utils::GetClassFromName("Meta.WitAi.TTS.Data", "TTSClipData")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::TTS::TTSService*), "ShouldCacheToDisk", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{clipData});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::TTS::TTSService::GetDiskCachePath
// Il2CppName: GetDiskCachePath
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (Meta::WitAi::TTS::TTSService::*)(::StringW, ::StringW, ::Meta::WitAi::TTS::Data::TTSVoiceSettings*, ::Meta::WitAi::TTS::Data::TTSDiskCacheSettings*)>(&Meta::WitAi::TTS::TTSService::GetDiskCachePath)> {
  static const MethodInfo* get() {
    static auto* textToSpeak = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* clipID = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* voiceSettings = &::il2cpp_utils::GetClassFromName("Meta.WitAi.TTS.Data", "TTSVoiceSettings")->byval_arg;
    static auto* diskCacheSettings = &::il2cpp_utils::GetClassFromName("Meta.WitAi.TTS.Data", "TTSDiskCacheSettings")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::TTS::TTSService*), "GetDiskCachePath", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{textToSpeak, clipID, voiceSettings, diskCacheSettings});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::TTS::TTSService::DownloadToDiskCache
// Il2CppName: DownloadToDiskCache
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Meta::WitAi::TTS::Data::TTSClipData* (Meta::WitAi::TTS::TTSService::*)(::StringW, ::System::Action_3<::Meta::WitAi::TTS::Data::TTSClipData*, ::StringW, ::StringW>*)>(&Meta::WitAi::TTS::TTSService::DownloadToDiskCache)> {
  static const MethodInfo* get() {
    static auto* textToSpeak = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* onDownloadComplete = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`3"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("Meta.WitAi.TTS.Data", "TTSClipData"), ::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::TTS::TTSService*), "DownloadToDiskCache", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{textToSpeak, onDownloadComplete});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::TTS::TTSService::DownloadToDiskCache
// Il2CppName: DownloadToDiskCache
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Meta::WitAi::TTS::Data::TTSClipData* (Meta::WitAi::TTS::TTSService::*)(::StringW, ::StringW, ::System::Action_3<::Meta::WitAi::TTS::Data::TTSClipData*, ::StringW, ::StringW>*)>(&Meta::WitAi::TTS::TTSService::DownloadToDiskCache)> {
  static const MethodInfo* get() {
    static auto* textToSpeak = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* presetVoiceId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* onDownloadComplete = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`3"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("Meta.WitAi.TTS.Data", "TTSClipData"), ::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::TTS::TTSService*), "DownloadToDiskCache", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{textToSpeak, presetVoiceId, onDownloadComplete});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::TTS::TTSService::DownloadToDiskCache
// Il2CppName: DownloadToDiskCache
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Meta::WitAi::TTS::Data::TTSClipData* (Meta::WitAi::TTS::TTSService::*)(::StringW, ::StringW, ::Meta::WitAi::TTS::Data::TTSDiskCacheSettings*, ::System::Action_3<::Meta::WitAi::TTS::Data::TTSClipData*, ::StringW, ::StringW>*)>(&Meta::WitAi::TTS::TTSService::DownloadToDiskCache)> {
  static const MethodInfo* get() {
    static auto* textToSpeak = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* presetVoiceId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* diskCacheSettings = &::il2cpp_utils::GetClassFromName("Meta.WitAi.TTS.Data", "TTSDiskCacheSettings")->byval_arg;
    static auto* onDownloadComplete = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`3"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("Meta.WitAi.TTS.Data", "TTSClipData"), ::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::TTS::TTSService*), "DownloadToDiskCache", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{textToSpeak, presetVoiceId, diskCacheSettings, onDownloadComplete});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::TTS::TTSService::DownloadToDiskCache
// Il2CppName: DownloadToDiskCache
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Meta::WitAi::TTS::Data::TTSClipData* (Meta::WitAi::TTS::TTSService::*)(::StringW, ::Meta::WitAi::TTS::Data::TTSVoiceSettings*, ::Meta::WitAi::TTS::Data::TTSDiskCacheSettings*, ::System::Action_3<::Meta::WitAi::TTS::Data::TTSClipData*, ::StringW, ::StringW>*)>(&Meta::WitAi::TTS::TTSService::DownloadToDiskCache)> {
  static const MethodInfo* get() {
    static auto* textToSpeak = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* voiceSettings = &::il2cpp_utils::GetClassFromName("Meta.WitAi.TTS.Data", "TTSVoiceSettings")->byval_arg;
    static auto* diskCacheSettings = &::il2cpp_utils::GetClassFromName("Meta.WitAi.TTS.Data", "TTSDiskCacheSettings")->byval_arg;
    static auto* onDownloadComplete = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`3"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("Meta.WitAi.TTS.Data", "TTSClipData"), ::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::TTS::TTSService*), "DownloadToDiskCache", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{textToSpeak, voiceSettings, diskCacheSettings, onDownloadComplete});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::TTS::TTSService::DownloadToDiskCache
// Il2CppName: DownloadToDiskCache
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Meta::WitAi::TTS::Data::TTSClipData* (Meta::WitAi::TTS::TTSService::*)(::StringW, ::StringW, ::Meta::WitAi::TTS::Data::TTSVoiceSettings*, ::Meta::WitAi::TTS::Data::TTSDiskCacheSettings*, ::System::Action_3<::Meta::WitAi::TTS::Data::TTSClipData*, ::StringW, ::StringW>*)>(&Meta::WitAi::TTS::TTSService::DownloadToDiskCache)> {
  static const MethodInfo* get() {
    static auto* textToSpeak = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* clipID = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* voiceSettings = &::il2cpp_utils::GetClassFromName("Meta.WitAi.TTS.Data", "TTSVoiceSettings")->byval_arg;
    static auto* diskCacheSettings = &::il2cpp_utils::GetClassFromName("Meta.WitAi.TTS.Data", "TTSDiskCacheSettings")->byval_arg;
    static auto* onDownloadComplete = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`3"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("Meta.WitAi.TTS.Data", "TTSClipData"), ::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::TTS::TTSService*), "DownloadToDiskCache", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{textToSpeak, clipID, voiceSettings, diskCacheSettings, onDownloadComplete});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::TTS::TTSService::DownloadToDiskCache
// Il2CppName: DownloadToDiskCache
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Meta::WitAi::TTS::TTSService::*)(::Meta::WitAi::TTS::Data::TTSClipData*, ::System::Action_3<::Meta::WitAi::TTS::Data::TTSClipData*, ::StringW, ::StringW>*)>(&Meta::WitAi::TTS::TTSService::DownloadToDiskCache)> {
  static const MethodInfo* get() {
    static auto* clipData = &::il2cpp_utils::GetClassFromName("Meta.WitAi.TTS.Data", "TTSClipData")->byval_arg;
    static auto* onDownloadComplete = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`3"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("Meta.WitAi.TTS.Data", "TTSClipData"), ::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::TTS::TTSService*), "DownloadToDiskCache", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{clipData, onDownloadComplete});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::TTS::TTSService::OnWebDownloadBegin
// Il2CppName: OnWebDownloadBegin
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Meta::WitAi::TTS::TTSService::*)(::Meta::WitAi::TTS::Data::TTSClipData*, ::StringW)>(&Meta::WitAi::TTS::TTSService::OnWebDownloadBegin)> {
  static const MethodInfo* get() {
    static auto* clipData = &::il2cpp_utils::GetClassFromName("Meta.WitAi.TTS.Data", "TTSClipData")->byval_arg;
    static auto* downloadPath = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::TTS::TTSService*), "OnWebDownloadBegin", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{clipData, downloadPath});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::TTS::TTSService::OnWebDownloadSuccess
// Il2CppName: OnWebDownloadSuccess
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Meta::WitAi::TTS::TTSService::*)(::Meta::WitAi::TTS::Data::TTSClipData*, ::StringW)>(&Meta::WitAi::TTS::TTSService::OnWebDownloadSuccess)> {
  static const MethodInfo* get() {
    static auto* clipData = &::il2cpp_utils::GetClassFromName("Meta.WitAi.TTS.Data", "TTSClipData")->byval_arg;
    static auto* downloadPath = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::TTS::TTSService*), "OnWebDownloadSuccess", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{clipData, downloadPath});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::TTS::TTSService::OnWebDownloadCancel
// Il2CppName: OnWebDownloadCancel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Meta::WitAi::TTS::TTSService::*)(::Meta::WitAi::TTS::Data::TTSClipData*, ::StringW)>(&Meta::WitAi::TTS::TTSService::OnWebDownloadCancel)> {
  static const MethodInfo* get() {
    static auto* clipData = &::il2cpp_utils::GetClassFromName("Meta.WitAi.TTS.Data", "TTSClipData")->byval_arg;
    static auto* downloadPath = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::TTS::TTSService*), "OnWebDownloadCancel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{clipData, downloadPath});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::TTS::TTSService::OnWebDownloadError
// Il2CppName: OnWebDownloadError
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Meta::WitAi::TTS::TTSService::*)(::Meta::WitAi::TTS::Data::TTSClipData*, ::StringW, ::StringW)>(&Meta::WitAi::TTS::TTSService::OnWebDownloadError)> {
  static const MethodInfo* get() {
    static auto* clipData = &::il2cpp_utils::GetClassFromName("Meta.WitAi.TTS.Data", "TTSClipData")->byval_arg;
    static auto* downloadPath = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* error = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::TTS::TTSService*), "OnWebDownloadError", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{clipData, downloadPath, error});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::TTS::TTSService::GetAllPresetVoiceSettings
// Il2CppName: GetAllPresetVoiceSettings
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::Meta::WitAi::TTS::Data::TTSVoiceSettings*> (Meta::WitAi::TTS::TTSService::*)()>(&Meta::WitAi::TTS::TTSService::GetAllPresetVoiceSettings)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::TTS::TTSService*), "GetAllPresetVoiceSettings", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::TTS::TTSService::GetPresetVoiceSettings
// Il2CppName: GetPresetVoiceSettings
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Meta::WitAi::TTS::Data::TTSVoiceSettings* (Meta::WitAi::TTS::TTSService::*)(::StringW)>(&Meta::WitAi::TTS::TTSService::GetPresetVoiceSettings)> {
  static const MethodInfo* get() {
    static auto* presetVoiceId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::TTS::TTSService*), "GetPresetVoiceSettings", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{presetVoiceId});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::TTS::TTSService::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
