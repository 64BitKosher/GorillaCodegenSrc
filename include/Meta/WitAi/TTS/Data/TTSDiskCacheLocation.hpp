// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Enum
#include "System/Enum.hpp"
// Completed includes
// Type namespace: Meta.WitAi.TTS.Data
namespace Meta::WitAi::TTS::Data {
  // Forward declaring type: TTSDiskCacheLocation
  struct TTSDiskCacheLocation;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::Meta::WitAi::TTS::Data::TTSDiskCacheLocation, "Meta.WitAi.TTS.Data", "TTSDiskCacheLocation");
// Type namespace: Meta.WitAi.TTS.Data
namespace Meta::WitAi::TTS::Data {
  // Size: 0x4
  #pragma pack(push, 1)
  // Autogenerated type: Meta.WitAi.TTS.Data.TTSDiskCacheLocation
  // [TokenAttribute] Offset: FFFFFFFF
  struct TTSDiskCacheLocation/*, public ::System::Enum*/ {
    public:
    public:
    // public System.Int32 value__
    // Size: 0x4
    // Offset: 0x0
    int value;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Creating value type constructor for type: TTSDiskCacheLocation
    constexpr TTSDiskCacheLocation(int value_ = {}) noexcept : value{value_} {}
    // Creating interface conversion operator: operator ::System::Enum
    operator ::System::Enum() noexcept {
      return *reinterpret_cast<::System::Enum*>(this);
    }
    // Creating conversion operator: operator int
    constexpr operator int() const noexcept {
      return value;
    }
    // static field const value: static public Meta.WitAi.TTS.Data.TTSDiskCacheLocation Stream
    static constexpr const int Stream = 0;
    // Get static field: static public Meta.WitAi.TTS.Data.TTSDiskCacheLocation Stream
    static ::Meta::WitAi::TTS::Data::TTSDiskCacheLocation _get_Stream();
    // Set static field: static public Meta.WitAi.TTS.Data.TTSDiskCacheLocation Stream
    static void _set_Stream(::Meta::WitAi::TTS::Data::TTSDiskCacheLocation value);
    // static field const value: static public Meta.WitAi.TTS.Data.TTSDiskCacheLocation Preload
    static constexpr const int Preload = 1;
    // Get static field: static public Meta.WitAi.TTS.Data.TTSDiskCacheLocation Preload
    static ::Meta::WitAi::TTS::Data::TTSDiskCacheLocation _get_Preload();
    // Set static field: static public Meta.WitAi.TTS.Data.TTSDiskCacheLocation Preload
    static void _set_Preload(::Meta::WitAi::TTS::Data::TTSDiskCacheLocation value);
    // static field const value: static public Meta.WitAi.TTS.Data.TTSDiskCacheLocation Persistent
    static constexpr const int Persistent = 2;
    // Get static field: static public Meta.WitAi.TTS.Data.TTSDiskCacheLocation Persistent
    static ::Meta::WitAi::TTS::Data::TTSDiskCacheLocation _get_Persistent();
    // Set static field: static public Meta.WitAi.TTS.Data.TTSDiskCacheLocation Persistent
    static void _set_Persistent(::Meta::WitAi::TTS::Data::TTSDiskCacheLocation value);
    // static field const value: static public Meta.WitAi.TTS.Data.TTSDiskCacheLocation Temporary
    static constexpr const int Temporary = 3;
    // Get static field: static public Meta.WitAi.TTS.Data.TTSDiskCacheLocation Temporary
    static ::Meta::WitAi::TTS::Data::TTSDiskCacheLocation _get_Temporary();
    // Set static field: static public Meta.WitAi.TTS.Data.TTSDiskCacheLocation Temporary
    static void _set_Temporary(::Meta::WitAi::TTS::Data::TTSDiskCacheLocation value);
    // Get instance field reference: public System.Int32 value__
    [[deprecated("Use field access instead!")]] int& dyn_value__();
  }; // Meta.WitAi.TTS.Data.TTSDiskCacheLocation
  #pragma pack(pop)
  static check_size<sizeof(TTSDiskCacheLocation), 0 + sizeof(int)> __Meta_WitAi_TTS_Data_TTSDiskCacheLocationSizeCheck;
  static_assert(sizeof(TTSDiskCacheLocation) == 0x4);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
