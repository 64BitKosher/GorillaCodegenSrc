// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Type namespace: Meta.WitAi.TTS.Data
namespace Meta::WitAi::TTS::Data {
  // Forward declaring type: TTSVoiceSettings
  class TTSVoiceSettings;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Meta::WitAi::TTS::Data::TTSVoiceSettings);
DEFINE_IL2CPP_ARG_TYPE(::Meta::WitAi::TTS::Data::TTSVoiceSettings*, "Meta.WitAi.TTS.Data", "TTSVoiceSettings");
// Type namespace: Meta.WitAi.TTS.Data
namespace Meta::WitAi::TTS::Data {
  // Size: 0x28
  #pragma pack(push, 1)
  // Autogenerated type: Meta.WitAi.TTS.Data.TTSVoiceSettings
  // [TokenAttribute] Offset: FFFFFFFF
  class TTSVoiceSettings : public ::Il2CppObject {
    public:
    public:
    // public System.String SettingsId
    // Size: 0x8
    // Offset: 0x10
    ::StringW SettingsId;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public System.String PrependedText
    // Size: 0x8
    // Offset: 0x18
    ::StringW PrependedText;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public System.String AppendedText
    // Size: 0x8
    // Offset: 0x20
    ::StringW AppendedText;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    public:
    // Get instance field reference: public System.String SettingsId
    [[deprecated("Use field access instead!")]] ::StringW& dyn_SettingsId();
    // Get instance field reference: public System.String PrependedText
    [[deprecated("Use field access instead!")]] ::StringW& dyn_PrependedText();
    // Get instance field reference: public System.String AppendedText
    [[deprecated("Use field access instead!")]] ::StringW& dyn_AppendedText();
    // protected System.Void .ctor()
    // Offset: 0x4459D78
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static TTSVoiceSettings* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::TTS::Data::TTSVoiceSettings::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<TTSVoiceSettings*, creationType>()));
    }
  }; // Meta.WitAi.TTS.Data.TTSVoiceSettings
  #pragma pack(pop)
  static check_size<sizeof(TTSVoiceSettings), 32 + sizeof(::StringW)> __Meta_WitAi_TTS_Data_TTSVoiceSettingsSizeCheck;
  static_assert(sizeof(TTSVoiceSettings) == 0x28);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Meta::WitAi::TTS::Data::TTSVoiceSettings::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
