// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Meta.WitAi.Requests.VoiceServiceRequestOptions
#include "Meta/WitAi/Requests/VoiceServiceRequestOptions.hpp"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Meta::WitAi::Configuration
namespace Meta::WitAi::Configuration {
  // Forward declaring type: WitRequestOptions
  class WitRequestOptions;
}
// Forward declaring namespace: Meta::WitAi::Interfaces
namespace Meta::WitAi::Interfaces {
  // Forward declaring type: IDynamicEntitiesProvider
  class IDynamicEntitiesProvider;
}
// Forward declaring namespace: Meta::WitAi::Json
namespace Meta::WitAi::Json {
  // Forward declaring type: WitResponseClass
  class WitResponseClass;
}
// Forward declaring namespace: Meta::WitAi::Data::Entities
namespace Meta::WitAi::Data::Entities {
  // Forward declaring type: WitDynamicEntity
  class WitDynamicEntity;
}
// Forward declaring namespace: Meta::WitAi::Requests
namespace Meta::WitAi::Requests {
  // Forward declaring type: VoiceServiceRequest
  class VoiceServiceRequest;
  // Forward declaring type: VoiceServiceRequestEvents
  class VoiceServiceRequestEvents;
}
// Forward declaring namespace: Meta::WitAi::Data::Configuration
namespace Meta::WitAi::Data::Configuration {
  // Forward declaring type: WitConfiguration
  class WitConfiguration;
}
// Forward declaring namespace: Meta::WitAi
namespace Meta::WitAi {
  // Forward declaring type: WitRequest
  class WitRequest;
}
// Completed forward declares
// Type namespace: Meta.WitAi
namespace Meta::WitAi {
  // Forward declaring type: WitRequestFactory
  class WitRequestFactory;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Meta::WitAi::WitRequestFactory);
DEFINE_IL2CPP_ARG_TYPE(::Meta::WitAi::WitRequestFactory*, "Meta.WitAi", "WitRequestFactory");
// Type namespace: Meta.WitAi
namespace Meta::WitAi {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: Meta.WitAi.WitRequestFactory
  // [TokenAttribute] Offset: FFFFFFFF
  // [ExtensionAttribute] Offset: FFFFFFFF
  class WitRequestFactory : public ::Il2CppObject {
    public:
    // static private Meta.WitAi.Requests.VoiceServiceRequestOptions/QueryParam QueryParam(System.String key, System.String value)
    // Offset: 0x442FEA0
    static ::Meta::WitAi::Requests::VoiceServiceRequestOptions::QueryParam* QueryParam(::StringW key, ::StringW value);
    // static private System.Void HandleWitRequestOptions(Meta.WitAi.Configuration.WitRequestOptions requestOptions, Meta.WitAi.Interfaces.IDynamicEntitiesProvider[] additionalEntityProviders)
    // Offset: 0x442FF2C
    static void HandleWitRequestOptions(::Meta::WitAi::Configuration::WitRequestOptions* requestOptions, ::ArrayW<::Meta::WitAi::Interfaces::IDynamicEntitiesProvider*> additionalEntityProviders);
    // static private System.Void MergeEntities(Meta.WitAi.Json.WitResponseClass entities, Meta.WitAi.Data.Entities.WitDynamicEntity providerEntity)
    // Offset: 0x4430884
    static void MergeEntities(::Meta::WitAi::Json::WitResponseClass* entities, ::Meta::WitAi::Data::Entities::WitDynamicEntity* providerEntity);
    // static private Meta.WitAi.Configuration.WitRequestOptions GetSetupOptions(Meta.WitAi.Configuration.WitRequestOptions newOptions, Meta.WitAi.Interfaces.IDynamicEntitiesProvider[] additionalDynamicEntities)
    // Offset: 0x4430E64
    static ::Meta::WitAi::Configuration::WitRequestOptions* GetSetupOptions(::Meta::WitAi::Configuration::WitRequestOptions* newOptions, ::ArrayW<::Meta::WitAi::Interfaces::IDynamicEntitiesProvider*> additionalDynamicEntities);
    // static public Meta.WitAi.Requests.VoiceServiceRequest CreateMessageRequest(Meta.WitAi.Data.Configuration.WitConfiguration config, Meta.WitAi.Configuration.WitRequestOptions requestOptions, Meta.WitAi.Requests.VoiceServiceRequestEvents requestEvents, Meta.WitAi.Interfaces.IDynamicEntitiesProvider[] additionalEntityProviders)
    // Offset: 0x4430F78
    static ::Meta::WitAi::Requests::VoiceServiceRequest* CreateMessageRequest(::Meta::WitAi::Data::Configuration::WitConfiguration* config, ::Meta::WitAi::Configuration::WitRequestOptions* requestOptions, ::Meta::WitAi::Requests::VoiceServiceRequestEvents* requestEvents, ::ArrayW<::Meta::WitAi::Interfaces::IDynamicEntitiesProvider*> additionalEntityProviders);
    // static public Meta.WitAi.WitRequest CreateSpeechRequest(Meta.WitAi.Data.Configuration.WitConfiguration config, Meta.WitAi.Configuration.WitRequestOptions requestOptions, Meta.WitAi.Requests.VoiceServiceRequestEvents requestEvents, Meta.WitAi.Interfaces.IDynamicEntitiesProvider[] additionalEntityProviders)
    // Offset: 0x4431368
    static ::Meta::WitAi::WitRequest* CreateSpeechRequest(::Meta::WitAi::Data::Configuration::WitConfiguration* config, ::Meta::WitAi::Configuration::WitRequestOptions* requestOptions, ::Meta::WitAi::Requests::VoiceServiceRequestEvents* requestEvents, ::ArrayW<::Meta::WitAi::Interfaces::IDynamicEntitiesProvider*> additionalEntityProviders);
    // static public Meta.WitAi.WitRequest CreateDictationRequest(Meta.WitAi.Data.Configuration.WitConfiguration config, Meta.WitAi.Configuration.WitRequestOptions requestOptions, Meta.WitAi.Requests.VoiceServiceRequestEvents requestEvents)
    // Offset: 0x4431478
    static ::Meta::WitAi::WitRequest* CreateDictationRequest(::Meta::WitAi::Data::Configuration::WitConfiguration* config, ::Meta::WitAi::Configuration::WitRequestOptions* requestOptions, ::Meta::WitAi::Requests::VoiceServiceRequestEvents* requestEvents);
  }; // Meta.WitAi.WitRequestFactory
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Meta::WitAi::WitRequestFactory::QueryParam
// Il2CppName: QueryParam
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Meta::WitAi::Requests::VoiceServiceRequestOptions::QueryParam* (*)(::StringW, ::StringW)>(&Meta::WitAi::WitRequestFactory::QueryParam)> {
  static const MethodInfo* get() {
    static auto* key = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::WitRequestFactory*), "QueryParam", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{key, value});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::WitRequestFactory::HandleWitRequestOptions
// Il2CppName: HandleWitRequestOptions
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Meta::WitAi::Configuration::WitRequestOptions*, ::ArrayW<::Meta::WitAi::Interfaces::IDynamicEntitiesProvider*>)>(&Meta::WitAi::WitRequestFactory::HandleWitRequestOptions)> {
  static const MethodInfo* get() {
    static auto* requestOptions = &::il2cpp_utils::GetClassFromName("Meta.WitAi.Configuration", "WitRequestOptions")->byval_arg;
    static auto* additionalEntityProviders = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("Meta.WitAi.Interfaces", "IDynamicEntitiesProvider"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::WitRequestFactory*), "HandleWitRequestOptions", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{requestOptions, additionalEntityProviders});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::WitRequestFactory::MergeEntities
// Il2CppName: MergeEntities
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Meta::WitAi::Json::WitResponseClass*, ::Meta::WitAi::Data::Entities::WitDynamicEntity*)>(&Meta::WitAi::WitRequestFactory::MergeEntities)> {
  static const MethodInfo* get() {
    static auto* entities = &::il2cpp_utils::GetClassFromName("Meta.WitAi.Json", "WitResponseClass")->byval_arg;
    static auto* providerEntity = &::il2cpp_utils::GetClassFromName("Meta.WitAi.Data.Entities", "WitDynamicEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::WitRequestFactory*), "MergeEntities", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{entities, providerEntity});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::WitRequestFactory::GetSetupOptions
// Il2CppName: GetSetupOptions
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Meta::WitAi::Configuration::WitRequestOptions* (*)(::Meta::WitAi::Configuration::WitRequestOptions*, ::ArrayW<::Meta::WitAi::Interfaces::IDynamicEntitiesProvider*>)>(&Meta::WitAi::WitRequestFactory::GetSetupOptions)> {
  static const MethodInfo* get() {
    static auto* newOptions = &::il2cpp_utils::GetClassFromName("Meta.WitAi.Configuration", "WitRequestOptions")->byval_arg;
    static auto* additionalDynamicEntities = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("Meta.WitAi.Interfaces", "IDynamicEntitiesProvider"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::WitRequestFactory*), "GetSetupOptions", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{newOptions, additionalDynamicEntities});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::WitRequestFactory::CreateMessageRequest
// Il2CppName: CreateMessageRequest
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Meta::WitAi::Requests::VoiceServiceRequest* (*)(::Meta::WitAi::Data::Configuration::WitConfiguration*, ::Meta::WitAi::Configuration::WitRequestOptions*, ::Meta::WitAi::Requests::VoiceServiceRequestEvents*, ::ArrayW<::Meta::WitAi::Interfaces::IDynamicEntitiesProvider*>)>(&Meta::WitAi::WitRequestFactory::CreateMessageRequest)> {
  static const MethodInfo* get() {
    static auto* config = &::il2cpp_utils::GetClassFromName("Meta.WitAi.Data.Configuration", "WitConfiguration")->byval_arg;
    static auto* requestOptions = &::il2cpp_utils::GetClassFromName("Meta.WitAi.Configuration", "WitRequestOptions")->byval_arg;
    static auto* requestEvents = &::il2cpp_utils::GetClassFromName("Meta.WitAi.Requests", "VoiceServiceRequestEvents")->byval_arg;
    static auto* additionalEntityProviders = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("Meta.WitAi.Interfaces", "IDynamicEntitiesProvider"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::WitRequestFactory*), "CreateMessageRequest", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{config, requestOptions, requestEvents, additionalEntityProviders});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::WitRequestFactory::CreateSpeechRequest
// Il2CppName: CreateSpeechRequest
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Meta::WitAi::WitRequest* (*)(::Meta::WitAi::Data::Configuration::WitConfiguration*, ::Meta::WitAi::Configuration::WitRequestOptions*, ::Meta::WitAi::Requests::VoiceServiceRequestEvents*, ::ArrayW<::Meta::WitAi::Interfaces::IDynamicEntitiesProvider*>)>(&Meta::WitAi::WitRequestFactory::CreateSpeechRequest)> {
  static const MethodInfo* get() {
    static auto* config = &::il2cpp_utils::GetClassFromName("Meta.WitAi.Data.Configuration", "WitConfiguration")->byval_arg;
    static auto* requestOptions = &::il2cpp_utils::GetClassFromName("Meta.WitAi.Configuration", "WitRequestOptions")->byval_arg;
    static auto* requestEvents = &::il2cpp_utils::GetClassFromName("Meta.WitAi.Requests", "VoiceServiceRequestEvents")->byval_arg;
    static auto* additionalEntityProviders = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("Meta.WitAi.Interfaces", "IDynamicEntitiesProvider"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::WitRequestFactory*), "CreateSpeechRequest", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{config, requestOptions, requestEvents, additionalEntityProviders});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::WitRequestFactory::CreateDictationRequest
// Il2CppName: CreateDictationRequest
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Meta::WitAi::WitRequest* (*)(::Meta::WitAi::Data::Configuration::WitConfiguration*, ::Meta::WitAi::Configuration::WitRequestOptions*, ::Meta::WitAi::Requests::VoiceServiceRequestEvents*)>(&Meta::WitAi::WitRequestFactory::CreateDictationRequest)> {
  static const MethodInfo* get() {
    static auto* config = &::il2cpp_utils::GetClassFromName("Meta.WitAi.Data.Configuration", "WitConfiguration")->byval_arg;
    static auto* requestOptions = &::il2cpp_utils::GetClassFromName("Meta.WitAi.Configuration", "WitRequestOptions")->byval_arg;
    static auto* requestEvents = &::il2cpp_utils::GetClassFromName("Meta.WitAi.Requests", "VoiceServiceRequestEvents")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::WitRequestFactory*), "CreateDictationRequest", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{config, requestOptions, requestEvents});
  }
};
