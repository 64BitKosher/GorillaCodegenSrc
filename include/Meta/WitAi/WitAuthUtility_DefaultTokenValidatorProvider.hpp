// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Meta.WitAi.WitAuthUtility
#include "Meta/WitAi/WitAuthUtility.hpp"
// Including type: Meta.WitAi.WitAuthUtility/ITokenValidationProvider
#include "Meta/WitAi/WitAuthUtility_ITokenValidationProvider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Meta::WitAi::WitAuthUtility::DefaultTokenValidatorProvider);
DEFINE_IL2CPP_ARG_TYPE(::Meta::WitAi::WitAuthUtility::DefaultTokenValidatorProvider*, "Meta.WitAi", "WitAuthUtility/DefaultTokenValidatorProvider");
// Type namespace: Meta.WitAi
namespace Meta::WitAi {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: Meta.WitAi.WitAuthUtility/DefaultTokenValidatorProvider
  // [TokenAttribute] Offset: FFFFFFFF
  class WitAuthUtility::DefaultTokenValidatorProvider : public ::Il2CppObject/*, public ::Meta::WitAi::WitAuthUtility::ITokenValidationProvider*/ {
    public:
    // Creating interface conversion operator: operator ::Meta::WitAi::WitAuthUtility::ITokenValidationProvider
    operator ::Meta::WitAi::WitAuthUtility::ITokenValidationProvider() noexcept {
      return *reinterpret_cast<::Meta::WitAi::WitAuthUtility::ITokenValidationProvider*>(this);
    }
    // public System.Boolean IsTokenValid(System.String appId, System.String token)
    // Offset: 0x442AB04
    bool IsTokenValid(::StringW appId, ::StringW token);
    // public System.Boolean IsServerTokenValid(System.String serverToken)
    // Offset: 0x442AB20
    bool IsServerTokenValid(::StringW serverToken);
    // public System.Void .ctor()
    // Offset: 0x442AAFC
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static WitAuthUtility::DefaultTokenValidatorProvider* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitAuthUtility::DefaultTokenValidatorProvider::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<WitAuthUtility::DefaultTokenValidatorProvider*, creationType>()));
    }
  }; // Meta.WitAi.WitAuthUtility/DefaultTokenValidatorProvider
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Meta::WitAi::WitAuthUtility::DefaultTokenValidatorProvider::IsTokenValid
// Il2CppName: IsTokenValid
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Meta::WitAi::WitAuthUtility::DefaultTokenValidatorProvider::*)(::StringW, ::StringW)>(&Meta::WitAi::WitAuthUtility::DefaultTokenValidatorProvider::IsTokenValid)> {
  static const MethodInfo* get() {
    static auto* appId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* token = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::WitAuthUtility::DefaultTokenValidatorProvider*), "IsTokenValid", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{appId, token});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::WitAuthUtility::DefaultTokenValidatorProvider::IsServerTokenValid
// Il2CppName: IsServerTokenValid
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Meta::WitAi::WitAuthUtility::DefaultTokenValidatorProvider::*)(::StringW)>(&Meta::WitAi::WitAuthUtility::DefaultTokenValidatorProvider::IsServerTokenValid)> {
  static const MethodInfo* get() {
    static auto* serverToken = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::WitAuthUtility::DefaultTokenValidatorProvider*), "IsServerTokenValid", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{serverToken});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::WitAuthUtility::DefaultTokenValidatorProvider::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
