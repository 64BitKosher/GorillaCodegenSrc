// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: String
  class String;
}
// Forward declaring namespace: Meta::WitAi::Json
namespace Meta::WitAi::Json {
  // Forward declaring type: WitResponseNode
  class WitResponseNode;
  // Forward declaring type: WitResponseClass
  class WitResponseClass;
}
// Forward declaring namespace: Meta::WitAi::Data::Entities
namespace Meta::WitAi::Data::Entities {
  // Forward declaring type: WitEntityData
  class WitEntityData;
  // Forward declaring type: WitEntityFloatData
  class WitEntityFloatData;
  // Forward declaring type: WitEntityIntData
  class WitEntityIntData;
}
// Forward declaring namespace: Meta::WitAi::Data::Intents
namespace Meta::WitAi::Data::Intents {
  // Forward declaring type: WitIntentData
  class WitIntentData;
}
// Forward declaring namespace: Meta::WitAi
namespace Meta::WitAi {
  // Forward declaring type: WitResponseReference
  class WitResponseReference;
}
// Completed forward declares
// Type namespace: Meta.WitAi
namespace Meta::WitAi {
  // Forward declaring type: WitResultUtilities
  class WitResultUtilities;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Meta::WitAi::WitResultUtilities);
DEFINE_IL2CPP_ARG_TYPE(::Meta::WitAi::WitResultUtilities*, "Meta.WitAi", "WitResultUtilities");
// Type namespace: Meta.WitAi
namespace Meta::WitAi {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: Meta.WitAi.WitResultUtilities
  // [TokenAttribute] Offset: FFFFFFFF
  // [ExtensionAttribute] Offset: FFFFFFFF
  class WitResultUtilities : public ::Il2CppObject {
    public:
    // static field const value: static public System.String WIT_KEY_TRANSCRIPTION
    static constexpr const char* WIT_KEY_TRANSCRIPTION = "text";
    // Get static field: static public System.String WIT_KEY_TRANSCRIPTION
    static ::StringW _get_WIT_KEY_TRANSCRIPTION();
    // Set static field: static public System.String WIT_KEY_TRANSCRIPTION
    static void _set_WIT_KEY_TRANSCRIPTION(::StringW value);
    // static field const value: static public System.String WIT_KEY_INTENTS
    static constexpr const char* WIT_KEY_INTENTS = "intents";
    // Get static field: static public System.String WIT_KEY_INTENTS
    static ::StringW _get_WIT_KEY_INTENTS();
    // Set static field: static public System.String WIT_KEY_INTENTS
    static void _set_WIT_KEY_INTENTS(::StringW value);
    // static field const value: static public System.String WIT_KEY_ENTITIES
    static constexpr const char* WIT_KEY_ENTITIES = "entities";
    // Get static field: static public System.String WIT_KEY_ENTITIES
    static ::StringW _get_WIT_KEY_ENTITIES();
    // Set static field: static public System.String WIT_KEY_ENTITIES
    static void _set_WIT_KEY_ENTITIES(::StringW value);
    // static field const value: static public System.String WIT_KEY_TRAITS
    static constexpr const char* WIT_KEY_TRAITS = "traits";
    // Get static field: static public System.String WIT_KEY_TRAITS
    static ::StringW _get_WIT_KEY_TRAITS();
    // Set static field: static public System.String WIT_KEY_TRAITS
    static void _set_WIT_KEY_TRAITS(::StringW value);
    // static field const value: static public System.String WIT_KEY_FINAL
    static constexpr const char* WIT_KEY_FINAL = "is_final";
    // Get static field: static public System.String WIT_KEY_FINAL
    static ::StringW _get_WIT_KEY_FINAL();
    // Set static field: static public System.String WIT_KEY_FINAL
    static void _set_WIT_KEY_FINAL(::StringW value);
    // static field const value: static public System.String WIT_PARTIAL_RESPONSE
    static constexpr const char* WIT_PARTIAL_RESPONSE = "partial_response";
    // Get static field: static public System.String WIT_PARTIAL_RESPONSE
    static ::StringW _get_WIT_PARTIAL_RESPONSE();
    // Set static field: static public System.String WIT_PARTIAL_RESPONSE
    static void _set_WIT_PARTIAL_RESPONSE(::StringW value);
    // static field const value: static public System.String WIT_RESPONSE
    static constexpr const char* WIT_RESPONSE = "response";
    // Get static field: static public System.String WIT_RESPONSE
    static ::StringW _get_WIT_RESPONSE();
    // Set static field: static public System.String WIT_RESPONSE
    static void _set_WIT_RESPONSE(::StringW value);
    // static public System.String GetTranscription(Meta.WitAi.Json.WitResponseNode witResponse)
    // Offset: 0x442F260
    static ::StringW GetTranscription(::Meta::WitAi::Json::WitResponseNode* witResponse);
    // static public System.Boolean HasResponse(Meta.WitAi.Json.WitResponseNode witResponse)
    // Offset: 0x442F034
    static bool HasResponse(::Meta::WitAi::Json::WitResponseNode* witResponse);
    // static public Meta.WitAi.Json.WitResponseClass GetResponse(Meta.WitAi.Json.WitResponseNode witResponse)
    // Offset: 0x4431584
    static ::Meta::WitAi::Json::WitResponseClass* GetResponse(::Meta::WitAi::Json::WitResponseNode* witResponse);
    // static public Meta.WitAi.Json.WitResponseClass GetFinalResponse(Meta.WitAi.Json.WitResponseNode witResponse)
    // Offset: 0x44315A8
    static ::Meta::WitAi::Json::WitResponseClass* GetFinalResponse(::Meta::WitAi::Json::WitResponseNode* witResponse);
    // static public Meta.WitAi.Json.WitResponseClass GetPartialResponse(Meta.WitAi.Json.WitResponseNode witResponse)
    // Offset: 0x443167C
    static ::Meta::WitAi::Json::WitResponseClass* GetPartialResponse(::Meta::WitAi::Json::WitResponseNode* witResponse);
    // static public System.Boolean GetIsFinal(Meta.WitAi.Json.WitResponseNode witResponse)
    // Offset: 0x442F184
    static bool GetIsFinal(::Meta::WitAi::Json::WitResponseNode* witResponse);
    // static public Meta.WitAi.Data.Entities.WitEntityData AsWitEntity(Meta.WitAi.Json.WitResponseNode witResponse)
    // Offset: 0x4431750
    static ::Meta::WitAi::Data::Entities::WitEntityData* AsWitEntity(::Meta::WitAi::Json::WitResponseNode* witResponse);
    // static public Meta.WitAi.Data.Entities.WitEntityFloatData AsWitFloatEntity(Meta.WitAi.Json.WitResponseNode witResponse)
    // Offset: 0x44317AC
    static ::Meta::WitAi::Data::Entities::WitEntityFloatData* AsWitFloatEntity(::Meta::WitAi::Json::WitResponseNode* witResponse);
    // static public Meta.WitAi.Data.Entities.WitEntityIntData AsWitIntEntity(Meta.WitAi.Json.WitResponseNode witResponse)
    // Offset: 0x4431808
    static ::Meta::WitAi::Data::Entities::WitEntityIntData* AsWitIntEntity(::Meta::WitAi::Json::WitResponseNode* witResponse);
    // static public System.String GetFirstEntityValue(Meta.WitAi.Json.WitResponseNode witResponse, System.String name)
    // Offset: 0x4431864
    static ::StringW GetFirstEntityValue(::Meta::WitAi::Json::WitResponseNode* witResponse, ::StringW name);
    // static public System.String[] GetAllEntityValues(Meta.WitAi.Json.WitResponseNode witResponse, System.String name)
    // Offset: 0x443192C
    static ::ArrayW<::StringW> GetAllEntityValues(::Meta::WitAi::Json::WitResponseNode* witResponse, ::StringW name);
    // static public Meta.WitAi.Json.WitResponseNode GetFirstEntity(Meta.WitAi.Json.WitResponseNode witResponse, System.String name)
    // Offset: 0x4431CC0
    static ::Meta::WitAi::Json::WitResponseNode* GetFirstEntity(::Meta::WitAi::Json::WitResponseNode* witResponse, ::StringW name);
    // static public Meta.WitAi.Data.Entities.WitEntityData GetFirstWitEntity(Meta.WitAi.Json.WitResponseNode witResponse, System.String name)
    // Offset: 0x4431D54
    static ::Meta::WitAi::Data::Entities::WitEntityData* GetFirstWitEntity(::Meta::WitAi::Json::WitResponseNode* witResponse, ::StringW name);
    // static public Meta.WitAi.Data.Entities.WitEntityIntData GetFirstWitIntEntity(Meta.WitAi.Json.WitResponseNode witResponse, System.String name)
    // Offset: 0x4431E1C
    static ::Meta::WitAi::Data::Entities::WitEntityIntData* GetFirstWitIntEntity(::Meta::WitAi::Json::WitResponseNode* witResponse, ::StringW name);
    // static public System.Int32 GetFirstWitIntValue(Meta.WitAi.Json.WitResponseNode witResponse, System.String name, System.Int32 defaultValue)
    // Offset: 0x4431EE4
    static int GetFirstWitIntValue(::Meta::WitAi::Json::WitResponseNode* witResponse, ::StringW name, int defaultValue);
    // static public Meta.WitAi.Data.Entities.WitEntityFloatData GetFirstWitFloatEntity(Meta.WitAi.Json.WitResponseNode witResponse, System.String name)
    // Offset: 0x4431FD4
    static ::Meta::WitAi::Data::Entities::WitEntityFloatData* GetFirstWitFloatEntity(::Meta::WitAi::Json::WitResponseNode* witResponse, ::StringW name);
    // static public System.Single GetFirstWitFloatValue(Meta.WitAi.Json.WitResponseNode witResponse, System.String name, System.Single defaultValue)
    // Offset: 0x443209C
    static float GetFirstWitFloatValue(::Meta::WitAi::Json::WitResponseNode* witResponse, ::StringW name, float defaultValue);
    // static public Meta.WitAi.Data.Entities.WitEntityData[] GetEntities(Meta.WitAi.Json.WitResponseNode witResponse, System.String name)
    // Offset: 0x443218C
    static ::ArrayW<::Meta::WitAi::Data::Entities::WitEntityData*> GetEntities(::Meta::WitAi::Json::WitResponseNode* witResponse, ::StringW name);
    // static public System.Int32 EntityCount(Meta.WitAi.Json.WitResponseNode response)
    // Offset: 0x4432304
    static int EntityCount(::Meta::WitAi::Json::WitResponseNode* response);
    // static public Meta.WitAi.Data.Entities.WitEntityFloatData[] GetFloatEntities(Meta.WitAi.Json.WitResponseNode witResponse, System.String name)
    // Offset: 0x44323C0
    static ::ArrayW<::Meta::WitAi::Data::Entities::WitEntityFloatData*> GetFloatEntities(::Meta::WitAi::Json::WitResponseNode* witResponse, ::StringW name);
    // static public Meta.WitAi.Data.Entities.WitEntityIntData[] GetIntEntities(Meta.WitAi.Json.WitResponseNode witResponse, System.String name)
    // Offset: 0x4432538
    static ::ArrayW<::Meta::WitAi::Data::Entities::WitEntityIntData*> GetIntEntities(::Meta::WitAi::Json::WitResponseNode* witResponse, ::StringW name);
    // static public Meta.WitAi.Data.Intents.WitIntentData AsWitIntent(Meta.WitAi.Json.WitResponseNode witResponse)
    // Offset: 0x44326B0
    static ::Meta::WitAi::Data::Intents::WitIntentData* AsWitIntent(::Meta::WitAi::Json::WitResponseNode* witResponse);
    // static public System.String GetIntentName(Meta.WitAi.Json.WitResponseNode witResponse)
    // Offset: 0x443270C
    static ::StringW GetIntentName(::Meta::WitAi::Json::WitResponseNode* witResponse);
    // static public Meta.WitAi.Json.WitResponseNode GetFirstIntent(Meta.WitAi.Json.WitResponseNode witResponse)
    // Offset: 0x44327FC
    static ::Meta::WitAi::Json::WitResponseNode* GetFirstIntent(::Meta::WitAi::Json::WitResponseNode* witResponse);
    // static public Meta.WitAi.Data.Intents.WitIntentData GetFirstIntentData(Meta.WitAi.Json.WitResponseNode witResponse)
    // Offset: 0x4427A54
    static ::Meta::WitAi::Data::Intents::WitIntentData* GetFirstIntentData(::Meta::WitAi::Json::WitResponseNode* witResponse);
    // static public Meta.WitAi.Data.Intents.WitIntentData[] GetIntents(Meta.WitAi.Json.WitResponseNode witResponse)
    // Offset: 0x44284C0
    static ::ArrayW<::Meta::WitAi::Data::Intents::WitIntentData*> GetIntents(::Meta::WitAi::Json::WitResponseNode* witResponse);
    // static public System.String GetPathValue(Meta.WitAi.Json.WitResponseNode response, System.String path)
    // Offset: 0x44328B4
    static ::StringW GetPathValue(::Meta::WitAi::Json::WitResponseNode* response, ::StringW path);
    // static public System.Void SetString(Meta.WitAi.Json.WitResponseNode response, System.String path, System.String value)
    // Offset: 0x4432A78
    static void SetString(::Meta::WitAi::Json::WitResponseNode* response, ::StringW path, ::StringW value);
    // static public System.Void RemovePath(Meta.WitAi.Json.WitResponseNode response, System.String path)
    // Offset: 0x4432BC4
    static void RemovePath(::Meta::WitAi::Json::WitResponseNode* response, ::StringW path);
    // static public Meta.WitAi.WitResponseReference GetWitResponseReference(System.String path)
    // Offset: 0x4432D34
    static ::Meta::WitAi::WitResponseReference* GetWitResponseReference(::StringW path);
    // static public System.String GetCodeFromPath(System.String path)
    // Offset: 0x4432F5C
    static ::StringW GetCodeFromPath(::StringW path);
    // static private System.String[] SplitArrays(System.String nodeName)
    // Offset: 0x44329E0
    static ::ArrayW<::StringW> SplitArrays(::StringW nodeName);
    // static public System.String GetTraitValue(Meta.WitAi.Json.WitResponseNode witResponse, System.String name)
    // Offset: 0x4433114
    static ::StringW GetTraitValue(::Meta::WitAi::Json::WitResponseNode* witResponse, ::StringW name);
  }; // Meta.WitAi.WitResultUtilities
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Meta::WitAi::WitResultUtilities::GetTranscription
// Il2CppName: GetTranscription
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::Meta::WitAi::Json::WitResponseNode*)>(&Meta::WitAi::WitResultUtilities::GetTranscription)> {
  static const MethodInfo* get() {
    static auto* witResponse = &::il2cpp_utils::GetClassFromName("Meta.WitAi.Json", "WitResponseNode")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::WitResultUtilities*), "GetTranscription", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{witResponse});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::WitResultUtilities::HasResponse
// Il2CppName: HasResponse
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::Meta::WitAi::Json::WitResponseNode*)>(&Meta::WitAi::WitResultUtilities::HasResponse)> {
  static const MethodInfo* get() {
    static auto* witResponse = &::il2cpp_utils::GetClassFromName("Meta.WitAi.Json", "WitResponseNode")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::WitResultUtilities*), "HasResponse", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{witResponse});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::WitResultUtilities::GetResponse
// Il2CppName: GetResponse
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Meta::WitAi::Json::WitResponseClass* (*)(::Meta::WitAi::Json::WitResponseNode*)>(&Meta::WitAi::WitResultUtilities::GetResponse)> {
  static const MethodInfo* get() {
    static auto* witResponse = &::il2cpp_utils::GetClassFromName("Meta.WitAi.Json", "WitResponseNode")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::WitResultUtilities*), "GetResponse", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{witResponse});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::WitResultUtilities::GetFinalResponse
// Il2CppName: GetFinalResponse
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Meta::WitAi::Json::WitResponseClass* (*)(::Meta::WitAi::Json::WitResponseNode*)>(&Meta::WitAi::WitResultUtilities::GetFinalResponse)> {
  static const MethodInfo* get() {
    static auto* witResponse = &::il2cpp_utils::GetClassFromName("Meta.WitAi.Json", "WitResponseNode")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::WitResultUtilities*), "GetFinalResponse", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{witResponse});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::WitResultUtilities::GetPartialResponse
// Il2CppName: GetPartialResponse
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Meta::WitAi::Json::WitResponseClass* (*)(::Meta::WitAi::Json::WitResponseNode*)>(&Meta::WitAi::WitResultUtilities::GetPartialResponse)> {
  static const MethodInfo* get() {
    static auto* witResponse = &::il2cpp_utils::GetClassFromName("Meta.WitAi.Json", "WitResponseNode")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::WitResultUtilities*), "GetPartialResponse", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{witResponse});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::WitResultUtilities::GetIsFinal
// Il2CppName: GetIsFinal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::Meta::WitAi::Json::WitResponseNode*)>(&Meta::WitAi::WitResultUtilities::GetIsFinal)> {
  static const MethodInfo* get() {
    static auto* witResponse = &::il2cpp_utils::GetClassFromName("Meta.WitAi.Json", "WitResponseNode")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::WitResultUtilities*), "GetIsFinal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{witResponse});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::WitResultUtilities::AsWitEntity
// Il2CppName: AsWitEntity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Meta::WitAi::Data::Entities::WitEntityData* (*)(::Meta::WitAi::Json::WitResponseNode*)>(&Meta::WitAi::WitResultUtilities::AsWitEntity)> {
  static const MethodInfo* get() {
    static auto* witResponse = &::il2cpp_utils::GetClassFromName("Meta.WitAi.Json", "WitResponseNode")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::WitResultUtilities*), "AsWitEntity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{witResponse});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::WitResultUtilities::AsWitFloatEntity
// Il2CppName: AsWitFloatEntity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Meta::WitAi::Data::Entities::WitEntityFloatData* (*)(::Meta::WitAi::Json::WitResponseNode*)>(&Meta::WitAi::WitResultUtilities::AsWitFloatEntity)> {
  static const MethodInfo* get() {
    static auto* witResponse = &::il2cpp_utils::GetClassFromName("Meta.WitAi.Json", "WitResponseNode")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::WitResultUtilities*), "AsWitFloatEntity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{witResponse});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::WitResultUtilities::AsWitIntEntity
// Il2CppName: AsWitIntEntity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Meta::WitAi::Data::Entities::WitEntityIntData* (*)(::Meta::WitAi::Json::WitResponseNode*)>(&Meta::WitAi::WitResultUtilities::AsWitIntEntity)> {
  static const MethodInfo* get() {
    static auto* witResponse = &::il2cpp_utils::GetClassFromName("Meta.WitAi.Json", "WitResponseNode")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::WitResultUtilities*), "AsWitIntEntity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{witResponse});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::WitResultUtilities::GetFirstEntityValue
// Il2CppName: GetFirstEntityValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::Meta::WitAi::Json::WitResponseNode*, ::StringW)>(&Meta::WitAi::WitResultUtilities::GetFirstEntityValue)> {
  static const MethodInfo* get() {
    static auto* witResponse = &::il2cpp_utils::GetClassFromName("Meta.WitAi.Json", "WitResponseNode")->byval_arg;
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::WitResultUtilities*), "GetFirstEntityValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{witResponse, name});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::WitResultUtilities::GetAllEntityValues
// Il2CppName: GetAllEntityValues
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::StringW> (*)(::Meta::WitAi::Json::WitResponseNode*, ::StringW)>(&Meta::WitAi::WitResultUtilities::GetAllEntityValues)> {
  static const MethodInfo* get() {
    static auto* witResponse = &::il2cpp_utils::GetClassFromName("Meta.WitAi.Json", "WitResponseNode")->byval_arg;
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::WitResultUtilities*), "GetAllEntityValues", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{witResponse, name});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::WitResultUtilities::GetFirstEntity
// Il2CppName: GetFirstEntity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Meta::WitAi::Json::WitResponseNode* (*)(::Meta::WitAi::Json::WitResponseNode*, ::StringW)>(&Meta::WitAi::WitResultUtilities::GetFirstEntity)> {
  static const MethodInfo* get() {
    static auto* witResponse = &::il2cpp_utils::GetClassFromName("Meta.WitAi.Json", "WitResponseNode")->byval_arg;
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::WitResultUtilities*), "GetFirstEntity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{witResponse, name});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::WitResultUtilities::GetFirstWitEntity
// Il2CppName: GetFirstWitEntity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Meta::WitAi::Data::Entities::WitEntityData* (*)(::Meta::WitAi::Json::WitResponseNode*, ::StringW)>(&Meta::WitAi::WitResultUtilities::GetFirstWitEntity)> {
  static const MethodInfo* get() {
    static auto* witResponse = &::il2cpp_utils::GetClassFromName("Meta.WitAi.Json", "WitResponseNode")->byval_arg;
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::WitResultUtilities*), "GetFirstWitEntity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{witResponse, name});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::WitResultUtilities::GetFirstWitIntEntity
// Il2CppName: GetFirstWitIntEntity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Meta::WitAi::Data::Entities::WitEntityIntData* (*)(::Meta::WitAi::Json::WitResponseNode*, ::StringW)>(&Meta::WitAi::WitResultUtilities::GetFirstWitIntEntity)> {
  static const MethodInfo* get() {
    static auto* witResponse = &::il2cpp_utils::GetClassFromName("Meta.WitAi.Json", "WitResponseNode")->byval_arg;
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::WitResultUtilities*), "GetFirstWitIntEntity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{witResponse, name});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::WitResultUtilities::GetFirstWitIntValue
// Il2CppName: GetFirstWitIntValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::Meta::WitAi::Json::WitResponseNode*, ::StringW, int)>(&Meta::WitAi::WitResultUtilities::GetFirstWitIntValue)> {
  static const MethodInfo* get() {
    static auto* witResponse = &::il2cpp_utils::GetClassFromName("Meta.WitAi.Json", "WitResponseNode")->byval_arg;
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* defaultValue = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::WitResultUtilities*), "GetFirstWitIntValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{witResponse, name, defaultValue});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::WitResultUtilities::GetFirstWitFloatEntity
// Il2CppName: GetFirstWitFloatEntity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Meta::WitAi::Data::Entities::WitEntityFloatData* (*)(::Meta::WitAi::Json::WitResponseNode*, ::StringW)>(&Meta::WitAi::WitResultUtilities::GetFirstWitFloatEntity)> {
  static const MethodInfo* get() {
    static auto* witResponse = &::il2cpp_utils::GetClassFromName("Meta.WitAi.Json", "WitResponseNode")->byval_arg;
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::WitResultUtilities*), "GetFirstWitFloatEntity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{witResponse, name});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::WitResultUtilities::GetFirstWitFloatValue
// Il2CppName: GetFirstWitFloatValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (*)(::Meta::WitAi::Json::WitResponseNode*, ::StringW, float)>(&Meta::WitAi::WitResultUtilities::GetFirstWitFloatValue)> {
  static const MethodInfo* get() {
    static auto* witResponse = &::il2cpp_utils::GetClassFromName("Meta.WitAi.Json", "WitResponseNode")->byval_arg;
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* defaultValue = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::WitResultUtilities*), "GetFirstWitFloatValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{witResponse, name, defaultValue});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::WitResultUtilities::GetEntities
// Il2CppName: GetEntities
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::Meta::WitAi::Data::Entities::WitEntityData*> (*)(::Meta::WitAi::Json::WitResponseNode*, ::StringW)>(&Meta::WitAi::WitResultUtilities::GetEntities)> {
  static const MethodInfo* get() {
    static auto* witResponse = &::il2cpp_utils::GetClassFromName("Meta.WitAi.Json", "WitResponseNode")->byval_arg;
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::WitResultUtilities*), "GetEntities", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{witResponse, name});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::WitResultUtilities::EntityCount
// Il2CppName: EntityCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::Meta::WitAi::Json::WitResponseNode*)>(&Meta::WitAi::WitResultUtilities::EntityCount)> {
  static const MethodInfo* get() {
    static auto* response = &::il2cpp_utils::GetClassFromName("Meta.WitAi.Json", "WitResponseNode")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::WitResultUtilities*), "EntityCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{response});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::WitResultUtilities::GetFloatEntities
// Il2CppName: GetFloatEntities
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::Meta::WitAi::Data::Entities::WitEntityFloatData*> (*)(::Meta::WitAi::Json::WitResponseNode*, ::StringW)>(&Meta::WitAi::WitResultUtilities::GetFloatEntities)> {
  static const MethodInfo* get() {
    static auto* witResponse = &::il2cpp_utils::GetClassFromName("Meta.WitAi.Json", "WitResponseNode")->byval_arg;
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::WitResultUtilities*), "GetFloatEntities", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{witResponse, name});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::WitResultUtilities::GetIntEntities
// Il2CppName: GetIntEntities
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::Meta::WitAi::Data::Entities::WitEntityIntData*> (*)(::Meta::WitAi::Json::WitResponseNode*, ::StringW)>(&Meta::WitAi::WitResultUtilities::GetIntEntities)> {
  static const MethodInfo* get() {
    static auto* witResponse = &::il2cpp_utils::GetClassFromName("Meta.WitAi.Json", "WitResponseNode")->byval_arg;
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::WitResultUtilities*), "GetIntEntities", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{witResponse, name});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::WitResultUtilities::AsWitIntent
// Il2CppName: AsWitIntent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Meta::WitAi::Data::Intents::WitIntentData* (*)(::Meta::WitAi::Json::WitResponseNode*)>(&Meta::WitAi::WitResultUtilities::AsWitIntent)> {
  static const MethodInfo* get() {
    static auto* witResponse = &::il2cpp_utils::GetClassFromName("Meta.WitAi.Json", "WitResponseNode")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::WitResultUtilities*), "AsWitIntent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{witResponse});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::WitResultUtilities::GetIntentName
// Il2CppName: GetIntentName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::Meta::WitAi::Json::WitResponseNode*)>(&Meta::WitAi::WitResultUtilities::GetIntentName)> {
  static const MethodInfo* get() {
    static auto* witResponse = &::il2cpp_utils::GetClassFromName("Meta.WitAi.Json", "WitResponseNode")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::WitResultUtilities*), "GetIntentName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{witResponse});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::WitResultUtilities::GetFirstIntent
// Il2CppName: GetFirstIntent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Meta::WitAi::Json::WitResponseNode* (*)(::Meta::WitAi::Json::WitResponseNode*)>(&Meta::WitAi::WitResultUtilities::GetFirstIntent)> {
  static const MethodInfo* get() {
    static auto* witResponse = &::il2cpp_utils::GetClassFromName("Meta.WitAi.Json", "WitResponseNode")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::WitResultUtilities*), "GetFirstIntent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{witResponse});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::WitResultUtilities::GetFirstIntentData
// Il2CppName: GetFirstIntentData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Meta::WitAi::Data::Intents::WitIntentData* (*)(::Meta::WitAi::Json::WitResponseNode*)>(&Meta::WitAi::WitResultUtilities::GetFirstIntentData)> {
  static const MethodInfo* get() {
    static auto* witResponse = &::il2cpp_utils::GetClassFromName("Meta.WitAi.Json", "WitResponseNode")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::WitResultUtilities*), "GetFirstIntentData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{witResponse});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::WitResultUtilities::GetIntents
// Il2CppName: GetIntents
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::Meta::WitAi::Data::Intents::WitIntentData*> (*)(::Meta::WitAi::Json::WitResponseNode*)>(&Meta::WitAi::WitResultUtilities::GetIntents)> {
  static const MethodInfo* get() {
    static auto* witResponse = &::il2cpp_utils::GetClassFromName("Meta.WitAi.Json", "WitResponseNode")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::WitResultUtilities*), "GetIntents", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{witResponse});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::WitResultUtilities::GetPathValue
// Il2CppName: GetPathValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::Meta::WitAi::Json::WitResponseNode*, ::StringW)>(&Meta::WitAi::WitResultUtilities::GetPathValue)> {
  static const MethodInfo* get() {
    static auto* response = &::il2cpp_utils::GetClassFromName("Meta.WitAi.Json", "WitResponseNode")->byval_arg;
    static auto* path = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::WitResultUtilities*), "GetPathValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{response, path});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::WitResultUtilities::SetString
// Il2CppName: SetString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Meta::WitAi::Json::WitResponseNode*, ::StringW, ::StringW)>(&Meta::WitAi::WitResultUtilities::SetString)> {
  static const MethodInfo* get() {
    static auto* response = &::il2cpp_utils::GetClassFromName("Meta.WitAi.Json", "WitResponseNode")->byval_arg;
    static auto* path = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::WitResultUtilities*), "SetString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{response, path, value});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::WitResultUtilities::RemovePath
// Il2CppName: RemovePath
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Meta::WitAi::Json::WitResponseNode*, ::StringW)>(&Meta::WitAi::WitResultUtilities::RemovePath)> {
  static const MethodInfo* get() {
    static auto* response = &::il2cpp_utils::GetClassFromName("Meta.WitAi.Json", "WitResponseNode")->byval_arg;
    static auto* path = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::WitResultUtilities*), "RemovePath", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{response, path});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::WitResultUtilities::GetWitResponseReference
// Il2CppName: GetWitResponseReference
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Meta::WitAi::WitResponseReference* (*)(::StringW)>(&Meta::WitAi::WitResultUtilities::GetWitResponseReference)> {
  static const MethodInfo* get() {
    static auto* path = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::WitResultUtilities*), "GetWitResponseReference", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{path});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::WitResultUtilities::GetCodeFromPath
// Il2CppName: GetCodeFromPath
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::StringW)>(&Meta::WitAi::WitResultUtilities::GetCodeFromPath)> {
  static const MethodInfo* get() {
    static auto* path = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::WitResultUtilities*), "GetCodeFromPath", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{path});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::WitResultUtilities::SplitArrays
// Il2CppName: SplitArrays
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::StringW> (*)(::StringW)>(&Meta::WitAi::WitResultUtilities::SplitArrays)> {
  static const MethodInfo* get() {
    static auto* nodeName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::WitResultUtilities*), "SplitArrays", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{nodeName});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::WitResultUtilities::GetTraitValue
// Il2CppName: GetTraitValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::Meta::WitAi::Json::WitResponseNode*, ::StringW)>(&Meta::WitAi::WitResultUtilities::GetTraitValue)> {
  static const MethodInfo* get() {
    static auto* witResponse = &::il2cpp_utils::GetClassFromName("Meta.WitAi.Json", "WitResponseNode")->byval_arg;
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::WitResultUtilities*), "GetTraitValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{witResponse, name});
  }
};
