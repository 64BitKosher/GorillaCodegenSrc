// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Attribute
#include "System/Attribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Type namespace: Meta.WitAi.Json
namespace Meta::WitAi::Json {
  // Forward declaring type: JsonPropertyAttribute
  class JsonPropertyAttribute;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Meta::WitAi::Json::JsonPropertyAttribute);
DEFINE_IL2CPP_ARG_TYPE(::Meta::WitAi::Json::JsonPropertyAttribute*, "Meta.WitAi.Json", "JsonPropertyAttribute");
// Type namespace: Meta.WitAi.Json
namespace Meta::WitAi::Json {
  // Size: 0x20
  #pragma pack(push, 1)
  // Autogenerated type: Meta.WitAi.Json.JsonPropertyAttribute
  // [TokenAttribute] Offset: FFFFFFFF
  // [AttributeUsageAttribute] Offset: FFFFFFFF
  class JsonPropertyAttribute : public ::System::Attribute {
    public:
    public:
    // private System.String <PropertyName>k__BackingField
    // Size: 0x8
    // Offset: 0x10
    ::StringW PropertyName;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private System.Object <DefaultValue>k__BackingField
    // Size: 0x8
    // Offset: 0x18
    ::Il2CppObject* DefaultValue;
    // Field size check
    static_assert(sizeof(::Il2CppObject*) == 0x8);
    public:
    // Get instance field reference: private System.String <PropertyName>k__BackingField
    [[deprecated("Use field access instead!")]] ::StringW& dyn_$PropertyName$k__BackingField();
    // Get instance field reference: private System.Object <DefaultValue>k__BackingField
    [[deprecated("Use field access instead!")]] ::Il2CppObject*& dyn_$DefaultValue$k__BackingField();
    // public System.String get_PropertyName()
    // Offset: 0x444BBBC
    ::StringW get_PropertyName();
    // private System.Void set_PropertyName(System.String value)
    // Offset: 0x444BBC4
    void set_PropertyName(::StringW value);
    // public System.Object get_DefaultValue()
    // Offset: 0x444BBCC
    ::Il2CppObject* get_DefaultValue();
    // private System.Void set_DefaultValue(System.Object value)
    // Offset: 0x444BBD4
    void set_DefaultValue(::Il2CppObject* value);
    // public System.Void .ctor(System.String propertyName)
    // Offset: 0x444BBDC
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static JsonPropertyAttribute* New_ctor(::StringW propertyName) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Json::JsonPropertyAttribute::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<JsonPropertyAttribute*, creationType>(propertyName)));
    }
    // public System.Void .ctor(System.String propertyName, System.Object defaultValue)
    // Offset: 0x444BB78
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static JsonPropertyAttribute* New_ctor(::StringW propertyName, ::Il2CppObject* defaultValue) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Json::JsonPropertyAttribute::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<JsonPropertyAttribute*, creationType>(propertyName, defaultValue)));
    }
  }; // Meta.WitAi.Json.JsonPropertyAttribute
  #pragma pack(pop)
  static check_size<sizeof(JsonPropertyAttribute), 24 + sizeof(::Il2CppObject*)> __Meta_WitAi_Json_JsonPropertyAttributeSizeCheck;
  static_assert(sizeof(JsonPropertyAttribute) == 0x20);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Meta::WitAi::Json::JsonPropertyAttribute::get_PropertyName
// Il2CppName: get_PropertyName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (Meta::WitAi::Json::JsonPropertyAttribute::*)()>(&Meta::WitAi::Json::JsonPropertyAttribute::get_PropertyName)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::Json::JsonPropertyAttribute*), "get_PropertyName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::Json::JsonPropertyAttribute::set_PropertyName
// Il2CppName: set_PropertyName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Meta::WitAi::Json::JsonPropertyAttribute::*)(::StringW)>(&Meta::WitAi::Json::JsonPropertyAttribute::set_PropertyName)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::Json::JsonPropertyAttribute*), "set_PropertyName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::Json::JsonPropertyAttribute::get_DefaultValue
// Il2CppName: get_DefaultValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (Meta::WitAi::Json::JsonPropertyAttribute::*)()>(&Meta::WitAi::Json::JsonPropertyAttribute::get_DefaultValue)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::Json::JsonPropertyAttribute*), "get_DefaultValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::Json::JsonPropertyAttribute::set_DefaultValue
// Il2CppName: set_DefaultValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Meta::WitAi::Json::JsonPropertyAttribute::*)(::Il2CppObject*)>(&Meta::WitAi::Json::JsonPropertyAttribute::set_DefaultValue)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::Json::JsonPropertyAttribute*), "set_DefaultValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::Json::JsonPropertyAttribute::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: Meta::WitAi::Json::JsonPropertyAttribute::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
