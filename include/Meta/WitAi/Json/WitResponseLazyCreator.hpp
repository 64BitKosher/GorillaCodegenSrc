// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Meta.WitAi.Json.WitResponseNode
#include "Meta/WitAi/Json/WitResponseNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Meta::WitAi::Json
namespace Meta::WitAi::Json {
  // Forward declaring type: WitResponseArray
  class WitResponseArray;
  // Forward declaring type: WitResponseClass
  class WitResponseClass;
}
// Completed forward declares
// Type namespace: Meta.WitAi.Json
namespace Meta::WitAi::Json {
  // Forward declaring type: WitResponseLazyCreator
  class WitResponseLazyCreator;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Meta::WitAi::Json::WitResponseLazyCreator);
DEFINE_IL2CPP_ARG_TYPE(::Meta::WitAi::Json::WitResponseLazyCreator*, "Meta.WitAi.Json", "WitResponseLazyCreator");
// Type namespace: Meta.WitAi.Json
namespace Meta::WitAi::Json {
  // Size: 0x20
  #pragma pack(push, 1)
  // Autogenerated type: Meta.WitAi.Json.WitResponseLazyCreator
  // [TokenAttribute] Offset: FFFFFFFF
  // [DefaultMemberAttribute] Offset: FFFFFFFF
  class WitResponseLazyCreator : public ::Meta::WitAi::Json::WitResponseNode {
    public:
    public:
    // private Meta.WitAi.Json.WitResponseNode m_Node
    // Size: 0x8
    // Offset: 0x10
    ::Meta::WitAi::Json::WitResponseNode* m_Node;
    // Field size check
    static_assert(sizeof(::Meta::WitAi::Json::WitResponseNode*) == 0x8);
    // private System.String m_Key
    // Size: 0x8
    // Offset: 0x18
    ::StringW m_Key;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    public:
    // Get instance field reference: private Meta.WitAi.Json.WitResponseNode m_Node
    [[deprecated("Use field access instead!")]] ::Meta::WitAi::Json::WitResponseNode*& dyn_m_Node();
    // Get instance field reference: private System.String m_Key
    [[deprecated("Use field access instead!")]] ::StringW& dyn_m_Key();
    // public System.Void .ctor(Meta.WitAi.Json.WitResponseNode aNode)
    // Offset: 0x444DCDC
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static WitResponseLazyCreator* New_ctor(::Meta::WitAi::Json::WitResponseNode* aNode) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Json::WitResponseLazyCreator::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<WitResponseLazyCreator*, creationType>(aNode)));
    }
    // public System.Void .ctor(Meta.WitAi.Json.WitResponseNode aNode, System.String aKey)
    // Offset: 0x444EE08
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static WitResponseLazyCreator* New_ctor(::Meta::WitAi::Json::WitResponseNode* aNode, ::StringW aKey) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Json::WitResponseLazyCreator::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<WitResponseLazyCreator*, creationType>(aNode, aKey)));
    }
    // private System.Void Set(Meta.WitAi.Json.WitResponseNode aVal)
    // Offset: 0x44509D4
    void Set(::Meta::WitAi::Json::WitResponseNode* aVal);
    // public override Meta.WitAi.Json.WitResponseNode get_Item(System.Int32 aIndex)
    // Offset: 0x4450A34
    // Implemented from: Meta.WitAi.Json.WitResponseNode
    // Base method: Meta.WitAi.Json.WitResponseNode WitResponseNode::get_Item(System.Int32 aIndex)
    ::Meta::WitAi::Json::WitResponseNode* get_Item(int aIndex);
    // public override System.Void set_Item(System.Int32 aIndex, Meta.WitAi.Json.WitResponseNode value)
    // Offset: 0x4450A8C
    // Implemented from: Meta.WitAi.Json.WitResponseNode
    // Base method: System.Void WitResponseNode::set_Item(System.Int32 aIndex, Meta.WitAi.Json.WitResponseNode value)
    void set_Item(int aIndex, ::Meta::WitAi::Json::WitResponseNode* value);
    // public override Meta.WitAi.Json.WitResponseNode get_Item(System.String aKey)
    // Offset: 0x4450B0C
    // Implemented from: Meta.WitAi.Json.WitResponseNode
    // Base method: Meta.WitAi.Json.WitResponseNode WitResponseNode::get_Item(System.String aKey)
    ::Meta::WitAi::Json::WitResponseNode* get_Item(::StringW aKey);
    // public override System.Void set_Item(System.String aKey, Meta.WitAi.Json.WitResponseNode value)
    // Offset: 0x4450B74
    // Implemented from: Meta.WitAi.Json.WitResponseNode
    // Base method: System.Void WitResponseNode::set_Item(System.String aKey, Meta.WitAi.Json.WitResponseNode value)
    void set_Item(::StringW aKey, ::Meta::WitAi::Json::WitResponseNode* value);
    // public override System.Void Add(Meta.WitAi.Json.WitResponseNode aItem)
    // Offset: 0x4450BFC
    // Implemented from: Meta.WitAi.Json.WitResponseNode
    // Base method: System.Void WitResponseNode::Add(Meta.WitAi.Json.WitResponseNode aItem)
    void Add(::Meta::WitAi::Json::WitResponseNode* aItem);
    // public override System.Void Add(System.String aKey, Meta.WitAi.Json.WitResponseNode aItem)
    // Offset: 0x4450C7C
    // Implemented from: Meta.WitAi.Json.WitResponseNode
    // Base method: System.Void WitResponseNode::Add(System.String aKey, Meta.WitAi.Json.WitResponseNode aItem)
    void Add(::StringW aKey, ::Meta::WitAi::Json::WitResponseNode* aItem);
    // public override System.Boolean Equals(System.Object obj)
    // Offset: 0x4450D34
    // Implemented from: Meta.WitAi.Json.WitResponseNode
    // Base method: System.Boolean WitResponseNode::Equals(System.Object obj)
    bool Equals(::Il2CppObject* obj);
    // public override System.Int32 GetHashCode()
    // Offset: 0x4450D4C
    // Implemented from: Meta.WitAi.Json.WitResponseNode
    // Base method: System.Int32 WitResponseNode::GetHashCode()
    int GetHashCode();
    // public override System.String ToString()
    // Offset: 0x4450D54
    // Implemented from: Meta.WitAi.Json.WitResponseNode
    // Base method: System.String WitResponseNode::ToString()
    ::StringW ToString();
    // public override System.String ToString(System.String aPrefix)
    // Offset: 0x4450D94
    // Implemented from: Meta.WitAi.Json.WitResponseNode
    // Base method: System.String WitResponseNode::ToString(System.String aPrefix)
    ::StringW ToString(::StringW aPrefix);
    // public override System.Int32 get_AsInt()
    // Offset: 0x4450DD4
    // Implemented from: Meta.WitAi.Json.WitResponseNode
    // Base method: System.Int32 WitResponseNode::get_AsInt()
    int get_AsInt();
    // public override System.Void set_AsInt(System.Int32 value)
    // Offset: 0x4450E50
    // Implemented from: Meta.WitAi.Json.WitResponseNode
    // Base method: System.Void WitResponseNode::set_AsInt(System.Int32 value)
    void set_AsInt(int value);
    // public override System.Single get_AsFloat()
    // Offset: 0x4450ED0
    // Implemented from: Meta.WitAi.Json.WitResponseNode
    // Base method: System.Single WitResponseNode::get_AsFloat()
    float get_AsFloat();
    // public override System.Void set_AsFloat(System.Single value)
    // Offset: 0x4450F4C
    // Implemented from: Meta.WitAi.Json.WitResponseNode
    // Base method: System.Void WitResponseNode::set_AsFloat(System.Single value)
    void set_AsFloat(float value);
    // public override System.Double get_AsDouble()
    // Offset: 0x4450FCC
    // Implemented from: Meta.WitAi.Json.WitResponseNode
    // Base method: System.Double WitResponseNode::get_AsDouble()
    double get_AsDouble();
    // public override System.Void set_AsDouble(System.Double value)
    // Offset: 0x4451048
    // Implemented from: Meta.WitAi.Json.WitResponseNode
    // Base method: System.Void WitResponseNode::set_AsDouble(System.Double value)
    void set_AsDouble(double value);
    // public override System.Boolean get_AsBool()
    // Offset: 0x44510C8
    // Implemented from: Meta.WitAi.Json.WitResponseNode
    // Base method: System.Boolean WitResponseNode::get_AsBool()
    bool get_AsBool();
    // public override System.Void set_AsBool(System.Boolean value)
    // Offset: 0x4451144
    // Implemented from: Meta.WitAi.Json.WitResponseNode
    // Base method: System.Void WitResponseNode::set_AsBool(System.Boolean value)
    void set_AsBool(bool value);
    // public override Meta.WitAi.Json.WitResponseArray get_AsArray()
    // Offset: 0x44511C4
    // Implemented from: Meta.WitAi.Json.WitResponseNode
    // Base method: Meta.WitAi.Json.WitResponseArray WitResponseNode::get_AsArray()
    ::Meta::WitAi::Json::WitResponseArray* get_AsArray();
    // public override Meta.WitAi.Json.WitResponseClass get_AsObject()
    // Offset: 0x4451224
    // Implemented from: Meta.WitAi.Json.WitResponseNode
    // Base method: Meta.WitAi.Json.WitResponseClass WitResponseNode::get_AsObject()
    ::Meta::WitAi::Json::WitResponseClass* get_AsObject();
  }; // Meta.WitAi.Json.WitResponseLazyCreator
  #pragma pack(pop)
  static check_size<sizeof(WitResponseLazyCreator), 24 + sizeof(::StringW)> __Meta_WitAi_Json_WitResponseLazyCreatorSizeCheck;
  static_assert(sizeof(WitResponseLazyCreator) == 0x20);
  // static public System.Boolean op_Equality(Meta.WitAi.Json.WitResponseLazyCreator a, System.Object b)
  // Offset: 0x4450D04
  bool operator ==(::Meta::WitAi::Json::WitResponseLazyCreator* a, ::Il2CppObject& b);
  // static public System.Boolean op_Inequality(Meta.WitAi.Json.WitResponseLazyCreator a, System.Object b)
  // Offset: 0x4450D1C
  bool operator !=(::Meta::WitAi::Json::WitResponseLazyCreator* a, ::Il2CppObject& b);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Meta::WitAi::Json::WitResponseLazyCreator::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: Meta::WitAi::Json::WitResponseLazyCreator::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: Meta::WitAi::Json::WitResponseLazyCreator::Set
// Il2CppName: Set
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Meta::WitAi::Json::WitResponseLazyCreator::*)(::Meta::WitAi::Json::WitResponseNode*)>(&Meta::WitAi::Json::WitResponseLazyCreator::Set)> {
  static const MethodInfo* get() {
    static auto* aVal = &::il2cpp_utils::GetClassFromName("Meta.WitAi.Json", "WitResponseNode")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::Json::WitResponseLazyCreator*), "Set", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{aVal});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::Json::WitResponseLazyCreator::get_Item
// Il2CppName: get_Item
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Meta::WitAi::Json::WitResponseNode* (Meta::WitAi::Json::WitResponseLazyCreator::*)(int)>(&Meta::WitAi::Json::WitResponseLazyCreator::get_Item)> {
  static const MethodInfo* get() {
    static auto* aIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::Json::WitResponseLazyCreator*), "get_Item", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{aIndex});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::Json::WitResponseLazyCreator::set_Item
// Il2CppName: set_Item
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Meta::WitAi::Json::WitResponseLazyCreator::*)(int, ::Meta::WitAi::Json::WitResponseNode*)>(&Meta::WitAi::Json::WitResponseLazyCreator::set_Item)> {
  static const MethodInfo* get() {
    static auto* aIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("Meta.WitAi.Json", "WitResponseNode")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::Json::WitResponseLazyCreator*), "set_Item", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{aIndex, value});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::Json::WitResponseLazyCreator::get_Item
// Il2CppName: get_Item
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Meta::WitAi::Json::WitResponseNode* (Meta::WitAi::Json::WitResponseLazyCreator::*)(::StringW)>(&Meta::WitAi::Json::WitResponseLazyCreator::get_Item)> {
  static const MethodInfo* get() {
    static auto* aKey = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::Json::WitResponseLazyCreator*), "get_Item", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{aKey});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::Json::WitResponseLazyCreator::set_Item
// Il2CppName: set_Item
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Meta::WitAi::Json::WitResponseLazyCreator::*)(::StringW, ::Meta::WitAi::Json::WitResponseNode*)>(&Meta::WitAi::Json::WitResponseLazyCreator::set_Item)> {
  static const MethodInfo* get() {
    static auto* aKey = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("Meta.WitAi.Json", "WitResponseNode")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::Json::WitResponseLazyCreator*), "set_Item", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{aKey, value});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::Json::WitResponseLazyCreator::Add
// Il2CppName: Add
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Meta::WitAi::Json::WitResponseLazyCreator::*)(::Meta::WitAi::Json::WitResponseNode*)>(&Meta::WitAi::Json::WitResponseLazyCreator::Add)> {
  static const MethodInfo* get() {
    static auto* aItem = &::il2cpp_utils::GetClassFromName("Meta.WitAi.Json", "WitResponseNode")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::Json::WitResponseLazyCreator*), "Add", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{aItem});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::Json::WitResponseLazyCreator::Add
// Il2CppName: Add
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Meta::WitAi::Json::WitResponseLazyCreator::*)(::StringW, ::Meta::WitAi::Json::WitResponseNode*)>(&Meta::WitAi::Json::WitResponseLazyCreator::Add)> {
  static const MethodInfo* get() {
    static auto* aKey = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* aItem = &::il2cpp_utils::GetClassFromName("Meta.WitAi.Json", "WitResponseNode")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::Json::WitResponseLazyCreator*), "Add", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{aKey, aItem});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::Json::WitResponseLazyCreator::Equals
// Il2CppName: Equals
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Meta::WitAi::Json::WitResponseLazyCreator::*)(::Il2CppObject*)>(&Meta::WitAi::Json::WitResponseLazyCreator::Equals)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::Json::WitResponseLazyCreator*), "Equals", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::Json::WitResponseLazyCreator::GetHashCode
// Il2CppName: GetHashCode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Meta::WitAi::Json::WitResponseLazyCreator::*)()>(&Meta::WitAi::Json::WitResponseLazyCreator::GetHashCode)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::Json::WitResponseLazyCreator*), "GetHashCode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::Json::WitResponseLazyCreator::ToString
// Il2CppName: ToString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (Meta::WitAi::Json::WitResponseLazyCreator::*)()>(&Meta::WitAi::Json::WitResponseLazyCreator::ToString)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::Json::WitResponseLazyCreator*), "ToString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::Json::WitResponseLazyCreator::ToString
// Il2CppName: ToString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (Meta::WitAi::Json::WitResponseLazyCreator::*)(::StringW)>(&Meta::WitAi::Json::WitResponseLazyCreator::ToString)> {
  static const MethodInfo* get() {
    static auto* aPrefix = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::Json::WitResponseLazyCreator*), "ToString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{aPrefix});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::Json::WitResponseLazyCreator::get_AsInt
// Il2CppName: get_AsInt
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Meta::WitAi::Json::WitResponseLazyCreator::*)()>(&Meta::WitAi::Json::WitResponseLazyCreator::get_AsInt)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::Json::WitResponseLazyCreator*), "get_AsInt", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::Json::WitResponseLazyCreator::set_AsInt
// Il2CppName: set_AsInt
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Meta::WitAi::Json::WitResponseLazyCreator::*)(int)>(&Meta::WitAi::Json::WitResponseLazyCreator::set_AsInt)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::Json::WitResponseLazyCreator*), "set_AsInt", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::Json::WitResponseLazyCreator::get_AsFloat
// Il2CppName: get_AsFloat
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (Meta::WitAi::Json::WitResponseLazyCreator::*)()>(&Meta::WitAi::Json::WitResponseLazyCreator::get_AsFloat)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::Json::WitResponseLazyCreator*), "get_AsFloat", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::Json::WitResponseLazyCreator::set_AsFloat
// Il2CppName: set_AsFloat
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Meta::WitAi::Json::WitResponseLazyCreator::*)(float)>(&Meta::WitAi::Json::WitResponseLazyCreator::set_AsFloat)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::Json::WitResponseLazyCreator*), "set_AsFloat", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::Json::WitResponseLazyCreator::get_AsDouble
// Il2CppName: get_AsDouble
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<double (Meta::WitAi::Json::WitResponseLazyCreator::*)()>(&Meta::WitAi::Json::WitResponseLazyCreator::get_AsDouble)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::Json::WitResponseLazyCreator*), "get_AsDouble", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::Json::WitResponseLazyCreator::set_AsDouble
// Il2CppName: set_AsDouble
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Meta::WitAi::Json::WitResponseLazyCreator::*)(double)>(&Meta::WitAi::Json::WitResponseLazyCreator::set_AsDouble)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Double")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::Json::WitResponseLazyCreator*), "set_AsDouble", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::Json::WitResponseLazyCreator::get_AsBool
// Il2CppName: get_AsBool
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Meta::WitAi::Json::WitResponseLazyCreator::*)()>(&Meta::WitAi::Json::WitResponseLazyCreator::get_AsBool)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::Json::WitResponseLazyCreator*), "get_AsBool", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::Json::WitResponseLazyCreator::set_AsBool
// Il2CppName: set_AsBool
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Meta::WitAi::Json::WitResponseLazyCreator::*)(bool)>(&Meta::WitAi::Json::WitResponseLazyCreator::set_AsBool)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::Json::WitResponseLazyCreator*), "set_AsBool", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::Json::WitResponseLazyCreator::get_AsArray
// Il2CppName: get_AsArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Meta::WitAi::Json::WitResponseArray* (Meta::WitAi::Json::WitResponseLazyCreator::*)()>(&Meta::WitAi::Json::WitResponseLazyCreator::get_AsArray)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::Json::WitResponseLazyCreator*), "get_AsArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::Json::WitResponseLazyCreator::get_AsObject
// Il2CppName: get_AsObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Meta::WitAi::Json::WitResponseClass* (Meta::WitAi::Json::WitResponseLazyCreator::*)()>(&Meta::WitAi::Json::WitResponseLazyCreator::get_AsObject)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::Json::WitResponseLazyCreator*), "get_AsObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::Json::WitResponseLazyCreator::operator ==
// Il2CppName: op_Equality
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: Meta::WitAi::Json::WitResponseLazyCreator::operator !=
// Il2CppName: op_Inequality
// Cannot perform method pointer template specialization from operators!
