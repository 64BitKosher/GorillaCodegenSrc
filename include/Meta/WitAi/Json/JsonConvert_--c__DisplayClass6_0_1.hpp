// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Meta.WitAi.Json.JsonConvert
#include "Meta/WitAi/Json/JsonConvert.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Meta::WitAi::Json
namespace Meta::WitAi::Json {
  // Forward declaring type: JsonConverter
  class JsonConverter;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Action`2<T1, T2>
  template<typename T1, typename T2>
  class Action_2;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE_GENERIC_CLASS(::Meta::WitAi::Json::JsonConvert::$$c__DisplayClass6_0_1, "Meta.WitAi.Json", "JsonConvert/<>c__DisplayClass6_0`1");
// Type namespace: Meta.WitAi.Json
namespace Meta::WitAi::Json {
  // WARNING Size may be invalid!
  // Autogenerated type: Meta.WitAi.Json.JsonConvert/<>c__DisplayClass6_0`1
  // [TokenAttribute] Offset: FFFFFFFF
  // [CompilerGeneratedAttribute] Offset: FFFFFFFF
  template<typename IN_TYPE>
  class JsonConvert::$$c__DisplayClass6_0_1 : public ::Il2CppObject {
    public:
    public:
    // public IN_TYPE instance
    // Size: 0xFFFFFFFF
    // Offset: 0x0
    IN_TYPE instance;
    // public System.String jsonString
    // Size: 0x8
    // Offset: 0x0
    ::StringW jsonString;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public Meta.WitAi.Json.JsonConverter[] customConverters
    // Size: 0x8
    // Offset: 0x0
    ::ArrayW<::Meta::WitAi::Json::JsonConverter*> customConverters;
    // Field size check
    static_assert(sizeof(::ArrayW<::Meta::WitAi::Json::JsonConverter*>) == 0x8);
    // public System.Boolean suppressWarnings
    // Size: 0x1
    // Offset: 0x0
    bool suppressWarnings;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // public System.Action`2<IN_TYPE,System.Boolean> onComplete
    // Size: 0x8
    // Offset: 0x0
    ::System::Action_2<IN_TYPE, bool>* onComplete;
    // Field size check
    static_assert(sizeof(::System::Action_2<IN_TYPE, bool>*) == 0x8);
    public:
    // Autogenerated instance field getter
    // Get instance field: public IN_TYPE instance
    [[deprecated("Use field access instead!")]] IN_TYPE& dyn_instance() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Json::JsonConvert::$$c__DisplayClass6_0_1::dyn_instance");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "instance"))->offset;
      return *reinterpret_cast<IN_TYPE*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: public System.String jsonString
    [[deprecated("Use field access instead!")]] ::StringW& dyn_jsonString() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Json::JsonConvert::$$c__DisplayClass6_0_1::dyn_jsonString");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "jsonString"))->offset;
      return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: public Meta.WitAi.Json.JsonConverter[] customConverters
    [[deprecated("Use field access instead!")]] ::ArrayW<::Meta::WitAi::Json::JsonConverter*>& dyn_customConverters() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Json::JsonConvert::$$c__DisplayClass6_0_1::dyn_customConverters");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "customConverters"))->offset;
      return *reinterpret_cast<::ArrayW<::Meta::WitAi::Json::JsonConverter*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: public System.Boolean suppressWarnings
    [[deprecated("Use field access instead!")]] bool& dyn_suppressWarnings() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Json::JsonConvert::$$c__DisplayClass6_0_1::dyn_suppressWarnings");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "suppressWarnings"))->offset;
      return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: public System.Action`2<IN_TYPE,System.Boolean> onComplete
    [[deprecated("Use field access instead!")]] ::System::Action_2<IN_TYPE, bool>*& dyn_onComplete() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Json::JsonConvert::$$c__DisplayClass6_0_1::dyn_onComplete");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onComplete"))->offset;
      return *reinterpret_cast<::System::Action_2<IN_TYPE, bool>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // public System.Void .ctor()
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static JsonConvert::$$c__DisplayClass6_0_1<IN_TYPE>* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Json::JsonConvert::$$c__DisplayClass6_0_1::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<JsonConvert::$$c__DisplayClass6_0_1<IN_TYPE>*, creationType>()));
    }
    // System.Boolean <DeserializeObjectAsync>b__0()
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool $DeserializeObjectAsync$b__0() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Json::JsonConvert::$$c__DisplayClass6_0_1::<DeserializeObjectAsync>b__0");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DeserializeObjectAsync>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
    }
    // System.Void <DeserializeObjectAsync>b__1(System.Boolean success, System.String error)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void $DeserializeObjectAsync$b__1(bool success, ::StringW error) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Json::JsonConvert::$$c__DisplayClass6_0_1::<DeserializeObjectAsync>b__1");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DeserializeObjectAsync>b__1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(success), ::il2cpp_utils::ExtractType(error)})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, success, error);
    }
  }; // Meta.WitAi.Json.JsonConvert/<>c__DisplayClass6_0`1
  // Could not write size check! Type: Meta.WitAi.Json.JsonConvert/<>c__DisplayClass6_0`1 is generic, or has no fields that are valid for size checks!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
