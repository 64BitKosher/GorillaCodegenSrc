// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Reflection.BindingFlags
#include "System/Reflection/BindingFlags.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Meta::WitAi::Json
namespace Meta::WitAi::Json {
  // Forward declaring type: JsonConverter
  class JsonConverter;
  // Forward declaring type: WitResponseNode
  class WitResponseNode;
  // Forward declaring type: WitResponseClass
  class WitResponseClass;
  // Forward declaring type: JsonPropertyAttribute
  class JsonPropertyAttribute;
}
// Forward declaring namespace: System::Reflection
namespace System::Reflection {
  // Forward declaring type: MethodInfo
  class MethodInfo;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Type
  class Type;
  // Forward declaring type: Action`2<T1, T2>
  template<typename T1, typename T2>
  class Action_2;
}
// Forward declaring namespace: System::Text
namespace System::Text {
  // Forward declaring type: StringBuilder
  class StringBuilder;
}
// Completed forward declares
// Type namespace: Meta.WitAi.Json
namespace Meta::WitAi::Json {
  // Forward declaring type: JsonConvert
  class JsonConvert;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Meta::WitAi::Json::JsonConvert);
DEFINE_IL2CPP_ARG_TYPE(::Meta::WitAi::Json::JsonConvert*, "Meta.WitAi.Json", "JsonConvert");
// Type namespace: Meta.WitAi.Json
namespace Meta::WitAi::Json {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: Meta.WitAi.Json.JsonConvert
  // [TokenAttribute] Offset: FFFFFFFF
  class JsonConvert : public ::Il2CppObject {
    public:
    // Nested type: ::Meta::WitAi::Json::JsonConvert::$$c
    class $$c;
    // Nested type: ::Meta::WitAi::Json::JsonConvert::$$c__DisplayClass6_0_1<IN_TYPE>
    template<typename IN_TYPE>
    class $$c__DisplayClass6_0_1;
    // Nested type: ::Meta::WitAi::Json::JsonConvert::$$c__DisplayClass7_0_1<IN_TYPE>
    template<typename IN_TYPE>
    class $$c__DisplayClass7_0_1;
    // Get static field: static private Meta.WitAi.Json.JsonConverter[] _defaultConverters
    static ::ArrayW<::Meta::WitAi::Json::JsonConverter*> _get__defaultConverters();
    // Set static field: static private Meta.WitAi.Json.JsonConverter[] _defaultConverters
    static void _set__defaultConverters(::ArrayW<::Meta::WitAi::Json::JsonConverter*> value);
    // static field const value: static private System.Reflection.BindingFlags BIND_FLAGS
    static constexpr const int BIND_FLAGS = 20;
    // Get static field: static private System.Reflection.BindingFlags BIND_FLAGS
    static ::System::Reflection::BindingFlags _get_BIND_FLAGS();
    // Set static field: static private System.Reflection.BindingFlags BIND_FLAGS
    static void _set_BIND_FLAGS(::System::Reflection::BindingFlags value);
    // Get static field: static private System.Reflection.MethodInfo _enumParseMethod
    static ::System::Reflection::MethodInfo* _get__enumParseMethod();
    // Set static field: static private System.Reflection.MethodInfo _enumParseMethod
    static void _set__enumParseMethod(::System::Reflection::MethodInfo* value);
    // static public Meta.WitAi.Json.JsonConverter[] get_DefaultConverters()
    // Offset: 0x444753C
    static ::ArrayW<::Meta::WitAi::Json::JsonConverter*> get_DefaultConverters();
    // static private System.Object EnsureExists(System.Type objType, System.Object obj)
    // Offset: 0x4447594
    static ::Il2CppObject* EnsureExists(::System::Type* objType, ::Il2CppObject* obj);
    // static public Meta.WitAi.Json.WitResponseNode DeserializeToken(System.String jsonString)
    // Offset: 0x4447750
    static ::Meta::WitAi::Json::WitResponseNode* DeserializeToken(::StringW jsonString);
    // static public System.Void DeserializeObjectAsync(System.String jsonString, System.Action`2<IN_TYPE,System.Boolean> onComplete, Meta.WitAi.Json.JsonConverter[] customConverters, System.Boolean suppressWarnings)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class IN_TYPE>
    static void DeserializeObjectAsync(::StringW jsonString, ::System::Action_2<IN_TYPE, bool>* onComplete, ::ArrayW<::Meta::WitAi::Json::JsonConverter*> customConverters, bool suppressWarnings) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Json::JsonConvert::DeserializeObjectAsync");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Meta.WitAi.Json", "JsonConvert", "DeserializeObjectAsync", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<IN_TYPE>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jsonString), ::il2cpp_utils::ExtractType(onComplete), ::il2cpp_utils::ExtractType(customConverters), ::il2cpp_utils::ExtractType(suppressWarnings)})));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<IN_TYPE>::get()}));
      ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___generic__method, jsonString, onComplete, customConverters, suppressWarnings);
    }
    // static public System.Void DeserializeObjectAsync(Meta.WitAi.Json.WitResponseNode jsonToken, System.Action`2<IN_TYPE,System.Boolean> onComplete, Meta.WitAi.Json.JsonConverter[] customConverters, System.Boolean suppressWarnings)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class IN_TYPE>
    static void DeserializeObjectAsync(::Meta::WitAi::Json::WitResponseNode* jsonToken, ::System::Action_2<IN_TYPE, bool>* onComplete, ::ArrayW<::Meta::WitAi::Json::JsonConverter*> customConverters, bool suppressWarnings) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Json::JsonConvert::DeserializeObjectAsync");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Meta.WitAi.Json", "JsonConvert", "DeserializeObjectAsync", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<IN_TYPE>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jsonToken), ::il2cpp_utils::ExtractType(onComplete), ::il2cpp_utils::ExtractType(customConverters), ::il2cpp_utils::ExtractType(suppressWarnings)})));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<IN_TYPE>::get()}));
      ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___generic__method, jsonToken, onComplete, customConverters, suppressWarnings);
    }
    // static public IN_TYPE DeserializeObject(System.String jsonString, Meta.WitAi.Json.JsonConverter[] customConverters, System.Boolean suppressWarnings)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class IN_TYPE>
    static IN_TYPE DeserializeObject(::StringW jsonString, ::ArrayW<::Meta::WitAi::Json::JsonConverter*> customConverters, bool suppressWarnings) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Json::JsonConvert::DeserializeObject");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Meta.WitAi.Json", "JsonConvert", "DeserializeObject", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<IN_TYPE>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jsonString), ::il2cpp_utils::ExtractType(customConverters), ::il2cpp_utils::ExtractType(suppressWarnings)})));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<IN_TYPE>::get()}));
      return ::il2cpp_utils::RunMethodRethrow<IN_TYPE, false>(static_cast<Il2CppObject*>(nullptr), ___generic__method, jsonString, customConverters, suppressWarnings);
    }
    // static public IN_TYPE DeserializeObject(Meta.WitAi.Json.WitResponseNode jsonToken, Meta.WitAi.Json.JsonConverter[] customConverters, System.Boolean suppressWarnings)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class IN_TYPE>
    static IN_TYPE DeserializeObject(::Meta::WitAi::Json::WitResponseNode* jsonToken, ::ArrayW<::Meta::WitAi::Json::JsonConverter*> customConverters, bool suppressWarnings) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Json::JsonConvert::DeserializeObject");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Meta.WitAi.Json", "JsonConvert", "DeserializeObject", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<IN_TYPE>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jsonToken), ::il2cpp_utils::ExtractType(customConverters), ::il2cpp_utils::ExtractType(suppressWarnings)})));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<IN_TYPE>::get()}));
      return ::il2cpp_utils::RunMethodRethrow<IN_TYPE, false>(static_cast<Il2CppObject*>(nullptr), ___generic__method, jsonToken, customConverters, suppressWarnings);
    }
    // static public System.Boolean DeserializeIntoObject(ref IN_TYPE instance, System.String jsonString, Meta.WitAi.Json.JsonConverter[] customConverters, System.Boolean suppressWarnings)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class IN_TYPE>
    static bool DeserializeIntoObject(ByRef<IN_TYPE> instance, ::StringW jsonString, ::ArrayW<::Meta::WitAi::Json::JsonConverter*> customConverters, bool suppressWarnings) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Json::JsonConvert::DeserializeIntoObject");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Meta.WitAi.Json", "JsonConvert", "DeserializeIntoObject", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<IN_TYPE>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(instance), ::il2cpp_utils::ExtractType(jsonString), ::il2cpp_utils::ExtractType(customConverters), ::il2cpp_utils::ExtractType(suppressWarnings)})));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<IN_TYPE>::get()}));
      return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___generic__method, byref(instance), jsonString, customConverters, suppressWarnings);
    }
    // static public System.Boolean DeserializeIntoObject(ref IN_TYPE instance, Meta.WitAi.Json.WitResponseNode jsonToken, Meta.WitAi.Json.JsonConverter[] customConverters, System.Boolean suppressWarnings)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class IN_TYPE>
    static bool DeserializeIntoObject(ByRef<IN_TYPE> instance, ::Meta::WitAi::Json::WitResponseNode* jsonToken, ::ArrayW<::Meta::WitAi::Json::JsonConverter*> customConverters, bool suppressWarnings) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Json::JsonConvert::DeserializeIntoObject");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Meta.WitAi.Json", "JsonConvert", "DeserializeIntoObject", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<IN_TYPE>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(instance), ::il2cpp_utils::ExtractType(jsonToken), ::il2cpp_utils::ExtractType(customConverters), ::il2cpp_utils::ExtractType(suppressWarnings)})));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<IN_TYPE>::get()}));
      return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___generic__method, byref(instance), jsonToken, customConverters, suppressWarnings);
    }
    // static private System.Object DeserializeToken(System.Type toType, System.Object oldValue, Meta.WitAi.Json.WitResponseNode jsonToken, System.Text.StringBuilder log, Meta.WitAi.Json.JsonConverter[] customConverters)
    // Offset: 0x4447854
    static ::Il2CppObject* DeserializeToken(::System::Type* toType, ::Il2CppObject* oldValue, ::Meta::WitAi::Json::WitResponseNode* jsonToken, ::System::Text::StringBuilder* log, ::ArrayW<::Meta::WitAi::Json::JsonConverter*> customConverters);
    // static private System.Object DeserializeEnum(System.Type toType, System.Object oldValue, System.String enumString, System.Text.StringBuilder log)
    // Offset: 0x44485E4
    static ::Il2CppObject* DeserializeEnum(::System::Type* toType, ::Il2CppObject* oldValue, ::StringW enumString, ::System::Text::StringBuilder* log);
    // static public ITEM_TYPE[] DeserializeArray(System.Object oldArray, Meta.WitAi.Json.WitResponseNode jsonToken, System.Text.StringBuilder log, Meta.WitAi.Json.JsonConverter[] customConverters)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class ITEM_TYPE>
    static ::ArrayW<ITEM_TYPE> DeserializeArray(::Il2CppObject* oldArray, ::Meta::WitAi::Json::WitResponseNode* jsonToken, ::System::Text::StringBuilder* log, ::ArrayW<::Meta::WitAi::Json::JsonConverter*> customConverters) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Json::JsonConvert::DeserializeArray");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Meta.WitAi.Json", "JsonConvert", "DeserializeArray", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<ITEM_TYPE>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(oldArray), ::il2cpp_utils::ExtractType(jsonToken), ::il2cpp_utils::ExtractType(log), ::il2cpp_utils::ExtractType(customConverters)})));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<ITEM_TYPE>::get()}));
      return ::il2cpp_utils::RunMethodRethrow<::ArrayW<ITEM_TYPE>, false>(static_cast<Il2CppObject*>(nullptr), ___generic__method, oldArray, jsonToken, log, customConverters);
    }
    // static private System.Object DeserializeClass(System.Type toType, System.Object oldObject, Meta.WitAi.Json.WitResponseClass jsonClass, System.Text.StringBuilder log, Meta.WitAi.Json.JsonConverter[] customConverters)
    // Offset: 0x4448C48
    static ::Il2CppObject* DeserializeClass(::System::Type* toType, ::Il2CppObject* oldObject, ::Meta::WitAi::Json::WitResponseClass* jsonClass, ::System::Text::StringBuilder* log, ::ArrayW<::Meta::WitAi::Json::JsonConverter*> customConverters);
    // static private System.Object DeserializeDictionary(System.Type toType, System.Object oldObject, Meta.WitAi.Json.WitResponseClass jsonClass, System.Text.StringBuilder log, Meta.WitAi.Json.JsonConverter[] customConverters)
    // Offset: 0x4448A30
    static ::Il2CppObject* DeserializeDictionary(::System::Type* toType, ::Il2CppObject* oldObject, ::Meta::WitAi::Json::WitResponseClass* jsonClass, ::System::Text::StringBuilder* log, ::ArrayW<::Meta::WitAi::Json::JsonConverter*> customConverters);
    // static public System.String SerializeObject(FROM_TYPE inObject, Meta.WitAi.Json.JsonConverter[] customConverters, System.Boolean suppressWarnings)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class FROM_TYPE>
    static ::StringW SerializeObject(FROM_TYPE inObject, ::ArrayW<::Meta::WitAi::Json::JsonConverter*> customConverters, bool suppressWarnings) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Json::JsonConvert::SerializeObject");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Meta.WitAi.Json", "JsonConvert", "SerializeObject", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<FROM_TYPE>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inObject), ::il2cpp_utils::ExtractType(customConverters), ::il2cpp_utils::ExtractType(suppressWarnings)})));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<FROM_TYPE>::get()}));
      return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___generic__method, inObject, customConverters, suppressWarnings);
    }
    // static public Meta.WitAi.Json.WitResponseNode SerializeToken(FROM_TYPE inObject, Meta.WitAi.Json.JsonConverter[] customConverters, System.Boolean suppressWarnings)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class FROM_TYPE>
    static ::Meta::WitAi::Json::WitResponseNode* SerializeToken(FROM_TYPE inObject, ::ArrayW<::Meta::WitAi::Json::JsonConverter*> customConverters, bool suppressWarnings) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Json::JsonConvert::SerializeToken");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Meta.WitAi.Json", "JsonConvert", "SerializeToken", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<FROM_TYPE>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inObject), ::il2cpp_utils::ExtractType(customConverters), ::il2cpp_utils::ExtractType(suppressWarnings)})));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<FROM_TYPE>::get()}));
      return ::il2cpp_utils::RunMethodRethrow<::Meta::WitAi::Json::WitResponseNode*, false>(static_cast<Il2CppObject*>(nullptr), ___generic__method, inObject, customConverters, suppressWarnings);
    }
    // static private Meta.WitAi.Json.WitResponseNode SerializeToken(System.Type inType, System.Object inObject, System.Text.StringBuilder log, Meta.WitAi.Json.JsonConverter[] customConverters)
    // Offset: 0x444A0BC
    static ::Meta::WitAi::Json::WitResponseNode* SerializeToken(::System::Type* inType, ::Il2CppObject* inObject, ::System::Text::StringBuilder* log, ::ArrayW<::Meta::WitAi::Json::JsonConverter*> customConverters);
    // static private System.Void SerializeProperty(Meta.WitAi.Json.WitResponseClass newClass, System.Type propertyType, System.String propertyName, System.Object propertyValue, Meta.WitAi.Json.JsonPropertyAttribute[] propertyAttributes, System.Text.StringBuilder log, Meta.WitAi.Json.JsonConverter[] customConverters)
    // Offset: 0x444B578
    static void SerializeProperty(::Meta::WitAi::Json::WitResponseClass* newClass, ::System::Type* propertyType, ::StringW propertyName, ::Il2CppObject* propertyValue, ::ArrayW<::Meta::WitAi::Json::JsonPropertyAttribute*> propertyAttributes, ::System::Text::StringBuilder* log, ::ArrayW<::Meta::WitAi::Json::JsonConverter*> customConverters);
    // static private System.Void .cctor()
    // Offset: 0x444B700
    static void _cctor();
  }; // Meta.WitAi.Json.JsonConvert
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Meta::WitAi::Json::JsonConvert::get_DefaultConverters
// Il2CppName: get_DefaultConverters
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::Meta::WitAi::Json::JsonConverter*> (*)()>(&Meta::WitAi::Json::JsonConvert::get_DefaultConverters)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::Json::JsonConvert*), "get_DefaultConverters", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::Json::JsonConvert::EnsureExists
// Il2CppName: EnsureExists
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (*)(::System::Type*, ::Il2CppObject*)>(&Meta::WitAi::Json::JsonConvert::EnsureExists)> {
  static const MethodInfo* get() {
    static auto* objType = &::il2cpp_utils::GetClassFromName("System", "Type")->byval_arg;
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::Json::JsonConvert*), "EnsureExists", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{objType, obj});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::Json::JsonConvert::DeserializeToken
// Il2CppName: DeserializeToken
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Meta::WitAi::Json::WitResponseNode* (*)(::StringW)>(&Meta::WitAi::Json::JsonConvert::DeserializeToken)> {
  static const MethodInfo* get() {
    static auto* jsonString = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::Json::JsonConvert*), "DeserializeToken", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{jsonString});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::Json::JsonConvert::DeserializeObjectAsync
// Il2CppName: DeserializeObjectAsync
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: Meta::WitAi::Json::JsonConvert::DeserializeObjectAsync
// Il2CppName: DeserializeObjectAsync
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: Meta::WitAi::Json::JsonConvert::DeserializeObject
// Il2CppName: DeserializeObject
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: Meta::WitAi::Json::JsonConvert::DeserializeObject
// Il2CppName: DeserializeObject
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: Meta::WitAi::Json::JsonConvert::DeserializeIntoObject
// Il2CppName: DeserializeIntoObject
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: Meta::WitAi::Json::JsonConvert::DeserializeIntoObject
// Il2CppName: DeserializeIntoObject
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: Meta::WitAi::Json::JsonConvert::DeserializeToken
// Il2CppName: DeserializeToken
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (*)(::System::Type*, ::Il2CppObject*, ::Meta::WitAi::Json::WitResponseNode*, ::System::Text::StringBuilder*, ::ArrayW<::Meta::WitAi::Json::JsonConverter*>)>(&Meta::WitAi::Json::JsonConvert::DeserializeToken)> {
  static const MethodInfo* get() {
    static auto* toType = &::il2cpp_utils::GetClassFromName("System", "Type")->byval_arg;
    static auto* oldValue = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* jsonToken = &::il2cpp_utils::GetClassFromName("Meta.WitAi.Json", "WitResponseNode")->byval_arg;
    static auto* log = &::il2cpp_utils::GetClassFromName("System.Text", "StringBuilder")->byval_arg;
    static auto* customConverters = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("Meta.WitAi.Json", "JsonConverter"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::Json::JsonConvert*), "DeserializeToken", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{toType, oldValue, jsonToken, log, customConverters});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::Json::JsonConvert::DeserializeEnum
// Il2CppName: DeserializeEnum
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (*)(::System::Type*, ::Il2CppObject*, ::StringW, ::System::Text::StringBuilder*)>(&Meta::WitAi::Json::JsonConvert::DeserializeEnum)> {
  static const MethodInfo* get() {
    static auto* toType = &::il2cpp_utils::GetClassFromName("System", "Type")->byval_arg;
    static auto* oldValue = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* enumString = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* log = &::il2cpp_utils::GetClassFromName("System.Text", "StringBuilder")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::Json::JsonConvert*), "DeserializeEnum", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{toType, oldValue, enumString, log});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::Json::JsonConvert::DeserializeArray
// Il2CppName: DeserializeArray
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: Meta::WitAi::Json::JsonConvert::DeserializeClass
// Il2CppName: DeserializeClass
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (*)(::System::Type*, ::Il2CppObject*, ::Meta::WitAi::Json::WitResponseClass*, ::System::Text::StringBuilder*, ::ArrayW<::Meta::WitAi::Json::JsonConverter*>)>(&Meta::WitAi::Json::JsonConvert::DeserializeClass)> {
  static const MethodInfo* get() {
    static auto* toType = &::il2cpp_utils::GetClassFromName("System", "Type")->byval_arg;
    static auto* oldObject = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* jsonClass = &::il2cpp_utils::GetClassFromName("Meta.WitAi.Json", "WitResponseClass")->byval_arg;
    static auto* log = &::il2cpp_utils::GetClassFromName("System.Text", "StringBuilder")->byval_arg;
    static auto* customConverters = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("Meta.WitAi.Json", "JsonConverter"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::Json::JsonConvert*), "DeserializeClass", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{toType, oldObject, jsonClass, log, customConverters});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::Json::JsonConvert::DeserializeDictionary
// Il2CppName: DeserializeDictionary
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (*)(::System::Type*, ::Il2CppObject*, ::Meta::WitAi::Json::WitResponseClass*, ::System::Text::StringBuilder*, ::ArrayW<::Meta::WitAi::Json::JsonConverter*>)>(&Meta::WitAi::Json::JsonConvert::DeserializeDictionary)> {
  static const MethodInfo* get() {
    static auto* toType = &::il2cpp_utils::GetClassFromName("System", "Type")->byval_arg;
    static auto* oldObject = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* jsonClass = &::il2cpp_utils::GetClassFromName("Meta.WitAi.Json", "WitResponseClass")->byval_arg;
    static auto* log = &::il2cpp_utils::GetClassFromName("System.Text", "StringBuilder")->byval_arg;
    static auto* customConverters = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("Meta.WitAi.Json", "JsonConverter"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::Json::JsonConvert*), "DeserializeDictionary", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{toType, oldObject, jsonClass, log, customConverters});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::Json::JsonConvert::SerializeObject
// Il2CppName: SerializeObject
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: Meta::WitAi::Json::JsonConvert::SerializeToken
// Il2CppName: SerializeToken
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: Meta::WitAi::Json::JsonConvert::SerializeToken
// Il2CppName: SerializeToken
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Meta::WitAi::Json::WitResponseNode* (*)(::System::Type*, ::Il2CppObject*, ::System::Text::StringBuilder*, ::ArrayW<::Meta::WitAi::Json::JsonConverter*>)>(&Meta::WitAi::Json::JsonConvert::SerializeToken)> {
  static const MethodInfo* get() {
    static auto* inType = &::il2cpp_utils::GetClassFromName("System", "Type")->byval_arg;
    static auto* inObject = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* log = &::il2cpp_utils::GetClassFromName("System.Text", "StringBuilder")->byval_arg;
    static auto* customConverters = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("Meta.WitAi.Json", "JsonConverter"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::Json::JsonConvert*), "SerializeToken", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{inType, inObject, log, customConverters});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::Json::JsonConvert::SerializeProperty
// Il2CppName: SerializeProperty
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Meta::WitAi::Json::WitResponseClass*, ::System::Type*, ::StringW, ::Il2CppObject*, ::ArrayW<::Meta::WitAi::Json::JsonPropertyAttribute*>, ::System::Text::StringBuilder*, ::ArrayW<::Meta::WitAi::Json::JsonConverter*>)>(&Meta::WitAi::Json::JsonConvert::SerializeProperty)> {
  static const MethodInfo* get() {
    static auto* newClass = &::il2cpp_utils::GetClassFromName("Meta.WitAi.Json", "WitResponseClass")->byval_arg;
    static auto* propertyType = &::il2cpp_utils::GetClassFromName("System", "Type")->byval_arg;
    static auto* propertyName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* propertyValue = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* propertyAttributes = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("Meta.WitAi.Json", "JsonPropertyAttribute"), 1)->byval_arg;
    static auto* log = &::il2cpp_utils::GetClassFromName("System.Text", "StringBuilder")->byval_arg;
    static auto* customConverters = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("Meta.WitAi.Json", "JsonConverter"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::Json::JsonConvert*), "SerializeProperty", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{newClass, propertyType, propertyName, propertyValue, propertyAttributes, log, customConverters});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::Json::JsonConvert::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&Meta::WitAi::Json::JsonConvert::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::Json::JsonConvert*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
