// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
// Including type: Meta.WitAi.Interfaces.IDynamicEntitiesProvider
#include "Meta/WitAi/Interfaces/IDynamicEntitiesProvider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Meta::WitAi::Data::Entities
namespace Meta::WitAi::Data::Entities {
  // Forward declaring type: WitDynamicEntities
  class WitDynamicEntities;
}
// Forward declaring namespace: Meta::WitAi::Data::Info
namespace Meta::WitAi::Data::Info {
  // Forward declaring type: WitEntityKeywordInfo
  struct WitEntityKeywordInfo;
}
// Completed forward declares
// Type namespace: Meta.WitAi.Data.Entities
namespace Meta::WitAi::Data::Entities {
  // Forward declaring type: DynamicEntityKeywordRegistry
  class DynamicEntityKeywordRegistry;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Meta::WitAi::Data::Entities::DynamicEntityKeywordRegistry);
DEFINE_IL2CPP_ARG_TYPE(::Meta::WitAi::Data::Entities::DynamicEntityKeywordRegistry*, "Meta.WitAi.Data.Entities", "DynamicEntityKeywordRegistry");
// Type namespace: Meta.WitAi.Data.Entities
namespace Meta::WitAi::Data::Entities {
  // Size: 0x28
  #pragma pack(push, 1)
  // Autogenerated type: Meta.WitAi.Data.Entities.DynamicEntityKeywordRegistry
  // [TokenAttribute] Offset: FFFFFFFF
  class DynamicEntityKeywordRegistry : public ::UnityEngine::MonoBehaviour/*, public ::Meta::WitAi::Interfaces::IDynamicEntitiesProvider*/ {
    public:
    public:
    // private Meta.WitAi.Data.Entities.WitDynamicEntities entities
    // Size: 0x8
    // Offset: 0x20
    ::Meta::WitAi::Data::Entities::WitDynamicEntities* entities;
    // Field size check
    static_assert(sizeof(::Meta::WitAi::Data::Entities::WitDynamicEntities*) == 0x8);
    public:
    // Creating interface conversion operator: operator ::Meta::WitAi::Interfaces::IDynamicEntitiesProvider
    operator ::Meta::WitAi::Interfaces::IDynamicEntitiesProvider() noexcept {
      return *reinterpret_cast<::Meta::WitAi::Interfaces::IDynamicEntitiesProvider*>(this);
    }
    // Get static field: static private Meta.WitAi.Data.Entities.DynamicEntityKeywordRegistry instance
    static ::Meta::WitAi::Data::Entities::DynamicEntityKeywordRegistry* _get_instance();
    // Set static field: static private Meta.WitAi.Data.Entities.DynamicEntityKeywordRegistry instance
    static void _set_instance(::Meta::WitAi::Data::Entities::DynamicEntityKeywordRegistry* value);
    // Get instance field reference: private Meta.WitAi.Data.Entities.WitDynamicEntities entities
    [[deprecated("Use field access instead!")]] ::Meta::WitAi::Data::Entities::WitDynamicEntities*& dyn_entities();
    // static public System.Boolean get_HasDynamicEntityRegistry()
    // Offset: 0x446624C
    static bool get_HasDynamicEntityRegistry();
    // static public Meta.WitAi.Data.Entities.DynamicEntityKeywordRegistry get_Instance()
    // Offset: 0x44662AC
    static ::Meta::WitAi::Data::Entities::DynamicEntityKeywordRegistry* get_Instance();
    // private System.Void OnEnable()
    // Offset: 0x446637C
    void OnEnable();
    // private System.Void OnDisable()
    // Offset: 0x44663D4
    void OnDisable();
    // public System.Void RegisterDynamicEntity(System.String entity, Meta.WitAi.Data.Info.WitEntityKeywordInfo keyword)
    // Offset: 0x4466428
    void RegisterDynamicEntity(::StringW entity, ::Meta::WitAi::Data::Info::WitEntityKeywordInfo keyword);
    // public System.Void UnregisterDynamicEntity(System.String entity, Meta.WitAi.Data.Info.WitEntityKeywordInfo keyword)
    // Offset: 0x44666E8
    void UnregisterDynamicEntity(::StringW entity, ::Meta::WitAi::Data::Info::WitEntityKeywordInfo keyword);
    // public Meta.WitAi.Data.Entities.WitDynamicEntities GetDynamicEntities()
    // Offset: 0x44668C4
    ::Meta::WitAi::Data::Entities::WitDynamicEntities* GetDynamicEntities();
    // public System.Void .ctor()
    // Offset: 0x44668CC
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static DynamicEntityKeywordRegistry* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Data::Entities::DynamicEntityKeywordRegistry::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<DynamicEntityKeywordRegistry*, creationType>()));
    }
  }; // Meta.WitAi.Data.Entities.DynamicEntityKeywordRegistry
  #pragma pack(pop)
  static check_size<sizeof(DynamicEntityKeywordRegistry), 32 + sizeof(::Meta::WitAi::Data::Entities::WitDynamicEntities*)> __Meta_WitAi_Data_Entities_DynamicEntityKeywordRegistrySizeCheck;
  static_assert(sizeof(DynamicEntityKeywordRegistry) == 0x28);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Meta::WitAi::Data::Entities::DynamicEntityKeywordRegistry::get_HasDynamicEntityRegistry
// Il2CppName: get_HasDynamicEntityRegistry
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&Meta::WitAi::Data::Entities::DynamicEntityKeywordRegistry::get_HasDynamicEntityRegistry)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::Data::Entities::DynamicEntityKeywordRegistry*), "get_HasDynamicEntityRegistry", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::Data::Entities::DynamicEntityKeywordRegistry::get_Instance
// Il2CppName: get_Instance
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Meta::WitAi::Data::Entities::DynamicEntityKeywordRegistry* (*)()>(&Meta::WitAi::Data::Entities::DynamicEntityKeywordRegistry::get_Instance)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::Data::Entities::DynamicEntityKeywordRegistry*), "get_Instance", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::Data::Entities::DynamicEntityKeywordRegistry::OnEnable
// Il2CppName: OnEnable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Meta::WitAi::Data::Entities::DynamicEntityKeywordRegistry::*)()>(&Meta::WitAi::Data::Entities::DynamicEntityKeywordRegistry::OnEnable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::Data::Entities::DynamicEntityKeywordRegistry*), "OnEnable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::Data::Entities::DynamicEntityKeywordRegistry::OnDisable
// Il2CppName: OnDisable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Meta::WitAi::Data::Entities::DynamicEntityKeywordRegistry::*)()>(&Meta::WitAi::Data::Entities::DynamicEntityKeywordRegistry::OnDisable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::Data::Entities::DynamicEntityKeywordRegistry*), "OnDisable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::Data::Entities::DynamicEntityKeywordRegistry::RegisterDynamicEntity
// Il2CppName: RegisterDynamicEntity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Meta::WitAi::Data::Entities::DynamicEntityKeywordRegistry::*)(::StringW, ::Meta::WitAi::Data::Info::WitEntityKeywordInfo)>(&Meta::WitAi::Data::Entities::DynamicEntityKeywordRegistry::RegisterDynamicEntity)> {
  static const MethodInfo* get() {
    static auto* entity = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* keyword = &::il2cpp_utils::GetClassFromName("Meta.WitAi.Data.Info", "WitEntityKeywordInfo")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::Data::Entities::DynamicEntityKeywordRegistry*), "RegisterDynamicEntity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{entity, keyword});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::Data::Entities::DynamicEntityKeywordRegistry::UnregisterDynamicEntity
// Il2CppName: UnregisterDynamicEntity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Meta::WitAi::Data::Entities::DynamicEntityKeywordRegistry::*)(::StringW, ::Meta::WitAi::Data::Info::WitEntityKeywordInfo)>(&Meta::WitAi::Data::Entities::DynamicEntityKeywordRegistry::UnregisterDynamicEntity)> {
  static const MethodInfo* get() {
    static auto* entity = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* keyword = &::il2cpp_utils::GetClassFromName("Meta.WitAi.Data.Info", "WitEntityKeywordInfo")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::Data::Entities::DynamicEntityKeywordRegistry*), "UnregisterDynamicEntity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{entity, keyword});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::Data::Entities::DynamicEntityKeywordRegistry::GetDynamicEntities
// Il2CppName: GetDynamicEntities
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Meta::WitAi::Data::Entities::WitDynamicEntities* (Meta::WitAi::Data::Entities::DynamicEntityKeywordRegistry::*)()>(&Meta::WitAi::Data::Entities::DynamicEntityKeywordRegistry::GetDynamicEntities)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::Data::Entities::DynamicEntityKeywordRegistry*), "GetDynamicEntities", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::Data::Entities::DynamicEntityKeywordRegistry::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
