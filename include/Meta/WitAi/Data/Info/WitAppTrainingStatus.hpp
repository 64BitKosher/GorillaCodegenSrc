// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Enum
#include "System/Enum.hpp"
// Completed includes
// Type namespace: Meta.WitAi.Data.Info
namespace Meta::WitAi::Data::Info {
  // Forward declaring type: WitAppTrainingStatus
  struct WitAppTrainingStatus;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::Meta::WitAi::Data::Info::WitAppTrainingStatus, "Meta.WitAi.Data.Info", "WitAppTrainingStatus");
// Type namespace: Meta.WitAi.Data.Info
namespace Meta::WitAi::Data::Info {
  // Size: 0x4
  #pragma pack(push, 1)
  // Autogenerated type: Meta.WitAi.Data.Info.WitAppTrainingStatus
  // [TokenAttribute] Offset: FFFFFFFF
  struct WitAppTrainingStatus/*, public ::System::Enum*/ {
    public:
    public:
    // public System.Int32 value__
    // Size: 0x4
    // Offset: 0x0
    int value;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Creating value type constructor for type: WitAppTrainingStatus
    constexpr WitAppTrainingStatus(int value_ = {}) noexcept : value{value_} {}
    // Creating interface conversion operator: operator ::System::Enum
    operator ::System::Enum() noexcept {
      return *reinterpret_cast<::System::Enum*>(this);
    }
    // Creating conversion operator: operator int
    constexpr operator int() const noexcept {
      return value;
    }
    // static field const value: static public Meta.WitAi.Data.Info.WitAppTrainingStatus Unknown
    static constexpr const int Unknown = 0;
    // Get static field: static public Meta.WitAi.Data.Info.WitAppTrainingStatus Unknown
    static ::Meta::WitAi::Data::Info::WitAppTrainingStatus _get_Unknown();
    // Set static field: static public Meta.WitAi.Data.Info.WitAppTrainingStatus Unknown
    static void _set_Unknown(::Meta::WitAi::Data::Info::WitAppTrainingStatus value);
    // static field const value: static public Meta.WitAi.Data.Info.WitAppTrainingStatus Done
    static constexpr const int Done = 1;
    // Get static field: static public Meta.WitAi.Data.Info.WitAppTrainingStatus Done
    static ::Meta::WitAi::Data::Info::WitAppTrainingStatus _get_Done();
    // Set static field: static public Meta.WitAi.Data.Info.WitAppTrainingStatus Done
    static void _set_Done(::Meta::WitAi::Data::Info::WitAppTrainingStatus value);
    // static field const value: static public Meta.WitAi.Data.Info.WitAppTrainingStatus Scheduled
    static constexpr const int Scheduled = 2;
    // Get static field: static public Meta.WitAi.Data.Info.WitAppTrainingStatus Scheduled
    static ::Meta::WitAi::Data::Info::WitAppTrainingStatus _get_Scheduled();
    // Set static field: static public Meta.WitAi.Data.Info.WitAppTrainingStatus Scheduled
    static void _set_Scheduled(::Meta::WitAi::Data::Info::WitAppTrainingStatus value);
    // static field const value: static public Meta.WitAi.Data.Info.WitAppTrainingStatus Ongoing
    static constexpr const int Ongoing = 3;
    // Get static field: static public Meta.WitAi.Data.Info.WitAppTrainingStatus Ongoing
    static ::Meta::WitAi::Data::Info::WitAppTrainingStatus _get_Ongoing();
    // Set static field: static public Meta.WitAi.Data.Info.WitAppTrainingStatus Ongoing
    static void _set_Ongoing(::Meta::WitAi::Data::Info::WitAppTrainingStatus value);
    // Get instance field reference: public System.Int32 value__
    [[deprecated("Use field access instead!")]] int& dyn_value__();
  }; // Meta.WitAi.Data.Info.WitAppTrainingStatus
  #pragma pack(pop)
  static check_size<sizeof(WitAppTrainingStatus), 0 + sizeof(int)> __Meta_WitAi_Data_Info_WitAppTrainingStatusSizeCheck;
  static_assert(sizeof(WitAppTrainingStatus) == 0x4);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
