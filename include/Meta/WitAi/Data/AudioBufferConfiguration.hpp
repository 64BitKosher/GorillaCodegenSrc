// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Type namespace: Meta.WitAi.Data
namespace Meta::WitAi::Data {
  // Forward declaring type: AudioBufferConfiguration
  class AudioBufferConfiguration;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Meta::WitAi::Data::AudioBufferConfiguration);
DEFINE_IL2CPP_ARG_TYPE(::Meta::WitAi::Data::AudioBufferConfiguration*, "Meta.WitAi.Data", "AudioBufferConfiguration");
// Type namespace: Meta.WitAi.Data
namespace Meta::WitAi::Data {
  // Size: 0x18
  #pragma pack(push, 1)
  // Autogenerated type: Meta.WitAi.Data.AudioBufferConfiguration
  // [TokenAttribute] Offset: FFFFFFFF
  class AudioBufferConfiguration : public ::Il2CppObject {
    public:
    public:
    // public System.Int32 sampleLengthInMs
    // Size: 0x4
    // Offset: 0x10
    int sampleLengthInMs;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // public System.Single micBufferLengthInSeconds
    // Size: 0x4
    // Offset: 0x14
    float micBufferLengthInSeconds;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    public:
    // Get instance field reference: public System.Int32 sampleLengthInMs
    [[deprecated("Use field access instead!")]] int& dyn_sampleLengthInMs();
    // Get instance field reference: public System.Single micBufferLengthInSeconds
    [[deprecated("Use field access instead!")]] float& dyn_micBufferLengthInSeconds();
    // public System.Void .ctor()
    // Offset: 0x446568C
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static AudioBufferConfiguration* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Data::AudioBufferConfiguration::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<AudioBufferConfiguration*, creationType>()));
    }
  }; // Meta.WitAi.Data.AudioBufferConfiguration
  #pragma pack(pop)
  static check_size<sizeof(AudioBufferConfiguration), 20 + sizeof(float)> __Meta_WitAi_Data_AudioBufferConfigurationSizeCheck;
  static_assert(sizeof(AudioBufferConfiguration) == 0x18);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Meta::WitAi::Data::AudioBufferConfiguration::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
