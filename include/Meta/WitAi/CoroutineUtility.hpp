// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Meta::WitAi
namespace Meta::WitAi {
}
// Forward declaring namespace: System::Collections
namespace System::Collections {
  // Forward declaring type: IEnumerator
  class IEnumerator;
}
// Completed forward declares
// Type namespace: Meta.WitAi
namespace Meta::WitAi {
  // Forward declaring type: CoroutineUtility
  class CoroutineUtility;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Meta::WitAi::CoroutineUtility);
DEFINE_IL2CPP_ARG_TYPE(::Meta::WitAi::CoroutineUtility*, "Meta.WitAi", "CoroutineUtility");
// Type namespace: Meta.WitAi
namespace Meta::WitAi {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: Meta.WitAi.CoroutineUtility
  // [TokenAttribute] Offset: FFFFFFFF
  class CoroutineUtility : public ::Il2CppObject {
    public:
    // Nested type: ::Meta::WitAi::CoroutineUtility::CoroutinePerformer
    class CoroutinePerformer;
    // static public Meta.WitAi.CoroutineUtility/CoroutinePerformer StartCoroutine(System.Collections.IEnumerator asyncMethod, System.Boolean useUpdate)
    // Offset: 0x443F214
    static ::Meta::WitAi::CoroutineUtility::CoroutinePerformer* StartCoroutine(::System::Collections::IEnumerator* asyncMethod, bool useUpdate);
    // static private Meta.WitAi.CoroutineUtility/CoroutinePerformer GetPerformer()
    // Offset: 0x443F250
    static ::Meta::WitAi::CoroutineUtility::CoroutinePerformer* GetPerformer();
  }; // Meta.WitAi.CoroutineUtility
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Meta::WitAi::CoroutineUtility::StartCoroutine
// Il2CppName: StartCoroutine
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Meta::WitAi::CoroutineUtility::CoroutinePerformer* (*)(::System::Collections::IEnumerator*, bool)>(&Meta::WitAi::CoroutineUtility::StartCoroutine)> {
  static const MethodInfo* get() {
    static auto* asyncMethod = &::il2cpp_utils::GetClassFromName("System.Collections", "IEnumerator")->byval_arg;
    static auto* useUpdate = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::CoroutineUtility*), "StartCoroutine", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{asyncMethod, useUpdate});
  }
};
// Writing MetadataGetter for method: Meta::WitAi::CoroutineUtility::GetPerformer
// Il2CppName: GetPerformer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Meta::WitAi::CoroutineUtility::CoroutinePerformer* (*)()>(&Meta::WitAi::CoroutineUtility::GetPerformer)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Meta::WitAi::CoroutineUtility*), "GetPerformer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
