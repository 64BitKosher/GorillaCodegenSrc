// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Meta::Conduit
namespace Meta::Conduit {
  // Forward declaring type: ManifestEntity
  class ManifestEntity;
  // Forward declaring type: ManifestAction
  class ManifestAction;
  // Forward declaring type: ManifestErrorHandler
  class ManifestErrorHandler;
  // Forward declaring type: InvocationContext
  class InvocationContext;
  // Forward declaring type: IManifestMethod
  class IManifestMethod;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
  // Forward declaring type: Dictionary`2<TKey, TValue>
  template<typename TKey, typename TValue>
  class Dictionary_2;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Type
  class Type;
  // Forward declaring type: Tuple`2<T1, T2>
  template<typename T1, typename T2>
  class Tuple_2;
}
// Forward declaring namespace: System::Reflection
namespace System::Reflection {
  // Forward declaring type: MethodInfo
  class MethodInfo;
}
// Completed forward declares
// Type namespace: Meta.Conduit
namespace Meta::Conduit {
  // Forward declaring type: Manifest
  class Manifest;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Meta::Conduit::Manifest);
DEFINE_IL2CPP_ARG_TYPE(::Meta::Conduit::Manifest*, "Meta.Conduit", "Manifest");
// Type namespace: Meta.Conduit
namespace Meta::Conduit {
  // Size: 0x50
  #pragma pack(push, 1)
  // Autogenerated type: Meta.Conduit.Manifest
  // [TokenAttribute] Offset: FFFFFFFF
  class Manifest : public ::Il2CppObject {
    public:
    // Nested type: ::Meta::Conduit::Manifest::$$c
    class $$c;
    public:
    // private System.String <ID>k__BackingField
    // Size: 0x8
    // Offset: 0x10
    ::StringW _ID;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private System.String <Version>k__BackingField
    // Size: 0x8
    // Offset: 0x18
    ::StringW Version;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private System.String <Domain>k__BackingField
    // Size: 0x8
    // Offset: 0x20
    ::StringW Domain;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private System.Collections.Generic.List`1<Meta.Conduit.ManifestEntity> <Entities>k__BackingField
    // Size: 0x8
    // Offset: 0x28
    ::System::Collections::Generic::List_1<::Meta::Conduit::ManifestEntity*>* Entities;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::Meta::Conduit::ManifestEntity*>*) == 0x8);
    // private System.Collections.Generic.List`1<Meta.Conduit.ManifestAction> <Actions>k__BackingField
    // Size: 0x8
    // Offset: 0x30
    ::System::Collections::Generic::List_1<::Meta::Conduit::ManifestAction*>* Actions;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::Meta::Conduit::ManifestAction*>*) == 0x8);
    // public System.Collections.Generic.List`1<Meta.Conduit.ManifestErrorHandler> ErrorHandlers
    // Size: 0x8
    // Offset: 0x38
    ::System::Collections::Generic::List_1<::Meta::Conduit::ManifestErrorHandler*>* ErrorHandlers;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::Meta::Conduit::ManifestErrorHandler*>*) == 0x8);
    // private readonly System.Collections.Generic.Dictionary`2<System.String,System.Collections.Generic.List`1<Meta.Conduit.InvocationContext>> _methodLookup
    // Size: 0x8
    // Offset: 0x40
    ::System::Collections::Generic::Dictionary_2<::StringW, ::System::Collections::Generic::List_1<::Meta::Conduit::InvocationContext*>*>* methodLookup;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::Dictionary_2<::StringW, ::System::Collections::Generic::List_1<::Meta::Conduit::InvocationContext*>*>*) == 0x8);
    // private readonly System.Collections.Generic.Dictionary`2<System.String,System.Type> <CustomEntityTypes>k__BackingField
    // Size: 0x8
    // Offset: 0x48
    ::System::Collections::Generic::Dictionary_2<::StringW, ::System::Type*>* CustomEntityTypes;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::Dictionary_2<::StringW, ::System::Type*>*) == 0x8);
    public:
    // Get static field: static public System.Collections.Generic.List`1<System.String> WitResponseMatcherIntents
    static ::System::Collections::Generic::List_1<::StringW>* _get_WitResponseMatcherIntents();
    // Set static field: static public System.Collections.Generic.List`1<System.String> WitResponseMatcherIntents
    static void _set_WitResponseMatcherIntents(::System::Collections::Generic::List_1<::StringW>* value);
    // Get instance field reference: private System.String <ID>k__BackingField
    [[deprecated("Use field access instead!")]] ::StringW& dyn_$ID$k__BackingField();
    // Get instance field reference: private System.String <Version>k__BackingField
    [[deprecated("Use field access instead!")]] ::StringW& dyn_$Version$k__BackingField();
    // Get instance field reference: private System.String <Domain>k__BackingField
    [[deprecated("Use field access instead!")]] ::StringW& dyn_$Domain$k__BackingField();
    // Get instance field reference: private System.Collections.Generic.List`1<Meta.Conduit.ManifestEntity> <Entities>k__BackingField
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Meta::Conduit::ManifestEntity*>*& dyn_$Entities$k__BackingField();
    // Get instance field reference: private System.Collections.Generic.List`1<Meta.Conduit.ManifestAction> <Actions>k__BackingField
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Meta::Conduit::ManifestAction*>*& dyn_$Actions$k__BackingField();
    // Get instance field reference: public System.Collections.Generic.List`1<Meta.Conduit.ManifestErrorHandler> ErrorHandlers
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Meta::Conduit::ManifestErrorHandler*>*& dyn_ErrorHandlers();
    // Get instance field reference: private readonly System.Collections.Generic.Dictionary`2<System.String,System.Collections.Generic.List`1<Meta.Conduit.InvocationContext>> _methodLookup
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::StringW, ::System::Collections::Generic::List_1<::Meta::Conduit::InvocationContext*>*>*& dyn__methodLookup();
    // Get instance field reference: private readonly System.Collections.Generic.Dictionary`2<System.String,System.Type> <CustomEntityTypes>k__BackingField
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::StringW, ::System::Type*>*& dyn_$CustomEntityTypes$k__BackingField();
    // public System.Void .ctor()
    // Offset: 0x441CCE0
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static Manifest* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::Manifest::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<Manifest*, creationType>()));
    }
    // public System.String get_ID()
    // Offset: 0x441CF0C
    ::StringW get_ID();
    // public System.Void set_ID(System.String value)
    // Offset: 0x441CF14
    void set_ID(::StringW value);
    // public System.String get_Version()
    // Offset: 0x441CF1C
    ::StringW get_Version();
    // public System.Void set_Version(System.String value)
    // Offset: 0x441CF24
    void set_Version(::StringW value);
    // public System.String get_Domain()
    // Offset: 0x441CF2C
    ::StringW get_Domain();
    // public System.Void set_Domain(System.String value)
    // Offset: 0x441CF34
    void set_Domain(::StringW value);
    // public System.Collections.Generic.List`1<Meta.Conduit.ManifestEntity> get_Entities()
    // Offset: 0x441CF3C
    ::System::Collections::Generic::List_1<::Meta::Conduit::ManifestEntity*>* get_Entities();
    // public System.Void set_Entities(System.Collections.Generic.List`1<Meta.Conduit.ManifestEntity> value)
    // Offset: 0x441CF44
    void set_Entities(::System::Collections::Generic::List_1<::Meta::Conduit::ManifestEntity*>* value);
    // public System.Collections.Generic.List`1<Meta.Conduit.ManifestAction> get_Actions()
    // Offset: 0x441CF4C
    ::System::Collections::Generic::List_1<::Meta::Conduit::ManifestAction*>* get_Actions();
    // public System.Void set_Actions(System.Collections.Generic.List`1<Meta.Conduit.ManifestAction> value)
    // Offset: 0x441CF54
    void set_Actions(::System::Collections::Generic::List_1<::Meta::Conduit::ManifestAction*>* value);
    // public System.Collections.Generic.Dictionary`2<System.String,System.Type> get_CustomEntityTypes()
    // Offset: 0x441CF5C
    ::System::Collections::Generic::Dictionary_2<::StringW, ::System::Type*>* get_CustomEntityTypes();
    // public System.Boolean ResolveEntities()
    // Offset: 0x441CF64
    bool ResolveEntities();
    // public System.Tuple`2<System.Reflection.MethodInfo,System.Type> GetMethodInfo(Meta.Conduit.IManifestMethod action)
    // Offset: 0x441D234
    ::System::Tuple_2<::System::Reflection::MethodInfo*, ::System::Type*>* GetMethodInfo(::Meta::Conduit::IManifestMethod* action);
    // private System.Boolean ResolveAllActions()
    // Offset: 0x441D938
    bool ResolveAllActions();
    // private System.Boolean ResolveErrorHandlers()
    // Offset: 0x441E2D0
    bool ResolveErrorHandlers();
    // public System.Boolean ResolveActions()
    // Offset: 0x441ECB4
    bool ResolveActions();
    // private System.Reflection.MethodInfo GetBestMethodMatch(System.Type targetType, System.String method, System.Type[] parameterTypes)
    // Offset: 0x441D904
    ::System::Reflection::MethodInfo* GetBestMethodMatch(::System::Type* targetType, ::StringW method, ::ArrayW<::System::Type*> parameterTypes);
    // public System.Boolean ContainsAction(System.String action)
    // Offset: 0x441A800
    bool ContainsAction(::StringW action);
    // public System.Collections.Generic.List`1<Meta.Conduit.InvocationContext> GetInvocationContexts(System.String actionId)
    // Offset: 0x441AA4C
    ::System::Collections::Generic::List_1<::Meta::Conduit::InvocationContext*>* GetInvocationContexts(::StringW actionId);
    // public System.Collections.Generic.List`1<Meta.Conduit.InvocationContext> GetErrorHandlerContexts()
    // Offset: 0x441B568
    ::System::Collections::Generic::List_1<::Meta::Conduit::InvocationContext*>* GetErrorHandlerContexts();
    // static private System.Void .cctor()
    // Offset: 0x441ED50
    static void _cctor();
    // public override System.String ToString()
    // Offset: 0x441ECDC
    // Implemented from: System.Object
    // Base method: System.String Object::ToString()
    ::StringW ToString();
  }; // Meta.Conduit.Manifest
  #pragma pack(pop)
  static check_size<sizeof(Manifest), 72 + sizeof(::System::Collections::Generic::Dictionary_2<::StringW, ::System::Type*>*)> __Meta_Conduit_ManifestSizeCheck;
  static_assert(sizeof(Manifest) == 0x50);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Meta::Conduit::Manifest::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: Meta::Conduit::Manifest::get_ID
// Il2CppName: get_ID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (Meta::Conduit::Manifest::*)()>(&Meta::Conduit::Manifest::get_ID)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Meta::Conduit::Manifest*), "get_ID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Meta::Conduit::Manifest::set_ID
// Il2CppName: set_ID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Meta::Conduit::Manifest::*)(::StringW)>(&Meta::Conduit::Manifest::set_ID)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::Conduit::Manifest*), "set_ID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Meta::Conduit::Manifest::get_Version
// Il2CppName: get_Version
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (Meta::Conduit::Manifest::*)()>(&Meta::Conduit::Manifest::get_Version)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Meta::Conduit::Manifest*), "get_Version", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Meta::Conduit::Manifest::set_Version
// Il2CppName: set_Version
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Meta::Conduit::Manifest::*)(::StringW)>(&Meta::Conduit::Manifest::set_Version)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::Conduit::Manifest*), "set_Version", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Meta::Conduit::Manifest::get_Domain
// Il2CppName: get_Domain
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (Meta::Conduit::Manifest::*)()>(&Meta::Conduit::Manifest::get_Domain)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Meta::Conduit::Manifest*), "get_Domain", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Meta::Conduit::Manifest::set_Domain
// Il2CppName: set_Domain
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Meta::Conduit::Manifest::*)(::StringW)>(&Meta::Conduit::Manifest::set_Domain)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::Conduit::Manifest*), "set_Domain", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Meta::Conduit::Manifest::get_Entities
// Il2CppName: get_Entities
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::List_1<::Meta::Conduit::ManifestEntity*>* (Meta::Conduit::Manifest::*)()>(&Meta::Conduit::Manifest::get_Entities)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Meta::Conduit::Manifest*), "get_Entities", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Meta::Conduit::Manifest::set_Entities
// Il2CppName: set_Entities
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Meta::Conduit::Manifest::*)(::System::Collections::Generic::List_1<::Meta::Conduit::ManifestEntity*>*)>(&Meta::Conduit::Manifest::set_Entities)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("Meta.Conduit", "ManifestEntity")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::Conduit::Manifest*), "set_Entities", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Meta::Conduit::Manifest::get_Actions
// Il2CppName: get_Actions
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::List_1<::Meta::Conduit::ManifestAction*>* (Meta::Conduit::Manifest::*)()>(&Meta::Conduit::Manifest::get_Actions)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Meta::Conduit::Manifest*), "get_Actions", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Meta::Conduit::Manifest::set_Actions
// Il2CppName: set_Actions
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Meta::Conduit::Manifest::*)(::System::Collections::Generic::List_1<::Meta::Conduit::ManifestAction*>*)>(&Meta::Conduit::Manifest::set_Actions)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("Meta.Conduit", "ManifestAction")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::Conduit::Manifest*), "set_Actions", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Meta::Conduit::Manifest::get_CustomEntityTypes
// Il2CppName: get_CustomEntityTypes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::Dictionary_2<::StringW, ::System::Type*>* (Meta::Conduit::Manifest::*)()>(&Meta::Conduit::Manifest::get_CustomEntityTypes)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Meta::Conduit::Manifest*), "get_CustomEntityTypes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Meta::Conduit::Manifest::ResolveEntities
// Il2CppName: ResolveEntities
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Meta::Conduit::Manifest::*)()>(&Meta::Conduit::Manifest::ResolveEntities)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Meta::Conduit::Manifest*), "ResolveEntities", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Meta::Conduit::Manifest::GetMethodInfo
// Il2CppName: GetMethodInfo
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Tuple_2<::System::Reflection::MethodInfo*, ::System::Type*>* (Meta::Conduit::Manifest::*)(::Meta::Conduit::IManifestMethod*)>(&Meta::Conduit::Manifest::GetMethodInfo)> {
  static const MethodInfo* get() {
    static auto* action = &::il2cpp_utils::GetClassFromName("Meta.Conduit", "IManifestMethod")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::Conduit::Manifest*), "GetMethodInfo", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{action});
  }
};
// Writing MetadataGetter for method: Meta::Conduit::Manifest::ResolveAllActions
// Il2CppName: ResolveAllActions
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Meta::Conduit::Manifest::*)()>(&Meta::Conduit::Manifest::ResolveAllActions)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Meta::Conduit::Manifest*), "ResolveAllActions", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Meta::Conduit::Manifest::ResolveErrorHandlers
// Il2CppName: ResolveErrorHandlers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Meta::Conduit::Manifest::*)()>(&Meta::Conduit::Manifest::ResolveErrorHandlers)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Meta::Conduit::Manifest*), "ResolveErrorHandlers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Meta::Conduit::Manifest::ResolveActions
// Il2CppName: ResolveActions
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Meta::Conduit::Manifest::*)()>(&Meta::Conduit::Manifest::ResolveActions)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Meta::Conduit::Manifest*), "ResolveActions", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Meta::Conduit::Manifest::GetBestMethodMatch
// Il2CppName: GetBestMethodMatch
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Reflection::MethodInfo* (Meta::Conduit::Manifest::*)(::System::Type*, ::StringW, ::ArrayW<::System::Type*>)>(&Meta::Conduit::Manifest::GetBestMethodMatch)> {
  static const MethodInfo* get() {
    static auto* targetType = &::il2cpp_utils::GetClassFromName("System", "Type")->byval_arg;
    static auto* method = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* parameterTypes = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Type"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::Conduit::Manifest*), "GetBestMethodMatch", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{targetType, method, parameterTypes});
  }
};
// Writing MetadataGetter for method: Meta::Conduit::Manifest::ContainsAction
// Il2CppName: ContainsAction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Meta::Conduit::Manifest::*)(::StringW)>(&Meta::Conduit::Manifest::ContainsAction)> {
  static const MethodInfo* get() {
    static auto* action = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::Conduit::Manifest*), "ContainsAction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{action});
  }
};
// Writing MetadataGetter for method: Meta::Conduit::Manifest::GetInvocationContexts
// Il2CppName: GetInvocationContexts
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::List_1<::Meta::Conduit::InvocationContext*>* (Meta::Conduit::Manifest::*)(::StringW)>(&Meta::Conduit::Manifest::GetInvocationContexts)> {
  static const MethodInfo* get() {
    static auto* actionId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::Conduit::Manifest*), "GetInvocationContexts", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{actionId});
  }
};
// Writing MetadataGetter for method: Meta::Conduit::Manifest::GetErrorHandlerContexts
// Il2CppName: GetErrorHandlerContexts
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::List_1<::Meta::Conduit::InvocationContext*>* (Meta::Conduit::Manifest::*)()>(&Meta::Conduit::Manifest::GetErrorHandlerContexts)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Meta::Conduit::Manifest*), "GetErrorHandlerContexts", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Meta::Conduit::Manifest::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&Meta::Conduit::Manifest::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Meta::Conduit::Manifest*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Meta::Conduit::Manifest::ToString
// Il2CppName: ToString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (Meta::Conduit::Manifest::*)()>(&Meta::Conduit::Manifest::ToString)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Meta::Conduit::Manifest*), "ToString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
