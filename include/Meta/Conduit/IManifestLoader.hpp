// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Meta::Conduit
namespace Meta::Conduit {
  // Forward declaring type: Manifest
  class Manifest;
}
// Completed forward declares
// Type namespace: Meta.Conduit
namespace Meta::Conduit {
  // Forward declaring type: IManifestLoader
  class IManifestLoader;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Meta::Conduit::IManifestLoader);
DEFINE_IL2CPP_ARG_TYPE(::Meta::Conduit::IManifestLoader*, "Meta.Conduit", "IManifestLoader");
// Type namespace: Meta.Conduit
namespace Meta::Conduit {
  // Size: 0x0
  #pragma pack(push, 1)
  // Autogenerated type: Meta.Conduit.IManifestLoader
  // [TokenAttribute] Offset: FFFFFFFF
  class IManifestLoader {
    public:
    // public Meta.Conduit.Manifest LoadManifest(System.String filePath)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::Meta::Conduit::Manifest* LoadManifest(::StringW filePath);
    // public Meta.Conduit.Manifest LoadManifestFromString(System.String manifestText)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::Meta::Conduit::Manifest* LoadManifestFromString(::StringW manifestText);
  }; // Meta.Conduit.IManifestLoader
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Meta::Conduit::IManifestLoader::LoadManifest
// Il2CppName: LoadManifest
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Meta::Conduit::Manifest* (Meta::Conduit::IManifestLoader::*)(::StringW)>(&Meta::Conduit::IManifestLoader::LoadManifest)> {
  static const MethodInfo* get() {
    static auto* filePath = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::Conduit::IManifestLoader*), "LoadManifest", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{filePath});
  }
};
// Writing MetadataGetter for method: Meta::Conduit::IManifestLoader::LoadManifestFromString
// Il2CppName: LoadManifestFromString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Meta::Conduit::Manifest* (Meta::Conduit::IManifestLoader::*)(::StringW)>(&Meta::Conduit::IManifestLoader::LoadManifestFromString)> {
  static const MethodInfo* get() {
    static auto* manifestText = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::Conduit::IManifestLoader*), "LoadManifestFromString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{manifestText});
  }
};
