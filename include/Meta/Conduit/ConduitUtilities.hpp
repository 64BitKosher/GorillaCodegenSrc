// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Meta::Conduit
namespace Meta::Conduit {
}
// Forward declaring namespace: System::Text::RegularExpressions
namespace System::Text::RegularExpressions {
  // Forward declaring type: Regex
  class Regex;
}
// Completed forward declares
// Type namespace: Meta.Conduit
namespace Meta::Conduit {
  // Forward declaring type: ConduitUtilities
  class ConduitUtilities;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Meta::Conduit::ConduitUtilities);
DEFINE_IL2CPP_ARG_TYPE(::Meta::Conduit::ConduitUtilities*, "Meta.Conduit", "ConduitUtilities");
// Type namespace: Meta.Conduit
namespace Meta::Conduit {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: Meta.Conduit.ConduitUtilities
  // [TokenAttribute] Offset: FFFFFFFF
  class ConduitUtilities : public ::Il2CppObject {
    public:
    // Nested type: ::Meta::Conduit::ConduitUtilities::ProgressDelegate
    class ProgressDelegate;
    // Get static field: static private readonly System.Text.RegularExpressions.Regex UnderscoreSplitter
    static ::System::Text::RegularExpressions::Regex* _get_UnderscoreSplitter();
    // Set static field: static private readonly System.Text.RegularExpressions.Regex UnderscoreSplitter
    static void _set_UnderscoreSplitter(::System::Text::RegularExpressions::Regex* value);
    // static public System.String DelimitWithUnderscores(System.String input)
    // Offset: 0x441C4A0
    static ::StringW DelimitWithUnderscores(::StringW input);
    // static public System.Boolean ContainsIgnoringWhitespace(System.String stringToSearch, System.String value)
    // Offset: 0x441C524
    static bool ContainsIgnoringWhitespace(::StringW stringToSearch, ::StringW value);
    // static private System.String StripWhiteSpace(System.String input)
    // Offset: 0x441C5A8
    static ::StringW StripWhiteSpace(::StringW input);
    // static public System.String GetEntityEnumName(System.String entityRole)
    // Offset: 0x441C69C
    static ::StringW GetEntityEnumName(::StringW entityRole);
    // static public System.String GetEntityEnumValue(System.String entityValue)
    // Offset: 0x441C7D4
    static ::StringW GetEntityEnumValue(::StringW entityValue);
    // static public System.String SanitizeName(System.String input)
    // Offset: 0x441C6F0
    static ::StringW SanitizeName(::StringW input);
    // static public System.String SanitizeString(System.String input)
    // Offset: 0x441C828
    static ::StringW SanitizeString(::StringW input);
    // static private System.Void .cctor()
    // Offset: 0x441C960
    static void _cctor();
  }; // Meta.Conduit.ConduitUtilities
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Meta::Conduit::ConduitUtilities::DelimitWithUnderscores
// Il2CppName: DelimitWithUnderscores
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::StringW)>(&Meta::Conduit::ConduitUtilities::DelimitWithUnderscores)> {
  static const MethodInfo* get() {
    static auto* input = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::Conduit::ConduitUtilities*), "DelimitWithUnderscores", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{input});
  }
};
// Writing MetadataGetter for method: Meta::Conduit::ConduitUtilities::ContainsIgnoringWhitespace
// Il2CppName: ContainsIgnoringWhitespace
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::StringW, ::StringW)>(&Meta::Conduit::ConduitUtilities::ContainsIgnoringWhitespace)> {
  static const MethodInfo* get() {
    static auto* stringToSearch = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::Conduit::ConduitUtilities*), "ContainsIgnoringWhitespace", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stringToSearch, value});
  }
};
// Writing MetadataGetter for method: Meta::Conduit::ConduitUtilities::StripWhiteSpace
// Il2CppName: StripWhiteSpace
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::StringW)>(&Meta::Conduit::ConduitUtilities::StripWhiteSpace)> {
  static const MethodInfo* get() {
    static auto* input = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::Conduit::ConduitUtilities*), "StripWhiteSpace", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{input});
  }
};
// Writing MetadataGetter for method: Meta::Conduit::ConduitUtilities::GetEntityEnumName
// Il2CppName: GetEntityEnumName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::StringW)>(&Meta::Conduit::ConduitUtilities::GetEntityEnumName)> {
  static const MethodInfo* get() {
    static auto* entityRole = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::Conduit::ConduitUtilities*), "GetEntityEnumName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{entityRole});
  }
};
// Writing MetadataGetter for method: Meta::Conduit::ConduitUtilities::GetEntityEnumValue
// Il2CppName: GetEntityEnumValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::StringW)>(&Meta::Conduit::ConduitUtilities::GetEntityEnumValue)> {
  static const MethodInfo* get() {
    static auto* entityValue = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::Conduit::ConduitUtilities*), "GetEntityEnumValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{entityValue});
  }
};
// Writing MetadataGetter for method: Meta::Conduit::ConduitUtilities::SanitizeName
// Il2CppName: SanitizeName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::StringW)>(&Meta::Conduit::ConduitUtilities::SanitizeName)> {
  static const MethodInfo* get() {
    static auto* input = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::Conduit::ConduitUtilities*), "SanitizeName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{input});
  }
};
// Writing MetadataGetter for method: Meta::Conduit::ConduitUtilities::SanitizeString
// Il2CppName: SanitizeString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::StringW)>(&Meta::Conduit::ConduitUtilities::SanitizeString)> {
  static const MethodInfo* get() {
    static auto* input = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::Conduit::ConduitUtilities*), "SanitizeString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{input});
  }
};
// Writing MetadataGetter for method: Meta::Conduit::ConduitUtilities::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&Meta::Conduit::ConduitUtilities::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Meta::Conduit::ConduitUtilities*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
