// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Type
  class Type;
}
// Completed forward declares
// Begin il2cpp-utils forward declares
struct Il2CppObject;
// Completed il2cpp-utils forward declares
// Type namespace: Meta.Conduit
namespace Meta::Conduit {
  // Forward declaring type: ConduitParameterValue
  struct ConduitParameterValue;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::Meta::Conduit::ConduitParameterValue, "Meta.Conduit", "ConduitParameterValue");
// Type namespace: Meta.Conduit
namespace Meta::Conduit {
  // Size: 0x10
  #pragma pack(push, 1)
  // WARNING Layout: Sequential may not be correctly taken into account!
  // Autogenerated type: Meta.Conduit.ConduitParameterValue
  // [TokenAttribute] Offset: FFFFFFFF
  struct ConduitParameterValue/*, public ::System::ValueType*/ {
    public:
    public:
    // public readonly System.Object Value
    // Size: 0x8
    // Offset: 0x0
    ::Il2CppObject* Value;
    // Field size check
    static_assert(sizeof(::Il2CppObject*) == 0x8);
    // public System.Type DataType
    // Size: 0x8
    // Offset: 0x8
    ::System::Type* DataType;
    // Field size check
    static_assert(sizeof(::System::Type*) == 0x8);
    public:
    // Creating value type constructor for type: ConduitParameterValue
    constexpr ConduitParameterValue(::Il2CppObject* Value_ = {}, ::System::Type* DataType_ = {}) noexcept : Value{Value_}, DataType{DataType_} {}
    // Creating interface conversion operator: operator ::System::ValueType
    operator ::System::ValueType() noexcept {
      return *reinterpret_cast<::System::ValueType*>(this);
    }
    // Get instance field reference: public readonly System.Object Value
    [[deprecated("Use field access instead!")]] ::Il2CppObject*& dyn_Value();
    // Get instance field reference: public System.Type DataType
    [[deprecated("Use field access instead!")]] ::System::Type*& dyn_DataType();
    // public System.Void .ctor(System.Object value)
    // Offset: 0x441CB68
    ConduitParameterValue(::Il2CppObject* value);
    // public System.Void .ctor(System.Object value, System.Type dataType)
    // Offset: 0x441CBAC
    // ABORTED: conflicts with another method.  ConduitParameterValue(::Il2CppObject* value, ::System::Type* dataType);
  }; // Meta.Conduit.ConduitParameterValue
  #pragma pack(pop)
  static check_size<sizeof(ConduitParameterValue), 8 + sizeof(::System::Type*)> __Meta_Conduit_ConduitParameterValueSizeCheck;
  static_assert(sizeof(ConduitParameterValue) == 0x10);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Meta::Conduit::ConduitParameterValue::ConduitParameterValue
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: Meta::Conduit::ConduitParameterValue::ConduitParameterValue
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
