// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Forward declaring namespace: Meta::Conduit
namespace Meta::Conduit {
  // Forward declaring type: ManifestParameter
  class ManifestParameter;
}
// Completed forward declares
// Type namespace: Meta.Conduit
namespace Meta::Conduit {
  // Forward declaring type: IManifestMethod
  class IManifestMethod;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Meta::Conduit::IManifestMethod);
DEFINE_IL2CPP_ARG_TYPE(::Meta::Conduit::IManifestMethod*, "Meta.Conduit", "IManifestMethod");
// Type namespace: Meta.Conduit
namespace Meta::Conduit {
  // Size: 0x0
  #pragma pack(push, 1)
  // Autogenerated type: Meta.Conduit.IManifestMethod
  // [TokenAttribute] Offset: FFFFFFFF
  class IManifestMethod {
    public:
    // public System.String get_ID()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::StringW get_ID();
    // public System.Void set_ID(System.String value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void set_ID(::StringW value);
    // public System.Collections.Generic.List`1<Meta.Conduit.ManifestParameter> get_Parameters()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::System::Collections::Generic::List_1<::Meta::Conduit::ManifestParameter*>* get_Parameters();
    // public System.Void set_Parameters(System.Collections.Generic.List`1<Meta.Conduit.ManifestParameter> value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void set_Parameters(::System::Collections::Generic::List_1<::Meta::Conduit::ManifestParameter*>* value);
    // public System.String get_Assembly()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::StringW get_Assembly();
    // public System.Void set_Assembly(System.String value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void set_Assembly(::StringW value);
  }; // Meta.Conduit.IManifestMethod
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Meta::Conduit::IManifestMethod::get_ID
// Il2CppName: get_ID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (Meta::Conduit::IManifestMethod::*)()>(&Meta::Conduit::IManifestMethod::get_ID)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Meta::Conduit::IManifestMethod*), "get_ID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Meta::Conduit::IManifestMethod::set_ID
// Il2CppName: set_ID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Meta::Conduit::IManifestMethod::*)(::StringW)>(&Meta::Conduit::IManifestMethod::set_ID)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::Conduit::IManifestMethod*), "set_ID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Meta::Conduit::IManifestMethod::get_Parameters
// Il2CppName: get_Parameters
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::List_1<::Meta::Conduit::ManifestParameter*>* (Meta::Conduit::IManifestMethod::*)()>(&Meta::Conduit::IManifestMethod::get_Parameters)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Meta::Conduit::IManifestMethod*), "get_Parameters", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Meta::Conduit::IManifestMethod::set_Parameters
// Il2CppName: set_Parameters
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Meta::Conduit::IManifestMethod::*)(::System::Collections::Generic::List_1<::Meta::Conduit::ManifestParameter*>*)>(&Meta::Conduit::IManifestMethod::set_Parameters)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("Meta.Conduit", "ManifestParameter")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::Conduit::IManifestMethod*), "set_Parameters", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Meta::Conduit::IManifestMethod::get_Assembly
// Il2CppName: get_Assembly
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (Meta::Conduit::IManifestMethod::*)()>(&Meta::Conduit::IManifestMethod::get_Assembly)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Meta::Conduit::IManifestMethod*), "get_Assembly", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Meta::Conduit::IManifestMethod::set_Assembly
// Il2CppName: set_Assembly
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Meta::Conduit::IManifestMethod::*)(::StringW)>(&Meta::Conduit::IManifestMethod::set_Assembly)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::Conduit::IManifestMethod*), "set_Assembly", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
