// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/byref.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: IEnumerable`1<T>
  template<typename T>
  class IEnumerable_1;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Type
  class Type;
}
// Completed forward declares
// Begin il2cpp-utils forward declares
struct Il2CppObject;
// Completed il2cpp-utils forward declares
// Type namespace: Meta.Conduit
namespace Meta::Conduit {
  // Forward declaring type: IInstanceResolver
  class IInstanceResolver;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Meta::Conduit::IInstanceResolver);
DEFINE_IL2CPP_ARG_TYPE(::Meta::Conduit::IInstanceResolver*, "Meta.Conduit", "IInstanceResolver");
// Type namespace: Meta.Conduit
namespace Meta::Conduit {
  // Size: 0x0
  #pragma pack(push, 1)
  // Autogenerated type: Meta.Conduit.IInstanceResolver
  // [TokenAttribute] Offset: FFFFFFFF
  class IInstanceResolver {
    public:
    // public System.Collections.Generic.IEnumerable`1<System.Object> GetObjectsOfType(System.Type type)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::System::Collections::Generic::IEnumerable_1<::Il2CppObject*>* GetObjectsOfType(::System::Type* type);
  }; // Meta.Conduit.IInstanceResolver
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Meta::Conduit::IInstanceResolver::GetObjectsOfType
// Il2CppName: GetObjectsOfType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::IEnumerable_1<::Il2CppObject*>* (Meta::Conduit::IInstanceResolver::*)(::System::Type*)>(&Meta::Conduit::IInstanceResolver::GetObjectsOfType)> {
  static const MethodInfo* get() {
    static auto* type = &::il2cpp_utils::GetClassFromName("System", "Type")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Meta::Conduit::IInstanceResolver*), "GetObjectsOfType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{type});
  }
};
