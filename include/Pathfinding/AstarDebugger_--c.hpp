// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Pathfinding.AstarDebugger
#include "Pathfinding/AstarDebugger.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Func`1<TResult>
  template<typename TResult>
  class Func_1;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Pathfinding::AstarDebugger::$$c);
DEFINE_IL2CPP_ARG_TYPE(::Pathfinding::AstarDebugger::$$c*, "Pathfinding", "AstarDebugger/<>c");
// Type namespace: Pathfinding
namespace Pathfinding {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: Pathfinding.AstarDebugger/<>c
  // [TokenAttribute] Offset: FFFFFFFF
  // [CompilerGeneratedAttribute] Offset: FFFFFFFF
  class AstarDebugger::$$c : public ::Il2CppObject {
    public:
    // Get static field: static public readonly Pathfinding.AstarDebugger/<>c <>9
    static ::Pathfinding::AstarDebugger::$$c* _get_$$9();
    // Set static field: static public readonly Pathfinding.AstarDebugger/<>c <>9
    static void _set_$$9(::Pathfinding::AstarDebugger::$$c* value);
    // Get static field: static public System.Func`1<System.Int32> <>9__42_0
    static ::System::Func_1<int>* _get_$$9__42_0();
    // Set static field: static public System.Func`1<System.Int32> <>9__42_0
    static void _set_$$9__42_0(::System::Func_1<int>* value);
    // Get static field: static public System.Func`1<System.Int32> <>9__42_1
    static ::System::Func_1<int>* _get_$$9__42_1();
    // Set static field: static public System.Func`1<System.Int32> <>9__42_1
    static void _set_$$9__42_1(::System::Func_1<int>* value);
    // Get static field: static public System.Func`1<System.Int32> <>9__42_2
    static ::System::Func_1<int>* _get_$$9__42_2();
    // Set static field: static public System.Func`1<System.Int32> <>9__42_2
    static void _set_$$9__42_2(::System::Func_1<int>* value);
    // Get static field: static public System.Func`1<System.Int32> <>9__42_3
    static ::System::Func_1<int>* _get_$$9__42_3();
    // Set static field: static public System.Func`1<System.Int32> <>9__42_3
    static void _set_$$9__42_3(::System::Func_1<int>* value);
    // Get static field: static public System.Func`1<System.Int32> <>9__42_4
    static ::System::Func_1<int>* _get_$$9__42_4();
    // Set static field: static public System.Func`1<System.Int32> <>9__42_4
    static void _set_$$9__42_4(::System::Func_1<int>* value);
    // Get static field: static public System.Func`1<System.Int32> <>9__42_5
    static ::System::Func_1<int>* _get_$$9__42_5();
    // Set static field: static public System.Func`1<System.Int32> <>9__42_5
    static void _set_$$9__42_5(::System::Func_1<int>* value);
    // Get static field: static public System.Func`1<System.Int32> <>9__42_6
    static ::System::Func_1<int>* _get_$$9__42_6();
    // Set static field: static public System.Func`1<System.Int32> <>9__42_6
    static void _set_$$9__42_6(::System::Func_1<int>* value);
    // Get static field: static public System.Func`1<System.Int32> <>9__42_7
    static ::System::Func_1<int>* _get_$$9__42_7();
    // Set static field: static public System.Func`1<System.Int32> <>9__42_7
    static void _set_$$9__42_7(::System::Func_1<int>* value);
    // Get static field: static public System.Func`1<System.Int32> <>9__42_8
    static ::System::Func_1<int>* _get_$$9__42_8();
    // Set static field: static public System.Func`1<System.Int32> <>9__42_8
    static void _set_$$9__42_8(::System::Func_1<int>* value);
    // Get static field: static public System.Func`1<System.Int32> <>9__42_9
    static ::System::Func_1<int>* _get_$$9__42_9();
    // Set static field: static public System.Func`1<System.Int32> <>9__42_9
    static void _set_$$9__42_9(::System::Func_1<int>* value);
    // Get static field: static public System.Func`1<System.Int32> <>9__42_10
    static ::System::Func_1<int>* _get_$$9__42_10();
    // Set static field: static public System.Func`1<System.Int32> <>9__42_10
    static void _set_$$9__42_10(::System::Func_1<int>* value);
    // Get static field: static public System.Func`1<System.Int32> <>9__42_11
    static ::System::Func_1<int>* _get_$$9__42_11();
    // Set static field: static public System.Func`1<System.Int32> <>9__42_11
    static void _set_$$9__42_11(::System::Func_1<int>* value);
    // Get static field: static public System.Func`1<System.Int32> <>9__42_12
    static ::System::Func_1<int>* _get_$$9__42_12();
    // Set static field: static public System.Func`1<System.Int32> <>9__42_12
    static void _set_$$9__42_12(::System::Func_1<int>* value);
    // Get static field: static public System.Func`1<System.Int32> <>9__42_13
    static ::System::Func_1<int>* _get_$$9__42_13();
    // Set static field: static public System.Func`1<System.Int32> <>9__42_13
    static void _set_$$9__42_13(::System::Func_1<int>* value);
    // static private System.Void .cctor()
    // Offset: 0x29A6B50
    static void _cctor();
    // public System.Void .ctor()
    // Offset: 0x29A6BB8
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static AstarDebugger::$$c* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarDebugger::$$c::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<AstarDebugger::$$c*, creationType>()));
    }
    // System.Int32 <.ctor>b__42_0()
    // Offset: 0x29A6BC0
    int $_ctor$b__42_0();
    // System.Int32 <.ctor>b__42_1()
    // Offset: 0x29A6C64
    int $_ctor$b__42_1();
    // System.Int32 <.ctor>b__42_2()
    // Offset: 0x29A6D08
    int $_ctor$b__42_2();
    // System.Int32 <.ctor>b__42_3()
    // Offset: 0x29A6DAC
    int $_ctor$b__42_3();
    // System.Int32 <.ctor>b__42_4()
    // Offset: 0x29A6E50
    int $_ctor$b__42_4();
    // System.Int32 <.ctor>b__42_5()
    // Offset: 0x29A6EF4
    int $_ctor$b__42_5();
    // System.Int32 <.ctor>b__42_6()
    // Offset: 0x29A6F98
    int $_ctor$b__42_6();
    // System.Int32 <.ctor>b__42_7()
    // Offset: 0x29A703C
    int $_ctor$b__42_7();
    // System.Int32 <.ctor>b__42_8()
    // Offset: 0x29A70E0
    int $_ctor$b__42_8();
    // System.Int32 <.ctor>b__42_9()
    // Offset: 0x29A7184
    int $_ctor$b__42_9();
    // System.Int32 <.ctor>b__42_10()
    // Offset: 0x29A7228
    int $_ctor$b__42_10();
    // System.Int32 <.ctor>b__42_11()
    // Offset: 0x29A72CC
    int $_ctor$b__42_11();
    // System.Int32 <.ctor>b__42_12()
    // Offset: 0x29A7370
    int $_ctor$b__42_12();
    // System.Int32 <.ctor>b__42_13()
    // Offset: 0x29A7414
    int $_ctor$b__42_13();
  }; // Pathfinding.AstarDebugger/<>c
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Pathfinding::AstarDebugger::$$c::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&Pathfinding::AstarDebugger::$$c::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::AstarDebugger::$$c*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Pathfinding::AstarDebugger::$$c::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: Pathfinding::AstarDebugger::$$c::$_ctor$b__42_0
// Il2CppName: <.ctor>b__42_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Pathfinding::AstarDebugger::$$c::*)()>(&Pathfinding::AstarDebugger::$$c::$_ctor$b__42_0)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::AstarDebugger::$$c*), "<.ctor>b__42_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Pathfinding::AstarDebugger::$$c::$_ctor$b__42_1
// Il2CppName: <.ctor>b__42_1
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Pathfinding::AstarDebugger::$$c::*)()>(&Pathfinding::AstarDebugger::$$c::$_ctor$b__42_1)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::AstarDebugger::$$c*), "<.ctor>b__42_1", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Pathfinding::AstarDebugger::$$c::$_ctor$b__42_2
// Il2CppName: <.ctor>b__42_2
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Pathfinding::AstarDebugger::$$c::*)()>(&Pathfinding::AstarDebugger::$$c::$_ctor$b__42_2)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::AstarDebugger::$$c*), "<.ctor>b__42_2", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Pathfinding::AstarDebugger::$$c::$_ctor$b__42_3
// Il2CppName: <.ctor>b__42_3
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Pathfinding::AstarDebugger::$$c::*)()>(&Pathfinding::AstarDebugger::$$c::$_ctor$b__42_3)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::AstarDebugger::$$c*), "<.ctor>b__42_3", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Pathfinding::AstarDebugger::$$c::$_ctor$b__42_4
// Il2CppName: <.ctor>b__42_4
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Pathfinding::AstarDebugger::$$c::*)()>(&Pathfinding::AstarDebugger::$$c::$_ctor$b__42_4)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::AstarDebugger::$$c*), "<.ctor>b__42_4", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Pathfinding::AstarDebugger::$$c::$_ctor$b__42_5
// Il2CppName: <.ctor>b__42_5
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Pathfinding::AstarDebugger::$$c::*)()>(&Pathfinding::AstarDebugger::$$c::$_ctor$b__42_5)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::AstarDebugger::$$c*), "<.ctor>b__42_5", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Pathfinding::AstarDebugger::$$c::$_ctor$b__42_6
// Il2CppName: <.ctor>b__42_6
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Pathfinding::AstarDebugger::$$c::*)()>(&Pathfinding::AstarDebugger::$$c::$_ctor$b__42_6)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::AstarDebugger::$$c*), "<.ctor>b__42_6", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Pathfinding::AstarDebugger::$$c::$_ctor$b__42_7
// Il2CppName: <.ctor>b__42_7
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Pathfinding::AstarDebugger::$$c::*)()>(&Pathfinding::AstarDebugger::$$c::$_ctor$b__42_7)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::AstarDebugger::$$c*), "<.ctor>b__42_7", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Pathfinding::AstarDebugger::$$c::$_ctor$b__42_8
// Il2CppName: <.ctor>b__42_8
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Pathfinding::AstarDebugger::$$c::*)()>(&Pathfinding::AstarDebugger::$$c::$_ctor$b__42_8)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::AstarDebugger::$$c*), "<.ctor>b__42_8", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Pathfinding::AstarDebugger::$$c::$_ctor$b__42_9
// Il2CppName: <.ctor>b__42_9
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Pathfinding::AstarDebugger::$$c::*)()>(&Pathfinding::AstarDebugger::$$c::$_ctor$b__42_9)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::AstarDebugger::$$c*), "<.ctor>b__42_9", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Pathfinding::AstarDebugger::$$c::$_ctor$b__42_10
// Il2CppName: <.ctor>b__42_10
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Pathfinding::AstarDebugger::$$c::*)()>(&Pathfinding::AstarDebugger::$$c::$_ctor$b__42_10)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::AstarDebugger::$$c*), "<.ctor>b__42_10", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Pathfinding::AstarDebugger::$$c::$_ctor$b__42_11
// Il2CppName: <.ctor>b__42_11
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Pathfinding::AstarDebugger::$$c::*)()>(&Pathfinding::AstarDebugger::$$c::$_ctor$b__42_11)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::AstarDebugger::$$c*), "<.ctor>b__42_11", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Pathfinding::AstarDebugger::$$c::$_ctor$b__42_12
// Il2CppName: <.ctor>b__42_12
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Pathfinding::AstarDebugger::$$c::*)()>(&Pathfinding::AstarDebugger::$$c::$_ctor$b__42_12)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::AstarDebugger::$$c*), "<.ctor>b__42_12", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Pathfinding::AstarDebugger::$$c::$_ctor$b__42_13
// Il2CppName: <.ctor>b__42_13
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Pathfinding::AstarDebugger::$$c::*)()>(&Pathfinding::AstarDebugger::$$c::$_ctor$b__42_13)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::AstarDebugger::$$c*), "<.ctor>b__42_13", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
