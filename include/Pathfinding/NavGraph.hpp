// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Pathfinding.IGraphInternals
#include "Pathfinding/IGraphInternals.hpp"
// Including type: Pathfinding.Util.Guid
#include "Pathfinding/Util/Guid.hpp"
// Including type: UnityEngine.Matrix4x4
#include "UnityEngine/Matrix4x4.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Pathfinding
namespace Pathfinding {
  // Forward declaring type: GraphNode
  class GraphNode;
  // Forward declaring type: NNInfoInternal
  struct NNInfoInternal;
  // Forward declaring type: NNConstraint
  class NNConstraint;
}
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: AstarPath
  class AstarPath;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Func`2<T, TResult>
  template<typename T, typename TResult>
  class Func_2;
  // Forward declaring type: Action`1<T>
  template<typename T>
  class Action_1;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Vector3
  struct Vector3;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: IEnumerable`1<T>
  template<typename T>
  class IEnumerable_1;
}
// Forward declaring namespace: Pathfinding::Serialization
namespace Pathfinding::Serialization {
  // Forward declaring type: GraphSerializationContext
  class GraphSerializationContext;
}
// Forward declaring namespace: Pathfinding::Util
namespace Pathfinding::Util {
  // Forward declaring type: RetainedGizmos
  class RetainedGizmos;
}
// Completed forward declares
// Type namespace: Pathfinding
namespace Pathfinding {
  // Forward declaring type: NavGraph
  class NavGraph;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Pathfinding::NavGraph);
DEFINE_IL2CPP_ARG_TYPE(::Pathfinding::NavGraph*, "Pathfinding", "NavGraph");
// Type namespace: Pathfinding
namespace Pathfinding {
  // Size: 0xD0
  #pragma pack(push, 1)
  // Autogenerated type: Pathfinding.NavGraph
  // [TokenAttribute] Offset: FFFFFFFF
  class NavGraph : public ::Il2CppObject/*, public ::Pathfinding::IGraphInternals*/ {
    public:
    // Nested type: ::Pathfinding::NavGraph::$$c
    class $$c;
    // Nested type: ::Pathfinding::NavGraph::$$c__DisplayClass11_0
    class $$c__DisplayClass11_0;
    // Nested type: ::Pathfinding::NavGraph::$$c__DisplayClass12_0
    class $$c__DisplayClass12_0;
    // Nested type: ::Pathfinding::NavGraph::$$c__DisplayClass19_0
    class $$c__DisplayClass19_0;
    // Nested type: ::Pathfinding::NavGraph::$$c__DisplayClass22_0
    class $$c__DisplayClass22_0;
    // Nested type: ::Pathfinding::NavGraph::$$c__DisplayClass33_0
    class $$c__DisplayClass33_0;
    // Nested type: ::Pathfinding::NavGraph::$$c__DisplayClass34_0
    class $$c__DisplayClass34_0;
    public:
    // public AstarPath active
    // Size: 0x8
    // Offset: 0x10
    ::GlobalNamespace::AstarPath* active;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::AstarPath*) == 0x8);
    // public Pathfinding.Util.Guid guid
    // Size: 0x10
    // Offset: 0x18
    ::Pathfinding::Util::Guid guid;
    // Field size check
    static_assert(sizeof(::Pathfinding::Util::Guid) == 0x10);
    // public System.UInt32 initialPenalty
    // Size: 0x4
    // Offset: 0x28
    uint initialPenalty;
    // Field size check
    static_assert(sizeof(uint) == 0x4);
    // public System.Boolean open
    // Size: 0x1
    // Offset: 0x2C
    bool open;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: open and: graphIndex
    char __padding3[0x3] = {};
    // public System.UInt32 graphIndex
    // Size: 0x4
    // Offset: 0x30
    uint graphIndex;
    // Field size check
    static_assert(sizeof(uint) == 0x4);
    // Padding between fields: graphIndex and: name
    char __padding4[0x4] = {};
    // public System.String name
    // Size: 0x8
    // Offset: 0x38
    ::StringW name;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public System.Boolean drawGizmos
    // Size: 0x1
    // Offset: 0x40
    bool drawGizmos;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // public System.Boolean infoScreenOpen
    // Size: 0x1
    // Offset: 0x41
    bool infoScreenOpen;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: infoScreenOpen and: serializedEditorSettings
    char __padding7[0x6] = {};
    // private System.String serializedEditorSettings
    // Size: 0x8
    // Offset: 0x48
    ::StringW serializedEditorSettings;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public UnityEngine.Matrix4x4 matrix
    // Size: 0x40
    // Offset: 0x50
    ::UnityEngine::Matrix4x4 matrix;
    // Field size check
    static_assert(sizeof(::UnityEngine::Matrix4x4) == 0x40);
    // public UnityEngine.Matrix4x4 inverseMatrix
    // Size: 0x40
    // Offset: 0x90
    ::UnityEngine::Matrix4x4 inverseMatrix;
    // Field size check
    static_assert(sizeof(::UnityEngine::Matrix4x4) == 0x40);
    public:
    // Creating interface conversion operator: operator ::Pathfinding::IGraphInternals
    operator ::Pathfinding::IGraphInternals() noexcept {
      return *reinterpret_cast<::Pathfinding::IGraphInternals*>(this);
    }
    // Get instance field reference: public AstarPath active
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::AstarPath*& dyn_active();
    // Get instance field reference: public Pathfinding.Util.Guid guid
    [[deprecated("Use field access instead!")]] ::Pathfinding::Util::Guid& dyn_guid();
    // Get instance field reference: public System.UInt32 initialPenalty
    [[deprecated("Use field access instead!")]] uint& dyn_initialPenalty();
    // Get instance field reference: public System.Boolean open
    [[deprecated("Use field access instead!")]] bool& dyn_open();
    // Get instance field reference: public System.UInt32 graphIndex
    [[deprecated("Use field access instead!")]] uint& dyn_graphIndex();
    // Get instance field reference: public System.String name
    [[deprecated("Use field access instead!")]] ::StringW& dyn_name();
    // Get instance field reference: public System.Boolean drawGizmos
    [[deprecated("Use field access instead!")]] bool& dyn_drawGizmos();
    // Get instance field reference: public System.Boolean infoScreenOpen
    [[deprecated("Use field access instead!")]] bool& dyn_infoScreenOpen();
    // Get instance field reference: private System.String serializedEditorSettings
    [[deprecated("Use field access instead!")]] ::StringW& dyn_serializedEditorSettings();
    // Get instance field reference: public UnityEngine.Matrix4x4 matrix
    [[deprecated("Use field access instead!")]] ::UnityEngine::Matrix4x4& dyn_matrix();
    // Get instance field reference: public UnityEngine.Matrix4x4 inverseMatrix
    [[deprecated("Use field access instead!")]] ::UnityEngine::Matrix4x4& dyn_inverseMatrix();
    // System.Boolean get_exists()
    // Offset: 0x29BD34C
    bool get_exists();
    // public System.Int32 CountNodes()
    // Offset: 0x29BD3AC
    int CountNodes();
    // public System.Void GetNodes(System.Func`2<Pathfinding.GraphNode,System.Boolean> action)
    // Offset: 0x29BD46C
    void GetNodes(::System::Func_2<::Pathfinding::GraphNode*, bool>* action);
    // public System.Void GetNodes(System.Action`1<Pathfinding.GraphNode> action)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void GetNodes(::System::Action_1<::Pathfinding::GraphNode*>* action);
    // public System.Void SetMatrix(UnityEngine.Matrix4x4 m)
    // Offset: 0x29BD544
    void SetMatrix(::UnityEngine::Matrix4x4 m);
    // public System.Void RelocateNodes(UnityEngine.Matrix4x4 oldMatrix, UnityEngine.Matrix4x4 newMatrix)
    // Offset: 0x29BD594
    void RelocateNodes(::UnityEngine::Matrix4x4 oldMatrix, ::UnityEngine::Matrix4x4 newMatrix);
    // protected System.Void AssertSafeToUpdateGraph()
    // Offset: 0x29BD638
    void AssertSafeToUpdateGraph();
    // public System.Void RelocateNodes(UnityEngine.Matrix4x4 deltaMatrix)
    // Offset: 0x29BD6B8
    void RelocateNodes(::UnityEngine::Matrix4x4 deltaMatrix);
    // public Pathfinding.NNInfoInternal GetNearest(UnityEngine.Vector3 position)
    // Offset: 0x29BD7A0
    ::Pathfinding::NNInfoInternal GetNearest(::UnityEngine::Vector3 position);
    // public Pathfinding.NNInfoInternal GetNearest(UnityEngine.Vector3 position, Pathfinding.NNConstraint constraint)
    // Offset: 0x29BD828
    ::Pathfinding::NNInfoInternal GetNearest(::UnityEngine::Vector3 position, ::Pathfinding::NNConstraint* constraint);
    // public Pathfinding.NNInfoInternal GetNearest(UnityEngine.Vector3 position, Pathfinding.NNConstraint constraint, Pathfinding.GraphNode hint)
    // Offset: 0x29BD86C
    ::Pathfinding::NNInfoInternal GetNearest(::UnityEngine::Vector3 position, ::Pathfinding::NNConstraint* constraint, ::Pathfinding::GraphNode* hint);
    // public Pathfinding.NNInfoInternal GetNearestForce(UnityEngine.Vector3 position, Pathfinding.NNConstraint constraint)
    // Offset: 0x29BDAA8
    ::Pathfinding::NNInfoInternal GetNearestForce(::UnityEngine::Vector3 position, ::Pathfinding::NNConstraint* constraint);
    // protected System.Void OnDestroy()
    // Offset: 0x29BDAEC
    void OnDestroy();
    // protected System.Void DestroyAllNodes()
    // Offset: 0x29BDAFC
    void DestroyAllNodes();
    // public System.Void ScanGraph()
    // Offset: 0x29BDBF0
    void ScanGraph();
    // public System.Void Scan()
    // Offset: 0x29BDBF4
    void Scan();
    // protected System.Collections.Generic.IEnumerable`1<Pathfinding.Progress> ScanInternal()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::System::Collections::Generic::IEnumerable_1<::Pathfinding::Progress>* ScanInternal();
    // protected System.Void SerializeExtraInfo(Pathfinding.Serialization.GraphSerializationContext ctx)
    // Offset: 0x29BDC14
    void SerializeExtraInfo(::Pathfinding::Serialization::GraphSerializationContext* ctx);
    // protected System.Void DeserializeExtraInfo(Pathfinding.Serialization.GraphSerializationContext ctx)
    // Offset: 0x29BDC18
    void DeserializeExtraInfo(::Pathfinding::Serialization::GraphSerializationContext* ctx);
    // protected System.Void PostDeserialization(Pathfinding.Serialization.GraphSerializationContext ctx)
    // Offset: 0x29BDC1C
    void PostDeserialization(::Pathfinding::Serialization::GraphSerializationContext* ctx);
    // protected System.Void DeserializeSettingsCompatibility(Pathfinding.Serialization.GraphSerializationContext ctx)
    // Offset: 0x29BDC20
    void DeserializeSettingsCompatibility(::Pathfinding::Serialization::GraphSerializationContext* ctx);
    // public System.Void OnDrawGizmos(Pathfinding.Util.RetainedGizmos gizmos, System.Boolean drawNodes)
    // Offset: 0x29BDD1C
    void OnDrawGizmos(::Pathfinding::Util::RetainedGizmos* gizmos, bool drawNodes);
    // protected System.Void DrawUnwalkableNodes(System.Single size)
    // Offset: 0x29BE03C
    void DrawUnwalkableNodes(float size);
    // private System.String Pathfinding.IGraphInternals.get_SerializedEditorSettings()
    // Offset: 0x29BE144
    ::StringW Pathfinding_IGraphInternals_get_SerializedEditorSettings();
    // private System.Void Pathfinding.IGraphInternals.set_SerializedEditorSettings(System.String value)
    // Offset: 0x29BE14C
    void Pathfinding_IGraphInternals_set_SerializedEditorSettings(::StringW value);
    // private System.Void Pathfinding.IGraphInternals.OnDestroy()
    // Offset: 0x29BE154
    void Pathfinding_IGraphInternals_OnDestroy();
    // private System.Void Pathfinding.IGraphInternals.DestroyAllNodes()
    // Offset: 0x29BE164
    void Pathfinding_IGraphInternals_DestroyAllNodes();
    // private System.Collections.Generic.IEnumerable`1<Pathfinding.Progress> Pathfinding.IGraphInternals.ScanInternal()
    // Offset: 0x29BE174
    ::System::Collections::Generic::IEnumerable_1<::Pathfinding::Progress>* Pathfinding_IGraphInternals_ScanInternal();
    // private System.Void Pathfinding.IGraphInternals.SerializeExtraInfo(Pathfinding.Serialization.GraphSerializationContext ctx)
    // Offset: 0x29BE184
    void Pathfinding_IGraphInternals_SerializeExtraInfo(::Pathfinding::Serialization::GraphSerializationContext* ctx);
    // private System.Void Pathfinding.IGraphInternals.DeserializeExtraInfo(Pathfinding.Serialization.GraphSerializationContext ctx)
    // Offset: 0x29BE194
    void Pathfinding_IGraphInternals_DeserializeExtraInfo(::Pathfinding::Serialization::GraphSerializationContext* ctx);
    // private System.Void Pathfinding.IGraphInternals.PostDeserialization(Pathfinding.Serialization.GraphSerializationContext ctx)
    // Offset: 0x29BE1A4
    void Pathfinding_IGraphInternals_PostDeserialization(::Pathfinding::Serialization::GraphSerializationContext* ctx);
    // private System.Void Pathfinding.IGraphInternals.DeserializeSettingsCompatibility(Pathfinding.Serialization.GraphSerializationContext ctx)
    // Offset: 0x29BE1B4
    void Pathfinding_IGraphInternals_DeserializeSettingsCompatibility(::Pathfinding::Serialization::GraphSerializationContext* ctx);
    // protected System.Void .ctor()
    // Offset: 0x29BE1C4
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static NavGraph* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavGraph::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<NavGraph*, creationType>()));
    }
  }; // Pathfinding.NavGraph
  #pragma pack(pop)
  static check_size<sizeof(NavGraph), 144 + sizeof(::UnityEngine::Matrix4x4)> __Pathfinding_NavGraphSizeCheck;
  static_assert(sizeof(NavGraph) == 0xD0);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Pathfinding::NavGraph::get_exists
// Il2CppName: get_exists
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Pathfinding::NavGraph::*)()>(&Pathfinding::NavGraph::get_exists)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::NavGraph*), "get_exists", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Pathfinding::NavGraph::CountNodes
// Il2CppName: CountNodes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Pathfinding::NavGraph::*)()>(&Pathfinding::NavGraph::CountNodes)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::NavGraph*), "CountNodes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Pathfinding::NavGraph::GetNodes
// Il2CppName: GetNodes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Pathfinding::NavGraph::*)(::System::Func_2<::Pathfinding::GraphNode*, bool>*)>(&Pathfinding::NavGraph::GetNodes)> {
  static const MethodInfo* get() {
    static auto* action = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Func`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("Pathfinding", "GraphNode"), ::il2cpp_utils::GetClassFromName("System", "Boolean")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::NavGraph*), "GetNodes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{action});
  }
};
// Writing MetadataGetter for method: Pathfinding::NavGraph::GetNodes
// Il2CppName: GetNodes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Pathfinding::NavGraph::*)(::System::Action_1<::Pathfinding::GraphNode*>*)>(&Pathfinding::NavGraph::GetNodes)> {
  static const MethodInfo* get() {
    static auto* action = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("Pathfinding", "GraphNode")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::NavGraph*), "GetNodes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{action});
  }
};
// Writing MetadataGetter for method: Pathfinding::NavGraph::SetMatrix
// Il2CppName: SetMatrix
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Pathfinding::NavGraph::*)(::UnityEngine::Matrix4x4)>(&Pathfinding::NavGraph::SetMatrix)> {
  static const MethodInfo* get() {
    static auto* m = &::il2cpp_utils::GetClassFromName("UnityEngine", "Matrix4x4")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::NavGraph*), "SetMatrix", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{m});
  }
};
// Writing MetadataGetter for method: Pathfinding::NavGraph::RelocateNodes
// Il2CppName: RelocateNodes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Pathfinding::NavGraph::*)(::UnityEngine::Matrix4x4, ::UnityEngine::Matrix4x4)>(&Pathfinding::NavGraph::RelocateNodes)> {
  static const MethodInfo* get() {
    static auto* oldMatrix = &::il2cpp_utils::GetClassFromName("UnityEngine", "Matrix4x4")->byval_arg;
    static auto* newMatrix = &::il2cpp_utils::GetClassFromName("UnityEngine", "Matrix4x4")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::NavGraph*), "RelocateNodes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{oldMatrix, newMatrix});
  }
};
// Writing MetadataGetter for method: Pathfinding::NavGraph::AssertSafeToUpdateGraph
// Il2CppName: AssertSafeToUpdateGraph
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Pathfinding::NavGraph::*)()>(&Pathfinding::NavGraph::AssertSafeToUpdateGraph)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::NavGraph*), "AssertSafeToUpdateGraph", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Pathfinding::NavGraph::RelocateNodes
// Il2CppName: RelocateNodes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Pathfinding::NavGraph::*)(::UnityEngine::Matrix4x4)>(&Pathfinding::NavGraph::RelocateNodes)> {
  static const MethodInfo* get() {
    static auto* deltaMatrix = &::il2cpp_utils::GetClassFromName("UnityEngine", "Matrix4x4")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::NavGraph*), "RelocateNodes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{deltaMatrix});
  }
};
// Writing MetadataGetter for method: Pathfinding::NavGraph::GetNearest
// Il2CppName: GetNearest
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Pathfinding::NNInfoInternal (Pathfinding::NavGraph::*)(::UnityEngine::Vector3)>(&Pathfinding::NavGraph::GetNearest)> {
  static const MethodInfo* get() {
    static auto* position = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::NavGraph*), "GetNearest", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{position});
  }
};
// Writing MetadataGetter for method: Pathfinding::NavGraph::GetNearest
// Il2CppName: GetNearest
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Pathfinding::NNInfoInternal (Pathfinding::NavGraph::*)(::UnityEngine::Vector3, ::Pathfinding::NNConstraint*)>(&Pathfinding::NavGraph::GetNearest)> {
  static const MethodInfo* get() {
    static auto* position = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* constraint = &::il2cpp_utils::GetClassFromName("Pathfinding", "NNConstraint")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::NavGraph*), "GetNearest", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{position, constraint});
  }
};
// Writing MetadataGetter for method: Pathfinding::NavGraph::GetNearest
// Il2CppName: GetNearest
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Pathfinding::NNInfoInternal (Pathfinding::NavGraph::*)(::UnityEngine::Vector3, ::Pathfinding::NNConstraint*, ::Pathfinding::GraphNode*)>(&Pathfinding::NavGraph::GetNearest)> {
  static const MethodInfo* get() {
    static auto* position = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* constraint = &::il2cpp_utils::GetClassFromName("Pathfinding", "NNConstraint")->byval_arg;
    static auto* hint = &::il2cpp_utils::GetClassFromName("Pathfinding", "GraphNode")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::NavGraph*), "GetNearest", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{position, constraint, hint});
  }
};
// Writing MetadataGetter for method: Pathfinding::NavGraph::GetNearestForce
// Il2CppName: GetNearestForce
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Pathfinding::NNInfoInternal (Pathfinding::NavGraph::*)(::UnityEngine::Vector3, ::Pathfinding::NNConstraint*)>(&Pathfinding::NavGraph::GetNearestForce)> {
  static const MethodInfo* get() {
    static auto* position = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* constraint = &::il2cpp_utils::GetClassFromName("Pathfinding", "NNConstraint")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::NavGraph*), "GetNearestForce", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{position, constraint});
  }
};
// Writing MetadataGetter for method: Pathfinding::NavGraph::OnDestroy
// Il2CppName: OnDestroy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Pathfinding::NavGraph::*)()>(&Pathfinding::NavGraph::OnDestroy)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::NavGraph*), "OnDestroy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Pathfinding::NavGraph::DestroyAllNodes
// Il2CppName: DestroyAllNodes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Pathfinding::NavGraph::*)()>(&Pathfinding::NavGraph::DestroyAllNodes)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::NavGraph*), "DestroyAllNodes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Pathfinding::NavGraph::ScanGraph
// Il2CppName: ScanGraph
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Pathfinding::NavGraph::*)()>(&Pathfinding::NavGraph::ScanGraph)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::NavGraph*), "ScanGraph", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Pathfinding::NavGraph::Scan
// Il2CppName: Scan
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Pathfinding::NavGraph::*)()>(&Pathfinding::NavGraph::Scan)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::NavGraph*), "Scan", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Pathfinding::NavGraph::ScanInternal
// Il2CppName: ScanInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::IEnumerable_1<::Pathfinding::Progress>* (Pathfinding::NavGraph::*)()>(&Pathfinding::NavGraph::ScanInternal)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::NavGraph*), "ScanInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Pathfinding::NavGraph::SerializeExtraInfo
// Il2CppName: SerializeExtraInfo
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Pathfinding::NavGraph::*)(::Pathfinding::Serialization::GraphSerializationContext*)>(&Pathfinding::NavGraph::SerializeExtraInfo)> {
  static const MethodInfo* get() {
    static auto* ctx = &::il2cpp_utils::GetClassFromName("Pathfinding.Serialization", "GraphSerializationContext")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::NavGraph*), "SerializeExtraInfo", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ctx});
  }
};
// Writing MetadataGetter for method: Pathfinding::NavGraph::DeserializeExtraInfo
// Il2CppName: DeserializeExtraInfo
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Pathfinding::NavGraph::*)(::Pathfinding::Serialization::GraphSerializationContext*)>(&Pathfinding::NavGraph::DeserializeExtraInfo)> {
  static const MethodInfo* get() {
    static auto* ctx = &::il2cpp_utils::GetClassFromName("Pathfinding.Serialization", "GraphSerializationContext")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::NavGraph*), "DeserializeExtraInfo", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ctx});
  }
};
// Writing MetadataGetter for method: Pathfinding::NavGraph::PostDeserialization
// Il2CppName: PostDeserialization
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Pathfinding::NavGraph::*)(::Pathfinding::Serialization::GraphSerializationContext*)>(&Pathfinding::NavGraph::PostDeserialization)> {
  static const MethodInfo* get() {
    static auto* ctx = &::il2cpp_utils::GetClassFromName("Pathfinding.Serialization", "GraphSerializationContext")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::NavGraph*), "PostDeserialization", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ctx});
  }
};
// Writing MetadataGetter for method: Pathfinding::NavGraph::DeserializeSettingsCompatibility
// Il2CppName: DeserializeSettingsCompatibility
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Pathfinding::NavGraph::*)(::Pathfinding::Serialization::GraphSerializationContext*)>(&Pathfinding::NavGraph::DeserializeSettingsCompatibility)> {
  static const MethodInfo* get() {
    static auto* ctx = &::il2cpp_utils::GetClassFromName("Pathfinding.Serialization", "GraphSerializationContext")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::NavGraph*), "DeserializeSettingsCompatibility", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ctx});
  }
};
// Writing MetadataGetter for method: Pathfinding::NavGraph::OnDrawGizmos
// Il2CppName: OnDrawGizmos
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Pathfinding::NavGraph::*)(::Pathfinding::Util::RetainedGizmos*, bool)>(&Pathfinding::NavGraph::OnDrawGizmos)> {
  static const MethodInfo* get() {
    static auto* gizmos = &::il2cpp_utils::GetClassFromName("Pathfinding.Util", "RetainedGizmos")->byval_arg;
    static auto* drawNodes = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::NavGraph*), "OnDrawGizmos", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{gizmos, drawNodes});
  }
};
// Writing MetadataGetter for method: Pathfinding::NavGraph::DrawUnwalkableNodes
// Il2CppName: DrawUnwalkableNodes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Pathfinding::NavGraph::*)(float)>(&Pathfinding::NavGraph::DrawUnwalkableNodes)> {
  static const MethodInfo* get() {
    static auto* size = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::NavGraph*), "DrawUnwalkableNodes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{size});
  }
};
// Writing MetadataGetter for method: Pathfinding::NavGraph::Pathfinding_IGraphInternals_get_SerializedEditorSettings
// Il2CppName: Pathfinding.IGraphInternals.get_SerializedEditorSettings
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (Pathfinding::NavGraph::*)()>(&Pathfinding::NavGraph::Pathfinding_IGraphInternals_get_SerializedEditorSettings)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::NavGraph*), "Pathfinding.IGraphInternals.get_SerializedEditorSettings", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Pathfinding::NavGraph::Pathfinding_IGraphInternals_set_SerializedEditorSettings
// Il2CppName: Pathfinding.IGraphInternals.set_SerializedEditorSettings
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Pathfinding::NavGraph::*)(::StringW)>(&Pathfinding::NavGraph::Pathfinding_IGraphInternals_set_SerializedEditorSettings)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::NavGraph*), "Pathfinding.IGraphInternals.set_SerializedEditorSettings", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Pathfinding::NavGraph::Pathfinding_IGraphInternals_OnDestroy
// Il2CppName: Pathfinding.IGraphInternals.OnDestroy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Pathfinding::NavGraph::*)()>(&Pathfinding::NavGraph::Pathfinding_IGraphInternals_OnDestroy)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::NavGraph*), "Pathfinding.IGraphInternals.OnDestroy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Pathfinding::NavGraph::Pathfinding_IGraphInternals_DestroyAllNodes
// Il2CppName: Pathfinding.IGraphInternals.DestroyAllNodes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Pathfinding::NavGraph::*)()>(&Pathfinding::NavGraph::Pathfinding_IGraphInternals_DestroyAllNodes)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::NavGraph*), "Pathfinding.IGraphInternals.DestroyAllNodes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Pathfinding::NavGraph::Pathfinding_IGraphInternals_ScanInternal
// Il2CppName: Pathfinding.IGraphInternals.ScanInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::IEnumerable_1<::Pathfinding::Progress>* (Pathfinding::NavGraph::*)()>(&Pathfinding::NavGraph::Pathfinding_IGraphInternals_ScanInternal)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::NavGraph*), "Pathfinding.IGraphInternals.ScanInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Pathfinding::NavGraph::Pathfinding_IGraphInternals_SerializeExtraInfo
// Il2CppName: Pathfinding.IGraphInternals.SerializeExtraInfo
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Pathfinding::NavGraph::*)(::Pathfinding::Serialization::GraphSerializationContext*)>(&Pathfinding::NavGraph::Pathfinding_IGraphInternals_SerializeExtraInfo)> {
  static const MethodInfo* get() {
    static auto* ctx = &::il2cpp_utils::GetClassFromName("Pathfinding.Serialization", "GraphSerializationContext")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::NavGraph*), "Pathfinding.IGraphInternals.SerializeExtraInfo", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ctx});
  }
};
// Writing MetadataGetter for method: Pathfinding::NavGraph::Pathfinding_IGraphInternals_DeserializeExtraInfo
// Il2CppName: Pathfinding.IGraphInternals.DeserializeExtraInfo
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Pathfinding::NavGraph::*)(::Pathfinding::Serialization::GraphSerializationContext*)>(&Pathfinding::NavGraph::Pathfinding_IGraphInternals_DeserializeExtraInfo)> {
  static const MethodInfo* get() {
    static auto* ctx = &::il2cpp_utils::GetClassFromName("Pathfinding.Serialization", "GraphSerializationContext")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::NavGraph*), "Pathfinding.IGraphInternals.DeserializeExtraInfo", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ctx});
  }
};
// Writing MetadataGetter for method: Pathfinding::NavGraph::Pathfinding_IGraphInternals_PostDeserialization
// Il2CppName: Pathfinding.IGraphInternals.PostDeserialization
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Pathfinding::NavGraph::*)(::Pathfinding::Serialization::GraphSerializationContext*)>(&Pathfinding::NavGraph::Pathfinding_IGraphInternals_PostDeserialization)> {
  static const MethodInfo* get() {
    static auto* ctx = &::il2cpp_utils::GetClassFromName("Pathfinding.Serialization", "GraphSerializationContext")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::NavGraph*), "Pathfinding.IGraphInternals.PostDeserialization", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ctx});
  }
};
// Writing MetadataGetter for method: Pathfinding::NavGraph::Pathfinding_IGraphInternals_DeserializeSettingsCompatibility
// Il2CppName: Pathfinding.IGraphInternals.DeserializeSettingsCompatibility
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Pathfinding::NavGraph::*)(::Pathfinding::Serialization::GraphSerializationContext*)>(&Pathfinding::NavGraph::Pathfinding_IGraphInternals_DeserializeSettingsCompatibility)> {
  static const MethodInfo* get() {
    static auto* ctx = &::il2cpp_utils::GetClassFromName("Pathfinding.Serialization", "GraphSerializationContext")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::NavGraph*), "Pathfinding.IGraphInternals.DeserializeSettingsCompatibility", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ctx});
  }
};
// Writing MetadataGetter for method: Pathfinding::NavGraph::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
