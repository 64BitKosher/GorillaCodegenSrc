// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Pathfinding.Poly2Tri.FixedBitArray3
#include "Pathfinding/Poly2Tri/FixedBitArray3.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: System.Collections.Generic.IEnumerator`1
#include "System/Collections/Generic/IEnumerator_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Collections
namespace System::Collections {
  // Skipping declaration: IEnumerator because it is already included!
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Pathfinding::Poly2Tri::FixedBitArray3::$Enumerate$c__Iterator1);
DEFINE_IL2CPP_ARG_TYPE(::Pathfinding::Poly2Tri::FixedBitArray3::$Enumerate$c__Iterator1*, "Pathfinding.Poly2Tri", "FixedBitArray3/<Enumerate>c__Iterator1");
// Type namespace: Pathfinding.Poly2Tri
namespace Pathfinding::Poly2Tri {
  // Size: 0x1C
  #pragma pack(push, 1)
  // Autogenerated type: Pathfinding.Poly2Tri.FixedBitArray3/<Enumerate>c__Iterator1
  // [TokenAttribute] Offset: FFFFFFFF
  // [CompilerGeneratedAttribute] Offset: FFFFFFFF
  class FixedBitArray3::$Enumerate$c__Iterator1 : public ::Il2CppObject/*, public ::System::Collections::Generic::IEnumerable_1<bool>, public ::System::Collections::Generic::IEnumerator_1<bool>*/ {
    public:
    public:
    // System.Int32 <i>__0
    // Size: 0x4
    // Offset: 0x10
    int $i$__0;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // System.Int32 $PC
    // Size: 0x4
    // Offset: 0x14
    int $PC;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // System.Boolean $current
    // Size: 0x1
    // Offset: 0x18
    bool $current;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Pathfinding.Poly2Tri.FixedBitArray3 <>f__this
    // Size: 0x3
    // Offset: 0x19
    ::Pathfinding::Poly2Tri::FixedBitArray3 $$f__this;
    // Field size check
    static_assert(sizeof(::Pathfinding::Poly2Tri::FixedBitArray3) == 0x3);
    public:
    // Creating interface conversion operator: operator ::System::Collections::Generic::IEnumerable_1<bool>
    operator ::System::Collections::Generic::IEnumerable_1<bool>() noexcept {
      return *reinterpret_cast<::System::Collections::Generic::IEnumerable_1<bool>*>(this);
    }
    // Creating interface conversion operator: operator ::System::Collections::Generic::IEnumerator_1<bool>
    operator ::System::Collections::Generic::IEnumerator_1<bool>() noexcept {
      return *reinterpret_cast<::System::Collections::Generic::IEnumerator_1<bool>*>(this);
    }
    // Get instance field reference: System.Int32 <i>__0
    [[deprecated("Use field access instead!")]] int& dyn_$i$__0();
    // Get instance field reference: System.Int32 $PC
    [[deprecated("Use field access instead!")]] int& dyn_$PC();
    // Get instance field reference: System.Boolean $current
    [[deprecated("Use field access instead!")]] bool& dyn_$current();
    // Get instance field reference: Pathfinding.Poly2Tri.FixedBitArray3 <>f__this
    [[deprecated("Use field access instead!")]] ::Pathfinding::Poly2Tri::FixedBitArray3& dyn_$$f__this();
    // public System.Void .ctor()
    // Offset: 0x49C83D8
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static FixedBitArray3::$Enumerate$c__Iterator1* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Poly2Tri::FixedBitArray3::$Enumerate$c__Iterator1::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<FixedBitArray3::$Enumerate$c__Iterator1*, creationType>()));
    }
    // private System.Boolean System.Collections.Generic.IEnumerator<bool>.get_Current()
    // Offset: 0x49C83E0
    bool System_Collections_Generic_IEnumerator$bool$_get_Current();
    // private System.Object System.Collections.IEnumerator.get_Current()
    // Offset: 0x49C83E8
    ::Il2CppObject* System_Collections_IEnumerator_get_Current();
    // private System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()
    // Offset: 0x49C8444
    ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator();
    // private System.Collections.Generic.IEnumerator`1<System.Boolean> System.Collections.Generic.IEnumerable<bool>.GetEnumerator()
    // Offset: 0x49C8448
    ::System::Collections::Generic::IEnumerator_1<bool>* System_Collections_Generic_IEnumerable$bool$_GetEnumerator();
    // public System.Boolean MoveNext()
    // Offset: 0x49C84E8
    bool MoveNext();
    // public System.Void Dispose()
    // Offset: 0x49C857C
    void Dispose();
    // public System.Void Reset()
    // Offset: 0x49C8588
    void Reset();
  }; // Pathfinding.Poly2Tri.FixedBitArray3/<Enumerate>c__Iterator1
  #pragma pack(pop)
  static check_size<sizeof(FixedBitArray3::$Enumerate$c__Iterator1), 25 + sizeof(::Pathfinding::Poly2Tri::FixedBitArray3)> __Pathfinding_Poly2Tri_FixedBitArray3_$Enumerate$c__Iterator1SizeCheck;
  static_assert(sizeof(FixedBitArray3::$Enumerate$c__Iterator1) == 0x1C);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Pathfinding::Poly2Tri::FixedBitArray3::$Enumerate$c__Iterator1::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: Pathfinding::Poly2Tri::FixedBitArray3::$Enumerate$c__Iterator1::System_Collections_Generic_IEnumerator$bool$_get_Current
// Il2CppName: System.Collections.Generic.IEnumerator<bool>.get_Current
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Pathfinding::Poly2Tri::FixedBitArray3::$Enumerate$c__Iterator1::*)()>(&Pathfinding::Poly2Tri::FixedBitArray3::$Enumerate$c__Iterator1::System_Collections_Generic_IEnumerator$bool$_get_Current)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::Poly2Tri::FixedBitArray3::$Enumerate$c__Iterator1*), "System.Collections.Generic.IEnumerator<bool>.get_Current", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Pathfinding::Poly2Tri::FixedBitArray3::$Enumerate$c__Iterator1::System_Collections_IEnumerator_get_Current
// Il2CppName: System.Collections.IEnumerator.get_Current
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (Pathfinding::Poly2Tri::FixedBitArray3::$Enumerate$c__Iterator1::*)()>(&Pathfinding::Poly2Tri::FixedBitArray3::$Enumerate$c__Iterator1::System_Collections_IEnumerator_get_Current)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::Poly2Tri::FixedBitArray3::$Enumerate$c__Iterator1*), "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Pathfinding::Poly2Tri::FixedBitArray3::$Enumerate$c__Iterator1::System_Collections_IEnumerable_GetEnumerator
// Il2CppName: System.Collections.IEnumerable.GetEnumerator
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::IEnumerator* (Pathfinding::Poly2Tri::FixedBitArray3::$Enumerate$c__Iterator1::*)()>(&Pathfinding::Poly2Tri::FixedBitArray3::$Enumerate$c__Iterator1::System_Collections_IEnumerable_GetEnumerator)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::Poly2Tri::FixedBitArray3::$Enumerate$c__Iterator1*), "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Pathfinding::Poly2Tri::FixedBitArray3::$Enumerate$c__Iterator1::System_Collections_Generic_IEnumerable$bool$_GetEnumerator
// Il2CppName: System.Collections.Generic.IEnumerable<bool>.GetEnumerator
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::IEnumerator_1<bool>* (Pathfinding::Poly2Tri::FixedBitArray3::$Enumerate$c__Iterator1::*)()>(&Pathfinding::Poly2Tri::FixedBitArray3::$Enumerate$c__Iterator1::System_Collections_Generic_IEnumerable$bool$_GetEnumerator)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::Poly2Tri::FixedBitArray3::$Enumerate$c__Iterator1*), "System.Collections.Generic.IEnumerable<bool>.GetEnumerator", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Pathfinding::Poly2Tri::FixedBitArray3::$Enumerate$c__Iterator1::MoveNext
// Il2CppName: MoveNext
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Pathfinding::Poly2Tri::FixedBitArray3::$Enumerate$c__Iterator1::*)()>(&Pathfinding::Poly2Tri::FixedBitArray3::$Enumerate$c__Iterator1::MoveNext)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::Poly2Tri::FixedBitArray3::$Enumerate$c__Iterator1*), "MoveNext", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Pathfinding::Poly2Tri::FixedBitArray3::$Enumerate$c__Iterator1::Dispose
// Il2CppName: Dispose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Pathfinding::Poly2Tri::FixedBitArray3::$Enumerate$c__Iterator1::*)()>(&Pathfinding::Poly2Tri::FixedBitArray3::$Enumerate$c__Iterator1::Dispose)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::Poly2Tri::FixedBitArray3::$Enumerate$c__Iterator1*), "Dispose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Pathfinding::Poly2Tri::FixedBitArray3::$Enumerate$c__Iterator1::Reset
// Il2CppName: Reset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Pathfinding::Poly2Tri::FixedBitArray3::$Enumerate$c__Iterator1::*)()>(&Pathfinding::Poly2Tri::FixedBitArray3::$Enumerate$c__Iterator1::Reset)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::Poly2Tri::FixedBitArray3::$Enumerate$c__Iterator1*), "Reset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
