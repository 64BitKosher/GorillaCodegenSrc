// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Pathfinding.AIPath
#include "Pathfinding/AIPath.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Animation
  class Animation;
  // Forward declaring type: GameObject
  class GameObject;
}
// Completed forward declares
// Type namespace: Pathfinding.Examples
namespace Pathfinding::Examples {
  // Forward declaring type: MineBotAI
  class MineBotAI;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Pathfinding::Examples::MineBotAI);
DEFINE_IL2CPP_ARG_TYPE(::Pathfinding::Examples::MineBotAI*, "Pathfinding.Examples", "MineBotAI");
// Type namespace: Pathfinding.Examples
namespace Pathfinding::Examples {
  // Size: 0x180
  #pragma pack(push, 1)
  // Autogenerated type: Pathfinding.Examples.MineBotAI
  // [TokenAttribute] Offset: FFFFFFFF
  // [RequireComponent] Offset: FFFFFFFF
  // [ObsoleteAttribute] Offset: FFFFFFFF
  // [HelpURLAttribute] Offset: FFFFFFFF
  class MineBotAI : public ::Pathfinding::AIPath {
    public:
    // Writing base type padding for base size: 0x161 to desired offset: 0x168
    char ___base_padding[0x7] = {};
    public:
    // public UnityEngine.Animation anim
    // Size: 0x8
    // Offset: 0x168
    ::UnityEngine::Animation* anim;
    // Field size check
    static_assert(sizeof(::UnityEngine::Animation*) == 0x8);
    // public System.Single sleepVelocity
    // Size: 0x4
    // Offset: 0x170
    float sleepVelocity;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // public System.Single animationSpeed
    // Size: 0x4
    // Offset: 0x174
    float animationSpeed;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // public UnityEngine.GameObject endOfPathEffect
    // Size: 0x8
    // Offset: 0x178
    ::UnityEngine::GameObject* endOfPathEffect;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    public:
    // Get instance field reference: public UnityEngine.Animation anim
    [[deprecated("Use field access instead!")]] ::UnityEngine::Animation*& dyn_anim();
    // Get instance field reference: public System.Single sleepVelocity
    [[deprecated("Use field access instead!")]] float& dyn_sleepVelocity();
    // Get instance field reference: public System.Single animationSpeed
    [[deprecated("Use field access instead!")]] float& dyn_animationSpeed();
    // Get instance field reference: public UnityEngine.GameObject endOfPathEffect
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_endOfPathEffect();
    // public System.Void .ctor()
    // Offset: 0x2A4C54C
    // Implemented from: Pathfinding.AIPath
    // Base method: System.Void AIPath::.ctor()
    // Base method: System.Void AIBase::.ctor()
    // Base method: System.Void VersionedMonoBehaviour::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static MineBotAI* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::MineBotAI::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<MineBotAI*, creationType>()));
    }
  }; // Pathfinding.Examples.MineBotAI
  #pragma pack(pop)
  static check_size<sizeof(MineBotAI), 376 + sizeof(::UnityEngine::GameObject*)> __Pathfinding_Examples_MineBotAISizeCheck;
  static_assert(sizeof(MineBotAI) == 0x180);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Pathfinding::Examples::MineBotAI::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
