// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Pathfinding::RVO
namespace Pathfinding::RVO {
  // Forward declaring type: RVOController
  class RVOController;
}
// Completed forward declares
// Type namespace: Pathfinding.Examples
namespace Pathfinding::Examples {
  // Forward declaring type: ManualRVOAgent
  class ManualRVOAgent;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Pathfinding::Examples::ManualRVOAgent);
DEFINE_IL2CPP_ARG_TYPE(::Pathfinding::Examples::ManualRVOAgent*, "Pathfinding.Examples", "ManualRVOAgent");
// Type namespace: Pathfinding.Examples
namespace Pathfinding::Examples {
  // Size: 0x2C
  #pragma pack(push, 1)
  // Autogenerated type: Pathfinding.Examples.ManualRVOAgent
  // [TokenAttribute] Offset: FFFFFFFF
  // [RequireComponent] Offset: FFFFFFFF
  // [HelpURLAttribute] Offset: FFFFFFFF
  class ManualRVOAgent : public ::UnityEngine::MonoBehaviour {
    public:
    public:
    // private Pathfinding.RVO.RVOController rvo
    // Size: 0x8
    // Offset: 0x20
    ::Pathfinding::RVO::RVOController* rvo;
    // Field size check
    static_assert(sizeof(::Pathfinding::RVO::RVOController*) == 0x8);
    // public System.Single speed
    // Size: 0x4
    // Offset: 0x28
    float speed;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    public:
    // Get instance field reference: private Pathfinding.RVO.RVOController rvo
    [[deprecated("Use field access instead!")]] ::Pathfinding::RVO::RVOController*& dyn_rvo();
    // Get instance field reference: public System.Single speed
    [[deprecated("Use field access instead!")]] float& dyn_speed();
    // private System.Void Awake()
    // Offset: 0x2A4C3D0
    void Awake();
    // private System.Void Update()
    // Offset: 0x2A4C428
    void Update();
    // public System.Void .ctor()
    // Offset: 0x2A4C53C
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static ManualRVOAgent* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::ManualRVOAgent::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<ManualRVOAgent*, creationType>()));
    }
  }; // Pathfinding.Examples.ManualRVOAgent
  #pragma pack(pop)
  static check_size<sizeof(ManualRVOAgent), 40 + sizeof(float)> __Pathfinding_Examples_ManualRVOAgentSizeCheck;
  static_assert(sizeof(ManualRVOAgent) == 0x2C);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Pathfinding::Examples::ManualRVOAgent::Awake
// Il2CppName: Awake
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Pathfinding::Examples::ManualRVOAgent::*)()>(&Pathfinding::Examples::ManualRVOAgent::Awake)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::Examples::ManualRVOAgent*), "Awake", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Pathfinding::Examples::ManualRVOAgent::Update
// Il2CppName: Update
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Pathfinding::Examples::ManualRVOAgent::*)()>(&Pathfinding::Examples::ManualRVOAgent::Update)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::Examples::ManualRVOAgent*), "Update", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Pathfinding::Examples::ManualRVOAgent::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
