// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Pathfinding.RichAI
#include "Pathfinding/RichAI.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Pathfinding
namespace Pathfinding {
  // Forward declaring type: LocalSpaceGraph
  class LocalSpaceGraph;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Skipping declaration: Vector3 because it is already included!
}
// Completed forward declares
// Type namespace: Pathfinding.Examples
namespace Pathfinding::Examples {
  // Forward declaring type: LocalSpaceRichAI
  class LocalSpaceRichAI;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Pathfinding::Examples::LocalSpaceRichAI);
DEFINE_IL2CPP_ARG_TYPE(::Pathfinding::Examples::LocalSpaceRichAI*, "Pathfinding.Examples", "LocalSpaceRichAI");
// Type namespace: Pathfinding.Examples
namespace Pathfinding::Examples {
  // Size: 0x198
  #pragma pack(push, 1)
  // Autogenerated type: Pathfinding.Examples.LocalSpaceRichAI
  // [TokenAttribute] Offset: FFFFFFFF
  // [HelpURLAttribute] Offset: FFFFFFFF
  class LocalSpaceRichAI : public ::Pathfinding::RichAI {
    public:
    public:
    // public Pathfinding.LocalSpaceGraph graph
    // Size: 0x8
    // Offset: 0x190
    ::Pathfinding::LocalSpaceGraph* graph;
    // Field size check
    static_assert(sizeof(::Pathfinding::LocalSpaceGraph*) == 0x8);
    public:
    // Get instance field reference: public Pathfinding.LocalSpaceGraph graph
    [[deprecated("Use field access instead!")]] ::Pathfinding::LocalSpaceGraph*& dyn_graph();
    // private System.Void RefreshTransform()
    // Offset: 0x2A46888
    void RefreshTransform();
    // protected override System.Void Start()
    // Offset: 0x2A468DC
    // Implemented from: Pathfinding.AIBase
    // Base method: System.Void AIBase::Start()
    void Start();
    // protected override System.Void CalculatePathRequestEndpoints(out UnityEngine.Vector3 start, out UnityEngine.Vector3 end)
    // Offset: 0x2A468F8
    // Implemented from: Pathfinding.AIBase
    // Base method: System.Void AIBase::CalculatePathRequestEndpoints(out UnityEngine.Vector3 start, out UnityEngine.Vector3 end)
    void CalculatePathRequestEndpoints(ByRef<::UnityEngine::Vector3> start, ByRef<::UnityEngine::Vector3> end);
    // protected override System.Void Update()
    // Offset: 0x2A46984
    // Implemented from: Pathfinding.AIBase
    // Base method: System.Void AIBase::Update()
    void Update();
    // public System.Void .ctor()
    // Offset: 0x2A469A0
    // Implemented from: Pathfinding.RichAI
    // Base method: System.Void RichAI::.ctor()
    // Base method: System.Void AIBase::.ctor()
    // Base method: System.Void VersionedMonoBehaviour::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static LocalSpaceRichAI* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::LocalSpaceRichAI::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<LocalSpaceRichAI*, creationType>()));
    }
  }; // Pathfinding.Examples.LocalSpaceRichAI
  #pragma pack(pop)
  static check_size<sizeof(LocalSpaceRichAI), 400 + sizeof(::Pathfinding::LocalSpaceGraph*)> __Pathfinding_Examples_LocalSpaceRichAISizeCheck;
  static_assert(sizeof(LocalSpaceRichAI) == 0x198);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Pathfinding::Examples::LocalSpaceRichAI::RefreshTransform
// Il2CppName: RefreshTransform
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Pathfinding::Examples::LocalSpaceRichAI::*)()>(&Pathfinding::Examples::LocalSpaceRichAI::RefreshTransform)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::Examples::LocalSpaceRichAI*), "RefreshTransform", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Pathfinding::Examples::LocalSpaceRichAI::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Pathfinding::Examples::LocalSpaceRichAI::*)()>(&Pathfinding::Examples::LocalSpaceRichAI::Start)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::Examples::LocalSpaceRichAI*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Pathfinding::Examples::LocalSpaceRichAI::CalculatePathRequestEndpoints
// Il2CppName: CalculatePathRequestEndpoints
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Pathfinding::Examples::LocalSpaceRichAI::*)(ByRef<::UnityEngine::Vector3>, ByRef<::UnityEngine::Vector3>)>(&Pathfinding::Examples::LocalSpaceRichAI::CalculatePathRequestEndpoints)> {
  static const MethodInfo* get() {
    static auto* start = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->this_arg;
    static auto* end = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::Examples::LocalSpaceRichAI*), "CalculatePathRequestEndpoints", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{start, end});
  }
};
// Writing MetadataGetter for method: Pathfinding::Examples::LocalSpaceRichAI::Update
// Il2CppName: Update
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Pathfinding::Examples::LocalSpaceRichAI::*)()>(&Pathfinding::Examples::LocalSpaceRichAI::Update)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::Examples::LocalSpaceRichAI*), "Update", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Pathfinding::Examples::LocalSpaceRichAI::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
