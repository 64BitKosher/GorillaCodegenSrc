// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include <stdint.h>
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Pathfinding
namespace Pathfinding {
  // Forward declaring type: PathHandler
  class PathHandler;
  // Forward declaring type: PathState
  struct PathState;
  // Forward declaring type: PathLog
  struct PathLog;
}
// Completed forward declares
// Type namespace: Pathfinding
namespace Pathfinding {
  // Forward declaring type: IPathInternals
  class IPathInternals;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Pathfinding::IPathInternals);
DEFINE_IL2CPP_ARG_TYPE(::Pathfinding::IPathInternals*, "Pathfinding", "IPathInternals");
// Type namespace: Pathfinding
namespace Pathfinding {
  // Size: 0x0
  #pragma pack(push, 1)
  // Autogenerated type: Pathfinding.IPathInternals
  // [TokenAttribute] Offset: FFFFFFFF
  class IPathInternals {
    public:
    // public Pathfinding.PathHandler get_PathHandler()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::Pathfinding::PathHandler* get_PathHandler();
    // public System.Boolean get_Pooled()
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool get_Pooled();
    // public System.Void set_Pooled(System.Boolean value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void set_Pooled(bool value);
    // public System.Void AdvanceState(Pathfinding.PathState s)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void AdvanceState(::Pathfinding::PathState s);
    // public System.Void OnEnterPool()
    // Offset: 0xFFFFFFFFFFFFFFFF
    void OnEnterPool();
    // public System.Void Reset()
    // Offset: 0xFFFFFFFFFFFFFFFF
    void Reset();
    // public System.Void ReturnPath()
    // Offset: 0xFFFFFFFFFFFFFFFF
    void ReturnPath();
    // public System.Void PrepareBase(Pathfinding.PathHandler handler)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void PrepareBase(::Pathfinding::PathHandler* handler);
    // public System.Void Prepare()
    // Offset: 0xFFFFFFFFFFFFFFFF
    void Prepare();
    // public System.Void Initialize()
    // Offset: 0xFFFFFFFFFFFFFFFF
    void Initialize();
    // public System.Void Cleanup()
    // Offset: 0xFFFFFFFFFFFFFFFF
    void Cleanup();
    // public System.Void CalculateStep(System.Int64 targetTick)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void CalculateStep(int64_t targetTick);
    // public System.String DebugString(Pathfinding.PathLog logMode)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::StringW DebugString(::Pathfinding::PathLog logMode);
  }; // Pathfinding.IPathInternals
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Pathfinding::IPathInternals::get_PathHandler
// Il2CppName: get_PathHandler
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Pathfinding::PathHandler* (Pathfinding::IPathInternals::*)()>(&Pathfinding::IPathInternals::get_PathHandler)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::IPathInternals*), "get_PathHandler", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Pathfinding::IPathInternals::get_Pooled
// Il2CppName: get_Pooled
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Pathfinding::IPathInternals::*)()>(&Pathfinding::IPathInternals::get_Pooled)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::IPathInternals*), "get_Pooled", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Pathfinding::IPathInternals::set_Pooled
// Il2CppName: set_Pooled
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Pathfinding::IPathInternals::*)(bool)>(&Pathfinding::IPathInternals::set_Pooled)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::IPathInternals*), "set_Pooled", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Pathfinding::IPathInternals::AdvanceState
// Il2CppName: AdvanceState
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Pathfinding::IPathInternals::*)(::Pathfinding::PathState)>(&Pathfinding::IPathInternals::AdvanceState)> {
  static const MethodInfo* get() {
    static auto* s = &::il2cpp_utils::GetClassFromName("Pathfinding", "PathState")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::IPathInternals*), "AdvanceState", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{s});
  }
};
// Writing MetadataGetter for method: Pathfinding::IPathInternals::OnEnterPool
// Il2CppName: OnEnterPool
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Pathfinding::IPathInternals::*)()>(&Pathfinding::IPathInternals::OnEnterPool)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::IPathInternals*), "OnEnterPool", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Pathfinding::IPathInternals::Reset
// Il2CppName: Reset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Pathfinding::IPathInternals::*)()>(&Pathfinding::IPathInternals::Reset)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::IPathInternals*), "Reset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Pathfinding::IPathInternals::ReturnPath
// Il2CppName: ReturnPath
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Pathfinding::IPathInternals::*)()>(&Pathfinding::IPathInternals::ReturnPath)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::IPathInternals*), "ReturnPath", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Pathfinding::IPathInternals::PrepareBase
// Il2CppName: PrepareBase
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Pathfinding::IPathInternals::*)(::Pathfinding::PathHandler*)>(&Pathfinding::IPathInternals::PrepareBase)> {
  static const MethodInfo* get() {
    static auto* handler = &::il2cpp_utils::GetClassFromName("Pathfinding", "PathHandler")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::IPathInternals*), "PrepareBase", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handler});
  }
};
// Writing MetadataGetter for method: Pathfinding::IPathInternals::Prepare
// Il2CppName: Prepare
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Pathfinding::IPathInternals::*)()>(&Pathfinding::IPathInternals::Prepare)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::IPathInternals*), "Prepare", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Pathfinding::IPathInternals::Initialize
// Il2CppName: Initialize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Pathfinding::IPathInternals::*)()>(&Pathfinding::IPathInternals::Initialize)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::IPathInternals*), "Initialize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Pathfinding::IPathInternals::Cleanup
// Il2CppName: Cleanup
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Pathfinding::IPathInternals::*)()>(&Pathfinding::IPathInternals::Cleanup)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::IPathInternals*), "Cleanup", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Pathfinding::IPathInternals::CalculateStep
// Il2CppName: CalculateStep
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Pathfinding::IPathInternals::*)(int64_t)>(&Pathfinding::IPathInternals::CalculateStep)> {
  static const MethodInfo* get() {
    static auto* targetTick = &::il2cpp_utils::GetClassFromName("System", "Int64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::IPathInternals*), "CalculateStep", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{targetTick});
  }
};
// Writing MetadataGetter for method: Pathfinding::IPathInternals::DebugString
// Il2CppName: DebugString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (Pathfinding::IPathInternals::*)(::Pathfinding::PathLog)>(&Pathfinding::IPathInternals::DebugString)> {
  static const MethodInfo* get() {
    static auto* logMode = &::il2cpp_utils::GetClassFromName("Pathfinding", "PathLog")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::IPathInternals*), "DebugString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{logMode});
  }
};
