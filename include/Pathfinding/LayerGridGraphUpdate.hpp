// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Pathfinding.GraphUpdateObject
#include "Pathfinding/GraphUpdateObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Type namespace: Pathfinding
namespace Pathfinding {
  // Forward declaring type: LayerGridGraphUpdate
  class LayerGridGraphUpdate;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Pathfinding::LayerGridGraphUpdate);
DEFINE_IL2CPP_ARG_TYPE(::Pathfinding::LayerGridGraphUpdate*, "Pathfinding", "LayerGridGraphUpdate");
// Type namespace: Pathfinding
namespace Pathfinding {
  // Size: 0x6E
  #pragma pack(push, 1)
  // Autogenerated type: Pathfinding.LayerGridGraphUpdate
  // [TokenAttribute] Offset: FFFFFFFF
  class LayerGridGraphUpdate : public ::Pathfinding::GraphUpdateObject {
    public:
    public:
    // public System.Boolean recalculateNodes
    // Size: 0x1
    // Offset: 0x6C
    bool recalculateNodes;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // public System.Boolean preserveExistingNodes
    // Size: 0x1
    // Offset: 0x6D
    bool preserveExistingNodes;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    public:
    // Get instance field reference: public System.Boolean recalculateNodes
    [[deprecated("Use field access instead!")]] bool& dyn_recalculateNodes();
    // Get instance field reference: public System.Boolean preserveExistingNodes
    [[deprecated("Use field access instead!")]] bool& dyn_preserveExistingNodes();
    // public System.Void .ctor()
    // Offset: 0x29CE1F0
    // Implemented from: Pathfinding.GraphUpdateObject
    // Base method: System.Void GraphUpdateObject::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static LayerGridGraphUpdate* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::LayerGridGraphUpdate::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<LayerGridGraphUpdate*, creationType>()));
    }
  }; // Pathfinding.LayerGridGraphUpdate
  #pragma pack(pop)
  static check_size<sizeof(LayerGridGraphUpdate), 109 + sizeof(bool)> __Pathfinding_LayerGridGraphUpdateSizeCheck;
  static_assert(sizeof(LayerGridGraphUpdate) == 0x6E);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Pathfinding::LayerGridGraphUpdate::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
