// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Pathfinding.Util.RetainedGizmos
#include "Pathfinding/Util/RetainedGizmos.hpp"
// Including type: Pathfinding.Util.IAstarPooledObject
#include "Pathfinding/Util/IAstarPooledObject.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: UnityEngine.Color32
#include "UnityEngine/Color32.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Mesh
  class Mesh;
  // Forward declaring type: Bounds
  struct Bounds;
}
// Forward declaring namespace: Pathfinding::Util
namespace Pathfinding::Util {
  // Forward declaring type: GraphTransform
  class GraphTransform;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Pathfinding::Util::RetainedGizmos::Builder);
DEFINE_IL2CPP_ARG_TYPE(::Pathfinding::Util::RetainedGizmos::Builder*, "Pathfinding.Util", "RetainedGizmos/Builder");
// Type namespace: Pathfinding.Util
namespace Pathfinding::Util {
  // Size: 0x28
  #pragma pack(push, 1)
  // Autogenerated type: Pathfinding.Util.RetainedGizmos/Builder
  // [TokenAttribute] Offset: FFFFFFFF
  class RetainedGizmos::Builder : public ::Il2CppObject/*, public ::Pathfinding::Util::IAstarPooledObject*/ {
    public:
    public:
    // private System.Collections.Generic.List`1<UnityEngine.Vector3> lines
    // Size: 0x8
    // Offset: 0x10
    ::System::Collections::Generic::List_1<::UnityEngine::Vector3>* lines;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::UnityEngine::Vector3>*) == 0x8);
    // private System.Collections.Generic.List`1<UnityEngine.Color32> lineColors
    // Size: 0x8
    // Offset: 0x18
    ::System::Collections::Generic::List_1<::UnityEngine::Color32>* lineColors;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::UnityEngine::Color32>*) == 0x8);
    // private System.Collections.Generic.List`1<UnityEngine.Mesh> meshes
    // Size: 0x8
    // Offset: 0x20
    ::System::Collections::Generic::List_1<::UnityEngine::Mesh*>* meshes;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::UnityEngine::Mesh*>*) == 0x8);
    public:
    // Creating interface conversion operator: operator ::Pathfinding::Util::IAstarPooledObject
    operator ::Pathfinding::Util::IAstarPooledObject() noexcept {
      return *reinterpret_cast<::Pathfinding::Util::IAstarPooledObject*>(this);
    }
    // Get instance field reference: private System.Collections.Generic.List`1<UnityEngine.Vector3> lines
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::Vector3>*& dyn_lines();
    // Get instance field reference: private System.Collections.Generic.List`1<UnityEngine.Color32> lineColors
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::Color32>*& dyn_lineColors();
    // Get instance field reference: private System.Collections.Generic.List`1<UnityEngine.Mesh> meshes
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::Mesh*>*& dyn_meshes();
    // public System.Void DrawMesh(Pathfinding.Util.RetainedGizmos gizmos, UnityEngine.Vector3[] vertices, System.Collections.Generic.List`1<System.Int32> triangles, UnityEngine.Color[] colors)
    // Offset: 0x2A32860
    void DrawMesh(::Pathfinding::Util::RetainedGizmos* gizmos, ::ArrayW<::UnityEngine::Vector3> vertices, ::System::Collections::Generic::List_1<int>* triangles, ::ArrayW<::UnityEngine::Color> colors);
    // public System.Void DrawWireCube(Pathfinding.Util.GraphTransform tr, UnityEngine.Bounds bounds, UnityEngine.Color color)
    // Offset: 0x2A338D4
    void DrawWireCube(::Pathfinding::Util::GraphTransform* tr, ::UnityEngine::Bounds bounds, ::UnityEngine::Color color);
    // public System.Void DrawLine(UnityEngine.Vector3 start, UnityEngine.Vector3 end, UnityEngine.Color color)
    // Offset: 0x2A3230C
    void DrawLine(::UnityEngine::Vector3 start, ::UnityEngine::Vector3 end, ::UnityEngine::Color color);
    // public System.Void Submit(Pathfinding.Util.RetainedGizmos gizmos, Pathfinding.Util.RetainedGizmos/Hasher hasher)
    // Offset: 0x2A32AC0
    void Submit(::Pathfinding::Util::RetainedGizmos* gizmos, ::Pathfinding::Util::RetainedGizmos::Hasher hasher);
    // private System.Void SubmitMeshes(Pathfinding.Util.RetainedGizmos gizmos, System.UInt64 hash)
    // Offset: 0x2A34AEC
    void SubmitMeshes(::Pathfinding::Util::RetainedGizmos* gizmos, uint64_t hash);
    // private System.Void SubmitLines(Pathfinding.Util.RetainedGizmos gizmos, System.UInt64 hash)
    // Offset: 0x2A33E8C
    void SubmitLines(::Pathfinding::Util::RetainedGizmos* gizmos, uint64_t hash);
    // private System.Void Pathfinding.Util.IAstarPooledObject.OnEnterPool()
    // Offset: 0x2A34CB4
    void Pathfinding_Util_IAstarPooledObject_OnEnterPool();
    // public System.Void .ctor()
    // Offset: 0x2A34D64
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static RetainedGizmos::Builder* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::RetainedGizmos::Builder::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<RetainedGizmos::Builder*, creationType>()));
    }
  }; // Pathfinding.Util.RetainedGizmos/Builder
  #pragma pack(pop)
  static check_size<sizeof(RetainedGizmos::Builder), 32 + sizeof(::System::Collections::Generic::List_1<::UnityEngine::Mesh*>*)> __Pathfinding_Util_RetainedGizmos_BuilderSizeCheck;
  static_assert(sizeof(RetainedGizmos::Builder) == 0x28);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Pathfinding::Util::RetainedGizmos::Builder::DrawMesh
// Il2CppName: DrawMesh
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Pathfinding::Util::RetainedGizmos::Builder::*)(::Pathfinding::Util::RetainedGizmos*, ::ArrayW<::UnityEngine::Vector3>, ::System::Collections::Generic::List_1<int>*, ::ArrayW<::UnityEngine::Color>)>(&Pathfinding::Util::RetainedGizmos::Builder::DrawMesh)> {
  static const MethodInfo* get() {
    static auto* gizmos = &::il2cpp_utils::GetClassFromName("Pathfinding.Util", "RetainedGizmos")->byval_arg;
    static auto* vertices = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3"), 1)->byval_arg;
    static auto* triangles = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Int32")})->byval_arg;
    static auto* colors = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("UnityEngine", "Color"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::Util::RetainedGizmos::Builder*), "DrawMesh", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{gizmos, vertices, triangles, colors});
  }
};
// Writing MetadataGetter for method: Pathfinding::Util::RetainedGizmos::Builder::DrawWireCube
// Il2CppName: DrawWireCube
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Pathfinding::Util::RetainedGizmos::Builder::*)(::Pathfinding::Util::GraphTransform*, ::UnityEngine::Bounds, ::UnityEngine::Color)>(&Pathfinding::Util::RetainedGizmos::Builder::DrawWireCube)> {
  static const MethodInfo* get() {
    static auto* tr = &::il2cpp_utils::GetClassFromName("Pathfinding.Util", "GraphTransform")->byval_arg;
    static auto* bounds = &::il2cpp_utils::GetClassFromName("UnityEngine", "Bounds")->byval_arg;
    static auto* color = &::il2cpp_utils::GetClassFromName("UnityEngine", "Color")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::Util::RetainedGizmos::Builder*), "DrawWireCube", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{tr, bounds, color});
  }
};
// Writing MetadataGetter for method: Pathfinding::Util::RetainedGizmos::Builder::DrawLine
// Il2CppName: DrawLine
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Pathfinding::Util::RetainedGizmos::Builder::*)(::UnityEngine::Vector3, ::UnityEngine::Vector3, ::UnityEngine::Color)>(&Pathfinding::Util::RetainedGizmos::Builder::DrawLine)> {
  static const MethodInfo* get() {
    static auto* start = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* end = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* color = &::il2cpp_utils::GetClassFromName("UnityEngine", "Color")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::Util::RetainedGizmos::Builder*), "DrawLine", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{start, end, color});
  }
};
// Writing MetadataGetter for method: Pathfinding::Util::RetainedGizmos::Builder::Submit
// Il2CppName: Submit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Pathfinding::Util::RetainedGizmos::Builder::*)(::Pathfinding::Util::RetainedGizmos*, ::Pathfinding::Util::RetainedGizmos::Hasher)>(&Pathfinding::Util::RetainedGizmos::Builder::Submit)> {
  static const MethodInfo* get() {
    static auto* gizmos = &::il2cpp_utils::GetClassFromName("Pathfinding.Util", "RetainedGizmos")->byval_arg;
    static auto* hasher = &::il2cpp_utils::GetClassFromName("Pathfinding.Util", "RetainedGizmos/Hasher")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::Util::RetainedGizmos::Builder*), "Submit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{gizmos, hasher});
  }
};
// Writing MetadataGetter for method: Pathfinding::Util::RetainedGizmos::Builder::SubmitMeshes
// Il2CppName: SubmitMeshes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Pathfinding::Util::RetainedGizmos::Builder::*)(::Pathfinding::Util::RetainedGizmos*, uint64_t)>(&Pathfinding::Util::RetainedGizmos::Builder::SubmitMeshes)> {
  static const MethodInfo* get() {
    static auto* gizmos = &::il2cpp_utils::GetClassFromName("Pathfinding.Util", "RetainedGizmos")->byval_arg;
    static auto* hash = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::Util::RetainedGizmos::Builder*), "SubmitMeshes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{gizmos, hash});
  }
};
// Writing MetadataGetter for method: Pathfinding::Util::RetainedGizmos::Builder::SubmitLines
// Il2CppName: SubmitLines
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Pathfinding::Util::RetainedGizmos::Builder::*)(::Pathfinding::Util::RetainedGizmos*, uint64_t)>(&Pathfinding::Util::RetainedGizmos::Builder::SubmitLines)> {
  static const MethodInfo* get() {
    static auto* gizmos = &::il2cpp_utils::GetClassFromName("Pathfinding.Util", "RetainedGizmos")->byval_arg;
    static auto* hash = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::Util::RetainedGizmos::Builder*), "SubmitLines", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{gizmos, hash});
  }
};
// Writing MetadataGetter for method: Pathfinding::Util::RetainedGizmos::Builder::Pathfinding_Util_IAstarPooledObject_OnEnterPool
// Il2CppName: Pathfinding.Util.IAstarPooledObject.OnEnterPool
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Pathfinding::Util::RetainedGizmos::Builder::*)()>(&Pathfinding::Util::RetainedGizmos::Builder::Pathfinding_Util_IAstarPooledObject_OnEnterPool)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::Util::RetainedGizmos::Builder*), "Pathfinding.Util.IAstarPooledObject.OnEnterPool", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Pathfinding::Util::RetainedGizmos::Builder::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
