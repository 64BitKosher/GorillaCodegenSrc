// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Pathfinding.NavmeshUpdates
#include "Pathfinding/NavmeshUpdates.hpp"
// Including type: Pathfinding.IntRect
#include "Pathfinding/IntRect.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Pathfinding::Util
namespace Pathfinding::Util {
  // Forward declaring type: TileHandler
  class TileHandler;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Forward declaring namespace: Pathfinding
namespace Pathfinding {
  // Forward declaring type: NavmeshBase
  class NavmeshBase;
  // Forward declaring type: NavmeshTile
  class NavmeshTile;
  // Forward declaring type: NavmeshClipper
  class NavmeshClipper;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Pathfinding::NavmeshUpdates::NavmeshUpdateSettings);
DEFINE_IL2CPP_ARG_TYPE(::Pathfinding::NavmeshUpdates::NavmeshUpdateSettings*, "Pathfinding", "NavmeshUpdates/NavmeshUpdateSettings");
// Type namespace: Pathfinding
namespace Pathfinding {
  // Size: 0x28
  #pragma pack(push, 1)
  // Autogenerated type: Pathfinding.NavmeshUpdates/NavmeshUpdateSettings
  // [TokenAttribute] Offset: FFFFFFFF
  class NavmeshUpdates::NavmeshUpdateSettings : public ::Il2CppObject {
    public:
    public:
    // public Pathfinding.Util.TileHandler handler
    // Size: 0x8
    // Offset: 0x10
    ::Pathfinding::Util::TileHandler* handler;
    // Field size check
    static_assert(sizeof(::Pathfinding::Util::TileHandler*) == 0x8);
    // public readonly System.Collections.Generic.List`1<Pathfinding.IntRect> forcedReloadRects
    // Size: 0x8
    // Offset: 0x18
    ::System::Collections::Generic::List_1<::Pathfinding::IntRect>* forcedReloadRects;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::Pathfinding::IntRect>*) == 0x8);
    // private readonly Pathfinding.NavmeshBase graph
    // Size: 0x8
    // Offset: 0x20
    ::Pathfinding::NavmeshBase* graph;
    // Field size check
    static_assert(sizeof(::Pathfinding::NavmeshBase*) == 0x8);
    public:
    // Get instance field reference: public Pathfinding.Util.TileHandler handler
    [[deprecated("Use field access instead!")]] ::Pathfinding::Util::TileHandler*& dyn_handler();
    // Get instance field reference: public readonly System.Collections.Generic.List`1<Pathfinding.IntRect> forcedReloadRects
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Pathfinding::IntRect>*& dyn_forcedReloadRects();
    // Get instance field reference: private readonly Pathfinding.NavmeshBase graph
    [[deprecated("Use field access instead!")]] ::Pathfinding::NavmeshBase*& dyn_graph();
    // public System.Void .ctor(Pathfinding.NavmeshBase graph)
    // Offset: 0x29FC428
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static NavmeshUpdates::NavmeshUpdateSettings* New_ctor(::Pathfinding::NavmeshBase* graph) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshUpdates::NavmeshUpdateSettings::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<NavmeshUpdates::NavmeshUpdateSettings*, creationType>(graph)));
    }
    // public System.Void Refresh(System.Boolean forceCreate)
    // Offset: 0x29FBBFC
    void Refresh(bool forceCreate);
    // public System.Void OnRecalculatedTiles(Pathfinding.NavmeshTile[] tiles)
    // Offset: 0x29FC4C4
    void OnRecalculatedTiles(::ArrayW<::Pathfinding::NavmeshTile*> tiles);
    // public System.Void AddClipper(Pathfinding.NavmeshClipper obj)
    // Offset: 0x29FB728
    void AddClipper(::Pathfinding::NavmeshClipper* obj);
    // public System.Void RemoveClipper(Pathfinding.NavmeshClipper obj)
    // Offset: 0x29FB924
    void RemoveClipper(::Pathfinding::NavmeshClipper* obj);
  }; // Pathfinding.NavmeshUpdates/NavmeshUpdateSettings
  #pragma pack(pop)
  static check_size<sizeof(NavmeshUpdates::NavmeshUpdateSettings), 32 + sizeof(::Pathfinding::NavmeshBase*)> __Pathfinding_NavmeshUpdates_NavmeshUpdateSettingsSizeCheck;
  static_assert(sizeof(NavmeshUpdates::NavmeshUpdateSettings) == 0x28);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Pathfinding::NavmeshUpdates::NavmeshUpdateSettings::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: Pathfinding::NavmeshUpdates::NavmeshUpdateSettings::Refresh
// Il2CppName: Refresh
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Pathfinding::NavmeshUpdates::NavmeshUpdateSettings::*)(bool)>(&Pathfinding::NavmeshUpdates::NavmeshUpdateSettings::Refresh)> {
  static const MethodInfo* get() {
    static auto* forceCreate = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::NavmeshUpdates::NavmeshUpdateSettings*), "Refresh", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{forceCreate});
  }
};
// Writing MetadataGetter for method: Pathfinding::NavmeshUpdates::NavmeshUpdateSettings::OnRecalculatedTiles
// Il2CppName: OnRecalculatedTiles
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Pathfinding::NavmeshUpdates::NavmeshUpdateSettings::*)(::ArrayW<::Pathfinding::NavmeshTile*>)>(&Pathfinding::NavmeshUpdates::NavmeshUpdateSettings::OnRecalculatedTiles)> {
  static const MethodInfo* get() {
    static auto* tiles = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("Pathfinding", "NavmeshTile"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::NavmeshUpdates::NavmeshUpdateSettings*), "OnRecalculatedTiles", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{tiles});
  }
};
// Writing MetadataGetter for method: Pathfinding::NavmeshUpdates::NavmeshUpdateSettings::AddClipper
// Il2CppName: AddClipper
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Pathfinding::NavmeshUpdates::NavmeshUpdateSettings::*)(::Pathfinding::NavmeshClipper*)>(&Pathfinding::NavmeshUpdates::NavmeshUpdateSettings::AddClipper)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("Pathfinding", "NavmeshClipper")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::NavmeshUpdates::NavmeshUpdateSettings*), "AddClipper", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Pathfinding::NavmeshUpdates::NavmeshUpdateSettings::RemoveClipper
// Il2CppName: RemoveClipper
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Pathfinding::NavmeshUpdates::NavmeshUpdateSettings::*)(::Pathfinding::NavmeshClipper*)>(&Pathfinding::NavmeshUpdates::NavmeshUpdateSettings::RemoveClipper)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("Pathfinding", "NavmeshClipper")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::NavmeshUpdates::NavmeshUpdateSettings*), "RemoveClipper", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
