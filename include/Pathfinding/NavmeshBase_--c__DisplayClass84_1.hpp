// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Pathfinding.NavmeshBase
#include "Pathfinding/NavmeshBase.hpp"
// Including type: Pathfinding.Connection
#include "Pathfinding/Connection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Pathfinding
namespace Pathfinding {
  // Forward declaring type: TriangleMeshNode
  class TriangleMeshNode;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Func`2<T, TResult>
  template<typename T, typename TResult>
  class Func_2;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Pathfinding::NavmeshBase::$$c__DisplayClass84_1);
DEFINE_IL2CPP_ARG_TYPE(::Pathfinding::NavmeshBase::$$c__DisplayClass84_1*, "Pathfinding", "NavmeshBase/<>c__DisplayClass84_1");
// Type namespace: Pathfinding
namespace Pathfinding {
  // Size: 0x20
  #pragma pack(push, 1)
  // Autogenerated type: Pathfinding.NavmeshBase/<>c__DisplayClass84_1
  // [TokenAttribute] Offset: FFFFFFFF
  // [CompilerGeneratedAttribute] Offset: FFFFFFFF
  class NavmeshBase::$$c__DisplayClass84_1 : public ::Il2CppObject {
    public:
    public:
    // public Pathfinding.TriangleMeshNode triNode
    // Size: 0x8
    // Offset: 0x10
    ::Pathfinding::TriangleMeshNode* triNode;
    // Field size check
    static_assert(sizeof(::Pathfinding::TriangleMeshNode*) == 0x8);
    // public System.Func`2<Pathfinding.Connection,System.Boolean> <>9__4
    // Size: 0x8
    // Offset: 0x18
    ::System::Func_2<::Pathfinding::Connection, bool>* $$9__4;
    // Field size check
    static_assert(sizeof(::System::Func_2<::Pathfinding::Connection, bool>*) == 0x8);
    public:
    // Get instance field reference: public Pathfinding.TriangleMeshNode triNode
    [[deprecated("Use field access instead!")]] ::Pathfinding::TriangleMeshNode*& dyn_triNode();
    // Get instance field reference: public System.Func`2<Pathfinding.Connection,System.Boolean> <>9__4
    [[deprecated("Use field access instead!")]] ::System::Func_2<::Pathfinding::Connection, bool>*& dyn_$$9__4();
    // public System.Void .ctor()
    // Offset: 0x29D6418
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static NavmeshBase::$$c__DisplayClass84_1* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshBase::$$c__DisplayClass84_1::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<NavmeshBase::$$c__DisplayClass84_1*, creationType>()));
    }
    // System.Boolean <PostDeserialization>b__4(Pathfinding.Connection conn)
    // Offset: 0x29D6420
    bool $PostDeserialization$b__4(::Pathfinding::Connection conn);
  }; // Pathfinding.NavmeshBase/<>c__DisplayClass84_1
  #pragma pack(pop)
  static check_size<sizeof(NavmeshBase::$$c__DisplayClass84_1), 24 + sizeof(::System::Func_2<::Pathfinding::Connection, bool>*)> __Pathfinding_NavmeshBase_$$c__DisplayClass84_1SizeCheck;
  static_assert(sizeof(NavmeshBase::$$c__DisplayClass84_1) == 0x20);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Pathfinding::NavmeshBase::$$c__DisplayClass84_1::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: Pathfinding::NavmeshBase::$$c__DisplayClass84_1::$PostDeserialization$b__4
// Il2CppName: <PostDeserialization>b__4
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Pathfinding::NavmeshBase::$$c__DisplayClass84_1::*)(::Pathfinding::Connection)>(&Pathfinding::NavmeshBase::$$c__DisplayClass84_1::$PostDeserialization$b__4)> {
  static const MethodInfo* get() {
    static auto* conn = &::il2cpp_utils::GetClassFromName("Pathfinding", "Connection")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::NavmeshBase::$$c__DisplayClass84_1*), "<PostDeserialization>b__4", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{conn});
  }
};
