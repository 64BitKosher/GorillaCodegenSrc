// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Pathfinding.Recast.RecastMeshGatherer
#include "Pathfinding/Recast/RecastMeshGatherer.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
// Completed includes
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Pathfinding::Recast::RecastMeshGatherer::CapsuleCache);
DEFINE_IL2CPP_ARG_TYPE(::Pathfinding::Recast::RecastMeshGatherer::CapsuleCache*, "Pathfinding.Recast", "RecastMeshGatherer/CapsuleCache");
// Type namespace: Pathfinding.Recast
namespace Pathfinding::Recast {
  // Size: 0x28
  #pragma pack(push, 1)
  // Autogenerated type: Pathfinding.Recast.RecastMeshGatherer/CapsuleCache
  // [TokenAttribute] Offset: FFFFFFFF
  class RecastMeshGatherer::CapsuleCache : public ::Il2CppObject {
    public:
    public:
    // public System.Int32 rows
    // Size: 0x4
    // Offset: 0x10
    int rows;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // public System.Single height
    // Size: 0x4
    // Offset: 0x14
    float height;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // public UnityEngine.Vector3[] verts
    // Size: 0x8
    // Offset: 0x18
    ::ArrayW<::UnityEngine::Vector3> verts;
    // Field size check
    static_assert(sizeof(::ArrayW<::UnityEngine::Vector3>) == 0x8);
    // public System.Int32[] tris
    // Size: 0x8
    // Offset: 0x20
    ::ArrayW<int> tris;
    // Field size check
    static_assert(sizeof(::ArrayW<int>) == 0x8);
    public:
    // Get instance field reference: public System.Int32 rows
    [[deprecated("Use field access instead!")]] int& dyn_rows();
    // Get instance field reference: public System.Single height
    [[deprecated("Use field access instead!")]] float& dyn_height();
    // Get instance field reference: public UnityEngine.Vector3[] verts
    [[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Vector3>& dyn_verts();
    // Get instance field reference: public System.Int32[] tris
    [[deprecated("Use field access instead!")]] ::ArrayW<int>& dyn_tris();
    // public System.Void .ctor()
    // Offset: 0x2A1EA24
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static RecastMeshGatherer::CapsuleCache* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Recast::RecastMeshGatherer::CapsuleCache::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<RecastMeshGatherer::CapsuleCache*, creationType>()));
    }
  }; // Pathfinding.Recast.RecastMeshGatherer/CapsuleCache
  #pragma pack(pop)
  static check_size<sizeof(RecastMeshGatherer::CapsuleCache), 32 + sizeof(::ArrayW<int>)> __Pathfinding_Recast_RecastMeshGatherer_CapsuleCacheSizeCheck;
  static_assert(sizeof(RecastMeshGatherer::CapsuleCache) == 0x28);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Pathfinding::Recast::RecastMeshGatherer::CapsuleCache::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
