// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Pathfinding.PathProcessor
#include "Pathfinding/PathProcessor.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Pathfinding
namespace Pathfinding {
  // Forward declaring type: NavMeshGraph
  class NavMeshGraph;
  // Forward declaring type: GridGraph
  class GridGraph;
  // Forward declaring type: LayerGridGraph
  class LayerGridGraph;
  // Forward declaring type: PointGraph
  class PointGraph;
  // Forward declaring type: RecastGraph
  class RecastGraph;
  // Forward declaring type: NavGraph
  class NavGraph;
  // Forward declaring type: GraphNode
  class GraphNode;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Type
  class Type;
  // Forward declaring type: Action`1<T>
  template<typename T>
  class Action_1;
  // Forward declaring type: Func`2<T, TResult>
  template<typename T, typename TResult>
  class Func_2;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: TextAsset
  class TextAsset;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: AstarPath
  class AstarPath;
}
// Forward declaring namespace: Pathfinding::Serialization
namespace Pathfinding::Serialization {
  // Forward declaring type: SerializeSettings
  class SerializeSettings;
  // Forward declaring type: AstarSerializer
  class AstarSerializer;
}
// Forward declaring namespace: System::Collections
namespace System::Collections {
  // Forward declaring type: IEnumerable
  class IEnumerable;
}
// Completed forward declares
// Type namespace: Pathfinding
namespace Pathfinding {
  // Forward declaring type: AstarData
  class AstarData;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Pathfinding::AstarData);
DEFINE_IL2CPP_ARG_TYPE(::Pathfinding::AstarData*, "Pathfinding", "AstarData");
// Type namespace: Pathfinding
namespace Pathfinding {
  // Size: 0x78
  #pragma pack(push, 1)
  // Autogenerated type: Pathfinding.AstarData
  // [TokenAttribute] Offset: FFFFFFFF
  class AstarData : public ::Il2CppObject {
    public:
    // Nested type: ::Pathfinding::AstarData::$$c__DisplayClass53_0
    class $$c__DisplayClass53_0;
    // Nested type: ::Pathfinding::AstarData::$$c__DisplayClass64_0
    class $$c__DisplayClass64_0;
    // Nested type: ::Pathfinding::AstarData::$$c__DisplayClass65_0
    class $$c__DisplayClass65_0;
    // Nested type: ::Pathfinding::AstarData::$FindGraphsOfType$d__66
    class $FindGraphsOfType$d__66;
    // Nested type: ::Pathfinding::AstarData::$GetRaycastableGraphs$d__68
    class $GetRaycastableGraphs$d__68;
    // Nested type: ::Pathfinding::AstarData::$GetUpdateableGraphs$d__67
    class $GetUpdateableGraphs$d__67;
    public:
    // private Pathfinding.NavMeshGraph <navmesh>k__BackingField
    // Size: 0x8
    // Offset: 0x10
    ::Pathfinding::NavMeshGraph* navmesh;
    // Field size check
    static_assert(sizeof(::Pathfinding::NavMeshGraph*) == 0x8);
    // private Pathfinding.GridGraph <gridGraph>k__BackingField
    // Size: 0x8
    // Offset: 0x18
    ::Pathfinding::GridGraph* gridGraph;
    // Field size check
    static_assert(sizeof(::Pathfinding::GridGraph*) == 0x8);
    // private Pathfinding.LayerGridGraph <layerGridGraph>k__BackingField
    // Size: 0x8
    // Offset: 0x20
    ::Pathfinding::LayerGridGraph* layerGridGraph;
    // Field size check
    static_assert(sizeof(::Pathfinding::LayerGridGraph*) == 0x8);
    // private Pathfinding.PointGraph <pointGraph>k__BackingField
    // Size: 0x8
    // Offset: 0x28
    ::Pathfinding::PointGraph* pointGraph;
    // Field size check
    static_assert(sizeof(::Pathfinding::PointGraph*) == 0x8);
    // private Pathfinding.RecastGraph <recastGraph>k__BackingField
    // Size: 0x8
    // Offset: 0x30
    ::Pathfinding::RecastGraph* recastGraph;
    // Field size check
    static_assert(sizeof(::Pathfinding::RecastGraph*) == 0x8);
    // private System.Type[] <graphTypes>k__BackingField
    // Size: 0x8
    // Offset: 0x38
    ::ArrayW<::System::Type*> graphTypes;
    // Field size check
    static_assert(sizeof(::ArrayW<::System::Type*>) == 0x8);
    // public Pathfinding.NavGraph[] graphs
    // Size: 0x8
    // Offset: 0x40
    ::ArrayW<::Pathfinding::NavGraph*> graphs;
    // Field size check
    static_assert(sizeof(::ArrayW<::Pathfinding::NavGraph*>) == 0x8);
    // private System.String dataString
    // Size: 0x8
    // Offset: 0x48
    ::StringW dataString;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private System.Byte[] upgradeData
    // Size: 0x8
    // Offset: 0x50
    ::ArrayW<uint8_t> upgradeData;
    // Field size check
    static_assert(sizeof(::ArrayW<uint8_t>) == 0x8);
    // public UnityEngine.TextAsset file_cachedStartup
    // Size: 0x8
    // Offset: 0x58
    ::UnityEngine::TextAsset* file_cachedStartup;
    // Field size check
    static_assert(sizeof(::UnityEngine::TextAsset*) == 0x8);
    // public System.Byte[] data_cachedStartup
    // Size: 0x8
    // Offset: 0x60
    ::ArrayW<uint8_t> data_cachedStartup;
    // Field size check
    static_assert(sizeof(::ArrayW<uint8_t>) == 0x8);
    // public System.Boolean cacheStartup
    // Size: 0x1
    // Offset: 0x68
    bool cacheStartup;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: cacheStartup and: graphStructureLocked
    char __padding11[0x7] = {};
    // private System.Collections.Generic.List`1<System.Boolean> graphStructureLocked
    // Size: 0x8
    // Offset: 0x70
    ::System::Collections::Generic::List_1<bool>* graphStructureLocked;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<bool>*) == 0x8);
    public:
    // Get instance field reference: private Pathfinding.NavMeshGraph <navmesh>k__BackingField
    [[deprecated("Use field access instead!")]] ::Pathfinding::NavMeshGraph*& dyn_$navmesh$k__BackingField();
    // Get instance field reference: private Pathfinding.GridGraph <gridGraph>k__BackingField
    [[deprecated("Use field access instead!")]] ::Pathfinding::GridGraph*& dyn_$gridGraph$k__BackingField();
    // Get instance field reference: private Pathfinding.LayerGridGraph <layerGridGraph>k__BackingField
    [[deprecated("Use field access instead!")]] ::Pathfinding::LayerGridGraph*& dyn_$layerGridGraph$k__BackingField();
    // Get instance field reference: private Pathfinding.PointGraph <pointGraph>k__BackingField
    [[deprecated("Use field access instead!")]] ::Pathfinding::PointGraph*& dyn_$pointGraph$k__BackingField();
    // Get instance field reference: private Pathfinding.RecastGraph <recastGraph>k__BackingField
    [[deprecated("Use field access instead!")]] ::Pathfinding::RecastGraph*& dyn_$recastGraph$k__BackingField();
    // Get instance field reference: private System.Type[] <graphTypes>k__BackingField
    [[deprecated("Use field access instead!")]] ::ArrayW<::System::Type*>& dyn_$graphTypes$k__BackingField();
    // Get instance field reference: public Pathfinding.NavGraph[] graphs
    [[deprecated("Use field access instead!")]] ::ArrayW<::Pathfinding::NavGraph*>& dyn_graphs();
    // Get instance field reference: private System.String dataString
    [[deprecated("Use field access instead!")]] ::StringW& dyn_dataString();
    // Get instance field reference: private System.Byte[] upgradeData
    [[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& dyn_upgradeData();
    // Get instance field reference: public UnityEngine.TextAsset file_cachedStartup
    [[deprecated("Use field access instead!")]] ::UnityEngine::TextAsset*& dyn_file_cachedStartup();
    // Get instance field reference: public System.Byte[] data_cachedStartup
    [[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& dyn_data_cachedStartup();
    // Get instance field reference: public System.Boolean cacheStartup
    [[deprecated("Use field access instead!")]] bool& dyn_cacheStartup();
    // Get instance field reference: private System.Collections.Generic.List`1<System.Boolean> graphStructureLocked
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<bool>*& dyn_graphStructureLocked();
    // static public AstarPath get_active()
    // Offset: 0x299AC34
    static ::GlobalNamespace::AstarPath* get_active();
    // public Pathfinding.NavMeshGraph get_navmesh()
    // Offset: 0x299AC8C
    ::Pathfinding::NavMeshGraph* get_navmesh();
    // private System.Void set_navmesh(Pathfinding.NavMeshGraph value)
    // Offset: 0x299AC94
    void set_navmesh(::Pathfinding::NavMeshGraph* value);
    // public Pathfinding.GridGraph get_gridGraph()
    // Offset: 0x299AC9C
    ::Pathfinding::GridGraph* get_gridGraph();
    // private System.Void set_gridGraph(Pathfinding.GridGraph value)
    // Offset: 0x299ACA4
    void set_gridGraph(::Pathfinding::GridGraph* value);
    // public Pathfinding.LayerGridGraph get_layerGridGraph()
    // Offset: 0x299ACAC
    ::Pathfinding::LayerGridGraph* get_layerGridGraph();
    // private System.Void set_layerGridGraph(Pathfinding.LayerGridGraph value)
    // Offset: 0x299ACB4
    void set_layerGridGraph(::Pathfinding::LayerGridGraph* value);
    // public Pathfinding.PointGraph get_pointGraph()
    // Offset: 0x299ACBC
    ::Pathfinding::PointGraph* get_pointGraph();
    // private System.Void set_pointGraph(Pathfinding.PointGraph value)
    // Offset: 0x299ACC4
    void set_pointGraph(::Pathfinding::PointGraph* value);
    // public Pathfinding.RecastGraph get_recastGraph()
    // Offset: 0x299ACCC
    ::Pathfinding::RecastGraph* get_recastGraph();
    // private System.Void set_recastGraph(Pathfinding.RecastGraph value)
    // Offset: 0x299ACD4
    void set_recastGraph(::Pathfinding::RecastGraph* value);
    // public System.Type[] get_graphTypes()
    // Offset: 0x299ACDC
    ::ArrayW<::System::Type*> get_graphTypes();
    // private System.Void set_graphTypes(System.Type[] value)
    // Offset: 0x299ACE4
    void set_graphTypes(::ArrayW<::System::Type*> value);
    // private System.Byte[] get_data()
    // Offset: 0x299ACEC
    ::ArrayW<uint8_t> get_data();
    // private System.Void set_data(System.Byte[] value)
    // Offset: 0x299AD88
    void set_data(::ArrayW<uint8_t> value);
    // public System.Byte[] GetData()
    // Offset: 0x299AE08
    ::ArrayW<uint8_t> GetData();
    // public System.Void SetData(System.Byte[] data)
    // Offset: 0x299AE0C
    void SetData(::ArrayW<uint8_t> data);
    // public System.Void Awake()
    // Offset: 0x299AE10
    void Awake();
    // System.Void LockGraphStructure(System.Boolean allowAddingGraphs)
    // Offset: 0x299B020
    void LockGraphStructure(bool allowAddingGraphs);
    // System.Void UnlockGraphStructure()
    // Offset: 0x299B0C8
    void UnlockGraphStructure();
    // private Pathfinding.PathProcessor/GraphUpdateLock AssertSafe(System.Boolean onlyAddingGraph)
    // Offset: 0x299B164
    ::Pathfinding::PathProcessor::GraphUpdateLock AssertSafe(bool onlyAddingGraph);
    // public System.Void GetNodes(System.Action`1<Pathfinding.GraphNode> callback)
    // Offset: 0x299B394
    void GetNodes(::System::Action_1<::Pathfinding::GraphNode*>* callback);
    // public System.Void UpdateShortcuts()
    // Offset: 0x299B404
    void UpdateShortcuts();
    // public System.Void LoadFromCache()
    // Offset: 0x299AEC8
    void LoadFromCache();
    // public System.Byte[] SerializeGraphs()
    // Offset: 0x299B80C
    ::ArrayW<uint8_t> SerializeGraphs();
    // public System.Byte[] SerializeGraphs(Pathfinding.Serialization.SerializeSettings settings)
    // Offset: 0x299B840
    ::ArrayW<uint8_t> SerializeGraphs(::Pathfinding::Serialization::SerializeSettings* settings);
    // public System.Byte[] SerializeGraphs(Pathfinding.Serialization.SerializeSettings settings, out System.UInt32 checksum)
    // Offset: 0x299B858
    ::ArrayW<uint8_t> SerializeGraphs(::Pathfinding::Serialization::SerializeSettings* settings, ByRef<uint> checksum);
    // public System.Void DeserializeGraphs()
    // Offset: 0x299AFF0
    void DeserializeGraphs();
    // private System.Void ClearGraphs()
    // Offset: 0x299B990
    void ClearGraphs();
    // public System.Void OnDestroy()
    // Offset: 0x299BAF4
    void OnDestroy();
    // public System.Void DeserializeGraphs(System.Byte[] bytes)
    // Offset: 0x299B7BC
    void DeserializeGraphs(::ArrayW<uint8_t> bytes);
    // public System.Void DeserializeGraphsAdditive(System.Byte[] bytes)
    // Offset: 0x299BAF8
    void DeserializeGraphsAdditive(::ArrayW<uint8_t> bytes);
    // private System.Void DeserializeGraphsPartAdditive(Pathfinding.Serialization.AstarSerializer sr)
    // Offset: 0x299BE1C
    void DeserializeGraphsPartAdditive(::Pathfinding::Serialization::AstarSerializer* sr);
    // public System.Void FindGraphTypes()
    // Offset: 0x299C240
    void FindGraphTypes();
    // public System.Type GetGraphType(System.String type)
    // Offset: 0x299C55C
    ::System::Type* GetGraphType(::StringW type);
    // public Pathfinding.NavGraph CreateGraph(System.String type)
    // Offset: 0x299C5FC
    ::Pathfinding::NavGraph* CreateGraph(::StringW type);
    // Pathfinding.NavGraph CreateGraph(System.Type type)
    // Offset: 0x299C79C
    ::Pathfinding::NavGraph* CreateGraph(::System::Type* type);
    // public Pathfinding.NavGraph AddGraph(System.String type)
    // Offset: 0x299C87C
    ::Pathfinding::NavGraph* AddGraph(::StringW type);
    // public Pathfinding.NavGraph AddGraph(System.Type type)
    // Offset: 0x299CCB0
    ::Pathfinding::NavGraph* AddGraph(::System::Type* type);
    // private System.Void AddGraph(Pathfinding.NavGraph graph)
    // Offset: 0x299C9C0
    void AddGraph(::Pathfinding::NavGraph* graph);
    // public System.Boolean RemoveGraph(Pathfinding.NavGraph graph)
    // Offset: 0x299CEE8
    bool RemoveGraph(::Pathfinding::NavGraph* graph);
    // static public Pathfinding.NavGraph GetGraph(Pathfinding.GraphNode node)
    // Offset: 0x299D030
    static ::Pathfinding::NavGraph* GetGraph(::Pathfinding::GraphNode* node);
    // public Pathfinding.NavGraph FindGraph(System.Func`2<Pathfinding.NavGraph,System.Boolean> predicate)
    // Offset: 0x299A660
    ::Pathfinding::NavGraph* FindGraph(::System::Func_2<::Pathfinding::NavGraph*, bool>* predicate);
    // public Pathfinding.NavGraph FindGraphOfType(System.Type type)
    // Offset: 0x299B6F8
    ::Pathfinding::NavGraph* FindGraphOfType(::System::Type* type);
    // public Pathfinding.NavGraph FindGraphWhichInheritsFrom(System.Type type)
    // Offset: 0x299D134
    ::Pathfinding::NavGraph* FindGraphWhichInheritsFrom(::System::Type* type);
    // public System.Collections.IEnumerable FindGraphsOfType(System.Type type)
    // Offset: 0x299D200
    ::System::Collections::IEnumerable* FindGraphsOfType(::System::Type* type);
    // public System.Collections.IEnumerable GetUpdateableGraphs()
    // Offset: 0x299D2CC
    ::System::Collections::IEnumerable* GetUpdateableGraphs();
    // public System.Collections.IEnumerable GetRaycastableGraphs()
    // Offset: 0x299D37C
    ::System::Collections::IEnumerable* GetRaycastableGraphs();
    // public System.Int32 GetGraphIndex(Pathfinding.NavGraph graph)
    // Offset: 0x299D42C
    int GetGraphIndex(::Pathfinding::NavGraph* graph);
    // public System.Void .ctor()
    // Offset: 0x299D520
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static AstarData* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarData::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<AstarData*, creationType>()));
    }
  }; // Pathfinding.AstarData
  #pragma pack(pop)
  static check_size<sizeof(AstarData), 112 + sizeof(::System::Collections::Generic::List_1<bool>*)> __Pathfinding_AstarDataSizeCheck;
  static_assert(sizeof(AstarData) == 0x78);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Pathfinding::AstarData::get_active
// Il2CppName: get_active
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::AstarPath* (*)()>(&Pathfinding::AstarData::get_active)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::AstarData*), "get_active", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Pathfinding::AstarData::get_navmesh
// Il2CppName: get_navmesh
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Pathfinding::NavMeshGraph* (Pathfinding::AstarData::*)()>(&Pathfinding::AstarData::get_navmesh)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::AstarData*), "get_navmesh", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Pathfinding::AstarData::set_navmesh
// Il2CppName: set_navmesh
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Pathfinding::AstarData::*)(::Pathfinding::NavMeshGraph*)>(&Pathfinding::AstarData::set_navmesh)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("Pathfinding", "NavMeshGraph")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::AstarData*), "set_navmesh", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Pathfinding::AstarData::get_gridGraph
// Il2CppName: get_gridGraph
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Pathfinding::GridGraph* (Pathfinding::AstarData::*)()>(&Pathfinding::AstarData::get_gridGraph)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::AstarData*), "get_gridGraph", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Pathfinding::AstarData::set_gridGraph
// Il2CppName: set_gridGraph
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Pathfinding::AstarData::*)(::Pathfinding::GridGraph*)>(&Pathfinding::AstarData::set_gridGraph)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("Pathfinding", "GridGraph")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::AstarData*), "set_gridGraph", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Pathfinding::AstarData::get_layerGridGraph
// Il2CppName: get_layerGridGraph
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Pathfinding::LayerGridGraph* (Pathfinding::AstarData::*)()>(&Pathfinding::AstarData::get_layerGridGraph)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::AstarData*), "get_layerGridGraph", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Pathfinding::AstarData::set_layerGridGraph
// Il2CppName: set_layerGridGraph
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Pathfinding::AstarData::*)(::Pathfinding::LayerGridGraph*)>(&Pathfinding::AstarData::set_layerGridGraph)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("Pathfinding", "LayerGridGraph")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::AstarData*), "set_layerGridGraph", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Pathfinding::AstarData::get_pointGraph
// Il2CppName: get_pointGraph
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Pathfinding::PointGraph* (Pathfinding::AstarData::*)()>(&Pathfinding::AstarData::get_pointGraph)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::AstarData*), "get_pointGraph", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Pathfinding::AstarData::set_pointGraph
// Il2CppName: set_pointGraph
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Pathfinding::AstarData::*)(::Pathfinding::PointGraph*)>(&Pathfinding::AstarData::set_pointGraph)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("Pathfinding", "PointGraph")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::AstarData*), "set_pointGraph", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Pathfinding::AstarData::get_recastGraph
// Il2CppName: get_recastGraph
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Pathfinding::RecastGraph* (Pathfinding::AstarData::*)()>(&Pathfinding::AstarData::get_recastGraph)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::AstarData*), "get_recastGraph", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Pathfinding::AstarData::set_recastGraph
// Il2CppName: set_recastGraph
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Pathfinding::AstarData::*)(::Pathfinding::RecastGraph*)>(&Pathfinding::AstarData::set_recastGraph)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("Pathfinding", "RecastGraph")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::AstarData*), "set_recastGraph", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Pathfinding::AstarData::get_graphTypes
// Il2CppName: get_graphTypes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::System::Type*> (Pathfinding::AstarData::*)()>(&Pathfinding::AstarData::get_graphTypes)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::AstarData*), "get_graphTypes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Pathfinding::AstarData::set_graphTypes
// Il2CppName: set_graphTypes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Pathfinding::AstarData::*)(::ArrayW<::System::Type*>)>(&Pathfinding::AstarData::set_graphTypes)> {
  static const MethodInfo* get() {
    static auto* value = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Type"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::AstarData*), "set_graphTypes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Pathfinding::AstarData::get_data
// Il2CppName: get_data
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<uint8_t> (Pathfinding::AstarData::*)()>(&Pathfinding::AstarData::get_data)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::AstarData*), "get_data", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Pathfinding::AstarData::set_data
// Il2CppName: set_data
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Pathfinding::AstarData::*)(::ArrayW<uint8_t>)>(&Pathfinding::AstarData::set_data)> {
  static const MethodInfo* get() {
    static auto* value = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::AstarData*), "set_data", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Pathfinding::AstarData::GetData
// Il2CppName: GetData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<uint8_t> (Pathfinding::AstarData::*)()>(&Pathfinding::AstarData::GetData)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::AstarData*), "GetData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Pathfinding::AstarData::SetData
// Il2CppName: SetData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Pathfinding::AstarData::*)(::ArrayW<uint8_t>)>(&Pathfinding::AstarData::SetData)> {
  static const MethodInfo* get() {
    static auto* data = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::AstarData*), "SetData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{data});
  }
};
// Writing MetadataGetter for method: Pathfinding::AstarData::Awake
// Il2CppName: Awake
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Pathfinding::AstarData::*)()>(&Pathfinding::AstarData::Awake)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::AstarData*), "Awake", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Pathfinding::AstarData::LockGraphStructure
// Il2CppName: LockGraphStructure
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Pathfinding::AstarData::*)(bool)>(&Pathfinding::AstarData::LockGraphStructure)> {
  static const MethodInfo* get() {
    static auto* allowAddingGraphs = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::AstarData*), "LockGraphStructure", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{allowAddingGraphs});
  }
};
// Writing MetadataGetter for method: Pathfinding::AstarData::UnlockGraphStructure
// Il2CppName: UnlockGraphStructure
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Pathfinding::AstarData::*)()>(&Pathfinding::AstarData::UnlockGraphStructure)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::AstarData*), "UnlockGraphStructure", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Pathfinding::AstarData::AssertSafe
// Il2CppName: AssertSafe
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Pathfinding::PathProcessor::GraphUpdateLock (Pathfinding::AstarData::*)(bool)>(&Pathfinding::AstarData::AssertSafe)> {
  static const MethodInfo* get() {
    static auto* onlyAddingGraph = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::AstarData*), "AssertSafe", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{onlyAddingGraph});
  }
};
// Writing MetadataGetter for method: Pathfinding::AstarData::GetNodes
// Il2CppName: GetNodes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Pathfinding::AstarData::*)(::System::Action_1<::Pathfinding::GraphNode*>*)>(&Pathfinding::AstarData::GetNodes)> {
  static const MethodInfo* get() {
    static auto* callback = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("Pathfinding", "GraphNode")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::AstarData*), "GetNodes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{callback});
  }
};
// Writing MetadataGetter for method: Pathfinding::AstarData::UpdateShortcuts
// Il2CppName: UpdateShortcuts
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Pathfinding::AstarData::*)()>(&Pathfinding::AstarData::UpdateShortcuts)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::AstarData*), "UpdateShortcuts", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Pathfinding::AstarData::LoadFromCache
// Il2CppName: LoadFromCache
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Pathfinding::AstarData::*)()>(&Pathfinding::AstarData::LoadFromCache)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::AstarData*), "LoadFromCache", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Pathfinding::AstarData::SerializeGraphs
// Il2CppName: SerializeGraphs
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<uint8_t> (Pathfinding::AstarData::*)()>(&Pathfinding::AstarData::SerializeGraphs)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::AstarData*), "SerializeGraphs", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Pathfinding::AstarData::SerializeGraphs
// Il2CppName: SerializeGraphs
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<uint8_t> (Pathfinding::AstarData::*)(::Pathfinding::Serialization::SerializeSettings*)>(&Pathfinding::AstarData::SerializeGraphs)> {
  static const MethodInfo* get() {
    static auto* settings = &::il2cpp_utils::GetClassFromName("Pathfinding.Serialization", "SerializeSettings")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::AstarData*), "SerializeGraphs", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{settings});
  }
};
// Writing MetadataGetter for method: Pathfinding::AstarData::SerializeGraphs
// Il2CppName: SerializeGraphs
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<uint8_t> (Pathfinding::AstarData::*)(::Pathfinding::Serialization::SerializeSettings*, ByRef<uint>)>(&Pathfinding::AstarData::SerializeGraphs)> {
  static const MethodInfo* get() {
    static auto* settings = &::il2cpp_utils::GetClassFromName("Pathfinding.Serialization", "SerializeSettings")->byval_arg;
    static auto* checksum = &::il2cpp_utils::GetClassFromName("System", "UInt32")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::AstarData*), "SerializeGraphs", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{settings, checksum});
  }
};
// Writing MetadataGetter for method: Pathfinding::AstarData::DeserializeGraphs
// Il2CppName: DeserializeGraphs
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Pathfinding::AstarData::*)()>(&Pathfinding::AstarData::DeserializeGraphs)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::AstarData*), "DeserializeGraphs", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Pathfinding::AstarData::ClearGraphs
// Il2CppName: ClearGraphs
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Pathfinding::AstarData::*)()>(&Pathfinding::AstarData::ClearGraphs)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::AstarData*), "ClearGraphs", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Pathfinding::AstarData::OnDestroy
// Il2CppName: OnDestroy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Pathfinding::AstarData::*)()>(&Pathfinding::AstarData::OnDestroy)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::AstarData*), "OnDestroy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Pathfinding::AstarData::DeserializeGraphs
// Il2CppName: DeserializeGraphs
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Pathfinding::AstarData::*)(::ArrayW<uint8_t>)>(&Pathfinding::AstarData::DeserializeGraphs)> {
  static const MethodInfo* get() {
    static auto* bytes = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::AstarData*), "DeserializeGraphs", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{bytes});
  }
};
// Writing MetadataGetter for method: Pathfinding::AstarData::DeserializeGraphsAdditive
// Il2CppName: DeserializeGraphsAdditive
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Pathfinding::AstarData::*)(::ArrayW<uint8_t>)>(&Pathfinding::AstarData::DeserializeGraphsAdditive)> {
  static const MethodInfo* get() {
    static auto* bytes = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::AstarData*), "DeserializeGraphsAdditive", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{bytes});
  }
};
// Writing MetadataGetter for method: Pathfinding::AstarData::DeserializeGraphsPartAdditive
// Il2CppName: DeserializeGraphsPartAdditive
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Pathfinding::AstarData::*)(::Pathfinding::Serialization::AstarSerializer*)>(&Pathfinding::AstarData::DeserializeGraphsPartAdditive)> {
  static const MethodInfo* get() {
    static auto* sr = &::il2cpp_utils::GetClassFromName("Pathfinding.Serialization", "AstarSerializer")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::AstarData*), "DeserializeGraphsPartAdditive", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sr});
  }
};
// Writing MetadataGetter for method: Pathfinding::AstarData::FindGraphTypes
// Il2CppName: FindGraphTypes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Pathfinding::AstarData::*)()>(&Pathfinding::AstarData::FindGraphTypes)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::AstarData*), "FindGraphTypes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Pathfinding::AstarData::GetGraphType
// Il2CppName: GetGraphType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Type* (Pathfinding::AstarData::*)(::StringW)>(&Pathfinding::AstarData::GetGraphType)> {
  static const MethodInfo* get() {
    static auto* type = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::AstarData*), "GetGraphType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{type});
  }
};
// Writing MetadataGetter for method: Pathfinding::AstarData::CreateGraph
// Il2CppName: CreateGraph
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Pathfinding::NavGraph* (Pathfinding::AstarData::*)(::StringW)>(&Pathfinding::AstarData::CreateGraph)> {
  static const MethodInfo* get() {
    static auto* type = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::AstarData*), "CreateGraph", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{type});
  }
};
// Writing MetadataGetter for method: Pathfinding::AstarData::CreateGraph
// Il2CppName: CreateGraph
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Pathfinding::NavGraph* (Pathfinding::AstarData::*)(::System::Type*)>(&Pathfinding::AstarData::CreateGraph)> {
  static const MethodInfo* get() {
    static auto* type = &::il2cpp_utils::GetClassFromName("System", "Type")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::AstarData*), "CreateGraph", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{type});
  }
};
// Writing MetadataGetter for method: Pathfinding::AstarData::AddGraph
// Il2CppName: AddGraph
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Pathfinding::NavGraph* (Pathfinding::AstarData::*)(::StringW)>(&Pathfinding::AstarData::AddGraph)> {
  static const MethodInfo* get() {
    static auto* type = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::AstarData*), "AddGraph", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{type});
  }
};
// Writing MetadataGetter for method: Pathfinding::AstarData::AddGraph
// Il2CppName: AddGraph
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Pathfinding::NavGraph* (Pathfinding::AstarData::*)(::System::Type*)>(&Pathfinding::AstarData::AddGraph)> {
  static const MethodInfo* get() {
    static auto* type = &::il2cpp_utils::GetClassFromName("System", "Type")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::AstarData*), "AddGraph", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{type});
  }
};
// Writing MetadataGetter for method: Pathfinding::AstarData::AddGraph
// Il2CppName: AddGraph
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Pathfinding::AstarData::*)(::Pathfinding::NavGraph*)>(&Pathfinding::AstarData::AddGraph)> {
  static const MethodInfo* get() {
    static auto* graph = &::il2cpp_utils::GetClassFromName("Pathfinding", "NavGraph")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::AstarData*), "AddGraph", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{graph});
  }
};
// Writing MetadataGetter for method: Pathfinding::AstarData::RemoveGraph
// Il2CppName: RemoveGraph
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Pathfinding::AstarData::*)(::Pathfinding::NavGraph*)>(&Pathfinding::AstarData::RemoveGraph)> {
  static const MethodInfo* get() {
    static auto* graph = &::il2cpp_utils::GetClassFromName("Pathfinding", "NavGraph")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::AstarData*), "RemoveGraph", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{graph});
  }
};
// Writing MetadataGetter for method: Pathfinding::AstarData::GetGraph
// Il2CppName: GetGraph
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Pathfinding::NavGraph* (*)(::Pathfinding::GraphNode*)>(&Pathfinding::AstarData::GetGraph)> {
  static const MethodInfo* get() {
    static auto* node = &::il2cpp_utils::GetClassFromName("Pathfinding", "GraphNode")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::AstarData*), "GetGraph", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{node});
  }
};
// Writing MetadataGetter for method: Pathfinding::AstarData::FindGraph
// Il2CppName: FindGraph
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Pathfinding::NavGraph* (Pathfinding::AstarData::*)(::System::Func_2<::Pathfinding::NavGraph*, bool>*)>(&Pathfinding::AstarData::FindGraph)> {
  static const MethodInfo* get() {
    static auto* predicate = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Func`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("Pathfinding", "NavGraph"), ::il2cpp_utils::GetClassFromName("System", "Boolean")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::AstarData*), "FindGraph", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{predicate});
  }
};
// Writing MetadataGetter for method: Pathfinding::AstarData::FindGraphOfType
// Il2CppName: FindGraphOfType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Pathfinding::NavGraph* (Pathfinding::AstarData::*)(::System::Type*)>(&Pathfinding::AstarData::FindGraphOfType)> {
  static const MethodInfo* get() {
    static auto* type = &::il2cpp_utils::GetClassFromName("System", "Type")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::AstarData*), "FindGraphOfType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{type});
  }
};
// Writing MetadataGetter for method: Pathfinding::AstarData::FindGraphWhichInheritsFrom
// Il2CppName: FindGraphWhichInheritsFrom
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Pathfinding::NavGraph* (Pathfinding::AstarData::*)(::System::Type*)>(&Pathfinding::AstarData::FindGraphWhichInheritsFrom)> {
  static const MethodInfo* get() {
    static auto* type = &::il2cpp_utils::GetClassFromName("System", "Type")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::AstarData*), "FindGraphWhichInheritsFrom", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{type});
  }
};
// Writing MetadataGetter for method: Pathfinding::AstarData::FindGraphsOfType
// Il2CppName: FindGraphsOfType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::IEnumerable* (Pathfinding::AstarData::*)(::System::Type*)>(&Pathfinding::AstarData::FindGraphsOfType)> {
  static const MethodInfo* get() {
    static auto* type = &::il2cpp_utils::GetClassFromName("System", "Type")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::AstarData*), "FindGraphsOfType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{type});
  }
};
// Writing MetadataGetter for method: Pathfinding::AstarData::GetUpdateableGraphs
// Il2CppName: GetUpdateableGraphs
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::IEnumerable* (Pathfinding::AstarData::*)()>(&Pathfinding::AstarData::GetUpdateableGraphs)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::AstarData*), "GetUpdateableGraphs", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Pathfinding::AstarData::GetRaycastableGraphs
// Il2CppName: GetRaycastableGraphs
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::IEnumerable* (Pathfinding::AstarData::*)()>(&Pathfinding::AstarData::GetRaycastableGraphs)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::AstarData*), "GetRaycastableGraphs", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Pathfinding::AstarData::GetGraphIndex
// Il2CppName: GetGraphIndex
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Pathfinding::AstarData::*)(::Pathfinding::NavGraph*)>(&Pathfinding::AstarData::GetGraphIndex)> {
  static const MethodInfo* get() {
    static auto* graph = &::il2cpp_utils::GetClassFromName("Pathfinding", "NavGraph")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::AstarData*), "GetGraphIndex", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{graph});
  }
};
// Writing MetadataGetter for method: Pathfinding::AstarData::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
