// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Pathfinding
namespace Pathfinding {
  // Forward declaring type: RecastBBTreeBox
  class RecastBBTreeBox;
  // Forward declaring type: RecastMeshObj
  class RecastMeshObj;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Rect
  struct Rect;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Completed forward declares
// Type namespace: Pathfinding
namespace Pathfinding {
  // Forward declaring type: RecastBBTree
  class RecastBBTree;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Pathfinding::RecastBBTree);
DEFINE_IL2CPP_ARG_TYPE(::Pathfinding::RecastBBTree*, "Pathfinding", "RecastBBTree");
// Type namespace: Pathfinding
namespace Pathfinding {
  // Size: 0x18
  #pragma pack(push, 1)
  // Autogenerated type: Pathfinding.RecastBBTree
  // [TokenAttribute] Offset: FFFFFFFF
  class RecastBBTree : public ::Il2CppObject {
    public:
    public:
    // private Pathfinding.RecastBBTreeBox root
    // Size: 0x8
    // Offset: 0x10
    ::Pathfinding::RecastBBTreeBox* root;
    // Field size check
    static_assert(sizeof(::Pathfinding::RecastBBTreeBox*) == 0x8);
    public:
    // Creating conversion operator: operator ::Pathfinding::RecastBBTreeBox*
    constexpr operator ::Pathfinding::RecastBBTreeBox*() const noexcept {
      return root;
    }
    // Get instance field reference: private Pathfinding.RecastBBTreeBox root
    [[deprecated("Use field access instead!")]] ::Pathfinding::RecastBBTreeBox*& dyn_root();
    // public System.Void QueryInBounds(UnityEngine.Rect bounds, System.Collections.Generic.List`1<Pathfinding.RecastMeshObj> buffer)
    // Offset: 0x29ED20C
    void QueryInBounds(::UnityEngine::Rect bounds, ::System::Collections::Generic::List_1<::Pathfinding::RecastMeshObj*>* buffer);
    // private System.Void QueryBoxInBounds(Pathfinding.RecastBBTreeBox box, UnityEngine.Rect bounds, System.Collections.Generic.List`1<Pathfinding.RecastMeshObj> boxes)
    // Offset: 0x29ED220
    void QueryBoxInBounds(::Pathfinding::RecastBBTreeBox* box, ::UnityEngine::Rect bounds, ::System::Collections::Generic::List_1<::Pathfinding::RecastMeshObj*>* boxes);
    // public System.Boolean Remove(Pathfinding.RecastMeshObj mesh)
    // Offset: 0x29ED438
    bool Remove(::Pathfinding::RecastMeshObj* mesh);
    // private Pathfinding.RecastBBTreeBox RemoveBox(Pathfinding.RecastBBTreeBox c, Pathfinding.RecastMeshObj mesh, UnityEngine.Rect bounds, ref System.Boolean found)
    // Offset: 0x29ED5B0
    ::Pathfinding::RecastBBTreeBox* RemoveBox(::Pathfinding::RecastBBTreeBox* c, ::Pathfinding::RecastMeshObj* mesh, ::UnityEngine::Rect bounds, ByRef<bool> found);
    // public System.Void Insert(Pathfinding.RecastMeshObj mesh)
    // Offset: 0x29ED7C8
    void Insert(::Pathfinding::RecastMeshObj* mesh);
    // static private System.Boolean RectIntersectsRect(UnityEngine.Rect r, UnityEngine.Rect r2)
    // Offset: 0x29ED400
    static bool RectIntersectsRect(::UnityEngine::Rect r, ::UnityEngine::Rect r2);
    // static private System.Single ExpansionRequired(UnityEngine.Rect r, UnityEngine.Rect r2)
    // Offset: 0x29EDA24
    static float ExpansionRequired(::UnityEngine::Rect r, ::UnityEngine::Rect r2);
    // static private UnityEngine.Rect ExpandToContain(UnityEngine.Rect r, UnityEngine.Rect r2)
    // Offset: 0x29ED78C
    static ::UnityEngine::Rect ExpandToContain(::UnityEngine::Rect r, ::UnityEngine::Rect r2);
    // static private System.Single RectArea(UnityEngine.Rect r)
    // Offset: 0x29EDA6C
    static float RectArea(::UnityEngine::Rect r);
    // public System.Void .ctor()
    // Offset: 0x29EDA74
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static RecastBBTree* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RecastBBTree::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<RecastBBTree*, creationType>()));
    }
  }; // Pathfinding.RecastBBTree
  #pragma pack(pop)
  static check_size<sizeof(RecastBBTree), 16 + sizeof(::Pathfinding::RecastBBTreeBox*)> __Pathfinding_RecastBBTreeSizeCheck;
  static_assert(sizeof(RecastBBTree) == 0x18);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Pathfinding::RecastBBTree::QueryInBounds
// Il2CppName: QueryInBounds
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Pathfinding::RecastBBTree::*)(::UnityEngine::Rect, ::System::Collections::Generic::List_1<::Pathfinding::RecastMeshObj*>*)>(&Pathfinding::RecastBBTree::QueryInBounds)> {
  static const MethodInfo* get() {
    static auto* bounds = &::il2cpp_utils::GetClassFromName("UnityEngine", "Rect")->byval_arg;
    static auto* buffer = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("Pathfinding", "RecastMeshObj")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::RecastBBTree*), "QueryInBounds", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{bounds, buffer});
  }
};
// Writing MetadataGetter for method: Pathfinding::RecastBBTree::QueryBoxInBounds
// Il2CppName: QueryBoxInBounds
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Pathfinding::RecastBBTree::*)(::Pathfinding::RecastBBTreeBox*, ::UnityEngine::Rect, ::System::Collections::Generic::List_1<::Pathfinding::RecastMeshObj*>*)>(&Pathfinding::RecastBBTree::QueryBoxInBounds)> {
  static const MethodInfo* get() {
    static auto* box = &::il2cpp_utils::GetClassFromName("Pathfinding", "RecastBBTreeBox")->byval_arg;
    static auto* bounds = &::il2cpp_utils::GetClassFromName("UnityEngine", "Rect")->byval_arg;
    static auto* boxes = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("Pathfinding", "RecastMeshObj")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::RecastBBTree*), "QueryBoxInBounds", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{box, bounds, boxes});
  }
};
// Writing MetadataGetter for method: Pathfinding::RecastBBTree::Remove
// Il2CppName: Remove
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Pathfinding::RecastBBTree::*)(::Pathfinding::RecastMeshObj*)>(&Pathfinding::RecastBBTree::Remove)> {
  static const MethodInfo* get() {
    static auto* mesh = &::il2cpp_utils::GetClassFromName("Pathfinding", "RecastMeshObj")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::RecastBBTree*), "Remove", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{mesh});
  }
};
// Writing MetadataGetter for method: Pathfinding::RecastBBTree::RemoveBox
// Il2CppName: RemoveBox
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Pathfinding::RecastBBTreeBox* (Pathfinding::RecastBBTree::*)(::Pathfinding::RecastBBTreeBox*, ::Pathfinding::RecastMeshObj*, ::UnityEngine::Rect, ByRef<bool>)>(&Pathfinding::RecastBBTree::RemoveBox)> {
  static const MethodInfo* get() {
    static auto* c = &::il2cpp_utils::GetClassFromName("Pathfinding", "RecastBBTreeBox")->byval_arg;
    static auto* mesh = &::il2cpp_utils::GetClassFromName("Pathfinding", "RecastMeshObj")->byval_arg;
    static auto* bounds = &::il2cpp_utils::GetClassFromName("UnityEngine", "Rect")->byval_arg;
    static auto* found = &::il2cpp_utils::GetClassFromName("System", "Boolean")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::RecastBBTree*), "RemoveBox", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{c, mesh, bounds, found});
  }
};
// Writing MetadataGetter for method: Pathfinding::RecastBBTree::Insert
// Il2CppName: Insert
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Pathfinding::RecastBBTree::*)(::Pathfinding::RecastMeshObj*)>(&Pathfinding::RecastBBTree::Insert)> {
  static const MethodInfo* get() {
    static auto* mesh = &::il2cpp_utils::GetClassFromName("Pathfinding", "RecastMeshObj")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::RecastBBTree*), "Insert", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{mesh});
  }
};
// Writing MetadataGetter for method: Pathfinding::RecastBBTree::RectIntersectsRect
// Il2CppName: RectIntersectsRect
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::UnityEngine::Rect, ::UnityEngine::Rect)>(&Pathfinding::RecastBBTree::RectIntersectsRect)> {
  static const MethodInfo* get() {
    static auto* r = &::il2cpp_utils::GetClassFromName("UnityEngine", "Rect")->byval_arg;
    static auto* r2 = &::il2cpp_utils::GetClassFromName("UnityEngine", "Rect")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::RecastBBTree*), "RectIntersectsRect", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{r, r2});
  }
};
// Writing MetadataGetter for method: Pathfinding::RecastBBTree::ExpansionRequired
// Il2CppName: ExpansionRequired
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (*)(::UnityEngine::Rect, ::UnityEngine::Rect)>(&Pathfinding::RecastBBTree::ExpansionRequired)> {
  static const MethodInfo* get() {
    static auto* r = &::il2cpp_utils::GetClassFromName("UnityEngine", "Rect")->byval_arg;
    static auto* r2 = &::il2cpp_utils::GetClassFromName("UnityEngine", "Rect")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::RecastBBTree*), "ExpansionRequired", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{r, r2});
  }
};
// Writing MetadataGetter for method: Pathfinding::RecastBBTree::ExpandToContain
// Il2CppName: ExpandToContain
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Rect (*)(::UnityEngine::Rect, ::UnityEngine::Rect)>(&Pathfinding::RecastBBTree::ExpandToContain)> {
  static const MethodInfo* get() {
    static auto* r = &::il2cpp_utils::GetClassFromName("UnityEngine", "Rect")->byval_arg;
    static auto* r2 = &::il2cpp_utils::GetClassFromName("UnityEngine", "Rect")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::RecastBBTree*), "ExpandToContain", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{r, r2});
  }
};
// Writing MetadataGetter for method: Pathfinding::RecastBBTree::RectArea
// Il2CppName: RectArea
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (*)(::UnityEngine::Rect)>(&Pathfinding::RecastBBTree::RectArea)> {
  static const MethodInfo* get() {
    static auto* r = &::il2cpp_utils::GetClassFromName("UnityEngine", "Rect")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::RecastBBTree*), "RectArea", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{r});
  }
};
// Writing MetadataGetter for method: Pathfinding::RecastBBTree::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
