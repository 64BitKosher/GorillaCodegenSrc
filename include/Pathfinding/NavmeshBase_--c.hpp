// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Pathfinding.NavmeshBase
#include "Pathfinding/NavmeshBase.hpp"
// Including type: Pathfinding.Connection
#include "Pathfinding/Connection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Func`2<T, TResult>
  template<typename T, typename TResult>
  class Func_2;
}
// Forward declaring namespace: Pathfinding
namespace Pathfinding {
  // Forward declaring type: NavmeshTile
  class NavmeshTile;
  // Forward declaring type: TriangleMeshNode
  class TriangleMeshNode;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: IEnumerable`1<T>
  template<typename T>
  class IEnumerable_1;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Pathfinding::NavmeshBase::$$c);
DEFINE_IL2CPP_ARG_TYPE(::Pathfinding::NavmeshBase::$$c*, "Pathfinding", "NavmeshBase/<>c");
// Type namespace: Pathfinding
namespace Pathfinding {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: Pathfinding.NavmeshBase/<>c
  // [TokenAttribute] Offset: FFFFFFFF
  // [CompilerGeneratedAttribute] Offset: FFFFFFFF
  class NavmeshBase::$$c : public ::Il2CppObject {
    public:
    // Get static field: static public readonly Pathfinding.NavmeshBase/<>c <>9
    static ::Pathfinding::NavmeshBase::$$c* _get_$$9();
    // Set static field: static public readonly Pathfinding.NavmeshBase/<>c <>9
    static void _set_$$9(::Pathfinding::NavmeshBase::$$c* value);
    // Get static field: static public System.Func`2<Pathfinding.NavmeshTile,System.Collections.Generic.IEnumerable`1<Pathfinding.TriangleMeshNode>> <>9__84_0
    static ::System::Func_2<::Pathfinding::NavmeshTile*, ::System::Collections::Generic::IEnumerable_1<::Pathfinding::TriangleMeshNode*>*>* _get_$$9__84_0();
    // Set static field: static public System.Func`2<Pathfinding.NavmeshTile,System.Collections.Generic.IEnumerable`1<Pathfinding.TriangleMeshNode>> <>9__84_0
    static void _set_$$9__84_0(::System::Func_2<::Pathfinding::NavmeshTile*, ::System::Collections::Generic::IEnumerable_1<::Pathfinding::TriangleMeshNode*>*>* value);
    // Get static field: static public System.Func`2<Pathfinding.TriangleMeshNode,Pathfinding.TriangleMeshNode> <>9__84_1
    static ::System::Func_2<::Pathfinding::TriangleMeshNode*, ::Pathfinding::TriangleMeshNode*>* _get_$$9__84_1();
    // Set static field: static public System.Func`2<Pathfinding.TriangleMeshNode,Pathfinding.TriangleMeshNode> <>9__84_1
    static void _set_$$9__84_1(::System::Func_2<::Pathfinding::TriangleMeshNode*, ::Pathfinding::TriangleMeshNode*>* value);
    // Get static field: static public System.Func`2<Pathfinding.TriangleMeshNode,Pathfinding.Connection[]> <>9__84_2
    static ::System::Func_2<::Pathfinding::TriangleMeshNode*, ::ArrayW<::Pathfinding::Connection>>* _get_$$9__84_2();
    // Set static field: static public System.Func`2<Pathfinding.TriangleMeshNode,Pathfinding.Connection[]> <>9__84_2
    static void _set_$$9__84_2(::System::Func_2<::Pathfinding::TriangleMeshNode*, ::ArrayW<::Pathfinding::Connection>>* value);
    // static private System.Void .cctor()
    // Offset: 0x29D6030
    static void _cctor();
    // public System.Void .ctor()
    // Offset: 0x29D6098
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static NavmeshBase::$$c* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshBase::$$c::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<NavmeshBase::$$c*, creationType>()));
    }
    // System.Collections.Generic.IEnumerable`1<Pathfinding.TriangleMeshNode> <PostDeserialization>b__84_0(Pathfinding.NavmeshTile s)
    // Offset: 0x29D60A0
    ::System::Collections::Generic::IEnumerable_1<::Pathfinding::TriangleMeshNode*>* $PostDeserialization$b__84_0(::Pathfinding::NavmeshTile* s);
    // Pathfinding.TriangleMeshNode <PostDeserialization>b__84_1(Pathfinding.TriangleMeshNode n)
    // Offset: 0x29D60B8
    ::Pathfinding::TriangleMeshNode* $PostDeserialization$b__84_1(::Pathfinding::TriangleMeshNode* n);
    // Pathfinding.Connection[] <PostDeserialization>b__84_2(Pathfinding.TriangleMeshNode n)
    // Offset: 0x29D60C0
    ::ArrayW<::Pathfinding::Connection> $PostDeserialization$b__84_2(::Pathfinding::TriangleMeshNode* n);
  }; // Pathfinding.NavmeshBase/<>c
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Pathfinding::NavmeshBase::$$c::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&Pathfinding::NavmeshBase::$$c::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::NavmeshBase::$$c*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Pathfinding::NavmeshBase::$$c::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: Pathfinding::NavmeshBase::$$c::$PostDeserialization$b__84_0
// Il2CppName: <PostDeserialization>b__84_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::IEnumerable_1<::Pathfinding::TriangleMeshNode*>* (Pathfinding::NavmeshBase::$$c::*)(::Pathfinding::NavmeshTile*)>(&Pathfinding::NavmeshBase::$$c::$PostDeserialization$b__84_0)> {
  static const MethodInfo* get() {
    static auto* s = &::il2cpp_utils::GetClassFromName("Pathfinding", "NavmeshTile")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::NavmeshBase::$$c*), "<PostDeserialization>b__84_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{s});
  }
};
// Writing MetadataGetter for method: Pathfinding::NavmeshBase::$$c::$PostDeserialization$b__84_1
// Il2CppName: <PostDeserialization>b__84_1
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Pathfinding::TriangleMeshNode* (Pathfinding::NavmeshBase::$$c::*)(::Pathfinding::TriangleMeshNode*)>(&Pathfinding::NavmeshBase::$$c::$PostDeserialization$b__84_1)> {
  static const MethodInfo* get() {
    static auto* n = &::il2cpp_utils::GetClassFromName("Pathfinding", "TriangleMeshNode")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::NavmeshBase::$$c*), "<PostDeserialization>b__84_1", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{n});
  }
};
// Writing MetadataGetter for method: Pathfinding::NavmeshBase::$$c::$PostDeserialization$b__84_2
// Il2CppName: <PostDeserialization>b__84_2
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::Pathfinding::Connection> (Pathfinding::NavmeshBase::$$c::*)(::Pathfinding::TriangleMeshNode*)>(&Pathfinding::NavmeshBase::$$c::$PostDeserialization$b__84_2)> {
  static const MethodInfo* get() {
    static auto* n = &::il2cpp_utils::GetClassFromName("Pathfinding", "TriangleMeshNode")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::NavmeshBase::$$c*), "<PostDeserialization>b__84_2", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{n});
  }
};
