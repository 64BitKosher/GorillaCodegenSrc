// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Pathfinding
namespace Pathfinding {
  // Forward declaring type: Path
  class Path;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Quaternion
  struct Quaternion;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Action
  class Action;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Completed forward declares
// Type namespace: Pathfinding
namespace Pathfinding {
  // Forward declaring type: IAstarAI
  class IAstarAI;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Pathfinding::IAstarAI);
DEFINE_IL2CPP_ARG_TYPE(::Pathfinding::IAstarAI*, "Pathfinding", "IAstarAI");
// Type namespace: Pathfinding
namespace Pathfinding {
  // Size: 0x0
  #pragma pack(push, 1)
  // Autogenerated type: Pathfinding.IAstarAI
  // [TokenAttribute] Offset: FFFFFFFF
  class IAstarAI {
    public:
    // public System.Single get_radius()
    // Offset: 0xFFFFFFFFFFFFFFFF
    float get_radius();
    // public System.Void set_radius(System.Single value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void set_radius(float value);
    // public System.Single get_height()
    // Offset: 0xFFFFFFFFFFFFFFFF
    float get_height();
    // public System.Void set_height(System.Single value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void set_height(float value);
    // public UnityEngine.Vector3 get_position()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::UnityEngine::Vector3 get_position();
    // public UnityEngine.Quaternion get_rotation()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::UnityEngine::Quaternion get_rotation();
    // public System.Void set_rotation(UnityEngine.Quaternion value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void set_rotation(::UnityEngine::Quaternion value);
    // public System.Single get_maxSpeed()
    // Offset: 0xFFFFFFFFFFFFFFFF
    float get_maxSpeed();
    // public System.Void set_maxSpeed(System.Single value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void set_maxSpeed(float value);
    // public UnityEngine.Vector3 get_velocity()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::UnityEngine::Vector3 get_velocity();
    // public UnityEngine.Vector3 get_desiredVelocity()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::UnityEngine::Vector3 get_desiredVelocity();
    // public System.Single get_remainingDistance()
    // Offset: 0xFFFFFFFFFFFFFFFF
    float get_remainingDistance();
    // public System.Boolean get_reachedDestination()
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool get_reachedDestination();
    // public System.Boolean get_reachedEndOfPath()
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool get_reachedEndOfPath();
    // public UnityEngine.Vector3 get_destination()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::UnityEngine::Vector3 get_destination();
    // public System.Void set_destination(UnityEngine.Vector3 value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void set_destination(::UnityEngine::Vector3 value);
    // public System.Boolean get_canSearch()
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool get_canSearch();
    // public System.Void set_canSearch(System.Boolean value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void set_canSearch(bool value);
    // public System.Boolean get_canMove()
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool get_canMove();
    // public System.Void set_canMove(System.Boolean value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void set_canMove(bool value);
    // public System.Boolean get_hasPath()
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool get_hasPath();
    // public System.Boolean get_pathPending()
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool get_pathPending();
    // public System.Boolean get_isStopped()
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool get_isStopped();
    // public System.Void set_isStopped(System.Boolean value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void set_isStopped(bool value);
    // public UnityEngine.Vector3 get_steeringTarget()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::UnityEngine::Vector3 get_steeringTarget();
    // public System.Action get_onSearchPath()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::System::Action* get_onSearchPath();
    // public System.Void set_onSearchPath(System.Action value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void set_onSearchPath(::System::Action* value);
    // public System.Void GetRemainingPath(System.Collections.Generic.List`1<UnityEngine.Vector3> buffer, out System.Boolean stale)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void GetRemainingPath(::System::Collections::Generic::List_1<::UnityEngine::Vector3>* buffer, ByRef<bool> stale);
    // public System.Void SearchPath()
    // Offset: 0xFFFFFFFFFFFFFFFF
    void SearchPath();
    // public System.Void SetPath(Pathfinding.Path path, System.Boolean updateDestinationFromPath)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void SetPath(::Pathfinding::Path* path, bool updateDestinationFromPath);
    // public System.Void Teleport(UnityEngine.Vector3 newPosition, System.Boolean clearPath)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void Teleport(::UnityEngine::Vector3 newPosition, bool clearPath);
    // public System.Void Move(UnityEngine.Vector3 deltaPosition)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void Move(::UnityEngine::Vector3 deltaPosition);
    // public System.Void MovementUpdate(System.Single deltaTime, out UnityEngine.Vector3 nextPosition, out UnityEngine.Quaternion nextRotation)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void MovementUpdate(float deltaTime, ByRef<::UnityEngine::Vector3> nextPosition, ByRef<::UnityEngine::Quaternion> nextRotation);
    // public System.Void FinalizeMovement(UnityEngine.Vector3 nextPosition, UnityEngine.Quaternion nextRotation)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void FinalizeMovement(::UnityEngine::Vector3 nextPosition, ::UnityEngine::Quaternion nextRotation);
  }; // Pathfinding.IAstarAI
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Pathfinding::IAstarAI::get_radius
// Il2CppName: get_radius
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (Pathfinding::IAstarAI::*)()>(&Pathfinding::IAstarAI::get_radius)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::IAstarAI*), "get_radius", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Pathfinding::IAstarAI::set_radius
// Il2CppName: set_radius
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Pathfinding::IAstarAI::*)(float)>(&Pathfinding::IAstarAI::set_radius)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::IAstarAI*), "set_radius", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Pathfinding::IAstarAI::get_height
// Il2CppName: get_height
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (Pathfinding::IAstarAI::*)()>(&Pathfinding::IAstarAI::get_height)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::IAstarAI*), "get_height", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Pathfinding::IAstarAI::set_height
// Il2CppName: set_height
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Pathfinding::IAstarAI::*)(float)>(&Pathfinding::IAstarAI::set_height)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::IAstarAI*), "set_height", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Pathfinding::IAstarAI::get_position
// Il2CppName: get_position
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector3 (Pathfinding::IAstarAI::*)()>(&Pathfinding::IAstarAI::get_position)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::IAstarAI*), "get_position", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Pathfinding::IAstarAI::get_rotation
// Il2CppName: get_rotation
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Quaternion (Pathfinding::IAstarAI::*)()>(&Pathfinding::IAstarAI::get_rotation)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::IAstarAI*), "get_rotation", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Pathfinding::IAstarAI::set_rotation
// Il2CppName: set_rotation
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Pathfinding::IAstarAI::*)(::UnityEngine::Quaternion)>(&Pathfinding::IAstarAI::set_rotation)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Quaternion")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::IAstarAI*), "set_rotation", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Pathfinding::IAstarAI::get_maxSpeed
// Il2CppName: get_maxSpeed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (Pathfinding::IAstarAI::*)()>(&Pathfinding::IAstarAI::get_maxSpeed)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::IAstarAI*), "get_maxSpeed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Pathfinding::IAstarAI::set_maxSpeed
// Il2CppName: set_maxSpeed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Pathfinding::IAstarAI::*)(float)>(&Pathfinding::IAstarAI::set_maxSpeed)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::IAstarAI*), "set_maxSpeed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Pathfinding::IAstarAI::get_velocity
// Il2CppName: get_velocity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector3 (Pathfinding::IAstarAI::*)()>(&Pathfinding::IAstarAI::get_velocity)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::IAstarAI*), "get_velocity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Pathfinding::IAstarAI::get_desiredVelocity
// Il2CppName: get_desiredVelocity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector3 (Pathfinding::IAstarAI::*)()>(&Pathfinding::IAstarAI::get_desiredVelocity)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::IAstarAI*), "get_desiredVelocity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Pathfinding::IAstarAI::get_remainingDistance
// Il2CppName: get_remainingDistance
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (Pathfinding::IAstarAI::*)()>(&Pathfinding::IAstarAI::get_remainingDistance)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::IAstarAI*), "get_remainingDistance", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Pathfinding::IAstarAI::get_reachedDestination
// Il2CppName: get_reachedDestination
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Pathfinding::IAstarAI::*)()>(&Pathfinding::IAstarAI::get_reachedDestination)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::IAstarAI*), "get_reachedDestination", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Pathfinding::IAstarAI::get_reachedEndOfPath
// Il2CppName: get_reachedEndOfPath
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Pathfinding::IAstarAI::*)()>(&Pathfinding::IAstarAI::get_reachedEndOfPath)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::IAstarAI*), "get_reachedEndOfPath", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Pathfinding::IAstarAI::get_destination
// Il2CppName: get_destination
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector3 (Pathfinding::IAstarAI::*)()>(&Pathfinding::IAstarAI::get_destination)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::IAstarAI*), "get_destination", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Pathfinding::IAstarAI::set_destination
// Il2CppName: set_destination
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Pathfinding::IAstarAI::*)(::UnityEngine::Vector3)>(&Pathfinding::IAstarAI::set_destination)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::IAstarAI*), "set_destination", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Pathfinding::IAstarAI::get_canSearch
// Il2CppName: get_canSearch
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Pathfinding::IAstarAI::*)()>(&Pathfinding::IAstarAI::get_canSearch)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::IAstarAI*), "get_canSearch", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Pathfinding::IAstarAI::set_canSearch
// Il2CppName: set_canSearch
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Pathfinding::IAstarAI::*)(bool)>(&Pathfinding::IAstarAI::set_canSearch)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::IAstarAI*), "set_canSearch", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Pathfinding::IAstarAI::get_canMove
// Il2CppName: get_canMove
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Pathfinding::IAstarAI::*)()>(&Pathfinding::IAstarAI::get_canMove)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::IAstarAI*), "get_canMove", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Pathfinding::IAstarAI::set_canMove
// Il2CppName: set_canMove
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Pathfinding::IAstarAI::*)(bool)>(&Pathfinding::IAstarAI::set_canMove)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::IAstarAI*), "set_canMove", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Pathfinding::IAstarAI::get_hasPath
// Il2CppName: get_hasPath
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Pathfinding::IAstarAI::*)()>(&Pathfinding::IAstarAI::get_hasPath)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::IAstarAI*), "get_hasPath", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Pathfinding::IAstarAI::get_pathPending
// Il2CppName: get_pathPending
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Pathfinding::IAstarAI::*)()>(&Pathfinding::IAstarAI::get_pathPending)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::IAstarAI*), "get_pathPending", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Pathfinding::IAstarAI::get_isStopped
// Il2CppName: get_isStopped
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Pathfinding::IAstarAI::*)()>(&Pathfinding::IAstarAI::get_isStopped)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::IAstarAI*), "get_isStopped", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Pathfinding::IAstarAI::set_isStopped
// Il2CppName: set_isStopped
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Pathfinding::IAstarAI::*)(bool)>(&Pathfinding::IAstarAI::set_isStopped)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::IAstarAI*), "set_isStopped", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Pathfinding::IAstarAI::get_steeringTarget
// Il2CppName: get_steeringTarget
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector3 (Pathfinding::IAstarAI::*)()>(&Pathfinding::IAstarAI::get_steeringTarget)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::IAstarAI*), "get_steeringTarget", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Pathfinding::IAstarAI::get_onSearchPath
// Il2CppName: get_onSearchPath
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Action* (Pathfinding::IAstarAI::*)()>(&Pathfinding::IAstarAI::get_onSearchPath)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::IAstarAI*), "get_onSearchPath", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Pathfinding::IAstarAI::set_onSearchPath
// Il2CppName: set_onSearchPath
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Pathfinding::IAstarAI::*)(::System::Action*)>(&Pathfinding::IAstarAI::set_onSearchPath)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Action")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::IAstarAI*), "set_onSearchPath", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Pathfinding::IAstarAI::GetRemainingPath
// Il2CppName: GetRemainingPath
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Pathfinding::IAstarAI::*)(::System::Collections::Generic::List_1<::UnityEngine::Vector3>*, ByRef<bool>)>(&Pathfinding::IAstarAI::GetRemainingPath)> {
  static const MethodInfo* get() {
    static auto* buffer = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")})->byval_arg;
    static auto* stale = &::il2cpp_utils::GetClassFromName("System", "Boolean")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::IAstarAI*), "GetRemainingPath", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{buffer, stale});
  }
};
// Writing MetadataGetter for method: Pathfinding::IAstarAI::SearchPath
// Il2CppName: SearchPath
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Pathfinding::IAstarAI::*)()>(&Pathfinding::IAstarAI::SearchPath)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::IAstarAI*), "SearchPath", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Pathfinding::IAstarAI::SetPath
// Il2CppName: SetPath
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Pathfinding::IAstarAI::*)(::Pathfinding::Path*, bool)>(&Pathfinding::IAstarAI::SetPath)> {
  static const MethodInfo* get() {
    static auto* path = &::il2cpp_utils::GetClassFromName("Pathfinding", "Path")->byval_arg;
    static auto* updateDestinationFromPath = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::IAstarAI*), "SetPath", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{path, updateDestinationFromPath});
  }
};
// Writing MetadataGetter for method: Pathfinding::IAstarAI::Teleport
// Il2CppName: Teleport
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Pathfinding::IAstarAI::*)(::UnityEngine::Vector3, bool)>(&Pathfinding::IAstarAI::Teleport)> {
  static const MethodInfo* get() {
    static auto* newPosition = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* clearPath = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::IAstarAI*), "Teleport", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{newPosition, clearPath});
  }
};
// Writing MetadataGetter for method: Pathfinding::IAstarAI::Move
// Il2CppName: Move
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Pathfinding::IAstarAI::*)(::UnityEngine::Vector3)>(&Pathfinding::IAstarAI::Move)> {
  static const MethodInfo* get() {
    static auto* deltaPosition = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::IAstarAI*), "Move", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{deltaPosition});
  }
};
// Writing MetadataGetter for method: Pathfinding::IAstarAI::MovementUpdate
// Il2CppName: MovementUpdate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Pathfinding::IAstarAI::*)(float, ByRef<::UnityEngine::Vector3>, ByRef<::UnityEngine::Quaternion>)>(&Pathfinding::IAstarAI::MovementUpdate)> {
  static const MethodInfo* get() {
    static auto* deltaTime = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* nextPosition = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->this_arg;
    static auto* nextRotation = &::il2cpp_utils::GetClassFromName("UnityEngine", "Quaternion")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::IAstarAI*), "MovementUpdate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{deltaTime, nextPosition, nextRotation});
  }
};
// Writing MetadataGetter for method: Pathfinding::IAstarAI::FinalizeMovement
// Il2CppName: FinalizeMovement
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Pathfinding::IAstarAI::*)(::UnityEngine::Vector3, ::UnityEngine::Quaternion)>(&Pathfinding::IAstarAI::FinalizeMovement)> {
  static const MethodInfo* get() {
    static auto* nextPosition = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* nextRotation = &::il2cpp_utils::GetClassFromName("UnityEngine", "Quaternion")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::IAstarAI*), "FinalizeMovement", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{nextPosition, nextRotation});
  }
};
