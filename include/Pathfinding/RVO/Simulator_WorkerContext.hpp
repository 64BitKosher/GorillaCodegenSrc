// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Pathfinding.RVO.Simulator
#include "Pathfinding/RVO/Simulator.hpp"
// Including type: Pathfinding.RVO.Sampled.Agent
#include "Pathfinding/RVO/Sampled/Agent.hpp"
// Including type: System.Int32
#include "System/Int32.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
// Completed includes
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Pathfinding::RVO::Simulator::WorkerContext);
DEFINE_IL2CPP_ARG_TYPE(::Pathfinding::RVO::Simulator::WorkerContext*, "Pathfinding.RVO", "Simulator/WorkerContext");
// Type namespace: Pathfinding.RVO
namespace Pathfinding::RVO {
  // Size: 0x40
  #pragma pack(push, 1)
  // Autogenerated type: Pathfinding.RVO.Simulator/WorkerContext
  // [TokenAttribute] Offset: FFFFFFFF
  class Simulator::WorkerContext : public ::Il2CppObject {
    public:
    public:
    // public Pathfinding.RVO.Sampled.Agent/VOBuffer vos
    // Size: 0x8
    // Offset: 0x10
    ::Pathfinding::RVO::Sampled::Agent::VOBuffer* vos;
    // Field size check
    static_assert(sizeof(::Pathfinding::RVO::Sampled::Agent::VOBuffer*) == 0x8);
    // public UnityEngine.Vector2[] bestPos
    // Size: 0x8
    // Offset: 0x18
    ::ArrayW<::UnityEngine::Vector2> bestPos;
    // Field size check
    static_assert(sizeof(::ArrayW<::UnityEngine::Vector2>) == 0x8);
    // public System.Single[] bestSizes
    // Size: 0x8
    // Offset: 0x20
    ::ArrayW<float> bestSizes;
    // Field size check
    static_assert(sizeof(::ArrayW<float>) == 0x8);
    // public System.Single[] bestScores
    // Size: 0x8
    // Offset: 0x28
    ::ArrayW<float> bestScores;
    // Field size check
    static_assert(sizeof(::ArrayW<float>) == 0x8);
    // public UnityEngine.Vector2[] samplePos
    // Size: 0x8
    // Offset: 0x30
    ::ArrayW<::UnityEngine::Vector2> samplePos;
    // Field size check
    static_assert(sizeof(::ArrayW<::UnityEngine::Vector2>) == 0x8);
    // public System.Single[] sampleSize
    // Size: 0x8
    // Offset: 0x38
    ::ArrayW<float> sampleSize;
    // Field size check
    static_assert(sizeof(::ArrayW<float>) == 0x8);
    public:
    // static field const value: static public System.Int32 KeepCount
    static constexpr const int KeepCount = 3;
    // Get static field: static public System.Int32 KeepCount
    static int _get_KeepCount();
    // Set static field: static public System.Int32 KeepCount
    static void _set_KeepCount(int value);
    // Get instance field reference: public Pathfinding.RVO.Sampled.Agent/VOBuffer vos
    [[deprecated("Use field access instead!")]] ::Pathfinding::RVO::Sampled::Agent::VOBuffer*& dyn_vos();
    // Get instance field reference: public UnityEngine.Vector2[] bestPos
    [[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Vector2>& dyn_bestPos();
    // Get instance field reference: public System.Single[] bestSizes
    [[deprecated("Use field access instead!")]] ::ArrayW<float>& dyn_bestSizes();
    // Get instance field reference: public System.Single[] bestScores
    [[deprecated("Use field access instead!")]] ::ArrayW<float>& dyn_bestScores();
    // Get instance field reference: public UnityEngine.Vector2[] samplePos
    [[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Vector2>& dyn_samplePos();
    // Get instance field reference: public System.Single[] sampleSize
    [[deprecated("Use field access instead!")]] ::ArrayW<float>& dyn_sampleSize();
    // public System.Void .ctor()
    // Offset: 0x2A351C8
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static Simulator::WorkerContext* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::Simulator::WorkerContext::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<Simulator::WorkerContext*, creationType>()));
    }
  }; // Pathfinding.RVO.Simulator/WorkerContext
  #pragma pack(pop)
  static check_size<sizeof(Simulator::WorkerContext), 56 + sizeof(::ArrayW<float>)> __Pathfinding_RVO_Simulator_WorkerContextSizeCheck;
  static_assert(sizeof(Simulator::WorkerContext) == 0x40);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Pathfinding::RVO::Simulator::WorkerContext::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
