// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/byref.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Vector2
  struct Vector2;
}
// Forward declaring namespace: Pathfinding::RVO
namespace Pathfinding::RVO {
  // Forward declaring type: RVOLayer
  struct RVOLayer;
  // Forward declaring type: ObstacleVertex
  class ObstacleVertex;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Action
  class Action;
}
// Completed forward declares
// Type namespace: Pathfinding.RVO
namespace Pathfinding::RVO {
  // Forward declaring type: IAgent
  class IAgent;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Pathfinding::RVO::IAgent);
DEFINE_IL2CPP_ARG_TYPE(::Pathfinding::RVO::IAgent*, "Pathfinding.RVO", "IAgent");
// Type namespace: Pathfinding.RVO
namespace Pathfinding::RVO {
  // Size: 0x0
  #pragma pack(push, 1)
  // Autogenerated type: Pathfinding.RVO.IAgent
  // [TokenAttribute] Offset: FFFFFFFF
  class IAgent {
    public:
    // public UnityEngine.Vector2 get_Position()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::UnityEngine::Vector2 get_Position();
    // public System.Void set_Position(UnityEngine.Vector2 value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void set_Position(::UnityEngine::Vector2 value);
    // public System.Single get_ElevationCoordinate()
    // Offset: 0xFFFFFFFFFFFFFFFF
    float get_ElevationCoordinate();
    // public System.Void set_ElevationCoordinate(System.Single value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void set_ElevationCoordinate(float value);
    // public UnityEngine.Vector2 get_CalculatedTargetPoint()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::UnityEngine::Vector2 get_CalculatedTargetPoint();
    // public System.Single get_CalculatedSpeed()
    // Offset: 0xFFFFFFFFFFFFFFFF
    float get_CalculatedSpeed();
    // public System.Void SetTarget(UnityEngine.Vector2 targetPoint, System.Single desiredSpeed, System.Single maxSpeed)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void SetTarget(::UnityEngine::Vector2 targetPoint, float desiredSpeed, float maxSpeed);
    // public System.Boolean get_Locked()
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool get_Locked();
    // public System.Void set_Locked(System.Boolean value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void set_Locked(bool value);
    // public System.Single get_Radius()
    // Offset: 0xFFFFFFFFFFFFFFFF
    float get_Radius();
    // public System.Void set_Radius(System.Single value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void set_Radius(float value);
    // public System.Single get_Height()
    // Offset: 0xFFFFFFFFFFFFFFFF
    float get_Height();
    // public System.Void set_Height(System.Single value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void set_Height(float value);
    // public System.Single get_AgentTimeHorizon()
    // Offset: 0xFFFFFFFFFFFFFFFF
    float get_AgentTimeHorizon();
    // public System.Void set_AgentTimeHorizon(System.Single value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void set_AgentTimeHorizon(float value);
    // public System.Single get_ObstacleTimeHorizon()
    // Offset: 0xFFFFFFFFFFFFFFFF
    float get_ObstacleTimeHorizon();
    // public System.Void set_ObstacleTimeHorizon(System.Single value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void set_ObstacleTimeHorizon(float value);
    // public System.Int32 get_MaxNeighbours()
    // Offset: 0xFFFFFFFFFFFFFFFF
    int get_MaxNeighbours();
    // public System.Void set_MaxNeighbours(System.Int32 value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void set_MaxNeighbours(int value);
    // public System.Int32 get_NeighbourCount()
    // Offset: 0xFFFFFFFFFFFFFFFF
    int get_NeighbourCount();
    // public Pathfinding.RVO.RVOLayer get_Layer()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::Pathfinding::RVO::RVOLayer get_Layer();
    // public System.Void set_Layer(Pathfinding.RVO.RVOLayer value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void set_Layer(::Pathfinding::RVO::RVOLayer value);
    // public Pathfinding.RVO.RVOLayer get_CollidesWith()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::Pathfinding::RVO::RVOLayer get_CollidesWith();
    // public System.Void set_CollidesWith(Pathfinding.RVO.RVOLayer value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void set_CollidesWith(::Pathfinding::RVO::RVOLayer value);
    // public System.Boolean get_DebugDraw()
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool get_DebugDraw();
    // public System.Void set_DebugDraw(System.Boolean value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void set_DebugDraw(bool value);
    // public System.Collections.Generic.List`1<Pathfinding.RVO.ObstacleVertex> get_NeighbourObstacles()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::System::Collections::Generic::List_1<::Pathfinding::RVO::ObstacleVertex*>* get_NeighbourObstacles();
    // public System.Single get_Priority()
    // Offset: 0xFFFFFFFFFFFFFFFF
    float get_Priority();
    // public System.Void set_Priority(System.Single value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void set_Priority(float value);
    // public System.Void set_PreCalculationCallback(System.Action value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void set_PreCalculationCallback(::System::Action* value);
    // public System.Void SetCollisionNormal(UnityEngine.Vector2 normal)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void SetCollisionNormal(::UnityEngine::Vector2 normal);
    // public System.Void ForceSetVelocity(UnityEngine.Vector2 velocity)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void ForceSetVelocity(::UnityEngine::Vector2 velocity);
  }; // Pathfinding.RVO.IAgent
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Pathfinding::RVO::IAgent::get_Position
// Il2CppName: get_Position
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector2 (Pathfinding::RVO::IAgent::*)()>(&Pathfinding::RVO::IAgent::get_Position)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::RVO::IAgent*), "get_Position", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Pathfinding::RVO::IAgent::set_Position
// Il2CppName: set_Position
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Pathfinding::RVO::IAgent::*)(::UnityEngine::Vector2)>(&Pathfinding::RVO::IAgent::set_Position)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector2")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::RVO::IAgent*), "set_Position", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Pathfinding::RVO::IAgent::get_ElevationCoordinate
// Il2CppName: get_ElevationCoordinate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (Pathfinding::RVO::IAgent::*)()>(&Pathfinding::RVO::IAgent::get_ElevationCoordinate)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::RVO::IAgent*), "get_ElevationCoordinate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Pathfinding::RVO::IAgent::set_ElevationCoordinate
// Il2CppName: set_ElevationCoordinate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Pathfinding::RVO::IAgent::*)(float)>(&Pathfinding::RVO::IAgent::set_ElevationCoordinate)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::RVO::IAgent*), "set_ElevationCoordinate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Pathfinding::RVO::IAgent::get_CalculatedTargetPoint
// Il2CppName: get_CalculatedTargetPoint
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector2 (Pathfinding::RVO::IAgent::*)()>(&Pathfinding::RVO::IAgent::get_CalculatedTargetPoint)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::RVO::IAgent*), "get_CalculatedTargetPoint", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Pathfinding::RVO::IAgent::get_CalculatedSpeed
// Il2CppName: get_CalculatedSpeed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (Pathfinding::RVO::IAgent::*)()>(&Pathfinding::RVO::IAgent::get_CalculatedSpeed)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::RVO::IAgent*), "get_CalculatedSpeed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Pathfinding::RVO::IAgent::SetTarget
// Il2CppName: SetTarget
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Pathfinding::RVO::IAgent::*)(::UnityEngine::Vector2, float, float)>(&Pathfinding::RVO::IAgent::SetTarget)> {
  static const MethodInfo* get() {
    static auto* targetPoint = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector2")->byval_arg;
    static auto* desiredSpeed = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* maxSpeed = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::RVO::IAgent*), "SetTarget", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{targetPoint, desiredSpeed, maxSpeed});
  }
};
// Writing MetadataGetter for method: Pathfinding::RVO::IAgent::get_Locked
// Il2CppName: get_Locked
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Pathfinding::RVO::IAgent::*)()>(&Pathfinding::RVO::IAgent::get_Locked)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::RVO::IAgent*), "get_Locked", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Pathfinding::RVO::IAgent::set_Locked
// Il2CppName: set_Locked
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Pathfinding::RVO::IAgent::*)(bool)>(&Pathfinding::RVO::IAgent::set_Locked)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::RVO::IAgent*), "set_Locked", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Pathfinding::RVO::IAgent::get_Radius
// Il2CppName: get_Radius
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (Pathfinding::RVO::IAgent::*)()>(&Pathfinding::RVO::IAgent::get_Radius)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::RVO::IAgent*), "get_Radius", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Pathfinding::RVO::IAgent::set_Radius
// Il2CppName: set_Radius
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Pathfinding::RVO::IAgent::*)(float)>(&Pathfinding::RVO::IAgent::set_Radius)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::RVO::IAgent*), "set_Radius", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Pathfinding::RVO::IAgent::get_Height
// Il2CppName: get_Height
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (Pathfinding::RVO::IAgent::*)()>(&Pathfinding::RVO::IAgent::get_Height)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::RVO::IAgent*), "get_Height", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Pathfinding::RVO::IAgent::set_Height
// Il2CppName: set_Height
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Pathfinding::RVO::IAgent::*)(float)>(&Pathfinding::RVO::IAgent::set_Height)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::RVO::IAgent*), "set_Height", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Pathfinding::RVO::IAgent::get_AgentTimeHorizon
// Il2CppName: get_AgentTimeHorizon
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (Pathfinding::RVO::IAgent::*)()>(&Pathfinding::RVO::IAgent::get_AgentTimeHorizon)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::RVO::IAgent*), "get_AgentTimeHorizon", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Pathfinding::RVO::IAgent::set_AgentTimeHorizon
// Il2CppName: set_AgentTimeHorizon
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Pathfinding::RVO::IAgent::*)(float)>(&Pathfinding::RVO::IAgent::set_AgentTimeHorizon)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::RVO::IAgent*), "set_AgentTimeHorizon", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Pathfinding::RVO::IAgent::get_ObstacleTimeHorizon
// Il2CppName: get_ObstacleTimeHorizon
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (Pathfinding::RVO::IAgent::*)()>(&Pathfinding::RVO::IAgent::get_ObstacleTimeHorizon)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::RVO::IAgent*), "get_ObstacleTimeHorizon", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Pathfinding::RVO::IAgent::set_ObstacleTimeHorizon
// Il2CppName: set_ObstacleTimeHorizon
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Pathfinding::RVO::IAgent::*)(float)>(&Pathfinding::RVO::IAgent::set_ObstacleTimeHorizon)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::RVO::IAgent*), "set_ObstacleTimeHorizon", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Pathfinding::RVO::IAgent::get_MaxNeighbours
// Il2CppName: get_MaxNeighbours
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Pathfinding::RVO::IAgent::*)()>(&Pathfinding::RVO::IAgent::get_MaxNeighbours)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::RVO::IAgent*), "get_MaxNeighbours", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Pathfinding::RVO::IAgent::set_MaxNeighbours
// Il2CppName: set_MaxNeighbours
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Pathfinding::RVO::IAgent::*)(int)>(&Pathfinding::RVO::IAgent::set_MaxNeighbours)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::RVO::IAgent*), "set_MaxNeighbours", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Pathfinding::RVO::IAgent::get_NeighbourCount
// Il2CppName: get_NeighbourCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Pathfinding::RVO::IAgent::*)()>(&Pathfinding::RVO::IAgent::get_NeighbourCount)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::RVO::IAgent*), "get_NeighbourCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Pathfinding::RVO::IAgent::get_Layer
// Il2CppName: get_Layer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Pathfinding::RVO::RVOLayer (Pathfinding::RVO::IAgent::*)()>(&Pathfinding::RVO::IAgent::get_Layer)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::RVO::IAgent*), "get_Layer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Pathfinding::RVO::IAgent::set_Layer
// Il2CppName: set_Layer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Pathfinding::RVO::IAgent::*)(::Pathfinding::RVO::RVOLayer)>(&Pathfinding::RVO::IAgent::set_Layer)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("Pathfinding.RVO", "RVOLayer")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::RVO::IAgent*), "set_Layer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Pathfinding::RVO::IAgent::get_CollidesWith
// Il2CppName: get_CollidesWith
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Pathfinding::RVO::RVOLayer (Pathfinding::RVO::IAgent::*)()>(&Pathfinding::RVO::IAgent::get_CollidesWith)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::RVO::IAgent*), "get_CollidesWith", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Pathfinding::RVO::IAgent::set_CollidesWith
// Il2CppName: set_CollidesWith
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Pathfinding::RVO::IAgent::*)(::Pathfinding::RVO::RVOLayer)>(&Pathfinding::RVO::IAgent::set_CollidesWith)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("Pathfinding.RVO", "RVOLayer")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::RVO::IAgent*), "set_CollidesWith", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Pathfinding::RVO::IAgent::get_DebugDraw
// Il2CppName: get_DebugDraw
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Pathfinding::RVO::IAgent::*)()>(&Pathfinding::RVO::IAgent::get_DebugDraw)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::RVO::IAgent*), "get_DebugDraw", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Pathfinding::RVO::IAgent::set_DebugDraw
// Il2CppName: set_DebugDraw
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Pathfinding::RVO::IAgent::*)(bool)>(&Pathfinding::RVO::IAgent::set_DebugDraw)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::RVO::IAgent*), "set_DebugDraw", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Pathfinding::RVO::IAgent::get_NeighbourObstacles
// Il2CppName: get_NeighbourObstacles
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::List_1<::Pathfinding::RVO::ObstacleVertex*>* (Pathfinding::RVO::IAgent::*)()>(&Pathfinding::RVO::IAgent::get_NeighbourObstacles)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::RVO::IAgent*), "get_NeighbourObstacles", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Pathfinding::RVO::IAgent::get_Priority
// Il2CppName: get_Priority
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (Pathfinding::RVO::IAgent::*)()>(&Pathfinding::RVO::IAgent::get_Priority)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::RVO::IAgent*), "get_Priority", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Pathfinding::RVO::IAgent::set_Priority
// Il2CppName: set_Priority
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Pathfinding::RVO::IAgent::*)(float)>(&Pathfinding::RVO::IAgent::set_Priority)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::RVO::IAgent*), "set_Priority", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Pathfinding::RVO::IAgent::set_PreCalculationCallback
// Il2CppName: set_PreCalculationCallback
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Pathfinding::RVO::IAgent::*)(::System::Action*)>(&Pathfinding::RVO::IAgent::set_PreCalculationCallback)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Action")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::RVO::IAgent*), "set_PreCalculationCallback", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Pathfinding::RVO::IAgent::SetCollisionNormal
// Il2CppName: SetCollisionNormal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Pathfinding::RVO::IAgent::*)(::UnityEngine::Vector2)>(&Pathfinding::RVO::IAgent::SetCollisionNormal)> {
  static const MethodInfo* get() {
    static auto* normal = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector2")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::RVO::IAgent*), "SetCollisionNormal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{normal});
  }
};
// Writing MetadataGetter for method: Pathfinding::RVO::IAgent::ForceSetVelocity
// Il2CppName: ForceSetVelocity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Pathfinding::RVO::IAgent::*)(::UnityEngine::Vector2)>(&Pathfinding::RVO::IAgent::ForceSetVelocity)> {
  static const MethodInfo* get() {
    static auto* velocity = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector2")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::RVO::IAgent*), "ForceSetVelocity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{velocity});
  }
};
