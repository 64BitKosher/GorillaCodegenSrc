// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Completed includes
// Type namespace: Pathfinding.Voxels
namespace Pathfinding::Voxels {
  // Forward declaring type: CompactVoxelCell
  struct CompactVoxelCell;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::Pathfinding::Voxels::CompactVoxelCell, "Pathfinding.Voxels", "CompactVoxelCell");
// Type namespace: Pathfinding.Voxels
namespace Pathfinding::Voxels {
  // Size: 0x8
  #pragma pack(push, 1)
  // WARNING Layout: Sequential may not be correctly taken into account!
  // Autogenerated type: Pathfinding.Voxels.CompactVoxelCell
  // [TokenAttribute] Offset: FFFFFFFF
  struct CompactVoxelCell/*, public ::System::ValueType*/ {
    public:
    public:
    // public System.UInt32 index
    // Size: 0x4
    // Offset: 0x0
    uint index;
    // Field size check
    static_assert(sizeof(uint) == 0x4);
    // public System.UInt32 count
    // Size: 0x4
    // Offset: 0x4
    uint count;
    // Field size check
    static_assert(sizeof(uint) == 0x4);
    public:
    // Creating value type constructor for type: CompactVoxelCell
    constexpr CompactVoxelCell(uint index_ = {}, uint count_ = {}) noexcept : index{index_}, count{count_} {}
    // Creating interface conversion operator: operator ::System::ValueType
    operator ::System::ValueType() noexcept {
      return *reinterpret_cast<::System::ValueType*>(this);
    }
    // Get instance field reference: public System.UInt32 index
    [[deprecated("Use field access instead!")]] uint& dyn_index();
    // Get instance field reference: public System.UInt32 count
    [[deprecated("Use field access instead!")]] uint& dyn_count();
    // public System.Void .ctor(System.UInt32 i, System.UInt32 c)
    // Offset: 0x2A112F0
    // ABORTED: conflicts with another method.  CompactVoxelCell(uint i, uint c);
  }; // Pathfinding.Voxels.CompactVoxelCell
  #pragma pack(pop)
  static check_size<sizeof(CompactVoxelCell), 4 + sizeof(uint)> __Pathfinding_Voxels_CompactVoxelCellSizeCheck;
  static_assert(sizeof(CompactVoxelCell) == 0x8);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Pathfinding::Voxels::CompactVoxelCell::CompactVoxelCell
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
