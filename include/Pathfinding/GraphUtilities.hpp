// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: Pathfinding.Int3
#include "Pathfinding/Int3.hpp"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Pathfinding
namespace Pathfinding {
  // Forward declaring type: NavGraph
  class NavGraph;
  // Forward declaring type: INavmesh
  class INavmesh;
  // Forward declaring type: GridGraph
  class GridGraph;
  // Forward declaring type: GridNodeBase
  class GridNodeBase;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Action`2<T1, T2>
  template<typename T1, typename T2>
  class Action_2;
  // Forward declaring type: Action`1<T>
  template<typename T>
  class Action_1;
}
// Completed forward declares
// Type namespace: Pathfinding
namespace Pathfinding {
  // Forward declaring type: GraphUtilities
  class GraphUtilities;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Pathfinding::GraphUtilities);
DEFINE_IL2CPP_ARG_TYPE(::Pathfinding::GraphUtilities*, "Pathfinding", "GraphUtilities");
// Type namespace: Pathfinding
namespace Pathfinding {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: Pathfinding.GraphUtilities
  // [TokenAttribute] Offset: FFFFFFFF
  class GraphUtilities : public ::Il2CppObject {
    public:
    // Nested type: ::Pathfinding::GraphUtilities::$$c__DisplayClass0_0
    class $$c__DisplayClass0_0;
    // Nested type: ::Pathfinding::GraphUtilities::$$c__DisplayClass1_0
    class $$c__DisplayClass1_0;
    // static public System.Collections.Generic.List`1<UnityEngine.Vector3> GetContours(Pathfinding.NavGraph graph)
    // Offset: 0x29AA798
    static ::System::Collections::Generic::List_1<::UnityEngine::Vector3>* GetContours(::Pathfinding::NavGraph* graph);
    // static public System.Void GetContours(Pathfinding.INavmesh navmesh, System.Action`2<System.Collections.Generic.List`1<Pathfinding.Int3>,System.Boolean> results)
    // Offset: 0x29AA9A4
    static void GetContours(::Pathfinding::INavmesh* navmesh, ::System::Action_2<::System::Collections::Generic::List_1<::Pathfinding::Int3>*, bool>* results);
    // static public System.Void GetContours(Pathfinding.GridGraph grid, System.Action`1<UnityEngine.Vector3[]> callback, System.Single yMergeThreshold, Pathfinding.GridNodeBase[] nodes)
    // Offset: 0x29AAC7C
    static void GetContours(::Pathfinding::GridGraph* grid, ::System::Action_1<::ArrayW<::UnityEngine::Vector3>>* callback, float yMergeThreshold, ::ArrayW<::Pathfinding::GridNodeBase*> nodes);
  }; // Pathfinding.GraphUtilities
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Pathfinding::GraphUtilities::GetContours
// Il2CppName: GetContours
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::List_1<::UnityEngine::Vector3>* (*)(::Pathfinding::NavGraph*)>(&Pathfinding::GraphUtilities::GetContours)> {
  static const MethodInfo* get() {
    static auto* graph = &::il2cpp_utils::GetClassFromName("Pathfinding", "NavGraph")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::GraphUtilities*), "GetContours", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{graph});
  }
};
// Writing MetadataGetter for method: Pathfinding::GraphUtilities::GetContours
// Il2CppName: GetContours
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Pathfinding::INavmesh*, ::System::Action_2<::System::Collections::Generic::List_1<::Pathfinding::Int3>*, bool>*)>(&Pathfinding::GraphUtilities::GetContours)> {
  static const MethodInfo* get() {
    static auto* navmesh = &::il2cpp_utils::GetClassFromName("Pathfinding", "INavmesh")->byval_arg;
    static auto* results = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("Pathfinding", "Int3")}), ::il2cpp_utils::GetClassFromName("System", "Boolean")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::GraphUtilities*), "GetContours", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{navmesh, results});
  }
};
// Writing MetadataGetter for method: Pathfinding::GraphUtilities::GetContours
// Il2CppName: GetContours
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Pathfinding::GridGraph*, ::System::Action_1<::ArrayW<::UnityEngine::Vector3>>*, float, ::ArrayW<::Pathfinding::GridNodeBase*>)>(&Pathfinding::GraphUtilities::GetContours)> {
  static const MethodInfo* get() {
    static auto* grid = &::il2cpp_utils::GetClassFromName("Pathfinding", "GridGraph")->byval_arg;
    static auto* callback = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3"), 1)})->byval_arg;
    static auto* yMergeThreshold = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* nodes = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("Pathfinding", "GridNodeBase"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::GraphUtilities*), "GetContours", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{grid, callback, yMergeThreshold, nodes});
  }
};
