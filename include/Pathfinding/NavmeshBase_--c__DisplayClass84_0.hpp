// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Pathfinding.NavmeshBase
#include "Pathfinding/NavmeshBase.hpp"
// Including type: Pathfinding.Connection
#include "Pathfinding/Connection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: Dictionary`2<TKey, TValue>
  template<typename TKey, typename TValue>
  class Dictionary_2;
}
// Forward declaring namespace: Pathfinding
namespace Pathfinding {
  // Forward declaring type: TriangleMeshNode
  class TriangleMeshNode;
  // Forward declaring type: GraphNode
  class GraphNode;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Pathfinding::NavmeshBase::$$c__DisplayClass84_0);
DEFINE_IL2CPP_ARG_TYPE(::Pathfinding::NavmeshBase::$$c__DisplayClass84_0*, "Pathfinding", "NavmeshBase/<>c__DisplayClass84_0");
// Type namespace: Pathfinding
namespace Pathfinding {
  // Size: 0x18
  #pragma pack(push, 1)
  // Autogenerated type: Pathfinding.NavmeshBase/<>c__DisplayClass84_0
  // [TokenAttribute] Offset: FFFFFFFF
  // [CompilerGeneratedAttribute] Offset: FFFFFFFF
  class NavmeshBase::$$c__DisplayClass84_0 : public ::Il2CppObject {
    public:
    public:
    // public System.Collections.Generic.Dictionary`2<Pathfinding.TriangleMeshNode,Pathfinding.Connection[]> conns
    // Size: 0x8
    // Offset: 0x10
    ::System::Collections::Generic::Dictionary_2<::Pathfinding::TriangleMeshNode*, ::ArrayW<::Pathfinding::Connection>>* conns;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::Dictionary_2<::Pathfinding::TriangleMeshNode*, ::ArrayW<::Pathfinding::Connection>>*) == 0x8);
    public:
    // Creating conversion operator: operator ::System::Collections::Generic::Dictionary_2<::Pathfinding::TriangleMeshNode*, ::ArrayW<::Pathfinding::Connection>>*
    constexpr operator ::System::Collections::Generic::Dictionary_2<::Pathfinding::TriangleMeshNode*, ::ArrayW<::Pathfinding::Connection>>*() const noexcept {
      return conns;
    }
    // Get instance field reference: public System.Collections.Generic.Dictionary`2<Pathfinding.TriangleMeshNode,Pathfinding.Connection[]> conns
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::Pathfinding::TriangleMeshNode*, ::ArrayW<::Pathfinding::Connection>>*& dyn_conns();
    // public System.Void .ctor()
    // Offset: 0x29D6124
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static NavmeshBase::$$c__DisplayClass84_0* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshBase::$$c__DisplayClass84_0::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<NavmeshBase::$$c__DisplayClass84_0*, creationType>()));
    }
    // System.Void <PostDeserialization>b__3(Pathfinding.GraphNode node)
    // Offset: 0x29D612C
    void $PostDeserialization$b__3(::Pathfinding::GraphNode* node);
  }; // Pathfinding.NavmeshBase/<>c__DisplayClass84_0
  #pragma pack(pop)
  static check_size<sizeof(NavmeshBase::$$c__DisplayClass84_0), 16 + sizeof(::System::Collections::Generic::Dictionary_2<::Pathfinding::TriangleMeshNode*, ::ArrayW<::Pathfinding::Connection>>*)> __Pathfinding_NavmeshBase_$$c__DisplayClass84_0SizeCheck;
  static_assert(sizeof(NavmeshBase::$$c__DisplayClass84_0) == 0x18);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Pathfinding::NavmeshBase::$$c__DisplayClass84_0::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: Pathfinding::NavmeshBase::$$c__DisplayClass84_0::$PostDeserialization$b__3
// Il2CppName: <PostDeserialization>b__3
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Pathfinding::NavmeshBase::$$c__DisplayClass84_0::*)(::Pathfinding::GraphNode*)>(&Pathfinding::NavmeshBase::$$c__DisplayClass84_0::$PostDeserialization$b__3)> {
  static const MethodInfo* get() {
    static auto* node = &::il2cpp_utils::GetClassFromName("Pathfinding", "GraphNode")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::NavmeshBase::$$c__DisplayClass84_0*), "<PostDeserialization>b__3", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{node});
  }
};
