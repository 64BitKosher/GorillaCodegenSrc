// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: NetSynchrony.RandomDispatcher
#include "NetSynchrony/RandomDispatcher.hpp"
// Including type: System.MulticastDelegate
#include "System/MulticastDelegate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: IAsyncResult
  class IAsyncResult;
  // Forward declaring type: AsyncCallback
  class AsyncCallback;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::NetSynchrony::RandomDispatcher::RandomDispatcherEvent);
DEFINE_IL2CPP_ARG_TYPE(::NetSynchrony::RandomDispatcher::RandomDispatcherEvent*, "NetSynchrony", "RandomDispatcher/RandomDispatcherEvent");
// Type namespace: NetSynchrony
namespace NetSynchrony {
  // Size: 0x80
  #pragma pack(push, 1)
  // Autogenerated type: NetSynchrony.RandomDispatcher/RandomDispatcherEvent
  // [TokenAttribute] Offset: FFFFFFFF
  class RandomDispatcher::RandomDispatcherEvent : public ::System::MulticastDelegate {
    public:
    // public System.Void .ctor(System.Object object, System.IntPtr method)
    // Offset: 0x286B724
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static RandomDispatcher::RandomDispatcherEvent* New_ctor(::Il2CppObject* object, ::System::IntPtr method) {
      static auto ___internal__logger = ::Logger::get().WithContext("::NetSynchrony::RandomDispatcher::RandomDispatcherEvent::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<RandomDispatcher::RandomDispatcherEvent*, creationType>(object, method)));
    }
    // public System.Void Invoke(NetSynchrony.RandomDispatcher randomDispatcher)
    // Offset: 0x286B82C
    void Invoke(::NetSynchrony::RandomDispatcher* randomDispatcher);
    // public System.IAsyncResult BeginInvoke(NetSynchrony.RandomDispatcher randomDispatcher, System.AsyncCallback callback, System.Object object)
    // Offset: 0x286B840
    ::System::IAsyncResult* BeginInvoke(::NetSynchrony::RandomDispatcher* randomDispatcher, ::System::AsyncCallback* callback, ::Il2CppObject* object);
    // public System.Void EndInvoke(System.IAsyncResult result)
    // Offset: 0x286B860
    void EndInvoke(::System::IAsyncResult* result);
  }; // NetSynchrony.RandomDispatcher/RandomDispatcherEvent
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: NetSynchrony::RandomDispatcher::RandomDispatcherEvent::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: NetSynchrony::RandomDispatcher::RandomDispatcherEvent::Invoke
// Il2CppName: Invoke
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NetSynchrony::RandomDispatcher::RandomDispatcherEvent::*)(::NetSynchrony::RandomDispatcher*)>(&NetSynchrony::RandomDispatcher::RandomDispatcherEvent::Invoke)> {
  static const MethodInfo* get() {
    static auto* randomDispatcher = &::il2cpp_utils::GetClassFromName("NetSynchrony", "RandomDispatcher")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(NetSynchrony::RandomDispatcher::RandomDispatcherEvent*), "Invoke", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{randomDispatcher});
  }
};
// Writing MetadataGetter for method: NetSynchrony::RandomDispatcher::RandomDispatcherEvent::BeginInvoke
// Il2CppName: BeginInvoke
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IAsyncResult* (NetSynchrony::RandomDispatcher::RandomDispatcherEvent::*)(::NetSynchrony::RandomDispatcher*, ::System::AsyncCallback*, ::Il2CppObject*)>(&NetSynchrony::RandomDispatcher::RandomDispatcherEvent::BeginInvoke)> {
  static const MethodInfo* get() {
    static auto* randomDispatcher = &::il2cpp_utils::GetClassFromName("NetSynchrony", "RandomDispatcher")->byval_arg;
    static auto* callback = &::il2cpp_utils::GetClassFromName("System", "AsyncCallback")->byval_arg;
    static auto* object = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(NetSynchrony::RandomDispatcher::RandomDispatcherEvent*), "BeginInvoke", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{randomDispatcher, callback, object});
  }
};
// Writing MetadataGetter for method: NetSynchrony::RandomDispatcher::RandomDispatcherEvent::EndInvoke
// Il2CppName: EndInvoke
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NetSynchrony::RandomDispatcher::RandomDispatcherEvent::*)(::System::IAsyncResult*)>(&NetSynchrony::RandomDispatcher::RandomDispatcherEvent::EndInvoke)> {
  static const MethodInfo* get() {
    static auto* result = &::il2cpp_utils::GetClassFromName("System", "IAsyncResult")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(NetSynchrony::RandomDispatcher::RandomDispatcherEvent*), "EndInvoke", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{result});
  }
};
