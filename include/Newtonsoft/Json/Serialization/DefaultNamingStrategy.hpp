// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Newtonsoft.Json.Serialization.NamingStrategy
#include "Newtonsoft/Json/Serialization/NamingStrategy.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Type namespace: Newtonsoft.Json.Serialization
namespace Newtonsoft::Json::Serialization {
  // Forward declaring type: DefaultNamingStrategy
  class DefaultNamingStrategy;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Newtonsoft::Json::Serialization::DefaultNamingStrategy);
DEFINE_IL2CPP_ARG_TYPE(::Newtonsoft::Json::Serialization::DefaultNamingStrategy*, "Newtonsoft.Json.Serialization", "DefaultNamingStrategy");
// Type namespace: Newtonsoft.Json.Serialization
namespace Newtonsoft::Json::Serialization {
  // Size: 0x13
  #pragma pack(push, 1)
  // Autogenerated type: Newtonsoft.Json.Serialization.DefaultNamingStrategy
  // [TokenAttribute] Offset: FFFFFFFF
  class DefaultNamingStrategy : public ::Newtonsoft::Json::Serialization::NamingStrategy {
    public:
    // protected override System.String ResolvePropertyName(System.String name)
    // Offset: 0x471E45C
    // Implemented from: Newtonsoft.Json.Serialization.NamingStrategy
    // Base method: System.String NamingStrategy::ResolvePropertyName(System.String name)
    ::StringW ResolvePropertyName(::StringW name);
    // public System.Void .ctor()
    // Offset: 0x471E464
    // Implemented from: Newtonsoft.Json.Serialization.NamingStrategy
    // Base method: System.Void NamingStrategy::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static DefaultNamingStrategy* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultNamingStrategy::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<DefaultNamingStrategy*, creationType>()));
    }
  }; // Newtonsoft.Json.Serialization.DefaultNamingStrategy
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Newtonsoft::Json::Serialization::DefaultNamingStrategy::ResolvePropertyName
// Il2CppName: ResolvePropertyName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (Newtonsoft::Json::Serialization::DefaultNamingStrategy::*)(::StringW)>(&Newtonsoft::Json::Serialization::DefaultNamingStrategy::ResolvePropertyName)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Serialization::DefaultNamingStrategy*), "ResolvePropertyName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Serialization::DefaultNamingStrategy::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
