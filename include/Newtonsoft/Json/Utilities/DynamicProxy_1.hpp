// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: IEnumerable`1<T>
  template<typename T>
  class IEnumerable_1;
}
// Forward declaring namespace: System::Dynamic
namespace System::Dynamic {
  // Forward declaring type: BinaryOperationBinder
  class BinaryOperationBinder;
  // Forward declaring type: ConvertBinder
  class ConvertBinder;
  // Forward declaring type: CreateInstanceBinder
  class CreateInstanceBinder;
  // Forward declaring type: DeleteIndexBinder
  class DeleteIndexBinder;
  // Forward declaring type: DeleteMemberBinder
  class DeleteMemberBinder;
  // Forward declaring type: GetIndexBinder
  class GetIndexBinder;
  // Forward declaring type: GetMemberBinder
  class GetMemberBinder;
  // Forward declaring type: InvokeBinder
  class InvokeBinder;
  // Forward declaring type: InvokeMemberBinder
  class InvokeMemberBinder;
  // Forward declaring type: SetIndexBinder
  class SetIndexBinder;
  // Forward declaring type: SetMemberBinder
  class SetMemberBinder;
  // Forward declaring type: UnaryOperationBinder
  class UnaryOperationBinder;
}
// Completed forward declares
// Type namespace: Newtonsoft.Json.Utilities
namespace Newtonsoft::Json::Utilities {
  // Forward declaring type: DynamicProxy`1<T>
  template<typename T>
  class DynamicProxy_1;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE_GENERIC_CLASS(::Newtonsoft::Json::Utilities::DynamicProxy_1, "Newtonsoft.Json.Utilities", "DynamicProxy`1");
// Type namespace: Newtonsoft.Json.Utilities
namespace Newtonsoft::Json::Utilities {
  // WARNING Size may be invalid!
  // Autogenerated type: Newtonsoft.Json.Utilities.DynamicProxy`1
  // [TokenAttribute] Offset: FFFFFFFF
  // [NullableContextAttribute] Offset: FFFFFFFF
  // [NullableAttribute] Offset: FFFFFFFF
  template<typename T>
  class DynamicProxy_1 : public ::Il2CppObject {
    public:
    // public System.Collections.Generic.IEnumerable`1<System.String> GetDynamicMemberNames(T instance)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::System::Collections::Generic::IEnumerable_1<::StringW>* GetDynamicMemberNames(T instance) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::DynamicProxy_1::GetDynamicMemberNames");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Utilities::DynamicProxy_1<T>*), -1));
      return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::StringW>*, false>(this, ___internal__method, instance);
    }
    // public System.Boolean TryBinaryOperation(T instance, System.Dynamic.BinaryOperationBinder binder, System.Object arg, out System.Object result)
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool TryBinaryOperation(T instance, ::System::Dynamic::BinaryOperationBinder* binder, ::Il2CppObject* arg, ByRef<::Il2CppObject*> result) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::DynamicProxy_1::TryBinaryOperation");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Utilities::DynamicProxy_1<T>*), -1));
      return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, instance, binder, arg, byref(result));
    }
    // public System.Boolean TryConvert(T instance, System.Dynamic.ConvertBinder binder, out System.Object result)
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool TryConvert(T instance, ::System::Dynamic::ConvertBinder* binder, ByRef<::Il2CppObject*> result) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::DynamicProxy_1::TryConvert");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Utilities::DynamicProxy_1<T>*), -1));
      return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, instance, binder, byref(result));
    }
    // public System.Boolean TryCreateInstance(T instance, System.Dynamic.CreateInstanceBinder binder, System.Object[] args, out System.Object result)
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool TryCreateInstance(T instance, ::System::Dynamic::CreateInstanceBinder* binder, ::ArrayW<::Il2CppObject*> args, ByRef<::Il2CppObject*> result) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::DynamicProxy_1::TryCreateInstance");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Utilities::DynamicProxy_1<T>*), -1));
      return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, instance, binder, args, byref(result));
    }
    // public System.Boolean TryDeleteIndex(T instance, System.Dynamic.DeleteIndexBinder binder, System.Object[] indexes)
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool TryDeleteIndex(T instance, ::System::Dynamic::DeleteIndexBinder* binder, ::ArrayW<::Il2CppObject*> indexes) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::DynamicProxy_1::TryDeleteIndex");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Utilities::DynamicProxy_1<T>*), -1));
      return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, instance, binder, indexes);
    }
    // public System.Boolean TryDeleteMember(T instance, System.Dynamic.DeleteMemberBinder binder)
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool TryDeleteMember(T instance, ::System::Dynamic::DeleteMemberBinder* binder) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::DynamicProxy_1::TryDeleteMember");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Utilities::DynamicProxy_1<T>*), -1));
      return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, instance, binder);
    }
    // public System.Boolean TryGetIndex(T instance, System.Dynamic.GetIndexBinder binder, System.Object[] indexes, out System.Object result)
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool TryGetIndex(T instance, ::System::Dynamic::GetIndexBinder* binder, ::ArrayW<::Il2CppObject*> indexes, ByRef<::Il2CppObject*> result) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::DynamicProxy_1::TryGetIndex");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Utilities::DynamicProxy_1<T>*), -1));
      return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, instance, binder, indexes, byref(result));
    }
    // public System.Boolean TryGetMember(T instance, System.Dynamic.GetMemberBinder binder, out System.Object result)
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool TryGetMember(T instance, ::System::Dynamic::GetMemberBinder* binder, ByRef<::Il2CppObject*> result) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::DynamicProxy_1::TryGetMember");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Utilities::DynamicProxy_1<T>*), -1));
      return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, instance, binder, byref(result));
    }
    // public System.Boolean TryInvoke(T instance, System.Dynamic.InvokeBinder binder, System.Object[] args, out System.Object result)
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool TryInvoke(T instance, ::System::Dynamic::InvokeBinder* binder, ::ArrayW<::Il2CppObject*> args, ByRef<::Il2CppObject*> result) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::DynamicProxy_1::TryInvoke");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Utilities::DynamicProxy_1<T>*), -1));
      return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, instance, binder, args, byref(result));
    }
    // public System.Boolean TryInvokeMember(T instance, System.Dynamic.InvokeMemberBinder binder, System.Object[] args, out System.Object result)
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool TryInvokeMember(T instance, ::System::Dynamic::InvokeMemberBinder* binder, ::ArrayW<::Il2CppObject*> args, ByRef<::Il2CppObject*> result) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::DynamicProxy_1::TryInvokeMember");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Utilities::DynamicProxy_1<T>*), -1));
      return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, instance, binder, args, byref(result));
    }
    // public System.Boolean TrySetIndex(T instance, System.Dynamic.SetIndexBinder binder, System.Object[] indexes, System.Object value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool TrySetIndex(T instance, ::System::Dynamic::SetIndexBinder* binder, ::ArrayW<::Il2CppObject*> indexes, ::Il2CppObject* value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::DynamicProxy_1::TrySetIndex");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Utilities::DynamicProxy_1<T>*), -1));
      return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, instance, binder, indexes, value);
    }
    // public System.Boolean TrySetMember(T instance, System.Dynamic.SetMemberBinder binder, System.Object value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool TrySetMember(T instance, ::System::Dynamic::SetMemberBinder* binder, ::Il2CppObject* value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::DynamicProxy_1::TrySetMember");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Utilities::DynamicProxy_1<T>*), -1));
      return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, instance, binder, value);
    }
    // public System.Boolean TryUnaryOperation(T instance, System.Dynamic.UnaryOperationBinder binder, out System.Object result)
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool TryUnaryOperation(T instance, ::System::Dynamic::UnaryOperationBinder* binder, ByRef<::Il2CppObject*> result) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::DynamicProxy_1::TryUnaryOperation");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Utilities::DynamicProxy_1<T>*), -1));
      return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, instance, binder, byref(result));
    }
    // public System.Void .ctor()
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static DynamicProxy_1<T>* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::DynamicProxy_1::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<DynamicProxy_1<T>*, creationType>()));
    }
  }; // Newtonsoft.Json.Utilities.DynamicProxy`1
  // Could not write size check! Type: Newtonsoft.Json.Utilities.DynamicProxy`1 is generic, or has no fields that are valid for size checks!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
