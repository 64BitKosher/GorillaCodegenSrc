// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Newtonsoft.Json.Linq.JToken
#include "Newtonsoft/Json/Linq/JToken.hpp"
// Including type: System.Collections.Generic.IList`1
#include "System/Collections/Generic/IList_1.hpp"
// Including type: System.ComponentModel.ITypedList
#include "System/ComponentModel/ITypedList.hpp"
// Including type: System.ComponentModel.IBindingList
#include "System/ComponentModel/IBindingList.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::ComponentModel
namespace System::ComponentModel {
  // Forward declaring type: ListChangedEventHandler
  class ListChangedEventHandler;
  // Forward declaring type: AddingNewEventHandler
  class AddingNewEventHandler;
  // Forward declaring type: AddingNewEventArgs
  class AddingNewEventArgs;
  // Forward declaring type: ListChangedEventArgs
  class ListChangedEventArgs;
  // Forward declaring type: PropertyDescriptor
  class PropertyDescriptor;
  // Forward declaring type: PropertyDescriptorCollection
  class PropertyDescriptorCollection;
  // Forward declaring type: ListSortDirection
  struct ListSortDirection;
}
// Forward declaring namespace: System::Collections::Specialized
namespace System::Collections::Specialized {
  // Forward declaring type: NotifyCollectionChangedEventHandler
  class NotifyCollectionChangedEventHandler;
  // Forward declaring type: NotifyCollectionChangedEventArgs
  class NotifyCollectionChangedEventArgs;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Array
  class Array;
}
// Forward declaring namespace: Newtonsoft::Json
namespace Newtonsoft::Json {
  // Forward declaring type: JsonReader
  class JsonReader;
  // Skipping declaration: IJsonLineInfo because it is already included!
}
// Forward declaring namespace: Newtonsoft::Json::Linq
namespace Newtonsoft::Json::Linq {
  // Forward declaring type: JsonLoadSettings
  class JsonLoadSettings;
  // Forward declaring type: JProperty
  class JProperty;
  // Forward declaring type: JEnumerable`1<T>
  template<typename T>
  struct JEnumerable_1;
}
// Completed forward declares
// Type namespace: Newtonsoft.Json.Linq
namespace Newtonsoft::Json::Linq {
  // Forward declaring type: JContainer
  class JContainer;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Newtonsoft::Json::Linq::JContainer);
DEFINE_IL2CPP_ARG_TYPE(::Newtonsoft::Json::Linq::JContainer*, "Newtonsoft.Json.Linq", "JContainer");
// Type namespace: Newtonsoft.Json.Linq
namespace Newtonsoft::Json::Linq {
  // Size: 0x51
  #pragma pack(push, 1)
  // Autogenerated type: Newtonsoft.Json.Linq.JContainer
  // [TokenAttribute] Offset: FFFFFFFF
  // [NullableContextAttribute] Offset: FFFFFFFF
  // [NullableAttribute] Offset: FFFFFFFF
  class JContainer : public ::Newtonsoft::Json::Linq::JToken/*, public ::System::Collections::Generic::IList_1<::Newtonsoft::Json::Linq::JToken*>, public ::System::ComponentModel::ITypedList, public ::System::ComponentModel::IBindingList*/ {
    public:
    public:
    // System.ComponentModel.ListChangedEventHandler _listChanged
    // Size: 0x8
    // Offset: 0x30
    ::System::ComponentModel::ListChangedEventHandler* listChanged;
    // Field size check
    static_assert(sizeof(::System::ComponentModel::ListChangedEventHandler*) == 0x8);
    // System.ComponentModel.AddingNewEventHandler _addingNew
    // Size: 0x8
    // Offset: 0x38
    ::System::ComponentModel::AddingNewEventHandler* addingNew;
    // Field size check
    static_assert(sizeof(::System::ComponentModel::AddingNewEventHandler*) == 0x8);
    // System.Collections.Specialized.NotifyCollectionChangedEventHandler _collectionChanged
    // Size: 0x8
    // Offset: 0x40
    ::System::Collections::Specialized::NotifyCollectionChangedEventHandler* collectionChanged;
    // Field size check
    static_assert(sizeof(::System::Collections::Specialized::NotifyCollectionChangedEventHandler*) == 0x8);
    // private System.Object _syncRoot
    // Size: 0x8
    // Offset: 0x48
    ::Il2CppObject* syncRoot;
    // Field size check
    static_assert(sizeof(::Il2CppObject*) == 0x8);
    // private System.Boolean _busy
    // Size: 0x1
    // Offset: 0x50
    bool busy;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    public:
    // Creating interface conversion operator: operator ::System::Collections::Generic::IList_1<::Newtonsoft::Json::Linq::JToken*>
    operator ::System::Collections::Generic::IList_1<::Newtonsoft::Json::Linq::JToken*>() noexcept {
      return *reinterpret_cast<::System::Collections::Generic::IList_1<::Newtonsoft::Json::Linq::JToken*>*>(this);
    }
    // Creating interface conversion operator: operator ::System::ComponentModel::ITypedList
    operator ::System::ComponentModel::ITypedList() noexcept {
      return *reinterpret_cast<::System::ComponentModel::ITypedList*>(this);
    }
    // Creating interface conversion operator: operator ::System::ComponentModel::IBindingList
    operator ::System::ComponentModel::IBindingList() noexcept {
      return *reinterpret_cast<::System::ComponentModel::IBindingList*>(this);
    }
    // Get instance field reference: System.ComponentModel.ListChangedEventHandler _listChanged
    [[deprecated("Use field access instead!")]] ::System::ComponentModel::ListChangedEventHandler*& dyn__listChanged();
    // Get instance field reference: System.ComponentModel.AddingNewEventHandler _addingNew
    [[deprecated("Use field access instead!")]] ::System::ComponentModel::AddingNewEventHandler*& dyn__addingNew();
    // Get instance field reference: System.Collections.Specialized.NotifyCollectionChangedEventHandler _collectionChanged
    [[deprecated("Use field access instead!")]] ::System::Collections::Specialized::NotifyCollectionChangedEventHandler*& dyn__collectionChanged();
    // Get instance field reference: private System.Object _syncRoot
    [[deprecated("Use field access instead!")]] ::Il2CppObject*& dyn__syncRoot();
    // Get instance field reference: private System.Boolean _busy
    [[deprecated("Use field access instead!")]] bool& dyn__busy();
    // public System.Void add_ListChanged(System.ComponentModel.ListChangedEventHandler value)
    // Offset: 0x473E30C
    void add_ListChanged(::System::ComponentModel::ListChangedEventHandler* value);
    // public System.Void remove_ListChanged(System.ComponentModel.ListChangedEventHandler value)
    // Offset: 0x473E39C
    void remove_ListChanged(::System::ComponentModel::ListChangedEventHandler* value);
    // protected System.Collections.Generic.IList`1<Newtonsoft.Json.Linq.JToken> get_ChildrenTokens()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::System::Collections::Generic::IList_1<::Newtonsoft::Json::Linq::JToken*>* get_ChildrenTokens();
    // System.Void .ctor(Newtonsoft.Json.Linq.JContainer other)
    // Offset: 0x473D274
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static JContainer* New_ctor(::Newtonsoft::Json::Linq::JContainer* other) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JContainer::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<JContainer*, creationType>(other)));
    }
    // System.Void CheckReentrancy()
    // Offset: 0x473E858
    void CheckReentrancy();
    // protected System.Void OnAddingNew(System.ComponentModel.AddingNewEventArgs e)
    // Offset: 0x473E900
    void OnAddingNew(::System::ComponentModel::AddingNewEventArgs* e);
    // protected System.Void OnListChanged(System.ComponentModel.ListChangedEventArgs e)
    // Offset: 0x473E928
    void OnListChanged(::System::ComponentModel::ListChangedEventArgs* e);
    // protected System.Void OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
    // Offset: 0x473E9B0
    void OnCollectionChanged(::System::Collections::Specialized::NotifyCollectionChangedEventArgs* e);
    // System.Boolean IsMultiContent(System.Object content)
    // Offset: 0x473EDE4
    bool IsMultiContent(::Il2CppObject* content);
    // Newtonsoft.Json.Linq.JToken EnsureParentToken(Newtonsoft.Json.Linq.JToken item, System.Boolean skipParentCheck)
    // Offset: 0x473EEC8
    ::Newtonsoft::Json::Linq::JToken* EnsureParentToken(::Newtonsoft::Json::Linq::JToken* item, bool skipParentCheck);
    // System.Int32 IndexOfItem(Newtonsoft.Json.Linq.JToken item)
    // Offset: 0xFFFFFFFFFFFFFFFF
    int IndexOfItem(::Newtonsoft::Json::Linq::JToken* item);
    // System.Boolean InsertItem(System.Int32 index, Newtonsoft.Json.Linq.JToken item, System.Boolean skipParentCheck)
    // Offset: 0x473EFCC
    bool InsertItem(int index, ::Newtonsoft::Json::Linq::JToken* item, bool skipParentCheck);
    // System.Void RemoveItemAt(System.Int32 index)
    // Offset: 0x473F3F0
    void RemoveItemAt(int index);
    // System.Boolean RemoveItem(Newtonsoft.Json.Linq.JToken item)
    // Offset: 0x473F884
    bool RemoveItem(::Newtonsoft::Json::Linq::JToken* item);
    // Newtonsoft.Json.Linq.JToken GetItem(System.Int32 index)
    // Offset: 0x473F8D0
    ::Newtonsoft::Json::Linq::JToken* GetItem(int index);
    // System.Void SetItem(System.Int32 index, Newtonsoft.Json.Linq.JToken item)
    // Offset: 0x473F98C
    void SetItem(int index, ::Newtonsoft::Json::Linq::JToken* item);
    // System.Void ClearItems()
    // Offset: 0x473FF50
    void ClearItems();
    // System.Void ReplaceItem(Newtonsoft.Json.Linq.JToken existing, Newtonsoft.Json.Linq.JToken replacement)
    // Offset: 0x4740394
    void ReplaceItem(::Newtonsoft::Json::Linq::JToken* existing, ::Newtonsoft::Json::Linq::JToken* replacement);
    // System.Boolean ContainsItem(Newtonsoft.Json.Linq.JToken item)
    // Offset: 0x47403F8
    bool ContainsItem(::Newtonsoft::Json::Linq::JToken* item);
    // System.Void CopyItemsTo(System.Array array, System.Int32 arrayIndex)
    // Offset: 0x474041C
    void CopyItemsTo(::System::Array* array, int arrayIndex);
    // static System.Boolean IsTokenUnchanged(Newtonsoft.Json.Linq.JToken currentValue, Newtonsoft.Json.Linq.JToken newValue)
    // Offset: 0x473FEA4
    static bool IsTokenUnchanged(::Newtonsoft::Json::Linq::JToken* currentValue, ::Newtonsoft::Json::Linq::JToken* newValue);
    // System.Void ValidateToken(Newtonsoft.Json.Linq.JToken o, Newtonsoft.Json.Linq.JToken existing)
    // Offset: 0x47408FC
    void ValidateToken(::Newtonsoft::Json::Linq::JToken* o, ::Newtonsoft::Json::Linq::JToken* existing);
    // public System.Void Add(System.Object content)
    // Offset: 0x4740A18
    void Add(::Il2CppObject* content);
    // System.Boolean TryAdd(System.Object content)
    // Offset: 0x4740AE4
    bool TryAdd(::Il2CppObject* content);
    // System.Void AddAndSkipParentCheck(Newtonsoft.Json.Linq.JToken token)
    // Offset: 0x4740BB0
    void AddAndSkipParentCheck(::Newtonsoft::Json::Linq::JToken* token);
    // System.Boolean TryAddInternal(System.Int32 index, System.Object content, System.Boolean skipParentCheck)
    // Offset: 0x473E434
    bool TryAddInternal(int index, ::Il2CppObject* content, bool skipParentCheck);
    // static Newtonsoft.Json.Linq.JToken CreateFromContent(System.Object content)
    // Offset: 0x4740C7C
    static ::Newtonsoft::Json::Linq::JToken* CreateFromContent(::Il2CppObject* content);
    // public System.Void RemoveAll()
    // Offset: 0x4740D60
    void RemoveAll();
    // System.Void ReadTokenFrom(Newtonsoft.Json.JsonReader reader, Newtonsoft.Json.Linq.JsonLoadSettings options)
    // Offset: 0x473D9E8
    void ReadTokenFrom(::Newtonsoft::Json::JsonReader* reader, ::Newtonsoft::Json::Linq::JsonLoadSettings* options);
    // System.Void ReadContentFrom(Newtonsoft.Json.JsonReader r, Newtonsoft.Json.Linq.JsonLoadSettings settings)
    // Offset: 0x4740D70
    void ReadContentFrom(::Newtonsoft::Json::JsonReader* r, ::Newtonsoft::Json::Linq::JsonLoadSettings* settings);
    // static private Newtonsoft.Json.Linq.JProperty ReadProperty(Newtonsoft.Json.JsonReader r, Newtonsoft.Json.Linq.JsonLoadSettings settings, Newtonsoft.Json.IJsonLineInfo lineInfo, Newtonsoft.Json.Linq.JContainer parent)
    // Offset: 0x47412A8
    static ::Newtonsoft::Json::Linq::JProperty* ReadProperty(::Newtonsoft::Json::JsonReader* r, ::Newtonsoft::Json::Linq::JsonLoadSettings* settings, ::Newtonsoft::Json::IJsonLineInfo* lineInfo, ::Newtonsoft::Json::Linq::JContainer* parent);
    // private System.String System.ComponentModel.ITypedList.GetListName(System.ComponentModel.PropertyDescriptor[] listAccessors)
    // Offset: 0x4741720
    ::StringW System_ComponentModel_ITypedList_GetListName(::ArrayW<::System::ComponentModel::PropertyDescriptor*> listAccessors);
    // private System.ComponentModel.PropertyDescriptorCollection System.ComponentModel.ITypedList.GetItemProperties(System.ComponentModel.PropertyDescriptor[] listAccessors)
    // Offset: 0x4741768
    ::System::ComponentModel::PropertyDescriptorCollection* System_ComponentModel_ITypedList_GetItemProperties(::ArrayW<::System::ComponentModel::PropertyDescriptor*> listAccessors);
    // private System.Int32 System.Collections.Generic.IList<Newtonsoft.Json.Linq.JToken>.IndexOf(Newtonsoft.Json.Linq.JToken item)
    // Offset: 0x4741830
    int System_Collections_Generic_IList$Newtonsoft_Json_Linq_JToken$_IndexOf(::Newtonsoft::Json::Linq::JToken* item);
    // private System.Void System.Collections.Generic.IList<Newtonsoft.Json.Linq.JToken>.Insert(System.Int32 index, Newtonsoft.Json.Linq.JToken item)
    // Offset: 0x4741840
    void System_Collections_Generic_IList$Newtonsoft_Json_Linq_JToken$_Insert(int index, ::Newtonsoft::Json::Linq::JToken* item);
    // private System.Void System.Collections.Generic.IList<Newtonsoft.Json.Linq.JToken>.RemoveAt(System.Int32 index)
    // Offset: 0x4741854
    void System_Collections_Generic_IList$Newtonsoft_Json_Linq_JToken$_RemoveAt(int index);
    // private Newtonsoft.Json.Linq.JToken System.Collections.Generic.IList<Newtonsoft.Json.Linq.JToken>.get_Item(System.Int32 index)
    // Offset: 0x4741864
    ::Newtonsoft::Json::Linq::JToken* System_Collections_Generic_IList$Newtonsoft_Json_Linq_JToken$_get_Item(int index);
    // private System.Void System.Collections.Generic.IList<Newtonsoft.Json.Linq.JToken>.set_Item(System.Int32 index, Newtonsoft.Json.Linq.JToken value)
    // Offset: 0x4741874
    void System_Collections_Generic_IList$Newtonsoft_Json_Linq_JToken$_set_Item(int index, ::Newtonsoft::Json::Linq::JToken* value);
    // private System.Void System.Collections.Generic.ICollection<Newtonsoft.Json.Linq.JToken>.Add(Newtonsoft.Json.Linq.JToken item)
    // Offset: 0x4741884
    void System_Collections_Generic_ICollection$Newtonsoft_Json_Linq_JToken$_Add(::Newtonsoft::Json::Linq::JToken* item);
    // private System.Void System.Collections.Generic.ICollection<Newtonsoft.Json.Linq.JToken>.Clear()
    // Offset: 0x4741894
    void System_Collections_Generic_ICollection$Newtonsoft_Json_Linq_JToken$_Clear();
    // private System.Boolean System.Collections.Generic.ICollection<Newtonsoft.Json.Linq.JToken>.Contains(Newtonsoft.Json.Linq.JToken item)
    // Offset: 0x47418A4
    bool System_Collections_Generic_ICollection$Newtonsoft_Json_Linq_JToken$_Contains(::Newtonsoft::Json::Linq::JToken* item);
    // private System.Void System.Collections.Generic.ICollection<Newtonsoft.Json.Linq.JToken>.CopyTo(Newtonsoft.Json.Linq.JToken[] array, System.Int32 arrayIndex)
    // Offset: 0x47418B4
    void System_Collections_Generic_ICollection$Newtonsoft_Json_Linq_JToken$_CopyTo(::ArrayW<::Newtonsoft::Json::Linq::JToken*> array, int arrayIndex);
    // private System.Boolean System.Collections.Generic.ICollection<Newtonsoft.Json.Linq.JToken>.get_IsReadOnly()
    // Offset: 0x47418C4
    bool System_Collections_Generic_ICollection$Newtonsoft_Json_Linq_JToken$_get_IsReadOnly();
    // private System.Boolean System.Collections.Generic.ICollection<Newtonsoft.Json.Linq.JToken>.Remove(Newtonsoft.Json.Linq.JToken item)
    // Offset: 0x47418CC
    bool System_Collections_Generic_ICollection$Newtonsoft_Json_Linq_JToken$_Remove(::Newtonsoft::Json::Linq::JToken* item);
    // private Newtonsoft.Json.Linq.JToken EnsureValue(System.Object value)
    // Offset: 0x47418DC
    ::Newtonsoft::Json::Linq::JToken* EnsureValue(::Il2CppObject* value);
    // private System.Int32 System.Collections.IList.Add(System.Object value)
    // Offset: 0x4741998
    int System_Collections_IList_Add(::Il2CppObject* value);
    // private System.Void System.Collections.IList.Clear()
    // Offset: 0x47419D0
    void System_Collections_IList_Clear();
    // private System.Boolean System.Collections.IList.Contains(System.Object value)
    // Offset: 0x47419E0
    bool System_Collections_IList_Contains(::Il2CppObject* value);
    // private System.Int32 System.Collections.IList.IndexOf(System.Object value)
    // Offset: 0x4741A08
    int System_Collections_IList_IndexOf(::Il2CppObject* value);
    // private System.Void System.Collections.IList.Insert(System.Int32 index, System.Object value)
    // Offset: 0x4741A30
    void System_Collections_IList_Insert(int index, ::Il2CppObject* value);
    // private System.Boolean System.Collections.IList.get_IsFixedSize()
    // Offset: 0x4741A70
    bool System_Collections_IList_get_IsFixedSize();
    // private System.Boolean System.Collections.IList.get_IsReadOnly()
    // Offset: 0x4741A78
    bool System_Collections_IList_get_IsReadOnly();
    // private System.Void System.Collections.IList.Remove(System.Object value)
    // Offset: 0x4741A80
    void System_Collections_IList_Remove(::Il2CppObject* value);
    // private System.Void System.Collections.IList.RemoveAt(System.Int32 index)
    // Offset: 0x4741AA8
    void System_Collections_IList_RemoveAt(int index);
    // private System.Object System.Collections.IList.get_Item(System.Int32 index)
    // Offset: 0x4741AB8
    ::Il2CppObject* System_Collections_IList_get_Item(int index);
    // private System.Void System.Collections.IList.set_Item(System.Int32 index, System.Object value)
    // Offset: 0x4741AC8
    void System_Collections_IList_set_Item(int index, ::Il2CppObject* value);
    // private System.Void System.Collections.ICollection.CopyTo(System.Array array, System.Int32 index)
    // Offset: 0x4741B04
    void System_Collections_ICollection_CopyTo(::System::Array* array, int index);
    // public System.Int32 get_Count()
    // Offset: 0x4740848
    int get_Count();
    // private System.Boolean System.Collections.ICollection.get_IsSynchronized()
    // Offset: 0x4741B14
    bool System_Collections_ICollection_get_IsSynchronized();
    // private System.Object System.Collections.ICollection.get_SyncRoot()
    // Offset: 0x4741B1C
    ::Il2CppObject* System_Collections_ICollection_get_SyncRoot();
    // private System.Void System.ComponentModel.IBindingList.AddIndex(System.ComponentModel.PropertyDescriptor property)
    // Offset: 0x4741B90
    void System_ComponentModel_IBindingList_AddIndex(::System::ComponentModel::PropertyDescriptor* property);
    // private System.Object System.ComponentModel.IBindingList.AddNew()
    // Offset: 0x4741B94
    ::Il2CppObject* System_ComponentModel_IBindingList_AddNew();
    // private System.Boolean System.ComponentModel.IBindingList.get_AllowEdit()
    // Offset: 0x4741D54
    bool System_ComponentModel_IBindingList_get_AllowEdit();
    // private System.Boolean System.ComponentModel.IBindingList.get_AllowNew()
    // Offset: 0x4741D5C
    bool System_ComponentModel_IBindingList_get_AllowNew();
    // private System.Boolean System.ComponentModel.IBindingList.get_AllowRemove()
    // Offset: 0x4741D64
    bool System_ComponentModel_IBindingList_get_AllowRemove();
    // private System.Void System.ComponentModel.IBindingList.ApplySort(System.ComponentModel.PropertyDescriptor property, System.ComponentModel.ListSortDirection direction)
    // Offset: 0x4741D6C
    void System_ComponentModel_IBindingList_ApplySort(::System::ComponentModel::PropertyDescriptor* property, ::System::ComponentModel::ListSortDirection direction);
    // private System.Int32 System.ComponentModel.IBindingList.Find(System.ComponentModel.PropertyDescriptor property, System.Object key)
    // Offset: 0x4741DA4
    int System_ComponentModel_IBindingList_Find(::System::ComponentModel::PropertyDescriptor* property, ::Il2CppObject* key);
    // private System.Boolean System.ComponentModel.IBindingList.get_IsSorted()
    // Offset: 0x4741DDC
    bool System_ComponentModel_IBindingList_get_IsSorted();
    // private System.Void System.ComponentModel.IBindingList.RemoveIndex(System.ComponentModel.PropertyDescriptor property)
    // Offset: 0x4741DE4
    void System_ComponentModel_IBindingList_RemoveIndex(::System::ComponentModel::PropertyDescriptor* property);
    // private System.Void System.ComponentModel.IBindingList.RemoveSort()
    // Offset: 0x4741DE8
    void System_ComponentModel_IBindingList_RemoveSort();
    // private System.ComponentModel.ListSortDirection System.ComponentModel.IBindingList.get_SortDirection()
    // Offset: 0x4741E20
    ::System::ComponentModel::ListSortDirection System_ComponentModel_IBindingList_get_SortDirection();
    // private System.ComponentModel.PropertyDescriptor System.ComponentModel.IBindingList.get_SortProperty()
    // Offset: 0x4741E28
    ::System::ComponentModel::PropertyDescriptor* System_ComponentModel_IBindingList_get_SortProperty();
    // private System.Boolean System.ComponentModel.IBindingList.get_SupportsChangeNotification()
    // Offset: 0x4741E30
    bool System_ComponentModel_IBindingList_get_SupportsChangeNotification();
    // private System.Boolean System.ComponentModel.IBindingList.get_SupportsSearching()
    // Offset: 0x4741E38
    bool System_ComponentModel_IBindingList_get_SupportsSearching();
    // private System.Boolean System.ComponentModel.IBindingList.get_SupportsSorting()
    // Offset: 0x4741E40
    bool System_ComponentModel_IBindingList_get_SupportsSorting();
    // System.Void .ctor()
    // Offset: 0x473D190
    // Implemented from: Newtonsoft.Json.Linq.JToken
    // Base method: System.Void JToken::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static JContainer* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JContainer::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<JContainer*, creationType>()));
    }
    // public override System.Boolean get_HasValues()
    // Offset: 0x473EA38
    // Implemented from: Newtonsoft.Json.Linq.JToken
    // Base method: System.Boolean JToken::get_HasValues()
    bool get_HasValues();
    // public override Newtonsoft.Json.Linq.JToken get_First()
    // Offset: 0x473EAF8
    // Implemented from: Newtonsoft.Json.Linq.JToken
    // Base method: Newtonsoft.Json.Linq.JToken JToken::get_First()
    ::Newtonsoft::Json::Linq::JToken* get_First();
    // public override Newtonsoft.Json.Linq.JToken get_Last()
    // Offset: 0x473EC34
    // Implemented from: Newtonsoft.Json.Linq.JToken
    // Base method: Newtonsoft.Json.Linq.JToken JToken::get_Last()
    ::Newtonsoft::Json::Linq::JToken* get_Last();
    // public override Newtonsoft.Json.Linq.JEnumerable`1<Newtonsoft.Json.Linq.JToken> Children()
    // Offset: 0x473ED70
    // Implemented from: Newtonsoft.Json.Linq.JToken
    // Base method: Newtonsoft.Json.Linq.JEnumerable`1<Newtonsoft.Json.Linq.JToken> JToken::Children()
    ::Newtonsoft::Json::Linq::JEnumerable_1<::Newtonsoft::Json::Linq::JToken*> Children();
  }; // Newtonsoft.Json.Linq.JContainer
  #pragma pack(pop)
  static check_size<sizeof(JContainer), 80 + sizeof(bool)> __Newtonsoft_Json_Linq_JContainerSizeCheck;
  static_assert(sizeof(JContainer) == 0x51);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Newtonsoft::Json::Linq::JContainer::add_ListChanged
// Il2CppName: add_ListChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Newtonsoft::Json::Linq::JContainer::*)(::System::ComponentModel::ListChangedEventHandler*)>(&Newtonsoft::Json::Linq::JContainer::add_ListChanged)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System.ComponentModel", "ListChangedEventHandler")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Linq::JContainer*), "add_ListChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Linq::JContainer::remove_ListChanged
// Il2CppName: remove_ListChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Newtonsoft::Json::Linq::JContainer::*)(::System::ComponentModel::ListChangedEventHandler*)>(&Newtonsoft::Json::Linq::JContainer::remove_ListChanged)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System.ComponentModel", "ListChangedEventHandler")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Linq::JContainer*), "remove_ListChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Linq::JContainer::get_ChildrenTokens
// Il2CppName: get_ChildrenTokens
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::IList_1<::Newtonsoft::Json::Linq::JToken*>* (Newtonsoft::Json::Linq::JContainer::*)()>(&Newtonsoft::Json::Linq::JContainer::get_ChildrenTokens)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Linq::JContainer*), "get_ChildrenTokens", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Linq::JContainer::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: Newtonsoft::Json::Linq::JContainer::CheckReentrancy
// Il2CppName: CheckReentrancy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Newtonsoft::Json::Linq::JContainer::*)()>(&Newtonsoft::Json::Linq::JContainer::CheckReentrancy)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Linq::JContainer*), "CheckReentrancy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Linq::JContainer::OnAddingNew
// Il2CppName: OnAddingNew
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Newtonsoft::Json::Linq::JContainer::*)(::System::ComponentModel::AddingNewEventArgs*)>(&Newtonsoft::Json::Linq::JContainer::OnAddingNew)> {
  static const MethodInfo* get() {
    static auto* e = &::il2cpp_utils::GetClassFromName("System.ComponentModel", "AddingNewEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Linq::JContainer*), "OnAddingNew", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{e});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Linq::JContainer::OnListChanged
// Il2CppName: OnListChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Newtonsoft::Json::Linq::JContainer::*)(::System::ComponentModel::ListChangedEventArgs*)>(&Newtonsoft::Json::Linq::JContainer::OnListChanged)> {
  static const MethodInfo* get() {
    static auto* e = &::il2cpp_utils::GetClassFromName("System.ComponentModel", "ListChangedEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Linq::JContainer*), "OnListChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{e});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Linq::JContainer::OnCollectionChanged
// Il2CppName: OnCollectionChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Newtonsoft::Json::Linq::JContainer::*)(::System::Collections::Specialized::NotifyCollectionChangedEventArgs*)>(&Newtonsoft::Json::Linq::JContainer::OnCollectionChanged)> {
  static const MethodInfo* get() {
    static auto* e = &::il2cpp_utils::GetClassFromName("System.Collections.Specialized", "NotifyCollectionChangedEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Linq::JContainer*), "OnCollectionChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{e});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Linq::JContainer::IsMultiContent
// Il2CppName: IsMultiContent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Newtonsoft::Json::Linq::JContainer::*)(::Il2CppObject*)>(&Newtonsoft::Json::Linq::JContainer::IsMultiContent)> {
  static const MethodInfo* get() {
    static auto* content = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Linq::JContainer*), "IsMultiContent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{content});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Linq::JContainer::EnsureParentToken
// Il2CppName: EnsureParentToken
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Newtonsoft::Json::Linq::JToken* (Newtonsoft::Json::Linq::JContainer::*)(::Newtonsoft::Json::Linq::JToken*, bool)>(&Newtonsoft::Json::Linq::JContainer::EnsureParentToken)> {
  static const MethodInfo* get() {
    static auto* item = &::il2cpp_utils::GetClassFromName("Newtonsoft.Json.Linq", "JToken")->byval_arg;
    static auto* skipParentCheck = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Linq::JContainer*), "EnsureParentToken", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{item, skipParentCheck});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Linq::JContainer::IndexOfItem
// Il2CppName: IndexOfItem
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Newtonsoft::Json::Linq::JContainer::*)(::Newtonsoft::Json::Linq::JToken*)>(&Newtonsoft::Json::Linq::JContainer::IndexOfItem)> {
  static const MethodInfo* get() {
    static auto* item = &::il2cpp_utils::GetClassFromName("Newtonsoft.Json.Linq", "JToken")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Linq::JContainer*), "IndexOfItem", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{item});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Linq::JContainer::InsertItem
// Il2CppName: InsertItem
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Newtonsoft::Json::Linq::JContainer::*)(int, ::Newtonsoft::Json::Linq::JToken*, bool)>(&Newtonsoft::Json::Linq::JContainer::InsertItem)> {
  static const MethodInfo* get() {
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* item = &::il2cpp_utils::GetClassFromName("Newtonsoft.Json.Linq", "JToken")->byval_arg;
    static auto* skipParentCheck = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Linq::JContainer*), "InsertItem", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{index, item, skipParentCheck});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Linq::JContainer::RemoveItemAt
// Il2CppName: RemoveItemAt
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Newtonsoft::Json::Linq::JContainer::*)(int)>(&Newtonsoft::Json::Linq::JContainer::RemoveItemAt)> {
  static const MethodInfo* get() {
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Linq::JContainer*), "RemoveItemAt", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{index});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Linq::JContainer::RemoveItem
// Il2CppName: RemoveItem
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Newtonsoft::Json::Linq::JContainer::*)(::Newtonsoft::Json::Linq::JToken*)>(&Newtonsoft::Json::Linq::JContainer::RemoveItem)> {
  static const MethodInfo* get() {
    static auto* item = &::il2cpp_utils::GetClassFromName("Newtonsoft.Json.Linq", "JToken")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Linq::JContainer*), "RemoveItem", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{item});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Linq::JContainer::GetItem
// Il2CppName: GetItem
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Newtonsoft::Json::Linq::JToken* (Newtonsoft::Json::Linq::JContainer::*)(int)>(&Newtonsoft::Json::Linq::JContainer::GetItem)> {
  static const MethodInfo* get() {
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Linq::JContainer*), "GetItem", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{index});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Linq::JContainer::SetItem
// Il2CppName: SetItem
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Newtonsoft::Json::Linq::JContainer::*)(int, ::Newtonsoft::Json::Linq::JToken*)>(&Newtonsoft::Json::Linq::JContainer::SetItem)> {
  static const MethodInfo* get() {
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* item = &::il2cpp_utils::GetClassFromName("Newtonsoft.Json.Linq", "JToken")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Linq::JContainer*), "SetItem", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{index, item});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Linq::JContainer::ClearItems
// Il2CppName: ClearItems
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Newtonsoft::Json::Linq::JContainer::*)()>(&Newtonsoft::Json::Linq::JContainer::ClearItems)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Linq::JContainer*), "ClearItems", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Linq::JContainer::ReplaceItem
// Il2CppName: ReplaceItem
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Newtonsoft::Json::Linq::JContainer::*)(::Newtonsoft::Json::Linq::JToken*, ::Newtonsoft::Json::Linq::JToken*)>(&Newtonsoft::Json::Linq::JContainer::ReplaceItem)> {
  static const MethodInfo* get() {
    static auto* existing = &::il2cpp_utils::GetClassFromName("Newtonsoft.Json.Linq", "JToken")->byval_arg;
    static auto* replacement = &::il2cpp_utils::GetClassFromName("Newtonsoft.Json.Linq", "JToken")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Linq::JContainer*), "ReplaceItem", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{existing, replacement});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Linq::JContainer::ContainsItem
// Il2CppName: ContainsItem
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Newtonsoft::Json::Linq::JContainer::*)(::Newtonsoft::Json::Linq::JToken*)>(&Newtonsoft::Json::Linq::JContainer::ContainsItem)> {
  static const MethodInfo* get() {
    static auto* item = &::il2cpp_utils::GetClassFromName("Newtonsoft.Json.Linq", "JToken")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Linq::JContainer*), "ContainsItem", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{item});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Linq::JContainer::CopyItemsTo
// Il2CppName: CopyItemsTo
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Newtonsoft::Json::Linq::JContainer::*)(::System::Array*, int)>(&Newtonsoft::Json::Linq::JContainer::CopyItemsTo)> {
  static const MethodInfo* get() {
    static auto* array = &::il2cpp_utils::GetClassFromName("System", "Array")->byval_arg;
    static auto* arrayIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Linq::JContainer*), "CopyItemsTo", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{array, arrayIndex});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Linq::JContainer::IsTokenUnchanged
// Il2CppName: IsTokenUnchanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::Newtonsoft::Json::Linq::JToken*, ::Newtonsoft::Json::Linq::JToken*)>(&Newtonsoft::Json::Linq::JContainer::IsTokenUnchanged)> {
  static const MethodInfo* get() {
    static auto* currentValue = &::il2cpp_utils::GetClassFromName("Newtonsoft.Json.Linq", "JToken")->byval_arg;
    static auto* newValue = &::il2cpp_utils::GetClassFromName("Newtonsoft.Json.Linq", "JToken")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Linq::JContainer*), "IsTokenUnchanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{currentValue, newValue});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Linq::JContainer::ValidateToken
// Il2CppName: ValidateToken
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Newtonsoft::Json::Linq::JContainer::*)(::Newtonsoft::Json::Linq::JToken*, ::Newtonsoft::Json::Linq::JToken*)>(&Newtonsoft::Json::Linq::JContainer::ValidateToken)> {
  static const MethodInfo* get() {
    static auto* o = &::il2cpp_utils::GetClassFromName("Newtonsoft.Json.Linq", "JToken")->byval_arg;
    static auto* existing = &::il2cpp_utils::GetClassFromName("Newtonsoft.Json.Linq", "JToken")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Linq::JContainer*), "ValidateToken", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{o, existing});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Linq::JContainer::Add
// Il2CppName: Add
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Newtonsoft::Json::Linq::JContainer::*)(::Il2CppObject*)>(&Newtonsoft::Json::Linq::JContainer::Add)> {
  static const MethodInfo* get() {
    static auto* content = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Linq::JContainer*), "Add", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{content});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Linq::JContainer::TryAdd
// Il2CppName: TryAdd
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Newtonsoft::Json::Linq::JContainer::*)(::Il2CppObject*)>(&Newtonsoft::Json::Linq::JContainer::TryAdd)> {
  static const MethodInfo* get() {
    static auto* content = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Linq::JContainer*), "TryAdd", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{content});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Linq::JContainer::AddAndSkipParentCheck
// Il2CppName: AddAndSkipParentCheck
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Newtonsoft::Json::Linq::JContainer::*)(::Newtonsoft::Json::Linq::JToken*)>(&Newtonsoft::Json::Linq::JContainer::AddAndSkipParentCheck)> {
  static const MethodInfo* get() {
    static auto* token = &::il2cpp_utils::GetClassFromName("Newtonsoft.Json.Linq", "JToken")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Linq::JContainer*), "AddAndSkipParentCheck", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{token});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Linq::JContainer::TryAddInternal
// Il2CppName: TryAddInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Newtonsoft::Json::Linq::JContainer::*)(int, ::Il2CppObject*, bool)>(&Newtonsoft::Json::Linq::JContainer::TryAddInternal)> {
  static const MethodInfo* get() {
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* content = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* skipParentCheck = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Linq::JContainer*), "TryAddInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{index, content, skipParentCheck});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Linq::JContainer::CreateFromContent
// Il2CppName: CreateFromContent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Newtonsoft::Json::Linq::JToken* (*)(::Il2CppObject*)>(&Newtonsoft::Json::Linq::JContainer::CreateFromContent)> {
  static const MethodInfo* get() {
    static auto* content = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Linq::JContainer*), "CreateFromContent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{content});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Linq::JContainer::RemoveAll
// Il2CppName: RemoveAll
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Newtonsoft::Json::Linq::JContainer::*)()>(&Newtonsoft::Json::Linq::JContainer::RemoveAll)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Linq::JContainer*), "RemoveAll", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Linq::JContainer::ReadTokenFrom
// Il2CppName: ReadTokenFrom
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Newtonsoft::Json::Linq::JContainer::*)(::Newtonsoft::Json::JsonReader*, ::Newtonsoft::Json::Linq::JsonLoadSettings*)>(&Newtonsoft::Json::Linq::JContainer::ReadTokenFrom)> {
  static const MethodInfo* get() {
    static auto* reader = &::il2cpp_utils::GetClassFromName("Newtonsoft.Json", "JsonReader")->byval_arg;
    static auto* options = &::il2cpp_utils::GetClassFromName("Newtonsoft.Json.Linq", "JsonLoadSettings")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Linq::JContainer*), "ReadTokenFrom", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{reader, options});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Linq::JContainer::ReadContentFrom
// Il2CppName: ReadContentFrom
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Newtonsoft::Json::Linq::JContainer::*)(::Newtonsoft::Json::JsonReader*, ::Newtonsoft::Json::Linq::JsonLoadSettings*)>(&Newtonsoft::Json::Linq::JContainer::ReadContentFrom)> {
  static const MethodInfo* get() {
    static auto* r = &::il2cpp_utils::GetClassFromName("Newtonsoft.Json", "JsonReader")->byval_arg;
    static auto* settings = &::il2cpp_utils::GetClassFromName("Newtonsoft.Json.Linq", "JsonLoadSettings")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Linq::JContainer*), "ReadContentFrom", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{r, settings});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Linq::JContainer::ReadProperty
// Il2CppName: ReadProperty
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Newtonsoft::Json::Linq::JProperty* (*)(::Newtonsoft::Json::JsonReader*, ::Newtonsoft::Json::Linq::JsonLoadSettings*, ::Newtonsoft::Json::IJsonLineInfo*, ::Newtonsoft::Json::Linq::JContainer*)>(&Newtonsoft::Json::Linq::JContainer::ReadProperty)> {
  static const MethodInfo* get() {
    static auto* r = &::il2cpp_utils::GetClassFromName("Newtonsoft.Json", "JsonReader")->byval_arg;
    static auto* settings = &::il2cpp_utils::GetClassFromName("Newtonsoft.Json.Linq", "JsonLoadSettings")->byval_arg;
    static auto* lineInfo = &::il2cpp_utils::GetClassFromName("Newtonsoft.Json", "IJsonLineInfo")->byval_arg;
    static auto* parent = &::il2cpp_utils::GetClassFromName("Newtonsoft.Json.Linq", "JContainer")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Linq::JContainer*), "ReadProperty", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{r, settings, lineInfo, parent});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Linq::JContainer::System_ComponentModel_ITypedList_GetListName
// Il2CppName: System.ComponentModel.ITypedList.GetListName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (Newtonsoft::Json::Linq::JContainer::*)(::ArrayW<::System::ComponentModel::PropertyDescriptor*>)>(&Newtonsoft::Json::Linq::JContainer::System_ComponentModel_ITypedList_GetListName)> {
  static const MethodInfo* get() {
    static auto* listAccessors = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System.ComponentModel", "PropertyDescriptor"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Linq::JContainer*), "System.ComponentModel.ITypedList.GetListName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{listAccessors});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Linq::JContainer::System_ComponentModel_ITypedList_GetItemProperties
// Il2CppName: System.ComponentModel.ITypedList.GetItemProperties
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::ComponentModel::PropertyDescriptorCollection* (Newtonsoft::Json::Linq::JContainer::*)(::ArrayW<::System::ComponentModel::PropertyDescriptor*>)>(&Newtonsoft::Json::Linq::JContainer::System_ComponentModel_ITypedList_GetItemProperties)> {
  static const MethodInfo* get() {
    static auto* listAccessors = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System.ComponentModel", "PropertyDescriptor"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Linq::JContainer*), "System.ComponentModel.ITypedList.GetItemProperties", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{listAccessors});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Linq::JContainer::System_Collections_Generic_IList$Newtonsoft_Json_Linq_JToken$_IndexOf
// Il2CppName: System.Collections.Generic.IList<Newtonsoft.Json.Linq.JToken>.IndexOf
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Newtonsoft::Json::Linq::JContainer::*)(::Newtonsoft::Json::Linq::JToken*)>(&Newtonsoft::Json::Linq::JContainer::System_Collections_Generic_IList$Newtonsoft_Json_Linq_JToken$_IndexOf)> {
  static const MethodInfo* get() {
    static auto* item = &::il2cpp_utils::GetClassFromName("Newtonsoft.Json.Linq", "JToken")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Linq::JContainer*), "System.Collections.Generic.IList<Newtonsoft.Json.Linq.JToken>.IndexOf", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{item});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Linq::JContainer::System_Collections_Generic_IList$Newtonsoft_Json_Linq_JToken$_Insert
// Il2CppName: System.Collections.Generic.IList<Newtonsoft.Json.Linq.JToken>.Insert
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Newtonsoft::Json::Linq::JContainer::*)(int, ::Newtonsoft::Json::Linq::JToken*)>(&Newtonsoft::Json::Linq::JContainer::System_Collections_Generic_IList$Newtonsoft_Json_Linq_JToken$_Insert)> {
  static const MethodInfo* get() {
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* item = &::il2cpp_utils::GetClassFromName("Newtonsoft.Json.Linq", "JToken")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Linq::JContainer*), "System.Collections.Generic.IList<Newtonsoft.Json.Linq.JToken>.Insert", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{index, item});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Linq::JContainer::System_Collections_Generic_IList$Newtonsoft_Json_Linq_JToken$_RemoveAt
// Il2CppName: System.Collections.Generic.IList<Newtonsoft.Json.Linq.JToken>.RemoveAt
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Newtonsoft::Json::Linq::JContainer::*)(int)>(&Newtonsoft::Json::Linq::JContainer::System_Collections_Generic_IList$Newtonsoft_Json_Linq_JToken$_RemoveAt)> {
  static const MethodInfo* get() {
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Linq::JContainer*), "System.Collections.Generic.IList<Newtonsoft.Json.Linq.JToken>.RemoveAt", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{index});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Linq::JContainer::System_Collections_Generic_IList$Newtonsoft_Json_Linq_JToken$_get_Item
// Il2CppName: System.Collections.Generic.IList<Newtonsoft.Json.Linq.JToken>.get_Item
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Newtonsoft::Json::Linq::JToken* (Newtonsoft::Json::Linq::JContainer::*)(int)>(&Newtonsoft::Json::Linq::JContainer::System_Collections_Generic_IList$Newtonsoft_Json_Linq_JToken$_get_Item)> {
  static const MethodInfo* get() {
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Linq::JContainer*), "System.Collections.Generic.IList<Newtonsoft.Json.Linq.JToken>.get_Item", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{index});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Linq::JContainer::System_Collections_Generic_IList$Newtonsoft_Json_Linq_JToken$_set_Item
// Il2CppName: System.Collections.Generic.IList<Newtonsoft.Json.Linq.JToken>.set_Item
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Newtonsoft::Json::Linq::JContainer::*)(int, ::Newtonsoft::Json::Linq::JToken*)>(&Newtonsoft::Json::Linq::JContainer::System_Collections_Generic_IList$Newtonsoft_Json_Linq_JToken$_set_Item)> {
  static const MethodInfo* get() {
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("Newtonsoft.Json.Linq", "JToken")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Linq::JContainer*), "System.Collections.Generic.IList<Newtonsoft.Json.Linq.JToken>.set_Item", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{index, value});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Linq::JContainer::System_Collections_Generic_ICollection$Newtonsoft_Json_Linq_JToken$_Add
// Il2CppName: System.Collections.Generic.ICollection<Newtonsoft.Json.Linq.JToken>.Add
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Newtonsoft::Json::Linq::JContainer::*)(::Newtonsoft::Json::Linq::JToken*)>(&Newtonsoft::Json::Linq::JContainer::System_Collections_Generic_ICollection$Newtonsoft_Json_Linq_JToken$_Add)> {
  static const MethodInfo* get() {
    static auto* item = &::il2cpp_utils::GetClassFromName("Newtonsoft.Json.Linq", "JToken")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Linq::JContainer*), "System.Collections.Generic.ICollection<Newtonsoft.Json.Linq.JToken>.Add", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{item});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Linq::JContainer::System_Collections_Generic_ICollection$Newtonsoft_Json_Linq_JToken$_Clear
// Il2CppName: System.Collections.Generic.ICollection<Newtonsoft.Json.Linq.JToken>.Clear
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Newtonsoft::Json::Linq::JContainer::*)()>(&Newtonsoft::Json::Linq::JContainer::System_Collections_Generic_ICollection$Newtonsoft_Json_Linq_JToken$_Clear)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Linq::JContainer*), "System.Collections.Generic.ICollection<Newtonsoft.Json.Linq.JToken>.Clear", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Linq::JContainer::System_Collections_Generic_ICollection$Newtonsoft_Json_Linq_JToken$_Contains
// Il2CppName: System.Collections.Generic.ICollection<Newtonsoft.Json.Linq.JToken>.Contains
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Newtonsoft::Json::Linq::JContainer::*)(::Newtonsoft::Json::Linq::JToken*)>(&Newtonsoft::Json::Linq::JContainer::System_Collections_Generic_ICollection$Newtonsoft_Json_Linq_JToken$_Contains)> {
  static const MethodInfo* get() {
    static auto* item = &::il2cpp_utils::GetClassFromName("Newtonsoft.Json.Linq", "JToken")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Linq::JContainer*), "System.Collections.Generic.ICollection<Newtonsoft.Json.Linq.JToken>.Contains", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{item});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Linq::JContainer::System_Collections_Generic_ICollection$Newtonsoft_Json_Linq_JToken$_CopyTo
// Il2CppName: System.Collections.Generic.ICollection<Newtonsoft.Json.Linq.JToken>.CopyTo
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Newtonsoft::Json::Linq::JContainer::*)(::ArrayW<::Newtonsoft::Json::Linq::JToken*>, int)>(&Newtonsoft::Json::Linq::JContainer::System_Collections_Generic_ICollection$Newtonsoft_Json_Linq_JToken$_CopyTo)> {
  static const MethodInfo* get() {
    static auto* array = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("Newtonsoft.Json.Linq", "JToken"), 1)->byval_arg;
    static auto* arrayIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Linq::JContainer*), "System.Collections.Generic.ICollection<Newtonsoft.Json.Linq.JToken>.CopyTo", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{array, arrayIndex});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Linq::JContainer::System_Collections_Generic_ICollection$Newtonsoft_Json_Linq_JToken$_get_IsReadOnly
// Il2CppName: System.Collections.Generic.ICollection<Newtonsoft.Json.Linq.JToken>.get_IsReadOnly
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Newtonsoft::Json::Linq::JContainer::*)()>(&Newtonsoft::Json::Linq::JContainer::System_Collections_Generic_ICollection$Newtonsoft_Json_Linq_JToken$_get_IsReadOnly)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Linq::JContainer*), "System.Collections.Generic.ICollection<Newtonsoft.Json.Linq.JToken>.get_IsReadOnly", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Linq::JContainer::System_Collections_Generic_ICollection$Newtonsoft_Json_Linq_JToken$_Remove
// Il2CppName: System.Collections.Generic.ICollection<Newtonsoft.Json.Linq.JToken>.Remove
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Newtonsoft::Json::Linq::JContainer::*)(::Newtonsoft::Json::Linq::JToken*)>(&Newtonsoft::Json::Linq::JContainer::System_Collections_Generic_ICollection$Newtonsoft_Json_Linq_JToken$_Remove)> {
  static const MethodInfo* get() {
    static auto* item = &::il2cpp_utils::GetClassFromName("Newtonsoft.Json.Linq", "JToken")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Linq::JContainer*), "System.Collections.Generic.ICollection<Newtonsoft.Json.Linq.JToken>.Remove", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{item});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Linq::JContainer::EnsureValue
// Il2CppName: EnsureValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Newtonsoft::Json::Linq::JToken* (Newtonsoft::Json::Linq::JContainer::*)(::Il2CppObject*)>(&Newtonsoft::Json::Linq::JContainer::EnsureValue)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Linq::JContainer*), "EnsureValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Linq::JContainer::System_Collections_IList_Add
// Il2CppName: System.Collections.IList.Add
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Newtonsoft::Json::Linq::JContainer::*)(::Il2CppObject*)>(&Newtonsoft::Json::Linq::JContainer::System_Collections_IList_Add)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Linq::JContainer*), "System.Collections.IList.Add", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Linq::JContainer::System_Collections_IList_Clear
// Il2CppName: System.Collections.IList.Clear
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Newtonsoft::Json::Linq::JContainer::*)()>(&Newtonsoft::Json::Linq::JContainer::System_Collections_IList_Clear)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Linq::JContainer*), "System.Collections.IList.Clear", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Linq::JContainer::System_Collections_IList_Contains
// Il2CppName: System.Collections.IList.Contains
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Newtonsoft::Json::Linq::JContainer::*)(::Il2CppObject*)>(&Newtonsoft::Json::Linq::JContainer::System_Collections_IList_Contains)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Linq::JContainer*), "System.Collections.IList.Contains", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Linq::JContainer::System_Collections_IList_IndexOf
// Il2CppName: System.Collections.IList.IndexOf
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Newtonsoft::Json::Linq::JContainer::*)(::Il2CppObject*)>(&Newtonsoft::Json::Linq::JContainer::System_Collections_IList_IndexOf)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Linq::JContainer*), "System.Collections.IList.IndexOf", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Linq::JContainer::System_Collections_IList_Insert
// Il2CppName: System.Collections.IList.Insert
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Newtonsoft::Json::Linq::JContainer::*)(int, ::Il2CppObject*)>(&Newtonsoft::Json::Linq::JContainer::System_Collections_IList_Insert)> {
  static const MethodInfo* get() {
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Linq::JContainer*), "System.Collections.IList.Insert", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{index, value});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Linq::JContainer::System_Collections_IList_get_IsFixedSize
// Il2CppName: System.Collections.IList.get_IsFixedSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Newtonsoft::Json::Linq::JContainer::*)()>(&Newtonsoft::Json::Linq::JContainer::System_Collections_IList_get_IsFixedSize)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Linq::JContainer*), "System.Collections.IList.get_IsFixedSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Linq::JContainer::System_Collections_IList_get_IsReadOnly
// Il2CppName: System.Collections.IList.get_IsReadOnly
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Newtonsoft::Json::Linq::JContainer::*)()>(&Newtonsoft::Json::Linq::JContainer::System_Collections_IList_get_IsReadOnly)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Linq::JContainer*), "System.Collections.IList.get_IsReadOnly", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Linq::JContainer::System_Collections_IList_Remove
// Il2CppName: System.Collections.IList.Remove
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Newtonsoft::Json::Linq::JContainer::*)(::Il2CppObject*)>(&Newtonsoft::Json::Linq::JContainer::System_Collections_IList_Remove)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Linq::JContainer*), "System.Collections.IList.Remove", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Linq::JContainer::System_Collections_IList_RemoveAt
// Il2CppName: System.Collections.IList.RemoveAt
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Newtonsoft::Json::Linq::JContainer::*)(int)>(&Newtonsoft::Json::Linq::JContainer::System_Collections_IList_RemoveAt)> {
  static const MethodInfo* get() {
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Linq::JContainer*), "System.Collections.IList.RemoveAt", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{index});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Linq::JContainer::System_Collections_IList_get_Item
// Il2CppName: System.Collections.IList.get_Item
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (Newtonsoft::Json::Linq::JContainer::*)(int)>(&Newtonsoft::Json::Linq::JContainer::System_Collections_IList_get_Item)> {
  static const MethodInfo* get() {
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Linq::JContainer*), "System.Collections.IList.get_Item", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{index});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Linq::JContainer::System_Collections_IList_set_Item
// Il2CppName: System.Collections.IList.set_Item
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Newtonsoft::Json::Linq::JContainer::*)(int, ::Il2CppObject*)>(&Newtonsoft::Json::Linq::JContainer::System_Collections_IList_set_Item)> {
  static const MethodInfo* get() {
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Linq::JContainer*), "System.Collections.IList.set_Item", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{index, value});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Linq::JContainer::System_Collections_ICollection_CopyTo
// Il2CppName: System.Collections.ICollection.CopyTo
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Newtonsoft::Json::Linq::JContainer::*)(::System::Array*, int)>(&Newtonsoft::Json::Linq::JContainer::System_Collections_ICollection_CopyTo)> {
  static const MethodInfo* get() {
    static auto* array = &::il2cpp_utils::GetClassFromName("System", "Array")->byval_arg;
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Linq::JContainer*), "System.Collections.ICollection.CopyTo", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{array, index});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Linq::JContainer::get_Count
// Il2CppName: get_Count
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Newtonsoft::Json::Linq::JContainer::*)()>(&Newtonsoft::Json::Linq::JContainer::get_Count)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Linq::JContainer*), "get_Count", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Linq::JContainer::System_Collections_ICollection_get_IsSynchronized
// Il2CppName: System.Collections.ICollection.get_IsSynchronized
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Newtonsoft::Json::Linq::JContainer::*)()>(&Newtonsoft::Json::Linq::JContainer::System_Collections_ICollection_get_IsSynchronized)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Linq::JContainer*), "System.Collections.ICollection.get_IsSynchronized", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Linq::JContainer::System_Collections_ICollection_get_SyncRoot
// Il2CppName: System.Collections.ICollection.get_SyncRoot
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (Newtonsoft::Json::Linq::JContainer::*)()>(&Newtonsoft::Json::Linq::JContainer::System_Collections_ICollection_get_SyncRoot)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Linq::JContainer*), "System.Collections.ICollection.get_SyncRoot", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Linq::JContainer::System_ComponentModel_IBindingList_AddIndex
// Il2CppName: System.ComponentModel.IBindingList.AddIndex
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Newtonsoft::Json::Linq::JContainer::*)(::System::ComponentModel::PropertyDescriptor*)>(&Newtonsoft::Json::Linq::JContainer::System_ComponentModel_IBindingList_AddIndex)> {
  static const MethodInfo* get() {
    static auto* property = &::il2cpp_utils::GetClassFromName("System.ComponentModel", "PropertyDescriptor")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Linq::JContainer*), "System.ComponentModel.IBindingList.AddIndex", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{property});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Linq::JContainer::System_ComponentModel_IBindingList_AddNew
// Il2CppName: System.ComponentModel.IBindingList.AddNew
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (Newtonsoft::Json::Linq::JContainer::*)()>(&Newtonsoft::Json::Linq::JContainer::System_ComponentModel_IBindingList_AddNew)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Linq::JContainer*), "System.ComponentModel.IBindingList.AddNew", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Linq::JContainer::System_ComponentModel_IBindingList_get_AllowEdit
// Il2CppName: System.ComponentModel.IBindingList.get_AllowEdit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Newtonsoft::Json::Linq::JContainer::*)()>(&Newtonsoft::Json::Linq::JContainer::System_ComponentModel_IBindingList_get_AllowEdit)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Linq::JContainer*), "System.ComponentModel.IBindingList.get_AllowEdit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Linq::JContainer::System_ComponentModel_IBindingList_get_AllowNew
// Il2CppName: System.ComponentModel.IBindingList.get_AllowNew
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Newtonsoft::Json::Linq::JContainer::*)()>(&Newtonsoft::Json::Linq::JContainer::System_ComponentModel_IBindingList_get_AllowNew)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Linq::JContainer*), "System.ComponentModel.IBindingList.get_AllowNew", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Linq::JContainer::System_ComponentModel_IBindingList_get_AllowRemove
// Il2CppName: System.ComponentModel.IBindingList.get_AllowRemove
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Newtonsoft::Json::Linq::JContainer::*)()>(&Newtonsoft::Json::Linq::JContainer::System_ComponentModel_IBindingList_get_AllowRemove)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Linq::JContainer*), "System.ComponentModel.IBindingList.get_AllowRemove", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Linq::JContainer::System_ComponentModel_IBindingList_ApplySort
// Il2CppName: System.ComponentModel.IBindingList.ApplySort
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Newtonsoft::Json::Linq::JContainer::*)(::System::ComponentModel::PropertyDescriptor*, ::System::ComponentModel::ListSortDirection)>(&Newtonsoft::Json::Linq::JContainer::System_ComponentModel_IBindingList_ApplySort)> {
  static const MethodInfo* get() {
    static auto* property = &::il2cpp_utils::GetClassFromName("System.ComponentModel", "PropertyDescriptor")->byval_arg;
    static auto* direction = &::il2cpp_utils::GetClassFromName("System.ComponentModel", "ListSortDirection")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Linq::JContainer*), "System.ComponentModel.IBindingList.ApplySort", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{property, direction});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Linq::JContainer::System_ComponentModel_IBindingList_Find
// Il2CppName: System.ComponentModel.IBindingList.Find
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Newtonsoft::Json::Linq::JContainer::*)(::System::ComponentModel::PropertyDescriptor*, ::Il2CppObject*)>(&Newtonsoft::Json::Linq::JContainer::System_ComponentModel_IBindingList_Find)> {
  static const MethodInfo* get() {
    static auto* property = &::il2cpp_utils::GetClassFromName("System.ComponentModel", "PropertyDescriptor")->byval_arg;
    static auto* key = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Linq::JContainer*), "System.ComponentModel.IBindingList.Find", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{property, key});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Linq::JContainer::System_ComponentModel_IBindingList_get_IsSorted
// Il2CppName: System.ComponentModel.IBindingList.get_IsSorted
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Newtonsoft::Json::Linq::JContainer::*)()>(&Newtonsoft::Json::Linq::JContainer::System_ComponentModel_IBindingList_get_IsSorted)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Linq::JContainer*), "System.ComponentModel.IBindingList.get_IsSorted", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Linq::JContainer::System_ComponentModel_IBindingList_RemoveIndex
// Il2CppName: System.ComponentModel.IBindingList.RemoveIndex
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Newtonsoft::Json::Linq::JContainer::*)(::System::ComponentModel::PropertyDescriptor*)>(&Newtonsoft::Json::Linq::JContainer::System_ComponentModel_IBindingList_RemoveIndex)> {
  static const MethodInfo* get() {
    static auto* property = &::il2cpp_utils::GetClassFromName("System.ComponentModel", "PropertyDescriptor")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Linq::JContainer*), "System.ComponentModel.IBindingList.RemoveIndex", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{property});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Linq::JContainer::System_ComponentModel_IBindingList_RemoveSort
// Il2CppName: System.ComponentModel.IBindingList.RemoveSort
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Newtonsoft::Json::Linq::JContainer::*)()>(&Newtonsoft::Json::Linq::JContainer::System_ComponentModel_IBindingList_RemoveSort)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Linq::JContainer*), "System.ComponentModel.IBindingList.RemoveSort", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Linq::JContainer::System_ComponentModel_IBindingList_get_SortDirection
// Il2CppName: System.ComponentModel.IBindingList.get_SortDirection
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::ComponentModel::ListSortDirection (Newtonsoft::Json::Linq::JContainer::*)()>(&Newtonsoft::Json::Linq::JContainer::System_ComponentModel_IBindingList_get_SortDirection)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Linq::JContainer*), "System.ComponentModel.IBindingList.get_SortDirection", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Linq::JContainer::System_ComponentModel_IBindingList_get_SortProperty
// Il2CppName: System.ComponentModel.IBindingList.get_SortProperty
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::ComponentModel::PropertyDescriptor* (Newtonsoft::Json::Linq::JContainer::*)()>(&Newtonsoft::Json::Linq::JContainer::System_ComponentModel_IBindingList_get_SortProperty)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Linq::JContainer*), "System.ComponentModel.IBindingList.get_SortProperty", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Linq::JContainer::System_ComponentModel_IBindingList_get_SupportsChangeNotification
// Il2CppName: System.ComponentModel.IBindingList.get_SupportsChangeNotification
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Newtonsoft::Json::Linq::JContainer::*)()>(&Newtonsoft::Json::Linq::JContainer::System_ComponentModel_IBindingList_get_SupportsChangeNotification)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Linq::JContainer*), "System.ComponentModel.IBindingList.get_SupportsChangeNotification", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Linq::JContainer::System_ComponentModel_IBindingList_get_SupportsSearching
// Il2CppName: System.ComponentModel.IBindingList.get_SupportsSearching
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Newtonsoft::Json::Linq::JContainer::*)()>(&Newtonsoft::Json::Linq::JContainer::System_ComponentModel_IBindingList_get_SupportsSearching)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Linq::JContainer*), "System.ComponentModel.IBindingList.get_SupportsSearching", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Linq::JContainer::System_ComponentModel_IBindingList_get_SupportsSorting
// Il2CppName: System.ComponentModel.IBindingList.get_SupportsSorting
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Newtonsoft::Json::Linq::JContainer::*)()>(&Newtonsoft::Json::Linq::JContainer::System_ComponentModel_IBindingList_get_SupportsSorting)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Linq::JContainer*), "System.ComponentModel.IBindingList.get_SupportsSorting", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Linq::JContainer::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: Newtonsoft::Json::Linq::JContainer::get_HasValues
// Il2CppName: get_HasValues
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Newtonsoft::Json::Linq::JContainer::*)()>(&Newtonsoft::Json::Linq::JContainer::get_HasValues)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Linq::JContainer*), "get_HasValues", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Linq::JContainer::get_First
// Il2CppName: get_First
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Newtonsoft::Json::Linq::JToken* (Newtonsoft::Json::Linq::JContainer::*)()>(&Newtonsoft::Json::Linq::JContainer::get_First)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Linq::JContainer*), "get_First", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Linq::JContainer::get_Last
// Il2CppName: get_Last
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Newtonsoft::Json::Linq::JToken* (Newtonsoft::Json::Linq::JContainer::*)()>(&Newtonsoft::Json::Linq::JContainer::get_Last)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Linq::JContainer*), "get_Last", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Linq::JContainer::Children
// Il2CppName: Children
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Newtonsoft::Json::Linq::JEnumerable_1<::Newtonsoft::Json::Linq::JToken*> (Newtonsoft::Json::Linq::JContainer::*)()>(&Newtonsoft::Json::Linq::JContainer::Children)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Linq::JContainer*), "Children", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
