// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Mono.X509PalImpl
#include "Mono/X509PalImpl.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Security::Cryptography::X509Certificates
namespace System::Security::Cryptography::X509Certificates {
  // Forward declaring type: X509CertificateImpl
  class X509CertificateImpl;
  // Forward declaring type: X509Certificate2Impl
  class X509Certificate2Impl;
  // Forward declaring type: X509KeyStorageFlags
  struct X509KeyStorageFlags;
  // Forward declaring type: X509Certificate
  class X509Certificate;
}
// Forward declaring namespace: Microsoft::Win32::SafeHandles
namespace Microsoft::Win32::SafeHandles {
  // Forward declaring type: SafePasswordHandle
  class SafePasswordHandle;
}
// Completed forward declares
// Type namespace: Mono
namespace Mono {
  // Forward declaring type: X509PalImplMono
  class X509PalImplMono;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Mono::X509PalImplMono);
DEFINE_IL2CPP_ARG_TYPE(::Mono::X509PalImplMono*, "Mono", "X509PalImplMono");
// Type namespace: Mono
namespace Mono {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: Mono.X509PalImplMono
  // [TokenAttribute] Offset: FFFFFFFF
  class X509PalImplMono : public ::Mono::X509PalImpl {
    public:
    // public override System.Security.Cryptography.X509Certificates.X509CertificateImpl Import(System.Byte[] data)
    // Offset: 0x4BF0360
    // Implemented from: Mono.X509PalImpl
    // Base method: System.Security.Cryptography.X509Certificates.X509CertificateImpl X509PalImpl::Import(System.Byte[] data)
    ::System::Security::Cryptography::X509Certificates::X509CertificateImpl* Import(::ArrayW<uint8_t> data);
    // public override System.Security.Cryptography.X509Certificates.X509Certificate2Impl Import(System.Byte[] data, Microsoft.Win32.SafeHandles.SafePasswordHandle password, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags)
    // Offset: 0x4BF0364
    // Implemented from: Mono.X509PalImpl
    // Base method: System.Security.Cryptography.X509Certificates.X509Certificate2Impl X509PalImpl::Import(System.Byte[] data, Microsoft.Win32.SafeHandles.SafePasswordHandle password, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags)
    ::System::Security::Cryptography::X509Certificates::X509Certificate2Impl* Import(::ArrayW<uint8_t> data, ::Microsoft::Win32::SafeHandles::SafePasswordHandle* password, ::System::Security::Cryptography::X509Certificates::X509KeyStorageFlags keyStorageFlags);
    // public override System.Security.Cryptography.X509Certificates.X509Certificate2Impl Import(System.Security.Cryptography.X509Certificates.X509Certificate cert)
    // Offset: 0x4BF0368
    // Implemented from: Mono.X509PalImpl
    // Base method: System.Security.Cryptography.X509Certificates.X509Certificate2Impl X509PalImpl::Import(System.Security.Cryptography.X509Certificates.X509Certificate cert)
    ::System::Security::Cryptography::X509Certificates::X509Certificate2Impl* Import(::System::Security::Cryptography::X509Certificates::X509Certificate* cert);
    // public System.Void .ctor()
    // Offset: 0x4BEF918
    // Implemented from: Mono.X509PalImpl
    // Base method: System.Void X509PalImpl::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static X509PalImplMono* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Mono::X509PalImplMono::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<X509PalImplMono*, creationType>()));
    }
  }; // Mono.X509PalImplMono
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Mono::X509PalImplMono::Import
// Il2CppName: Import
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Security::Cryptography::X509Certificates::X509CertificateImpl* (Mono::X509PalImplMono::*)(::ArrayW<uint8_t>)>(&Mono::X509PalImplMono::Import)> {
  static const MethodInfo* get() {
    static auto* data = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Mono::X509PalImplMono*), "Import", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{data});
  }
};
// Writing MetadataGetter for method: Mono::X509PalImplMono::Import
// Il2CppName: Import
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Security::Cryptography::X509Certificates::X509Certificate2Impl* (Mono::X509PalImplMono::*)(::ArrayW<uint8_t>, ::Microsoft::Win32::SafeHandles::SafePasswordHandle*, ::System::Security::Cryptography::X509Certificates::X509KeyStorageFlags)>(&Mono::X509PalImplMono::Import)> {
  static const MethodInfo* get() {
    static auto* data = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    static auto* password = &::il2cpp_utils::GetClassFromName("Microsoft.Win32.SafeHandles", "SafePasswordHandle")->byval_arg;
    static auto* keyStorageFlags = &::il2cpp_utils::GetClassFromName("System.Security.Cryptography.X509Certificates", "X509KeyStorageFlags")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Mono::X509PalImplMono*), "Import", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{data, password, keyStorageFlags});
  }
};
// Writing MetadataGetter for method: Mono::X509PalImplMono::Import
// Il2CppName: Import
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Security::Cryptography::X509Certificates::X509Certificate2Impl* (Mono::X509PalImplMono::*)(::System::Security::Cryptography::X509Certificates::X509Certificate*)>(&Mono::X509PalImplMono::Import)> {
  static const MethodInfo* get() {
    static auto* cert = &::il2cpp_utils::GetClassFromName("System.Security.Cryptography.X509Certificates", "X509Certificate")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Mono::X509PalImplMono*), "Import", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{cert});
  }
};
// Writing MetadataGetter for method: Mono::X509PalImplMono::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
