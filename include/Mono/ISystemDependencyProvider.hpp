// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/byref.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Mono
namespace Mono {
  // Forward declaring type: ISystemCertificateProvider
  class ISystemCertificateProvider;
}
// Completed forward declares
// Type namespace: Mono
namespace Mono {
  // Forward declaring type: ISystemDependencyProvider
  class ISystemDependencyProvider;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Mono::ISystemDependencyProvider);
DEFINE_IL2CPP_ARG_TYPE(::Mono::ISystemDependencyProvider*, "Mono", "ISystemDependencyProvider");
// Type namespace: Mono
namespace Mono {
  // Size: 0x0
  #pragma pack(push, 1)
  // Autogenerated type: Mono.ISystemDependencyProvider
  // [TokenAttribute] Offset: FFFFFFFF
  class ISystemDependencyProvider {
    public:
    // public Mono.ISystemCertificateProvider get_CertificateProvider()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::Mono::ISystemCertificateProvider* get_CertificateProvider();
  }; // Mono.ISystemDependencyProvider
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Mono::ISystemDependencyProvider::get_CertificateProvider
// Il2CppName: get_CertificateProvider
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Mono::ISystemCertificateProvider* (Mono::ISystemDependencyProvider::*)()>(&Mono::ISystemDependencyProvider::get_CertificateProvider)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mono::ISystemDependencyProvider*), "get_CertificateProvider", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
