// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Mono.Net.Security.MobileAuthenticatedStream
#include "Mono/Net/Security/MobileAuthenticatedStream.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::IO
namespace System::IO {
  // Skipping declaration: Stream because it is already included!
}
// Forward declaring namespace: System::Net::Security
namespace System::Net::Security {
  // Forward declaring type: SslStream
  class SslStream;
}
// Forward declaring namespace: Mono::Security::Interface
namespace Mono::Security::Interface {
  // Forward declaring type: MonoTlsSettings
  class MonoTlsSettings;
}
// Forward declaring namespace: Mono::Net::Security
namespace Mono::Net::Security {
  // Forward declaring type: MobileTlsProvider
  class MobileTlsProvider;
  // Forward declaring type: MobileTlsContext
  class MobileTlsContext;
  // Forward declaring type: MonoSslAuthenticationOptions
  class MonoSslAuthenticationOptions;
}
// Completed forward declares
// Type namespace: Mono.Unity
namespace Mono::Unity {
  // Forward declaring type: UnityTlsStream
  class UnityTlsStream;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Mono::Unity::UnityTlsStream);
DEFINE_IL2CPP_ARG_TYPE(::Mono::Unity::UnityTlsStream*, "Mono.Unity", "UnityTlsStream");
// Type namespace: Mono.Unity
namespace Mono::Unity {
  // Size: 0xAC
  #pragma pack(push, 1)
  // Autogenerated type: Mono.Unity.UnityTlsStream
  // [TokenAttribute] Offset: FFFFFFFF
  class UnityTlsStream : public ::Mono::Net::Security::MobileAuthenticatedStream {
    public:
    // public System.Void .ctor(System.IO.Stream innerStream, System.Boolean leaveInnerStreamOpen, System.Net.Security.SslStream owner, Mono.Security.Interface.MonoTlsSettings settings, Mono.Net.Security.MobileTlsProvider provider)
    // Offset: 0x4BF5E14
    // Implemented from: Mono.Net.Security.MobileAuthenticatedStream
    // Base method: System.Void MobileAuthenticatedStream::.ctor(System.IO.Stream innerStream, System.Boolean leaveInnerStreamOpen, System.Net.Security.SslStream owner, Mono.Security.Interface.MonoTlsSettings settings, Mono.Net.Security.MobileTlsProvider provider)
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static UnityTlsStream* New_ctor(::System::IO::Stream* innerStream, bool leaveInnerStreamOpen, ::System::Net::Security::SslStream* owner, ::Mono::Security::Interface::MonoTlsSettings* settings, ::Mono::Net::Security::MobileTlsProvider* provider) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTlsStream::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<UnityTlsStream*, creationType>(innerStream, leaveInnerStreamOpen, owner, settings, provider)));
    }
    // protected override Mono.Net.Security.MobileTlsContext CreateContext(Mono.Net.Security.MonoSslAuthenticationOptions options)
    // Offset: 0x4BF698C
    // Implemented from: Mono.Net.Security.MobileAuthenticatedStream
    // Base method: Mono.Net.Security.MobileTlsContext MobileAuthenticatedStream::CreateContext(Mono.Net.Security.MonoSslAuthenticationOptions options)
    ::Mono::Net::Security::MobileTlsContext* CreateContext(::Mono::Net::Security::MonoSslAuthenticationOptions* options);
  }; // Mono.Unity.UnityTlsStream
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Mono::Unity::UnityTlsStream::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: Mono::Unity::UnityTlsStream::CreateContext
// Il2CppName: CreateContext
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Mono::Net::Security::MobileTlsContext* (Mono::Unity::UnityTlsStream::*)(::Mono::Net::Security::MonoSslAuthenticationOptions*)>(&Mono::Unity::UnityTlsStream::CreateContext)> {
  static const MethodInfo* get() {
    static auto* options = &::il2cpp_utils::GetClassFromName("Mono.Net.Security", "MonoSslAuthenticationOptions")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Mono::Unity::UnityTlsStream*), "CreateContext", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{options});
  }
};
