// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Cysharp.Text.ZString
#include "Cysharp/Text/ZString.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Buffers
namespace System::Buffers {
  // Forward declaring type: SpanAction`2<T, TArg>
  template<typename T, typename TArg>
  class SpanAction_2;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Span`1<T>
  template<typename T>
  struct Span_1;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Cysharp::Text::ZString::$$c);
DEFINE_IL2CPP_ARG_TYPE(::Cysharp::Text::ZString::$$c*, "Cysharp.Text", "ZString/<>c");
// Type namespace: Cysharp.Text
namespace Cysharp::Text {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: Cysharp.Text.ZString/<>c
  // [TokenAttribute] Offset: FFFFFFFF
  // [CompilerGeneratedAttribute] Offset: FFFFFFFF
  class ZString::$$c : public ::Il2CppObject {
    public:
    // Get static field: static public readonly Cysharp.Text.ZString/<>c <>9
    static ::Cysharp::Text::ZString::$$c* _get_$$9();
    // Set static field: static public readonly Cysharp.Text.ZString/<>c <>9
    static void _set_$$9(::Cysharp::Text::ZString::$$c* value);
    // Get static field: static public System.Buffers.SpanAction`2<System.Char,System.Int32> <>9__53_0
    static ::System::Buffers::SpanAction_2<::Il2CppChar, int>* _get_$$9__53_0();
    // Set static field: static public System.Buffers.SpanAction`2<System.Char,System.Int32> <>9__53_0
    static void _set_$$9__53_0(::System::Buffers::SpanAction_2<::Il2CppChar, int>* value);
    // static private System.Void .cctor()
    // Offset: 0x57711A0
    static void _cctor();
    // public System.Void .ctor()
    // Offset: 0x5771208
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static ZString::$$c* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::ZString::$$c::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<ZString::$$c*, creationType>()));
    }
    // System.Void <JoinInternal>b__53_0(System.Span`1<System.Char> _, System.Int32 _)
    // Offset: 0x5771210
    void $JoinInternal$b__53_0(::System::Span_1<::Il2CppChar> _, int _);
  }; // Cysharp.Text.ZString/<>c
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Cysharp::Text::ZString::$$c::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&Cysharp::Text::ZString::$$c::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Cysharp::Text::ZString::$$c*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Cysharp::Text::ZString::$$c::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: Cysharp::Text::ZString::$$c::$JoinInternal$b__53_0
// Il2CppName: <JoinInternal>b__53_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Cysharp::Text::ZString::$$c::*)(::System::Span_1<::Il2CppChar>, int)>(&Cysharp::Text::ZString::$$c::$JoinInternal$b__53_0)> {
  static const MethodInfo* get() {
    static auto* _ = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Span`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Char")})->byval_arg;
    static auto* _ = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Cysharp::Text::ZString::$$c*), "<JoinInternal>b__53_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{_, _});
  }
};
