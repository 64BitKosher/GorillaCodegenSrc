// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Cysharp.Text.FormatParser
#include "Cysharp/Text/FormatParser.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Including type: System.ReadOnlySpan`1
#include "System/ReadOnlySpan_1.hpp"
// Completed includes
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::Cysharp::Text::FormatParser::ParseResult, "Cysharp.Text", "FormatParser/ParseResult");
// Type namespace: Cysharp.Text
namespace Cysharp::Text {
  // WARNING Size may be invalid!
  // WARNING Layout: Sequential may not be correctly taken into account!
  // Autogenerated type: Cysharp.Text.FormatParser/ParseResult
  // [TokenAttribute] Offset: FFFFFFFF
  // [IsByRefLikeAttribute] Offset: FFFFFFFF
  // [ObsoleteAttribute] Offset: FFFFFFFF
  // [IsReadOnlyAttribute] Offset: FFFFFFFF
  struct FormatParser::ParseResult/*, public ::System::ValueType*/ {
    public:
    public:
    // public readonly System.Int32 Index
    // Size: 0x4
    // Offset: 0x0
    int Index;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // public readonly System.ReadOnlySpan`1<System.Char> FormatString
    // Size: 0xFFFFFFFF
    // Offset: 0x8
    ::System::ReadOnlySpan_1<::Il2CppChar> FormatString;
    // public readonly System.Int32 LastIndex
    // Size: 0x4
    // Offset: 0x18
    int LastIndex;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // public readonly System.Int32 Alignment
    // Size: 0x4
    // Offset: 0x1C
    int Alignment;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Creating value type constructor for type: ParseResult
    constexpr ParseResult(int Index_ = {}, ::System::ReadOnlySpan_1<::Il2CppChar> FormatString_ = {}, int LastIndex_ = {}, int Alignment_ = {}) noexcept : Index{Index_}, FormatString{FormatString_}, LastIndex{LastIndex_}, Alignment{Alignment_} {}
    // Creating interface conversion operator: operator ::System::ValueType
    operator ::System::ValueType() noexcept {
      return *reinterpret_cast<::System::ValueType*>(this);
    }
    // Get instance field reference: public readonly System.Int32 Index
    [[deprecated("Use field access instead!")]] int& dyn_Index();
    // Get instance field reference: public readonly System.ReadOnlySpan`1<System.Char> FormatString
    [[deprecated("Use field access instead!")]] ::System::ReadOnlySpan_1<::Il2CppChar>& dyn_FormatString();
    // Get instance field reference: public readonly System.Int32 LastIndex
    [[deprecated("Use field access instead!")]] int& dyn_LastIndex();
    // Get instance field reference: public readonly System.Int32 Alignment
    [[deprecated("Use field access instead!")]] int& dyn_Alignment();
    // public System.Void .ctor(System.Int32 index, System.ReadOnlySpan`1<System.Char> formatString, System.Int32 lastIndex, System.Int32 alignment)
    // Offset: 0x57608E8
    // ABORTED: conflicts with another method.  ParseResult(int index, ::System::ReadOnlySpan_1<::Il2CppChar> formatString, int lastIndex, int alignment);
  }; // Cysharp.Text.FormatParser/ParseResult
  // WARNING Not writing size check since size may be invalid!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Cysharp::Text::FormatParser::ParseResult::ParseResult
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
