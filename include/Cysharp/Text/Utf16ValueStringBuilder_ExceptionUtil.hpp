// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Cysharp.Text.Utf16ValueStringBuilder
#include "Cysharp/Text/Utf16ValueStringBuilder.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Cysharp::Text::Utf16ValueStringBuilder::ExceptionUtil);
DEFINE_IL2CPP_ARG_TYPE(::Cysharp::Text::Utf16ValueStringBuilder::ExceptionUtil*, "Cysharp.Text", "Utf16ValueStringBuilder/ExceptionUtil");
// Type namespace: Cysharp.Text
namespace Cysharp::Text {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: Cysharp.Text.Utf16ValueStringBuilder/ExceptionUtil
  // [TokenAttribute] Offset: FFFFFFFF
  // [NullableContextAttribute] Offset: FFFFFFFF
  class Utf16ValueStringBuilder::ExceptionUtil : public ::Il2CppObject {
    public:
    // static public System.Void ThrowArgumentOutOfRangeException(System.String paramName)
    // Offset: 0x5767AE8
    static void ThrowArgumentOutOfRangeException(::StringW paramName);
  }; // Cysharp.Text.Utf16ValueStringBuilder/ExceptionUtil
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Cysharp::Text::Utf16ValueStringBuilder::ExceptionUtil::ThrowArgumentOutOfRangeException
// Il2CppName: ThrowArgumentOutOfRangeException
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::StringW)>(&Cysharp::Text::Utf16ValueStringBuilder::ExceptionUtil::ThrowArgumentOutOfRangeException)> {
  static const MethodInfo* get() {
    static auto* paramName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Cysharp::Text::Utf16ValueStringBuilder::ExceptionUtil*), "ThrowArgumentOutOfRangeException", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{paramName});
  }
};
