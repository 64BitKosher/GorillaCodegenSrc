// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Type namespace: Cysharp.Text
namespace Cysharp::Text {
  // Forward declaring type: ExceptionUtil
  class ExceptionUtil;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Cysharp::Text::ExceptionUtil);
DEFINE_IL2CPP_ARG_TYPE(::Cysharp::Text::ExceptionUtil*, "Cysharp.Text", "ExceptionUtil");
// Type namespace: Cysharp.Text
namespace Cysharp::Text {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: Cysharp.Text.ExceptionUtil
  // [TokenAttribute] Offset: FFFFFFFF
  class ExceptionUtil : public ::Il2CppObject {
    public:
    // static System.Void ThrowArgumentException(System.String paramName)
    // Offset: 0x575F73C
    static void ThrowArgumentException(::StringW paramName);
    // static System.Void ThrowFormatException()
    // Offset: 0x575F794
    static void ThrowFormatException();
    // static System.Void ThrowFormatError()
    // Offset: 0x575F7E0
    static void ThrowFormatError();
  }; // Cysharp.Text.ExceptionUtil
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Cysharp::Text::ExceptionUtil::ThrowArgumentException
// Il2CppName: ThrowArgumentException
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::StringW)>(&Cysharp::Text::ExceptionUtil::ThrowArgumentException)> {
  static const MethodInfo* get() {
    static auto* paramName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Cysharp::Text::ExceptionUtil*), "ThrowArgumentException", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{paramName});
  }
};
// Writing MetadataGetter for method: Cysharp::Text::ExceptionUtil::ThrowFormatException
// Il2CppName: ThrowFormatException
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&Cysharp::Text::ExceptionUtil::ThrowFormatException)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Cysharp::Text::ExceptionUtil*), "ThrowFormatException", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Cysharp::Text::ExceptionUtil::ThrowFormatError
// Il2CppName: ThrowFormatError
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&Cysharp::Text::ExceptionUtil::ThrowFormatError)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Cysharp::Text::ExceptionUtil*), "ThrowFormatError", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
