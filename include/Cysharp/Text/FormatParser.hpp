// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Int32
#include "System/Int32.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Cysharp::Text
namespace Cysharp::Text {
  // Forward declaring type: ParserScanResult
  struct ParserScanResult;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: ReadOnlySpan`1<T>
  template<typename T>
  struct ReadOnlySpan_1;
}
// Completed forward declares
// Type namespace: Cysharp.Text
namespace Cysharp::Text {
  // Forward declaring type: FormatParser
  class FormatParser;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Cysharp::Text::FormatParser);
DEFINE_IL2CPP_ARG_TYPE(::Cysharp::Text::FormatParser*, "Cysharp.Text", "FormatParser");
// Type namespace: Cysharp.Text
namespace Cysharp::Text {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: Cysharp.Text.FormatParser
  // [TokenAttribute] Offset: FFFFFFFF
  class FormatParser : public ::Il2CppObject {
    public:
    // Nested type: ::Cysharp::Text::FormatParser::ParseResult
    struct ParseResult;
    // static field const value: static System.Int32 ArgLengthLimit
    static constexpr const int ArgLengthLimit = 16;
    // Get static field: static System.Int32 ArgLengthLimit
    static int _get_ArgLengthLimit();
    // Set static field: static System.Int32 ArgLengthLimit
    static void _set_ArgLengthLimit(int value);
    // static field const value: static System.Int32 WidthLimit
    static constexpr const int WidthLimit = 1000;
    // Get static field: static System.Int32 WidthLimit
    static int _get_WidthLimit();
    // Set static field: static System.Int32 WidthLimit
    static void _set_WidthLimit(int value);
    // static public Cysharp.Text.ParserScanResult ScanFormatString(System.String format, ref System.Int32 i)
    // Offset: 0x5760460
    static ::Cysharp::Text::ParserScanResult ScanFormatString(::StringW format, ByRef<int> i);
    // static public Cysharp.Text.ParserScanResult ScanFormatString(System.ReadOnlySpan`1<System.Char> format, ref System.Int32 i)
    // Offset: 0x576052C
    static ::Cysharp::Text::ParserScanResult ScanFormatString(::System::ReadOnlySpan_1<::Il2CppChar> format, ByRef<int> i);
    // static private System.Boolean IsDigit(System.Char c)
    // Offset: 0x5760600
    static bool IsDigit(::Il2CppChar c);
    // static public Cysharp.Text.FormatParser/ParseResult Parse(System.ReadOnlySpan`1<System.Char> format, System.Int32 i)
    // Offset: 0x5760614
    static ::Cysharp::Text::FormatParser::ParseResult Parse(::System::ReadOnlySpan_1<::Il2CppChar> format, int i);
    // static public Cysharp.Text.FormatParser/ParseResult Parse(System.String format, System.Int32 i)
    // Offset: 0x57608F8
    static ::Cysharp::Text::FormatParser::ParseResult Parse(::StringW format, int i);
  }; // Cysharp.Text.FormatParser
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Cysharp::Text::FormatParser::ScanFormatString
// Il2CppName: ScanFormatString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Cysharp::Text::ParserScanResult (*)(::StringW, ByRef<int>)>(&Cysharp::Text::FormatParser::ScanFormatString)> {
  static const MethodInfo* get() {
    static auto* format = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* i = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(Cysharp::Text::FormatParser*), "ScanFormatString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{format, i});
  }
};
// Writing MetadataGetter for method: Cysharp::Text::FormatParser::ScanFormatString
// Il2CppName: ScanFormatString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Cysharp::Text::ParserScanResult (*)(::System::ReadOnlySpan_1<::Il2CppChar>, ByRef<int>)>(&Cysharp::Text::FormatParser::ScanFormatString)> {
  static const MethodInfo* get() {
    static auto* format = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "ReadOnlySpan`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Char")})->byval_arg;
    static auto* i = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(Cysharp::Text::FormatParser*), "ScanFormatString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{format, i});
  }
};
// Writing MetadataGetter for method: Cysharp::Text::FormatParser::IsDigit
// Il2CppName: IsDigit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::Il2CppChar)>(&Cysharp::Text::FormatParser::IsDigit)> {
  static const MethodInfo* get() {
    static auto* c = &::il2cpp_utils::GetClassFromName("System", "Char")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Cysharp::Text::FormatParser*), "IsDigit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{c});
  }
};
// Writing MetadataGetter for method: Cysharp::Text::FormatParser::Parse
// Il2CppName: Parse
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Cysharp::Text::FormatParser::ParseResult (*)(::System::ReadOnlySpan_1<::Il2CppChar>, int)>(&Cysharp::Text::FormatParser::Parse)> {
  static const MethodInfo* get() {
    static auto* format = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "ReadOnlySpan`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Char")})->byval_arg;
    static auto* i = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Cysharp::Text::FormatParser*), "Parse", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{format, i});
  }
};
// Writing MetadataGetter for method: Cysharp::Text::FormatParser::Parse
// Il2CppName: Parse
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Cysharp::Text::FormatParser::ParseResult (*)(::StringW, int)>(&Cysharp::Text::FormatParser::Parse)> {
  static const MethodInfo* get() {
    static auto* format = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* i = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Cysharp::Text::FormatParser*), "Parse", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{format, i});
  }
};
