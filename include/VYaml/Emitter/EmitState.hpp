// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Enum
#include "System/Enum.hpp"
// Completed includes
// Type namespace: VYaml.Emitter
namespace VYaml::Emitter {
  // Forward declaring type: EmitState
  struct EmitState;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::VYaml::Emitter::EmitState, "VYaml.Emitter", "EmitState");
// Type namespace: VYaml.Emitter
namespace VYaml::Emitter {
  // Size: 0x4
  #pragma pack(push, 1)
  // Autogenerated type: VYaml.Emitter.EmitState
  // [TokenAttribute] Offset: FFFFFFFF
  struct EmitState/*, public ::System::Enum*/ {
    public:
    public:
    // public System.Int32 value__
    // Size: 0x4
    // Offset: 0x0
    int value;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Creating value type constructor for type: EmitState
    constexpr EmitState(int value_ = {}) noexcept : value{value_} {}
    // Creating interface conversion operator: operator ::System::Enum
    operator ::System::Enum() noexcept {
      return *reinterpret_cast<::System::Enum*>(this);
    }
    // Creating conversion operator: operator int
    constexpr operator int() const noexcept {
      return value;
    }
    // static field const value: static public VYaml.Emitter.EmitState None
    static constexpr const int None = 0;
    // Get static field: static public VYaml.Emitter.EmitState None
    static ::VYaml::Emitter::EmitState _get_None();
    // Set static field: static public VYaml.Emitter.EmitState None
    static void _set_None(::VYaml::Emitter::EmitState value);
    // static field const value: static public VYaml.Emitter.EmitState BlockSequenceEntry
    static constexpr const int BlockSequenceEntry = 1;
    // Get static field: static public VYaml.Emitter.EmitState BlockSequenceEntry
    static ::VYaml::Emitter::EmitState _get_BlockSequenceEntry();
    // Set static field: static public VYaml.Emitter.EmitState BlockSequenceEntry
    static void _set_BlockSequenceEntry(::VYaml::Emitter::EmitState value);
    // static field const value: static public VYaml.Emitter.EmitState BlockMappingKey
    static constexpr const int BlockMappingKey = 2;
    // Get static field: static public VYaml.Emitter.EmitState BlockMappingKey
    static ::VYaml::Emitter::EmitState _get_BlockMappingKey();
    // Set static field: static public VYaml.Emitter.EmitState BlockMappingKey
    static void _set_BlockMappingKey(::VYaml::Emitter::EmitState value);
    // static field const value: static public VYaml.Emitter.EmitState BlockMappingValue
    static constexpr const int BlockMappingValue = 3;
    // Get static field: static public VYaml.Emitter.EmitState BlockMappingValue
    static ::VYaml::Emitter::EmitState _get_BlockMappingValue();
    // Set static field: static public VYaml.Emitter.EmitState BlockMappingValue
    static void _set_BlockMappingValue(::VYaml::Emitter::EmitState value);
    // static field const value: static public VYaml.Emitter.EmitState FlowSequenceEntry
    static constexpr const int FlowSequenceEntry = 4;
    // Get static field: static public VYaml.Emitter.EmitState FlowSequenceEntry
    static ::VYaml::Emitter::EmitState _get_FlowSequenceEntry();
    // Set static field: static public VYaml.Emitter.EmitState FlowSequenceEntry
    static void _set_FlowSequenceEntry(::VYaml::Emitter::EmitState value);
    // static field const value: static public VYaml.Emitter.EmitState FlowMappingKey
    static constexpr const int FlowMappingKey = 5;
    // Get static field: static public VYaml.Emitter.EmitState FlowMappingKey
    static ::VYaml::Emitter::EmitState _get_FlowMappingKey();
    // Set static field: static public VYaml.Emitter.EmitState FlowMappingKey
    static void _set_FlowMappingKey(::VYaml::Emitter::EmitState value);
    // static field const value: static public VYaml.Emitter.EmitState FlowMappingValue
    static constexpr const int FlowMappingValue = 6;
    // Get static field: static public VYaml.Emitter.EmitState FlowMappingValue
    static ::VYaml::Emitter::EmitState _get_FlowMappingValue();
    // Set static field: static public VYaml.Emitter.EmitState FlowMappingValue
    static void _set_FlowMappingValue(::VYaml::Emitter::EmitState value);
    // Get instance field reference: public System.Int32 value__
    [[deprecated("Use field access instead!")]] int& dyn_value__();
  }; // VYaml.Emitter.EmitState
  #pragma pack(pop)
  static check_size<sizeof(EmitState), 0 + sizeof(int)> __VYaml_Emitter_EmitStateSizeCheck;
  static_assert(sizeof(EmitState) == 0x4);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
