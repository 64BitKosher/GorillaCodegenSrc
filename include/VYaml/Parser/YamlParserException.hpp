// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: VYaml.Parser.Marker
#include "VYaml/Parser/Marker.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Type namespace: VYaml.Parser
namespace VYaml::Parser {
  // Forward declaring type: YamlParserException
  class YamlParserException;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::VYaml::Parser::YamlParserException);
DEFINE_IL2CPP_ARG_TYPE(::VYaml::Parser::YamlParserException*, "VYaml.Parser", "YamlParserException");
// Type namespace: VYaml.Parser
namespace VYaml::Parser {
  // Size: 0x8C
  #pragma pack(push, 1)
  // Autogenerated type: VYaml.Parser.YamlParserException
  // [TokenAttribute] Offset: FFFFFFFF
  // [NullableContextAttribute] Offset: FFFFFFFF
  // [NullableAttribute] Offset: FFFFFFFF
  class YamlParserException : public ::System::Exception {
    public:
    // static public System.Void Throw(in VYaml.Parser.Marker marker, System.String message)
    // Offset: 0x573BB10
    static void Throw(ByRef<::VYaml::Parser::Marker> marker, ::StringW message);
    // public System.Void .ctor(in VYaml.Parser.Marker marker, System.String message)
    // Offset: 0x573BB58
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static YamlParserException* New_ctor(ByRef<::VYaml::Parser::Marker> marker, ::StringW message) {
      static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::YamlParserException::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<YamlParserException*, creationType>(byref(marker), message)));
    }
  }; // VYaml.Parser.YamlParserException
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: VYaml::Parser::YamlParserException::Throw
// Il2CppName: Throw
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(ByRef<::VYaml::Parser::Marker>, ::StringW)>(&VYaml::Parser::YamlParserException::Throw)> {
  static const MethodInfo* get() {
    static auto* marker = &::il2cpp_utils::GetClassFromName("VYaml.Parser", "Marker")->this_arg;
    static auto* message = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VYaml::Parser::YamlParserException*), "Throw", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{marker, message});
  }
};
// Writing MetadataGetter for method: VYaml::Parser::YamlParserException::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
