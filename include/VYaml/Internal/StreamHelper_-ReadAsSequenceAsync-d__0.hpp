// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: VYaml.Internal.StreamHelper
#include "VYaml/Internal/StreamHelper.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Including type: System.Runtime.CompilerServices.IAsyncStateMachine
#include "System/Runtime/CompilerServices/IAsyncStateMachine.hpp"
// Including type: System.Runtime.CompilerServices.AsyncValueTaskMethodBuilder`1
#include "System/Runtime/CompilerServices/AsyncValueTaskMethodBuilder_1.hpp"
// Including type: System.Runtime.CompilerServices.ConfiguredValueTaskAwaitable`1/ConfiguredValueTaskAwaiter
#include "System/Runtime/CompilerServices/ConfiguredValueTaskAwaitable_1.hpp"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: VYaml::Internal
namespace VYaml::Internal {
  // Forward declaring type: ReusableByteSequenceBuilder
  class ReusableByteSequenceBuilder;
}
// Forward declaring namespace: System::IO
namespace System::IO {
  // Forward declaring type: Stream
  class Stream;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::VYaml::Internal::StreamHelper::$ReadAsSequenceAsync$d__0, "VYaml.Internal", "StreamHelper/<ReadAsSequenceAsync>d__0");
// Type namespace: VYaml.Internal
namespace VYaml::Internal {
  // WARNING Size may be invalid!
  // Autogenerated type: VYaml.Internal.StreamHelper/<ReadAsSequenceAsync>d__0
  // [TokenAttribute] Offset: FFFFFFFF
  // [CompilerGeneratedAttribute] Offset: FFFFFFFF
  struct StreamHelper::$ReadAsSequenceAsync$d__0/*, public ::System::ValueType, public ::System::Runtime::CompilerServices::IAsyncStateMachine*/ {
    public:
    public:
    // public System.Int32 <>1__state
    // Size: 0x4
    // Offset: 0x0
    int $$1__state;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // public System.Runtime.CompilerServices.AsyncValueTaskMethodBuilder`1<VYaml.Internal.ReusableByteSequenceBuilder> <>t__builder
    // Size: 0xFFFFFFFF
    // Offset: 0x8
    ::System::Runtime::CompilerServices::AsyncValueTaskMethodBuilder_1<::VYaml::Internal::ReusableByteSequenceBuilder*> $$t__builder;
    // public System.IO.Stream stream
    // Size: 0x8
    // Offset: 0x30
    ::System::IO::Stream* stream;
    // Field size check
    static_assert(sizeof(::System::IO::Stream*) == 0x8);
    // public System.Threading.CancellationToken cancellation
    // Size: 0x8
    // Offset: 0x38
    ::System::Threading::CancellationToken cancellation;
    // Field size check
    static_assert(sizeof(::System::Threading::CancellationToken) == 0x8);
    // private VYaml.Internal.ReusableByteSequenceBuilder <builder>5__2
    // Size: 0x8
    // Offset: 0x40
    ::VYaml::Internal::ReusableByteSequenceBuilder* $builder$5__2;
    // Field size check
    static_assert(sizeof(::VYaml::Internal::ReusableByteSequenceBuilder*) == 0x8);
    // private System.Byte[] <buffer>5__3
    // Size: 0x8
    // Offset: 0x48
    ::ArrayW<uint8_t> $buffer$5__3;
    // Field size check
    static_assert(sizeof(::ArrayW<uint8_t>) == 0x8);
    // private System.Int32 <offset>5__4
    // Size: 0x4
    // Offset: 0x50
    int $offset$5__4;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private System.Runtime.CompilerServices.ConfiguredValueTaskAwaitable`1/ConfiguredValueTaskAwaiter<System.Int32> <>u__1
    // Size: 0xFFFFFFFF
    // Offset: 0x58
    typename ::System::Runtime::CompilerServices::ConfiguredValueTaskAwaitable_1<int>::ConfiguredValueTaskAwaiter $$u__1;
    public:
    // Creating value type constructor for type: $ReadAsSequenceAsync$d__0
    constexpr $ReadAsSequenceAsync$d__0(int $$1__state_ = {}, ::System::Runtime::CompilerServices::AsyncValueTaskMethodBuilder_1<::VYaml::Internal::ReusableByteSequenceBuilder*> $$t__builder_ = {}, ::System::IO::Stream* stream_ = {}, ::System::Threading::CancellationToken cancellation_ = {}, ::VYaml::Internal::ReusableByteSequenceBuilder* $builder$5__2_ = {}, ::ArrayW<uint8_t> $buffer$5__3_ = ::ArrayW<uint8_t>(static_cast<void*>(nullptr)), int $offset$5__4_ = {}, typename ::System::Runtime::CompilerServices::ConfiguredValueTaskAwaitable_1<int>::ConfiguredValueTaskAwaiter $$u__1_ = {}) noexcept : $$1__state{$$1__state_}, $$t__builder{$$t__builder_}, stream{stream_}, cancellation{cancellation_}, $builder$5__2{$builder$5__2_}, $buffer$5__3{$buffer$5__3_}, $offset$5__4{$offset$5__4_}, $$u__1{$$u__1_} {}
    // Creating interface conversion operator: operator ::System::ValueType
    operator ::System::ValueType() noexcept {
      return *reinterpret_cast<::System::ValueType*>(this);
    }
    // Creating interface conversion operator: operator ::System::Runtime::CompilerServices::IAsyncStateMachine
    operator ::System::Runtime::CompilerServices::IAsyncStateMachine() noexcept {
      return *reinterpret_cast<::System::Runtime::CompilerServices::IAsyncStateMachine*>(this);
    }
    // Get instance field reference: public System.Int32 <>1__state
    [[deprecated("Use field access instead!")]] int& dyn_$$1__state();
    // Get instance field reference: public System.Runtime.CompilerServices.AsyncValueTaskMethodBuilder`1<VYaml.Internal.ReusableByteSequenceBuilder> <>t__builder
    [[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncValueTaskMethodBuilder_1<::VYaml::Internal::ReusableByteSequenceBuilder*>& dyn_$$t__builder();
    // Get instance field reference: public System.IO.Stream stream
    [[deprecated("Use field access instead!")]] ::System::IO::Stream*& dyn_stream();
    // Get instance field reference: public System.Threading.CancellationToken cancellation
    [[deprecated("Use field access instead!")]] ::System::Threading::CancellationToken& dyn_cancellation();
    // Get instance field reference: private VYaml.Internal.ReusableByteSequenceBuilder <builder>5__2
    [[deprecated("Use field access instead!")]] ::VYaml::Internal::ReusableByteSequenceBuilder*& dyn_$builder$5__2();
    // Get instance field reference: private System.Byte[] <buffer>5__3
    [[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& dyn_$buffer$5__3();
    // Get instance field reference: private System.Int32 <offset>5__4
    [[deprecated("Use field access instead!")]] int& dyn_$offset$5__4();
    // Get instance field reference: private System.Runtime.CompilerServices.ConfiguredValueTaskAwaitable`1/ConfiguredValueTaskAwaiter<System.Int32> <>u__1
    [[deprecated("Use field access instead!")]] typename ::System::Runtime::CompilerServices::ConfiguredValueTaskAwaitable_1<int>::ConfiguredValueTaskAwaiter& dyn_$$u__1();
    // private System.Void MoveNext()
    // Offset: 0x574250C
    void MoveNext();
    // private System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)
    // Offset: 0x5742E30
    void SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine);
  }; // VYaml.Internal.StreamHelper/<ReadAsSequenceAsync>d__0
  // WARNING Not writing size check since size may be invalid!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: VYaml::Internal::StreamHelper::$ReadAsSequenceAsync$d__0::MoveNext
// Il2CppName: MoveNext
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VYaml::Internal::StreamHelper::$ReadAsSequenceAsync$d__0::*)()>(&VYaml::Internal::StreamHelper::$ReadAsSequenceAsync$d__0::MoveNext)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VYaml::Internal::StreamHelper::$ReadAsSequenceAsync$d__0), "MoveNext", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VYaml::Internal::StreamHelper::$ReadAsSequenceAsync$d__0::SetStateMachine
// Il2CppName: SetStateMachine
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VYaml::Internal::StreamHelper::$ReadAsSequenceAsync$d__0::*)(::System::Runtime::CompilerServices::IAsyncStateMachine*)>(&VYaml::Internal::StreamHelper::$ReadAsSequenceAsync$d__0::SetStateMachine)> {
  static const MethodInfo* get() {
    static auto* stateMachine = &::il2cpp_utils::GetClassFromName("System.Runtime.CompilerServices", "IAsyncStateMachine")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VYaml::Internal::StreamHelper::$ReadAsSequenceAsync$d__0), "SetStateMachine", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stateMachine});
  }
};
