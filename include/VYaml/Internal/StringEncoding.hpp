// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Text
namespace System::Text {
  // Forward declaring type: Encoding
  class Encoding;
}
// Completed forward declares
// Type namespace: VYaml.Internal
namespace VYaml::Internal {
  // Forward declaring type: StringEncoding
  class StringEncoding;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::VYaml::Internal::StringEncoding);
DEFINE_IL2CPP_ARG_TYPE(::VYaml::Internal::StringEncoding*, "VYaml.Internal", "StringEncoding");
// Type namespace: VYaml.Internal
namespace VYaml::Internal {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: VYaml.Internal.StringEncoding
  // [TokenAttribute] Offset: FFFFFFFF
  class StringEncoding : public ::Il2CppObject {
    public:
    // Get static field: static public readonly System.Text.Encoding Utf8
    static ::System::Text::Encoding* _get_Utf8();
    // Set static field: static public readonly System.Text.Encoding Utf8
    static void _set_Utf8(::System::Text::Encoding* value);
    // static private System.Void .cctor()
    // Offset: 0x5742E88
    static void _cctor();
  }; // VYaml.Internal.StringEncoding
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: VYaml::Internal::StringEncoding::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&VYaml::Internal::StringEncoding::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VYaml::Internal::StringEncoding*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
