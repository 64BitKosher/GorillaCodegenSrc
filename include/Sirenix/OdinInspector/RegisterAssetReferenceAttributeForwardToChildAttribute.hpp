// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Attribute
#include "System/Attribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Type
  class Type;
}
// Completed forward declares
// Type namespace: Sirenix.OdinInspector
namespace Sirenix::OdinInspector {
  // Forward declaring type: RegisterAssetReferenceAttributeForwardToChildAttribute
  class RegisterAssetReferenceAttributeForwardToChildAttribute;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Sirenix::OdinInspector::RegisterAssetReferenceAttributeForwardToChildAttribute);
DEFINE_IL2CPP_ARG_TYPE(::Sirenix::OdinInspector::RegisterAssetReferenceAttributeForwardToChildAttribute*, "Sirenix.OdinInspector", "RegisterAssetReferenceAttributeForwardToChildAttribute");
// Type namespace: Sirenix.OdinInspector
namespace Sirenix::OdinInspector {
  // Size: 0x18
  #pragma pack(push, 1)
  // Autogenerated type: Sirenix.OdinInspector.RegisterAssetReferenceAttributeForwardToChildAttribute
  // [TokenAttribute] Offset: FFFFFFFF
  // [ConditionalAttribute] Offset: FFFFFFFF
  // [AttributeUsageAttribute] Offset: FFFFFFFF
  class RegisterAssetReferenceAttributeForwardToChildAttribute : public ::System::Attribute {
    public:
    public:
    // public readonly System.Type AttributeType
    // Size: 0x8
    // Offset: 0x10
    ::System::Type* AttributeType;
    // Field size check
    static_assert(sizeof(::System::Type*) == 0x8);
    public:
    // Creating conversion operator: operator ::System::Type*
    constexpr operator ::System::Type*() const noexcept {
      return AttributeType;
    }
    // Get instance field reference: public readonly System.Type AttributeType
    [[deprecated("Use field access instead!")]] ::System::Type*& dyn_AttributeType();
    // public System.Void .ctor(System.Type attributeType)
    // Offset: 0x4B6F2A8
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static RegisterAssetReferenceAttributeForwardToChildAttribute* New_ctor(::System::Type* attributeType) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Sirenix::OdinInspector::RegisterAssetReferenceAttributeForwardToChildAttribute::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<RegisterAssetReferenceAttributeForwardToChildAttribute*, creationType>(attributeType)));
    }
  }; // Sirenix.OdinInspector.RegisterAssetReferenceAttributeForwardToChildAttribute
  #pragma pack(pop)
  static check_size<sizeof(RegisterAssetReferenceAttributeForwardToChildAttribute), 16 + sizeof(::System::Type*)> __Sirenix_OdinInspector_RegisterAssetReferenceAttributeForwardToChildAttributeSizeCheck;
  static_assert(sizeof(RegisterAssetReferenceAttributeForwardToChildAttribute) == 0x18);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Sirenix::OdinInspector::RegisterAssetReferenceAttributeForwardToChildAttribute::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
