// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: DynamicSceneManagerHelper.SnapshotComparer
#include "DynamicSceneManagerHelper/SnapshotComparer.hpp"
// Including type: OVRAnchor
#include "GlobalNamespace/OVRAnchor.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::DynamicSceneManagerHelper::SnapshotComparer::$$c__DisplayClass10_0);
DEFINE_IL2CPP_ARG_TYPE(::DynamicSceneManagerHelper::SnapshotComparer::$$c__DisplayClass10_0*, "DynamicSceneManagerHelper", "SnapshotComparer/<>c__DisplayClass10_0");
// Type namespace: DynamicSceneManagerHelper
namespace DynamicSceneManagerHelper {
  // Size: 0x28
  #pragma pack(push, 1)
  // Autogenerated type: DynamicSceneManagerHelper.SnapshotComparer/<>c__DisplayClass10_0
  // [TokenAttribute] Offset: FFFFFFFF
  // [CompilerGeneratedAttribute] Offset: FFFFFFFF
  class SnapshotComparer::$$c__DisplayClass10_0 : public ::Il2CppObject {
    public:
    public:
    // public OVRAnchor baseAnchor
    // Size: 0x18
    // Offset: 0x10
    ::GlobalNamespace::OVRAnchor baseAnchor;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::OVRAnchor) == 0x18);
    public:
    // Creating conversion operator: operator ::GlobalNamespace::OVRAnchor
    constexpr operator ::GlobalNamespace::OVRAnchor() const noexcept {
      return baseAnchor;
    }
    // Get instance field reference: public OVRAnchor baseAnchor
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRAnchor& dyn_baseAnchor();
    // public System.Void .ctor()
    // Offset: 0x281EE5C
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static SnapshotComparer::$$c__DisplayClass10_0* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::DynamicSceneManagerHelper::SnapshotComparer::$$c__DisplayClass10_0::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<SnapshotComparer::$$c__DisplayClass10_0*, creationType>()));
    }
    // System.Boolean <CheckBoundsChanges>b__0(OVRAnchor newAnchor)
    // Offset: 0x281F3C8
    bool $CheckBoundsChanges$b__0(::GlobalNamespace::OVRAnchor newAnchor);
  }; // DynamicSceneManagerHelper.SnapshotComparer/<>c__DisplayClass10_0
  #pragma pack(pop)
  static check_size<sizeof(SnapshotComparer::$$c__DisplayClass10_0), 16 + sizeof(::GlobalNamespace::OVRAnchor)> __DynamicSceneManagerHelper_SnapshotComparer_$$c__DisplayClass10_0SizeCheck;
  static_assert(sizeof(SnapshotComparer::$$c__DisplayClass10_0) == 0x28);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: DynamicSceneManagerHelper::SnapshotComparer::$$c__DisplayClass10_0::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: DynamicSceneManagerHelper::SnapshotComparer::$$c__DisplayClass10_0::$CheckBoundsChanges$b__0
// Il2CppName: <CheckBoundsChanges>b__0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (DynamicSceneManagerHelper::SnapshotComparer::$$c__DisplayClass10_0::*)(::GlobalNamespace::OVRAnchor)>(&DynamicSceneManagerHelper::SnapshotComparer::$$c__DisplayClass10_0::$CheckBoundsChanges$b__0)> {
  static const MethodInfo* get() {
    static auto* newAnchor = &::il2cpp_utils::GetClassFromName("", "OVRAnchor")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DynamicSceneManagerHelper::SnapshotComparer::$$c__DisplayClass10_0*), "<CheckBoundsChanges>b__0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{newAnchor});
  }
};
