// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Technie::PhysicsCreator
namespace Technie::PhysicsCreator {
  // Forward declaring type: Hash160
  class Hash160;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Mesh
  class Mesh;
  // Forward declaring type: Vector3
  struct Vector3;
}
// Completed forward declares
// Type namespace: Technie.PhysicsCreator
namespace Technie::PhysicsCreator {
  // Forward declaring type: HashUtil
  class HashUtil;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Technie::PhysicsCreator::HashUtil);
DEFINE_IL2CPP_ARG_TYPE(::Technie::PhysicsCreator::HashUtil*, "Technie.PhysicsCreator", "HashUtil");
// Type namespace: Technie.PhysicsCreator
namespace Technie::PhysicsCreator {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: Technie.PhysicsCreator.HashUtil
  // [TokenAttribute] Offset: FFFFFFFF
  class HashUtil : public ::Il2CppObject {
    public:
    // static public Technie.PhysicsCreator.Hash160 CalcHash(UnityEngine.Mesh srcMesh)
    // Offset: 0x5028274
    static ::Technie::PhysicsCreator::Hash160* CalcHash(::UnityEngine::Mesh* srcMesh);
    // static public Technie.PhysicsCreator.Hash160 CalcHash(System.String input)
    // Offset: 0x5028624
    static ::Technie::PhysicsCreator::Hash160* CalcHash(::StringW input);
    // static private System.Byte[] ToBytes(UnityEngine.Vector3 vec)
    // Offset: 0x5028544
    static ::ArrayW<uint8_t> ToBytes(::UnityEngine::Vector3 vec);
    // public System.Void .ctor()
    // Offset: 0x50286F4
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static HashUtil* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Technie::PhysicsCreator::HashUtil::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<HashUtil*, creationType>()));
    }
  }; // Technie.PhysicsCreator.HashUtil
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Technie::PhysicsCreator::HashUtil::CalcHash
// Il2CppName: CalcHash
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Technie::PhysicsCreator::Hash160* (*)(::UnityEngine::Mesh*)>(&Technie::PhysicsCreator::HashUtil::CalcHash)> {
  static const MethodInfo* get() {
    static auto* srcMesh = &::il2cpp_utils::GetClassFromName("UnityEngine", "Mesh")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Technie::PhysicsCreator::HashUtil*), "CalcHash", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{srcMesh});
  }
};
// Writing MetadataGetter for method: Technie::PhysicsCreator::HashUtil::CalcHash
// Il2CppName: CalcHash
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Technie::PhysicsCreator::Hash160* (*)(::StringW)>(&Technie::PhysicsCreator::HashUtil::CalcHash)> {
  static const MethodInfo* get() {
    static auto* input = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Technie::PhysicsCreator::HashUtil*), "CalcHash", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{input});
  }
};
// Writing MetadataGetter for method: Technie::PhysicsCreator::HashUtil::ToBytes
// Il2CppName: ToBytes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<uint8_t> (*)(::UnityEngine::Vector3)>(&Technie::PhysicsCreator::HashUtil::ToBytes)> {
  static const MethodInfo* get() {
    static auto* vec = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Technie::PhysicsCreator::HashUtil*), "ToBytes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{vec});
  }
};
// Writing MetadataGetter for method: Technie::PhysicsCreator::HashUtil::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
