// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Mesh
  class Mesh;
}
// Completed forward declares
// Type namespace: Technie.PhysicsCreator
namespace Technie::PhysicsCreator {
  // Forward declaring type: QHullUtil
  class QHullUtil;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Technie::PhysicsCreator::QHullUtil);
DEFINE_IL2CPP_ARG_TYPE(::Technie::PhysicsCreator::QHullUtil*, "Technie.PhysicsCreator", "QHullUtil");
// Type namespace: Technie.PhysicsCreator
namespace Technie::PhysicsCreator {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: Technie.PhysicsCreator.QHullUtil
  // [TokenAttribute] Offset: FFFFFFFF
  class QHullUtil : public ::Il2CppObject {
    public:
    // static public UnityEngine.Mesh FindConvexHull(System.String debugName, UnityEngine.Mesh inputMesh, System.Boolean showErrorInLog)
    // Offset: 0x502BAD4
    static ::UnityEngine::Mesh* FindConvexHull(::StringW debugName, ::UnityEngine::Mesh* inputMesh, bool showErrorInLog);
    // static public System.Void FindConvexHull(System.String debugName, System.Int32[] selectedFaces, UnityEngine.Vector3[] meshVertices, System.Int32[] meshIndices, out UnityEngine.Vector3[] hullVertices, out System.Int32[] hullIndices, System.Boolean showErrorInLog)
    // Offset: 0x502C1DC
    static void FindConvexHull(::StringW debugName, ::ArrayW<int> selectedFaces, ::ArrayW<::UnityEngine::Vector3> meshVertices, ::ArrayW<int> meshIndices, ByRef<::ArrayW<::UnityEngine::Vector3>> hullVertices, ByRef<::ArrayW<int>> hullIndices, bool showErrorInLog);
    // public System.Void .ctor()
    // Offset: 0x502C908
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static QHullUtil* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Technie::PhysicsCreator::QHullUtil::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<QHullUtil*, creationType>()));
    }
  }; // Technie.PhysicsCreator.QHullUtil
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Technie::PhysicsCreator::QHullUtil::FindConvexHull
// Il2CppName: FindConvexHull
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Mesh* (*)(::StringW, ::UnityEngine::Mesh*, bool)>(&Technie::PhysicsCreator::QHullUtil::FindConvexHull)> {
  static const MethodInfo* get() {
    static auto* debugName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* inputMesh = &::il2cpp_utils::GetClassFromName("UnityEngine", "Mesh")->byval_arg;
    static auto* showErrorInLog = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Technie::PhysicsCreator::QHullUtil*), "FindConvexHull", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{debugName, inputMesh, showErrorInLog});
  }
};
// Writing MetadataGetter for method: Technie::PhysicsCreator::QHullUtil::FindConvexHull
// Il2CppName: FindConvexHull
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::StringW, ::ArrayW<int>, ::ArrayW<::UnityEngine::Vector3>, ::ArrayW<int>, ByRef<::ArrayW<::UnityEngine::Vector3>>, ByRef<::ArrayW<int>>, bool)>(&Technie::PhysicsCreator::QHullUtil::FindConvexHull)> {
  static const MethodInfo* get() {
    static auto* debugName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* selectedFaces = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Int32"), 1)->byval_arg;
    static auto* meshVertices = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3"), 1)->byval_arg;
    static auto* meshIndices = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Int32"), 1)->byval_arg;
    static auto* hullVertices = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3"), 1)->this_arg;
    static auto* hullIndices = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Int32"), 1)->this_arg;
    static auto* showErrorInLog = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Technie::PhysicsCreator::QHullUtil*), "FindConvexHull", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{debugName, selectedFaces, meshVertices, meshIndices, hullVertices, hullIndices, showErrorInLog});
  }
};
// Writing MetadataGetter for method: Technie::PhysicsCreator::QHullUtil::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
