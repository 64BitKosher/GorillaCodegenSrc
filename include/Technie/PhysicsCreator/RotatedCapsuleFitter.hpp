// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Technie::PhysicsCreator
namespace Technie::PhysicsCreator {
  // Forward declaring type: CapsuleDef
  struct CapsuleDef;
  // Forward declaring type: ConstructionPlane
  class ConstructionPlane;
  // Forward declaring type: RotatedCapsule
  struct RotatedCapsule;
}
// Forward declaring namespace: Technie::PhysicsCreator::Rigid
namespace Technie::PhysicsCreator::Rigid {
  // Forward declaring type: Hull
  class Hull;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Random
  class Random;
}
// Completed forward declares
// Type namespace: Technie.PhysicsCreator
namespace Technie::PhysicsCreator {
  // Forward declaring type: RotatedCapsuleFitter
  class RotatedCapsuleFitter;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Technie::PhysicsCreator::RotatedCapsuleFitter);
DEFINE_IL2CPP_ARG_TYPE(::Technie::PhysicsCreator::RotatedCapsuleFitter*, "Technie.PhysicsCreator", "RotatedCapsuleFitter");
// Type namespace: Technie.PhysicsCreator
namespace Technie::PhysicsCreator {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: Technie.PhysicsCreator.RotatedCapsuleFitter
  // [TokenAttribute] Offset: FFFFFFFF
  class RotatedCapsuleFitter : public ::Il2CppObject {
    public:
    // public Technie.PhysicsCreator.CapsuleDef Fit(Technie.PhysicsCreator.Rigid.Hull hull, UnityEngine.Vector3[] meshVertices, System.Int32[] meshIndices)
    // Offset: 0x5027014
    ::Technie::PhysicsCreator::CapsuleDef Fit(::Technie::PhysicsCreator::Rigid::Hull* hull, ::ArrayW<::UnityEngine::Vector3> meshVertices, ::ArrayW<int> meshIndices);
    // public Technie.PhysicsCreator.CapsuleDef Fit(UnityEngine.Vector3[] hullVertices, System.Int32[] hullIndices)
    // Offset: 0x502746C
    ::Technie::PhysicsCreator::CapsuleDef Fit(::ArrayW<::UnityEngine::Vector3> hullVertices, ::ArrayW<int> hullIndices);
    // public Technie.PhysicsCreator.ConstructionPlane FindBestCapsulePlane(UnityEngine.Vector3[] hullVertices, System.Int32[] hullIndices)
    // Offset: 0x50270F0
    ::Technie::PhysicsCreator::ConstructionPlane* FindBestCapsulePlane(::ArrayW<::UnityEngine::Vector3> hullVertices, ::ArrayW<int> hullIndices);
    // static public Technie.PhysicsCreator.CapsuleDef ToDef(Technie.PhysicsCreator.RotatedCapsule capsule, Technie.PhysicsCreator.ConstructionPlane plane)
    // Offset: 0x50273D4
    static ::Technie::PhysicsCreator::CapsuleDef ToDef(::Technie::PhysicsCreator::RotatedCapsule capsule, ::Technie::PhysicsCreator::ConstructionPlane* plane);
    // static public System.Void Refine(Technie.PhysicsCreator.RotatedCapsule inputCapule, Technie.PhysicsCreator.ConstructionPlane inputPlane, UnityEngine.Vector3[] hullVertices, out Technie.PhysicsCreator.RotatedCapsule bestCapsule, out Technie.PhysicsCreator.ConstructionPlane bestPlane)
    // Offset: 0x5023218
    static void Refine(::Technie::PhysicsCreator::RotatedCapsule inputCapule, ::Technie::PhysicsCreator::ConstructionPlane* inputPlane, ::ArrayW<::UnityEngine::Vector3> hullVertices, ByRef<::Technie::PhysicsCreator::RotatedCapsule> bestCapsule, ByRef<::Technie::PhysicsCreator::ConstructionPlane*> bestPlane);
    // static private System.Single Jitter(System.Single magnitude, System.Random random)
    // Offset: 0x5027524
    static float Jitter(float magnitude, ::System::Random* random);
    // static public Technie.PhysicsCreator.RotatedCapsule FitCapsule(Technie.PhysicsCreator.ConstructionPlane plane, UnityEngine.Vector3[] points)
    // Offset: 0x502303C
    static ::Technie::PhysicsCreator::RotatedCapsule FitCapsule(::Technie::PhysicsCreator::ConstructionPlane* plane, ::ArrayW<::UnityEngine::Vector3> points);
    // static private UnityEngine.Vector3 ProjectOntoAxis(Technie.PhysicsCreator.ConstructionPlane plane, UnityEngine.Vector3 point)
    // Offset: 0x5027568
    static ::UnityEngine::Vector3 ProjectOntoAxis(::Technie::PhysicsCreator::ConstructionPlane* plane, ::UnityEngine::Vector3 point);
    // static public UnityEngine.Vector3 FindCenter(UnityEngine.Vector3[] vertices)
    // Offset: 0x50275C0
    static ::UnityEngine::Vector3 FindCenter(::ArrayW<::UnityEngine::Vector3> vertices);
    // public System.Void .ctor()
    // Offset: 0x50276B0
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static RotatedCapsuleFitter* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Technie::PhysicsCreator::RotatedCapsuleFitter::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<RotatedCapsuleFitter*, creationType>()));
    }
  }; // Technie.PhysicsCreator.RotatedCapsuleFitter
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Technie::PhysicsCreator::RotatedCapsuleFitter::Fit
// Il2CppName: Fit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Technie::PhysicsCreator::CapsuleDef (Technie::PhysicsCreator::RotatedCapsuleFitter::*)(::Technie::PhysicsCreator::Rigid::Hull*, ::ArrayW<::UnityEngine::Vector3>, ::ArrayW<int>)>(&Technie::PhysicsCreator::RotatedCapsuleFitter::Fit)> {
  static const MethodInfo* get() {
    static auto* hull = &::il2cpp_utils::GetClassFromName("Technie.PhysicsCreator.Rigid", "Hull")->byval_arg;
    static auto* meshVertices = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3"), 1)->byval_arg;
    static auto* meshIndices = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Int32"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Technie::PhysicsCreator::RotatedCapsuleFitter*), "Fit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{hull, meshVertices, meshIndices});
  }
};
// Writing MetadataGetter for method: Technie::PhysicsCreator::RotatedCapsuleFitter::Fit
// Il2CppName: Fit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Technie::PhysicsCreator::CapsuleDef (Technie::PhysicsCreator::RotatedCapsuleFitter::*)(::ArrayW<::UnityEngine::Vector3>, ::ArrayW<int>)>(&Technie::PhysicsCreator::RotatedCapsuleFitter::Fit)> {
  static const MethodInfo* get() {
    static auto* hullVertices = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3"), 1)->byval_arg;
    static auto* hullIndices = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Int32"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Technie::PhysicsCreator::RotatedCapsuleFitter*), "Fit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{hullVertices, hullIndices});
  }
};
// Writing MetadataGetter for method: Technie::PhysicsCreator::RotatedCapsuleFitter::FindBestCapsulePlane
// Il2CppName: FindBestCapsulePlane
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Technie::PhysicsCreator::ConstructionPlane* (Technie::PhysicsCreator::RotatedCapsuleFitter::*)(::ArrayW<::UnityEngine::Vector3>, ::ArrayW<int>)>(&Technie::PhysicsCreator::RotatedCapsuleFitter::FindBestCapsulePlane)> {
  static const MethodInfo* get() {
    static auto* hullVertices = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3"), 1)->byval_arg;
    static auto* hullIndices = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Int32"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Technie::PhysicsCreator::RotatedCapsuleFitter*), "FindBestCapsulePlane", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{hullVertices, hullIndices});
  }
};
// Writing MetadataGetter for method: Technie::PhysicsCreator::RotatedCapsuleFitter::ToDef
// Il2CppName: ToDef
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Technie::PhysicsCreator::CapsuleDef (*)(::Technie::PhysicsCreator::RotatedCapsule, ::Technie::PhysicsCreator::ConstructionPlane*)>(&Technie::PhysicsCreator::RotatedCapsuleFitter::ToDef)> {
  static const MethodInfo* get() {
    static auto* capsule = &::il2cpp_utils::GetClassFromName("Technie.PhysicsCreator", "RotatedCapsule")->byval_arg;
    static auto* plane = &::il2cpp_utils::GetClassFromName("Technie.PhysicsCreator", "ConstructionPlane")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Technie::PhysicsCreator::RotatedCapsuleFitter*), "ToDef", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{capsule, plane});
  }
};
// Writing MetadataGetter for method: Technie::PhysicsCreator::RotatedCapsuleFitter::Refine
// Il2CppName: Refine
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Technie::PhysicsCreator::RotatedCapsule, ::Technie::PhysicsCreator::ConstructionPlane*, ::ArrayW<::UnityEngine::Vector3>, ByRef<::Technie::PhysicsCreator::RotatedCapsule>, ByRef<::Technie::PhysicsCreator::ConstructionPlane*>)>(&Technie::PhysicsCreator::RotatedCapsuleFitter::Refine)> {
  static const MethodInfo* get() {
    static auto* inputCapule = &::il2cpp_utils::GetClassFromName("Technie.PhysicsCreator", "RotatedCapsule")->byval_arg;
    static auto* inputPlane = &::il2cpp_utils::GetClassFromName("Technie.PhysicsCreator", "ConstructionPlane")->byval_arg;
    static auto* hullVertices = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3"), 1)->byval_arg;
    static auto* bestCapsule = &::il2cpp_utils::GetClassFromName("Technie.PhysicsCreator", "RotatedCapsule")->this_arg;
    static auto* bestPlane = &::il2cpp_utils::GetClassFromName("Technie.PhysicsCreator", "ConstructionPlane")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(Technie::PhysicsCreator::RotatedCapsuleFitter*), "Refine", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{inputCapule, inputPlane, hullVertices, bestCapsule, bestPlane});
  }
};
// Writing MetadataGetter for method: Technie::PhysicsCreator::RotatedCapsuleFitter::Jitter
// Il2CppName: Jitter
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (*)(float, ::System::Random*)>(&Technie::PhysicsCreator::RotatedCapsuleFitter::Jitter)> {
  static const MethodInfo* get() {
    static auto* magnitude = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* random = &::il2cpp_utils::GetClassFromName("System", "Random")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Technie::PhysicsCreator::RotatedCapsuleFitter*), "Jitter", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{magnitude, random});
  }
};
// Writing MetadataGetter for method: Technie::PhysicsCreator::RotatedCapsuleFitter::FitCapsule
// Il2CppName: FitCapsule
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Technie::PhysicsCreator::RotatedCapsule (*)(::Technie::PhysicsCreator::ConstructionPlane*, ::ArrayW<::UnityEngine::Vector3>)>(&Technie::PhysicsCreator::RotatedCapsuleFitter::FitCapsule)> {
  static const MethodInfo* get() {
    static auto* plane = &::il2cpp_utils::GetClassFromName("Technie.PhysicsCreator", "ConstructionPlane")->byval_arg;
    static auto* points = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Technie::PhysicsCreator::RotatedCapsuleFitter*), "FitCapsule", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{plane, points});
  }
};
// Writing MetadataGetter for method: Technie::PhysicsCreator::RotatedCapsuleFitter::ProjectOntoAxis
// Il2CppName: ProjectOntoAxis
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector3 (*)(::Technie::PhysicsCreator::ConstructionPlane*, ::UnityEngine::Vector3)>(&Technie::PhysicsCreator::RotatedCapsuleFitter::ProjectOntoAxis)> {
  static const MethodInfo* get() {
    static auto* plane = &::il2cpp_utils::GetClassFromName("Technie.PhysicsCreator", "ConstructionPlane")->byval_arg;
    static auto* point = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Technie::PhysicsCreator::RotatedCapsuleFitter*), "ProjectOntoAxis", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{plane, point});
  }
};
// Writing MetadataGetter for method: Technie::PhysicsCreator::RotatedCapsuleFitter::FindCenter
// Il2CppName: FindCenter
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector3 (*)(::ArrayW<::UnityEngine::Vector3>)>(&Technie::PhysicsCreator::RotatedCapsuleFitter::FindCenter)> {
  static const MethodInfo* get() {
    static auto* vertices = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Technie::PhysicsCreator::RotatedCapsuleFitter*), "FindCenter", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{vertices});
  }
};
// Writing MetadataGetter for method: Technie::PhysicsCreator::RotatedCapsuleFitter::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
