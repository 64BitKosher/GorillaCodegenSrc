// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
// Including type: Technie.PhysicsCreator.ICreatorComponent
#include "Technie/PhysicsCreator/ICreatorComponent.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Technie::PhysicsCreator
namespace Technie::PhysicsCreator {
  // Forward declaring type: PaintingData
  class PaintingData;
  // Forward declaring type: HullData
  class HullData;
  // Forward declaring type: HullMapping
  class HullMapping;
  // Forward declaring type: IEditorData
  class IEditorData;
  // Forward declaring type: HullType
  struct HullType;
  // Forward declaring type: RigidColliderCreatorChild
  class RigidColliderCreatorChild;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Mesh
  class Mesh;
  // Forward declaring type: GameObject
  class GameObject;
  // Skipping declaration: Object because it is already included!
  // Skipping declaration: Vector3 because it is already included!
  // Forward declaring type: Collider
  class Collider;
  // Forward declaring type: PhysicMaterial
  class PhysicMaterial;
  // Skipping declaration: Component because it is already included!
}
// Forward declaring namespace: Technie::PhysicsCreator::Rigid
namespace Technie::PhysicsCreator::Rigid {
  // Forward declaring type: Hull
  class Hull;
}
// Completed forward declares
// Type namespace: Technie.PhysicsCreator
namespace Technie::PhysicsCreator {
  // Forward declaring type: RigidColliderCreator
  class RigidColliderCreator;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Technie::PhysicsCreator::RigidColliderCreator);
DEFINE_IL2CPP_ARG_TYPE(::Technie::PhysicsCreator::RigidColliderCreator*, "Technie.PhysicsCreator", "RigidColliderCreator");
// Type namespace: Technie.PhysicsCreator
namespace Technie::PhysicsCreator {
  // Size: 0x40
  #pragma pack(push, 1)
  // Autogenerated type: Technie.PhysicsCreator.RigidColliderCreator
  // [TokenAttribute] Offset: FFFFFFFF
  class RigidColliderCreator : public ::UnityEngine::MonoBehaviour/*, public ::Technie::PhysicsCreator::ICreatorComponent*/ {
    public:
    public:
    // public Technie.PhysicsCreator.PaintingData paintingData
    // Size: 0x8
    // Offset: 0x20
    ::Technie::PhysicsCreator::PaintingData* paintingData;
    // Field size check
    static_assert(sizeof(::Technie::PhysicsCreator::PaintingData*) == 0x8);
    // public Technie.PhysicsCreator.HullData hullData
    // Size: 0x8
    // Offset: 0x28
    ::Technie::PhysicsCreator::HullData* hullData;
    // Field size check
    static_assert(sizeof(::Technie::PhysicsCreator::HullData*) == 0x8);
    // private System.Collections.Generic.List`1<Technie.PhysicsCreator.HullMapping> hullMapping
    // Size: 0x8
    // Offset: 0x30
    ::System::Collections::Generic::List_1<::Technie::PhysicsCreator::HullMapping*>* hullMapping;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::Technie::PhysicsCreator::HullMapping*>*) == 0x8);
    // private UnityEngine.Mesh debugMesh
    // Size: 0x8
    // Offset: 0x38
    ::UnityEngine::Mesh* debugMesh;
    // Field size check
    static_assert(sizeof(::UnityEngine::Mesh*) == 0x8);
    public:
    // Creating interface conversion operator: operator ::Technie::PhysicsCreator::ICreatorComponent
    operator ::Technie::PhysicsCreator::ICreatorComponent() noexcept {
      return *reinterpret_cast<::Technie::PhysicsCreator::ICreatorComponent*>(this);
    }
    // Get instance field reference: public Technie.PhysicsCreator.PaintingData paintingData
    [[deprecated("Use field access instead!")]] ::Technie::PhysicsCreator::PaintingData*& dyn_paintingData();
    // Get instance field reference: public Technie.PhysicsCreator.HullData hullData
    [[deprecated("Use field access instead!")]] ::Technie::PhysicsCreator::HullData*& dyn_hullData();
    // Get instance field reference: private System.Collections.Generic.List`1<Technie.PhysicsCreator.HullMapping> hullMapping
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Technie::PhysicsCreator::HullMapping*>*& dyn_hullMapping();
    // Get instance field reference: private UnityEngine.Mesh debugMesh
    [[deprecated("Use field access instead!")]] ::UnityEngine::Mesh*& dyn_debugMesh();
    // private System.Void OnDestroy()
    // Offset: 0x502D9AC
    void OnDestroy();
    // public UnityEngine.GameObject GetGameObject()
    // Offset: 0x502D9B0
    ::UnityEngine::GameObject* GetGameObject();
    // public System.Boolean HasEditorData()
    // Offset: 0x502D9B8
    bool HasEditorData();
    // public Technie.PhysicsCreator.IEditorData GetEditorData()
    // Offset: 0x502DA18
    ::Technie::PhysicsCreator::IEditorData* GetEditorData();
    // public System.Void CreateColliderComponents(UnityEngine.Mesh[] autoHulls)
    // Offset: 0x502DA20
    void CreateColliderComponents(::ArrayW<::UnityEngine::Mesh*> autoHulls);
    // public System.Void RemoveAllColliders()
    // Offset: 0x5030FA0
    void RemoveAllColliders();
    // public System.Void RemoveAllGenerated()
    // Offset: 0x503128C
    void RemoveAllGenerated();
    // static private System.Boolean IsDeletable(UnityEngine.GameObject obj)
    // Offset: 0x503158C
    static bool IsDeletable(::UnityEngine::GameObject* obj);
    // static private System.Void DestroyImmediateWithUndo(UnityEngine.Object obj)
    // Offset: 0x5031204
    static void DestroyImmediateWithUndo(::UnityEngine::Object* obj);
    // private System.Void CreateHullMapping()
    // Offset: 0x502DC34
    void CreateHullMapping();
    // static private System.Boolean Approximately(UnityEngine.Vector3 lhs, UnityEngine.Vector3 rhs)
    // Offset: 0x5032014
    static bool Approximately(::UnityEngine::Vector3 lhs, ::UnityEngine::Vector3 rhs);
    // static private System.Boolean Approximately(System.Single lhs, System.Single rhs)
    // Offset: 0x5032114
    static bool Approximately(float lhs, float rhs);
    // private System.Void CreateCollider(Technie.PhysicsCreator.Rigid.Hull sourceHull)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class T>
    void CreateCollider(::Technie::PhysicsCreator::Rigid::Hull* sourceHull) {
      static_assert(std::is_convertible_v<T, ::UnityEngine::Collider*>);
      static auto ___internal__logger = ::Logger::get().WithContext("::Technie::PhysicsCreator::RigidColliderCreator::CreateCollider");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateCollider", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sourceHull)})));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___generic__method, sourceHull);
    }
    // private System.Void RecreateChildCollider(Technie.PhysicsCreator.HullMapping mapping)
    // Offset: 0x503246C
    void RecreateChildCollider(::Technie::PhysicsCreator::HullMapping* mapping);
    // private System.Void RecreateChildCollider(Technie.PhysicsCreator.HullMapping mapping)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class T>
    void RecreateChildCollider(::Technie::PhysicsCreator::HullMapping* mapping) {
      static_assert(std::is_convertible_v<T, ::UnityEngine::Collider*>);
      static auto ___internal__logger = ::Logger::get().WithContext("::Technie::PhysicsCreator::RigidColliderCreator::RecreateChildCollider");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RecreateChildCollider", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mapping)})));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___generic__method, mapping);
    }
    // private System.Void UpdateCollider(Technie.PhysicsCreator.Rigid.Hull hull)
    // Offset: 0x5030030
    void UpdateCollider(::Technie::PhysicsCreator::Rigid::Hull* hull);
    // public System.Void SetAllTypes(Technie.PhysicsCreator.HullType newType)
    // Offset: 0x5032548
    void SetAllTypes(::Technie::PhysicsCreator::HullType newType);
    // public System.Void SetAllMaterials(UnityEngine.PhysicMaterial newMaterial)
    // Offset: 0x5032688
    void SetAllMaterials(::UnityEngine::PhysicMaterial* newMaterial);
    // public System.Void SetAllAsChild(System.Boolean isChild)
    // Offset: 0x50327E4
    void SetAllAsChild(bool isChild);
    // public System.Void SetAllAsTrigger(System.Boolean isTrigger)
    // Offset: 0x5032938
    void SetAllAsTrigger(bool isTrigger);
    // private System.Collections.Generic.List`1<T> FindLocal()
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class T>
    ::System::Collections::Generic::List_1<T>* FindLocal() {
      static_assert(std::is_convertible_v<T, ::UnityEngine::Component*>);
      static auto ___internal__logger = ::Logger::get().WithContext("::Technie::PhysicsCreator::RigidColliderCreator::FindLocal");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindLocal", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}, ::std::vector<const Il2CppType*>{})));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}));
      return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<T>*, false>(this, ___generic__method);
    }
    // private System.Boolean IsMapped(Technie.PhysicsCreator.Rigid.Hull hull)
    // Offset: 0x5031714
    bool IsMapped(::Technie::PhysicsCreator::Rigid::Hull* hull);
    // private System.Boolean IsMapped(UnityEngine.Collider col)
    // Offset: 0x5031AA0
    bool IsMapped(::UnityEngine::Collider* col);
    // private System.Boolean IsMapped(Technie.PhysicsCreator.RigidColliderCreatorChild child)
    // Offset: 0x5031C44
    bool IsMapped(::Technie::PhysicsCreator::RigidColliderCreatorChild* child);
    // private System.Void AddMapping(Technie.PhysicsCreator.Rigid.Hull hull, UnityEngine.Collider col, Technie.PhysicsCreator.RigidColliderCreatorChild painterChild)
    // Offset: 0x503219C
    void AddMapping(::Technie::PhysicsCreator::Rigid::Hull* hull, ::UnityEngine::Collider* col, ::Technie::PhysicsCreator::RigidColliderCreatorChild* painterChild);
    // private System.Void RemoveMapping(Technie.PhysicsCreator.Rigid.Hull hull)
    // Offset: 0x50319CC
    void RemoveMapping(::Technie::PhysicsCreator::Rigid::Hull* hull);
    // private Technie.PhysicsCreator.HullMapping FindMapping(Technie.PhysicsCreator.RigidColliderCreatorChild child)
    // Offset: 0x50322C4
    ::Technie::PhysicsCreator::HullMapping* FindMapping(::Technie::PhysicsCreator::RigidColliderCreatorChild* child);
    // private Technie.PhysicsCreator.HullMapping FindMapping(Technie.PhysicsCreator.Rigid.Hull hull)
    // Offset: 0x5031EAC
    ::Technie::PhysicsCreator::HullMapping* FindMapping(::Technie::PhysicsCreator::Rigid::Hull* hull);
    // public Technie.PhysicsCreator.Rigid.Hull FindSourceHull(Technie.PhysicsCreator.RigidColliderCreatorChild child)
    // Offset: 0x5032A8C
    ::Technie::PhysicsCreator::Rigid::Hull* FindSourceHull(::Technie::PhysicsCreator::RigidColliderCreatorChild* child);
    // static private UnityEngine.Collider FindExistingCollider(System.Collections.Generic.List`1<Technie.PhysicsCreator.HullMapping> mappings, Technie.PhysicsCreator.Rigid.Hull hull)
    // Offset: 0x5031878
    static ::UnityEngine::Collider* FindExistingCollider(::System::Collections::Generic::List_1<::Technie::PhysicsCreator::HullMapping*>* mappings, ::Technie::PhysicsCreator::Rigid::Hull* hull);
    // private System.Void CreateAutoHulls(Technie.PhysicsCreator.Rigid.Hull hull, UnityEngine.Mesh[] autoHulls)
    // Offset: 0x503069C
    void CreateAutoHulls(::Technie::PhysicsCreator::Rigid::Hull* hull, ::ArrayW<::UnityEngine::Mesh*> autoHulls);
    // static private UnityEngine.GameObject CreateGameObject(System.String goName)
    // Offset: 0x5032CB4
    static ::UnityEngine::GameObject* CreateGameObject(::StringW goName);
    // static private T AddComponent(UnityEngine.GameObject targetObj)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class T>
    static T AddComponent(::UnityEngine::GameObject* targetObj) {
      static_assert(std::is_convertible_v<T, ::UnityEngine::Component*>);
      static auto ___internal__logger = ::Logger::get().WithContext("::Technie::PhysicsCreator::RigidColliderCreator::AddComponent");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Technie.PhysicsCreator", "RigidColliderCreator", "AddComponent", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(targetObj)})));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}));
      return ::il2cpp_utils::RunMethodRethrow<T, false>(static_cast<Il2CppObject*>(nullptr), ___generic__method, targetObj);
    }
    // private System.Void OnDrawGizmos()
    // Offset: 0x5032D10
    void OnDrawGizmos();
    // public System.Void .ctor()
    // Offset: 0x5032D14
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static RigidColliderCreator* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Technie::PhysicsCreator::RigidColliderCreator::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<RigidColliderCreator*, creationType>()));
    }
  }; // Technie.PhysicsCreator.RigidColliderCreator
  #pragma pack(pop)
  static check_size<sizeof(RigidColliderCreator), 56 + sizeof(::UnityEngine::Mesh*)> __Technie_PhysicsCreator_RigidColliderCreatorSizeCheck;
  static_assert(sizeof(RigidColliderCreator) == 0x40);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Technie::PhysicsCreator::RigidColliderCreator::OnDestroy
// Il2CppName: OnDestroy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Technie::PhysicsCreator::RigidColliderCreator::*)()>(&Technie::PhysicsCreator::RigidColliderCreator::OnDestroy)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Technie::PhysicsCreator::RigidColliderCreator*), "OnDestroy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Technie::PhysicsCreator::RigidColliderCreator::GetGameObject
// Il2CppName: GetGameObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::GameObject* (Technie::PhysicsCreator::RigidColliderCreator::*)()>(&Technie::PhysicsCreator::RigidColliderCreator::GetGameObject)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Technie::PhysicsCreator::RigidColliderCreator*), "GetGameObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Technie::PhysicsCreator::RigidColliderCreator::HasEditorData
// Il2CppName: HasEditorData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Technie::PhysicsCreator::RigidColliderCreator::*)()>(&Technie::PhysicsCreator::RigidColliderCreator::HasEditorData)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Technie::PhysicsCreator::RigidColliderCreator*), "HasEditorData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Technie::PhysicsCreator::RigidColliderCreator::GetEditorData
// Il2CppName: GetEditorData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Technie::PhysicsCreator::IEditorData* (Technie::PhysicsCreator::RigidColliderCreator::*)()>(&Technie::PhysicsCreator::RigidColliderCreator::GetEditorData)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Technie::PhysicsCreator::RigidColliderCreator*), "GetEditorData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Technie::PhysicsCreator::RigidColliderCreator::CreateColliderComponents
// Il2CppName: CreateColliderComponents
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Technie::PhysicsCreator::RigidColliderCreator::*)(::ArrayW<::UnityEngine::Mesh*>)>(&Technie::PhysicsCreator::RigidColliderCreator::CreateColliderComponents)> {
  static const MethodInfo* get() {
    static auto* autoHulls = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("UnityEngine", "Mesh"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Technie::PhysicsCreator::RigidColliderCreator*), "CreateColliderComponents", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{autoHulls});
  }
};
// Writing MetadataGetter for method: Technie::PhysicsCreator::RigidColliderCreator::RemoveAllColliders
// Il2CppName: RemoveAllColliders
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Technie::PhysicsCreator::RigidColliderCreator::*)()>(&Technie::PhysicsCreator::RigidColliderCreator::RemoveAllColliders)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Technie::PhysicsCreator::RigidColliderCreator*), "RemoveAllColliders", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Technie::PhysicsCreator::RigidColliderCreator::RemoveAllGenerated
// Il2CppName: RemoveAllGenerated
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Technie::PhysicsCreator::RigidColliderCreator::*)()>(&Technie::PhysicsCreator::RigidColliderCreator::RemoveAllGenerated)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Technie::PhysicsCreator::RigidColliderCreator*), "RemoveAllGenerated", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Technie::PhysicsCreator::RigidColliderCreator::IsDeletable
// Il2CppName: IsDeletable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::UnityEngine::GameObject*)>(&Technie::PhysicsCreator::RigidColliderCreator::IsDeletable)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Technie::PhysicsCreator::RigidColliderCreator*), "IsDeletable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Technie::PhysicsCreator::RigidColliderCreator::DestroyImmediateWithUndo
// Il2CppName: DestroyImmediateWithUndo
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::Object*)>(&Technie::PhysicsCreator::RigidColliderCreator::DestroyImmediateWithUndo)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("UnityEngine", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Technie::PhysicsCreator::RigidColliderCreator*), "DestroyImmediateWithUndo", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Technie::PhysicsCreator::RigidColliderCreator::CreateHullMapping
// Il2CppName: CreateHullMapping
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Technie::PhysicsCreator::RigidColliderCreator::*)()>(&Technie::PhysicsCreator::RigidColliderCreator::CreateHullMapping)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Technie::PhysicsCreator::RigidColliderCreator*), "CreateHullMapping", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Technie::PhysicsCreator::RigidColliderCreator::Approximately
// Il2CppName: Approximately
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::UnityEngine::Vector3, ::UnityEngine::Vector3)>(&Technie::PhysicsCreator::RigidColliderCreator::Approximately)> {
  static const MethodInfo* get() {
    static auto* lhs = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* rhs = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Technie::PhysicsCreator::RigidColliderCreator*), "Approximately", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{lhs, rhs});
  }
};
// Writing MetadataGetter for method: Technie::PhysicsCreator::RigidColliderCreator::Approximately
// Il2CppName: Approximately
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(float, float)>(&Technie::PhysicsCreator::RigidColliderCreator::Approximately)> {
  static const MethodInfo* get() {
    static auto* lhs = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* rhs = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Technie::PhysicsCreator::RigidColliderCreator*), "Approximately", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{lhs, rhs});
  }
};
// Writing MetadataGetter for method: Technie::PhysicsCreator::RigidColliderCreator::CreateCollider
// Il2CppName: CreateCollider
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: Technie::PhysicsCreator::RigidColliderCreator::RecreateChildCollider
// Il2CppName: RecreateChildCollider
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Technie::PhysicsCreator::RigidColliderCreator::*)(::Technie::PhysicsCreator::HullMapping*)>(&Technie::PhysicsCreator::RigidColliderCreator::RecreateChildCollider)> {
  static const MethodInfo* get() {
    static auto* mapping = &::il2cpp_utils::GetClassFromName("Technie.PhysicsCreator", "HullMapping")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Technie::PhysicsCreator::RigidColliderCreator*), "RecreateChildCollider", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{mapping});
  }
};
// Writing MetadataGetter for method: Technie::PhysicsCreator::RigidColliderCreator::RecreateChildCollider
// Il2CppName: RecreateChildCollider
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: Technie::PhysicsCreator::RigidColliderCreator::UpdateCollider
// Il2CppName: UpdateCollider
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Technie::PhysicsCreator::RigidColliderCreator::*)(::Technie::PhysicsCreator::Rigid::Hull*)>(&Technie::PhysicsCreator::RigidColliderCreator::UpdateCollider)> {
  static const MethodInfo* get() {
    static auto* hull = &::il2cpp_utils::GetClassFromName("Technie.PhysicsCreator.Rigid", "Hull")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Technie::PhysicsCreator::RigidColliderCreator*), "UpdateCollider", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{hull});
  }
};
// Writing MetadataGetter for method: Technie::PhysicsCreator::RigidColliderCreator::SetAllTypes
// Il2CppName: SetAllTypes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Technie::PhysicsCreator::RigidColliderCreator::*)(::Technie::PhysicsCreator::HullType)>(&Technie::PhysicsCreator::RigidColliderCreator::SetAllTypes)> {
  static const MethodInfo* get() {
    static auto* newType = &::il2cpp_utils::GetClassFromName("Technie.PhysicsCreator", "HullType")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Technie::PhysicsCreator::RigidColliderCreator*), "SetAllTypes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{newType});
  }
};
// Writing MetadataGetter for method: Technie::PhysicsCreator::RigidColliderCreator::SetAllMaterials
// Il2CppName: SetAllMaterials
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Technie::PhysicsCreator::RigidColliderCreator::*)(::UnityEngine::PhysicMaterial*)>(&Technie::PhysicsCreator::RigidColliderCreator::SetAllMaterials)> {
  static const MethodInfo* get() {
    static auto* newMaterial = &::il2cpp_utils::GetClassFromName("UnityEngine", "PhysicMaterial")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Technie::PhysicsCreator::RigidColliderCreator*), "SetAllMaterials", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{newMaterial});
  }
};
// Writing MetadataGetter for method: Technie::PhysicsCreator::RigidColliderCreator::SetAllAsChild
// Il2CppName: SetAllAsChild
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Technie::PhysicsCreator::RigidColliderCreator::*)(bool)>(&Technie::PhysicsCreator::RigidColliderCreator::SetAllAsChild)> {
  static const MethodInfo* get() {
    static auto* isChild = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Technie::PhysicsCreator::RigidColliderCreator*), "SetAllAsChild", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{isChild});
  }
};
// Writing MetadataGetter for method: Technie::PhysicsCreator::RigidColliderCreator::SetAllAsTrigger
// Il2CppName: SetAllAsTrigger
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Technie::PhysicsCreator::RigidColliderCreator::*)(bool)>(&Technie::PhysicsCreator::RigidColliderCreator::SetAllAsTrigger)> {
  static const MethodInfo* get() {
    static auto* isTrigger = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Technie::PhysicsCreator::RigidColliderCreator*), "SetAllAsTrigger", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{isTrigger});
  }
};
// Writing MetadataGetter for method: Technie::PhysicsCreator::RigidColliderCreator::FindLocal
// Il2CppName: FindLocal
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: Technie::PhysicsCreator::RigidColliderCreator::IsMapped
// Il2CppName: IsMapped
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Technie::PhysicsCreator::RigidColliderCreator::*)(::Technie::PhysicsCreator::Rigid::Hull*)>(&Technie::PhysicsCreator::RigidColliderCreator::IsMapped)> {
  static const MethodInfo* get() {
    static auto* hull = &::il2cpp_utils::GetClassFromName("Technie.PhysicsCreator.Rigid", "Hull")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Technie::PhysicsCreator::RigidColliderCreator*), "IsMapped", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{hull});
  }
};
// Writing MetadataGetter for method: Technie::PhysicsCreator::RigidColliderCreator::IsMapped
// Il2CppName: IsMapped
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Technie::PhysicsCreator::RigidColliderCreator::*)(::UnityEngine::Collider*)>(&Technie::PhysicsCreator::RigidColliderCreator::IsMapped)> {
  static const MethodInfo* get() {
    static auto* col = &::il2cpp_utils::GetClassFromName("UnityEngine", "Collider")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Technie::PhysicsCreator::RigidColliderCreator*), "IsMapped", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{col});
  }
};
// Writing MetadataGetter for method: Technie::PhysicsCreator::RigidColliderCreator::IsMapped
// Il2CppName: IsMapped
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Technie::PhysicsCreator::RigidColliderCreator::*)(::Technie::PhysicsCreator::RigidColliderCreatorChild*)>(&Technie::PhysicsCreator::RigidColliderCreator::IsMapped)> {
  static const MethodInfo* get() {
    static auto* child = &::il2cpp_utils::GetClassFromName("Technie.PhysicsCreator", "RigidColliderCreatorChild")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Technie::PhysicsCreator::RigidColliderCreator*), "IsMapped", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{child});
  }
};
// Writing MetadataGetter for method: Technie::PhysicsCreator::RigidColliderCreator::AddMapping
// Il2CppName: AddMapping
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Technie::PhysicsCreator::RigidColliderCreator::*)(::Technie::PhysicsCreator::Rigid::Hull*, ::UnityEngine::Collider*, ::Technie::PhysicsCreator::RigidColliderCreatorChild*)>(&Technie::PhysicsCreator::RigidColliderCreator::AddMapping)> {
  static const MethodInfo* get() {
    static auto* hull = &::il2cpp_utils::GetClassFromName("Technie.PhysicsCreator.Rigid", "Hull")->byval_arg;
    static auto* col = &::il2cpp_utils::GetClassFromName("UnityEngine", "Collider")->byval_arg;
    static auto* painterChild = &::il2cpp_utils::GetClassFromName("Technie.PhysicsCreator", "RigidColliderCreatorChild")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Technie::PhysicsCreator::RigidColliderCreator*), "AddMapping", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{hull, col, painterChild});
  }
};
// Writing MetadataGetter for method: Technie::PhysicsCreator::RigidColliderCreator::RemoveMapping
// Il2CppName: RemoveMapping
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Technie::PhysicsCreator::RigidColliderCreator::*)(::Technie::PhysicsCreator::Rigid::Hull*)>(&Technie::PhysicsCreator::RigidColliderCreator::RemoveMapping)> {
  static const MethodInfo* get() {
    static auto* hull = &::il2cpp_utils::GetClassFromName("Technie.PhysicsCreator.Rigid", "Hull")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Technie::PhysicsCreator::RigidColliderCreator*), "RemoveMapping", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{hull});
  }
};
// Writing MetadataGetter for method: Technie::PhysicsCreator::RigidColliderCreator::FindMapping
// Il2CppName: FindMapping
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Technie::PhysicsCreator::HullMapping* (Technie::PhysicsCreator::RigidColliderCreator::*)(::Technie::PhysicsCreator::RigidColliderCreatorChild*)>(&Technie::PhysicsCreator::RigidColliderCreator::FindMapping)> {
  static const MethodInfo* get() {
    static auto* child = &::il2cpp_utils::GetClassFromName("Technie.PhysicsCreator", "RigidColliderCreatorChild")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Technie::PhysicsCreator::RigidColliderCreator*), "FindMapping", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{child});
  }
};
// Writing MetadataGetter for method: Technie::PhysicsCreator::RigidColliderCreator::FindMapping
// Il2CppName: FindMapping
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Technie::PhysicsCreator::HullMapping* (Technie::PhysicsCreator::RigidColliderCreator::*)(::Technie::PhysicsCreator::Rigid::Hull*)>(&Technie::PhysicsCreator::RigidColliderCreator::FindMapping)> {
  static const MethodInfo* get() {
    static auto* hull = &::il2cpp_utils::GetClassFromName("Technie.PhysicsCreator.Rigid", "Hull")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Technie::PhysicsCreator::RigidColliderCreator*), "FindMapping", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{hull});
  }
};
// Writing MetadataGetter for method: Technie::PhysicsCreator::RigidColliderCreator::FindSourceHull
// Il2CppName: FindSourceHull
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Technie::PhysicsCreator::Rigid::Hull* (Technie::PhysicsCreator::RigidColliderCreator::*)(::Technie::PhysicsCreator::RigidColliderCreatorChild*)>(&Technie::PhysicsCreator::RigidColliderCreator::FindSourceHull)> {
  static const MethodInfo* get() {
    static auto* child = &::il2cpp_utils::GetClassFromName("Technie.PhysicsCreator", "RigidColliderCreatorChild")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Technie::PhysicsCreator::RigidColliderCreator*), "FindSourceHull", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{child});
  }
};
// Writing MetadataGetter for method: Technie::PhysicsCreator::RigidColliderCreator::FindExistingCollider
// Il2CppName: FindExistingCollider
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Collider* (*)(::System::Collections::Generic::List_1<::Technie::PhysicsCreator::HullMapping*>*, ::Technie::PhysicsCreator::Rigid::Hull*)>(&Technie::PhysicsCreator::RigidColliderCreator::FindExistingCollider)> {
  static const MethodInfo* get() {
    static auto* mappings = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("Technie.PhysicsCreator", "HullMapping")})->byval_arg;
    static auto* hull = &::il2cpp_utils::GetClassFromName("Technie.PhysicsCreator.Rigid", "Hull")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Technie::PhysicsCreator::RigidColliderCreator*), "FindExistingCollider", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{mappings, hull});
  }
};
// Writing MetadataGetter for method: Technie::PhysicsCreator::RigidColliderCreator::CreateAutoHulls
// Il2CppName: CreateAutoHulls
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Technie::PhysicsCreator::RigidColliderCreator::*)(::Technie::PhysicsCreator::Rigid::Hull*, ::ArrayW<::UnityEngine::Mesh*>)>(&Technie::PhysicsCreator::RigidColliderCreator::CreateAutoHulls)> {
  static const MethodInfo* get() {
    static auto* hull = &::il2cpp_utils::GetClassFromName("Technie.PhysicsCreator.Rigid", "Hull")->byval_arg;
    static auto* autoHulls = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("UnityEngine", "Mesh"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Technie::PhysicsCreator::RigidColliderCreator*), "CreateAutoHulls", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{hull, autoHulls});
  }
};
// Writing MetadataGetter for method: Technie::PhysicsCreator::RigidColliderCreator::CreateGameObject
// Il2CppName: CreateGameObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::GameObject* (*)(::StringW)>(&Technie::PhysicsCreator::RigidColliderCreator::CreateGameObject)> {
  static const MethodInfo* get() {
    static auto* goName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Technie::PhysicsCreator::RigidColliderCreator*), "CreateGameObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{goName});
  }
};
// Writing MetadataGetter for method: Technie::PhysicsCreator::RigidColliderCreator::AddComponent
// Il2CppName: AddComponent
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: Technie::PhysicsCreator::RigidColliderCreator::OnDrawGizmos
// Il2CppName: OnDrawGizmos
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Technie::PhysicsCreator::RigidColliderCreator::*)()>(&Technie::PhysicsCreator::RigidColliderCreator::OnDrawGizmos)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Technie::PhysicsCreator::RigidColliderCreator*), "OnDrawGizmos", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Technie::PhysicsCreator::RigidColliderCreator::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
