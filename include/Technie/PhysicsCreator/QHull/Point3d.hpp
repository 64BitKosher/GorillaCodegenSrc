// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Technie.PhysicsCreator.QHull.Vector3d
#include "Technie/PhysicsCreator/QHull/Vector3d.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Type namespace: Technie.PhysicsCreator.QHull
namespace Technie::PhysicsCreator::QHull {
  // Forward declaring type: Point3d
  class Point3d;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Technie::PhysicsCreator::QHull::Point3d);
DEFINE_IL2CPP_ARG_TYPE(::Technie::PhysicsCreator::QHull::Point3d*, "Technie.PhysicsCreator.QHull", "Point3d");
// Type namespace: Technie.PhysicsCreator.QHull
namespace Technie::PhysicsCreator::QHull {
  // Size: 0x28
  #pragma pack(push, 1)
  // Autogenerated type: Technie.PhysicsCreator.QHull.Point3d
  // [TokenAttribute] Offset: FFFFFFFF
  class Point3d : public ::Technie::PhysicsCreator::QHull::Vector3d {
    public:
    // public System.Void .ctor()
    // Offset: 0x503C670
    // Implemented from: Technie.PhysicsCreator.QHull.Vector3d
    // Base method: System.Void Vector3d::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static Point3d* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Technie::PhysicsCreator::QHull::Point3d::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<Point3d*, creationType>()));
    }
    // public System.Void .ctor(Technie.PhysicsCreator.QHull.Vector3d v)
    // Offset: 0x503D718
    // Implemented from: Technie.PhysicsCreator.QHull.Vector3d
    // Base method: System.Void Vector3d::.ctor(Technie.PhysicsCreator.QHull.Vector3d v)
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static Point3d* New_ctor(::Technie::PhysicsCreator::QHull::Vector3d* v) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Technie::PhysicsCreator::QHull::Point3d::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<Point3d*, creationType>(v)));
    }
    // public System.Void .ctor(System.Double x, System.Double y, System.Double z)
    // Offset: 0x503D778
    // Implemented from: Technie.PhysicsCreator.QHull.Vector3d
    // Base method: System.Void Vector3d::.ctor(System.Double x, System.Double y, System.Double z)
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static Point3d* New_ctor(double x, double y, double z) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Technie::PhysicsCreator::QHull::Point3d::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<Point3d*, creationType>(x, y, z)));
    }
  }; // Technie.PhysicsCreator.QHull.Point3d
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Technie::PhysicsCreator::QHull::Point3d::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: Technie::PhysicsCreator::QHull::Point3d::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: Technie::PhysicsCreator::QHull::Point3d::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
