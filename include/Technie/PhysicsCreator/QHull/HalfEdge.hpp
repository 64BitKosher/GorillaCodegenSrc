// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Technie::PhysicsCreator::QHull
namespace Technie::PhysicsCreator::QHull {
  // Forward declaring type: Vertex
  class Vertex;
  // Forward declaring type: Face
  class Face;
}
// Completed forward declares
// Type namespace: Technie.PhysicsCreator.QHull
namespace Technie::PhysicsCreator::QHull {
  // Forward declaring type: HalfEdge
  class HalfEdge;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Technie::PhysicsCreator::QHull::HalfEdge);
DEFINE_IL2CPP_ARG_TYPE(::Technie::PhysicsCreator::QHull::HalfEdge*, "Technie.PhysicsCreator.QHull", "HalfEdge");
// Type namespace: Technie.PhysicsCreator.QHull
namespace Technie::PhysicsCreator::QHull {
  // Size: 0x38
  #pragma pack(push, 1)
  // Autogenerated type: Technie.PhysicsCreator.QHull.HalfEdge
  // [TokenAttribute] Offset: FFFFFFFF
  class HalfEdge : public ::Il2CppObject {
    public:
    public:
    // public Technie.PhysicsCreator.QHull.Vertex vertex
    // Size: 0x8
    // Offset: 0x10
    ::Technie::PhysicsCreator::QHull::Vertex* vertex;
    // Field size check
    static_assert(sizeof(::Technie::PhysicsCreator::QHull::Vertex*) == 0x8);
    // public Technie.PhysicsCreator.QHull.Face face
    // Size: 0x8
    // Offset: 0x18
    ::Technie::PhysicsCreator::QHull::Face* face;
    // Field size check
    static_assert(sizeof(::Technie::PhysicsCreator::QHull::Face*) == 0x8);
    // public Technie.PhysicsCreator.QHull.HalfEdge next
    // Size: 0x8
    // Offset: 0x20
    ::Technie::PhysicsCreator::QHull::HalfEdge* next;
    // Field size check
    static_assert(sizeof(::Technie::PhysicsCreator::QHull::HalfEdge*) == 0x8);
    // public Technie.PhysicsCreator.QHull.HalfEdge prev
    // Size: 0x8
    // Offset: 0x28
    ::Technie::PhysicsCreator::QHull::HalfEdge* prev;
    // Field size check
    static_assert(sizeof(::Technie::PhysicsCreator::QHull::HalfEdge*) == 0x8);
    // public Technie.PhysicsCreator.QHull.HalfEdge opposite
    // Size: 0x8
    // Offset: 0x30
    ::Technie::PhysicsCreator::QHull::HalfEdge* opposite;
    // Field size check
    static_assert(sizeof(::Technie::PhysicsCreator::QHull::HalfEdge*) == 0x8);
    public:
    // Get instance field reference: public Technie.PhysicsCreator.QHull.Vertex vertex
    [[deprecated("Use field access instead!")]] ::Technie::PhysicsCreator::QHull::Vertex*& dyn_vertex();
    // Get instance field reference: public Technie.PhysicsCreator.QHull.Face face
    [[deprecated("Use field access instead!")]] ::Technie::PhysicsCreator::QHull::Face*& dyn_face();
    // Get instance field reference: public Technie.PhysicsCreator.QHull.HalfEdge next
    [[deprecated("Use field access instead!")]] ::Technie::PhysicsCreator::QHull::HalfEdge*& dyn_next();
    // Get instance field reference: public Technie.PhysicsCreator.QHull.HalfEdge prev
    [[deprecated("Use field access instead!")]] ::Technie::PhysicsCreator::QHull::HalfEdge*& dyn_prev();
    // Get instance field reference: public Technie.PhysicsCreator.QHull.HalfEdge opposite
    [[deprecated("Use field access instead!")]] ::Technie::PhysicsCreator::QHull::HalfEdge*& dyn_opposite();
    // public System.Void .ctor(Technie.PhysicsCreator.QHull.Vertex v, Technie.PhysicsCreator.QHull.Face f)
    // Offset: 0x503C4B0
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static HalfEdge* New_ctor(::Technie::PhysicsCreator::QHull::Vertex* v, ::Technie::PhysicsCreator::QHull::Face* f) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Technie::PhysicsCreator::QHull::HalfEdge::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<HalfEdge*, creationType>(v, f)));
    }
    // public System.Void .ctor()
    // Offset: 0x503D5B4
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static HalfEdge* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Technie::PhysicsCreator::QHull::HalfEdge::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<HalfEdge*, creationType>()));
    }
    // public System.Void setNext(Technie.PhysicsCreator.QHull.HalfEdge edge)
    // Offset: 0x503D5BC
    void setNext(::Technie::PhysicsCreator::QHull::HalfEdge* edge);
    // public Technie.PhysicsCreator.QHull.HalfEdge getNext()
    // Offset: 0x503D5C4
    ::Technie::PhysicsCreator::QHull::HalfEdge* getNext();
    // public System.Void setPrev(Technie.PhysicsCreator.QHull.HalfEdge edge)
    // Offset: 0x503D5CC
    void setPrev(::Technie::PhysicsCreator::QHull::HalfEdge* edge);
    // public Technie.PhysicsCreator.QHull.HalfEdge getPrev()
    // Offset: 0x503D5D4
    ::Technie::PhysicsCreator::QHull::HalfEdge* getPrev();
    // public Technie.PhysicsCreator.QHull.Face getFace()
    // Offset: 0x503D5DC
    ::Technie::PhysicsCreator::QHull::Face* getFace();
    // public Technie.PhysicsCreator.QHull.HalfEdge getOpposite()
    // Offset: 0x503D5E4
    ::Technie::PhysicsCreator::QHull::HalfEdge* getOpposite();
    // public System.Void setOpposite(Technie.PhysicsCreator.QHull.HalfEdge edge)
    // Offset: 0x503D4D4
    void setOpposite(::Technie::PhysicsCreator::QHull::HalfEdge* edge);
    // public Technie.PhysicsCreator.QHull.Vertex head()
    // Offset: 0x503D5EC
    ::Technie::PhysicsCreator::QHull::Vertex* head();
    // public Technie.PhysicsCreator.QHull.Vertex tail()
    // Offset: 0x503BE40
    ::Technie::PhysicsCreator::QHull::Vertex* tail();
    // public Technie.PhysicsCreator.QHull.Face oppositeFace()
    // Offset: 0x503C964
    ::Technie::PhysicsCreator::QHull::Face* oppositeFace();
    // public System.String getVertexString()
    // Offset: 0x503CF58
    ::StringW getVertexString();
    // public System.Double length()
    // Offset: 0x503D5F4
    double length();
    // public System.Double lengthSquared()
    // Offset: 0x503BE00
    double lengthSquared();
  }; // Technie.PhysicsCreator.QHull.HalfEdge
  #pragma pack(pop)
  static check_size<sizeof(HalfEdge), 48 + sizeof(::Technie::PhysicsCreator::QHull::HalfEdge*)> __Technie_PhysicsCreator_QHull_HalfEdgeSizeCheck;
  static_assert(sizeof(HalfEdge) == 0x38);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Technie::PhysicsCreator::QHull::HalfEdge::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: Technie::PhysicsCreator::QHull::HalfEdge::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: Technie::PhysicsCreator::QHull::HalfEdge::setNext
// Il2CppName: setNext
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Technie::PhysicsCreator::QHull::HalfEdge::*)(::Technie::PhysicsCreator::QHull::HalfEdge*)>(&Technie::PhysicsCreator::QHull::HalfEdge::setNext)> {
  static const MethodInfo* get() {
    static auto* edge = &::il2cpp_utils::GetClassFromName("Technie.PhysicsCreator.QHull", "HalfEdge")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Technie::PhysicsCreator::QHull::HalfEdge*), "setNext", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{edge});
  }
};
// Writing MetadataGetter for method: Technie::PhysicsCreator::QHull::HalfEdge::getNext
// Il2CppName: getNext
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Technie::PhysicsCreator::QHull::HalfEdge* (Technie::PhysicsCreator::QHull::HalfEdge::*)()>(&Technie::PhysicsCreator::QHull::HalfEdge::getNext)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Technie::PhysicsCreator::QHull::HalfEdge*), "getNext", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Technie::PhysicsCreator::QHull::HalfEdge::setPrev
// Il2CppName: setPrev
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Technie::PhysicsCreator::QHull::HalfEdge::*)(::Technie::PhysicsCreator::QHull::HalfEdge*)>(&Technie::PhysicsCreator::QHull::HalfEdge::setPrev)> {
  static const MethodInfo* get() {
    static auto* edge = &::il2cpp_utils::GetClassFromName("Technie.PhysicsCreator.QHull", "HalfEdge")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Technie::PhysicsCreator::QHull::HalfEdge*), "setPrev", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{edge});
  }
};
// Writing MetadataGetter for method: Technie::PhysicsCreator::QHull::HalfEdge::getPrev
// Il2CppName: getPrev
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Technie::PhysicsCreator::QHull::HalfEdge* (Technie::PhysicsCreator::QHull::HalfEdge::*)()>(&Technie::PhysicsCreator::QHull::HalfEdge::getPrev)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Technie::PhysicsCreator::QHull::HalfEdge*), "getPrev", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Technie::PhysicsCreator::QHull::HalfEdge::getFace
// Il2CppName: getFace
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Technie::PhysicsCreator::QHull::Face* (Technie::PhysicsCreator::QHull::HalfEdge::*)()>(&Technie::PhysicsCreator::QHull::HalfEdge::getFace)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Technie::PhysicsCreator::QHull::HalfEdge*), "getFace", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Technie::PhysicsCreator::QHull::HalfEdge::getOpposite
// Il2CppName: getOpposite
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Technie::PhysicsCreator::QHull::HalfEdge* (Technie::PhysicsCreator::QHull::HalfEdge::*)()>(&Technie::PhysicsCreator::QHull::HalfEdge::getOpposite)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Technie::PhysicsCreator::QHull::HalfEdge*), "getOpposite", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Technie::PhysicsCreator::QHull::HalfEdge::setOpposite
// Il2CppName: setOpposite
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Technie::PhysicsCreator::QHull::HalfEdge::*)(::Technie::PhysicsCreator::QHull::HalfEdge*)>(&Technie::PhysicsCreator::QHull::HalfEdge::setOpposite)> {
  static const MethodInfo* get() {
    static auto* edge = &::il2cpp_utils::GetClassFromName("Technie.PhysicsCreator.QHull", "HalfEdge")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Technie::PhysicsCreator::QHull::HalfEdge*), "setOpposite", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{edge});
  }
};
// Writing MetadataGetter for method: Technie::PhysicsCreator::QHull::HalfEdge::head
// Il2CppName: head
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Technie::PhysicsCreator::QHull::Vertex* (Technie::PhysicsCreator::QHull::HalfEdge::*)()>(&Technie::PhysicsCreator::QHull::HalfEdge::head)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Technie::PhysicsCreator::QHull::HalfEdge*), "head", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Technie::PhysicsCreator::QHull::HalfEdge::tail
// Il2CppName: tail
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Technie::PhysicsCreator::QHull::Vertex* (Technie::PhysicsCreator::QHull::HalfEdge::*)()>(&Technie::PhysicsCreator::QHull::HalfEdge::tail)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Technie::PhysicsCreator::QHull::HalfEdge*), "tail", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Technie::PhysicsCreator::QHull::HalfEdge::oppositeFace
// Il2CppName: oppositeFace
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Technie::PhysicsCreator::QHull::Face* (Technie::PhysicsCreator::QHull::HalfEdge::*)()>(&Technie::PhysicsCreator::QHull::HalfEdge::oppositeFace)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Technie::PhysicsCreator::QHull::HalfEdge*), "oppositeFace", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Technie::PhysicsCreator::QHull::HalfEdge::getVertexString
// Il2CppName: getVertexString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (Technie::PhysicsCreator::QHull::HalfEdge::*)()>(&Technie::PhysicsCreator::QHull::HalfEdge::getVertexString)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Technie::PhysicsCreator::QHull::HalfEdge*), "getVertexString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Technie::PhysicsCreator::QHull::HalfEdge::length
// Il2CppName: length
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<double (Technie::PhysicsCreator::QHull::HalfEdge::*)()>(&Technie::PhysicsCreator::QHull::HalfEdge::length)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Technie::PhysicsCreator::QHull::HalfEdge*), "length", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Technie::PhysicsCreator::QHull::HalfEdge::lengthSquared
// Il2CppName: lengthSquared
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<double (Technie::PhysicsCreator::QHull::HalfEdge::*)()>(&Technie::PhysicsCreator::QHull::HalfEdge::lengthSquared)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Technie::PhysicsCreator::QHull::HalfEdge*), "lengthSquared", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
