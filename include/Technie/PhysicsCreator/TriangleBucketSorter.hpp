// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Collections.Generic.IComparer`1
#include "System/Collections/Generic/IComparer_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Technie::PhysicsCreator
namespace Technie::PhysicsCreator {
  // Forward declaring type: TriangleBucket
  class TriangleBucket;
}
// Completed forward declares
// Type namespace: Technie.PhysicsCreator
namespace Technie::PhysicsCreator {
  // Forward declaring type: TriangleBucketSorter
  class TriangleBucketSorter;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Technie::PhysicsCreator::TriangleBucketSorter);
DEFINE_IL2CPP_ARG_TYPE(::Technie::PhysicsCreator::TriangleBucketSorter*, "Technie.PhysicsCreator", "TriangleBucketSorter");
// Type namespace: Technie.PhysicsCreator
namespace Technie::PhysicsCreator {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: Technie.PhysicsCreator.TriangleBucketSorter
  // [TokenAttribute] Offset: FFFFFFFF
  class TriangleBucketSorter : public ::Il2CppObject/*, public ::System::Collections::Generic::IComparer_1<::Technie::PhysicsCreator::TriangleBucket*>*/ {
    public:
    // Creating interface conversion operator: operator ::System::Collections::Generic::IComparer_1<::Technie::PhysicsCreator::TriangleBucket*>
    operator ::System::Collections::Generic::IComparer_1<::Technie::PhysicsCreator::TriangleBucket*>() noexcept {
      return *reinterpret_cast<::System::Collections::Generic::IComparer_1<::Technie::PhysicsCreator::TriangleBucket*>*>(this);
    }
    // public System.Int32 Compare(Technie.PhysicsCreator.TriangleBucket lhs, Technie.PhysicsCreator.TriangleBucket rhs)
    // Offset: 0x5024464
    int Compare(::Technie::PhysicsCreator::TriangleBucket* lhs, ::Technie::PhysicsCreator::TriangleBucket* rhs);
    // public System.Void .ctor()
    // Offset: 0x50244A4
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static TriangleBucketSorter* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Technie::PhysicsCreator::TriangleBucketSorter::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<TriangleBucketSorter*, creationType>()));
    }
  }; // Technie.PhysicsCreator.TriangleBucketSorter
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Technie::PhysicsCreator::TriangleBucketSorter::Compare
// Il2CppName: Compare
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Technie::PhysicsCreator::TriangleBucketSorter::*)(::Technie::PhysicsCreator::TriangleBucket*, ::Technie::PhysicsCreator::TriangleBucket*)>(&Technie::PhysicsCreator::TriangleBucketSorter::Compare)> {
  static const MethodInfo* get() {
    static auto* lhs = &::il2cpp_utils::GetClassFromName("Technie.PhysicsCreator", "TriangleBucket")->byval_arg;
    static auto* rhs = &::il2cpp_utils::GetClassFromName("Technie.PhysicsCreator", "TriangleBucket")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Technie::PhysicsCreator::TriangleBucketSorter*), "Compare", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{lhs, rhs});
  }
};
// Writing MetadataGetter for method: Technie::PhysicsCreator::TriangleBucketSorter::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
