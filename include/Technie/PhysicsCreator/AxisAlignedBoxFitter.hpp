// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Technie::PhysicsCreator::Rigid
namespace Technie::PhysicsCreator::Rigid {
  // Forward declaring type: Hull
  class Hull;
}
// Completed forward declares
// Type namespace: Technie.PhysicsCreator
namespace Technie::PhysicsCreator {
  // Forward declaring type: AxisAlignedBoxFitter
  class AxisAlignedBoxFitter;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Technie::PhysicsCreator::AxisAlignedBoxFitter);
DEFINE_IL2CPP_ARG_TYPE(::Technie::PhysicsCreator::AxisAlignedBoxFitter*, "Technie.PhysicsCreator", "AxisAlignedBoxFitter");
// Type namespace: Technie.PhysicsCreator
namespace Technie::PhysicsCreator {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: Technie.PhysicsCreator.AxisAlignedBoxFitter
  // [TokenAttribute] Offset: FFFFFFFF
  class AxisAlignedBoxFitter : public ::Il2CppObject {
    public:
    // public System.Void Fit(Technie.PhysicsCreator.Rigid.Hull hull, UnityEngine.Vector3[] meshVertices, System.Int32[] meshIndices)
    // Offset: 0x5023420
    void Fit(::Technie::PhysicsCreator::Rigid::Hull* hull, ::ArrayW<::UnityEngine::Vector3> meshVertices, ::ArrayW<int> meshIndices);
    // public System.Void .ctor()
    // Offset: 0x5023A48
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static AxisAlignedBoxFitter* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Technie::PhysicsCreator::AxisAlignedBoxFitter::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<AxisAlignedBoxFitter*, creationType>()));
    }
  }; // Technie.PhysicsCreator.AxisAlignedBoxFitter
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Technie::PhysicsCreator::AxisAlignedBoxFitter::Fit
// Il2CppName: Fit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Technie::PhysicsCreator::AxisAlignedBoxFitter::*)(::Technie::PhysicsCreator::Rigid::Hull*, ::ArrayW<::UnityEngine::Vector3>, ::ArrayW<int>)>(&Technie::PhysicsCreator::AxisAlignedBoxFitter::Fit)> {
  static const MethodInfo* get() {
    static auto* hull = &::il2cpp_utils::GetClassFromName("Technie.PhysicsCreator.Rigid", "Hull")->byval_arg;
    static auto* meshVertices = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3"), 1)->byval_arg;
    static auto* meshIndices = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Int32"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Technie::PhysicsCreator::AxisAlignedBoxFitter*), "Fit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{hull, meshVertices, meshIndices});
  }
};
// Writing MetadataGetter for method: Technie::PhysicsCreator::AxisAlignedBoxFitter::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
