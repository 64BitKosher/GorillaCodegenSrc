// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Including type: Unity.Collections.NativeArray`1
#include "Unity/Collections/NativeArray_1.hpp"
// Including type: Unity.Mathematics.float4
#include "Unity/Mathematics/float4.hpp"
// Including type: Unity.Mathematics.int4
#include "Unity/Mathematics/int4.hpp"
// Including type: Unity.Mathematics.float3
#include "Unity/Mathematics/float3.hpp"
// Completed includes
// Type namespace: GorillaLocomotion.Gameplay
namespace GorillaLocomotion::Gameplay {
  // Forward declaring type: VectorizedBurstRopeData
  struct VectorizedBurstRopeData;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::GorillaLocomotion::Gameplay::VectorizedBurstRopeData, "GorillaLocomotion.Gameplay", "VectorizedBurstRopeData");
// Type namespace: GorillaLocomotion.Gameplay
namespace GorillaLocomotion::Gameplay {
  // WARNING Size may be invalid!
  // WARNING Layout: Sequential may not be correctly taken into account!
  // Autogenerated type: GorillaLocomotion.Gameplay.VectorizedBurstRopeData
  // [TokenAttribute] Offset: FFFFFFFF
  struct VectorizedBurstRopeData/*, public ::System::ValueType*/ {
    public:
    public:
    // public Unity.Collections.NativeArray`1<Unity.Mathematics.float4> posX
    // Size: 0xFFFFFFFF
    // Offset: 0x0
    ::Unity::Collections::NativeArray_1<::Unity::Mathematics::float4> posX;
    // public Unity.Collections.NativeArray`1<Unity.Mathematics.float4> posY
    // Size: 0xFFFFFFFF
    // Offset: 0x10
    ::Unity::Collections::NativeArray_1<::Unity::Mathematics::float4> posY;
    // public Unity.Collections.NativeArray`1<Unity.Mathematics.float4> posZ
    // Size: 0xFFFFFFFF
    // Offset: 0x20
    ::Unity::Collections::NativeArray_1<::Unity::Mathematics::float4> posZ;
    // public Unity.Collections.NativeArray`1<Unity.Mathematics.int4> validNodes
    // Size: 0xFFFFFFFF
    // Offset: 0x30
    ::Unity::Collections::NativeArray_1<::Unity::Mathematics::int4> validNodes;
    // public Unity.Collections.NativeArray`1<Unity.Mathematics.float4> lastPosX
    // Size: 0xFFFFFFFF
    // Offset: 0x40
    ::Unity::Collections::NativeArray_1<::Unity::Mathematics::float4> lastPosX;
    // public Unity.Collections.NativeArray`1<Unity.Mathematics.float4> lastPosY
    // Size: 0xFFFFFFFF
    // Offset: 0x50
    ::Unity::Collections::NativeArray_1<::Unity::Mathematics::float4> lastPosY;
    // public Unity.Collections.NativeArray`1<Unity.Mathematics.float4> lastPosZ
    // Size: 0xFFFFFFFF
    // Offset: 0x60
    ::Unity::Collections::NativeArray_1<::Unity::Mathematics::float4> lastPosZ;
    // public Unity.Collections.NativeArray`1<Unity.Mathematics.float3> ropeRoots
    // Size: 0xFFFFFFFF
    // Offset: 0x70
    ::Unity::Collections::NativeArray_1<::Unity::Mathematics::float3> ropeRoots;
    // public Unity.Collections.NativeArray`1<Unity.Mathematics.float4> nodeMass
    // Size: 0xFFFFFFFF
    // Offset: 0x80
    ::Unity::Collections::NativeArray_1<::Unity::Mathematics::float4> nodeMass;
    public:
    // Creating value type constructor for type: VectorizedBurstRopeData
    constexpr VectorizedBurstRopeData(::Unity::Collections::NativeArray_1<::Unity::Mathematics::float4> posX_ = {}, ::Unity::Collections::NativeArray_1<::Unity::Mathematics::float4> posY_ = {}, ::Unity::Collections::NativeArray_1<::Unity::Mathematics::float4> posZ_ = {}, ::Unity::Collections::NativeArray_1<::Unity::Mathematics::int4> validNodes_ = {}, ::Unity::Collections::NativeArray_1<::Unity::Mathematics::float4> lastPosX_ = {}, ::Unity::Collections::NativeArray_1<::Unity::Mathematics::float4> lastPosY_ = {}, ::Unity::Collections::NativeArray_1<::Unity::Mathematics::float4> lastPosZ_ = {}, ::Unity::Collections::NativeArray_1<::Unity::Mathematics::float3> ropeRoots_ = {}, ::Unity::Collections::NativeArray_1<::Unity::Mathematics::float4> nodeMass_ = {}) noexcept : posX{posX_}, posY{posY_}, posZ{posZ_}, validNodes{validNodes_}, lastPosX{lastPosX_}, lastPosY{lastPosY_}, lastPosZ{lastPosZ_}, ropeRoots{ropeRoots_}, nodeMass{nodeMass_} {}
    // Creating interface conversion operator: operator ::System::ValueType
    operator ::System::ValueType() noexcept {
      return *reinterpret_cast<::System::ValueType*>(this);
    }
    // Get instance field reference: public Unity.Collections.NativeArray`1<Unity.Mathematics.float4> posX
    [[deprecated("Use field access instead!")]] ::Unity::Collections::NativeArray_1<::Unity::Mathematics::float4>& dyn_posX();
    // Get instance field reference: public Unity.Collections.NativeArray`1<Unity.Mathematics.float4> posY
    [[deprecated("Use field access instead!")]] ::Unity::Collections::NativeArray_1<::Unity::Mathematics::float4>& dyn_posY();
    // Get instance field reference: public Unity.Collections.NativeArray`1<Unity.Mathematics.float4> posZ
    [[deprecated("Use field access instead!")]] ::Unity::Collections::NativeArray_1<::Unity::Mathematics::float4>& dyn_posZ();
    // Get instance field reference: public Unity.Collections.NativeArray`1<Unity.Mathematics.int4> validNodes
    [[deprecated("Use field access instead!")]] ::Unity::Collections::NativeArray_1<::Unity::Mathematics::int4>& dyn_validNodes();
    // Get instance field reference: public Unity.Collections.NativeArray`1<Unity.Mathematics.float4> lastPosX
    [[deprecated("Use field access instead!")]] ::Unity::Collections::NativeArray_1<::Unity::Mathematics::float4>& dyn_lastPosX();
    // Get instance field reference: public Unity.Collections.NativeArray`1<Unity.Mathematics.float4> lastPosY
    [[deprecated("Use field access instead!")]] ::Unity::Collections::NativeArray_1<::Unity::Mathematics::float4>& dyn_lastPosY();
    // Get instance field reference: public Unity.Collections.NativeArray`1<Unity.Mathematics.float4> lastPosZ
    [[deprecated("Use field access instead!")]] ::Unity::Collections::NativeArray_1<::Unity::Mathematics::float4>& dyn_lastPosZ();
    // Get instance field reference: public Unity.Collections.NativeArray`1<Unity.Mathematics.float3> ropeRoots
    [[deprecated("Use field access instead!")]] ::Unity::Collections::NativeArray_1<::Unity::Mathematics::float3>& dyn_ropeRoots();
    // Get instance field reference: public Unity.Collections.NativeArray`1<Unity.Mathematics.float4> nodeMass
    [[deprecated("Use field access instead!")]] ::Unity::Collections::NativeArray_1<::Unity::Mathematics::float4>& dyn_nodeMass();
  }; // GorillaLocomotion.Gameplay.VectorizedBurstRopeData
  // WARNING Not writing size check since size may be invalid!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
