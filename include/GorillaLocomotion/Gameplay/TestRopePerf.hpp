// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GorillaLocomotion::Gameplay
namespace GorillaLocomotion::Gameplay {
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: GameObject
  class GameObject;
}
// Forward declaring namespace: System::Collections
namespace System::Collections {
  // Forward declaring type: IEnumerator
  class IEnumerator;
}
// Completed forward declares
// Type namespace: GorillaLocomotion.Gameplay
namespace GorillaLocomotion::Gameplay {
  // Forward declaring type: TestRopePerf
  class TestRopePerf;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GorillaLocomotion::Gameplay::TestRopePerf);
DEFINE_IL2CPP_ARG_TYPE(::GorillaLocomotion::Gameplay::TestRopePerf*, "GorillaLocomotion.Gameplay", "TestRopePerf");
// Type namespace: GorillaLocomotion.Gameplay
namespace GorillaLocomotion::Gameplay {
  // Size: 0x38
  #pragma pack(push, 1)
  // Autogenerated type: GorillaLocomotion.Gameplay.TestRopePerf
  // [TokenAttribute] Offset: FFFFFFFF
  class TestRopePerf : public ::UnityEngine::MonoBehaviour {
    public:
    // Nested type: ::GorillaLocomotion::Gameplay::TestRopePerf::$Start$d__3
    class $Start$d__3;
    public:
    // private UnityEngine.GameObject ropesOld
    // Size: 0x8
    // Offset: 0x20
    ::UnityEngine::GameObject* ropesOld;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // private UnityEngine.GameObject ropesCustom
    // Size: 0x8
    // Offset: 0x28
    ::UnityEngine::GameObject* ropesCustom;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // private UnityEngine.GameObject ropesCustomVectorized
    // Size: 0x8
    // Offset: 0x30
    ::UnityEngine::GameObject* ropesCustomVectorized;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    public:
    // Get instance field reference: private UnityEngine.GameObject ropesOld
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_ropesOld();
    // Get instance field reference: private UnityEngine.GameObject ropesCustom
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_ropesCustom();
    // Get instance field reference: private UnityEngine.GameObject ropesCustomVectorized
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_ropesCustomVectorized();
    // private System.Collections.IEnumerator Start()
    // Offset: 0x27ECD48
    ::System::Collections::IEnumerator* Start();
    // public System.Void .ctor()
    // Offset: 0x27ECDC8
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static TestRopePerf* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::TestRopePerf::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<TestRopePerf*, creationType>()));
    }
  }; // GorillaLocomotion.Gameplay.TestRopePerf
  #pragma pack(pop)
  static check_size<sizeof(TestRopePerf), 48 + sizeof(::UnityEngine::GameObject*)> __GorillaLocomotion_Gameplay_TestRopePerfSizeCheck;
  static_assert(sizeof(TestRopePerf) == 0x38);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GorillaLocomotion::Gameplay::TestRopePerf::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::IEnumerator* (GorillaLocomotion::Gameplay::TestRopePerf::*)()>(&GorillaLocomotion::Gameplay::TestRopePerf::Start)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GorillaLocomotion::Gameplay::TestRopePerf*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GorillaLocomotion::Gameplay::TestRopePerf::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
