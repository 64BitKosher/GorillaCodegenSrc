// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: GorillaLocomotion.Climbing.GorillaClimbable
#include "GorillaLocomotion/Climbing/GorillaClimbable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Type namespace: GorillaLocomotion.Climbing
namespace GorillaLocomotion::Climbing {
  // Forward declaring type: GorillaClimbableRef
  class GorillaClimbableRef;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GorillaLocomotion::Climbing::GorillaClimbableRef);
DEFINE_IL2CPP_ARG_TYPE(::GorillaLocomotion::Climbing::GorillaClimbableRef*, "GorillaLocomotion.Climbing", "GorillaClimbableRef");
// Type namespace: GorillaLocomotion.Climbing
namespace GorillaLocomotion::Climbing {
  // Size: 0x58
  #pragma pack(push, 1)
  // Autogenerated type: GorillaLocomotion.Climbing.GorillaClimbableRef
  // [TokenAttribute] Offset: FFFFFFFF
  class GorillaClimbableRef : public ::GorillaLocomotion::Climbing::GorillaClimbable {
    public:
    public:
    // public GorillaLocomotion.Climbing.GorillaClimbable climb
    // Size: 0x8
    // Offset: 0x50
    ::GorillaLocomotion::Climbing::GorillaClimbable* climb;
    // Field size check
    static_assert(sizeof(::GorillaLocomotion::Climbing::GorillaClimbable*) == 0x8);
    public:
    // Get instance field reference: public GorillaLocomotion.Climbing.GorillaClimbable climb
    [[deprecated("Use field access instead!")]] ::GorillaLocomotion::Climbing::GorillaClimbable*& dyn_climb();
    // public System.Void .ctor()
    // Offset: 0x27EF0B8
    // Implemented from: GorillaLocomotion.Climbing.GorillaClimbable
    // Base method: System.Void GorillaClimbable::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static GorillaClimbableRef* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Climbing::GorillaClimbableRef::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<GorillaClimbableRef*, creationType>()));
    }
  }; // GorillaLocomotion.Climbing.GorillaClimbableRef
  #pragma pack(pop)
  static check_size<sizeof(GorillaClimbableRef), 80 + sizeof(::GorillaLocomotion::Climbing::GorillaClimbable*)> __GorillaLocomotion_Climbing_GorillaClimbableRefSizeCheck;
  static_assert(sizeof(GorillaClimbableRef) == 0x58);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GorillaLocomotion::Climbing::GorillaClimbableRef::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
