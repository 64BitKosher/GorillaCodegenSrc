// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: FXSArgs
  class FXSArgs;
  // Forward declaring type: FXSystemSettings
  class FXSystemSettings;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Forward declaring type: IFXContextParems`1<T>
  template<typename T>
  class IFXContextParems_1;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE_GENERIC_CLASS(::GlobalNamespace::IFXContextParems_1, "", "IFXContextParems`1");
// Type namespace: 
namespace GlobalNamespace {
  // WARNING Size may be invalid!
  // Autogenerated type: IFXContextParems`1
  // [TokenAttribute] Offset: FFFFFFFF
  template<typename T>
  class IFXContextParems_1 {
    public:
    // public FXSystemSettings get_settings()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::GlobalNamespace::FXSystemSettings* get_settings() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IFXContextParems_1::get_settings");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::IFXContextParems_1<T>*), -1));
      return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::FXSystemSettings*, false>(this, ___internal__method);
    }
    // public System.Void OnPlayFX(T parems)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void OnPlayFX(T parems) {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IFXContextParems_1::OnPlayFX");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::IFXContextParems_1<T>*), -1));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, parems);
    }
  }; // IFXContextParems`1
  // Could not write size check! Type: IFXContextParems`1 is generic, or has no fields that are valid for size checks!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
