// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: CosmeticWardrobe
#include "GlobalNamespace/CosmeticWardrobe.hpp"
// Including type: GorillaNetworking.CosmeticsController/CosmeticItem
#include "GorillaNetworking/CosmeticsController.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: HeadModel
  class HeadModel;
  // Forward declaring type: CosmeticButton
  class CosmeticButton;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::CosmeticWardrobe::CosmeticWardrobeSelection);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::CosmeticWardrobe::CosmeticWardrobeSelection*, "", "CosmeticWardrobe/CosmeticWardrobeSelection");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x99
  #pragma pack(push, 1)
  // Autogenerated type: CosmeticWardrobe/CosmeticWardrobeSelection
  // [TokenAttribute] Offset: FFFFFFFF
  class CosmeticWardrobe::CosmeticWardrobeSelection : public ::Il2CppObject {
    public:
    public:
    // public HeadModel displayHead
    // Size: 0x8
    // Offset: 0x10
    ::GlobalNamespace::HeadModel* displayHead;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::HeadModel*) == 0x8);
    // public CosmeticButton selectButton
    // Size: 0x8
    // Offset: 0x18
    ::GlobalNamespace::CosmeticButton* selectButton;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::CosmeticButton*) == 0x8);
    // public GorillaNetworking.CosmeticsController/CosmeticItem currentCosmeticItem
    // Size: 0x79
    // Offset: 0x20
    ::GorillaNetworking::CosmeticsController::CosmeticItem currentCosmeticItem;
    // Field size check
    static_assert(sizeof(::GorillaNetworking::CosmeticsController::CosmeticItem) == 0x79);
    public:
    // Get instance field reference: public HeadModel displayHead
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::HeadModel*& dyn_displayHead();
    // Get instance field reference: public CosmeticButton selectButton
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::CosmeticButton*& dyn_selectButton();
    // Get instance field reference: public GorillaNetworking.CosmeticsController/CosmeticItem currentCosmeticItem
    [[deprecated("Use field access instead!")]] ::GorillaNetworking::CosmeticsController::CosmeticItem& dyn_currentCosmeticItem();
    // public System.Void .ctor()
    // Offset: 0x26D2A0C
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static CosmeticWardrobe::CosmeticWardrobeSelection* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CosmeticWardrobe::CosmeticWardrobeSelection::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<CosmeticWardrobe::CosmeticWardrobeSelection*, creationType>()));
    }
  }; // CosmeticWardrobe/CosmeticWardrobeSelection
  #pragma pack(pop)
  static check_size<sizeof(CosmeticWardrobe::CosmeticWardrobeSelection), 32 + sizeof(::GorillaNetworking::CosmeticsController::CosmeticItem)> __GlobalNamespace_CosmeticWardrobe_CosmeticWardrobeSelectionSizeCheck;
  static_assert(sizeof(CosmeticWardrobe::CosmeticWardrobeSelection) == 0x99);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::CosmeticWardrobe::CosmeticWardrobeSelection::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
