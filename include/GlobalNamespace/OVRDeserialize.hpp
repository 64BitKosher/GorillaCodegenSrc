// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: ValueType
  class ValueType;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Forward declaring type: OVRDeserialize
  class OVRDeserialize;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::OVRDeserialize);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::OVRDeserialize*, "", "OVRDeserialize");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: OVRDeserialize
  // [TokenAttribute] Offset: FFFFFFFF
  class OVRDeserialize : public ::Il2CppObject {
    public:
    // Nested type: ::GlobalNamespace::OVRDeserialize::DisplayRefreshRateChangedData
    struct DisplayRefreshRateChangedData;
    // Nested type: ::GlobalNamespace::OVRDeserialize::SpaceQueryResultsData
    struct SpaceQueryResultsData;
    // Nested type: ::GlobalNamespace::OVRDeserialize::SpaceQueryCompleteData
    struct SpaceQueryCompleteData;
    // Nested type: ::GlobalNamespace::OVRDeserialize::SceneCaptureCompleteData
    struct SceneCaptureCompleteData;
    // Nested type: ::GlobalNamespace::OVRDeserialize::SpatialAnchorCreateCompleteData
    struct SpatialAnchorCreateCompleteData;
    // Nested type: ::GlobalNamespace::OVRDeserialize::SpaceSetComponentStatusCompleteData
    struct SpaceSetComponentStatusCompleteData;
    // Nested type: ::GlobalNamespace::OVRDeserialize::SpaceSaveCompleteData
    struct SpaceSaveCompleteData;
    // Nested type: ::GlobalNamespace::OVRDeserialize::SpaceEraseCompleteData
    struct SpaceEraseCompleteData;
    // Nested type: ::GlobalNamespace::OVRDeserialize::SpaceShareResultData
    struct SpaceShareResultData;
    // Nested type: ::GlobalNamespace::OVRDeserialize::SpaceListSaveResultData
    struct SpaceListSaveResultData;
    // static public T ByteArrayToStructure(System.Byte[] bytes)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class T>
    static T ByteArrayToStructure(::ArrayW<uint8_t> bytes) {
      static_assert(std::is_convertible_v<T, ::System::ValueType*>);
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRDeserialize::ByteArrayToStructure");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRDeserialize", "ByteArrayToStructure", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bytes)})));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}));
      return ::il2cpp_utils::RunMethodRethrow<T, false>(static_cast<Il2CppObject*>(nullptr), ___generic__method, bytes);
    }
  }; // OVRDeserialize
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::OVRDeserialize::ByteArrayToStructure
// Il2CppName: ByteArrayToStructure
// Cannot write MetadataGetter for generic methods!
