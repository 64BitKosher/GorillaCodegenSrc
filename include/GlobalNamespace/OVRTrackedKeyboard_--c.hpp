// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: OVRTrackedKeyboard
#include "GlobalNamespace/OVRTrackedKeyboard.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Action`1<T>
  template<typename T>
  class Action_1;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::OVRTrackedKeyboard::$$c);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::OVRTrackedKeyboard::$$c*, "", "OVRTrackedKeyboard/<>c");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: OVRTrackedKeyboard/<>c
  // [TokenAttribute] Offset: FFFFFFFF
  // [CompilerGeneratedAttribute] Offset: FFFFFFFF
  class OVRTrackedKeyboard::$$c : public ::Il2CppObject {
    public:
    // Get static field: static public readonly OVRTrackedKeyboard/<>c <>9
    static ::GlobalNamespace::OVRTrackedKeyboard::$$c* _get_$$9();
    // Set static field: static public readonly OVRTrackedKeyboard/<>c <>9
    static void _set_$$9(::GlobalNamespace::OVRTrackedKeyboard::$$c* value);
    // Get static field: static public System.Action`1<OVRTrackedKeyboard/TrackedKeyboardSetActiveEvent> <>9__110_0
    static ::System::Action_1<::GlobalNamespace::OVRTrackedKeyboard::TrackedKeyboardSetActiveEvent>* _get_$$9__110_0();
    // Set static field: static public System.Action`1<OVRTrackedKeyboard/TrackedKeyboardSetActiveEvent> <>9__110_0
    static void _set_$$9__110_0(::System::Action_1<::GlobalNamespace::OVRTrackedKeyboard::TrackedKeyboardSetActiveEvent>* value);
    // Get static field: static public System.Action`1<OVRTrackedKeyboard/TrackedKeyboardVisibilityChangedEvent> <>9__110_1
    static ::System::Action_1<::GlobalNamespace::OVRTrackedKeyboard::TrackedKeyboardVisibilityChangedEvent>* _get_$$9__110_1();
    // Set static field: static public System.Action`1<OVRTrackedKeyboard/TrackedKeyboardVisibilityChangedEvent> <>9__110_1
    static void _set_$$9__110_1(::System::Action_1<::GlobalNamespace::OVRTrackedKeyboard::TrackedKeyboardVisibilityChangedEvent>* value);
    // static private System.Void .cctor()
    // Offset: 0x4931C8C
    static void _cctor();
    // public System.Void .ctor()
    // Offset: 0x4931CF4
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static OVRTrackedKeyboard::$$c* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboard::$$c::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<OVRTrackedKeyboard::$$c*, creationType>()));
    }
    // System.Void <.ctor>b__110_0(OVRTrackedKeyboard/TrackedKeyboardSetActiveEvent <p0>)
    // Offset: 0x4931CFC
    void $_ctor$b__110_0(::GlobalNamespace::OVRTrackedKeyboard::TrackedKeyboardSetActiveEvent $p0$);
    // System.Void <.ctor>b__110_1(OVRTrackedKeyboard/TrackedKeyboardVisibilityChangedEvent <p0>)
    // Offset: 0x4931D00
    void $_ctor$b__110_1(::GlobalNamespace::OVRTrackedKeyboard::TrackedKeyboardVisibilityChangedEvent $p0$);
  }; // OVRTrackedKeyboard/<>c
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::OVRTrackedKeyboard::$$c::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&GlobalNamespace::OVRTrackedKeyboard::$$c::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::OVRTrackedKeyboard::$$c*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::OVRTrackedKeyboard::$$c::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: GlobalNamespace::OVRTrackedKeyboard::$$c::$_ctor$b__110_0
// Il2CppName: <.ctor>b__110_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::OVRTrackedKeyboard::$$c::*)(::GlobalNamespace::OVRTrackedKeyboard::TrackedKeyboardSetActiveEvent)>(&GlobalNamespace::OVRTrackedKeyboard::$$c::$_ctor$b__110_0)> {
  static const MethodInfo* get() {
    static auto* $p0$ = &::il2cpp_utils::GetClassFromName("", "OVRTrackedKeyboard/TrackedKeyboardSetActiveEvent")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::OVRTrackedKeyboard::$$c*), "<.ctor>b__110_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{$p0$});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::OVRTrackedKeyboard::$$c::$_ctor$b__110_1
// Il2CppName: <.ctor>b__110_1
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::OVRTrackedKeyboard::$$c::*)(::GlobalNamespace::OVRTrackedKeyboard::TrackedKeyboardVisibilityChangedEvent)>(&GlobalNamespace::OVRTrackedKeyboard::$$c::$_ctor$b__110_1)> {
  static const MethodInfo* get() {
    static auto* $p0$ = &::il2cpp_utils::GetClassFromName("", "OVRTrackedKeyboard/TrackedKeyboardVisibilityChangedEvent")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::OVRTrackedKeyboard::$$c*), "<.ctor>b__110_1", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{$p0$});
  }
};
