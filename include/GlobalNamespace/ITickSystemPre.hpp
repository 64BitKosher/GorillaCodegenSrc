// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/byref.hpp"
// Completed includes
// Type namespace: 
namespace GlobalNamespace {
  // Forward declaring type: ITickSystemPre
  class ITickSystemPre;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::ITickSystemPre);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::ITickSystemPre*, "", "ITickSystemPre");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x0
  #pragma pack(push, 1)
  // Autogenerated type: ITickSystemPre
  // [TokenAttribute] Offset: FFFFFFFF
  class ITickSystemPre {
    public:
    // public System.Boolean get_PreTickRunning()
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool get_PreTickRunning();
    // public System.Void set_PreTickRunning(System.Boolean value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void set_PreTickRunning(bool value);
    // public System.Void PreTick()
    // Offset: 0xFFFFFFFFFFFFFFFF
    void PreTick();
  }; // ITickSystemPre
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::ITickSystemPre::get_PreTickRunning
// Il2CppName: get_PreTickRunning
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (GlobalNamespace::ITickSystemPre::*)()>(&GlobalNamespace::ITickSystemPre::get_PreTickRunning)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::ITickSystemPre*), "get_PreTickRunning", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::ITickSystemPre::set_PreTickRunning
// Il2CppName: set_PreTickRunning
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::ITickSystemPre::*)(bool)>(&GlobalNamespace::ITickSystemPre::set_PreTickRunning)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::ITickSystemPre*), "set_PreTickRunning", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::ITickSystemPre::PreTick
// Il2CppName: PreTick
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::ITickSystemPre::*)()>(&GlobalNamespace::ITickSystemPre::PreTick)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::ITickSystemPre*), "PreTick", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
