// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: AudioClip
  class AudioClip;
  // Forward declaring type: AudioSource
  class AudioSource;
  // Forward declaring type: Font
  class Font;
}
// Forward declaring namespace: UnityEngine::UI
namespace UnityEngine::UI {
  // Forward declaring type: Text
  class Text;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Forward declaring type: DevErrorSoundAnnoyer
  class DevErrorSoundAnnoyer;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::DevErrorSoundAnnoyer);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::DevErrorSoundAnnoyer*, "", "DevErrorSoundAnnoyer");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x48
  #pragma pack(push, 1)
  // Autogenerated type: DevErrorSoundAnnoyer
  // [TokenAttribute] Offset: FFFFFFFF
  class DevErrorSoundAnnoyer : public ::UnityEngine::MonoBehaviour {
    public:
    public:
    // private UnityEngine.AudioClip errorSound
    // Size: 0x8
    // Offset: 0x20
    ::UnityEngine::AudioClip* errorSound;
    // Field size check
    static_assert(sizeof(::UnityEngine::AudioClip*) == 0x8);
    // private UnityEngine.AudioSource audioSource
    // Size: 0x8
    // Offset: 0x28
    ::UnityEngine::AudioSource* audioSource;
    // Field size check
    static_assert(sizeof(::UnityEngine::AudioSource*) == 0x8);
    // private UnityEngine.UI.Text errorUIText
    // Size: 0x8
    // Offset: 0x30
    ::UnityEngine::UI::Text* errorUIText;
    // Field size check
    static_assert(sizeof(::UnityEngine::UI::Text*) == 0x8);
    // private UnityEngine.Font errorFont
    // Size: 0x8
    // Offset: 0x38
    ::UnityEngine::Font* errorFont;
    // Field size check
    static_assert(sizeof(::UnityEngine::Font*) == 0x8);
    // public System.String displayedText
    // Size: 0x8
    // Offset: 0x40
    ::StringW displayedText;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    public:
    // Get instance field reference: private UnityEngine.AudioClip errorSound
    [[deprecated("Use field access instead!")]] ::UnityEngine::AudioClip*& dyn_errorSound();
    // Get instance field reference: private UnityEngine.AudioSource audioSource
    [[deprecated("Use field access instead!")]] ::UnityEngine::AudioSource*& dyn_audioSource();
    // Get instance field reference: private UnityEngine.UI.Text errorUIText
    [[deprecated("Use field access instead!")]] ::UnityEngine::UI::Text*& dyn_errorUIText();
    // Get instance field reference: private UnityEngine.Font errorFont
    [[deprecated("Use field access instead!")]] ::UnityEngine::Font*& dyn_errorFont();
    // Get instance field reference: public System.String displayedText
    [[deprecated("Use field access instead!")]] ::StringW& dyn_displayedText();
    // public System.Void .ctor()
    // Offset: 0x279AB88
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static DevErrorSoundAnnoyer* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DevErrorSoundAnnoyer::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<DevErrorSoundAnnoyer*, creationType>()));
    }
  }; // DevErrorSoundAnnoyer
  #pragma pack(pop)
  static check_size<sizeof(DevErrorSoundAnnoyer), 64 + sizeof(::StringW)> __GlobalNamespace_DevErrorSoundAnnoyerSizeCheck;
  static_assert(sizeof(DevErrorSoundAnnoyer) == 0x48);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::DevErrorSoundAnnoyer::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
