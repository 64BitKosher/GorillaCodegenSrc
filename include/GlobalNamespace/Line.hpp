// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Type namespace: 
namespace GlobalNamespace {
  // Forward declaring type: Line
  class Line;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::Line);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::Line*, "", "Line");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x38
  #pragma pack(push, 1)
  // Autogenerated type: Line
  // [TokenAttribute] Offset: FFFFFFFF
  class Line : public ::UnityEngine::MonoBehaviour {
    public:
    public:
    // public UnityEngine.Vector3 p0
    // Size: 0xC
    // Offset: 0x20
    ::UnityEngine::Vector3 p0;
    // Field size check
    static_assert(sizeof(::UnityEngine::Vector3) == 0xC);
    // public UnityEngine.Vector3 p1
    // Size: 0xC
    // Offset: 0x2C
    ::UnityEngine::Vector3 p1;
    // Field size check
    static_assert(sizeof(::UnityEngine::Vector3) == 0xC);
    public:
    // Get instance field reference: public UnityEngine.Vector3 p0
    [[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& dyn_p0();
    // Get instance field reference: public UnityEngine.Vector3 p1
    [[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& dyn_p1();
    // public System.Void .ctor()
    // Offset: 0x277DBCC
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static Line* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Line::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<Line*, creationType>()));
    }
  }; // Line
  #pragma pack(pop)
  static check_size<sizeof(Line), 44 + sizeof(::UnityEngine::Vector3)> __GlobalNamespace_LineSizeCheck;
  static_assert(sizeof(Line) == 0x38);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::Line::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
