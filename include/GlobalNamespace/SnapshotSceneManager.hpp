// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: OVRAnchor
  struct OVRAnchor;
}
// Forward declaring namespace: System::Collections
namespace System::Collections {
  // Forward declaring type: IEnumerator
  class IEnumerator;
}
// Forward declaring namespace: System::Threading::Tasks
namespace System::Threading::Tasks {
  // Forward declaring type: Task`1<TResult>
  template<typename TResult>
  class Task_1;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Forward declaring type: SnapshotSceneManager
  class SnapshotSceneManager;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::SnapshotSceneManager);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::SnapshotSceneManager*, "", "SnapshotSceneManager");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x30
  #pragma pack(push, 1)
  // Autogenerated type: SnapshotSceneManager
  // [TokenAttribute] Offset: FFFFFFFF
  class SnapshotSceneManager : public ::UnityEngine::MonoBehaviour {
    public:
    // Nested type: ::GlobalNamespace::SnapshotSceneManager::SceneSnapshot
    class SceneSnapshot;
    // Nested type: ::GlobalNamespace::SnapshotSceneManager::SnapshotComparer
    class SnapshotComparer;
    // Nested type: ::GlobalNamespace::SnapshotSceneManager::$LoadSceneSnapshotAsync$d__6
    struct $LoadSceneSnapshotAsync$d__6;
    // Nested type: ::GlobalNamespace::SnapshotSceneManager::$UpdateScene$d__5
    struct $UpdateScene$d__5;
    // Nested type: ::GlobalNamespace::SnapshotSceneManager::$UpdateScenePeriodically$d__4
    class $UpdateScenePeriodically$d__4;
    public:
    // public System.Single UpdateFrequencySeconds
    // Size: 0x4
    // Offset: 0x20
    float UpdateFrequencySeconds;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // Padding between fields: UpdateFrequencySeconds and: snapshot
    char __padding0[0x4] = {};
    // private SnapshotSceneManager/SceneSnapshot _snapshot
    // Size: 0x8
    // Offset: 0x28
    ::GlobalNamespace::SnapshotSceneManager::SceneSnapshot* snapshot;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::SnapshotSceneManager::SceneSnapshot*) == 0x8);
    public:
    // Get instance field reference: public System.Single UpdateFrequencySeconds
    [[deprecated("Use field access instead!")]] float& dyn_UpdateFrequencySeconds();
    // Get instance field reference: private SnapshotSceneManager/SceneSnapshot _snapshot
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::SnapshotSceneManager::SceneSnapshot*& dyn__snapshot();
    // private System.Void Start()
    // Offset: 0x2944934
    void Start();
    // private System.Void Update()
    // Offset: 0x29449C8
    void Update();
    // private System.Collections.IEnumerator UpdateScenePeriodically()
    // Offset: 0x294495C
    ::System::Collections::IEnumerator* UpdateScenePeriodically();
    // private System.Void UpdateScene()
    // Offset: 0x2944A5C
    void UpdateScene();
    // private System.Threading.Tasks.Task`1<SnapshotSceneManager/SceneSnapshot> LoadSceneSnapshotAsync()
    // Offset: 0x2944B10
    ::System::Threading::Tasks::Task_1<::GlobalNamespace::SnapshotSceneManager::SceneSnapshot*>* LoadSceneSnapshotAsync();
    // private System.String AnchorInfo(OVRAnchor anchor)
    // Offset: 0x2944BFC
    ::StringW AnchorInfo(::GlobalNamespace::OVRAnchor anchor);
    // public System.Void .ctor()
    // Offset: 0x2944D78
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static SnapshotSceneManager* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SnapshotSceneManager::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<SnapshotSceneManager*, creationType>()));
    }
  }; // SnapshotSceneManager
  #pragma pack(pop)
  static check_size<sizeof(SnapshotSceneManager), 40 + sizeof(::GlobalNamespace::SnapshotSceneManager::SceneSnapshot*)> __GlobalNamespace_SnapshotSceneManagerSizeCheck;
  static_assert(sizeof(SnapshotSceneManager) == 0x30);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::SnapshotSceneManager::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::SnapshotSceneManager::*)()>(&GlobalNamespace::SnapshotSceneManager::Start)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::SnapshotSceneManager*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::SnapshotSceneManager::Update
// Il2CppName: Update
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::SnapshotSceneManager::*)()>(&GlobalNamespace::SnapshotSceneManager::Update)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::SnapshotSceneManager*), "Update", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::SnapshotSceneManager::UpdateScenePeriodically
// Il2CppName: UpdateScenePeriodically
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::IEnumerator* (GlobalNamespace::SnapshotSceneManager::*)()>(&GlobalNamespace::SnapshotSceneManager::UpdateScenePeriodically)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::SnapshotSceneManager*), "UpdateScenePeriodically", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::SnapshotSceneManager::UpdateScene
// Il2CppName: UpdateScene
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::SnapshotSceneManager::*)()>(&GlobalNamespace::SnapshotSceneManager::UpdateScene)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::SnapshotSceneManager*), "UpdateScene", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::SnapshotSceneManager::LoadSceneSnapshotAsync
// Il2CppName: LoadSceneSnapshotAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Threading::Tasks::Task_1<::GlobalNamespace::SnapshotSceneManager::SceneSnapshot*>* (GlobalNamespace::SnapshotSceneManager::*)()>(&GlobalNamespace::SnapshotSceneManager::LoadSceneSnapshotAsync)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::SnapshotSceneManager*), "LoadSceneSnapshotAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::SnapshotSceneManager::AnchorInfo
// Il2CppName: AnchorInfo
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (GlobalNamespace::SnapshotSceneManager::*)(::GlobalNamespace::OVRAnchor)>(&GlobalNamespace::SnapshotSceneManager::AnchorInfo)> {
  static const MethodInfo* get() {
    static auto* anchor = &::il2cpp_utils::GetClassFromName("", "OVRAnchor")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::SnapshotSceneManager*), "AnchorInfo", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{anchor});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::SnapshotSceneManager::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
