// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Interop
#include "GlobalNamespace/Interop.hpp"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: IntPtr
  struct IntPtr;
  // Forward declaring type: ReadOnlySpan`1<T>
  template<typename T>
  struct ReadOnlySpan_1;
}
// Forward declaring namespace: Microsoft::Win32::SafeHandles
namespace Microsoft::Win32::SafeHandles {
  // Forward declaring type: SafeFileHandle
  class SafeFileHandle;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::Interop::Sys);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::Interop::Sys*, "", "Interop/Sys");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: Interop/Sys
  // [TokenAttribute] Offset: FFFFFFFF
  class Interop::Sys : public ::Il2CppObject {
    public:
    // Nested type: ::GlobalNamespace::Interop::Sys::NodeType
    struct NodeType;
    // Nested type: ::GlobalNamespace::Interop::Sys::DirectoryEntry
    struct DirectoryEntry;
    // Nested type: ::GlobalNamespace::Interop::Sys::FileStatus
    struct FileStatus;
    // Nested type: ::GlobalNamespace::Interop::Sys::FileStatusFlags
    struct FileStatusFlags;
    // Nested type: ::GlobalNamespace::Interop::Sys::Permissions
    struct Permissions;
    // Get static field: static readonly System.Boolean CanSetHiddenFlag
    static bool _get_CanSetHiddenFlag();
    // Set static field: static readonly System.Boolean CanSetHiddenFlag
    static void _set_CanSetHiddenFlag(bool value);
    // static Interop/ErrorInfo GetLastErrorInfo()
    // Offset: 0x449F6C0
    static ::GlobalNamespace::Interop::ErrorInfo GetLastErrorInfo();
    // static System.String StrError(System.Int32 platformErrno)
    // Offset: 0x449F9F8
    static ::StringW StrError(int platformErrno);
    // static Interop/Error ConvertErrorPlatformToPal(System.Int32 platformErrno)
    // Offset: 0x449F9DC
    static ::GlobalNamespace::Interop::Error ConvertErrorPlatformToPal(int platformErrno);
    // static System.Int32 ConvertErrorPalToPlatform(Interop/Error error)
    // Offset: 0x449F9F4
    static int ConvertErrorPalToPlatform(::GlobalNamespace::Interop::Error error);
    // static private System.Byte* StrErrorR(System.Int32 platformErrno, System.Byte* buffer, System.Int32 bufferSize)
    // Offset: 0x449FBC8
    static uint8_t* StrErrorR(int platformErrno, uint8_t* buffer, int bufferSize);
    // static System.Void GetNonCryptographicallySecureRandomBytes(System.Byte* buffer, System.Int32 length)
    // Offset: 0x449F970
    static void GetNonCryptographicallySecureRandomBytes(uint8_t* buffer, int length);
    // static System.IntPtr OpenDir(System.String path)
    // Offset: 0x449FBCC
    static ::System::IntPtr OpenDir(::StringW path);
    // static System.Int32 GetReadDirRBufferSize()
    // Offset: 0x449FC00
    static int GetReadDirRBufferSize();
    // static System.Int32 ReadDirR(System.IntPtr dir, System.Byte* buffer, System.Int32 bufferSize, out Interop/Sys/DirectoryEntry outputEntry)
    // Offset: 0x449FC04
    static int ReadDirR(::System::IntPtr dir, uint8_t* buffer, int bufferSize, ByRef<::GlobalNamespace::Interop::Sys::DirectoryEntry> outputEntry);
    // static System.Int32 CloseDir(System.IntPtr dir)
    // Offset: 0x449FC08
    static int CloseDir(::System::IntPtr dir);
    // static private System.Int32 ReadLink(System.String path, System.Byte[] buffer, System.Int32 bufferSize)
    // Offset: 0x449FC24
    static int ReadLink(::StringW path, ::ArrayW<uint8_t> buffer, int bufferSize);
    // static public System.String ReadLink(System.String path)
    // Offset: 0x449FC70
    static ::StringW ReadLink(::StringW path);
    // static System.Int32 Stat(System.String path, out Interop/Sys/FileStatus output)
    // Offset: 0x449FE88
    static int Stat(::StringW path, ByRef<::GlobalNamespace::Interop::Sys::FileStatus> output);
    // static System.Int32 LStat(System.String path, out Interop/Sys/FileStatus output)
    // Offset: 0x449FEC4
    static int LStat(::StringW path, ByRef<::GlobalNamespace::Interop::Sys::FileStatus> output);
    // static System.Int32 Symlink(System.String target, System.String linkPath)
    // Offset: 0x449FF00
    static int Symlink(::StringW target, ::StringW linkPath);
    // static System.Int32 ChMod(System.String path, System.Int32 mode)
    // Offset: 0x449FF54
    static int ChMod(::StringW path, int mode);
    // static System.Int32 CopyFile(Microsoft.Win32.SafeHandles.SafeFileHandle source, Microsoft.Win32.SafeHandles.SafeFileHandle destination)
    // Offset: 0x449FF90
    static int CopyFile(::Microsoft::Win32::SafeHandles::SafeFileHandle* source, ::Microsoft::Win32::SafeHandles::SafeFileHandle* destination);
    // static System.UInt32 GetEGid()
    // Offset: 0x44A0044
    static uint GetEGid();
    // static System.UInt32 GetEUid()
    // Offset: 0x44A0048
    static uint GetEUid();
    // static System.Int32 LChflags(System.String path, System.UInt32 flags)
    // Offset: 0x44A004C
    static int LChflags(::StringW path, uint flags);
    // static private System.Int32 LChflagsCanSetHiddenFlag()
    // Offset: 0x44A0088
    static int LChflagsCanSetHiddenFlag();
    // static System.Int32 Link(System.String source, System.String link)
    // Offset: 0x44A008C
    static int Link(::StringW source, ::StringW link);
    // static System.Int32 MkDir(System.String path, System.Int32 mode)
    // Offset: 0x44A00E0
    static int MkDir(::StringW path, int mode);
    // static System.Int32 Rename(System.String oldPath, System.String newPath)
    // Offset: 0x44A011C
    static int Rename(::StringW oldPath, ::StringW newPath);
    // static System.Int32 RmDir(System.String path)
    // Offset: 0x44A0170
    static int RmDir(::StringW path);
    // static System.Int32 Stat(ref System.Byte path, out Interop/Sys/FileStatus output)
    // Offset: 0x44A01A4
    static int Stat(ByRef<uint8_t> path, ByRef<::GlobalNamespace::Interop::Sys::FileStatus> output);
    // static System.Int32 Stat(System.ReadOnlySpan`1<System.Char> path, out Interop/Sys/FileStatus output)
    // Offset: 0x44A01C0
    static int Stat(::System::ReadOnlySpan_1<::Il2CppChar> path, ByRef<::GlobalNamespace::Interop::Sys::FileStatus> output);
    // static System.Int32 LStat(ref System.Byte path, out Interop/Sys/FileStatus output)
    // Offset: 0x44A02F8
    static int LStat(ByRef<uint8_t> path, ByRef<::GlobalNamespace::Interop::Sys::FileStatus> output);
    // static System.Int32 LStat(System.ReadOnlySpan`1<System.Char> path, out Interop/Sys/FileStatus output)
    // Offset: 0x44A0314
    static int LStat(::System::ReadOnlySpan_1<::Il2CppChar> path, ByRef<::GlobalNamespace::Interop::Sys::FileStatus> output);
    // static System.Int32 Unlink(System.String pathname)
    // Offset: 0x44A044C
    static int Unlink(::StringW pathname);
    // static System.Int32 DoubleToString(System.Double value, System.Byte* format, System.Byte* buffer, System.Int32 bufferLength)
    // Offset: 0x44A0480
    static int DoubleToString(double value, uint8_t* format, uint8_t* buffer, int bufferLength);
    // static private System.Void .cctor()
    // Offset: 0x44A0484
    static void _cctor();
  }; // Interop/Sys
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::Interop::Sys::GetLastErrorInfo
// Il2CppName: GetLastErrorInfo
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::Interop::ErrorInfo (*)()>(&GlobalNamespace::Interop::Sys::GetLastErrorInfo)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::Interop::Sys*), "GetLastErrorInfo", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::Interop::Sys::StrError
// Il2CppName: StrError
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(int)>(&GlobalNamespace::Interop::Sys::StrError)> {
  static const MethodInfo* get() {
    static auto* platformErrno = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::Interop::Sys*), "StrError", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{platformErrno});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::Interop::Sys::ConvertErrorPlatformToPal
// Il2CppName: ConvertErrorPlatformToPal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::Interop::Error (*)(int)>(&GlobalNamespace::Interop::Sys::ConvertErrorPlatformToPal)> {
  static const MethodInfo* get() {
    static auto* platformErrno = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::Interop::Sys*), "ConvertErrorPlatformToPal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{platformErrno});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::Interop::Sys::ConvertErrorPalToPlatform
// Il2CppName: ConvertErrorPalToPlatform
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::GlobalNamespace::Interop::Error)>(&GlobalNamespace::Interop::Sys::ConvertErrorPalToPlatform)> {
  static const MethodInfo* get() {
    static auto* error = &::il2cpp_utils::GetClassFromName("", "Interop/Error")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::Interop::Sys*), "ConvertErrorPalToPlatform", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{error});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::Interop::Sys::StrErrorR
// Il2CppName: StrErrorR
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint8_t* (*)(int, uint8_t*, int)>(&GlobalNamespace::Interop::Sys::StrErrorR)> {
  static const MethodInfo* get() {
    static auto* platformErrno = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* buffer = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Byte"))->byval_arg;
    static auto* bufferSize = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::Interop::Sys*), "StrErrorR", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{platformErrno, buffer, bufferSize});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::Interop::Sys::GetNonCryptographicallySecureRandomBytes
// Il2CppName: GetNonCryptographicallySecureRandomBytes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(uint8_t*, int)>(&GlobalNamespace::Interop::Sys::GetNonCryptographicallySecureRandomBytes)> {
  static const MethodInfo* get() {
    static auto* buffer = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Byte"))->byval_arg;
    static auto* length = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::Interop::Sys*), "GetNonCryptographicallySecureRandomBytes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{buffer, length});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::Interop::Sys::OpenDir
// Il2CppName: OpenDir
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::StringW)>(&GlobalNamespace::Interop::Sys::OpenDir)> {
  static const MethodInfo* get() {
    static auto* path = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::Interop::Sys*), "OpenDir", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{path});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::Interop::Sys::GetReadDirRBufferSize
// Il2CppName: GetReadDirRBufferSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)()>(&GlobalNamespace::Interop::Sys::GetReadDirRBufferSize)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::Interop::Sys*), "GetReadDirRBufferSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::Interop::Sys::ReadDirR
// Il2CppName: ReadDirR
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::System::IntPtr, uint8_t*, int, ByRef<::GlobalNamespace::Interop::Sys::DirectoryEntry>)>(&GlobalNamespace::Interop::Sys::ReadDirR)> {
  static const MethodInfo* get() {
    static auto* dir = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* buffer = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Byte"))->byval_arg;
    static auto* bufferSize = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* outputEntry = &::il2cpp_utils::GetClassFromName("", "Interop/Sys/DirectoryEntry")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::Interop::Sys*), "ReadDirR", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{dir, buffer, bufferSize, outputEntry});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::Interop::Sys::CloseDir
// Il2CppName: CloseDir
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::System::IntPtr)>(&GlobalNamespace::Interop::Sys::CloseDir)> {
  static const MethodInfo* get() {
    static auto* dir = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::Interop::Sys*), "CloseDir", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{dir});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::Interop::Sys::ReadLink
// Il2CppName: ReadLink
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::StringW, ::ArrayW<uint8_t>, int)>(&GlobalNamespace::Interop::Sys::ReadLink)> {
  static const MethodInfo* get() {
    static auto* path = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* buffer = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    static auto* bufferSize = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::Interop::Sys*), "ReadLink", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{path, buffer, bufferSize});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::Interop::Sys::ReadLink
// Il2CppName: ReadLink
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::StringW)>(&GlobalNamespace::Interop::Sys::ReadLink)> {
  static const MethodInfo* get() {
    static auto* path = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::Interop::Sys*), "ReadLink", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{path});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::Interop::Sys::Stat
// Il2CppName: Stat
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::StringW, ByRef<::GlobalNamespace::Interop::Sys::FileStatus>)>(&GlobalNamespace::Interop::Sys::Stat)> {
  static const MethodInfo* get() {
    static auto* path = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* output = &::il2cpp_utils::GetClassFromName("", "Interop/Sys/FileStatus")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::Interop::Sys*), "Stat", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{path, output});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::Interop::Sys::LStat
// Il2CppName: LStat
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::StringW, ByRef<::GlobalNamespace::Interop::Sys::FileStatus>)>(&GlobalNamespace::Interop::Sys::LStat)> {
  static const MethodInfo* get() {
    static auto* path = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* output = &::il2cpp_utils::GetClassFromName("", "Interop/Sys/FileStatus")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::Interop::Sys*), "LStat", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{path, output});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::Interop::Sys::Symlink
// Il2CppName: Symlink
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::StringW, ::StringW)>(&GlobalNamespace::Interop::Sys::Symlink)> {
  static const MethodInfo* get() {
    static auto* target = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* linkPath = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::Interop::Sys*), "Symlink", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{target, linkPath});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::Interop::Sys::ChMod
// Il2CppName: ChMod
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::StringW, int)>(&GlobalNamespace::Interop::Sys::ChMod)> {
  static const MethodInfo* get() {
    static auto* path = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* mode = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::Interop::Sys*), "ChMod", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{path, mode});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::Interop::Sys::CopyFile
// Il2CppName: CopyFile
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::Microsoft::Win32::SafeHandles::SafeFileHandle*, ::Microsoft::Win32::SafeHandles::SafeFileHandle*)>(&GlobalNamespace::Interop::Sys::CopyFile)> {
  static const MethodInfo* get() {
    static auto* source = &::il2cpp_utils::GetClassFromName("Microsoft.Win32.SafeHandles", "SafeFileHandle")->byval_arg;
    static auto* destination = &::il2cpp_utils::GetClassFromName("Microsoft.Win32.SafeHandles", "SafeFileHandle")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::Interop::Sys*), "CopyFile", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{source, destination});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::Interop::Sys::GetEGid
// Il2CppName: GetEGid
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (*)()>(&GlobalNamespace::Interop::Sys::GetEGid)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::Interop::Sys*), "GetEGid", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::Interop::Sys::GetEUid
// Il2CppName: GetEUid
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (*)()>(&GlobalNamespace::Interop::Sys::GetEUid)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::Interop::Sys*), "GetEUid", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::Interop::Sys::LChflags
// Il2CppName: LChflags
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::StringW, uint)>(&GlobalNamespace::Interop::Sys::LChflags)> {
  static const MethodInfo* get() {
    static auto* path = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* flags = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::Interop::Sys*), "LChflags", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{path, flags});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::Interop::Sys::LChflagsCanSetHiddenFlag
// Il2CppName: LChflagsCanSetHiddenFlag
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)()>(&GlobalNamespace::Interop::Sys::LChflagsCanSetHiddenFlag)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::Interop::Sys*), "LChflagsCanSetHiddenFlag", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::Interop::Sys::Link
// Il2CppName: Link
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::StringW, ::StringW)>(&GlobalNamespace::Interop::Sys::Link)> {
  static const MethodInfo* get() {
    static auto* source = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* link = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::Interop::Sys*), "Link", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{source, link});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::Interop::Sys::MkDir
// Il2CppName: MkDir
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::StringW, int)>(&GlobalNamespace::Interop::Sys::MkDir)> {
  static const MethodInfo* get() {
    static auto* path = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* mode = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::Interop::Sys*), "MkDir", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{path, mode});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::Interop::Sys::Rename
// Il2CppName: Rename
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::StringW, ::StringW)>(&GlobalNamespace::Interop::Sys::Rename)> {
  static const MethodInfo* get() {
    static auto* oldPath = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* newPath = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::Interop::Sys*), "Rename", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{oldPath, newPath});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::Interop::Sys::RmDir
// Il2CppName: RmDir
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::StringW)>(&GlobalNamespace::Interop::Sys::RmDir)> {
  static const MethodInfo* get() {
    static auto* path = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::Interop::Sys*), "RmDir", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{path});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::Interop::Sys::Stat
// Il2CppName: Stat
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(ByRef<uint8_t>, ByRef<::GlobalNamespace::Interop::Sys::FileStatus>)>(&GlobalNamespace::Interop::Sys::Stat)> {
  static const MethodInfo* get() {
    static auto* path = &::il2cpp_utils::GetClassFromName("System", "Byte")->this_arg;
    static auto* output = &::il2cpp_utils::GetClassFromName("", "Interop/Sys/FileStatus")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::Interop::Sys*), "Stat", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{path, output});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::Interop::Sys::Stat
// Il2CppName: Stat
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::System::ReadOnlySpan_1<::Il2CppChar>, ByRef<::GlobalNamespace::Interop::Sys::FileStatus>)>(&GlobalNamespace::Interop::Sys::Stat)> {
  static const MethodInfo* get() {
    static auto* path = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "ReadOnlySpan`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Char")})->byval_arg;
    static auto* output = &::il2cpp_utils::GetClassFromName("", "Interop/Sys/FileStatus")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::Interop::Sys*), "Stat", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{path, output});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::Interop::Sys::LStat
// Il2CppName: LStat
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(ByRef<uint8_t>, ByRef<::GlobalNamespace::Interop::Sys::FileStatus>)>(&GlobalNamespace::Interop::Sys::LStat)> {
  static const MethodInfo* get() {
    static auto* path = &::il2cpp_utils::GetClassFromName("System", "Byte")->this_arg;
    static auto* output = &::il2cpp_utils::GetClassFromName("", "Interop/Sys/FileStatus")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::Interop::Sys*), "LStat", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{path, output});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::Interop::Sys::LStat
// Il2CppName: LStat
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::System::ReadOnlySpan_1<::Il2CppChar>, ByRef<::GlobalNamespace::Interop::Sys::FileStatus>)>(&GlobalNamespace::Interop::Sys::LStat)> {
  static const MethodInfo* get() {
    static auto* path = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "ReadOnlySpan`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Char")})->byval_arg;
    static auto* output = &::il2cpp_utils::GetClassFromName("", "Interop/Sys/FileStatus")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::Interop::Sys*), "LStat", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{path, output});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::Interop::Sys::Unlink
// Il2CppName: Unlink
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::StringW)>(&GlobalNamespace::Interop::Sys::Unlink)> {
  static const MethodInfo* get() {
    static auto* pathname = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::Interop::Sys*), "Unlink", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{pathname});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::Interop::Sys::DoubleToString
// Il2CppName: DoubleToString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(double, uint8_t*, uint8_t*, int)>(&GlobalNamespace::Interop::Sys::DoubleToString)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Double")->byval_arg;
    static auto* format = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Byte"))->byval_arg;
    static auto* buffer = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Byte"))->byval_arg;
    static auto* bufferLength = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::Interop::Sys*), "DoubleToString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value, format, buffer, bufferLength});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::Interop::Sys::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&GlobalNamespace::Interop::Sys::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::Interop::Sys*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
