// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: GorillaGameManager
#include "GlobalNamespace/GorillaGameManager.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Photon::Pun
namespace Photon::Pun {
  // Forward declaring type: PhotonStream
  class PhotonStream;
  // Forward declaring type: PhotonMessageInfo
  struct PhotonMessageInfo;
}
// Forward declaring namespace: GorillaGameModes
namespace GorillaGameModes {
  // Forward declaring type: GameModeType
  struct GameModeType;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Forward declaring type: CasualGameMode
  class CasualGameMode;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::CasualGameMode);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::CasualGameMode*, "", "CasualGameMode");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0xD8
  #pragma pack(push, 1)
  // Autogenerated type: CasualGameMode
  // [TokenAttribute] Offset: FFFFFFFF
  class CasualGameMode : public ::GlobalNamespace::GorillaGameManager {
    public:
    // public override System.Void OnSerializeRead(Photon.Pun.PhotonStream stream, Photon.Pun.PhotonMessageInfo info)
    // Offset: 0x26DD820
    // Implemented from: GorillaGameManager
    // Base method: System.Void GorillaGameManager::OnSerializeRead(Photon.Pun.PhotonStream stream, Photon.Pun.PhotonMessageInfo info)
    void OnSerializeRead(::Photon::Pun::PhotonStream* stream, ::Photon::Pun::PhotonMessageInfo info);
    // public override System.Void OnSerializeWrite(Photon.Pun.PhotonStream stream, Photon.Pun.PhotonMessageInfo info)
    // Offset: 0x26DD824
    // Implemented from: GorillaGameManager
    // Base method: System.Void GorillaGameManager::OnSerializeWrite(Photon.Pun.PhotonStream stream, Photon.Pun.PhotonMessageInfo info)
    void OnSerializeWrite(::Photon::Pun::PhotonStream* stream, ::Photon::Pun::PhotonMessageInfo info);
    // public override GorillaGameModes.GameModeType GameType()
    // Offset: 0x26DD828
    // Implemented from: GorillaGameManager
    // Base method: GorillaGameModes.GameModeType GorillaGameManager::GameType()
    ::GorillaGameModes::GameModeType GameType();
    // public override System.String GameModeName()
    // Offset: 0x26DD830
    // Implemented from: GorillaGameManager
    // Base method: System.String GorillaGameManager::GameModeName()
    ::StringW GameModeName();
    // public System.Void .ctor()
    // Offset: 0x26DD870
    // Implemented from: GorillaGameManager
    // Base method: System.Void GorillaGameManager::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static CasualGameMode* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CasualGameMode::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<CasualGameMode*, creationType>()));
    }
  }; // CasualGameMode
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::CasualGameMode::OnSerializeRead
// Il2CppName: OnSerializeRead
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::CasualGameMode::*)(::Photon::Pun::PhotonStream*, ::Photon::Pun::PhotonMessageInfo)>(&GlobalNamespace::CasualGameMode::OnSerializeRead)> {
  static const MethodInfo* get() {
    static auto* stream = &::il2cpp_utils::GetClassFromName("Photon.Pun", "PhotonStream")->byval_arg;
    static auto* info = &::il2cpp_utils::GetClassFromName("Photon.Pun", "PhotonMessageInfo")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::CasualGameMode*), "OnSerializeRead", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stream, info});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::CasualGameMode::OnSerializeWrite
// Il2CppName: OnSerializeWrite
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::CasualGameMode::*)(::Photon::Pun::PhotonStream*, ::Photon::Pun::PhotonMessageInfo)>(&GlobalNamespace::CasualGameMode::OnSerializeWrite)> {
  static const MethodInfo* get() {
    static auto* stream = &::il2cpp_utils::GetClassFromName("Photon.Pun", "PhotonStream")->byval_arg;
    static auto* info = &::il2cpp_utils::GetClassFromName("Photon.Pun", "PhotonMessageInfo")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::CasualGameMode*), "OnSerializeWrite", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stream, info});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::CasualGameMode::GameType
// Il2CppName: GameType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GorillaGameModes::GameModeType (GlobalNamespace::CasualGameMode::*)()>(&GlobalNamespace::CasualGameMode::GameType)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::CasualGameMode*), "GameType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::CasualGameMode::GameModeName
// Il2CppName: GameModeName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (GlobalNamespace::CasualGameMode::*)()>(&GlobalNamespace::CasualGameMode::GameModeName)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::CasualGameMode*), "GameModeName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::CasualGameMode::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
