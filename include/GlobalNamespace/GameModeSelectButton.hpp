// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: GorillaPressableButton
#include "GlobalNamespace/GorillaPressableButton.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: GameModePages
  class GameModePages;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Forward declaring type: GameModeSelectButton
  class GameModeSelectButton;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::GameModeSelectButton);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::GameModeSelectButton*, "", "GameModeSelectButton");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x7C
  #pragma pack(push, 1)
  // Autogenerated type: GameModeSelectButton
  // [TokenAttribute] Offset: FFFFFFFF
  class GameModeSelectButton : public ::GlobalNamespace::GorillaPressableButton {
    public:
    public:
    // GameModePages selector
    // Size: 0x8
    // Offset: 0x70
    ::GlobalNamespace::GameModePages* selector;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::GameModePages*) == 0x8);
    // System.Int32 buttonIndex
    // Size: 0x4
    // Offset: 0x78
    int buttonIndex;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Get instance field reference: GameModePages selector
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::GameModePages*& dyn_selector();
    // Get instance field reference: System.Int32 buttonIndex
    [[deprecated("Use field access instead!")]] int& dyn_buttonIndex();
    // public override System.Void ButtonActivation()
    // Offset: 0x26DE2E0
    // Implemented from: GorillaPressableButton
    // Base method: System.Void GorillaPressableButton::ButtonActivation()
    void ButtonActivation();
    // public System.Void .ctor()
    // Offset: 0x26DE30C
    // Implemented from: GorillaPressableButton
    // Base method: System.Void GorillaPressableButton::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static GameModeSelectButton* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameModeSelectButton::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<GameModeSelectButton*, creationType>()));
    }
  }; // GameModeSelectButton
  #pragma pack(pop)
  static check_size<sizeof(GameModeSelectButton), 120 + sizeof(int)> __GlobalNamespace_GameModeSelectButtonSizeCheck;
  static_assert(sizeof(GameModeSelectButton) == 0x7C);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::GameModeSelectButton::ButtonActivation
// Il2CppName: ButtonActivation
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::GameModeSelectButton::*)()>(&GlobalNamespace::GameModeSelectButton::ButtonActivation)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::GameModeSelectButton*), "ButtonActivation", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::GameModeSelectButton::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
