// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: OVRPlugin
#include "GlobalNamespace/OVRPlugin.hpp"
// Including type: OVRPlugin/Qpl
#include "GlobalNamespace/OVRPlugin_Qpl.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Version
  class Version;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::OVRPlugin::OVRP_1_79_0);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::OVRPlugin::OVRP_1_79_0*, "", "OVRPlugin/OVRP_1_79_0");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: OVRPlugin/OVRP_1_79_0
  // [TokenAttribute] Offset: FFFFFFFF
  class OVRPlugin::OVRP_1_79_0 : public ::Il2CppObject {
    public:
    // Get static field: static public readonly System.Version version
    static ::System::Version* _get_version();
    // Set static field: static public readonly System.Version version
    static void _set_version(::System::Version* value);
    // static public OVRPlugin/Result ovrp_ShareSpaces(System.UInt64* spaces, System.UInt32 numSpaces, System.UInt64* userHandles, System.UInt32 numUsers, out System.UInt64 requestId)
    // Offset: 0x49165A8
    static ::GlobalNamespace::OVRPlugin::Result ovrp_ShareSpaces(uint64_t* spaces, uint numSpaces, uint64_t* userHandles, uint numUsers, ByRef<uint64_t> requestId);
    // static public OVRPlugin/Result ovrp_SaveSpaceList(System.UInt64* spaces, System.UInt32 numSpaces, OVRPlugin/SpaceStorageLocation location, out System.UInt64 requestId)
    // Offset: 0x4916654
    static ::GlobalNamespace::OVRPlugin::Result ovrp_SaveSpaceList(uint64_t* spaces, uint numSpaces, ::GlobalNamespace::OVRPlugin::SpaceStorageLocation location, ByRef<uint64_t> requestId);
    // static public OVRPlugin/Result ovrp_GetSpaceUserId(in System.UInt64 spaceUserHandle, out System.UInt64 spaceUserId)
    // Offset: 0x49166F0
    static ::GlobalNamespace::OVRPlugin::Result ovrp_GetSpaceUserId(ByRef<uint64_t> spaceUserHandle, ByRef<uint64_t> spaceUserId);
    // static public OVRPlugin/Result ovrp_CreateSpaceUser(in System.UInt64 spaceUserId, out System.UInt64 spaceUserHandle)
    // Offset: 0x4916774
    static ::GlobalNamespace::OVRPlugin::Result ovrp_CreateSpaceUser(ByRef<uint64_t> spaceUserId, ByRef<uint64_t> spaceUserHandle);
    // static public OVRPlugin/Result ovrp_DestroySpaceUser(in System.UInt64 userHandle)
    // Offset: 0x49167F8
    static ::GlobalNamespace::OVRPlugin::Result ovrp_DestroySpaceUser(ByRef<uint64_t> userHandle);
    // static public OVRPlugin/Result ovrp_LocateSpace2(out OVRPlugin/SpaceLocationf location, in System.UInt64 space, OVRPlugin/TrackingOrigin trackingOrigin)
    // Offset: 0x4916874
    static ::GlobalNamespace::OVRPlugin::Result ovrp_LocateSpace2(ByRef<::GlobalNamespace::OVRPlugin::SpaceLocationf> location, ByRef<uint64_t> space, ::GlobalNamespace::OVRPlugin::TrackingOrigin trackingOrigin);
    // static public OVRPlugin/Result ovrp_DeclareUser(in System.UInt64 userId, out System.UInt64 userHandle)
    // Offset: 0x4916908
    static ::GlobalNamespace::OVRPlugin::Result ovrp_DeclareUser(ByRef<uint64_t> userId, ByRef<uint64_t> userHandle);
    // static public OVRPlugin/Result ovrp_QplMarkerStart(System.Int32 markerId, System.Int32 instanceKey, System.Int64 timestampMs)
    // Offset: 0x490A97C
    static ::GlobalNamespace::OVRPlugin::Result ovrp_QplMarkerStart(int markerId, int instanceKey, int64_t timestampMs);
    // static public OVRPlugin/Result ovrp_QplMarkerEnd(System.Int32 markerId, OVRPlugin/Qpl/ResultType resultTypeId, System.Int32 instanceKey, System.Int64 timestampMs)
    // Offset: 0x490AB00
    static ::GlobalNamespace::OVRPlugin::Result ovrp_QplMarkerEnd(int markerId, ::GlobalNamespace::OVRPlugin::Qpl::ResultType resultTypeId, int instanceKey, int64_t timestampMs);
    // static public OVRPlugin/Result ovrp_QplMarkerPointCached(System.Int32 markerId, System.Int32 nameHandle, System.Int32 instanceKey, System.Int64 timestampMs)
    // Offset: 0x490AC8C
    static ::GlobalNamespace::OVRPlugin::Result ovrp_QplMarkerPointCached(int markerId, int nameHandle, int instanceKey, int64_t timestampMs);
    // static public OVRPlugin/Result ovrp_QplMarkerAnnotation(System.Int32 markerId, System.String annotationKey, System.String annotationValue, System.Int32 instanceKey)
    // Offset: 0x490AE18
    static ::GlobalNamespace::OVRPlugin::Result ovrp_QplMarkerAnnotation(int markerId, ::StringW annotationKey, ::StringW annotationValue, int instanceKey);
    // static public OVRPlugin/Result ovrp_QplCreateMarkerHandle(System.String name, out System.Int32 nameHandle)
    // Offset: 0x490AFBC
    static ::GlobalNamespace::OVRPlugin::Result ovrp_QplCreateMarkerHandle(::StringW name, ByRef<int> nameHandle);
    // static public OVRPlugin/Result ovrp_QplDestroyMarkerHandle(System.Int32 nameHandle)
    // Offset: 0x490B120
    static ::GlobalNamespace::OVRPlugin::Result ovrp_QplDestroyMarkerHandle(int nameHandle);
    // static private System.Void .cctor()
    // Offset: 0x4916988
    static void _cctor();
  }; // OVRPlugin/OVRP_1_79_0
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::OVRPlugin::OVRP_1_79_0::ovrp_ShareSpaces
// Il2CppName: ovrp_ShareSpaces
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::OVRPlugin::Result (*)(uint64_t*, uint, uint64_t*, uint, ByRef<uint64_t>)>(&GlobalNamespace::OVRPlugin::OVRP_1_79_0::ovrp_ShareSpaces)> {
  static const MethodInfo* get() {
    static auto* spaces = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "UInt64"))->byval_arg;
    static auto* numSpaces = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    static auto* userHandles = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "UInt64"))->byval_arg;
    static auto* numUsers = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    static auto* requestId = &::il2cpp_utils::GetClassFromName("System", "UInt64")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::OVRPlugin::OVRP_1_79_0*), "ovrp_ShareSpaces", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{spaces, numSpaces, userHandles, numUsers, requestId});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::OVRPlugin::OVRP_1_79_0::ovrp_SaveSpaceList
// Il2CppName: ovrp_SaveSpaceList
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::OVRPlugin::Result (*)(uint64_t*, uint, ::GlobalNamespace::OVRPlugin::SpaceStorageLocation, ByRef<uint64_t>)>(&GlobalNamespace::OVRPlugin::OVRP_1_79_0::ovrp_SaveSpaceList)> {
  static const MethodInfo* get() {
    static auto* spaces = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "UInt64"))->byval_arg;
    static auto* numSpaces = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    static auto* location = &::il2cpp_utils::GetClassFromName("", "OVRPlugin/SpaceStorageLocation")->byval_arg;
    static auto* requestId = &::il2cpp_utils::GetClassFromName("System", "UInt64")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::OVRPlugin::OVRP_1_79_0*), "ovrp_SaveSpaceList", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{spaces, numSpaces, location, requestId});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::OVRPlugin::OVRP_1_79_0::ovrp_GetSpaceUserId
// Il2CppName: ovrp_GetSpaceUserId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::OVRPlugin::Result (*)(ByRef<uint64_t>, ByRef<uint64_t>)>(&GlobalNamespace::OVRPlugin::OVRP_1_79_0::ovrp_GetSpaceUserId)> {
  static const MethodInfo* get() {
    static auto* spaceUserHandle = &::il2cpp_utils::GetClassFromName("System", "UInt64")->this_arg;
    static auto* spaceUserId = &::il2cpp_utils::GetClassFromName("System", "UInt64")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::OVRPlugin::OVRP_1_79_0*), "ovrp_GetSpaceUserId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{spaceUserHandle, spaceUserId});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::OVRPlugin::OVRP_1_79_0::ovrp_CreateSpaceUser
// Il2CppName: ovrp_CreateSpaceUser
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::OVRPlugin::Result (*)(ByRef<uint64_t>, ByRef<uint64_t>)>(&GlobalNamespace::OVRPlugin::OVRP_1_79_0::ovrp_CreateSpaceUser)> {
  static const MethodInfo* get() {
    static auto* spaceUserId = &::il2cpp_utils::GetClassFromName("System", "UInt64")->this_arg;
    static auto* spaceUserHandle = &::il2cpp_utils::GetClassFromName("System", "UInt64")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::OVRPlugin::OVRP_1_79_0*), "ovrp_CreateSpaceUser", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{spaceUserId, spaceUserHandle});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::OVRPlugin::OVRP_1_79_0::ovrp_DestroySpaceUser
// Il2CppName: ovrp_DestroySpaceUser
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::OVRPlugin::Result (*)(ByRef<uint64_t>)>(&GlobalNamespace::OVRPlugin::OVRP_1_79_0::ovrp_DestroySpaceUser)> {
  static const MethodInfo* get() {
    static auto* userHandle = &::il2cpp_utils::GetClassFromName("System", "UInt64")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::OVRPlugin::OVRP_1_79_0*), "ovrp_DestroySpaceUser", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{userHandle});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::OVRPlugin::OVRP_1_79_0::ovrp_LocateSpace2
// Il2CppName: ovrp_LocateSpace2
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::OVRPlugin::Result (*)(ByRef<::GlobalNamespace::OVRPlugin::SpaceLocationf>, ByRef<uint64_t>, ::GlobalNamespace::OVRPlugin::TrackingOrigin)>(&GlobalNamespace::OVRPlugin::OVRP_1_79_0::ovrp_LocateSpace2)> {
  static const MethodInfo* get() {
    static auto* location = &::il2cpp_utils::GetClassFromName("", "OVRPlugin/SpaceLocationf")->this_arg;
    static auto* space = &::il2cpp_utils::GetClassFromName("System", "UInt64")->this_arg;
    static auto* trackingOrigin = &::il2cpp_utils::GetClassFromName("", "OVRPlugin/TrackingOrigin")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::OVRPlugin::OVRP_1_79_0*), "ovrp_LocateSpace2", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{location, space, trackingOrigin});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::OVRPlugin::OVRP_1_79_0::ovrp_DeclareUser
// Il2CppName: ovrp_DeclareUser
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::OVRPlugin::Result (*)(ByRef<uint64_t>, ByRef<uint64_t>)>(&GlobalNamespace::OVRPlugin::OVRP_1_79_0::ovrp_DeclareUser)> {
  static const MethodInfo* get() {
    static auto* userId = &::il2cpp_utils::GetClassFromName("System", "UInt64")->this_arg;
    static auto* userHandle = &::il2cpp_utils::GetClassFromName("System", "UInt64")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::OVRPlugin::OVRP_1_79_0*), "ovrp_DeclareUser", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{userId, userHandle});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::OVRPlugin::OVRP_1_79_0::ovrp_QplMarkerStart
// Il2CppName: ovrp_QplMarkerStart
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::OVRPlugin::Result (*)(int, int, int64_t)>(&GlobalNamespace::OVRPlugin::OVRP_1_79_0::ovrp_QplMarkerStart)> {
  static const MethodInfo* get() {
    static auto* markerId = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* instanceKey = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* timestampMs = &::il2cpp_utils::GetClassFromName("System", "Int64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::OVRPlugin::OVRP_1_79_0*), "ovrp_QplMarkerStart", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{markerId, instanceKey, timestampMs});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::OVRPlugin::OVRP_1_79_0::ovrp_QplMarkerEnd
// Il2CppName: ovrp_QplMarkerEnd
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::OVRPlugin::Result (*)(int, ::GlobalNamespace::OVRPlugin::Qpl::ResultType, int, int64_t)>(&GlobalNamespace::OVRPlugin::OVRP_1_79_0::ovrp_QplMarkerEnd)> {
  static const MethodInfo* get() {
    static auto* markerId = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* resultTypeId = &::il2cpp_utils::GetClassFromName("", "OVRPlugin/Qpl/ResultType")->byval_arg;
    static auto* instanceKey = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* timestampMs = &::il2cpp_utils::GetClassFromName("System", "Int64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::OVRPlugin::OVRP_1_79_0*), "ovrp_QplMarkerEnd", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{markerId, resultTypeId, instanceKey, timestampMs});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::OVRPlugin::OVRP_1_79_0::ovrp_QplMarkerPointCached
// Il2CppName: ovrp_QplMarkerPointCached
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::OVRPlugin::Result (*)(int, int, int, int64_t)>(&GlobalNamespace::OVRPlugin::OVRP_1_79_0::ovrp_QplMarkerPointCached)> {
  static const MethodInfo* get() {
    static auto* markerId = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* nameHandle = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* instanceKey = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* timestampMs = &::il2cpp_utils::GetClassFromName("System", "Int64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::OVRPlugin::OVRP_1_79_0*), "ovrp_QplMarkerPointCached", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{markerId, nameHandle, instanceKey, timestampMs});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::OVRPlugin::OVRP_1_79_0::ovrp_QplMarkerAnnotation
// Il2CppName: ovrp_QplMarkerAnnotation
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::OVRPlugin::Result (*)(int, ::StringW, ::StringW, int)>(&GlobalNamespace::OVRPlugin::OVRP_1_79_0::ovrp_QplMarkerAnnotation)> {
  static const MethodInfo* get() {
    static auto* markerId = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* annotationKey = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* annotationValue = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* instanceKey = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::OVRPlugin::OVRP_1_79_0*), "ovrp_QplMarkerAnnotation", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{markerId, annotationKey, annotationValue, instanceKey});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::OVRPlugin::OVRP_1_79_0::ovrp_QplCreateMarkerHandle
// Il2CppName: ovrp_QplCreateMarkerHandle
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::OVRPlugin::Result (*)(::StringW, ByRef<int>)>(&GlobalNamespace::OVRPlugin::OVRP_1_79_0::ovrp_QplCreateMarkerHandle)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* nameHandle = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::OVRPlugin::OVRP_1_79_0*), "ovrp_QplCreateMarkerHandle", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name, nameHandle});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::OVRPlugin::OVRP_1_79_0::ovrp_QplDestroyMarkerHandle
// Il2CppName: ovrp_QplDestroyMarkerHandle
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::OVRPlugin::Result (*)(int)>(&GlobalNamespace::OVRPlugin::OVRP_1_79_0::ovrp_QplDestroyMarkerHandle)> {
  static const MethodInfo* get() {
    static auto* nameHandle = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::OVRPlugin::OVRP_1_79_0*), "ovrp_QplDestroyMarkerHandle", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{nameHandle});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::OVRPlugin::OVRP_1_79_0::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&GlobalNamespace::OVRPlugin::OVRP_1_79_0::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::OVRPlugin::OVRP_1_79_0*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
