// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Including type: System.IEquatable`1
#include "System/IEquatable_1.hpp"
// Including type: System.IDisposable
#include "System/IDisposable.hpp"
// Including type: System.Guid
#include "System/Guid.hpp"
// Including type: System.MulticastDelegate
#include "System/MulticastDelegate.hpp"
// Including type: System.Runtime.CompilerServices.INotifyCompletion
#include "System/Runtime/CompilerServices/INotifyCompletion.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Skipping declaration: CallbackInvoker because it is already included!
  // Skipping declaration: CallbackRemover because it is already included!
  // Skipping declaration: InternalDataRemover because it is already included!
  // Skipping declaration: InternalData`1 because it is already included!
  // Skipping declaration: IncrementalResultSubscriber`1 because it is already included!
  // Skipping declaration: Awaiter because it is already included!
  // Skipping declaration: Callback because it is already included!
  // Skipping declaration: CallbackWithState`1 because it is already included!
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: HashSet`1<T>
  template<typename T>
  class HashSet_1;
  // Forward declaring type: Dictionary`2<TKey, TValue>
  template<typename TKey, typename TValue>
  class Dictionary_2;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Action
  class Action;
  // Forward declaring type: Action`1<T>
  template<typename T>
  class Action_1;
  // Forward declaring type: Action`2<T1, T2>
  template<typename T1, typename T2>
  class Action_2;
  // Forward declaring type: IAsyncResult
  class IAsyncResult;
  // Forward declaring type: AsyncCallback
  class AsyncCallback;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Forward declaring type: OVRTask`1<TResult>
  template<typename TResult>
  struct OVRTask_1;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE_GENERIC_STRUCT(::GlobalNamespace::OVRTask_1, "", "OVRTask`1");
// Type namespace: 
namespace GlobalNamespace {
  // WARNING Size may be invalid!
  // WARNING Layout: Sequential may not be correctly taken into account!
  // Autogenerated type: OVRTask`1
  // [TokenAttribute] Offset: FFFFFFFF
  // [IsReadOnlyAttribute] Offset: FFFFFFFF
  template<typename TResult>
  struct OVRTask_1/*, public ::System::ValueType, public ::System::IEquatable_1<::GlobalNamespace::OVRTask_1<TResult>>, public ::System::IDisposable*/ {
    public:
    // Nested type: ::GlobalNamespace::OVRTask_1::CallbackInvoker<TResult>
    class CallbackInvoker;
    // Nested type: ::GlobalNamespace::OVRTask_1::CallbackRemover<TResult>
    class CallbackRemover;
    // Nested type: ::GlobalNamespace::OVRTask_1::InternalDataRemover<TResult>
    class InternalDataRemover;
    // Nested type: ::GlobalNamespace::OVRTask_1::InternalData_1<TResult, T>
    template<typename T>
    class InternalData_1;
    // Nested type: ::GlobalNamespace::OVRTask_1::IncrementalResultSubscriber_1<TResult, T>
    template<typename T>
    class IncrementalResultSubscriber_1;
    // Nested type: ::GlobalNamespace::OVRTask_1::Awaiter<TResult>
    struct Awaiter;
    // Nested type: ::GlobalNamespace::OVRTask_1::Callback<TResult>
    struct Callback;
    // Nested type: ::GlobalNamespace::OVRTask_1::CallbackWithState_1<TResult, T>
    template<typename T>
    struct CallbackWithState_1;
    // WARNING Size may be invalid!
    // Autogenerated type: OVRTask`1/CallbackInvoker
    // [TokenAttribute] Offset: FFFFFFFF
    class CallbackInvoker : public ::il2cpp_utils::il2cpp_type_check::NestedType, public ::System::MulticastDelegate {
      public:
      using declaring_type = OVRTask_1<TResult>;
      static constexpr std::string_view NESTED_NAME = "CallbackInvoker";
      static constexpr bool IS_VALUE_TYPE = false;
      // public System.Void .ctor(System.Object object, System.IntPtr method)
      // Offset: 0xFFFFFFFFFFFFFFFF
      template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
      static typename OVRTask_1<TResult>::CallbackInvoker* New_ctor(::Il2CppObject* object, ::System::IntPtr method) {
        static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTask_1::CallbackInvoker::.ctor");
        return THROW_UNLESS((::il2cpp_utils::New<typename OVRTask_1<TResult>::CallbackInvoker*, creationType>(object, method)));
      }
      // public System.Void Invoke(System.Guid guid, TResult result)
      // Offset: 0xFFFFFFFFFFFFFFFF
      void Invoke(::System::Guid guid, TResult result) {
        static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTask_1::CallbackInvoker::Invoke");
        auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(typename ::GlobalNamespace::OVRTask_1<TResult>::CallbackInvoker*), -1));
        ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, guid, result);
      }
      // public System.IAsyncResult BeginInvoke(System.Guid guid, TResult result, System.AsyncCallback callback, System.Object object)
      // Offset: 0xFFFFFFFFFFFFFFFF
      ::System::IAsyncResult* BeginInvoke(::System::Guid guid, TResult result, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
        static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTask_1::CallbackInvoker::BeginInvoke");
        auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(typename ::GlobalNamespace::OVRTask_1<TResult>::CallbackInvoker*), -1));
        return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, guid, result, callback, object);
      }
      // public System.Void EndInvoke(System.IAsyncResult result)
      // Offset: 0xFFFFFFFFFFFFFFFF
      void EndInvoke(::System::IAsyncResult* result) {
        static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTask_1::CallbackInvoker::EndInvoke");
        auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(typename ::GlobalNamespace::OVRTask_1<TResult>::CallbackInvoker*), -1));
        ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
      }
    }; // OVRTask`1/CallbackInvoker
    // Could not write size check! Type: OVRTask`1/CallbackInvoker is generic, or has no fields that are valid for size checks!
    // WARNING Size may be invalid!
    // Autogenerated type: OVRTask`1/CallbackRemover
    // [TokenAttribute] Offset: FFFFFFFF
    class CallbackRemover : public ::il2cpp_utils::il2cpp_type_check::NestedType, public ::System::MulticastDelegate {
      public:
      using declaring_type = OVRTask_1<TResult>;
      static constexpr std::string_view NESTED_NAME = "CallbackRemover";
      static constexpr bool IS_VALUE_TYPE = false;
      // public System.Void .ctor(System.Object object, System.IntPtr method)
      // Offset: 0xFFFFFFFFFFFFFFFF
      template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
      static typename OVRTask_1<TResult>::CallbackRemover* New_ctor(::Il2CppObject* object, ::System::IntPtr method) {
        static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTask_1::CallbackRemover::.ctor");
        return THROW_UNLESS((::il2cpp_utils::New<typename OVRTask_1<TResult>::CallbackRemover*, creationType>(object, method)));
      }
      // public System.Boolean Invoke(System.Guid guid)
      // Offset: 0xFFFFFFFFFFFFFFFF
      bool Invoke(::System::Guid guid) {
        static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTask_1::CallbackRemover::Invoke");
        auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(typename ::GlobalNamespace::OVRTask_1<TResult>::CallbackRemover*), -1));
        return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, guid);
      }
      // public System.IAsyncResult BeginInvoke(System.Guid guid, System.AsyncCallback callback, System.Object object)
      // Offset: 0xFFFFFFFFFFFFFFFF
      ::System::IAsyncResult* BeginInvoke(::System::Guid guid, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
        static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTask_1::CallbackRemover::BeginInvoke");
        auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(typename ::GlobalNamespace::OVRTask_1<TResult>::CallbackRemover*), -1));
        return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, guid, callback, object);
      }
      // public System.Boolean EndInvoke(System.IAsyncResult result)
      // Offset: 0xFFFFFFFFFFFFFFFF
      bool EndInvoke(::System::IAsyncResult* result) {
        static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTask_1::CallbackRemover::EndInvoke");
        auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(typename ::GlobalNamespace::OVRTask_1<TResult>::CallbackRemover*), -1));
        return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, result);
      }
    }; // OVRTask`1/CallbackRemover
    // Could not write size check! Type: OVRTask`1/CallbackRemover is generic, or has no fields that are valid for size checks!
    // WARNING Size may be invalid!
    // Autogenerated type: OVRTask`1/InternalDataRemover
    // [TokenAttribute] Offset: FFFFFFFF
    class InternalDataRemover : public ::il2cpp_utils::il2cpp_type_check::NestedType, public ::System::MulticastDelegate {
      public:
      using declaring_type = OVRTask_1<TResult>;
      static constexpr std::string_view NESTED_NAME = "InternalDataRemover";
      static constexpr bool IS_VALUE_TYPE = false;
      // public System.Void .ctor(System.Object object, System.IntPtr method)
      // Offset: 0xFFFFFFFFFFFFFFFF
      template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
      static typename OVRTask_1<TResult>::InternalDataRemover* New_ctor(::Il2CppObject* object, ::System::IntPtr method) {
        static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTask_1::InternalDataRemover::.ctor");
        return THROW_UNLESS((::il2cpp_utils::New<typename OVRTask_1<TResult>::InternalDataRemover*, creationType>(object, method)));
      }
      // public System.Boolean Invoke(System.Guid guid)
      // Offset: 0xFFFFFFFFFFFFFFFF
      bool Invoke(::System::Guid guid) {
        static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTask_1::InternalDataRemover::Invoke");
        auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(typename ::GlobalNamespace::OVRTask_1<TResult>::InternalDataRemover*), -1));
        return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, guid);
      }
      // public System.IAsyncResult BeginInvoke(System.Guid guid, System.AsyncCallback callback, System.Object object)
      // Offset: 0xFFFFFFFFFFFFFFFF
      ::System::IAsyncResult* BeginInvoke(::System::Guid guid, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
        static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTask_1::InternalDataRemover::BeginInvoke");
        auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(typename ::GlobalNamespace::OVRTask_1<TResult>::InternalDataRemover*), -1));
        return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, guid, callback, object);
      }
      // public System.Boolean EndInvoke(System.IAsyncResult result)
      // Offset: 0xFFFFFFFFFFFFFFFF
      bool EndInvoke(::System::IAsyncResult* result) {
        static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTask_1::InternalDataRemover::EndInvoke");
        auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(typename ::GlobalNamespace::OVRTask_1<TResult>::InternalDataRemover*), -1));
        return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, result);
      }
    }; // OVRTask`1/InternalDataRemover
    // Could not write size check! Type: OVRTask`1/InternalDataRemover is generic, or has no fields that are valid for size checks!
    // WARNING Size may be invalid!
    // Autogenerated type: OVRTask`1/InternalData`1
    // [TokenAttribute] Offset: FFFFFFFF
    template<typename T>
    class InternalData_1 : public ::il2cpp_utils::il2cpp_type_check::NestedType, public ::Il2CppObject {
      public:
      using declaring_type = OVRTask_1<TResult>;
      static constexpr std::string_view NESTED_NAME = "InternalData`1";
      static constexpr bool IS_VALUE_TYPE = false;
      // Autogenerated static field getter
      // Get static field: static private readonly System.Collections.Generic.Dictionary`2<System.Guid,T> Data
      static ::System::Collections::Generic::Dictionary_2<::System::Guid, T>* _get_Data() {
        static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTask_1::InternalData_1::_get_Data");
        return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Collections::Generic::Dictionary_2<::System::Guid, T>*>(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<typename OVRTask_1<TResult>::InternalData_1<T>*>::get(), "Data")));
      }
      // Autogenerated static field setter
      // Set static field: static private readonly System.Collections.Generic.Dictionary`2<System.Guid,T> Data
      static void _set_Data(::System::Collections::Generic::Dictionary_2<::System::Guid, T>* value) {
        static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTask_1::InternalData_1::_set_Data");
        THROW_UNLESS(il2cpp_utils::SetFieldValue(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<typename OVRTask_1<TResult>::InternalData_1<T>*>::get(), "Data", value));
      }
      // Autogenerated static field getter
      // Get static field: static private readonly OVRTask`1/InternalDataRemover<TResult> Remover
      static typename ::GlobalNamespace::OVRTask_1<TResult>::InternalDataRemover* _get_Remover() {
        static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTask_1::InternalData_1::_get_Remover");
        return THROW_UNLESS(il2cpp_utils::GetFieldValue<typename ::GlobalNamespace::OVRTask_1<TResult>::InternalDataRemover*>(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<typename OVRTask_1<TResult>::InternalData_1<T>*>::get(), "Remover"));
      }
      // Autogenerated static field setter
      // Set static field: static private readonly OVRTask`1/InternalDataRemover<TResult> Remover
      static void _set_Remover(typename ::GlobalNamespace::OVRTask_1<TResult>::InternalDataRemover* value) {
        static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTask_1::InternalData_1::_set_Remover");
        THROW_UNLESS(il2cpp_utils::SetFieldValue(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<typename OVRTask_1<TResult>::InternalData_1<T>*>::get(), "Remover", value));
      }
      // Autogenerated static field getter
      // Get static field: static private readonly System.Action Clearer
      static ::System::Action* _get_Clearer() {
        static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTask_1::InternalData_1::_get_Clearer");
        return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Action*>(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<typename OVRTask_1<TResult>::InternalData_1<T>*>::get(), "Clearer"));
      }
      // Autogenerated static field setter
      // Set static field: static private readonly System.Action Clearer
      static void _set_Clearer(::System::Action* value) {
        static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTask_1::InternalData_1::_set_Clearer");
        THROW_UNLESS(il2cpp_utils::SetFieldValue(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<typename OVRTask_1<TResult>::InternalData_1<T>*>::get(), "Clearer", value));
      }
      // static public System.Boolean TryGet(System.Guid taskId, out T data)
      // Offset: 0xFFFFFFFFFFFFFFFF
      static bool TryGet(::System::Guid taskId, ByRef<T> data) {
        static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTask_1::InternalData_1::TryGet");
        static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<typename OVRTask_1<TResult>::InternalData_1<T>*>::get(), "TryGet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(taskId), ::il2cpp_utils::ExtractIndependentType<T&>()})));
        return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, taskId, byref(data));
      }
      // static public System.Void Set(System.Guid taskId, T data)
      // Offset: 0xFFFFFFFFFFFFFFFF
      static void Set(::System::Guid taskId, T data) {
        static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTask_1::InternalData_1::Set");
        static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<typename OVRTask_1<TResult>::InternalData_1<T>*>::get(), "Set", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(taskId), ::il2cpp_utils::ExtractType(data)})));
        ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, taskId, data);
      }
      // static private System.Boolean Remove(System.Guid taskId)
      // Offset: 0xFFFFFFFFFFFFFFFF
      static bool Remove(::System::Guid taskId) {
        static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTask_1::InternalData_1::Remove");
        static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<typename OVRTask_1<TResult>::InternalData_1<T>*>::get(), "Remove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(taskId)})));
        return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, taskId);
      }
      // static private System.Void Clear()
      // Offset: 0xFFFFFFFFFFFFFFFF
      static void Clear() {
        static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTask_1::InternalData_1::Clear");
        static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<typename OVRTask_1<TResult>::InternalData_1<T>*>::get(), "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
        ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
      }
      // static private System.Void .cctor()
      // Offset: 0xFFFFFFFFFFFFFFFF
      static void _cctor() {
        static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTask_1::InternalData_1::.cctor");
        static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<typename OVRTask_1<TResult>::InternalData_1<T>*>::get(), ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
        ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
      }
    }; // OVRTask`1/InternalData`1
    // Could not write size check! Type: OVRTask`1/InternalData`1 is generic, or has no fields that are valid for size checks!
    // WARNING Size may be invalid!
    // Autogenerated type: OVRTask`1/IncrementalResultSubscriber`1
    // [TokenAttribute] Offset: FFFFFFFF
    template<typename T>
    class IncrementalResultSubscriber_1 : public ::il2cpp_utils::il2cpp_type_check::NestedType, public ::Il2CppObject {
      public:
      using declaring_type = OVRTask_1<TResult>;
      static constexpr std::string_view NESTED_NAME = "IncrementalResultSubscriber`1";
      static constexpr bool IS_VALUE_TYPE = false;
      // Autogenerated static field getter
      // Get static field: static private readonly System.Collections.Generic.Dictionary`2<System.Guid,System.Action`1<T>> Subscribers
      static ::System::Collections::Generic::Dictionary_2<::System::Guid, ::System::Action_1<T>*>* _get_Subscribers() {
        static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTask_1::IncrementalResultSubscriber_1::_get_Subscribers");
        return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Collections::Generic::Dictionary_2<::System::Guid, ::System::Action_1<T>*>*>(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<typename OVRTask_1<TResult>::IncrementalResultSubscriber_1<T>*>::get(), "Subscribers")));
      }
      // Autogenerated static field setter
      // Set static field: static private readonly System.Collections.Generic.Dictionary`2<System.Guid,System.Action`1<T>> Subscribers
      static void _set_Subscribers(::System::Collections::Generic::Dictionary_2<::System::Guid, ::System::Action_1<T>*>* value) {
        static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTask_1::IncrementalResultSubscriber_1::_set_Subscribers");
        THROW_UNLESS(il2cpp_utils::SetFieldValue(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<typename OVRTask_1<TResult>::IncrementalResultSubscriber_1<T>*>::get(), "Subscribers", value));
      }
      // Autogenerated static field getter
      // Get static field: static private readonly System.Action`1<System.Guid> Remover
      static ::System::Action_1<::System::Guid>* _get_Remover() {
        static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTask_1::IncrementalResultSubscriber_1::_get_Remover");
        return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Action_1<::System::Guid>*>(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<typename OVRTask_1<TResult>::IncrementalResultSubscriber_1<T>*>::get(), "Remover"));
      }
      // Autogenerated static field setter
      // Set static field: static private readonly System.Action`1<System.Guid> Remover
      static void _set_Remover(::System::Action_1<::System::Guid>* value) {
        static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTask_1::IncrementalResultSubscriber_1::_set_Remover");
        THROW_UNLESS(il2cpp_utils::SetFieldValue(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<typename OVRTask_1<TResult>::IncrementalResultSubscriber_1<T>*>::get(), "Remover", value));
      }
      // Autogenerated static field getter
      // Get static field: static private readonly System.Action Clearer
      static ::System::Action* _get_Clearer() {
        static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTask_1::IncrementalResultSubscriber_1::_get_Clearer");
        return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Action*>(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<typename OVRTask_1<TResult>::IncrementalResultSubscriber_1<T>*>::get(), "Clearer"));
      }
      // Autogenerated static field setter
      // Set static field: static private readonly System.Action Clearer
      static void _set_Clearer(::System::Action* value) {
        static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTask_1::IncrementalResultSubscriber_1::_set_Clearer");
        THROW_UNLESS(il2cpp_utils::SetFieldValue(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<typename OVRTask_1<TResult>::IncrementalResultSubscriber_1<T>*>::get(), "Clearer", value));
      }
      // static public System.Void Set(System.Guid taskId, System.Action`1<T> subscriber)
      // Offset: 0xFFFFFFFFFFFFFFFF
      static void Set(::System::Guid taskId, ::System::Action_1<T>* subscriber) {
        static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTask_1::IncrementalResultSubscriber_1::Set");
        static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<typename OVRTask_1<TResult>::IncrementalResultSubscriber_1<T>*>::get(), "Set", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(taskId), ::il2cpp_utils::ExtractType(subscriber)})));
        ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, taskId, subscriber);
      }
      // static public System.Void Notify(System.Guid taskId, T result)
      // Offset: 0xFFFFFFFFFFFFFFFF
      static void Notify(::System::Guid taskId, T result) {
        static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTask_1::IncrementalResultSubscriber_1::Notify");
        static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<typename OVRTask_1<TResult>::IncrementalResultSubscriber_1<T>*>::get(), "Notify", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(taskId), ::il2cpp_utils::ExtractType(result)})));
        ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, taskId, result);
      }
      // static private System.Void Remove(System.Guid id)
      // Offset: 0xFFFFFFFFFFFFFFFF
      static void Remove(::System::Guid id) {
        static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTask_1::IncrementalResultSubscriber_1::Remove");
        static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<typename OVRTask_1<TResult>::IncrementalResultSubscriber_1<T>*>::get(), "Remove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(id)})));
        ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, id);
      }
      // static private System.Void Clear()
      // Offset: 0xFFFFFFFFFFFFFFFF
      static void Clear() {
        static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTask_1::IncrementalResultSubscriber_1::Clear");
        static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<typename OVRTask_1<TResult>::IncrementalResultSubscriber_1<T>*>::get(), "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
        ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
      }
      // static private System.Void .cctor()
      // Offset: 0xFFFFFFFFFFFFFFFF
      static void _cctor() {
        static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTask_1::IncrementalResultSubscriber_1::.cctor");
        static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<typename OVRTask_1<TResult>::IncrementalResultSubscriber_1<T>*>::get(), ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
        ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
      }
    }; // OVRTask`1/IncrementalResultSubscriber`1
    // Could not write size check! Type: OVRTask`1/IncrementalResultSubscriber`1 is generic, or has no fields that are valid for size checks!
    // WARNING Size may be invalid!
    // WARNING Layout: Sequential may not be correctly taken into account!
    // Autogenerated type: OVRTask`1/Awaiter
    // [TokenAttribute] Offset: FFFFFFFF
    // [IsReadOnlyAttribute] Offset: FFFFFFFF
    struct Awaiter : public ::il2cpp_utils::il2cpp_type_check::NestedType/*, public ::System::ValueType, public ::System::Runtime::CompilerServices::INotifyCompletion*/ {
      public:
      using declaring_type = OVRTask_1<TResult>;
      static constexpr std::string_view NESTED_NAME = "Awaiter";
      static constexpr bool IS_VALUE_TYPE = true;
      public:
      // private readonly OVRTask`1<TResult> _task
      // Size: 0xFFFFFFFF
      // Offset: 0x0
      ::GlobalNamespace::OVRTask_1<TResult> task;
      public:
      // Creating value type constructor for type: Awaiter
      constexpr Awaiter(::GlobalNamespace::OVRTask_1<TResult> task_ = {}) noexcept : task{task_} {}
      // Creating interface conversion operator: operator ::System::ValueType
      operator ::System::ValueType() noexcept {
        return *reinterpret_cast<::System::ValueType*>(this);
      }
      // Creating interface conversion operator: operator ::System::Runtime::CompilerServices::INotifyCompletion
      operator ::System::Runtime::CompilerServices::INotifyCompletion() noexcept {
        return *reinterpret_cast<::System::Runtime::CompilerServices::INotifyCompletion*>(this);
      }
      // Creating conversion operator: operator ::GlobalNamespace::OVRTask_1<TResult>
      constexpr operator ::GlobalNamespace::OVRTask_1<TResult>() const noexcept {
        return task;
      }
      // Autogenerated instance field getter
      // Get instance field: private readonly OVRTask`1<TResult> _task
      [[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRTask_1<TResult>& dyn__task() {
        static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTask_1::Awaiter::dyn__task");
        auto ___internal__instance = *this;
        static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_task"))->offset;
        return *reinterpret_cast<::GlobalNamespace::OVRTask_1<TResult>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
      }
      // System.Void .ctor(OVRTask`1<TResult> task)
      // Offset: 0xFFFFFFFFFFFFFFFF
      // ABORTED: conflicts with another method.  Awaiter(::GlobalNamespace::OVRTask_1<TResult> task)
      // public System.Boolean get_IsCompleted()
      // Offset: 0xFFFFFFFFFFFFFFFF
      bool get_IsCompleted() {
        static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTask_1::Awaiter::get_IsCompleted");
        static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_IsCompleted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
        return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
      }
      // public System.Void OnCompleted(System.Action continuation)
      // Offset: 0xFFFFFFFFFFFFFFFF
      void OnCompleted(::System::Action* continuation) {
        static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTask_1::Awaiter::OnCompleted");
        auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(typename ::GlobalNamespace::OVRTask_1<TResult>::Awaiter), -1));
        ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, continuation);
      }
      // public TResult GetResult()
      // Offset: 0xFFFFFFFFFFFFFFFF
      TResult GetResult() {
        static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTask_1::Awaiter::GetResult");
        static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
        return ::il2cpp_utils::RunMethodRethrow<TResult, false>(this, ___internal__method);
      }
    }; // OVRTask`1/Awaiter
    // Could not write size check! Type: OVRTask`1/Awaiter is generic, or has no fields that are valid for size checks!
    // WARNING Size may be invalid!
    // WARNING Layout: Sequential may not be correctly taken into account!
    // Autogenerated type: OVRTask`1/Callback
    // [TokenAttribute] Offset: FFFFFFFF
    // [IsReadOnlyAttribute] Offset: FFFFFFFF
    struct Callback : public ::il2cpp_utils::il2cpp_type_check::NestedType/*, public ::System::ValueType*/ {
      public:
      using declaring_type = OVRTask_1<TResult>;
      static constexpr std::string_view NESTED_NAME = "Callback";
      static constexpr bool IS_VALUE_TYPE = true;
      public:
      // private readonly System.Action`1<TResult> _delegate
      // Size: 0x8
      // Offset: 0x0
      ::System::Action_1<TResult>* delegate;
      // Field size check
      static_assert(sizeof(::System::Action_1<TResult>*) == 0x8);
      public:
      // Creating value type constructor for type: Callback
      constexpr Callback(::System::Action_1<TResult>* delegate_ = {}) noexcept : delegate{delegate_} {}
      // Creating interface conversion operator: operator ::System::ValueType
      operator ::System::ValueType() noexcept {
        return *reinterpret_cast<::System::ValueType*>(this);
      }
      // Creating conversion operator: operator ::System::Action_1<TResult>*
      constexpr operator ::System::Action_1<TResult>*() const noexcept {
        return delegate;
      }
      // Autogenerated static field getter
      // Get static field: static private readonly System.Collections.Generic.Dictionary`2<System.Guid,OVRTask`1/Callback<TResult>> Callbacks
      static ::System::Collections::Generic::Dictionary_2<::System::Guid, typename ::GlobalNamespace::OVRTask_1<TResult>::Callback>* _get_Callbacks() {
        static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTask_1::Callback::_get_Callbacks");
        return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Collections::Generic::Dictionary_2<::System::Guid, typename ::GlobalNamespace::OVRTask_1<TResult>::Callback>*>(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<typename OVRTask_1<TResult>::Callback>::get(), "Callbacks")));
      }
      // Autogenerated static field setter
      // Set static field: static private readonly System.Collections.Generic.Dictionary`2<System.Guid,OVRTask`1/Callback<TResult>> Callbacks
      static void _set_Callbacks(::System::Collections::Generic::Dictionary_2<::System::Guid, typename ::GlobalNamespace::OVRTask_1<TResult>::Callback>* value) {
        static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTask_1::Callback::_set_Callbacks");
        THROW_UNLESS(il2cpp_utils::SetFieldValue(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<typename OVRTask_1<TResult>::Callback>::get(), "Callbacks", value));
      }
      // Autogenerated static field getter
      // Get static field: static public readonly OVRTask`1/CallbackInvoker<TResult> Invoker
      static typename ::GlobalNamespace::OVRTask_1<TResult>::CallbackInvoker* _get_Invoker() {
        static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTask_1::Callback::_get_Invoker");
        return THROW_UNLESS(il2cpp_utils::GetFieldValue<typename ::GlobalNamespace::OVRTask_1<TResult>::CallbackInvoker*>(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<typename OVRTask_1<TResult>::Callback>::get(), "Invoker"));
      }
      // Autogenerated static field setter
      // Set static field: static public readonly OVRTask`1/CallbackInvoker<TResult> Invoker
      static void _set_Invoker(typename ::GlobalNamespace::OVRTask_1<TResult>::CallbackInvoker* value) {
        static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTask_1::Callback::_set_Invoker");
        THROW_UNLESS(il2cpp_utils::SetFieldValue(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<typename OVRTask_1<TResult>::Callback>::get(), "Invoker", value));
      }
      // Autogenerated static field getter
      // Get static field: static public readonly OVRTask`1/CallbackRemover<TResult> Remover
      static typename ::GlobalNamespace::OVRTask_1<TResult>::CallbackRemover* _get_Remover() {
        static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTask_1::Callback::_get_Remover");
        return THROW_UNLESS(il2cpp_utils::GetFieldValue<typename ::GlobalNamespace::OVRTask_1<TResult>::CallbackRemover*>(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<typename OVRTask_1<TResult>::Callback>::get(), "Remover"));
      }
      // Autogenerated static field setter
      // Set static field: static public readonly OVRTask`1/CallbackRemover<TResult> Remover
      static void _set_Remover(typename ::GlobalNamespace::OVRTask_1<TResult>::CallbackRemover* value) {
        static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTask_1::Callback::_set_Remover");
        THROW_UNLESS(il2cpp_utils::SetFieldValue(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<typename OVRTask_1<TResult>::Callback>::get(), "Remover", value));
      }
      // Autogenerated static field getter
      // Get static field: static public readonly System.Action Clearer
      static ::System::Action* _get_Clearer() {
        static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTask_1::Callback::_get_Clearer");
        return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Action*>(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<typename OVRTask_1<TResult>::Callback>::get(), "Clearer"));
      }
      // Autogenerated static field setter
      // Set static field: static public readonly System.Action Clearer
      static void _set_Clearer(::System::Action* value) {
        static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTask_1::Callback::_set_Clearer");
        THROW_UNLESS(il2cpp_utils::SetFieldValue(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<typename OVRTask_1<TResult>::Callback>::get(), "Clearer", value));
      }
      // Autogenerated instance field getter
      // Get instance field: private readonly System.Action`1<TResult> _delegate
      [[deprecated("Use field access instead!")]] ::System::Action_1<TResult>*& dyn__delegate() {
        static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTask_1::Callback::dyn__delegate");
        auto ___internal__instance = *this;
        static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_delegate"))->offset;
        return *reinterpret_cast<::System::Action_1<TResult>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
      }
      // static private System.Void Invoke(System.Guid taskId, TResult result)
      // Offset: 0xFFFFFFFFFFFFFFFF
      static void Invoke(::System::Guid taskId, TResult result) {
        static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTask_1::Callback::Invoke");
        static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<typename OVRTask_1<TResult>::Callback>::get(), "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(taskId), ::il2cpp_utils::ExtractType(result)})));
        ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, taskId, result);
      }
      // static private System.Boolean Remove(System.Guid taskId)
      // Offset: 0xFFFFFFFFFFFFFFFF
      static bool Remove(::System::Guid taskId) {
        static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTask_1::Callback::Remove");
        static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<typename OVRTask_1<TResult>::Callback>::get(), "Remove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(taskId)})));
        return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, taskId);
      }
      // static private System.Void Clear()
      // Offset: 0xFFFFFFFFFFFFFFFF
      static void Clear() {
        static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTask_1::Callback::Clear");
        static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<typename OVRTask_1<TResult>::Callback>::get(), "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
        ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
      }
      // private System.Void Invoke(TResult result)
      // Offset: 0xFFFFFFFFFFFFFFFF
      void Invoke(TResult result) {
        static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTask_1::Callback::Invoke");
        static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
        ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
      }
      // private System.Void .ctor(System.Action`1<TResult> delegate)
      // Offset: 0xFFFFFFFFFFFFFFFF
      // ABORTED: conflicts with another method.  Callback(::System::Action_1<TResult>* delegate)
      // static public System.Void Add(System.Guid taskId, System.Action`1<TResult> delegate)
      // Offset: 0xFFFFFFFFFFFFFFFF
      static void Add(::System::Guid taskId, ::System::Action_1<TResult>* delegate) {
        static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTask_1::Callback::Add");
        static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<typename OVRTask_1<TResult>::Callback>::get(), "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(taskId), ::il2cpp_utils::ExtractType(delegate)})));
        ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, taskId, delegate);
      }
      // static private System.Void .cctor()
      // Offset: 0xFFFFFFFFFFFFFFFF
      static void _cctor() {
        static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTask_1::Callback::.cctor");
        static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<typename OVRTask_1<TResult>::Callback>::get(), ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
        ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
      }
    }; // OVRTask`1/Callback
    // Could not write size check! Type: OVRTask`1/Callback is generic, or has no fields that are valid for size checks!
    // WARNING Size may be invalid!
    // WARNING Layout: Sequential may not be correctly taken into account!
    // Autogenerated type: OVRTask`1/CallbackWithState`1
    // [TokenAttribute] Offset: FFFFFFFF
    // [IsReadOnlyAttribute] Offset: FFFFFFFF
    template<typename T>
    struct CallbackWithState_1 : public ::il2cpp_utils::il2cpp_type_check::NestedType/*, public ::System::ValueType*/ {
      public:
      using declaring_type = OVRTask_1<TResult>;
      static constexpr std::string_view NESTED_NAME = "CallbackWithState`1";
      static constexpr bool IS_VALUE_TYPE = true;
      public:
      // private readonly T _data
      // Size: 0xFFFFFFFF
      // Offset: 0x0
      T data;
      // private readonly System.Action`2<TResult,T> _delegate
      // Size: 0x8
      // Offset: 0x0
      ::System::Action_2<TResult, T>* delegate;
      // Field size check
      static_assert(sizeof(::System::Action_2<TResult, T>*) == 0x8);
      public:
      // Creating value type constructor for type: CallbackWithState_1
      constexpr CallbackWithState_1(T data_ = {}, ::System::Action_2<TResult, T>* delegate_ = {}) noexcept : data{data_}, delegate{delegate_} {}
      // Creating interface conversion operator: operator ::System::ValueType
      operator ::System::ValueType() noexcept {
        return *reinterpret_cast<::System::ValueType*>(this);
      }
      // Autogenerated static field getter
      // Get static field: static private readonly System.Collections.Generic.Dictionary`2<System.Guid,OVRTask`1/CallbackWithState`1<TResult,T>> Callbacks
      static ::System::Collections::Generic::Dictionary_2<::System::Guid, typename ::GlobalNamespace::OVRTask_1<TResult>::CallbackWithState_1<T>>* _get_Callbacks() {
        static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTask_1::CallbackWithState_1::_get_Callbacks");
        return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Collections::Generic::Dictionary_2<::System::Guid, typename ::GlobalNamespace::OVRTask_1<TResult>::CallbackWithState_1<T>>*>(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<typename OVRTask_1<TResult>::CallbackWithState_1<T>>::get(), "Callbacks")));
      }
      // Autogenerated static field setter
      // Set static field: static private readonly System.Collections.Generic.Dictionary`2<System.Guid,OVRTask`1/CallbackWithState`1<TResult,T>> Callbacks
      static void _set_Callbacks(::System::Collections::Generic::Dictionary_2<::System::Guid, typename ::GlobalNamespace::OVRTask_1<TResult>::CallbackWithState_1<T>>* value) {
        static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTask_1::CallbackWithState_1::_set_Callbacks");
        THROW_UNLESS(il2cpp_utils::SetFieldValue(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<typename OVRTask_1<TResult>::CallbackWithState_1<T>>::get(), "Callbacks", value));
      }
      // Autogenerated static field getter
      // Get static field: static private readonly OVRTask`1/CallbackInvoker<TResult> Invoker
      static typename ::GlobalNamespace::OVRTask_1<TResult>::CallbackInvoker* _get_Invoker() {
        static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTask_1::CallbackWithState_1::_get_Invoker");
        return THROW_UNLESS(il2cpp_utils::GetFieldValue<typename ::GlobalNamespace::OVRTask_1<TResult>::CallbackInvoker*>(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<typename OVRTask_1<TResult>::CallbackWithState_1<T>>::get(), "Invoker"));
      }
      // Autogenerated static field setter
      // Set static field: static private readonly OVRTask`1/CallbackInvoker<TResult> Invoker
      static void _set_Invoker(typename ::GlobalNamespace::OVRTask_1<TResult>::CallbackInvoker* value) {
        static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTask_1::CallbackWithState_1::_set_Invoker");
        THROW_UNLESS(il2cpp_utils::SetFieldValue(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<typename OVRTask_1<TResult>::CallbackWithState_1<T>>::get(), "Invoker", value));
      }
      // Autogenerated static field getter
      // Get static field: static private readonly OVRTask`1/CallbackRemover<TResult> Remover
      static typename ::GlobalNamespace::OVRTask_1<TResult>::CallbackRemover* _get_Remover() {
        static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTask_1::CallbackWithState_1::_get_Remover");
        return THROW_UNLESS(il2cpp_utils::GetFieldValue<typename ::GlobalNamespace::OVRTask_1<TResult>::CallbackRemover*>(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<typename OVRTask_1<TResult>::CallbackWithState_1<T>>::get(), "Remover"));
      }
      // Autogenerated static field setter
      // Set static field: static private readonly OVRTask`1/CallbackRemover<TResult> Remover
      static void _set_Remover(typename ::GlobalNamespace::OVRTask_1<TResult>::CallbackRemover* value) {
        static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTask_1::CallbackWithState_1::_set_Remover");
        THROW_UNLESS(il2cpp_utils::SetFieldValue(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<typename OVRTask_1<TResult>::CallbackWithState_1<T>>::get(), "Remover", value));
      }
      // Autogenerated static field getter
      // Get static field: static private readonly System.Action Clearer
      static ::System::Action* _get_Clearer() {
        static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTask_1::CallbackWithState_1::_get_Clearer");
        return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Action*>(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<typename OVRTask_1<TResult>::CallbackWithState_1<T>>::get(), "Clearer"));
      }
      // Autogenerated static field setter
      // Set static field: static private readonly System.Action Clearer
      static void _set_Clearer(::System::Action* value) {
        static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTask_1::CallbackWithState_1::_set_Clearer");
        THROW_UNLESS(il2cpp_utils::SetFieldValue(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<typename OVRTask_1<TResult>::CallbackWithState_1<T>>::get(), "Clearer", value));
      }
      // Autogenerated instance field getter
      // Get instance field: private readonly T _data
      [[deprecated("Use field access instead!")]] T& dyn__data() {
        static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTask_1::CallbackWithState_1::dyn__data");
        auto ___internal__instance = *this;
        static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_data"))->offset;
        return *reinterpret_cast<T*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
      }
      // Autogenerated instance field getter
      // Get instance field: private readonly System.Action`2<TResult,T> _delegate
      [[deprecated("Use field access instead!")]] ::System::Action_2<TResult, T>*& dyn__delegate() {
        static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTask_1::CallbackWithState_1::dyn__delegate");
        auto ___internal__instance = *this;
        static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_delegate"))->offset;
        return *reinterpret_cast<::System::Action_2<TResult, T>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
      }
      // static private System.Void Invoke(System.Guid taskId, TResult result)
      // Offset: 0xFFFFFFFFFFFFFFFF
      static void Invoke(::System::Guid taskId, TResult result) {
        static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTask_1::CallbackWithState_1::Invoke");
        static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<typename OVRTask_1<TResult>::CallbackWithState_1<T>>::get(), "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(taskId), ::il2cpp_utils::ExtractType(result)})));
        ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, taskId, result);
      }
      // private System.Void .ctor(T data, System.Action`2<TResult,T> delegate)
      // Offset: 0xFFFFFFFFFFFFFFFF
      // ABORTED: conflicts with another method.  CallbackWithState_1(T data, ::System::Action_2<TResult, T>* delegate)
      // static private System.Void Clear()
      // Offset: 0xFFFFFFFFFFFFFFFF
      static void Clear() {
        static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTask_1::CallbackWithState_1::Clear");
        static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<typename OVRTask_1<TResult>::CallbackWithState_1<T>>::get(), "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
        ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
      }
      // static private System.Boolean Remove(System.Guid taskId)
      // Offset: 0xFFFFFFFFFFFFFFFF
      static bool Remove(::System::Guid taskId) {
        static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTask_1::CallbackWithState_1::Remove");
        static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<typename OVRTask_1<TResult>::CallbackWithState_1<T>>::get(), "Remove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(taskId)})));
        return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, taskId);
      }
      // private System.Void Invoke(TResult result)
      // Offset: 0xFFFFFFFFFFFFFFFF
      void Invoke(TResult result) {
        static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTask_1::CallbackWithState_1::Invoke");
        static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
        ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
      }
      // static public System.Void Add(System.Guid taskId, T data, System.Action`2<TResult,T> callback)
      // Offset: 0xFFFFFFFFFFFFFFFF
      static void Add(::System::Guid taskId, T data, ::System::Action_2<TResult, T>* callback) {
        static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTask_1::CallbackWithState_1::Add");
        static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<typename OVRTask_1<TResult>::CallbackWithState_1<T>>::get(), "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(taskId), ::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(callback)})));
        ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, taskId, data, callback);
      }
      // static private System.Void .cctor()
      // Offset: 0xFFFFFFFFFFFFFFFF
      static void _cctor() {
        static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTask_1::CallbackWithState_1::.cctor");
        static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<typename OVRTask_1<TResult>::CallbackWithState_1<T>>::get(), ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
        ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
      }
    }; // OVRTask`1/CallbackWithState`1
    // Could not write size check! Type: OVRTask`1/CallbackWithState`1 is generic, or has no fields that are valid for size checks!
    public:
    // private readonly System.Guid _id
    // Size: 0x10
    // Offset: 0x0
    ::System::Guid id;
    // Field size check
    static_assert(sizeof(::System::Guid) == 0x10);
    public:
    // Creating value type constructor for type: OVRTask_1
    constexpr OVRTask_1(::System::Guid id_ = {}) noexcept : id{id_} {}
    // Creating interface conversion operator: operator ::System::ValueType
    operator ::System::ValueType() noexcept {
      return *reinterpret_cast<::System::ValueType*>(this);
    }
    // Creating interface conversion operator: operator ::System::IEquatable_1<::GlobalNamespace::OVRTask_1<TResult>>
    operator ::System::IEquatable_1<::GlobalNamespace::OVRTask_1<TResult>>() noexcept {
      return *reinterpret_cast<::System::IEquatable_1<::GlobalNamespace::OVRTask_1<TResult>>*>(this);
    }
    // Creating interface conversion operator: operator ::System::IDisposable
    operator ::System::IDisposable() noexcept {
      return *reinterpret_cast<::System::IDisposable*>(this);
    }
    // Creating conversion operator: operator ::System::Guid
    constexpr operator ::System::Guid() const noexcept {
      return id;
    }
    // Autogenerated static field getter
    // Get static field: static private readonly System.Collections.Generic.HashSet`1<System.Guid> Pending
    static ::System::Collections::Generic::HashSet_1<::System::Guid>* _get_Pending() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTask_1::_get_Pending");
      return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::HashSet_1<::System::Guid>*>(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<OVRTask_1<TResult>>::get(), "Pending"));
    }
    // Autogenerated static field setter
    // Set static field: static private readonly System.Collections.Generic.HashSet`1<System.Guid> Pending
    static void _set_Pending(::System::Collections::Generic::HashSet_1<::System::Guid>* value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTask_1::_set_Pending");
      THROW_UNLESS(il2cpp_utils::SetFieldValue(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<OVRTask_1<TResult>>::get(), "Pending", value));
    }
    // Autogenerated static field getter
    // Get static field: static private readonly System.Collections.Generic.Dictionary`2<System.Guid,TResult> Results
    static ::System::Collections::Generic::Dictionary_2<::System::Guid, TResult>* _get_Results() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTask_1::_get_Results");
      return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Collections::Generic::Dictionary_2<::System::Guid, TResult>*>(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<OVRTask_1<TResult>>::get(), "Results")));
    }
    // Autogenerated static field setter
    // Set static field: static private readonly System.Collections.Generic.Dictionary`2<System.Guid,TResult> Results
    static void _set_Results(::System::Collections::Generic::Dictionary_2<::System::Guid, TResult>* value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTask_1::_set_Results");
      THROW_UNLESS(il2cpp_utils::SetFieldValue(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<OVRTask_1<TResult>>::get(), "Results", value));
    }
    // Autogenerated static field getter
    // Get static field: static private readonly System.Collections.Generic.Dictionary`2<System.Guid,System.Action> Continuations
    static ::System::Collections::Generic::Dictionary_2<::System::Guid, ::System::Action*>* _get_Continuations() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTask_1::_get_Continuations");
      return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Collections::Generic::Dictionary_2<::System::Guid, ::System::Action*>*>(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<OVRTask_1<TResult>>::get(), "Continuations")));
    }
    // Autogenerated static field setter
    // Set static field: static private readonly System.Collections.Generic.Dictionary`2<System.Guid,System.Action> Continuations
    static void _set_Continuations(::System::Collections::Generic::Dictionary_2<::System::Guid, ::System::Action*>* value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTask_1::_set_Continuations");
      THROW_UNLESS(il2cpp_utils::SetFieldValue(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<OVRTask_1<TResult>>::get(), "Continuations", value));
    }
    // Autogenerated static field getter
    // Get static field: static private readonly System.Collections.Generic.Dictionary`2<System.Guid,OVRTask`1/CallbackInvoker<TResult>> CallbackInvokers
    static ::System::Collections::Generic::Dictionary_2<::System::Guid, typename ::GlobalNamespace::OVRTask_1<TResult>::CallbackInvoker*>* _get_CallbackInvokers() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTask_1::_get_CallbackInvokers");
      return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Collections::Generic::Dictionary_2<::System::Guid, typename ::GlobalNamespace::OVRTask_1<TResult>::CallbackInvoker*>*>(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<OVRTask_1<TResult>>::get(), "CallbackInvokers")));
    }
    // Autogenerated static field setter
    // Set static field: static private readonly System.Collections.Generic.Dictionary`2<System.Guid,OVRTask`1/CallbackInvoker<TResult>> CallbackInvokers
    static void _set_CallbackInvokers(::System::Collections::Generic::Dictionary_2<::System::Guid, typename ::GlobalNamespace::OVRTask_1<TResult>::CallbackInvoker*>* value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTask_1::_set_CallbackInvokers");
      THROW_UNLESS(il2cpp_utils::SetFieldValue(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<OVRTask_1<TResult>>::get(), "CallbackInvokers", value));
    }
    // Autogenerated static field getter
    // Get static field: static private readonly System.Collections.Generic.Dictionary`2<System.Guid,OVRTask`1/CallbackRemover<TResult>> CallbackRemovers
    static ::System::Collections::Generic::Dictionary_2<::System::Guid, typename ::GlobalNamespace::OVRTask_1<TResult>::CallbackRemover*>* _get_CallbackRemovers() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTask_1::_get_CallbackRemovers");
      return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Collections::Generic::Dictionary_2<::System::Guid, typename ::GlobalNamespace::OVRTask_1<TResult>::CallbackRemover*>*>(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<OVRTask_1<TResult>>::get(), "CallbackRemovers")));
    }
    // Autogenerated static field setter
    // Set static field: static private readonly System.Collections.Generic.Dictionary`2<System.Guid,OVRTask`1/CallbackRemover<TResult>> CallbackRemovers
    static void _set_CallbackRemovers(::System::Collections::Generic::Dictionary_2<::System::Guid, typename ::GlobalNamespace::OVRTask_1<TResult>::CallbackRemover*>* value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTask_1::_set_CallbackRemovers");
      THROW_UNLESS(il2cpp_utils::SetFieldValue(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<OVRTask_1<TResult>>::get(), "CallbackRemovers", value));
    }
    // Autogenerated static field getter
    // Get static field: static private readonly System.Collections.Generic.HashSet`1<System.Action> CallbackClearers
    static ::System::Collections::Generic::HashSet_1<::System::Action*>* _get_CallbackClearers() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTask_1::_get_CallbackClearers");
      return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::HashSet_1<::System::Action*>*>(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<OVRTask_1<TResult>>::get(), "CallbackClearers"));
    }
    // Autogenerated static field setter
    // Set static field: static private readonly System.Collections.Generic.HashSet`1<System.Action> CallbackClearers
    static void _set_CallbackClearers(::System::Collections::Generic::HashSet_1<::System::Action*>* value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTask_1::_set_CallbackClearers");
      THROW_UNLESS(il2cpp_utils::SetFieldValue(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<OVRTask_1<TResult>>::get(), "CallbackClearers", value));
    }
    // Autogenerated static field getter
    // Get static field: static private readonly System.Collections.Generic.Dictionary`2<System.Guid,OVRTask`1/InternalDataRemover<TResult>> InternalDataRemovers
    static ::System::Collections::Generic::Dictionary_2<::System::Guid, typename ::GlobalNamespace::OVRTask_1<TResult>::InternalDataRemover*>* _get_InternalDataRemovers() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTask_1::_get_InternalDataRemovers");
      return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Collections::Generic::Dictionary_2<::System::Guid, typename ::GlobalNamespace::OVRTask_1<TResult>::InternalDataRemover*>*>(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<OVRTask_1<TResult>>::get(), "InternalDataRemovers")));
    }
    // Autogenerated static field setter
    // Set static field: static private readonly System.Collections.Generic.Dictionary`2<System.Guid,OVRTask`1/InternalDataRemover<TResult>> InternalDataRemovers
    static void _set_InternalDataRemovers(::System::Collections::Generic::Dictionary_2<::System::Guid, typename ::GlobalNamespace::OVRTask_1<TResult>::InternalDataRemover*>* value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTask_1::_set_InternalDataRemovers");
      THROW_UNLESS(il2cpp_utils::SetFieldValue(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<OVRTask_1<TResult>>::get(), "InternalDataRemovers", value));
    }
    // Autogenerated static field getter
    // Get static field: static private readonly System.Collections.Generic.HashSet`1<System.Action> InternalDataClearers
    static ::System::Collections::Generic::HashSet_1<::System::Action*>* _get_InternalDataClearers() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTask_1::_get_InternalDataClearers");
      return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::HashSet_1<::System::Action*>*>(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<OVRTask_1<TResult>>::get(), "InternalDataClearers"));
    }
    // Autogenerated static field setter
    // Set static field: static private readonly System.Collections.Generic.HashSet`1<System.Action> InternalDataClearers
    static void _set_InternalDataClearers(::System::Collections::Generic::HashSet_1<::System::Action*>* value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTask_1::_set_InternalDataClearers");
      THROW_UNLESS(il2cpp_utils::SetFieldValue(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<OVRTask_1<TResult>>::get(), "InternalDataClearers", value));
    }
    // Autogenerated static field getter
    // Get static field: static private readonly System.Collections.Generic.Dictionary`2<System.Guid,System.Action`1<System.Guid>> SubscriberRemovers
    static ::System::Collections::Generic::Dictionary_2<::System::Guid, ::System::Action_1<::System::Guid>*>* _get_SubscriberRemovers() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTask_1::_get_SubscriberRemovers");
      return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Collections::Generic::Dictionary_2<::System::Guid, ::System::Action_1<::System::Guid>*>*>(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<OVRTask_1<TResult>>::get(), "SubscriberRemovers")));
    }
    // Autogenerated static field setter
    // Set static field: static private readonly System.Collections.Generic.Dictionary`2<System.Guid,System.Action`1<System.Guid>> SubscriberRemovers
    static void _set_SubscriberRemovers(::System::Collections::Generic::Dictionary_2<::System::Guid, ::System::Action_1<::System::Guid>*>* value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTask_1::_set_SubscriberRemovers");
      THROW_UNLESS(il2cpp_utils::SetFieldValue(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<OVRTask_1<TResult>>::get(), "SubscriberRemovers", value));
    }
    // Autogenerated static field getter
    // Get static field: static private readonly System.Collections.Generic.HashSet`1<System.Action> SubscriberClearers
    static ::System::Collections::Generic::HashSet_1<::System::Action*>* _get_SubscriberClearers() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTask_1::_get_SubscriberClearers");
      return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::HashSet_1<::System::Action*>*>(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<OVRTask_1<TResult>>::get(), "SubscriberClearers"));
    }
    // Autogenerated static field setter
    // Set static field: static private readonly System.Collections.Generic.HashSet`1<System.Action> SubscriberClearers
    static void _set_SubscriberClearers(::System::Collections::Generic::HashSet_1<::System::Action*>* value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTask_1::_set_SubscriberClearers");
      THROW_UNLESS(il2cpp_utils::SetFieldValue(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<OVRTask_1<TResult>>::get(), "SubscriberClearers", value));
    }
    // Autogenerated instance field getter
    // Get instance field: private readonly System.Guid _id
    [[deprecated("Use field access instead!")]] ::System::Guid& dyn__id() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTask_1::dyn__id");
      auto ___internal__instance = *this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_id"))->offset;
      return *reinterpret_cast<::System::Guid*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // System.Void .ctor(System.Guid id)
    // Offset: 0xFFFFFFFFFFFFFFFF
    // ABORTED: conflicts with another method.  OVRTask_1(::System::Guid id)
    // System.Void AddToPending()
    // Offset: 0xFFFFFFFFFFFFFFFF
    void AddToPending() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTask_1::AddToPending");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "AddToPending", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
    }
    // System.Boolean get_IsPending()
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool get_IsPending() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTask_1::get_IsPending");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_IsPending", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
    }
    // System.Void SetInternalData(T data)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class T>
    void SetInternalData(T data) {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTask_1::SetInternalData");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetInternalData", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data)})));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___generic__method, data);
    }
    // System.Boolean TryGetInternalData(out T data)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class T>
    bool TryGetInternalData(ByRef<T> data) {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTask_1::TryGetInternalData");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "TryGetInternalData", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<T&>()})));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}));
      return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___generic__method, byref(data));
    }
    // System.Void SetResult(TResult result)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void SetResult(TResult result) {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTask_1::SetResult");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
    }
    // System.Void SetIncrementalResultCallback(System.Action`1<TIncrementalResult> onIncrementalResultAvailable)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class TIncrementalResult>
    void SetIncrementalResultCallback(::System::Action_1<TIncrementalResult>* onIncrementalResultAvailable) {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTask_1::SetIncrementalResultCallback");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetIncrementalResultCallback", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TIncrementalResult>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(onIncrementalResultAvailable)})));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TIncrementalResult>::get()}));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___generic__method, onIncrementalResultAvailable);
    }
    // System.Void NotifyIncrementalResult(TIncrementalResult incrementalResult)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class TIncrementalResult>
    void NotifyIncrementalResult(TIncrementalResult incrementalResult) {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTask_1::NotifyIncrementalResult");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "NotifyIncrementalResult", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TIncrementalResult>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(incrementalResult)})));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TIncrementalResult>::get()}));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___generic__method, incrementalResult);
    }
    // public System.Boolean get_IsCompleted()
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool get_IsCompleted() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTask_1::get_IsCompleted");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_IsCompleted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
    }
    // public TResult GetResult()
    // Offset: 0xFFFFFFFFFFFFFFFF
    TResult GetResult() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTask_1::GetResult");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      return ::il2cpp_utils::RunMethodRethrow<TResult, false>(this, ___internal__method);
    }
    // public OVRTask`1/Awaiter<TResult> GetAwaiter()
    // Offset: 0xFFFFFFFFFFFFFFFF
    typename ::GlobalNamespace::OVRTask_1<TResult>::Awaiter GetAwaiter() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTask_1::GetAwaiter");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetAwaiter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      return ::il2cpp_utils::RunMethodRethrow<typename ::GlobalNamespace::OVRTask_1<TResult>::Awaiter, false>(this, ___internal__method);
    }
    // private System.Void WithContinuation(System.Action continuation)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void WithContinuation(::System::Action* continuation) {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTask_1::WithContinuation");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "WithContinuation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(continuation)})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, continuation);
    }
    // public System.Void ContinueWith(System.Action`1<TResult> onCompleted)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void ContinueWith(::System::Action_1<TResult>* onCompleted) {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTask_1::ContinueWith");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ContinueWith", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(onCompleted)})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, onCompleted);
    }
    // public System.Void ContinueWith(System.Action`2<TResult,T> onCompleted, T state)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class T>
    void ContinueWith(::System::Action_2<TResult, T>* onCompleted, T state) {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTask_1::ContinueWith");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ContinueWith", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(onCompleted), ::il2cpp_utils::ExtractType(state)})));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___generic__method, onCompleted, state);
    }
    // private System.Void ValidateDelegateAndThrow(System.Object delegate, System.String paramName)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void ValidateDelegateAndThrow(::Il2CppObject* delegate, ::StringW paramName) {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTask_1::ValidateDelegateAndThrow");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ValidateDelegateAndThrow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(delegate), ::il2cpp_utils::ExtractType(paramName)})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, delegate, paramName);
    }
    // public System.Void Dispose()
    // Offset: 0xFFFFFFFFFFFFFFFF
    void Dispose() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTask_1::Dispose");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::GlobalNamespace::OVRTask_1<TResult>), -1));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
    }
    // public System.Boolean Equals(OVRTask`1<TResult> other)
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool Equals(::GlobalNamespace::OVRTask_1<TResult> other) {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTask_1::Equals");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::GlobalNamespace::OVRTask_1<TResult>), -1));
      return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
    }
    // static private System.Void .cctor()
    // Offset: 0xFFFFFFFFFFFFFFFF
    static void _cctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTask_1::.cctor");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<OVRTask_1<TResult>>::get(), ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
    }
    // public override System.Boolean Equals(System.Object obj)
    // Offset: 0xFFFFFFFFFFFFFFFF
    // Implemented from: System.ValueType
    // Base method: System.Boolean ValueType::Equals(System.Object obj)
    bool Equals(::Il2CppObject* obj) {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTask_1::Equals");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), -1));
      return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
    }
    // public override System.Int32 GetHashCode()
    // Offset: 0xFFFFFFFFFFFFFFFF
    // Implemented from: System.ValueType
    // Base method: System.Int32 ValueType::GetHashCode()
    int GetHashCode() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTask_1::GetHashCode");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), -1));
      return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
    }
    // public override System.String ToString()
    // Offset: 0xFFFFFFFFFFFFFFFF
    // Implemented from: System.ValueType
    // Base method: System.String ValueType::ToString()
    ::StringW ToString() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTask_1::ToString");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), -1));
      return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
    }
  }; // OVRTask`1
  // Could not write size check! Type: OVRTask`1 is generic, or has no fields that are valid for size checks!
  // static public System.Boolean op_Equality(OVRTask`1<TResult> lhs, OVRTask`1<TResult> rhs)
  // Offset: 0xFFFFFFFFFFFFFFFF
  inline bool operator ==(const ::GlobalNamespace::OVRTask_1<TResult>& lhs, const ::GlobalNamespace::OVRTask_1<TResult>& rhs) {
    static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTask_1::op_Equality");
    static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<OVRTask_1<TResult>>::get(), "op_Equality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs)})));
    return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lhs, rhs);
  }
  // static public System.Boolean op_Inequality(OVRTask`1<TResult> lhs, OVRTask`1<TResult> rhs)
  // Offset: 0xFFFFFFFFFFFFFFFF
  inline bool operator !=(const ::GlobalNamespace::OVRTask_1<TResult>& lhs, const ::GlobalNamespace::OVRTask_1<TResult>& rhs) {
    static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTask_1::op_Inequality");
    static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<OVRTask_1<TResult>>::get(), "op_Inequality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs)})));
    return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lhs, rhs);
  }
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
