// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: NetworkSystem
#include "GlobalNamespace/NetworkSystem.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: PlayFab::ClientModels
namespace PlayFab::ClientModels {
  // Forward declaring type: GetSharedGroupDataResult
  class GetSharedGroupDataResult;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::NetworkSystem::$$c__DisplayClass82_0);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::NetworkSystem::$$c__DisplayClass82_0*, "", "NetworkSystem/<>c__DisplayClass82_0");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x11
  #pragma pack(push, 1)
  // Autogenerated type: NetworkSystem/<>c__DisplayClass82_0
  // [TokenAttribute] Offset: FFFFFFFF
  // [CompilerGeneratedAttribute] Offset: FFFFFFFF
  class NetworkSystem::$$c__DisplayClass82_0 : public ::Il2CppObject {
    public:
    public:
    // public System.Boolean success
    // Size: 0x1
    // Offset: 0x10
    bool success;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    public:
    // Creating conversion operator: operator bool
    constexpr operator bool() const noexcept {
      return success;
    }
    // Get instance field reference: public System.Boolean success
    [[deprecated("Use field access instead!")]] bool& dyn_success();
    // public System.Void .ctor()
    // Offset: 0x2910E58
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static NetworkSystem::$$c__DisplayClass82_0* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkSystem::$$c__DisplayClass82_0::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<NetworkSystem::$$c__DisplayClass82_0*, creationType>()));
    }
    // System.Void <InstantCheckGroupData>b__0(PlayFab.ClientModels.GetSharedGroupDataResult result)
    // Offset: 0x291153C
    void $InstantCheckGroupData$b__0(::PlayFab::ClientModels::GetSharedGroupDataResult* result);
  }; // NetworkSystem/<>c__DisplayClass82_0
  #pragma pack(pop)
  static check_size<sizeof(NetworkSystem::$$c__DisplayClass82_0), 16 + sizeof(bool)> __GlobalNamespace_NetworkSystem_$$c__DisplayClass82_0SizeCheck;
  static_assert(sizeof(NetworkSystem::$$c__DisplayClass82_0) == 0x11);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::NetworkSystem::$$c__DisplayClass82_0::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: GlobalNamespace::NetworkSystem::$$c__DisplayClass82_0::$InstantCheckGroupData$b__0
// Il2CppName: <InstantCheckGroupData>b__0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::NetworkSystem::$$c__DisplayClass82_0::*)(::PlayFab::ClientModels::GetSharedGroupDataResult*)>(&GlobalNamespace::NetworkSystem::$$c__DisplayClass82_0::$InstantCheckGroupData$b__0)> {
  static const MethodInfo* get() {
    static auto* result = &::il2cpp_utils::GetClassFromName("PlayFab.ClientModels", "GetSharedGroupDataResult")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NetworkSystem::$$c__DisplayClass82_0*), "<InstantCheckGroupData>b__0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{result});
  }
};
