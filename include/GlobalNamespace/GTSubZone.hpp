// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Enum
#include "System/Enum.hpp"
// Completed includes
// Type namespace: 
namespace GlobalNamespace {
  // Forward declaring type: GTSubZone
  struct GTSubZone;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::GTSubZone, "", "GTSubZone");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x4
  #pragma pack(push, 1)
  // Autogenerated type: GTSubZone
  // [TokenAttribute] Offset: FFFFFFFF
  struct GTSubZone/*, public ::System::Enum*/ {
    public:
    public:
    // public System.Int32 value__
    // Size: 0x4
    // Offset: 0x0
    int value;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Creating value type constructor for type: GTSubZone
    constexpr GTSubZone(int value_ = {}) noexcept : value{value_} {}
    // Creating interface conversion operator: operator ::System::Enum
    operator ::System::Enum() noexcept {
      return *reinterpret_cast<::System::Enum*>(this);
    }
    // Creating conversion operator: operator int
    constexpr operator int() const noexcept {
      return value;
    }
    // static field const value: static public GTSubZone none
    static constexpr const int none = 0;
    // Get static field: static public GTSubZone none
    static ::GlobalNamespace::GTSubZone _get_none();
    // Set static field: static public GTSubZone none
    static void _set_none(::GlobalNamespace::GTSubZone value);
    // static field const value: static public GTSubZone store
    static constexpr const int store = 1;
    // Get static field: static public GTSubZone store
    static ::GlobalNamespace::GTSubZone _get_store();
    // Set static field: static public GTSubZone store
    static void _set_store(::GlobalNamespace::GTSubZone value);
    // static field const value: static public GTSubZone store_dress_room
    static constexpr const int store_dress_room = 2;
    // Get static field: static public GTSubZone store_dress_room
    static ::GlobalNamespace::GTSubZone _get_store_dress_room();
    // Set static field: static public GTSubZone store_dress_room
    static void _set_store_dress_room(::GlobalNamespace::GTSubZone value);
    // static field const value: static public GTSubZone store_mirror
    static constexpr const int store_mirror = 3;
    // Get static field: static public GTSubZone store_mirror
    static ::GlobalNamespace::GTSubZone _get_store_mirror();
    // Set static field: static public GTSubZone store_mirror
    static void _set_store_mirror(::GlobalNamespace::GTSubZone value);
    // static field const value: static public GTSubZone store_f1
    static constexpr const int store_f1 = 4;
    // Get static field: static public GTSubZone store_f1
    static ::GlobalNamespace::GTSubZone _get_store_f1();
    // Set static field: static public GTSubZone store_f1
    static void _set_store_f1(::GlobalNamespace::GTSubZone value);
    // static field const value: static public GTSubZone store_f2
    static constexpr const int store_f2 = 5;
    // Get static field: static public GTSubZone store_f2
    static ::GlobalNamespace::GTSubZone _get_store_f2();
    // Set static field: static public GTSubZone store_f2
    static void _set_store_f2(::GlobalNamespace::GTSubZone value);
    // static field const value: static public GTSubZone store_f3
    static constexpr const int store_f3 = 6;
    // Get static field: static public GTSubZone store_f3
    static ::GlobalNamespace::GTSubZone _get_store_f3();
    // Set static field: static public GTSubZone store_f3
    static void _set_store_f3(::GlobalNamespace::GTSubZone value);
    // static field const value: static public GTSubZone store_register
    static constexpr const int store_register = 7;
    // Get static field: static public GTSubZone store_register
    static ::GlobalNamespace::GTSubZone _get_store_register();
    // Set static field: static public GTSubZone store_register
    static void _set_store_register(::GlobalNamespace::GTSubZone value);
    // static field const value: static public GTSubZone tree_room
    static constexpr const int tree_room = 8;
    // Get static field: static public GTSubZone tree_room
    static ::GlobalNamespace::GTSubZone _get_tree_room();
    // Set static field: static public GTSubZone tree_room
    static void _set_tree_room(::GlobalNamespace::GTSubZone value);
    // static field const value: static public GTSubZone entrance_tunnel
    static constexpr const int entrance_tunnel = 9;
    // Get static field: static public GTSubZone entrance_tunnel
    static ::GlobalNamespace::GTSubZone _get_entrance_tunnel();
    // Set static field: static public GTSubZone entrance_tunnel
    static void _set_entrance_tunnel(::GlobalNamespace::GTSubZone value);
    // Get instance field reference: public System.Int32 value__
    [[deprecated("Use field access instead!")]] int& dyn_value__();
  }; // GTSubZone
  #pragma pack(pop)
  static check_size<sizeof(GTSubZone), 0 + sizeof(int)> __GlobalNamespace_GTSubZoneSizeCheck;
  static_assert(sizeof(GTSubZone) == 0x4);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
