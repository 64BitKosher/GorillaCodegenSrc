// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: IDelayedExecListener
#include "GlobalNamespace/IDelayedExecListener.hpp"
// Including type: ITickSystemTick
#include "GlobalNamespace/ITickSystemTick.hpp"
// Including type: System.Int32
#include "System/Int32.hpp"
// Including type: UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationHandle`1
#include "UnityEngine/ResourceManagement/AsyncOperations/AsyncOperationHandle_1.hpp"
// Including type: GorillaTag.CosmeticSystem.CosmeticAttachInfo
#include "GorillaTag/CosmeticSystem/CosmeticAttachInfo.hpp"
// Including type: GorillaTag.CosmeticSystem.CosmeticPart
#include "GorillaTag/CosmeticSystem/CosmeticPart.hpp"
// Including type: GorillaTag.CosmeticSystem.CosmeticInfoV2
#include "GorillaTag/CosmeticSystem/CosmeticInfoV2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: Dictionary`2<TKey, TValue>
  template<typename TKey, typename TValue>
  class Dictionary_2;
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: BodyDockPositions
  class BodyDockPositions;
  // Forward declaring type: SnowballMaker
  class SnowballMaker;
  // Forward declaring type: SnowballThrowable
  class SnowballThrowable;
  // Forward declaring type: VRRig
  class VRRig;
  // Skipping declaration: LoadOpInfo because it is already included!
  // Skipping declaration: TransferrableObject because it is already included!
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Action
  class Action;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Transform
  class Transform;
  // Forward declaring type: GameObject
  class GameObject;
}
// Forward declaring namespace: GorillaLocomotion
namespace GorillaLocomotion {
  // Forward declaring type: Player
  class Player;
}
// Forward declaring namespace: System::Diagnostics
namespace System::Diagnostics {
  // Forward declaring type: Stopwatch
  class Stopwatch;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Forward declaring type: CosmeticsV2Spawner_Dirty
  class CosmeticsV2Spawner_Dirty;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::CosmeticsV2Spawner_Dirty);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::CosmeticsV2Spawner_Dirty*, "", "CosmeticsV2Spawner_Dirty");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x12
  #pragma pack(push, 1)
  // Autogenerated type: CosmeticsV2Spawner_Dirty
  // [TokenAttribute] Offset: FFFFFFFF
  class CosmeticsV2Spawner_Dirty : public ::Il2CppObject/*, public ::GlobalNamespace::IDelayedExecListener, public ::GlobalNamespace::ITickSystemTick*/ {
    public:
    // Nested type: ::GlobalNamespace::CosmeticsV2Spawner_Dirty::LoadOpInfo
    struct LoadOpInfo;
    // Nested type: ::GlobalNamespace::CosmeticsV2Spawner_Dirty::VRRigData
    struct VRRigData;
    // WARNING Size may be invalid!
    // WARNING Layout: Sequential may not be correctly taken into account!
    // Autogenerated type: CosmeticsV2Spawner_Dirty/LoadOpInfo
    // [TokenAttribute] Offset: FFFFFFFF
    struct LoadOpInfo/*, public ::System::ValueType*/ {
      public:
      public:
      // public System.Boolean isStarted
      // Size: 0x1
      // Offset: 0x0
      bool isStarted;
      // Field size check
      static_assert(sizeof(bool) == 0x1);
      // public UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationHandle`1<UnityEngine.GameObject> loadOp
      // Size: 0xFFFFFFFF
      // Offset: 0x8
      ::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<::UnityEngine::GameObject*> loadOp;
      // public UnityEngine.GameObject resultGObj
      // Size: 0x8
      // Offset: 0x28
      ::UnityEngine::GameObject* resultGObj;
      // Field size check
      static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
      // public readonly GorillaTag.CosmeticSystem.CosmeticAttachInfo attachInfo
      // Size: 0xFFFFFFFF
      // Offset: 0x30
      ::GorillaTag::CosmeticSystem::CosmeticAttachInfo attachInfo;
      // public readonly GorillaTag.CosmeticSystem.CosmeticPart part
      // Size: 0x14
      // Offset: 0x70
      ::GorillaTag::CosmeticSystem::CosmeticPart part;
      // Field size check
      static_assert(sizeof(::GorillaTag::CosmeticSystem::CosmeticPart) == 0x14);
      // public readonly System.Int32 partIndex
      // Size: 0x4
      // Offset: 0x88
      int partIndex;
      // Field size check
      static_assert(sizeof(int) == 0x4);
      // public readonly GorillaTag.CosmeticSystem.CosmeticInfoV2 cosmeticInfoV2
      // Size: 0xFFFFFFFF
      // Offset: 0x90
      ::GorillaTag::CosmeticSystem::CosmeticInfoV2 cosmeticInfoV2;
      // public readonly System.Int32 vrRigIndex
      // Size: 0x4
      // Offset: 0x1C0
      int vrRigIndex;
      // Field size check
      static_assert(sizeof(int) == 0x4);
      public:
      // Creating value type constructor for type: LoadOpInfo
      constexpr LoadOpInfo(bool isStarted_ = {}, ::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<::UnityEngine::GameObject*> loadOp_ = {}, ::UnityEngine::GameObject* resultGObj_ = {}, ::GorillaTag::CosmeticSystem::CosmeticAttachInfo attachInfo_ = {}, ::GorillaTag::CosmeticSystem::CosmeticPart part_ = {}, int partIndex_ = {}, ::GorillaTag::CosmeticSystem::CosmeticInfoV2 cosmeticInfoV2_ = {}, int vrRigIndex_ = {}) noexcept : isStarted{isStarted_}, loadOp{loadOp_}, resultGObj{resultGObj_}, attachInfo{attachInfo_}, part{part_}, partIndex{partIndex_}, cosmeticInfoV2{cosmeticInfoV2_}, vrRigIndex{vrRigIndex_} {}
      // Creating interface conversion operator: operator ::System::ValueType
      operator ::System::ValueType() noexcept {
        return *reinterpret_cast<::System::ValueType*>(this);
      }
      // Get instance field reference: public System.Boolean isStarted
      [[deprecated("Use field access instead!")]] bool& dyn_isStarted();
      // Get instance field reference: public UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationHandle`1<UnityEngine.GameObject> loadOp
      [[deprecated("Use field access instead!")]] ::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<::UnityEngine::GameObject*>& dyn_loadOp();
      // Get instance field reference: public UnityEngine.GameObject resultGObj
      [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_resultGObj();
      // Get instance field reference: public readonly GorillaTag.CosmeticSystem.CosmeticAttachInfo attachInfo
      [[deprecated("Use field access instead!")]] ::GorillaTag::CosmeticSystem::CosmeticAttachInfo& dyn_attachInfo();
      // Get instance field reference: public readonly GorillaTag.CosmeticSystem.CosmeticPart part
      [[deprecated("Use field access instead!")]] ::GorillaTag::CosmeticSystem::CosmeticPart& dyn_part();
      // Get instance field reference: public readonly System.Int32 partIndex
      [[deprecated("Use field access instead!")]] int& dyn_partIndex();
      // Get instance field reference: public readonly GorillaTag.CosmeticSystem.CosmeticInfoV2 cosmeticInfoV2
      [[deprecated("Use field access instead!")]] ::GorillaTag::CosmeticSystem::CosmeticInfoV2& dyn_cosmeticInfoV2();
      // Get instance field reference: public readonly System.Int32 vrRigIndex
      [[deprecated("Use field access instead!")]] int& dyn_vrRigIndex();
      // public System.Void .ctor(GorillaTag.CosmeticSystem.CosmeticAttachInfo attachInfo, GorillaTag.CosmeticSystem.CosmeticPart part, System.Int32 partIndex, GorillaTag.CosmeticSystem.CosmeticInfoV2 cosmeticInfoV2, System.Int32 vrRigIndex)
      // Offset: 0x2797218
      LoadOpInfo(::GorillaTag::CosmeticSystem::CosmeticAttachInfo attachInfo, ::GorillaTag::CosmeticSystem::CosmeticPart part, int partIndex, ::GorillaTag::CosmeticSystem::CosmeticInfoV2 cosmeticInfoV2, int vrRigIndex);
    }; // CosmeticsV2Spawner_Dirty/LoadOpInfo
    // WARNING Not writing size check since size may be invalid!
    // Size: 0x50
    #pragma pack(push, 1)
    // WARNING Layout: Sequential may not be correctly taken into account!
    // Autogenerated type: CosmeticsV2Spawner_Dirty/VRRigData
    // [TokenAttribute] Offset: FFFFFFFF
    struct VRRigData/*, public ::System::ValueType*/ {
      public:
      public:
      // public readonly VRRig vrRig
      // Size: 0x8
      // Offset: 0x0
      ::GlobalNamespace::VRRig* vrRig;
      // Field size check
      static_assert(sizeof(::GlobalNamespace::VRRig*) == 0x8);
      // public readonly UnityEngine.Transform[] boneXforms
      // Size: 0x8
      // Offset: 0x8
      ::ArrayW<::UnityEngine::Transform*> boneXforms;
      // Field size check
      static_assert(sizeof(::ArrayW<::UnityEngine::Transform*>) == 0x8);
      // public readonly BodyDockPositions bdPositionsComp
      // Size: 0x8
      // Offset: 0x10
      ::GlobalNamespace::BodyDockPositions* bdPositionsComp;
      // Field size check
      static_assert(sizeof(::GlobalNamespace::BodyDockPositions*) == 0x8);
      // public readonly System.Collections.Generic.List`1<UnityEngine.GameObject> vrRig_cosmetics
      // Size: 0x8
      // Offset: 0x18
      ::System::Collections::Generic::List_1<::UnityEngine::GameObject*>* vrRig_cosmetics;
      // Field size check
      static_assert(sizeof(::System::Collections::Generic::List_1<::UnityEngine::GameObject*>*) == 0x8);
      // public readonly System.Collections.Generic.List`1<UnityEngine.GameObject> vrRig_override
      // Size: 0x8
      // Offset: 0x20
      ::System::Collections::Generic::List_1<::UnityEngine::GameObject*>* vrRig_override;
      // Field size check
      static_assert(sizeof(::System::Collections::Generic::List_1<::UnityEngine::GameObject*>*) == 0x8);
      // public readonly UnityEngine.Transform parentOfDeactivatedHoldables
      // Size: 0x8
      // Offset: 0x28
      ::UnityEngine::Transform* parentOfDeactivatedHoldables;
      // Field size check
      static_assert(sizeof(::UnityEngine::Transform*) == 0x8);
      // public readonly System.Collections.Generic.List`1<TransferrableObject> bdPositions_allObjects
      // Size: 0x8
      // Offset: 0x30
      ::System::Collections::Generic::List_1<::GlobalNamespace::TransferrableObject*>* bdPositions_allObjects;
      // Field size check
      static_assert(sizeof(::System::Collections::Generic::List_1<::GlobalNamespace::TransferrableObject*>*) == 0x8);
      // public System.Int32 bdPositions_allObjects_length
      // Size: 0x4
      // Offset: 0x38
      int bdPositions_allObjects_length;
      // Field size check
      static_assert(sizeof(int) == 0x4);
      // Padding between fields: bdPositions_allObjects_length and: bdPositions_leftHandThrowables
      char __padding7[0x4] = {};
      // public readonly System.Collections.Generic.List`1<UnityEngine.GameObject> bdPositions_leftHandThrowables
      // Size: 0x8
      // Offset: 0x40
      ::System::Collections::Generic::List_1<::UnityEngine::GameObject*>* bdPositions_leftHandThrowables;
      // Field size check
      static_assert(sizeof(::System::Collections::Generic::List_1<::UnityEngine::GameObject*>*) == 0x8);
      // public readonly System.Collections.Generic.List`1<UnityEngine.GameObject> bdPositions_rightHandThrowables
      // Size: 0x8
      // Offset: 0x48
      ::System::Collections::Generic::List_1<::UnityEngine::GameObject*>* bdPositions_rightHandThrowables;
      // Field size check
      static_assert(sizeof(::System::Collections::Generic::List_1<::UnityEngine::GameObject*>*) == 0x8);
      public:
      // Creating value type constructor for type: VRRigData
      constexpr VRRigData(::GlobalNamespace::VRRig* vrRig_ = {}, ::ArrayW<::UnityEngine::Transform*> boneXforms_ = ::ArrayW<::UnityEngine::Transform*>(static_cast<void*>(nullptr)), ::GlobalNamespace::BodyDockPositions* bdPositionsComp_ = {}, ::System::Collections::Generic::List_1<::UnityEngine::GameObject*>* vrRig_cosmetics_ = {}, ::System::Collections::Generic::List_1<::UnityEngine::GameObject*>* vrRig_override_ = {}, ::UnityEngine::Transform* parentOfDeactivatedHoldables_ = {}, ::System::Collections::Generic::List_1<::GlobalNamespace::TransferrableObject*>* bdPositions_allObjects_ = {}, int bdPositions_allObjects_length_ = {}, ::System::Collections::Generic::List_1<::UnityEngine::GameObject*>* bdPositions_leftHandThrowables_ = {}, ::System::Collections::Generic::List_1<::UnityEngine::GameObject*>* bdPositions_rightHandThrowables_ = {}) noexcept : vrRig{vrRig_}, boneXforms{boneXforms_}, bdPositionsComp{bdPositionsComp_}, vrRig_cosmetics{vrRig_cosmetics_}, vrRig_override{vrRig_override_}, parentOfDeactivatedHoldables{parentOfDeactivatedHoldables_}, bdPositions_allObjects{bdPositions_allObjects_}, bdPositions_allObjects_length{bdPositions_allObjects_length_}, bdPositions_leftHandThrowables{bdPositions_leftHandThrowables_}, bdPositions_rightHandThrowables{bdPositions_rightHandThrowables_} {}
      // Creating interface conversion operator: operator ::System::ValueType
      operator ::System::ValueType() noexcept {
        return *reinterpret_cast<::System::ValueType*>(this);
      }
      // Get instance field reference: public readonly VRRig vrRig
      [[deprecated("Use field access instead!")]] ::GlobalNamespace::VRRig*& dyn_vrRig();
      // Get instance field reference: public readonly UnityEngine.Transform[] boneXforms
      [[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Transform*>& dyn_boneXforms();
      // Get instance field reference: public readonly BodyDockPositions bdPositionsComp
      [[deprecated("Use field access instead!")]] ::GlobalNamespace::BodyDockPositions*& dyn_bdPositionsComp();
      // Get instance field reference: public readonly System.Collections.Generic.List`1<UnityEngine.GameObject> vrRig_cosmetics
      [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::GameObject*>*& dyn_vrRig_cosmetics();
      // Get instance field reference: public readonly System.Collections.Generic.List`1<UnityEngine.GameObject> vrRig_override
      [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::GameObject*>*& dyn_vrRig_override();
      // Get instance field reference: public readonly UnityEngine.Transform parentOfDeactivatedHoldables
      [[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& dyn_parentOfDeactivatedHoldables();
      // Get instance field reference: public readonly System.Collections.Generic.List`1<TransferrableObject> bdPositions_allObjects
      [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GlobalNamespace::TransferrableObject*>*& dyn_bdPositions_allObjects();
      // Get instance field reference: public System.Int32 bdPositions_allObjects_length
      [[deprecated("Use field access instead!")]] int& dyn_bdPositions_allObjects_length();
      // Get instance field reference: public readonly System.Collections.Generic.List`1<UnityEngine.GameObject> bdPositions_leftHandThrowables
      [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::GameObject*>*& dyn_bdPositions_leftHandThrowables();
      // Get instance field reference: public readonly System.Collections.Generic.List`1<UnityEngine.GameObject> bdPositions_rightHandThrowables
      [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::GameObject*>*& dyn_bdPositions_rightHandThrowables();
      // public System.Void .ctor(VRRig vrRig, UnityEngine.Transform[] boneXforms)
      // Offset: 0x2796B64
      VRRigData(::GlobalNamespace::VRRig* vrRig, ::ArrayW<::UnityEngine::Transform*> boneXforms);
    }; // CosmeticsV2Spawner_Dirty/VRRigData
    #pragma pack(pop)
    static check_size<sizeof(CosmeticsV2Spawner_Dirty::VRRigData), 72 + sizeof(::System::Collections::Generic::List_1<::UnityEngine::GameObject*>*)> __GlobalNamespace_CosmeticsV2Spawner_Dirty_VRRigDataSizeCheck;
    static_assert(sizeof(CosmeticsV2Spawner_Dirty::VRRigData) == 0x50);
    public:
    // private System.Boolean _shouldTick
    // Size: 0x1
    // Offset: 0x10
    bool shouldTick;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean <TickRunning>k__BackingField
    // Size: 0x1
    // Offset: 0x11
    bool TickRunning;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    public:
    // Creating interface conversion operator: operator ::GlobalNamespace::IDelayedExecListener
    operator ::GlobalNamespace::IDelayedExecListener() noexcept {
      return *reinterpret_cast<::GlobalNamespace::IDelayedExecListener*>(this);
    }
    // Creating interface conversion operator: operator ::GlobalNamespace::ITickSystemTick
    operator ::GlobalNamespace::ITickSystemTick() noexcept {
      return *reinterpret_cast<::GlobalNamespace::ITickSystemTick*>(this);
    }
    // Get static field: static private CosmeticsV2Spawner_Dirty _instance
    static ::GlobalNamespace::CosmeticsV2Spawner_Dirty* _get__instance();
    // Set static field: static private CosmeticsV2Spawner_Dirty _instance
    static void _set__instance(::GlobalNamespace::CosmeticsV2Spawner_Dirty* value);
    // Get static field: static public System.Action OnPostInstantiateAllPrefabs
    static ::System::Action* _get_OnPostInstantiateAllPrefabs();
    // Set static field: static public System.Action OnPostInstantiateAllPrefabs
    static void _set_OnPostInstantiateAllPrefabs(::System::Action* value);
    // Get static field: static public System.Action OnPostInstantiateAllPrefabs2
    static ::System::Action* _get_OnPostInstantiateAllPrefabs2();
    // Set static field: static public System.Action OnPostInstantiateAllPrefabs2
    static void _set_OnPostInstantiateAllPrefabs2(::System::Action* value);
    // Get static field: static private System.Boolean <allPartsInstantiated>k__BackingField
    static bool _get_$allPartsInstantiated$k__BackingField();
    // Set static field: static private System.Boolean <allPartsInstantiated>k__BackingField
    static void _set_$allPartsInstantiated$k__BackingField(bool value);
    // Get static field: static private System.Boolean <completed>k__BackingField
    static bool _get_$completed$k__BackingField();
    // Set static field: static private System.Boolean <completed>k__BackingField
    static void _set_$completed$k__BackingField(bool value);
    // Get static field: static private UnityEngine.Transform _gDeactivatedSpawnParent
    static ::UnityEngine::Transform* _get__gDeactivatedSpawnParent();
    // Set static field: static private UnityEngine.Transform _gDeactivatedSpawnParent
    static void _set__gDeactivatedSpawnParent(::UnityEngine::Transform* value);
    // Get static field: static private System.Int32 _g_loadOpsCountCompleted
    static int _get__g_loadOpsCountCompleted();
    // Set static field: static private System.Int32 _g_loadOpsCountCompleted
    static void _set__g_loadOpsCountCompleted(int value);
    // static field const value: static private System.Int32 _k_maxActiveLoadOps
    static constexpr const int _k_maxActiveLoadOps = 1000000;
    // Get static field: static private System.Int32 _k_maxActiveLoadOps
    static int _get__k_maxActiveLoadOps();
    // Set static field: static private System.Int32 _k_maxActiveLoadOps
    static void _set__k_maxActiveLoadOps(int value);
    // static field const value: static private System.Int32 _k_maxTotalLoadOps
    static constexpr const int _k_maxTotalLoadOps = 1000000;
    // Get static field: static private System.Int32 _k_maxTotalLoadOps
    static int _get__k_maxTotalLoadOps();
    // Set static field: static private System.Int32 _k_maxTotalLoadOps
    static void _set__k_maxTotalLoadOps(int value);
    // static field const value: static private System.Int32 _k_delayedStatusCheckContextId
    static constexpr const int _k_delayedStatusCheckContextId = -100;
    // Get static field: static private System.Int32 _k_delayedStatusCheckContextId
    static int _get__k_delayedStatusCheckContextId();
    // Set static field: static private System.Int32 _k_delayedStatusCheckContextId
    static void _set__k_delayedStatusCheckContextId(int value);
    // Get static field: static private readonly System.Collections.Generic.List`1<CosmeticsV2Spawner_Dirty/LoadOpInfo> _g_loadOpInfos
    static ::System::Collections::Generic::List_1<::GlobalNamespace::CosmeticsV2Spawner_Dirty::LoadOpInfo>* _get__g_loadOpInfos();
    // Set static field: static private readonly System.Collections.Generic.List`1<CosmeticsV2Spawner_Dirty/LoadOpInfo> _g_loadOpInfos
    static void _set__g_loadOpInfos(::System::Collections::Generic::List_1<::GlobalNamespace::CosmeticsV2Spawner_Dirty::LoadOpInfo>* value);
    // Get static field: static private readonly System.Collections.Generic.Dictionary`2<UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationHandle`1<UnityEngine.GameObject>,System.Int32> _g_loadOp_to_index
    static ::System::Collections::Generic::Dictionary_2<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<::UnityEngine::GameObject*>, int>* _get__g_loadOp_to_index();
    // Set static field: static private readonly System.Collections.Generic.Dictionary`2<UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationHandle`1<UnityEngine.GameObject>,System.Int32> _g_loadOp_to_index
    static void _set__g_loadOp_to_index(::System::Collections::Generic::Dictionary_2<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<::UnityEngine::GameObject*>, int>* value);
    // Get static field: static private SnowballMaker _gSnowballMakerLeft
    static ::GlobalNamespace::SnowballMaker* _get__gSnowballMakerLeft();
    // Set static field: static private SnowballMaker _gSnowballMakerLeft
    static void _set__gSnowballMakerLeft(::GlobalNamespace::SnowballMaker* value);
    // Get static field: static private readonly System.Collections.Generic.List`1<SnowballThrowable> _gSnowballMakerLeft_throwables
    static ::System::Collections::Generic::List_1<::GlobalNamespace::SnowballThrowable*>* _get__gSnowballMakerLeft_throwables();
    // Set static field: static private readonly System.Collections.Generic.List`1<SnowballThrowable> _gSnowballMakerLeft_throwables
    static void _set__gSnowballMakerLeft_throwables(::System::Collections::Generic::List_1<::GlobalNamespace::SnowballThrowable*>* value);
    // Get static field: static private SnowballMaker _gSnowballMakerRight
    static ::GlobalNamespace::SnowballMaker* _get__gSnowballMakerRight();
    // Set static field: static private SnowballMaker _gSnowballMakerRight
    static void _set__gSnowballMakerRight(::GlobalNamespace::SnowballMaker* value);
    // Get static field: static private readonly System.Collections.Generic.List`1<SnowballThrowable> _gSnowballMakerRight_throwables
    static ::System::Collections::Generic::List_1<::GlobalNamespace::SnowballThrowable*>* _get__gSnowballMakerRight_throwables();
    // Set static field: static private readonly System.Collections.Generic.List`1<SnowballThrowable> _gSnowballMakerRight_throwables
    static void _set__gSnowballMakerRight_throwables(::System::Collections::Generic::List_1<::GlobalNamespace::SnowballThrowable*>* value);
    // Get static field: static private GorillaLocomotion.Player g_gorillaPlayer
    static ::GorillaLocomotion::Player* _get_g_gorillaPlayer();
    // Set static field: static private GorillaLocomotion.Player g_gorillaPlayer
    static void _set_g_gorillaPlayer(::GorillaLocomotion::Player* value);
    // Get static field: static private UnityEngine.Transform[] g_allInstantiatedParts
    static ::ArrayW<::UnityEngine::Transform*> _get_g_allInstantiatedParts();
    // Set static field: static private UnityEngine.Transform[] g_allInstantiatedParts
    static void _set_g_allInstantiatedParts(::ArrayW<::UnityEngine::Transform*> value);
    // Get static field: static private System.Diagnostics.Stopwatch k_stopwatch
    static ::System::Diagnostics::Stopwatch* _get_k_stopwatch();
    // Set static field: static private System.Diagnostics.Stopwatch k_stopwatch
    static void _set_k_stopwatch(::System::Diagnostics::Stopwatch* value);
    // Get static field: static private readonly System.Collections.Generic.List`1<CosmeticsV2Spawner_Dirty/VRRigData> _gVRRigDatas
    static ::System::Collections::Generic::List_1<::GlobalNamespace::CosmeticsV2Spawner_Dirty::VRRigData>* _get__gVRRigDatas();
    // Set static field: static private readonly System.Collections.Generic.List`1<CosmeticsV2Spawner_Dirty/VRRigData> _gVRRigDatas
    static void _set__gVRRigDatas(::System::Collections::Generic::List_1<::GlobalNamespace::CosmeticsV2Spawner_Dirty::VRRigData>* value);
    // Get instance field reference: private System.Boolean _shouldTick
    [[deprecated("Use field access instead!")]] bool& dyn__shouldTick();
    // Get instance field reference: private System.Boolean <TickRunning>k__BackingField
    [[deprecated("Use field access instead!")]] bool& dyn_$TickRunning$k__BackingField();
    // static public System.Boolean get_allPartsInstantiated()
    // Offset: 0x2794A80
    static bool get_allPartsInstantiated();
    // static private System.Void set_allPartsInstantiated(System.Boolean value)
    // Offset: 0x2794AD8
    static void set_allPartsInstantiated(bool value);
    // static public System.Boolean get_completed()
    // Offset: 0x2794B38
    static bool get_completed();
    // static private System.Void set_completed(System.Boolean value)
    // Offset: 0x2794B90
    static void set_completed(bool value);
    // public System.Boolean get_TickRunning()
    // Offset: 0x2794BF0
    bool get_TickRunning();
    // public System.Void set_TickRunning(System.Boolean value)
    // Offset: 0x2794BF8
    void set_TickRunning(bool value);
    // private System.Void ITickSystemTick.Tick()
    // Offset: 0x2794C04
    void ITickSystemTick_Tick();
    // private System.Void IDelayedExecListener.OnDelayedAction(System.Int32 contextId)
    // Offset: 0x279503C
    void IDelayedExecListener_OnDelayedAction(int contextId);
    // static public System.Void StartInstantiatingPrefabs()
    // Offset: 0x27960E8
    static void StartInstantiatingPrefabs();
    // static private System.Void AddEachAttachInfoToLoadOpInfosList(GorillaTag.CosmeticSystem.CosmeticPart part, System.Int32 partIndex, GorillaTag.CosmeticSystem.CosmeticInfoV2 cosmeticInfo, System.Int32 vrRigIndex, ref System.Int32 partCount)
    // Offset: 0x2796F70
    static void AddEachAttachInfoToLoadOpInfosList(::GorillaTag::CosmeticSystem::CosmeticPart part, int partIndex, ::GorillaTag::CosmeticSystem::CosmeticInfoV2 cosmeticInfo, int vrRigIndex, ByRef<int> partCount);
    // static private System.Void _Step2_UpdateLoadOpStarting()
    // Offset: 0x2794D20
    static void _Step2_UpdateLoadOpStarting();
    // static private System.Void _Step3_HandleLoadOpCompleted(UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationHandle`1<UnityEngine.GameObject> loadOp)
    // Offset: 0x27972CC
    static void _Step3_HandleLoadOpCompleted(::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<::UnityEngine::GameObject*> loadOp);
    // static private System.Void _RetryDownload(System.Int32 loadOpIndex)
    // Offset: 0x2795164
    static void _RetryDownload(int loadOpIndex);
    // static private System.Void AddPartToThrowableLists(CosmeticsV2Spawner_Dirty/LoadOpInfo loadOpInfo, SnowballThrowable throwable)
    // Offset: 0x279860C
    static void AddPartToThrowableLists(::GlobalNamespace::CosmeticsV2Spawner_Dirty::LoadOpInfo loadOpInfo, ::GlobalNamespace::SnowballThrowable* throwable);
    // static private System.Void _Step4_PopulateAllArrays()
    // Offset: 0x2798C14
    static void _Step4_PopulateAllArrays();
    // static private System.Void _Step5_InitializeVRRigsAndCosmeticsControllerFinalize()
    // Offset: 0x2795990
    static void _Step5_InitializeVRRigsAndCosmeticsControllerFinalize();
    // private System.Void _DelayedStatusCheck()
    // Offset: 0x279573C
    void _DelayedStatusCheck();
    // public System.Void .ctor()
    // Offset: 0x2796B5C
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static CosmeticsV2Spawner_Dirty* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CosmeticsV2Spawner_Dirty::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<CosmeticsV2Spawner_Dirty*, creationType>()));
    }
    // static private System.Void .cctor()
    // Offset: 0x27992A4
    static void _cctor();
  }; // CosmeticsV2Spawner_Dirty
  #pragma pack(pop)
  static check_size<sizeof(CosmeticsV2Spawner_Dirty), 17 + sizeof(bool)> __GlobalNamespace_CosmeticsV2Spawner_DirtySizeCheck;
  static_assert(sizeof(CosmeticsV2Spawner_Dirty) == 0x12);
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::CosmeticsV2Spawner_Dirty::VRRigData, "", "CosmeticsV2Spawner_Dirty/VRRigData");
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::CosmeticsV2Spawner_Dirty::LoadOpInfo, "", "CosmeticsV2Spawner_Dirty/LoadOpInfo");
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::CosmeticsV2Spawner_Dirty::get_allPartsInstantiated
// Il2CppName: get_allPartsInstantiated
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&GlobalNamespace::CosmeticsV2Spawner_Dirty::get_allPartsInstantiated)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::CosmeticsV2Spawner_Dirty*), "get_allPartsInstantiated", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::CosmeticsV2Spawner_Dirty::set_allPartsInstantiated
// Il2CppName: set_allPartsInstantiated
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(bool)>(&GlobalNamespace::CosmeticsV2Spawner_Dirty::set_allPartsInstantiated)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::CosmeticsV2Spawner_Dirty*), "set_allPartsInstantiated", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::CosmeticsV2Spawner_Dirty::get_completed
// Il2CppName: get_completed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&GlobalNamespace::CosmeticsV2Spawner_Dirty::get_completed)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::CosmeticsV2Spawner_Dirty*), "get_completed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::CosmeticsV2Spawner_Dirty::set_completed
// Il2CppName: set_completed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(bool)>(&GlobalNamespace::CosmeticsV2Spawner_Dirty::set_completed)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::CosmeticsV2Spawner_Dirty*), "set_completed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::CosmeticsV2Spawner_Dirty::get_TickRunning
// Il2CppName: get_TickRunning
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (GlobalNamespace::CosmeticsV2Spawner_Dirty::*)()>(&GlobalNamespace::CosmeticsV2Spawner_Dirty::get_TickRunning)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::CosmeticsV2Spawner_Dirty*), "get_TickRunning", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::CosmeticsV2Spawner_Dirty::set_TickRunning
// Il2CppName: set_TickRunning
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::CosmeticsV2Spawner_Dirty::*)(bool)>(&GlobalNamespace::CosmeticsV2Spawner_Dirty::set_TickRunning)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::CosmeticsV2Spawner_Dirty*), "set_TickRunning", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::CosmeticsV2Spawner_Dirty::ITickSystemTick_Tick
// Il2CppName: ITickSystemTick.Tick
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::CosmeticsV2Spawner_Dirty::*)()>(&GlobalNamespace::CosmeticsV2Spawner_Dirty::ITickSystemTick_Tick)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::CosmeticsV2Spawner_Dirty*), "ITickSystemTick.Tick", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::CosmeticsV2Spawner_Dirty::IDelayedExecListener_OnDelayedAction
// Il2CppName: IDelayedExecListener.OnDelayedAction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::CosmeticsV2Spawner_Dirty::*)(int)>(&GlobalNamespace::CosmeticsV2Spawner_Dirty::IDelayedExecListener_OnDelayedAction)> {
  static const MethodInfo* get() {
    static auto* contextId = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::CosmeticsV2Spawner_Dirty*), "IDelayedExecListener.OnDelayedAction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{contextId});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::CosmeticsV2Spawner_Dirty::StartInstantiatingPrefabs
// Il2CppName: StartInstantiatingPrefabs
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&GlobalNamespace::CosmeticsV2Spawner_Dirty::StartInstantiatingPrefabs)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::CosmeticsV2Spawner_Dirty*), "StartInstantiatingPrefabs", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::CosmeticsV2Spawner_Dirty::AddEachAttachInfoToLoadOpInfosList
// Il2CppName: AddEachAttachInfoToLoadOpInfosList
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::GorillaTag::CosmeticSystem::CosmeticPart, int, ::GorillaTag::CosmeticSystem::CosmeticInfoV2, int, ByRef<int>)>(&GlobalNamespace::CosmeticsV2Spawner_Dirty::AddEachAttachInfoToLoadOpInfosList)> {
  static const MethodInfo* get() {
    static auto* part = &::il2cpp_utils::GetClassFromName("GorillaTag.CosmeticSystem", "CosmeticPart")->byval_arg;
    static auto* partIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* cosmeticInfo = &::il2cpp_utils::GetClassFromName("GorillaTag.CosmeticSystem", "CosmeticInfoV2")->byval_arg;
    static auto* vrRigIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* partCount = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::CosmeticsV2Spawner_Dirty*), "AddEachAttachInfoToLoadOpInfosList", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{part, partIndex, cosmeticInfo, vrRigIndex, partCount});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::CosmeticsV2Spawner_Dirty::_Step2_UpdateLoadOpStarting
// Il2CppName: _Step2_UpdateLoadOpStarting
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&GlobalNamespace::CosmeticsV2Spawner_Dirty::_Step2_UpdateLoadOpStarting)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::CosmeticsV2Spawner_Dirty*), "_Step2_UpdateLoadOpStarting", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::CosmeticsV2Spawner_Dirty::_Step3_HandleLoadOpCompleted
// Il2CppName: _Step3_HandleLoadOpCompleted
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<::UnityEngine::GameObject*>)>(&GlobalNamespace::CosmeticsV2Spawner_Dirty::_Step3_HandleLoadOpCompleted)> {
  static const MethodInfo* get() {
    static auto* loadOp = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("UnityEngine.ResourceManagement.AsyncOperations", "AsyncOperationHandle`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::CosmeticsV2Spawner_Dirty*), "_Step3_HandleLoadOpCompleted", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{loadOp});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::CosmeticsV2Spawner_Dirty::_RetryDownload
// Il2CppName: _RetryDownload
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int)>(&GlobalNamespace::CosmeticsV2Spawner_Dirty::_RetryDownload)> {
  static const MethodInfo* get() {
    static auto* loadOpIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::CosmeticsV2Spawner_Dirty*), "_RetryDownload", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{loadOpIndex});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::CosmeticsV2Spawner_Dirty::AddPartToThrowableLists
// Il2CppName: AddPartToThrowableLists
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::GlobalNamespace::CosmeticsV2Spawner_Dirty::LoadOpInfo, ::GlobalNamespace::SnowballThrowable*)>(&GlobalNamespace::CosmeticsV2Spawner_Dirty::AddPartToThrowableLists)> {
  static const MethodInfo* get() {
    static auto* loadOpInfo = &::il2cpp_utils::GetClassFromName("", "CosmeticsV2Spawner_Dirty/LoadOpInfo")->byval_arg;
    static auto* throwable = &::il2cpp_utils::GetClassFromName("", "SnowballThrowable")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::CosmeticsV2Spawner_Dirty*), "AddPartToThrowableLists", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{loadOpInfo, throwable});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::CosmeticsV2Spawner_Dirty::_Step4_PopulateAllArrays
// Il2CppName: _Step4_PopulateAllArrays
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&GlobalNamespace::CosmeticsV2Spawner_Dirty::_Step4_PopulateAllArrays)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::CosmeticsV2Spawner_Dirty*), "_Step4_PopulateAllArrays", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::CosmeticsV2Spawner_Dirty::_Step5_InitializeVRRigsAndCosmeticsControllerFinalize
// Il2CppName: _Step5_InitializeVRRigsAndCosmeticsControllerFinalize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&GlobalNamespace::CosmeticsV2Spawner_Dirty::_Step5_InitializeVRRigsAndCosmeticsControllerFinalize)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::CosmeticsV2Spawner_Dirty*), "_Step5_InitializeVRRigsAndCosmeticsControllerFinalize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::CosmeticsV2Spawner_Dirty::_DelayedStatusCheck
// Il2CppName: _DelayedStatusCheck
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::CosmeticsV2Spawner_Dirty::*)()>(&GlobalNamespace::CosmeticsV2Spawner_Dirty::_DelayedStatusCheck)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::CosmeticsV2Spawner_Dirty*), "_DelayedStatusCheck", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::CosmeticsV2Spawner_Dirty::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: GlobalNamespace::CosmeticsV2Spawner_Dirty::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&GlobalNamespace::CosmeticsV2Spawner_Dirty::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::CosmeticsV2Spawner_Dirty*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
