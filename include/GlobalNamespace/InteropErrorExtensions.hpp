// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Interop
#include "GlobalNamespace/Interop.hpp"
// Completed includes
// Type namespace: 
namespace GlobalNamespace {
  // Forward declaring type: InteropErrorExtensions
  class InteropErrorExtensions;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::InteropErrorExtensions);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::InteropErrorExtensions*, "", "InteropErrorExtensions");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: InteropErrorExtensions
  // [TokenAttribute] Offset: FFFFFFFF
  // [ExtensionAttribute] Offset: FFFFFFFF
  class InteropErrorExtensions : public ::Il2CppObject {
    public:
    // static public Interop/ErrorInfo Info(Interop/Error error)
    // Offset: 0x44A05FC
    static ::GlobalNamespace::Interop::ErrorInfo Info(::GlobalNamespace::Interop::Error error);
  }; // InteropErrorExtensions
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::InteropErrorExtensions::Info
// Il2CppName: Info
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::Interop::ErrorInfo (*)(::GlobalNamespace::Interop::Error)>(&GlobalNamespace::InteropErrorExtensions::Info)> {
  static const MethodInfo* get() {
    static auto* error = &::il2cpp_utils::GetClassFromName("", "Interop/Error")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::InteropErrorExtensions*), "Info", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{error});
  }
};
