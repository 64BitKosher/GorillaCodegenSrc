// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Enum
#include "System/Enum.hpp"
// Completed includes
// Type namespace: 
namespace GlobalNamespace {
  // Forward declaring type: SceneIndex
  struct SceneIndex;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::SceneIndex, "", "SceneIndex");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x4
  #pragma pack(push, 1)
  // Autogenerated type: SceneIndex
  // [TokenAttribute] Offset: FFFFFFFF
  struct SceneIndex/*, public ::System::Enum*/ {
    public:
    public:
    // public System.Int32 value__
    // Size: 0x4
    // Offset: 0x0
    int value;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Creating value type constructor for type: SceneIndex
    constexpr SceneIndex(int value_ = {}) noexcept : value{value_} {}
    // Creating interface conversion operator: operator ::System::Enum
    operator ::System::Enum() noexcept {
      return *reinterpret_cast<::System::Enum*>(this);
    }
    // Creating conversion operator: operator int
    constexpr operator int() const noexcept {
      return value;
    }
    // static field const value: static public SceneIndex GT
    static constexpr const int GT = 0;
    // Get static field: static public SceneIndex GT
    static ::GlobalNamespace::SceneIndex _get_GT();
    // Set static field: static public SceneIndex GT
    static void _set_GT(::GlobalNamespace::SceneIndex value);
    // static field const value: static public SceneIndex Canyon
    static constexpr const int Canyon = 1;
    // Get static field: static public SceneIndex Canyon
    static ::GlobalNamespace::SceneIndex _get_Canyon();
    // Set static field: static public SceneIndex Canyon
    static void _set_Canyon(::GlobalNamespace::SceneIndex value);
    // static field const value: static public SceneIndex Beach
    static constexpr const int Beach = 2;
    // Get static field: static public SceneIndex Beach
    static ::GlobalNamespace::SceneIndex _get_Beach();
    // Set static field: static public SceneIndex Beach
    static void _set_Beach(::GlobalNamespace::SceneIndex value);
    // static field const value: static public SceneIndex Cave
    static constexpr const int Cave = 3;
    // Get static field: static public SceneIndex Cave
    static ::GlobalNamespace::SceneIndex _get_Cave();
    // Set static field: static public SceneIndex Cave
    static void _set_Cave(::GlobalNamespace::SceneIndex value);
    // static field const value: static public SceneIndex Basement
    static constexpr const int Basement = 4;
    // Get static field: static public SceneIndex Basement
    static ::GlobalNamespace::SceneIndex _get_Basement();
    // Set static field: static public SceneIndex Basement
    static void _set_Basement(::GlobalNamespace::SceneIndex value);
    // static field const value: static public SceneIndex Mountain
    static constexpr const int Mountain = 5;
    // Get static field: static public SceneIndex Mountain
    static ::GlobalNamespace::SceneIndex _get_Mountain();
    // Set static field: static public SceneIndex Mountain
    static void _set_Mountain(::GlobalNamespace::SceneIndex value);
    // static field const value: static public SceneIndex Skyjungle
    static constexpr const int Skyjungle = 6;
    // Get static field: static public SceneIndex Skyjungle
    static ::GlobalNamespace::SceneIndex _get_Skyjungle();
    // Set static field: static public SceneIndex Skyjungle
    static void _set_Skyjungle(::GlobalNamespace::SceneIndex value);
    // static field const value: static public SceneIndex Rotating
    static constexpr const int Rotating = 7;
    // Get static field: static public SceneIndex Rotating
    static ::GlobalNamespace::SceneIndex _get_Rotating();
    // Set static field: static public SceneIndex Rotating
    static void _set_Rotating(::GlobalNamespace::SceneIndex value);
    // static field const value: static public SceneIndex Metropolis
    static constexpr const int Metropolis = 8;
    // Get static field: static public SceneIndex Metropolis
    static ::GlobalNamespace::SceneIndex _get_Metropolis();
    // Set static field: static public SceneIndex Metropolis
    static void _set_Metropolis(::GlobalNamespace::SceneIndex value);
    // static field const value: static public SceneIndex Attic
    static constexpr const int Attic = 9;
    // Get static field: static public SceneIndex Attic
    static ::GlobalNamespace::SceneIndex _get_Attic();
    // Set static field: static public SceneIndex Attic
    static void _set_Attic(::GlobalNamespace::SceneIndex value);
    // Get instance field reference: public System.Int32 value__
    [[deprecated("Use field access instead!")]] int& dyn_value__();
  }; // SceneIndex
  #pragma pack(pop)
  static check_size<sizeof(SceneIndex), 0 + sizeof(int)> __GlobalNamespace_SceneIndexSizeCheck;
  static_assert(sizeof(SceneIndex) == 0x4);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
