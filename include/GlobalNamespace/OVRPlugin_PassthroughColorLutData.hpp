// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: OVRPlugin
#include "GlobalNamespace/OVRPlugin.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
// Completed includes
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::OVRPlugin::PassthroughColorLutData, "", "OVRPlugin/PassthroughColorLutData");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x10
  #pragma pack(push, 1)
  // WARNING Layout: Sequential may not be correctly taken into account!
  // Autogenerated type: OVRPlugin/PassthroughColorLutData
  // [TokenAttribute] Offset: FFFFFFFF
  struct OVRPlugin::PassthroughColorLutData/*, public ::System::ValueType*/ {
    public:
    public:
    // public System.UInt32 BufferSize
    // Size: 0x4
    // Offset: 0x0
    uint BufferSize;
    // Field size check
    static_assert(sizeof(uint) == 0x4);
    // Padding between fields: BufferSize and: Buffer
    char __padding0[0x4] = {};
    // public System.IntPtr Buffer
    // Size: 0x8
    // Offset: 0x8
    ::System::IntPtr Buffer;
    // Field size check
    static_assert(sizeof(::System::IntPtr) == 0x8);
    public:
    // Creating value type constructor for type: PassthroughColorLutData
    constexpr PassthroughColorLutData(uint BufferSize_ = {}, ::System::IntPtr Buffer_ = {}) noexcept : BufferSize{BufferSize_}, Buffer{Buffer_} {}
    // Creating interface conversion operator: operator ::System::ValueType
    operator ::System::ValueType() noexcept {
      return *reinterpret_cast<::System::ValueType*>(this);
    }
    // Get instance field reference: public System.UInt32 BufferSize
    [[deprecated("Use field access instead!")]] uint& dyn_BufferSize();
    // Get instance field reference: public System.IntPtr Buffer
    [[deprecated("Use field access instead!")]] ::System::IntPtr& dyn_Buffer();
  }; // OVRPlugin/PassthroughColorLutData
  #pragma pack(pop)
  static check_size<sizeof(OVRPlugin::PassthroughColorLutData), 8 + sizeof(::System::IntPtr)> __GlobalNamespace_OVRPlugin_PassthroughColorLutDataSizeCheck;
  static_assert(sizeof(OVRPlugin::PassthroughColorLutData) == 0x10);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
