// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: OVRPlugin
#include "GlobalNamespace/OVRPlugin.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
// Completed includes
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::OVRPlugin::RenderModelPropertiesInternal, "", "OVRPlugin/RenderModelPropertiesInternal");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x18
  #pragma pack(push, 1)
  // WARNING Layout: Sequential may not be correctly taken into account!
  // Autogenerated type: OVRPlugin/RenderModelPropertiesInternal
  // [TokenAttribute] Offset: FFFFFFFF
  struct OVRPlugin::RenderModelPropertiesInternal/*, public ::System::ValueType*/ {
    public:
    public:
    // public System.Byte[] ModelName
    // Size: 0x8
    // Offset: 0x0
    ::ArrayW<uint8_t> ModelName;
    // Field size check
    static_assert(sizeof(::ArrayW<uint8_t>) == 0x8);
    // public System.UInt64 ModelKey
    // Size: 0x8
    // Offset: 0x8
    uint64_t ModelKey;
    // Field size check
    static_assert(sizeof(uint64_t) == 0x8);
    // public System.UInt32 VendorId
    // Size: 0x4
    // Offset: 0x10
    uint VendorId;
    // Field size check
    static_assert(sizeof(uint) == 0x4);
    // public System.UInt32 ModelVersion
    // Size: 0x4
    // Offset: 0x14
    uint ModelVersion;
    // Field size check
    static_assert(sizeof(uint) == 0x4);
    public:
    // Creating value type constructor for type: RenderModelPropertiesInternal
    constexpr RenderModelPropertiesInternal(::ArrayW<uint8_t> ModelName_ = ::ArrayW<uint8_t>(static_cast<void*>(nullptr)), uint64_t ModelKey_ = {}, uint VendorId_ = {}, uint ModelVersion_ = {}) noexcept : ModelName{ModelName_}, ModelKey{ModelKey_}, VendorId{VendorId_}, ModelVersion{ModelVersion_} {}
    // Creating interface conversion operator: operator ::System::ValueType
    operator ::System::ValueType() noexcept {
      return *reinterpret_cast<::System::ValueType*>(this);
    }
    // Get instance field reference: public System.Byte[] ModelName
    [[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& dyn_ModelName();
    // Get instance field reference: public System.UInt64 ModelKey
    [[deprecated("Use field access instead!")]] uint64_t& dyn_ModelKey();
    // Get instance field reference: public System.UInt32 VendorId
    [[deprecated("Use field access instead!")]] uint& dyn_VendorId();
    // Get instance field reference: public System.UInt32 ModelVersion
    [[deprecated("Use field access instead!")]] uint& dyn_ModelVersion();
  }; // OVRPlugin/RenderModelPropertiesInternal
  #pragma pack(pop)
  static check_size<sizeof(OVRPlugin::RenderModelPropertiesInternal), 20 + sizeof(uint)> __GlobalNamespace_OVRPlugin_RenderModelPropertiesInternalSizeCheck;
  static_assert(sizeof(OVRPlugin::RenderModelPropertiesInternal) == 0x18);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
