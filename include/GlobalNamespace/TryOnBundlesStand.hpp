// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: TryOnBundleButton
  class TryOnBundleButton;
  // Forward declaring type: TryOnPurchaseButton
  class TryOnPurchaseButton;
}
// Forward declaring namespace: UnityEngine::UI
namespace UnityEngine::UI {
  // Forward declaring type: Image
  class Image;
  // Forward declaring type: Text
  class Text;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Forward declaring namespace: GorillaNetworking::Store
namespace GorillaNetworking::Store {
  // Forward declaring type: StoreBundle
  class StoreBundle;
  // Forward declaring type: StoreBundleData
  class StoreBundleData;
}
// Forward declaring namespace: PlayFab
namespace PlayFab {
  // Forward declaring type: PlayFabError
  class PlayFabError;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Forward declaring type: TryOnBundlesStand
  class TryOnBundlesStand;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::TryOnBundlesStand);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::TryOnBundlesStand*, "", "TryOnBundlesStand");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0xA8
  #pragma pack(push, 1)
  // Autogenerated type: TryOnBundlesStand
  // [TokenAttribute] Offset: FFFFFFFF
  class TryOnBundlesStand : public ::UnityEngine::MonoBehaviour {
    public:
    public:
    // private TryOnBundleButton[] TryOnBundleButtons
    // Size: 0x8
    // Offset: 0x20
    ::ArrayW<::GlobalNamespace::TryOnBundleButton*> TryOnBundleButtons;
    // Field size check
    static_assert(sizeof(::ArrayW<::GlobalNamespace::TryOnBundleButton*>) == 0x8);
    // private UnityEngine.UI.Image[] BundleIcons
    // Size: 0x8
    // Offset: 0x28
    ::ArrayW<::UnityEngine::UI::Image*> BundleIcons;
    // Field size check
    static_assert(sizeof(::ArrayW<::UnityEngine::UI::Image*>) == 0x8);
    // private System.Int32 SelectedButtonIndex
    // Size: 0x4
    // Offset: 0x30
    int SelectedButtonIndex;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // Padding between fields: SelectedButtonIndex and: purchaseButton
    char __padding2[0x4] = {};
    // public TryOnPurchaseButton purchaseButton
    // Size: 0x8
    // Offset: 0x38
    ::GlobalNamespace::TryOnPurchaseButton* purchaseButton;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::TryOnPurchaseButton*) == 0x8);
    // public UnityEngine.UI.Image selectedBundleImage
    // Size: 0x8
    // Offset: 0x40
    ::UnityEngine::UI::Image* selectedBundleImage;
    // Field size check
    static_assert(sizeof(::UnityEngine::UI::Image*) == 0x8);
    // public UnityEngine.UI.Text computerScreenText
    // Size: 0x8
    // Offset: 0x48
    ::UnityEngine::UI::Text* computerScreenText;
    // Field size check
    static_assert(sizeof(::UnityEngine::UI::Text*) == 0x8);
    // public System.String ComputerDefaultTextTitleDataKey
    // Size: 0x8
    // Offset: 0x50
    ::StringW ComputerDefaultTextTitleDataKey;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private System.String ComputerDefaultTextTitleDataValue
    // Size: 0x8
    // Offset: 0x58
    ::StringW ComputerDefaultTextTitleDataValue;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public System.String ComputerAlreadyOwnTextTitleDataKey
    // Size: 0x8
    // Offset: 0x60
    ::StringW ComputerAlreadyOwnTextTitleDataKey;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private System.String ComputerAlreadyOwnTextTitleDataValue
    // Size: 0x8
    // Offset: 0x68
    ::StringW ComputerAlreadyOwnTextTitleDataValue;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public System.String PurchaseButtonDefaultTextTitleDataKey
    // Size: 0x8
    // Offset: 0x70
    ::StringW PurchaseButtonDefaultTextTitleDataKey;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private System.String PurchaseButtonDefaultTextTitleDataValue
    // Size: 0x8
    // Offset: 0x78
    ::StringW PurchaseButtonDefaultTextTitleDataValue;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public System.String PurchaseButtonAlreadyOwnTextTitleDataKey
    // Size: 0x8
    // Offset: 0x80
    ::StringW PurchaseButtonAlreadyOwnTextTitleDataKey;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private System.String PurchaseButtonAlreadyOwnTextTitleDataValue
    // Size: 0x8
    // Offset: 0x88
    ::StringW PurchaseButtonAlreadyOwnTextTitleDataValue;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private System.Boolean bError
    // Size: 0x1
    // Offset: 0x90
    bool bError;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: bError and: computerScreeErrorText
    char __padding14[0x7] = {};
    // public System.String computerScreeErrorText
    // Size: 0x8
    // Offset: 0x98
    ::StringW computerScreeErrorText;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private System.Collections.Generic.List`1<GorillaNetworking.Store.StoreBundle> storeBundles
    // Size: 0x8
    // Offset: 0xA0
    ::System::Collections::Generic::List_1<::GorillaNetworking::Store::StoreBundle*>* storeBundles;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::GorillaNetworking::Store::StoreBundle*>*) == 0x8);
    public:
    // Get instance field reference: private TryOnBundleButton[] TryOnBundleButtons
    [[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::TryOnBundleButton*>& dyn_TryOnBundleButtons();
    // Get instance field reference: private UnityEngine.UI.Image[] BundleIcons
    [[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::UI::Image*>& dyn_BundleIcons();
    // Get instance field reference: private System.Int32 SelectedButtonIndex
    [[deprecated("Use field access instead!")]] int& dyn_SelectedButtonIndex();
    // Get instance field reference: public TryOnPurchaseButton purchaseButton
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::TryOnPurchaseButton*& dyn_purchaseButton();
    // Get instance field reference: public UnityEngine.UI.Image selectedBundleImage
    [[deprecated("Use field access instead!")]] ::UnityEngine::UI::Image*& dyn_selectedBundleImage();
    // Get instance field reference: public UnityEngine.UI.Text computerScreenText
    [[deprecated("Use field access instead!")]] ::UnityEngine::UI::Text*& dyn_computerScreenText();
    // Get instance field reference: public System.String ComputerDefaultTextTitleDataKey
    [[deprecated("Use field access instead!")]] ::StringW& dyn_ComputerDefaultTextTitleDataKey();
    // Get instance field reference: private System.String ComputerDefaultTextTitleDataValue
    [[deprecated("Use field access instead!")]] ::StringW& dyn_ComputerDefaultTextTitleDataValue();
    // Get instance field reference: public System.String ComputerAlreadyOwnTextTitleDataKey
    [[deprecated("Use field access instead!")]] ::StringW& dyn_ComputerAlreadyOwnTextTitleDataKey();
    // Get instance field reference: private System.String ComputerAlreadyOwnTextTitleDataValue
    [[deprecated("Use field access instead!")]] ::StringW& dyn_ComputerAlreadyOwnTextTitleDataValue();
    // Get instance field reference: public System.String PurchaseButtonDefaultTextTitleDataKey
    [[deprecated("Use field access instead!")]] ::StringW& dyn_PurchaseButtonDefaultTextTitleDataKey();
    // Get instance field reference: private System.String PurchaseButtonDefaultTextTitleDataValue
    [[deprecated("Use field access instead!")]] ::StringW& dyn_PurchaseButtonDefaultTextTitleDataValue();
    // Get instance field reference: public System.String PurchaseButtonAlreadyOwnTextTitleDataKey
    [[deprecated("Use field access instead!")]] ::StringW& dyn_PurchaseButtonAlreadyOwnTextTitleDataKey();
    // Get instance field reference: private System.String PurchaseButtonAlreadyOwnTextTitleDataValue
    [[deprecated("Use field access instead!")]] ::StringW& dyn_PurchaseButtonAlreadyOwnTextTitleDataValue();
    // Get instance field reference: private System.Boolean bError
    [[deprecated("Use field access instead!")]] bool& dyn_bError();
    // Get instance field reference: public System.String computerScreeErrorText
    [[deprecated("Use field access instead!")]] ::StringW& dyn_computerScreeErrorText();
    // Get instance field reference: private System.Collections.Generic.List`1<GorillaNetworking.Store.StoreBundle> storeBundles
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GorillaNetworking::Store::StoreBundle*>*& dyn_storeBundles();
    // private System.String get_SelectedBundlePlayFabID()
    // Offset: 0x26CE830
    ::StringW get_SelectedBundlePlayFabID();
    // static public System.String CleanUpTitleDataValues(System.String titleDataResult)
    // Offset: 0x26CE86C
    static ::StringW CleanUpTitleDataValues(::StringW titleDataResult);
    // private System.Void InitalizeButtons()
    // Offset: 0x26CE97C
    void InitalizeButtons();
    // private System.Void Start()
    // Offset: 0x26CECD4
    void Start();
    // private System.Void OnComputerDefaultTextTitleDataSuccess(System.String data)
    // Offset: 0x26CEFFC
    void OnComputerDefaultTextTitleDataSuccess(::StringW data);
    // private System.Void OnComputerDefaultTextTitleDataFailure(PlayFab.PlayFabError error)
    // Offset: 0x26CF040
    void OnComputerDefaultTextTitleDataFailure(::PlayFab::PlayFabError* error);
    // private System.Void OnComputerAlreadyOwnTextTitleDataSuccess(System.String data)
    // Offset: 0x26CF124
    void OnComputerAlreadyOwnTextTitleDataSuccess(::StringW data);
    // private System.Void OnComputerAlreadyOwnTextTitleDataFailure(PlayFab.PlayFabError error)
    // Offset: 0x26CF148
    void OnComputerAlreadyOwnTextTitleDataFailure(::PlayFab::PlayFabError* error);
    // private System.Void OnPurchaseButtonDefaultTextTitleDataSuccess(System.String data)
    // Offset: 0x26CF214
    void OnPurchaseButtonDefaultTextTitleDataSuccess(::StringW data);
    // private System.Void OnPurchaseButtonDefaultTextTitleDataFailure(PlayFab.PlayFabError error)
    // Offset: 0x26CF270
    void OnPurchaseButtonDefaultTextTitleDataFailure(::PlayFab::PlayFabError* error);
    // private System.Void OnPurchaseButtonAlreadyOwnTextTitleDataSuccess(System.String data)
    // Offset: 0x26CF364
    void OnPurchaseButtonAlreadyOwnTextTitleDataSuccess(::StringW data);
    // private System.Void OnPurchaseButtonAlreadyOwnTextTitleDataFailure(PlayFab.PlayFabError error)
    // Offset: 0x26CF3A0
    void OnPurchaseButtonAlreadyOwnTextTitleDataFailure(::PlayFab::PlayFabError* error);
    // public System.Void ClearSelectedBundle()
    // Offset: 0x26CF47C
    void ClearSelectedBundle();
    // private System.Void RemoveBundle(System.String BundleID)
    // Offset: 0x26CF600
    void RemoveBundle(::StringW BundleID);
    // private System.Void TryOnBundle(System.String BundleID)
    // Offset: 0x26CF70C
    void TryOnBundle(::StringW BundleID);
    // public System.Void PressTryOnBundleButton(TryOnBundleButton pressedTryOnBundleButton, System.Boolean isLeftHand)
    // Offset: 0x26CF968
    void PressTryOnBundleButton(::GlobalNamespace::TryOnBundleButton* pressedTryOnBundleButton, bool isLeftHand);
    // private System.String GetComputerScreenText(System.String playfabBundleID)
    // Offset: 0x26CFDE0
    ::StringW GetComputerScreenText(::StringW playfabBundleID);
    // private System.String GetPurchaseButtonText(System.String playfabBundleID)
    // Offset: 0x26CFD58
    ::StringW GetPurchaseButtonText(::StringW playfabBundleID);
    // public System.Void PurchaseButtonPressed()
    // Offset: 0x26CFFBC
    void PurchaseButtonPressed();
    // public System.Void AlreadyOwnCheck()
    // Offset: 0x26CFE68
    void AlreadyOwnCheck();
    // public System.Void GetTryOnButtons()
    // Offset: 0x26CEA78
    void GetTryOnButtons();
    // public System.Void UpdateBundles(GorillaNetworking.Store.StoreBundleData[] Bundles)
    // Offset: 0x26D00D4
    void UpdateBundles(::ArrayW<::GorillaNetworking::Store::StoreBundleData*> Bundles);
    // private System.String GetBundleComputerErrorText(System.String PlayFabID)
    // Offset: 0x26D0094
    ::StringW GetBundleComputerErrorText(::StringW PlayFabID);
    // public System.Void ErrorCompleting()
    // Offset: 0x26D013C
    void ErrorCompleting();
    // public System.Void .ctor()
    // Offset: 0x26D0180
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static TryOnBundlesStand* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TryOnBundlesStand::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<TryOnBundlesStand*, creationType>()));
    }
  }; // TryOnBundlesStand
  #pragma pack(pop)
  static check_size<sizeof(TryOnBundlesStand), 160 + sizeof(::System::Collections::Generic::List_1<::GorillaNetworking::Store::StoreBundle*>*)> __GlobalNamespace_TryOnBundlesStandSizeCheck;
  static_assert(sizeof(TryOnBundlesStand) == 0xA8);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::TryOnBundlesStand::get_SelectedBundlePlayFabID
// Il2CppName: get_SelectedBundlePlayFabID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (GlobalNamespace::TryOnBundlesStand::*)()>(&GlobalNamespace::TryOnBundlesStand::get_SelectedBundlePlayFabID)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::TryOnBundlesStand*), "get_SelectedBundlePlayFabID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::TryOnBundlesStand::CleanUpTitleDataValues
// Il2CppName: CleanUpTitleDataValues
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::StringW)>(&GlobalNamespace::TryOnBundlesStand::CleanUpTitleDataValues)> {
  static const MethodInfo* get() {
    static auto* titleDataResult = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::TryOnBundlesStand*), "CleanUpTitleDataValues", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{titleDataResult});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::TryOnBundlesStand::InitalizeButtons
// Il2CppName: InitalizeButtons
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::TryOnBundlesStand::*)()>(&GlobalNamespace::TryOnBundlesStand::InitalizeButtons)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::TryOnBundlesStand*), "InitalizeButtons", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::TryOnBundlesStand::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::TryOnBundlesStand::*)()>(&GlobalNamespace::TryOnBundlesStand::Start)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::TryOnBundlesStand*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::TryOnBundlesStand::OnComputerDefaultTextTitleDataSuccess
// Il2CppName: OnComputerDefaultTextTitleDataSuccess
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::TryOnBundlesStand::*)(::StringW)>(&GlobalNamespace::TryOnBundlesStand::OnComputerDefaultTextTitleDataSuccess)> {
  static const MethodInfo* get() {
    static auto* data = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::TryOnBundlesStand*), "OnComputerDefaultTextTitleDataSuccess", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{data});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::TryOnBundlesStand::OnComputerDefaultTextTitleDataFailure
// Il2CppName: OnComputerDefaultTextTitleDataFailure
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::TryOnBundlesStand::*)(::PlayFab::PlayFabError*)>(&GlobalNamespace::TryOnBundlesStand::OnComputerDefaultTextTitleDataFailure)> {
  static const MethodInfo* get() {
    static auto* error = &::il2cpp_utils::GetClassFromName("PlayFab", "PlayFabError")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::TryOnBundlesStand*), "OnComputerDefaultTextTitleDataFailure", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{error});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::TryOnBundlesStand::OnComputerAlreadyOwnTextTitleDataSuccess
// Il2CppName: OnComputerAlreadyOwnTextTitleDataSuccess
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::TryOnBundlesStand::*)(::StringW)>(&GlobalNamespace::TryOnBundlesStand::OnComputerAlreadyOwnTextTitleDataSuccess)> {
  static const MethodInfo* get() {
    static auto* data = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::TryOnBundlesStand*), "OnComputerAlreadyOwnTextTitleDataSuccess", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{data});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::TryOnBundlesStand::OnComputerAlreadyOwnTextTitleDataFailure
// Il2CppName: OnComputerAlreadyOwnTextTitleDataFailure
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::TryOnBundlesStand::*)(::PlayFab::PlayFabError*)>(&GlobalNamespace::TryOnBundlesStand::OnComputerAlreadyOwnTextTitleDataFailure)> {
  static const MethodInfo* get() {
    static auto* error = &::il2cpp_utils::GetClassFromName("PlayFab", "PlayFabError")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::TryOnBundlesStand*), "OnComputerAlreadyOwnTextTitleDataFailure", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{error});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::TryOnBundlesStand::OnPurchaseButtonDefaultTextTitleDataSuccess
// Il2CppName: OnPurchaseButtonDefaultTextTitleDataSuccess
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::TryOnBundlesStand::*)(::StringW)>(&GlobalNamespace::TryOnBundlesStand::OnPurchaseButtonDefaultTextTitleDataSuccess)> {
  static const MethodInfo* get() {
    static auto* data = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::TryOnBundlesStand*), "OnPurchaseButtonDefaultTextTitleDataSuccess", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{data});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::TryOnBundlesStand::OnPurchaseButtonDefaultTextTitleDataFailure
// Il2CppName: OnPurchaseButtonDefaultTextTitleDataFailure
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::TryOnBundlesStand::*)(::PlayFab::PlayFabError*)>(&GlobalNamespace::TryOnBundlesStand::OnPurchaseButtonDefaultTextTitleDataFailure)> {
  static const MethodInfo* get() {
    static auto* error = &::il2cpp_utils::GetClassFromName("PlayFab", "PlayFabError")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::TryOnBundlesStand*), "OnPurchaseButtonDefaultTextTitleDataFailure", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{error});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::TryOnBundlesStand::OnPurchaseButtonAlreadyOwnTextTitleDataSuccess
// Il2CppName: OnPurchaseButtonAlreadyOwnTextTitleDataSuccess
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::TryOnBundlesStand::*)(::StringW)>(&GlobalNamespace::TryOnBundlesStand::OnPurchaseButtonAlreadyOwnTextTitleDataSuccess)> {
  static const MethodInfo* get() {
    static auto* data = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::TryOnBundlesStand*), "OnPurchaseButtonAlreadyOwnTextTitleDataSuccess", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{data});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::TryOnBundlesStand::OnPurchaseButtonAlreadyOwnTextTitleDataFailure
// Il2CppName: OnPurchaseButtonAlreadyOwnTextTitleDataFailure
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::TryOnBundlesStand::*)(::PlayFab::PlayFabError*)>(&GlobalNamespace::TryOnBundlesStand::OnPurchaseButtonAlreadyOwnTextTitleDataFailure)> {
  static const MethodInfo* get() {
    static auto* error = &::il2cpp_utils::GetClassFromName("PlayFab", "PlayFabError")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::TryOnBundlesStand*), "OnPurchaseButtonAlreadyOwnTextTitleDataFailure", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{error});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::TryOnBundlesStand::ClearSelectedBundle
// Il2CppName: ClearSelectedBundle
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::TryOnBundlesStand::*)()>(&GlobalNamespace::TryOnBundlesStand::ClearSelectedBundle)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::TryOnBundlesStand*), "ClearSelectedBundle", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::TryOnBundlesStand::RemoveBundle
// Il2CppName: RemoveBundle
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::TryOnBundlesStand::*)(::StringW)>(&GlobalNamespace::TryOnBundlesStand::RemoveBundle)> {
  static const MethodInfo* get() {
    static auto* BundleID = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::TryOnBundlesStand*), "RemoveBundle", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{BundleID});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::TryOnBundlesStand::TryOnBundle
// Il2CppName: TryOnBundle
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::TryOnBundlesStand::*)(::StringW)>(&GlobalNamespace::TryOnBundlesStand::TryOnBundle)> {
  static const MethodInfo* get() {
    static auto* BundleID = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::TryOnBundlesStand*), "TryOnBundle", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{BundleID});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::TryOnBundlesStand::PressTryOnBundleButton
// Il2CppName: PressTryOnBundleButton
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::TryOnBundlesStand::*)(::GlobalNamespace::TryOnBundleButton*, bool)>(&GlobalNamespace::TryOnBundlesStand::PressTryOnBundleButton)> {
  static const MethodInfo* get() {
    static auto* pressedTryOnBundleButton = &::il2cpp_utils::GetClassFromName("", "TryOnBundleButton")->byval_arg;
    static auto* isLeftHand = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::TryOnBundlesStand*), "PressTryOnBundleButton", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{pressedTryOnBundleButton, isLeftHand});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::TryOnBundlesStand::GetComputerScreenText
// Il2CppName: GetComputerScreenText
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (GlobalNamespace::TryOnBundlesStand::*)(::StringW)>(&GlobalNamespace::TryOnBundlesStand::GetComputerScreenText)> {
  static const MethodInfo* get() {
    static auto* playfabBundleID = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::TryOnBundlesStand*), "GetComputerScreenText", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{playfabBundleID});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::TryOnBundlesStand::GetPurchaseButtonText
// Il2CppName: GetPurchaseButtonText
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (GlobalNamespace::TryOnBundlesStand::*)(::StringW)>(&GlobalNamespace::TryOnBundlesStand::GetPurchaseButtonText)> {
  static const MethodInfo* get() {
    static auto* playfabBundleID = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::TryOnBundlesStand*), "GetPurchaseButtonText", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{playfabBundleID});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::TryOnBundlesStand::PurchaseButtonPressed
// Il2CppName: PurchaseButtonPressed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::TryOnBundlesStand::*)()>(&GlobalNamespace::TryOnBundlesStand::PurchaseButtonPressed)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::TryOnBundlesStand*), "PurchaseButtonPressed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::TryOnBundlesStand::AlreadyOwnCheck
// Il2CppName: AlreadyOwnCheck
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::TryOnBundlesStand::*)()>(&GlobalNamespace::TryOnBundlesStand::AlreadyOwnCheck)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::TryOnBundlesStand*), "AlreadyOwnCheck", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::TryOnBundlesStand::GetTryOnButtons
// Il2CppName: GetTryOnButtons
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::TryOnBundlesStand::*)()>(&GlobalNamespace::TryOnBundlesStand::GetTryOnButtons)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::TryOnBundlesStand*), "GetTryOnButtons", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::TryOnBundlesStand::UpdateBundles
// Il2CppName: UpdateBundles
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::TryOnBundlesStand::*)(::ArrayW<::GorillaNetworking::Store::StoreBundleData*>)>(&GlobalNamespace::TryOnBundlesStand::UpdateBundles)> {
  static const MethodInfo* get() {
    static auto* Bundles = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("GorillaNetworking.Store", "StoreBundleData"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::TryOnBundlesStand*), "UpdateBundles", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{Bundles});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::TryOnBundlesStand::GetBundleComputerErrorText
// Il2CppName: GetBundleComputerErrorText
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (GlobalNamespace::TryOnBundlesStand::*)(::StringW)>(&GlobalNamespace::TryOnBundlesStand::GetBundleComputerErrorText)> {
  static const MethodInfo* get() {
    static auto* PlayFabID = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::TryOnBundlesStand*), "GetBundleComputerErrorText", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{PlayFabID});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::TryOnBundlesStand::ErrorCompleting
// Il2CppName: ErrorCompleting
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::TryOnBundlesStand::*)()>(&GlobalNamespace::TryOnBundlesStand::ErrorCompleting)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::TryOnBundlesStand*), "ErrorCompleting", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::TryOnBundlesStand::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
