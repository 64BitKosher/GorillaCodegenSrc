// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: BodyDockPositions
#include "GlobalNamespace/BodyDockPositions.hpp"
// Including type: BodyDockPositions/DropPositions
#include "GlobalNamespace/BodyDockPositions_DropPositions.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::BodyDockPositions::DockingResult);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::BodyDockPositions::DockingResult*, "", "BodyDockPositions/DockingResult");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x20
  #pragma pack(push, 1)
  // Autogenerated type: BodyDockPositions/DockingResult
  // [TokenAttribute] Offset: FFFFFFFF
  class BodyDockPositions::DockingResult : public ::Il2CppObject {
    public:
    public:
    // public System.Collections.Generic.List`1<BodyDockPositions/DropPositions> positionsDisabled
    // Size: 0x8
    // Offset: 0x10
    ::System::Collections::Generic::List_1<::GlobalNamespace::BodyDockPositions::DropPositions>* positionsDisabled;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::GlobalNamespace::BodyDockPositions::DropPositions>*) == 0x8);
    // public System.Collections.Generic.List`1<BodyDockPositions/DropPositions> dockedPosition
    // Size: 0x8
    // Offset: 0x18
    ::System::Collections::Generic::List_1<::GlobalNamespace::BodyDockPositions::DropPositions>* dockedPosition;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::GlobalNamespace::BodyDockPositions::DropPositions>*) == 0x8);
    public:
    // Get instance field reference: public System.Collections.Generic.List`1<BodyDockPositions/DropPositions> positionsDisabled
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GlobalNamespace::BodyDockPositions::DropPositions>*& dyn_positionsDisabled();
    // Get instance field reference: public System.Collections.Generic.List`1<BodyDockPositions/DropPositions> dockedPosition
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GlobalNamespace::BodyDockPositions::DropPositions>*& dyn_dockedPosition();
    // public System.Void .ctor()
    // Offset: 0x26AECA8
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static BodyDockPositions::DockingResult* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BodyDockPositions::DockingResult::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<BodyDockPositions::DockingResult*, creationType>()));
    }
  }; // BodyDockPositions/DockingResult
  #pragma pack(pop)
  static check_size<sizeof(BodyDockPositions::DockingResult), 24 + sizeof(::System::Collections::Generic::List_1<::GlobalNamespace::BodyDockPositions::DropPositions>*)> __GlobalNamespace_BodyDockPositions_DockingResultSizeCheck;
  static_assert(sizeof(BodyDockPositions::DockingResult) == 0x20);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::BodyDockPositions::DockingResult::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
