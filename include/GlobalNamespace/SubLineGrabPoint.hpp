// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: SubGrabPoint
#include "GlobalNamespace/SubGrabPoint.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Transform
  class Transform;
}
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: SlotTransformOverride
  class SlotTransformOverride;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Forward declaring type: SubLineGrabPoint
  class SubLineGrabPoint;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::SubLineGrabPoint);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::SubLineGrabPoint*, "", "SubLineGrabPoint");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x150
  #pragma pack(push, 1)
  // Autogenerated type: SubLineGrabPoint
  // [TokenAttribute] Offset: FFFFFFFF
  class SubLineGrabPoint : public ::GlobalNamespace::SubGrabPoint {
    public:
    public:
    // public UnityEngine.Transform startPoint
    // Size: 0x8
    // Offset: 0xA8
    ::UnityEngine::Transform* startPoint;
    // Field size check
    static_assert(sizeof(::UnityEngine::Transform*) == 0x8);
    // public UnityEngine.Transform endPoint
    // Size: 0x8
    // Offset: 0xB0
    ::UnityEngine::Transform* endPoint;
    // Field size check
    static_assert(sizeof(::UnityEngine::Transform*) == 0x8);
    // public UnityEngine.Vector3 startPointRelativeToGrabPointOrigin
    // Size: 0xC
    // Offset: 0xB8
    ::UnityEngine::Vector3 startPointRelativeToGrabPointOrigin;
    // Field size check
    static_assert(sizeof(::UnityEngine::Vector3) == 0xC);
    // public UnityEngine.Vector3 endPointRelativeToGrabPointOrigin
    // Size: 0xC
    // Offset: 0xC4
    ::UnityEngine::Vector3 endPointRelativeToGrabPointOrigin;
    // Field size check
    static_assert(sizeof(::UnityEngine::Vector3) == 0xC);
    // public UnityEngine.Matrix4x4 startPointRelativeTransformToGrabPointOrigin
    // Size: 0x40
    // Offset: 0xD0
    ::UnityEngine::Matrix4x4 startPointRelativeTransformToGrabPointOrigin;
    // Field size check
    static_assert(sizeof(::UnityEngine::Matrix4x4) == 0x40);
    // public UnityEngine.Matrix4x4 endPointRelativeTransformToGrabPointOrigin
    // Size: 0x40
    // Offset: 0x110
    ::UnityEngine::Matrix4x4 endPointRelativeTransformToGrabPointOrigin;
    // Field size check
    static_assert(sizeof(::UnityEngine::Matrix4x4) == 0x40);
    public:
    // Get instance field reference: public UnityEngine.Transform startPoint
    [[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& dyn_startPoint();
    // Get instance field reference: public UnityEngine.Transform endPoint
    [[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& dyn_endPoint();
    // Get instance field reference: public UnityEngine.Vector3 startPointRelativeToGrabPointOrigin
    [[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& dyn_startPointRelativeToGrabPointOrigin();
    // Get instance field reference: public UnityEngine.Vector3 endPointRelativeToGrabPointOrigin
    [[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& dyn_endPointRelativeToGrabPointOrigin();
    // Get instance field reference: public UnityEngine.Matrix4x4 startPointRelativeTransformToGrabPointOrigin
    [[deprecated("Use field access instead!")]] ::UnityEngine::Matrix4x4& dyn_startPointRelativeTransformToGrabPointOrigin();
    // Get instance field reference: public UnityEngine.Matrix4x4 endPointRelativeTransformToGrabPointOrigin
    [[deprecated("Use field access instead!")]] ::UnityEngine::Matrix4x4& dyn_endPointRelativeTransformToGrabPointOrigin();
    // static System.Single <GetPreData>g__FindNearestFractionOnLine|8_0(UnityEngine.Vector3 origin, UnityEngine.Vector3 end, UnityEngine.Vector3 point)
    // Offset: 0x26C3058
    static float $GetPreData$g__FindNearestFractionOnLine_8_0(::UnityEngine::Vector3 origin, ::UnityEngine::Vector3 end, ::UnityEngine::Vector3 point);
    // static System.Single <EvaluateScore>g__FindNearestFractionOnLine|9_0(UnityEngine.Vector3 origin, UnityEngine.Vector3 end, UnityEngine.Vector3 point)
    // Offset: 0x26C32CC
    static float $EvaluateScore$g__FindNearestFractionOnLine_9_0(::UnityEngine::Vector3 origin, ::UnityEngine::Vector3 end, ::UnityEngine::Vector3 point);
    // public override UnityEngine.Matrix4x4 GetTransformation_GripPointLocalToAdvOriginLocal(AdvancedItemState/PreData advancedItemState, SlotTransformOverride slotTransformOverride)
    // Offset: 0x26C2B6C
    // Implemented from: SubGrabPoint
    // Base method: UnityEngine.Matrix4x4 SubGrabPoint::GetTransformation_GripPointLocalToAdvOriginLocal(AdvancedItemState/PreData advancedItemState, SlotTransformOverride slotTransformOverride)
    ::UnityEngine::Matrix4x4 GetTransformation_GripPointLocalToAdvOriginLocal(::GlobalNamespace::AdvancedItemState::PreData* advancedItemState, ::GlobalNamespace::SlotTransformOverride* slotTransformOverride);
    // public override System.Void InitializePoints(UnityEngine.Transform anchor, UnityEngine.Transform grabPointAnchor, UnityEngine.Transform advancedGrabPointOrigin)
    // Offset: 0x26C2D28
    // Implemented from: SubGrabPoint
    // Base method: System.Void SubGrabPoint::InitializePoints(UnityEngine.Transform anchor, UnityEngine.Transform grabPointAnchor, UnityEngine.Transform advancedGrabPointOrigin)
    void InitializePoints(::UnityEngine::Transform* anchor, ::UnityEngine::Transform* grabPointAnchor, ::UnityEngine::Transform* advancedGrabPointOrigin);
    // public override AdvancedItemState/PreData GetPreData(UnityEngine.Transform objectTransform, UnityEngine.Transform handTransform, UnityEngine.Transform targetDock, SlotTransformOverride slotTransformOverride)
    // Offset: 0x26C2F40
    // Implemented from: SubGrabPoint
    // Base method: AdvancedItemState/PreData SubGrabPoint::GetPreData(UnityEngine.Transform objectTransform, UnityEngine.Transform handTransform, UnityEngine.Transform targetDock, SlotTransformOverride slotTransformOverride)
    ::GlobalNamespace::AdvancedItemState::PreData* GetPreData(::UnityEngine::Transform* objectTransform, ::UnityEngine::Transform* handTransform, ::UnityEngine::Transform* targetDock, ::GlobalNamespace::SlotTransformOverride* slotTransformOverride);
    // public override System.Single EvaluateScore(UnityEngine.Transform objectTransform, UnityEngine.Transform handTransform, UnityEngine.Transform targetDock)
    // Offset: 0x26C3154
    // Implemented from: SubGrabPoint
    // Base method: System.Single SubGrabPoint::EvaluateScore(UnityEngine.Transform objectTransform, UnityEngine.Transform handTransform, UnityEngine.Transform targetDock)
    float EvaluateScore(::UnityEngine::Transform* objectTransform, ::UnityEngine::Transform* handTransform, ::UnityEngine::Transform* targetDock);
    // public System.Void .ctor()
    // Offset: 0x26C33C8
    // Implemented from: SubGrabPoint
    // Base method: System.Void SubGrabPoint::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static SubLineGrabPoint* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SubLineGrabPoint::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<SubLineGrabPoint*, creationType>()));
    }
  }; // SubLineGrabPoint
  #pragma pack(pop)
  static check_size<sizeof(SubLineGrabPoint), 272 + sizeof(::UnityEngine::Matrix4x4)> __GlobalNamespace_SubLineGrabPointSizeCheck;
  static_assert(sizeof(SubLineGrabPoint) == 0x150);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::SubLineGrabPoint::$GetPreData$g__FindNearestFractionOnLine_8_0
// Il2CppName: <GetPreData>g__FindNearestFractionOnLine|8_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (*)(::UnityEngine::Vector3, ::UnityEngine::Vector3, ::UnityEngine::Vector3)>(&GlobalNamespace::SubLineGrabPoint::$GetPreData$g__FindNearestFractionOnLine_8_0)> {
  static const MethodInfo* get() {
    static auto* origin = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* end = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* point = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::SubLineGrabPoint*), "<GetPreData>g__FindNearestFractionOnLine|8_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{origin, end, point});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::SubLineGrabPoint::$EvaluateScore$g__FindNearestFractionOnLine_9_0
// Il2CppName: <EvaluateScore>g__FindNearestFractionOnLine|9_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (*)(::UnityEngine::Vector3, ::UnityEngine::Vector3, ::UnityEngine::Vector3)>(&GlobalNamespace::SubLineGrabPoint::$EvaluateScore$g__FindNearestFractionOnLine_9_0)> {
  static const MethodInfo* get() {
    static auto* origin = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* end = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* point = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::SubLineGrabPoint*), "<EvaluateScore>g__FindNearestFractionOnLine|9_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{origin, end, point});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::SubLineGrabPoint::GetTransformation_GripPointLocalToAdvOriginLocal
// Il2CppName: GetTransformation_GripPointLocalToAdvOriginLocal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Matrix4x4 (GlobalNamespace::SubLineGrabPoint::*)(::GlobalNamespace::AdvancedItemState::PreData*, ::GlobalNamespace::SlotTransformOverride*)>(&GlobalNamespace::SubLineGrabPoint::GetTransformation_GripPointLocalToAdvOriginLocal)> {
  static const MethodInfo* get() {
    static auto* advancedItemState = &::il2cpp_utils::GetClassFromName("", "AdvancedItemState/PreData")->byval_arg;
    static auto* slotTransformOverride = &::il2cpp_utils::GetClassFromName("", "SlotTransformOverride")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::SubLineGrabPoint*), "GetTransformation_GripPointLocalToAdvOriginLocal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{advancedItemState, slotTransformOverride});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::SubLineGrabPoint::InitializePoints
// Il2CppName: InitializePoints
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::SubLineGrabPoint::*)(::UnityEngine::Transform*, ::UnityEngine::Transform*, ::UnityEngine::Transform*)>(&GlobalNamespace::SubLineGrabPoint::InitializePoints)> {
  static const MethodInfo* get() {
    static auto* anchor = &::il2cpp_utils::GetClassFromName("UnityEngine", "Transform")->byval_arg;
    static auto* grabPointAnchor = &::il2cpp_utils::GetClassFromName("UnityEngine", "Transform")->byval_arg;
    static auto* advancedGrabPointOrigin = &::il2cpp_utils::GetClassFromName("UnityEngine", "Transform")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::SubLineGrabPoint*), "InitializePoints", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{anchor, grabPointAnchor, advancedGrabPointOrigin});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::SubLineGrabPoint::GetPreData
// Il2CppName: GetPreData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::AdvancedItemState::PreData* (GlobalNamespace::SubLineGrabPoint::*)(::UnityEngine::Transform*, ::UnityEngine::Transform*, ::UnityEngine::Transform*, ::GlobalNamespace::SlotTransformOverride*)>(&GlobalNamespace::SubLineGrabPoint::GetPreData)> {
  static const MethodInfo* get() {
    static auto* objectTransform = &::il2cpp_utils::GetClassFromName("UnityEngine", "Transform")->byval_arg;
    static auto* handTransform = &::il2cpp_utils::GetClassFromName("UnityEngine", "Transform")->byval_arg;
    static auto* targetDock = &::il2cpp_utils::GetClassFromName("UnityEngine", "Transform")->byval_arg;
    static auto* slotTransformOverride = &::il2cpp_utils::GetClassFromName("", "SlotTransformOverride")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::SubLineGrabPoint*), "GetPreData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{objectTransform, handTransform, targetDock, slotTransformOverride});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::SubLineGrabPoint::EvaluateScore
// Il2CppName: EvaluateScore
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (GlobalNamespace::SubLineGrabPoint::*)(::UnityEngine::Transform*, ::UnityEngine::Transform*, ::UnityEngine::Transform*)>(&GlobalNamespace::SubLineGrabPoint::EvaluateScore)> {
  static const MethodInfo* get() {
    static auto* objectTransform = &::il2cpp_utils::GetClassFromName("UnityEngine", "Transform")->byval_arg;
    static auto* handTransform = &::il2cpp_utils::GetClassFromName("UnityEngine", "Transform")->byval_arg;
    static auto* targetDock = &::il2cpp_utils::GetClassFromName("UnityEngine", "Transform")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::SubLineGrabPoint*), "EvaluateScore", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{objectTransform, handTransform, targetDock});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::SubLineGrabPoint::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
