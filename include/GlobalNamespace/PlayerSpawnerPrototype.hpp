// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: SpawnerPrototype`1
#include "GlobalNamespace/SpawnerPrototype_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: PlayerSpawnPointPrototype
  class PlayerSpawnPointPrototype;
}
// Forward declaring namespace: Fusion
namespace Fusion {
  // Skipping declaration: PlayerRef because it is already included!
  // Forward declaring type: NetworkObject
  class NetworkObject;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Forward declaring type: PlayerSpawnerPrototype
  class PlayerSpawnerPrototype;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::PlayerSpawnerPrototype);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::PlayerSpawnerPrototype*, "", "PlayerSpawnerPrototype");
// Type namespace: 
namespace GlobalNamespace {
  // WARNING Size may be invalid!
  // Autogenerated type: PlayerSpawnerPrototype
  // [TokenAttribute] Offset: FFFFFFFF
  // [SimulationBehaviourAttribute] Offset: FFFFFFFF
  class PlayerSpawnerPrototype : public ::GlobalNamespace::SpawnerPrototype_1<::GlobalNamespace::PlayerSpawnPointPrototype*> {
    public:
    // protected override System.Void RegisterPlayerAndObject(Fusion.PlayerRef player, Fusion.NetworkObject playerObject)
    // Offset: 0x295FC7C
    // Implemented from: SpawnerPrototype`1
    // Base method: System.Void SpawnerPrototype_1::RegisterPlayerAndObject(Fusion.PlayerRef player, Fusion.NetworkObject playerObject)
    void RegisterPlayerAndObject(::Fusion::PlayerRef player, ::Fusion::NetworkObject* playerObject);
    // public System.Void .ctor()
    // Offset: 0x295FCFC
    // Implemented from: SpawnerPrototype`1
    // Base method: System.Void SpawnerPrototype_1::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static PlayerSpawnerPrototype* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSpawnerPrototype::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<PlayerSpawnerPrototype*, creationType>()));
    }
  }; // PlayerSpawnerPrototype
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::PlayerSpawnerPrototype::RegisterPlayerAndObject
// Il2CppName: RegisterPlayerAndObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::PlayerSpawnerPrototype::*)(::Fusion::PlayerRef, ::Fusion::NetworkObject*)>(&GlobalNamespace::PlayerSpawnerPrototype::RegisterPlayerAndObject)> {
  static const MethodInfo* get() {
    static auto* player = &::il2cpp_utils::GetClassFromName("Fusion", "PlayerRef")->byval_arg;
    static auto* playerObject = &::il2cpp_utils::GetClassFromName("Fusion", "NetworkObject")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::PlayerSpawnerPrototype*), "RegisterPlayerAndObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{player, playerObject});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::PlayerSpawnerPrototype::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
