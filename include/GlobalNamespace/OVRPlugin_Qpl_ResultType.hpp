// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: OVRPlugin/Qpl
#include "GlobalNamespace/OVRPlugin_Qpl.hpp"
// Including type: System.Enum
#include "System/Enum.hpp"
// Completed includes
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::OVRPlugin::Qpl::ResultType, "", "OVRPlugin/Qpl/ResultType");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x2
  #pragma pack(push, 1)
  // Autogenerated type: OVRPlugin/Qpl/ResultType
  // [TokenAttribute] Offset: FFFFFFFF
  struct OVRPlugin::Qpl::ResultType/*, public ::System::Enum*/ {
    public:
    public:
    // public System.Int16 value__
    // Size: 0x2
    // Offset: 0x0
    int16_t value;
    // Field size check
    static_assert(sizeof(int16_t) == 0x2);
    public:
    // Creating value type constructor for type: ResultType
    constexpr ResultType(int16_t value_ = {}) noexcept : value{value_} {}
    // Creating interface conversion operator: operator ::System::Enum
    operator ::System::Enum() noexcept {
      return *reinterpret_cast<::System::Enum*>(this);
    }
    // Creating conversion operator: operator int16_t
    constexpr operator int16_t() const noexcept {
      return value;
    }
    // static field const value: static public OVRPlugin/Qpl/ResultType Success
    static constexpr const int16_t Success = 2;
    // Get static field: static public OVRPlugin/Qpl/ResultType Success
    static ::GlobalNamespace::OVRPlugin::Qpl::ResultType _get_Success();
    // Set static field: static public OVRPlugin/Qpl/ResultType Success
    static void _set_Success(::GlobalNamespace::OVRPlugin::Qpl::ResultType value);
    // static field const value: static public OVRPlugin/Qpl/ResultType Fail
    static constexpr const int16_t Fail = 3;
    // Get static field: static public OVRPlugin/Qpl/ResultType Fail
    static ::GlobalNamespace::OVRPlugin::Qpl::ResultType _get_Fail();
    // Set static field: static public OVRPlugin/Qpl/ResultType Fail
    static void _set_Fail(::GlobalNamespace::OVRPlugin::Qpl::ResultType value);
    // static field const value: static public OVRPlugin/Qpl/ResultType Cancel
    static constexpr const int16_t Cancel = 4;
    // Get static field: static public OVRPlugin/Qpl/ResultType Cancel
    static ::GlobalNamespace::OVRPlugin::Qpl::ResultType _get_Cancel();
    // Set static field: static public OVRPlugin/Qpl/ResultType Cancel
    static void _set_Cancel(::GlobalNamespace::OVRPlugin::Qpl::ResultType value);
    // Get instance field reference: public System.Int16 value__
    [[deprecated("Use field access instead!")]] int16_t& dyn_value__();
  }; // OVRPlugin/Qpl/ResultType
  #pragma pack(pop)
  static check_size<sizeof(OVRPlugin::Qpl::ResultType), 0 + sizeof(int16_t)> __GlobalNamespace_OVRPlugin_Qpl_ResultTypeSizeCheck;
  static_assert(sizeof(OVRPlugin::Qpl::ResultType) == 0x2);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
