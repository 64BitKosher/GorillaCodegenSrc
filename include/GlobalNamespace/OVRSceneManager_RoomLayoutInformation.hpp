// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: OVRSceneManager
#include "GlobalNamespace/OVRSceneManager.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: OVRScenePlane
  class OVRScenePlane;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::OVRSceneManager::RoomLayoutInformation);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::OVRSceneManager::RoomLayoutInformation*, "", "OVRSceneManager/RoomLayoutInformation");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x28
  #pragma pack(push, 1)
  // Autogenerated type: OVRSceneManager/RoomLayoutInformation
  // [TokenAttribute] Offset: FFFFFFFF
  // [ObsoleteAttribute] Offset: FFFFFFFF
  class OVRSceneManager::RoomLayoutInformation : public ::Il2CppObject {
    public:
    public:
    // public OVRScenePlane Floor
    // Size: 0x8
    // Offset: 0x10
    ::GlobalNamespace::OVRScenePlane* Floor;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::OVRScenePlane*) == 0x8);
    // public OVRScenePlane Ceiling
    // Size: 0x8
    // Offset: 0x18
    ::GlobalNamespace::OVRScenePlane* Ceiling;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::OVRScenePlane*) == 0x8);
    // public System.Collections.Generic.List`1<OVRScenePlane> Walls
    // Size: 0x8
    // Offset: 0x20
    ::System::Collections::Generic::List_1<::GlobalNamespace::OVRScenePlane*>* Walls;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::GlobalNamespace::OVRScenePlane*>*) == 0x8);
    public:
    // Get instance field reference: public OVRScenePlane Floor
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRScenePlane*& dyn_Floor();
    // Get instance field reference: public OVRScenePlane Ceiling
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRScenePlane*& dyn_Ceiling();
    // Get instance field reference: public System.Collections.Generic.List`1<OVRScenePlane> Walls
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GlobalNamespace::OVRScenePlane*>*& dyn_Walls();
    // public System.Void .ctor()
    // Offset: 0x4920554
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static OVRSceneManager::RoomLayoutInformation* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneManager::RoomLayoutInformation::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<OVRSceneManager::RoomLayoutInformation*, creationType>()));
    }
  }; // OVRSceneManager/RoomLayoutInformation
  #pragma pack(pop)
  static check_size<sizeof(OVRSceneManager::RoomLayoutInformation), 32 + sizeof(::System::Collections::Generic::List_1<::GlobalNamespace::OVRScenePlane*>*)> __GlobalNamespace_OVRSceneManager_RoomLayoutInformationSizeCheck;
  static_assert(sizeof(OVRSceneManager::RoomLayoutInformation) == 0x28);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::OVRSceneManager::RoomLayoutInformation::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
