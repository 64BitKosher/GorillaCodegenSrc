// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
// Including type: GorillaPlayerLineButton/ButtonType
#include "GlobalNamespace/GorillaPlayerLineButton.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: GorillaPlayerScoreboardLine
  class GorillaPlayerScoreboardLine;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Material
  class Material;
  // Forward declaring type: Collider
  class Collider;
}
// Forward declaring namespace: UnityEngine::UI
namespace UnityEngine::UI {
  // Forward declaring type: Text
  class Text;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Forward declaring type: GorillaReportButton
  class GorillaReportButton;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::GorillaReportButton);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::GorillaReportButton*, "", "GorillaReportButton");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x6A
  #pragma pack(push, 1)
  // Autogenerated type: GorillaReportButton
  // [TokenAttribute] Offset: FFFFFFFF
  class GorillaReportButton : public ::UnityEngine::MonoBehaviour {
    public:
    // Nested type: ::GlobalNamespace::GorillaReportButton::MetaReportReason
    struct MetaReportReason;
    // Size: 0x4
    #pragma pack(push, 1)
    // Autogenerated type: GorillaReportButton/MetaReportReason
    // [TokenAttribute] Offset: FFFFFFFF
    // [SerializeField] Offset: FFFFFFFF
    struct MetaReportReason/*, public ::System::Enum*/ {
      public:
      public:
      // public System.Int32 value__
      // Size: 0x4
      // Offset: 0x0
      int value;
      // Field size check
      static_assert(sizeof(int) == 0x4);
      public:
      // Creating value type constructor for type: MetaReportReason
      constexpr MetaReportReason(int value_ = {}) noexcept : value{value_} {}
      // Creating interface conversion operator: operator ::System::Enum
      operator ::System::Enum() noexcept {
        return *reinterpret_cast<::System::Enum*>(this);
      }
      // Creating conversion operator: operator int
      constexpr operator int() const noexcept {
        return value;
      }
      // static field const value: static public GorillaReportButton/MetaReportReason HateSpeech
      static constexpr const int HateSpeech = 0;
      // Get static field: static public GorillaReportButton/MetaReportReason HateSpeech
      static ::GlobalNamespace::GorillaReportButton::MetaReportReason _get_HateSpeech();
      // Set static field: static public GorillaReportButton/MetaReportReason HateSpeech
      static void _set_HateSpeech(::GlobalNamespace::GorillaReportButton::MetaReportReason value);
      // static field const value: static public GorillaReportButton/MetaReportReason Cheating
      static constexpr const int Cheating = 1;
      // Get static field: static public GorillaReportButton/MetaReportReason Cheating
      static ::GlobalNamespace::GorillaReportButton::MetaReportReason _get_Cheating();
      // Set static field: static public GorillaReportButton/MetaReportReason Cheating
      static void _set_Cheating(::GlobalNamespace::GorillaReportButton::MetaReportReason value);
      // static field const value: static public GorillaReportButton/MetaReportReason Toxicity
      static constexpr const int Toxicity = 2;
      // Get static field: static public GorillaReportButton/MetaReportReason Toxicity
      static ::GlobalNamespace::GorillaReportButton::MetaReportReason _get_Toxicity();
      // Set static field: static public GorillaReportButton/MetaReportReason Toxicity
      static void _set_Toxicity(::GlobalNamespace::GorillaReportButton::MetaReportReason value);
      // static field const value: static public GorillaReportButton/MetaReportReason Bullying
      static constexpr const int Bullying = 3;
      // Get static field: static public GorillaReportButton/MetaReportReason Bullying
      static ::GlobalNamespace::GorillaReportButton::MetaReportReason _get_Bullying();
      // Set static field: static public GorillaReportButton/MetaReportReason Bullying
      static void _set_Bullying(::GlobalNamespace::GorillaReportButton::MetaReportReason value);
      // static field const value: static public GorillaReportButton/MetaReportReason Doxing
      static constexpr const int Doxing = 4;
      // Get static field: static public GorillaReportButton/MetaReportReason Doxing
      static ::GlobalNamespace::GorillaReportButton::MetaReportReason _get_Doxing();
      // Set static field: static public GorillaReportButton/MetaReportReason Doxing
      static void _set_Doxing(::GlobalNamespace::GorillaReportButton::MetaReportReason value);
      // static field const value: static public GorillaReportButton/MetaReportReason Impersonation
      static constexpr const int Impersonation = 5;
      // Get static field: static public GorillaReportButton/MetaReportReason Impersonation
      static ::GlobalNamespace::GorillaReportButton::MetaReportReason _get_Impersonation();
      // Set static field: static public GorillaReportButton/MetaReportReason Impersonation
      static void _set_Impersonation(::GlobalNamespace::GorillaReportButton::MetaReportReason value);
      // static field const value: static public GorillaReportButton/MetaReportReason Submit
      static constexpr const int Submit = 6;
      // Get static field: static public GorillaReportButton/MetaReportReason Submit
      static ::GlobalNamespace::GorillaReportButton::MetaReportReason _get_Submit();
      // Set static field: static public GorillaReportButton/MetaReportReason Submit
      static void _set_Submit(::GlobalNamespace::GorillaReportButton::MetaReportReason value);
      // static field const value: static public GorillaReportButton/MetaReportReason Cancel
      static constexpr const int Cancel = 7;
      // Get static field: static public GorillaReportButton/MetaReportReason Cancel
      static ::GlobalNamespace::GorillaReportButton::MetaReportReason _get_Cancel();
      // Set static field: static public GorillaReportButton/MetaReportReason Cancel
      static void _set_Cancel(::GlobalNamespace::GorillaReportButton::MetaReportReason value);
      // Get instance field reference: public System.Int32 value__
      [[deprecated("Use field access instead!")]] int& dyn_value__();
    }; // GorillaReportButton/MetaReportReason
    #pragma pack(pop)
    static check_size<sizeof(GorillaReportButton::MetaReportReason), 0 + sizeof(int)> __GlobalNamespace_GorillaReportButton_MetaReportReasonSizeCheck;
    static_assert(sizeof(GorillaReportButton::MetaReportReason) == 0x4);
    public:
    // public GorillaReportButton/MetaReportReason metaReportType
    // Size: 0x4
    // Offset: 0x20
    ::GlobalNamespace::GorillaReportButton::MetaReportReason metaReportType;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::GorillaReportButton::MetaReportReason) == 0x4);
    // public GorillaPlayerLineButton/ButtonType buttonType
    // Size: 0x4
    // Offset: 0x24
    ::GlobalNamespace::GorillaPlayerLineButton::ButtonType buttonType;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::GorillaPlayerLineButton::ButtonType) == 0x4);
    // public GorillaPlayerScoreboardLine parentLine
    // Size: 0x8
    // Offset: 0x28
    ::GlobalNamespace::GorillaPlayerScoreboardLine* parentLine;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::GorillaPlayerScoreboardLine*) == 0x8);
    // public System.Boolean isOn
    // Size: 0x1
    // Offset: 0x30
    bool isOn;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: isOn and: offMaterial
    char __padding3[0x7] = {};
    // public UnityEngine.Material offMaterial
    // Size: 0x8
    // Offset: 0x38
    ::UnityEngine::Material* offMaterial;
    // Field size check
    static_assert(sizeof(::UnityEngine::Material*) == 0x8);
    // public UnityEngine.Material onMaterial
    // Size: 0x8
    // Offset: 0x40
    ::UnityEngine::Material* onMaterial;
    // Field size check
    static_assert(sizeof(::UnityEngine::Material*) == 0x8);
    // public System.String offText
    // Size: 0x8
    // Offset: 0x48
    ::StringW offText;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public System.String onText
    // Size: 0x8
    // Offset: 0x50
    ::StringW onText;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public UnityEngine.UI.Text myText
    // Size: 0x8
    // Offset: 0x58
    ::UnityEngine::UI::Text* myText;
    // Field size check
    static_assert(sizeof(::UnityEngine::UI::Text*) == 0x8);
    // public System.Single debounceTime
    // Size: 0x4
    // Offset: 0x60
    float debounceTime;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // public System.Single touchTime
    // Size: 0x4
    // Offset: 0x64
    float touchTime;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // public System.Boolean testPress
    // Size: 0x1
    // Offset: 0x68
    bool testPress;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // public System.Boolean selected
    // Size: 0x1
    // Offset: 0x69
    bool selected;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    public:
    // Get instance field reference: public GorillaReportButton/MetaReportReason metaReportType
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::GorillaReportButton::MetaReportReason& dyn_metaReportType();
    // Get instance field reference: public GorillaPlayerLineButton/ButtonType buttonType
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::GorillaPlayerLineButton::ButtonType& dyn_buttonType();
    // Get instance field reference: public GorillaPlayerScoreboardLine parentLine
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::GorillaPlayerScoreboardLine*& dyn_parentLine();
    // Get instance field reference: public System.Boolean isOn
    [[deprecated("Use field access instead!")]] bool& dyn_isOn();
    // Get instance field reference: public UnityEngine.Material offMaterial
    [[deprecated("Use field access instead!")]] ::UnityEngine::Material*& dyn_offMaterial();
    // Get instance field reference: public UnityEngine.Material onMaterial
    [[deprecated("Use field access instead!")]] ::UnityEngine::Material*& dyn_onMaterial();
    // Get instance field reference: public System.String offText
    [[deprecated("Use field access instead!")]] ::StringW& dyn_offText();
    // Get instance field reference: public System.String onText
    [[deprecated("Use field access instead!")]] ::StringW& dyn_onText();
    // Get instance field reference: public UnityEngine.UI.Text myText
    [[deprecated("Use field access instead!")]] ::UnityEngine::UI::Text*& dyn_myText();
    // Get instance field reference: public System.Single debounceTime
    [[deprecated("Use field access instead!")]] float& dyn_debounceTime();
    // Get instance field reference: public System.Single touchTime
    [[deprecated("Use field access instead!")]] float& dyn_touchTime();
    // Get instance field reference: public System.Boolean testPress
    [[deprecated("Use field access instead!")]] bool& dyn_testPress();
    // Get instance field reference: public System.Boolean selected
    [[deprecated("Use field access instead!")]] bool& dyn_selected();
    // public System.Void AssignParentLine(GorillaPlayerScoreboardLine parent)
    // Offset: 0x2962FE0
    void AssignParentLine(::GlobalNamespace::GorillaPlayerScoreboardLine* parent);
    // private System.Void OnTriggerEnter(UnityEngine.Collider collider)
    // Offset: 0x2962FE8
    void OnTriggerEnter(::UnityEngine::Collider* collider);
    // private System.Void OnTriggerExit(UnityEngine.Collider other)
    // Offset: 0x296337C
    void OnTriggerExit(::UnityEngine::Collider* other);
    // public System.Void UpdateColor()
    // Offset: 0x2962408
    void UpdateColor();
    // public System.Void .ctor()
    // Offset: 0x2963424
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static GorillaReportButton* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaReportButton::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<GorillaReportButton*, creationType>()));
    }
  }; // GorillaReportButton
  #pragma pack(pop)
  static check_size<sizeof(GorillaReportButton), 105 + sizeof(bool)> __GlobalNamespace_GorillaReportButtonSizeCheck;
  static_assert(sizeof(GorillaReportButton) == 0x6A);
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::GorillaReportButton::MetaReportReason, "", "GorillaReportButton/MetaReportReason");
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::GorillaReportButton::AssignParentLine
// Il2CppName: AssignParentLine
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::GorillaReportButton::*)(::GlobalNamespace::GorillaPlayerScoreboardLine*)>(&GlobalNamespace::GorillaReportButton::AssignParentLine)> {
  static const MethodInfo* get() {
    static auto* parent = &::il2cpp_utils::GetClassFromName("", "GorillaPlayerScoreboardLine")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::GorillaReportButton*), "AssignParentLine", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{parent});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::GorillaReportButton::OnTriggerEnter
// Il2CppName: OnTriggerEnter
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::GorillaReportButton::*)(::UnityEngine::Collider*)>(&GlobalNamespace::GorillaReportButton::OnTriggerEnter)> {
  static const MethodInfo* get() {
    static auto* collider = &::il2cpp_utils::GetClassFromName("UnityEngine", "Collider")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::GorillaReportButton*), "OnTriggerEnter", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{collider});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::GorillaReportButton::OnTriggerExit
// Il2CppName: OnTriggerExit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::GorillaReportButton::*)(::UnityEngine::Collider*)>(&GlobalNamespace::GorillaReportButton::OnTriggerExit)> {
  static const MethodInfo* get() {
    static auto* other = &::il2cpp_utils::GetClassFromName("UnityEngine", "Collider")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::GorillaReportButton*), "OnTriggerExit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{other});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::GorillaReportButton::UpdateColor
// Il2CppName: UpdateColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::GorillaReportButton::*)()>(&GlobalNamespace::GorillaReportButton::UpdateColor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::GorillaReportButton*), "UpdateColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::GorillaReportButton::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
