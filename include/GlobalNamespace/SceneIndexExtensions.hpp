// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Int32
#include "System/Int32.hpp"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Action
  class Action;
}
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: SceneIndex
  struct SceneIndex;
}
// Forward declaring namespace: UnityEngine::SceneManagement
namespace UnityEngine::SceneManagement {
  // Forward declaring type: Scene
  struct Scene;
  // Forward declaring type: LoadSceneMode
  struct LoadSceneMode;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: GameObject
  class GameObject;
  // Forward declaring type: Component
  class Component;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Forward declaring type: SceneIndexExtensions
  class SceneIndexExtensions;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::SceneIndexExtensions);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::SceneIndexExtensions*, "", "SceneIndexExtensions");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: SceneIndexExtensions
  // [TokenAttribute] Offset: FFFFFFFF
  // [ExtensionAttribute] Offset: FFFFFFFF
  class SceneIndexExtensions : public ::Il2CppObject {
    public:
    // static field const value: static private System.Int32 SceneIndex_COUNT
    static constexpr const int SceneIndex_COUNT = 10;
    // Get static field: static private System.Int32 SceneIndex_COUNT
    static int _get_SceneIndex_COUNT();
    // Set static field: static private System.Int32 SceneIndex_COUNT
    static void _set_SceneIndex_COUNT(int value);
    // Get static field: static private System.Collections.Generic.List`1<System.Action>[] onSceneLoadCallbacks
    static ::ArrayW<::System::Collections::Generic::List_1<::System::Action*>*> _get_onSceneLoadCallbacks();
    // Set static field: static private System.Collections.Generic.List`1<System.Action>[] onSceneLoadCallbacks
    static void _set_onSceneLoadCallbacks(::ArrayW<::System::Collections::Generic::List_1<::System::Action*>*> value);
    // Get static field: static private System.Collections.Generic.List`1<System.Action>[] onSceneUnloadCallbacks
    static ::ArrayW<::System::Collections::Generic::List_1<::System::Action*>*> _get_onSceneUnloadCallbacks();
    // Set static field: static private System.Collections.Generic.List`1<System.Action>[] onSceneUnloadCallbacks
    static void _set_onSceneUnloadCallbacks(::ArrayW<::System::Collections::Generic::List_1<::System::Action*>*> value);
    // static public SceneIndex GetSceneIndex(UnityEngine.SceneManagement.Scene scene)
    // Offset: 0x289B458
    static ::GlobalNamespace::SceneIndex GetSceneIndex(::UnityEngine::SceneManagement::Scene scene);
    // static public SceneIndex GetSceneIndex(UnityEngine.GameObject obj)
    // Offset: 0x289B474
    static ::GlobalNamespace::SceneIndex GetSceneIndex(::UnityEngine::GameObject* obj);
    // static public SceneIndex GetSceneIndex(UnityEngine.Component cmp)
    // Offset: 0x289B4A0
    static ::GlobalNamespace::SceneIndex GetSceneIndex(::UnityEngine::Component* cmp);
    // static public System.Void AddCallbackOnSceneLoad(SceneIndex scene, System.Action callback)
    // Offset: 0x289B4D8
    static void AddCallbackOnSceneLoad(::GlobalNamespace::SceneIndex scene, ::System::Action* callback);
    // static public System.Void RemoveCallbackOnSceneLoad(SceneIndex scene, System.Action callback)
    // Offset: 0x289B75C
    static void RemoveCallbackOnSceneLoad(::GlobalNamespace::SceneIndex scene, ::System::Action* callback);
    // static public System.Void OnSceneLoad(UnityEngine.SceneManagement.Scene scene, UnityEngine.SceneManagement.LoadSceneMode mode)
    // Offset: 0x289B7F4
    static void OnSceneLoad(::UnityEngine::SceneManagement::Scene scene, ::UnityEngine::SceneManagement::LoadSceneMode mode);
    // static public System.Void AddCallbackOnSceneUnload(SceneIndex scene, System.Action callback)
    // Offset: 0x289B98C
    static void AddCallbackOnSceneUnload(::GlobalNamespace::SceneIndex scene, ::System::Action* callback);
    // static public System.Void RemoveCallbackOnSceneUnload(SceneIndex scene, System.Action callback)
    // Offset: 0x289BC0C
    static void RemoveCallbackOnSceneUnload(::GlobalNamespace::SceneIndex scene, ::System::Action* callback);
    // static public System.Void OnSceneUnload(UnityEngine.SceneManagement.Scene scene)
    // Offset: 0x289BCA4
    static void OnSceneUnload(::UnityEngine::SceneManagement::Scene scene);
    // static private System.Void Reset()
    // Offset: 0x289BE3C
    static void Reset();
  }; // SceneIndexExtensions
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::SceneIndexExtensions::GetSceneIndex
// Il2CppName: GetSceneIndex
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::SceneIndex (*)(::UnityEngine::SceneManagement::Scene)>(&GlobalNamespace::SceneIndexExtensions::GetSceneIndex)> {
  static const MethodInfo* get() {
    static auto* scene = &::il2cpp_utils::GetClassFromName("UnityEngine.SceneManagement", "Scene")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::SceneIndexExtensions*), "GetSceneIndex", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{scene});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::SceneIndexExtensions::GetSceneIndex
// Il2CppName: GetSceneIndex
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::SceneIndex (*)(::UnityEngine::GameObject*)>(&GlobalNamespace::SceneIndexExtensions::GetSceneIndex)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::SceneIndexExtensions*), "GetSceneIndex", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::SceneIndexExtensions::GetSceneIndex
// Il2CppName: GetSceneIndex
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::SceneIndex (*)(::UnityEngine::Component*)>(&GlobalNamespace::SceneIndexExtensions::GetSceneIndex)> {
  static const MethodInfo* get() {
    static auto* cmp = &::il2cpp_utils::GetClassFromName("UnityEngine", "Component")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::SceneIndexExtensions*), "GetSceneIndex", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{cmp});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::SceneIndexExtensions::AddCallbackOnSceneLoad
// Il2CppName: AddCallbackOnSceneLoad
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::GlobalNamespace::SceneIndex, ::System::Action*)>(&GlobalNamespace::SceneIndexExtensions::AddCallbackOnSceneLoad)> {
  static const MethodInfo* get() {
    static auto* scene = &::il2cpp_utils::GetClassFromName("", "SceneIndex")->byval_arg;
    static auto* callback = &::il2cpp_utils::GetClassFromName("System", "Action")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::SceneIndexExtensions*), "AddCallbackOnSceneLoad", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{scene, callback});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::SceneIndexExtensions::RemoveCallbackOnSceneLoad
// Il2CppName: RemoveCallbackOnSceneLoad
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::GlobalNamespace::SceneIndex, ::System::Action*)>(&GlobalNamespace::SceneIndexExtensions::RemoveCallbackOnSceneLoad)> {
  static const MethodInfo* get() {
    static auto* scene = &::il2cpp_utils::GetClassFromName("", "SceneIndex")->byval_arg;
    static auto* callback = &::il2cpp_utils::GetClassFromName("System", "Action")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::SceneIndexExtensions*), "RemoveCallbackOnSceneLoad", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{scene, callback});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::SceneIndexExtensions::OnSceneLoad
// Il2CppName: OnSceneLoad
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::SceneManagement::Scene, ::UnityEngine::SceneManagement::LoadSceneMode)>(&GlobalNamespace::SceneIndexExtensions::OnSceneLoad)> {
  static const MethodInfo* get() {
    static auto* scene = &::il2cpp_utils::GetClassFromName("UnityEngine.SceneManagement", "Scene")->byval_arg;
    static auto* mode = &::il2cpp_utils::GetClassFromName("UnityEngine.SceneManagement", "LoadSceneMode")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::SceneIndexExtensions*), "OnSceneLoad", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{scene, mode});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::SceneIndexExtensions::AddCallbackOnSceneUnload
// Il2CppName: AddCallbackOnSceneUnload
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::GlobalNamespace::SceneIndex, ::System::Action*)>(&GlobalNamespace::SceneIndexExtensions::AddCallbackOnSceneUnload)> {
  static const MethodInfo* get() {
    static auto* scene = &::il2cpp_utils::GetClassFromName("", "SceneIndex")->byval_arg;
    static auto* callback = &::il2cpp_utils::GetClassFromName("System", "Action")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::SceneIndexExtensions*), "AddCallbackOnSceneUnload", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{scene, callback});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::SceneIndexExtensions::RemoveCallbackOnSceneUnload
// Il2CppName: RemoveCallbackOnSceneUnload
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::GlobalNamespace::SceneIndex, ::System::Action*)>(&GlobalNamespace::SceneIndexExtensions::RemoveCallbackOnSceneUnload)> {
  static const MethodInfo* get() {
    static auto* scene = &::il2cpp_utils::GetClassFromName("", "SceneIndex")->byval_arg;
    static auto* callback = &::il2cpp_utils::GetClassFromName("System", "Action")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::SceneIndexExtensions*), "RemoveCallbackOnSceneUnload", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{scene, callback});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::SceneIndexExtensions::OnSceneUnload
// Il2CppName: OnSceneUnload
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::SceneManagement::Scene)>(&GlobalNamespace::SceneIndexExtensions::OnSceneUnload)> {
  static const MethodInfo* get() {
    static auto* scene = &::il2cpp_utils::GetClassFromName("UnityEngine.SceneManagement", "Scene")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::SceneIndexExtensions*), "OnSceneUnload", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{scene});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::SceneIndexExtensions::Reset
// Il2CppName: Reset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&GlobalNamespace::SceneIndexExtensions::Reset)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::SceneIndexExtensions*), "Reset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
