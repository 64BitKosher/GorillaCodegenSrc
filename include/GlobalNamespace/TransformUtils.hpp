// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: String
  class String;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Hash128
  struct Hash128;
  // Forward declaring type: Transform
  class Transform;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Forward declaring type: TransformUtils
  class TransformUtils;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::TransformUtils);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::TransformUtils*, "", "TransformUtils");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: TransformUtils
  // [TokenAttribute] Offset: FFFFFFFF
  class TransformUtils : public ::Il2CppObject {
    public:
    // static field const value: static private System.String kFwdSlash
    static constexpr const char* kFwdSlash = "/";
    // Get static field: static private System.String kFwdSlash
    static ::StringW _get_kFwdSlash();
    // Set static field: static private System.String kFwdSlash
    static void _set_kFwdSlash(::StringW value);
    // static public UnityEngine.Hash128 ComputePathHash(UnityEngine.Transform t)
    // Offset: 0x2774704
    static ::UnityEngine::Hash128 ComputePathHash(::UnityEngine::Transform* t);
    // static public System.String GetScenePath(UnityEngine.Transform t)
    // Offset: 0x2782ACC
    static ::StringW GetScenePath(::UnityEngine::Transform* t);
    // static public System.String GetScenePathReverse(UnityEngine.Transform t)
    // Offset: 0x2782BCC
    static ::StringW GetScenePathReverse(::UnityEngine::Transform* t);
  }; // TransformUtils
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::TransformUtils::ComputePathHash
// Il2CppName: ComputePathHash
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Hash128 (*)(::UnityEngine::Transform*)>(&GlobalNamespace::TransformUtils::ComputePathHash)> {
  static const MethodInfo* get() {
    static auto* t = &::il2cpp_utils::GetClassFromName("UnityEngine", "Transform")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::TransformUtils*), "ComputePathHash", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{t});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::TransformUtils::GetScenePath
// Il2CppName: GetScenePath
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::UnityEngine::Transform*)>(&GlobalNamespace::TransformUtils::GetScenePath)> {
  static const MethodInfo* get() {
    static auto* t = &::il2cpp_utils::GetClassFromName("UnityEngine", "Transform")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::TransformUtils*), "GetScenePath", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{t});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::TransformUtils::GetScenePathReverse
// Il2CppName: GetScenePathReverse
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::UnityEngine::Transform*)>(&GlobalNamespace::TransformUtils::GetScenePathReverse)> {
  static const MethodInfo* get() {
    static auto* t = &::il2cpp_utils::GetClassFromName("UnityEngine", "Transform")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::TransformUtils*), "GetScenePathReverse", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{t});
  }
};
