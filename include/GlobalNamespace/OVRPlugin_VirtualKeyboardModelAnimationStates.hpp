// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: OVRPlugin
#include "GlobalNamespace/OVRPlugin.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Including type: OVRPlugin/VirtualKeyboardModelAnimationState
#include "GlobalNamespace/OVRPlugin_VirtualKeyboardModelAnimationState.hpp"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
// Completed includes
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::OVRPlugin::VirtualKeyboardModelAnimationStates, "", "OVRPlugin/VirtualKeyboardModelAnimationStates");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x8
  #pragma pack(push, 1)
  // WARNING Layout: Sequential may not be correctly taken into account!
  // Autogenerated type: OVRPlugin/VirtualKeyboardModelAnimationStates
  // [TokenAttribute] Offset: FFFFFFFF
  struct OVRPlugin::VirtualKeyboardModelAnimationStates/*, public ::System::ValueType*/ {
    public:
    public:
    // public OVRPlugin/VirtualKeyboardModelAnimationState[] States
    // Size: 0x8
    // Offset: 0x0
    ::ArrayW<::GlobalNamespace::OVRPlugin::VirtualKeyboardModelAnimationState> States;
    // Field size check
    static_assert(sizeof(::ArrayW<::GlobalNamespace::OVRPlugin::VirtualKeyboardModelAnimationState>) == 0x8);
    public:
    // Creating value type constructor for type: VirtualKeyboardModelAnimationStates
    constexpr VirtualKeyboardModelAnimationStates(::ArrayW<::GlobalNamespace::OVRPlugin::VirtualKeyboardModelAnimationState> States_ = ::ArrayW<::GlobalNamespace::OVRPlugin::VirtualKeyboardModelAnimationState>(static_cast<void*>(nullptr))) noexcept : States{States_} {}
    // Creating interface conversion operator: operator ::System::ValueType
    operator ::System::ValueType() noexcept {
      return *reinterpret_cast<::System::ValueType*>(this);
    }
    // Creating conversion operator: operator ::ArrayW<::GlobalNamespace::OVRPlugin::VirtualKeyboardModelAnimationState>
    constexpr operator ::ArrayW<::GlobalNamespace::OVRPlugin::VirtualKeyboardModelAnimationState>() const noexcept {
      return States;
    }
    // Get instance field reference: public OVRPlugin/VirtualKeyboardModelAnimationState[] States
    [[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::OVRPlugin::VirtualKeyboardModelAnimationState>& dyn_States();
  }; // OVRPlugin/VirtualKeyboardModelAnimationStates
  #pragma pack(pop)
  static check_size<sizeof(OVRPlugin::VirtualKeyboardModelAnimationStates), 0 + sizeof(::ArrayW<::GlobalNamespace::OVRPlugin::VirtualKeyboardModelAnimationState>)> __GlobalNamespace_OVRPlugin_VirtualKeyboardModelAnimationStatesSizeCheck;
  static_assert(sizeof(OVRPlugin::VirtualKeyboardModelAnimationStates) == 0x8);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
