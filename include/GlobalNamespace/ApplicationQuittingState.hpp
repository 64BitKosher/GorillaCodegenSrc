// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Completed includes
// Type namespace: 
namespace GlobalNamespace {
  // Forward declaring type: ApplicationQuittingState
  class ApplicationQuittingState;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::ApplicationQuittingState);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::ApplicationQuittingState*, "", "ApplicationQuittingState");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: ApplicationQuittingState
  // [TokenAttribute] Offset: FFFFFFFF
  class ApplicationQuittingState : public ::Il2CppObject {
    public:
    // Get static field: static private System.Boolean <IsQuitting>k__BackingField
    static bool _get_$IsQuitting$k__BackingField();
    // Set static field: static private System.Boolean <IsQuitting>k__BackingField
    static void _set_$IsQuitting$k__BackingField(bool value);
    // static public System.Boolean get_IsQuitting()
    // Offset: 0x2789A04
    static bool get_IsQuitting();
    // static private System.Void set_IsQuitting(System.Boolean value)
    // Offset: 0x2789A4C
    static void set_IsQuitting(bool value);
    // static private System.Void Init()
    // Offset: 0x2789A9C
    static void Init();
    // static private System.Void HandleApplicationQuitting()
    // Offset: 0x2789B3C
    static void HandleApplicationQuitting();
  }; // ApplicationQuittingState
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::ApplicationQuittingState::get_IsQuitting
// Il2CppName: get_IsQuitting
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&GlobalNamespace::ApplicationQuittingState::get_IsQuitting)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::ApplicationQuittingState*), "get_IsQuitting", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::ApplicationQuittingState::set_IsQuitting
// Il2CppName: set_IsQuitting
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(bool)>(&GlobalNamespace::ApplicationQuittingState::set_IsQuitting)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::ApplicationQuittingState*), "set_IsQuitting", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::ApplicationQuittingState::Init
// Il2CppName: Init
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&GlobalNamespace::ApplicationQuittingState::Init)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::ApplicationQuittingState*), "Init", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::ApplicationQuittingState::HandleApplicationQuitting
// Il2CppName: HandleApplicationQuitting
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&GlobalNamespace::ApplicationQuittingState::HandleApplicationQuitting)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::ApplicationQuittingState*), "HandleApplicationQuitting", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
