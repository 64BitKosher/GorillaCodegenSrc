// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include <initializer_list>
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: NetworkSystem
#include "GlobalNamespace/NetworkSystem.hpp"
// Including type: System.Threading.CancellationToken
#include "System/Threading/CancellationToken.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Skipping declaration: InternalState because it is already included!
  // Forward declaring type: NetworkRegionInfo
  class NetworkRegionInfo;
  // Forward declaring type: RoomConfig
  class RoomConfig;
  // Forward declaring type: NetPlayer
  class NetPlayer;
}
// Forward declaring namespace: System::Threading::Tasks
namespace System::Threading::Tasks {
  // Forward declaring type: Task`1<TResult>
  template<typename TResult>
  class Task_1;
  // Forward declaring type: Task
  class Task;
}
// Forward declaring namespace: Photon::Realtime
namespace Photon::Realtime {
  // Forward declaring type: Player
  class Player;
  // Forward declaring type: DisconnectCause
  struct DisconnectCause;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
  // Forward declaring type: Dictionary`2<TKey, TValue>
  template<typename TKey, typename TValue>
  class Dictionary_2;
}
// Forward declaring namespace: System::Threading
namespace System::Threading {
  // Forward declaring type: CancellationTokenSource
  class CancellationTokenSource;
}
// Forward declaring namespace: Photon::Voice::PUN
namespace Photon::Voice::PUN {
  // Forward declaring type: PhotonVoiceNetwork
  class PhotonVoiceNetwork;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: GameObject
  class GameObject;
  // Skipping declaration: Vector3 because it is already included!
  // Skipping declaration: Quaternion because it is already included!
  // Skipping declaration: MonoBehaviour because it is already included!
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: ValueTuple`2<T1, T2>
  template<typename T1, typename T2>
  struct ValueTuple_2;
  // Forward declaring type: Action`1<T>
  template<typename T>
  class Action_1;
  // Forward declaring type: Nullable`1<T>
  template<typename T>
  struct Nullable_1;
  // Skipping declaration: ValueType because it is already included!
}
// Forward declaring namespace: Photon::Voice::Unity
namespace Photon::Voice::Unity {
  // Forward declaring type: RemoteVoiceLink
  class RemoteVoiceLink;
  // Forward declaring type: VoiceConnection
  class VoiceConnection;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Forward declaring type: NetworkSystemPUN
  class NetworkSystemPUN;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::NetworkSystemPUN);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::NetworkSystemPUN*, "", "NetworkSystemPUN");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0xD5
  #pragma pack(push, 1)
  // Autogenerated type: NetworkSystemPUN
  // [TokenAttribute] Offset: FFFFFFFF
  // [RequireComponent] Offset: FFFFFFFF
  class NetworkSystemPUN : public ::GlobalNamespace::NetworkSystem {
    public:
    // Nested type: ::GlobalNamespace::NetworkSystemPUN::InternalState
    struct InternalState;
    // Nested type: ::GlobalNamespace::NetworkSystemPUN::$$c
    class $$c;
    // Nested type: ::GlobalNamespace::NetworkSystemPUN::$$c__DisplayClass55_0
    class $$c__DisplayClass55_0;
    // Nested type: ::GlobalNamespace::NetworkSystemPUN::$AwaitSceneReady$d__73
    struct $AwaitSceneReady$d__73;
    // Nested type: ::GlobalNamespace::NetworkSystemPUN::$CacheRegionInfo$d__45
    struct $CacheRegionInfo$d__45;
    // Nested type: ::GlobalNamespace::NetworkSystemPUN::$ConnectToRoom$d__54
    struct $ConnectToRoom$d__54;
    // Nested type: ::GlobalNamespace::NetworkSystemPUN::$Initialise$d__44
    struct $Initialise$d__44;
    // Nested type: ::GlobalNamespace::NetworkSystemPUN::$InternalDisconnect$d__59
    struct $InternalDisconnect$d__59;
    // Nested type: ::GlobalNamespace::NetworkSystemPUN::$JoinFriendsRoom$d__55
    struct $JoinFriendsRoom$d__55;
    // Nested type: ::GlobalNamespace::NetworkSystemPUN::$JoinRandomPublicRoom$d__53
    struct $JoinRandomPublicRoom$d__53;
    // Nested type: ::GlobalNamespace::NetworkSystemPUN::$MakeOrFindRoom$d__49
    struct $MakeOrFindRoom$d__49;
    // Nested type: ::GlobalNamespace::NetworkSystemPUN::$OnDisconnected$d__101
    struct $OnDisconnected$d__101;
    // Nested type: ::GlobalNamespace::NetworkSystemPUN::$ReturnToSinglePlayer$d__58
    struct $ReturnToSinglePlayer$d__58;
    // Nested type: ::GlobalNamespace::NetworkSystemPUN::$TryCreateRoom$d__52
    struct $TryCreateRoom$d__52;
    // Nested type: ::GlobalNamespace::NetworkSystemPUN::$TryJoinRoom$d__50
    struct $TryJoinRoom$d__50;
    // Nested type: ::GlobalNamespace::NetworkSystemPUN::$TryJoinRoomInRegion$d__51
    struct $TryJoinRoomInRegion$d__51;
    // Nested type: ::GlobalNamespace::NetworkSystemPUN::$WaitForState$d__47
    struct $WaitForState$d__47;
    // Nested type: ::GlobalNamespace::NetworkSystemPUN::$WaitForStateCheck$d__48
    struct $WaitForStateCheck$d__48;
    // Size: 0x4
    #pragma pack(push, 1)
    // Autogenerated type: NetworkSystemPUN/InternalState
    // [TokenAttribute] Offset: FFFFFFFF
    struct InternalState/*, public ::System::Enum*/ {
      public:
      public:
      // public System.Int32 value__
      // Size: 0x4
      // Offset: 0x0
      int value;
      // Field size check
      static_assert(sizeof(int) == 0x4);
      public:
      // Creating value type constructor for type: InternalState
      constexpr InternalState(int value_ = {}) noexcept : value{value_} {}
      // Creating interface conversion operator: operator ::System::Enum
      operator ::System::Enum() noexcept {
        return *reinterpret_cast<::System::Enum*>(this);
      }
      // Creating conversion operator: operator int
      constexpr operator int() const noexcept {
        return value;
      }
      // static field const value: static public NetworkSystemPUN/InternalState AwaitingAuth
      static constexpr const int AwaitingAuth = 0;
      // Get static field: static public NetworkSystemPUN/InternalState AwaitingAuth
      static ::GlobalNamespace::NetworkSystemPUN::InternalState _get_AwaitingAuth();
      // Set static field: static public NetworkSystemPUN/InternalState AwaitingAuth
      static void _set_AwaitingAuth(::GlobalNamespace::NetworkSystemPUN::InternalState value);
      // static field const value: static public NetworkSystemPUN/InternalState Authenticated
      static constexpr const int Authenticated = 1;
      // Get static field: static public NetworkSystemPUN/InternalState Authenticated
      static ::GlobalNamespace::NetworkSystemPUN::InternalState _get_Authenticated();
      // Set static field: static public NetworkSystemPUN/InternalState Authenticated
      static void _set_Authenticated(::GlobalNamespace::NetworkSystemPUN::InternalState value);
      // static field const value: static public NetworkSystemPUN/InternalState PingGathering
      static constexpr const int PingGathering = 2;
      // Get static field: static public NetworkSystemPUN/InternalState PingGathering
      static ::GlobalNamespace::NetworkSystemPUN::InternalState _get_PingGathering();
      // Set static field: static public NetworkSystemPUN/InternalState PingGathering
      static void _set_PingGathering(::GlobalNamespace::NetworkSystemPUN::InternalState value);
      // static field const value: static public NetworkSystemPUN/InternalState StateCheckFailed
      static constexpr const int StateCheckFailed = 3;
      // Get static field: static public NetworkSystemPUN/InternalState StateCheckFailed
      static ::GlobalNamespace::NetworkSystemPUN::InternalState _get_StateCheckFailed();
      // Set static field: static public NetworkSystemPUN/InternalState StateCheckFailed
      static void _set_StateCheckFailed(::GlobalNamespace::NetworkSystemPUN::InternalState value);
      // static field const value: static public NetworkSystemPUN/InternalState ConnectingToMaster
      static constexpr const int ConnectingToMaster = 4;
      // Get static field: static public NetworkSystemPUN/InternalState ConnectingToMaster
      static ::GlobalNamespace::NetworkSystemPUN::InternalState _get_ConnectingToMaster();
      // Set static field: static public NetworkSystemPUN/InternalState ConnectingToMaster
      static void _set_ConnectingToMaster(::GlobalNamespace::NetworkSystemPUN::InternalState value);
      // static field const value: static public NetworkSystemPUN/InternalState ConnectedToMaster
      static constexpr const int ConnectedToMaster = 5;
      // Get static field: static public NetworkSystemPUN/InternalState ConnectedToMaster
      static ::GlobalNamespace::NetworkSystemPUN::InternalState _get_ConnectedToMaster();
      // Set static field: static public NetworkSystemPUN/InternalState ConnectedToMaster
      static void _set_ConnectedToMaster(::GlobalNamespace::NetworkSystemPUN::InternalState value);
      // static field const value: static public NetworkSystemPUN/InternalState Idle
      static constexpr const int Idle = 6;
      // Get static field: static public NetworkSystemPUN/InternalState Idle
      static ::GlobalNamespace::NetworkSystemPUN::InternalState _get_Idle();
      // Set static field: static public NetworkSystemPUN/InternalState Idle
      static void _set_Idle(::GlobalNamespace::NetworkSystemPUN::InternalState value);
      // static field const value: static public NetworkSystemPUN/InternalState Internal_Disconnecting
      static constexpr const int Internal_Disconnecting = 7;
      // Get static field: static public NetworkSystemPUN/InternalState Internal_Disconnecting
      static ::GlobalNamespace::NetworkSystemPUN::InternalState _get_Internal_Disconnecting();
      // Set static field: static public NetworkSystemPUN/InternalState Internal_Disconnecting
      static void _set_Internal_Disconnecting(::GlobalNamespace::NetworkSystemPUN::InternalState value);
      // static field const value: static public NetworkSystemPUN/InternalState Internal_Disconnected
      static constexpr const int Internal_Disconnected = 8;
      // Get static field: static public NetworkSystemPUN/InternalState Internal_Disconnected
      static ::GlobalNamespace::NetworkSystemPUN::InternalState _get_Internal_Disconnected();
      // Set static field: static public NetworkSystemPUN/InternalState Internal_Disconnected
      static void _set_Internal_Disconnected(::GlobalNamespace::NetworkSystemPUN::InternalState value);
      // static field const value: static public NetworkSystemPUN/InternalState Searching_Connecting
      static constexpr const int Searching_Connecting = 9;
      // Get static field: static public NetworkSystemPUN/InternalState Searching_Connecting
      static ::GlobalNamespace::NetworkSystemPUN::InternalState _get_Searching_Connecting();
      // Set static field: static public NetworkSystemPUN/InternalState Searching_Connecting
      static void _set_Searching_Connecting(::GlobalNamespace::NetworkSystemPUN::InternalState value);
      // static field const value: static public NetworkSystemPUN/InternalState Searching_Connected
      static constexpr const int Searching_Connected = 10;
      // Get static field: static public NetworkSystemPUN/InternalState Searching_Connected
      static ::GlobalNamespace::NetworkSystemPUN::InternalState _get_Searching_Connected();
      // Set static field: static public NetworkSystemPUN/InternalState Searching_Connected
      static void _set_Searching_Connected(::GlobalNamespace::NetworkSystemPUN::InternalState value);
      // static field const value: static public NetworkSystemPUN/InternalState Searching_Joining
      static constexpr const int Searching_Joining = 11;
      // Get static field: static public NetworkSystemPUN/InternalState Searching_Joining
      static ::GlobalNamespace::NetworkSystemPUN::InternalState _get_Searching_Joining();
      // Set static field: static public NetworkSystemPUN/InternalState Searching_Joining
      static void _set_Searching_Joining(::GlobalNamespace::NetworkSystemPUN::InternalState value);
      // static field const value: static public NetworkSystemPUN/InternalState Searching_Joined
      static constexpr const int Searching_Joined = 12;
      // Get static field: static public NetworkSystemPUN/InternalState Searching_Joined
      static ::GlobalNamespace::NetworkSystemPUN::InternalState _get_Searching_Joined();
      // Set static field: static public NetworkSystemPUN/InternalState Searching_Joined
      static void _set_Searching_Joined(::GlobalNamespace::NetworkSystemPUN::InternalState value);
      // static field const value: static public NetworkSystemPUN/InternalState Searching_JoinFailed
      static constexpr const int Searching_JoinFailed = 13;
      // Get static field: static public NetworkSystemPUN/InternalState Searching_JoinFailed
      static ::GlobalNamespace::NetworkSystemPUN::InternalState _get_Searching_JoinFailed();
      // Set static field: static public NetworkSystemPUN/InternalState Searching_JoinFailed
      static void _set_Searching_JoinFailed(::GlobalNamespace::NetworkSystemPUN::InternalState value);
      // static field const value: static public NetworkSystemPUN/InternalState Searching_JoinFailed_Full
      static constexpr const int Searching_JoinFailed_Full = 14;
      // Get static field: static public NetworkSystemPUN/InternalState Searching_JoinFailed_Full
      static ::GlobalNamespace::NetworkSystemPUN::InternalState _get_Searching_JoinFailed_Full();
      // Set static field: static public NetworkSystemPUN/InternalState Searching_JoinFailed_Full
      static void _set_Searching_JoinFailed_Full(::GlobalNamespace::NetworkSystemPUN::InternalState value);
      // static field const value: static public NetworkSystemPUN/InternalState Searching_Creating
      static constexpr const int Searching_Creating = 15;
      // Get static field: static public NetworkSystemPUN/InternalState Searching_Creating
      static ::GlobalNamespace::NetworkSystemPUN::InternalState _get_Searching_Creating();
      // Set static field: static public NetworkSystemPUN/InternalState Searching_Creating
      static void _set_Searching_Creating(::GlobalNamespace::NetworkSystemPUN::InternalState value);
      // static field const value: static public NetworkSystemPUN/InternalState Searching_Created
      static constexpr const int Searching_Created = 16;
      // Get static field: static public NetworkSystemPUN/InternalState Searching_Created
      static ::GlobalNamespace::NetworkSystemPUN::InternalState _get_Searching_Created();
      // Set static field: static public NetworkSystemPUN/InternalState Searching_Created
      static void _set_Searching_Created(::GlobalNamespace::NetworkSystemPUN::InternalState value);
      // static field const value: static public NetworkSystemPUN/InternalState Searching_CreateFailed
      static constexpr const int Searching_CreateFailed = 17;
      // Get static field: static public NetworkSystemPUN/InternalState Searching_CreateFailed
      static ::GlobalNamespace::NetworkSystemPUN::InternalState _get_Searching_CreateFailed();
      // Set static field: static public NetworkSystemPUN/InternalState Searching_CreateFailed
      static void _set_Searching_CreateFailed(::GlobalNamespace::NetworkSystemPUN::InternalState value);
      // static field const value: static public NetworkSystemPUN/InternalState Searching_Disconnecting
      static constexpr const int Searching_Disconnecting = 18;
      // Get static field: static public NetworkSystemPUN/InternalState Searching_Disconnecting
      static ::GlobalNamespace::NetworkSystemPUN::InternalState _get_Searching_Disconnecting();
      // Set static field: static public NetworkSystemPUN/InternalState Searching_Disconnecting
      static void _set_Searching_Disconnecting(::GlobalNamespace::NetworkSystemPUN::InternalState value);
      // static field const value: static public NetworkSystemPUN/InternalState Searching_Disconnected
      static constexpr const int Searching_Disconnected = 19;
      // Get static field: static public NetworkSystemPUN/InternalState Searching_Disconnected
      static ::GlobalNamespace::NetworkSystemPUN::InternalState _get_Searching_Disconnected();
      // Set static field: static public NetworkSystemPUN/InternalState Searching_Disconnected
      static void _set_Searching_Disconnected(::GlobalNamespace::NetworkSystemPUN::InternalState value);
      // Get instance field reference: public System.Int32 value__
      [[deprecated("Use field access instead!")]] int& dyn_value__();
    }; // NetworkSystemPUN/InternalState
    #pragma pack(pop)
    static check_size<sizeof(NetworkSystemPUN::InternalState), 0 + sizeof(int)> __GlobalNamespace_NetworkSystemPUN_InternalStateSizeCheck;
    static_assert(sizeof(NetworkSystemPUN::InternalState) == 0x4);
    public:
    // private NetworkRegionInfo[] regionData
    // Size: 0x8
    // Offset: 0xA0
    ::ArrayW<::GlobalNamespace::NetworkRegionInfo*> regionData;
    // Field size check
    static_assert(sizeof(::ArrayW<::GlobalNamespace::NetworkRegionInfo*>) == 0x8);
    // private System.Threading.Tasks.Task`1<NetJoinResult> roomTask
    // Size: 0x8
    // Offset: 0xA8
    ::System::Threading::Tasks::Task_1<::GlobalNamespace::NetJoinResult>* roomTask;
    // Field size check
    static_assert(sizeof(::System::Threading::Tasks::Task_1<::GlobalNamespace::NetJoinResult>*) == 0x8);
    // private Photon.Realtime.Player[] playerList
    // Size: 0x8
    // Offset: 0xB0
    ::ArrayW<::Photon::Realtime::Player*> playerList;
    // Field size check
    static_assert(sizeof(::ArrayW<::Photon::Realtime::Player*>) == 0x8);
    // private System.Collections.Generic.List`1<System.Threading.CancellationTokenSource> _taskCancelTokens
    // Size: 0x8
    // Offset: 0xB8
    ::System::Collections::Generic::List_1<::System::Threading::CancellationTokenSource*>* taskCancelTokens;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::System::Threading::CancellationTokenSource*>*) == 0x8);
    // private Photon.Voice.PUN.PhotonVoiceNetwork punVoice
    // Size: 0x8
    // Offset: 0xC0
    ::Photon::Voice::PUN::PhotonVoiceNetwork* punVoice;
    // Field size check
    static_assert(sizeof(::Photon::Voice::PUN::PhotonVoiceNetwork*) == 0x8);
    // private UnityEngine.GameObject VoiceNetworkObject
    // Size: 0x8
    // Offset: 0xC8
    ::UnityEngine::GameObject* VoiceNetworkObject;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // private NetworkSystemPUN/InternalState currentState
    // Size: 0x4
    // Offset: 0xD0
    ::GlobalNamespace::NetworkSystemPUN::InternalState currentState;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::NetworkSystemPUN::InternalState) == 0x4);
    // private System.Boolean firstRoomJoin
    // Size: 0x1
    // Offset: 0xD4
    bool firstRoomJoin;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    public:
    // Get instance field reference: private NetworkRegionInfo[] regionData
    [[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::NetworkRegionInfo*>& dyn_regionData();
    // Get instance field reference: private System.Threading.Tasks.Task`1<NetJoinResult> roomTask
    [[deprecated("Use field access instead!")]] ::System::Threading::Tasks::Task_1<::GlobalNamespace::NetJoinResult>*& dyn_roomTask();
    // Get instance field reference: private Photon.Realtime.Player[] playerList
    [[deprecated("Use field access instead!")]] ::ArrayW<::Photon::Realtime::Player*>& dyn_playerList();
    // Get instance field reference: private System.Collections.Generic.List`1<System.Threading.CancellationTokenSource> _taskCancelTokens
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::System::Threading::CancellationTokenSource*>*& dyn__taskCancelTokens();
    // Get instance field reference: private Photon.Voice.PUN.PhotonVoiceNetwork punVoice
    [[deprecated("Use field access instead!")]] ::Photon::Voice::PUN::PhotonVoiceNetwork*& dyn_punVoice();
    // Get instance field reference: private UnityEngine.GameObject VoiceNetworkObject
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_VoiceNetworkObject();
    // Get instance field reference: private NetworkSystemPUN/InternalState currentState
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::NetworkSystemPUN::InternalState& dyn_currentState();
    // Get instance field reference: private System.Boolean firstRoomJoin
    [[deprecated("Use field access instead!")]] bool& dyn_firstRoomJoin();
    // private System.Int32 get_lowestPingRegionIndex()
    // Offset: 0x291254C
    int get_lowestPingRegionIndex();
    // private NetworkSystemPUN/InternalState get_internalState()
    // Offset: 0x29125B8
    ::GlobalNamespace::NetworkSystemPUN::InternalState get_internalState();
    // private System.Void set_internalState(NetworkSystemPUN/InternalState value)
    // Offset: 0x29125C0
    void set_internalState(::GlobalNamespace::NetworkSystemPUN::InternalState value);
    // private System.Threading.Tasks.Task CacheRegionInfo()
    // Offset: 0x2912A88
    ::System::Threading::Tasks::Task* CacheRegionInfo();
    // private System.Threading.Tasks.Task WaitForState(System.Threading.CancellationToken ct, params NetworkSystemPUN/InternalState[] desiredStates)
    // Offset: 0x2912B7C
    ::System::Threading::Tasks::Task* WaitForState(::System::Threading::CancellationToken ct, ::ArrayW<::GlobalNamespace::NetworkSystemPUN::InternalState> desiredStates);
    // private System.Threading.Tasks.Task`1<System.Boolean> WaitForStateCheck(params NetworkSystemPUN/InternalState[] desiredStates)
    // Offset: 0x2912C90
    ::System::Threading::Tasks::Task_1<bool>* WaitForStateCheck(::ArrayW<::GlobalNamespace::NetworkSystemPUN::InternalState> desiredStates);
    // private System.Threading.Tasks.Task`1<NetJoinResult> MakeOrFindRoom(System.String roomName, RoomConfig opts, System.Int32 regionIndex)
    // Offset: 0x2912DBC
    ::System::Threading::Tasks::Task_1<::GlobalNamespace::NetJoinResult>* MakeOrFindRoom(::StringW roomName, ::GlobalNamespace::RoomConfig* opts, int regionIndex);
    // private System.Threading.Tasks.Task`1<System.Boolean> TryJoinRoom(System.String roomName)
    // Offset: 0x2912F00
    ::System::Threading::Tasks::Task_1<bool>* TryJoinRoom(::StringW roomName);
    // private System.Threading.Tasks.Task`1<System.Boolean> TryJoinRoomInRegion(System.String roomName, System.Int32 regionIndex)
    // Offset: 0x291302C
    ::System::Threading::Tasks::Task_1<bool>* TryJoinRoomInRegion(::StringW roomName, int regionIndex);
    // private System.Threading.Tasks.Task`1<NetJoinResult> TryCreateRoom(System.String roomName, RoomConfig opts)
    // Offset: 0x2913160
    ::System::Threading::Tasks::Task_1<::GlobalNamespace::NetJoinResult>* TryCreateRoom(::StringW roomName, ::GlobalNamespace::RoomConfig* opts);
    // private System.Threading.Tasks.Task`1<NetJoinResult> JoinRandomPublicRoom(RoomConfig opts)
    // Offset: 0x291328C
    ::System::Threading::Tasks::Task_1<::GlobalNamespace::NetJoinResult>* JoinRandomPublicRoom(::GlobalNamespace::RoomConfig* opts);
    // private System.Threading.Tasks.Task InternalDisconnect()
    // Offset: 0x291382C
    ::System::Threading::Tasks::Task* InternalDisconnect();
    // private System.Void AddVoice()
    // Offset: 0x2913910
    void AddVoice();
    // private System.Void SetupVoice()
    // Offset: 0x2913914
    void SetupVoice();
    // public System.Void OnConnectedtoMaster()
    // Offset: 0x2915E08
    void OnConnectedtoMaster();
    // public System.Void OnJoinedRoom()
    // Offset: 0x2915E20
    void OnJoinedRoom();
    // public System.Void OnJoinRoomFailed(System.Int16 returnCode, System.String message)
    // Offset: 0x2915E48
    void OnJoinRoomFailed(int16_t returnCode, ::StringW message);
    // public System.Void OnCreateRoomFailed(System.Int16 returnCode, System.String message)
    // Offset: 0x2915E6C
    void OnCreateRoomFailed(int16_t returnCode, ::StringW message);
    // public System.Void OnPlayerEnteredRoom(Photon.Realtime.Player newPlayer)
    // Offset: 0x2915E84
    void OnPlayerEnteredRoom(::Photon::Realtime::Player* newPlayer);
    // public System.Void OnPlayerLeftRoom(Photon.Realtime.Player otherPlayer)
    // Offset: 0x2915F10
    void OnPlayerLeftRoom(::Photon::Realtime::Player* otherPlayer);
    // public System.Void OnDisconnected(Photon.Realtime.DisconnectCause cause)
    // Offset: 0x2915F68
    void OnDisconnected(::Photon::Realtime::DisconnectCause cause);
    // private System.ValueTuple`2<System.Threading.CancellationTokenSource,System.Threading.CancellationToken> GetCancellationToken()
    // Offset: 0x291601C
    ::System::ValueTuple_2<::System::Threading::CancellationTokenSource*, ::System::Threading::CancellationToken> GetCancellationToken();
    // public System.Void ResetSystem()
    // Offset: 0x2916138
    void ResetSystem();
    // private System.Void <>n__0()
    // Offset: 0x2916408
    void $$n__0();
    // private System.Void <SetupVoice>b__61_0(System.Action`1<Photon.Voice.Unity.RemoteVoiceLink> callback)
    // Offset: 0x291640C
    void $SetupVoice$b__61_0(::System::Action_1<::Photon::Voice::Unity::RemoteVoiceLink*>* callback);
    // public override Photon.Voice.Unity.VoiceConnection get_VoiceConnection()
    // Offset: 0x2912544
    // Implemented from: NetworkSystem
    // Base method: Photon.Voice.Unity.VoiceConnection NetworkSystem::get_VoiceConnection()
    ::Photon::Voice::Unity::VoiceConnection* get_VoiceConnection();
    // public override System.String get_CurrentPhotonBackend()
    // Offset: 0x29125C8
    // Implemented from: NetworkSystem
    // Base method: System.String NetworkSystem::get_CurrentPhotonBackend()
    ::StringW get_CurrentPhotonBackend();
    // public override System.Boolean get_IsOnline()
    // Offset: 0x2912608
    // Implemented from: NetworkSystem
    // Base method: System.Boolean NetworkSystem::get_IsOnline()
    bool get_IsOnline();
    // public override System.Boolean get_InRoom()
    // Offset: 0x291262C
    // Implemented from: NetworkSystem
    // Base method: System.Boolean NetworkSystem::get_InRoom()
    bool get_InRoom();
    // public override System.String get_RoomName()
    // Offset: 0x291267C
    // Implemented from: NetworkSystem
    // Base method: System.String NetworkSystem::get_RoomName()
    ::StringW get_RoomName();
    // public override System.String get_GameModeString()
    // Offset: 0x29126DC
    // Implemented from: NetworkSystem
    // Base method: System.String NetworkSystem::get_GameModeString()
    ::StringW get_GameModeString();
    // public override System.String get_CurrentRegion()
    // Offset: 0x2912790
    // Implemented from: NetworkSystem
    // Base method: System.String NetworkSystem::get_CurrentRegion()
    ::StringW get_CurrentRegion();
    // public override System.Boolean get_SessionIsPrivate()
    // Offset: 0x29127E0
    // Implemented from: NetworkSystem
    // Base method: System.Boolean NetworkSystem::get_SessionIsPrivate()
    bool get_SessionIsPrivate();
    // public override System.Int32 get_LocalPlayerID()
    // Offset: 0x2912844
    // Implemented from: NetworkSystem
    // Base method: System.Int32 NetworkSystem::get_LocalPlayerID()
    int get_LocalPlayerID();
    // public override System.Int32 get_MasterAuthID()
    // Offset: 0x29128A4
    // Implemented from: NetworkSystem
    // Base method: System.Int32 NetworkSystem::get_MasterAuthID()
    int get_MasterAuthID();
    // public override System.Int32[] get_AllPlayerIDs()
    // Offset: 0x2912904
    // Implemented from: NetworkSystem
    // Base method: System.Int32[] NetworkSystem::get_AllPlayerIDs()
    ::ArrayW<int> get_AllPlayerIDs();
    // public override System.Single get_SimTime()
    // Offset: 0x291290C
    // Implemented from: NetworkSystem
    // Base method: System.Single NetworkSystem::get_SimTime()
    float get_SimTime();
    // public override System.Single get_SimDeltaTime()
    // Offset: 0x2912914
    // Implemented from: NetworkSystem
    // Base method: System.Single NetworkSystem::get_SimDeltaTime()
    float get_SimDeltaTime();
    // public override System.Int32 get_SimTick()
    // Offset: 0x291291C
    // Implemented from: NetworkSystem
    // Base method: System.Int32 NetworkSystem::get_SimTick()
    int get_SimTick();
    // public override System.Int32 get_RoomPlayerCount()
    // Offset: 0x291296C
    // Implemented from: NetworkSystem
    // Base method: System.Int32 NetworkSystem::get_RoomPlayerCount()
    int get_RoomPlayerCount();
    // public override System.Void Initialise()
    // Offset: 0x29129D4
    // Implemented from: NetworkSystem
    // Base method: System.Void NetworkSystem::Initialise()
    void Initialise();
    // public override System.Void SetAuthenticationValues(System.Collections.Generic.Dictionary`2<System.String,System.String> authValues)
    // Offset: 0x2912B70
    // Implemented from: NetworkSystem
    // Base method: System.Void NetworkSystem::SetAuthenticationValues(System.Collections.Generic.Dictionary`2<System.String,System.String> authValues)
    void SetAuthenticationValues(::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* authValues);
    // public override System.Threading.Tasks.Task`1<NetJoinResult> ConnectToRoom(System.String roomName, RoomConfig opts, System.Int32 regionIndex)
    // Offset: 0x29133A4
    // Implemented from: NetworkSystem
    // Base method: System.Threading.Tasks.Task`1<NetJoinResult> NetworkSystem::ConnectToRoom(System.String roomName, RoomConfig opts, System.Int32 regionIndex)
    ::System::Threading::Tasks::Task_1<::GlobalNamespace::NetJoinResult>* ConnectToRoom(::StringW roomName, ::GlobalNamespace::RoomConfig* opts, int regionIndex);
    // public override System.Threading.Tasks.Task JoinFriendsRoom(System.String userID, System.Int32 actorIDToFollow, System.String keyToFollow, System.String shufflerToFollow)
    // Offset: 0x29134E4
    // Implemented from: NetworkSystem
    // Base method: System.Threading.Tasks.Task NetworkSystem::JoinFriendsRoom(System.String userID, System.Int32 actorIDToFollow, System.String keyToFollow, System.String shufflerToFollow)
    ::System::Threading::Tasks::Task* JoinFriendsRoom(::StringW userID, int actorIDToFollow, ::StringW keyToFollow, ::StringW shufflerToFollow);
    // public override System.Void JoinPubWithFriends()
    // Offset: 0x2913620
    // Implemented from: NetworkSystem
    // Base method: System.Void NetworkSystem::JoinPubWithFriends()
    void JoinPubWithFriends();
    // public override System.String GetRandomWeightedRegion()
    // Offset: 0x2913658
    // Implemented from: NetworkSystem
    // Base method: System.String NetworkSystem::GetRandomWeightedRegion()
    ::StringW GetRandomWeightedRegion();
    // public override System.Threading.Tasks.Task ReturnToSinglePlayer()
    // Offset: 0x2913748
    // Implemented from: NetworkSystem
    // Base method: System.Threading.Tasks.Task NetworkSystem::ReturnToSinglePlayer()
    ::System::Threading::Tasks::Task* ReturnToSinglePlayer();
    // public override System.Void AddRemoteVoiceAddedCallback(System.Action`1<Photon.Voice.Unity.RemoteVoiceLink> callback)
    // Offset: 0x2913EBC
    // Implemented from: NetworkSystem
    // Base method: System.Void NetworkSystem::AddRemoteVoiceAddedCallback(System.Action`1<Photon.Voice.Unity.RemoteVoiceLink> callback)
    void AddRemoteVoiceAddedCallback(::System::Action_1<::Photon::Voice::Unity::RemoteVoiceLink*>* callback);
    // public override UnityEngine.GameObject NetInstantiate(UnityEngine.GameObject prefab, UnityEngine.Vector3 position, UnityEngine.Quaternion rotation, System.Boolean isRoomObject)
    // Offset: 0x2913F68
    // Implemented from: NetworkSystem
    // Base method: UnityEngine.GameObject NetworkSystem::NetInstantiate(UnityEngine.GameObject prefab, UnityEngine.Vector3 position, UnityEngine.Quaternion rotation, System.Boolean isRoomObject)
    ::UnityEngine::GameObject* NetInstantiate(::UnityEngine::GameObject* prefab, ::UnityEngine::Vector3 position, ::UnityEngine::Quaternion rotation, bool isRoomObject);
    // public override UnityEngine.GameObject NetInstantiate(UnityEngine.GameObject prefab, UnityEngine.Vector3 position, UnityEngine.Quaternion rotation, System.Int32 playerAuthID, System.Boolean isRoomObject)
    // Offset: 0x2914104
    // Implemented from: NetworkSystem
    // Base method: UnityEngine.GameObject NetworkSystem::NetInstantiate(UnityEngine.GameObject prefab, UnityEngine.Vector3 position, UnityEngine.Quaternion rotation, System.Int32 playerAuthID, System.Boolean isRoomObject)
    ::UnityEngine::GameObject* NetInstantiate(::UnityEngine::GameObject* prefab, ::UnityEngine::Vector3 position, ::UnityEngine::Quaternion rotation, int playerAuthID, bool isRoomObject);
    // public override System.Void NetDestroy(UnityEngine.GameObject instance)
    // Offset: 0x2914118
    // Implemented from: NetworkSystem
    // Base method: System.Void NetworkSystem::NetDestroy(UnityEngine.GameObject instance)
    void NetDestroy(::UnityEngine::GameObject* instance);
    // public override System.Void SetPlayerObject(UnityEngine.GameObject playerInstance, System.Nullable`1<System.Int32> owningPlayerID)
    // Offset: 0x29141EC
    // Implemented from: NetworkSystem
    // Base method: System.Void NetworkSystem::SetPlayerObject(UnityEngine.GameObject playerInstance, System.Nullable`1<System.Int32> owningPlayerID)
    void SetPlayerObject(::UnityEngine::GameObject* playerInstance, ::System::Nullable_1<int> owningPlayerID);
    // public override System.Void CallRPC(UnityEngine.MonoBehaviour component, NetworkSystem/RPC rpcMethod, System.Boolean sendToSelf)
    // Offset: 0x29141F0
    // Implemented from: NetworkSystem
    // Base method: System.Void NetworkSystem::CallRPC(UnityEngine.MonoBehaviour component, NetworkSystem/RPC rpcMethod, System.Boolean sendToSelf)
    void CallRPC(::UnityEngine::MonoBehaviour* component, ::GlobalNamespace::NetworkSystem::RPC* rpcMethod, bool sendToSelf);
    // public override System.Void CallRPC(UnityEngine.MonoBehaviour component, NetworkSystem/RPC rpcMethod, RPCArgBuffer`1<T> args, System.Boolean sendToSelf)
    // Offset: 0xFFFFFFFFFFFFFFFF
    // Implemented from: NetworkSystem
    // Base method: System.Void NetworkSystem::CallRPC(UnityEngine.MonoBehaviour component, NetworkSystem/RPC rpcMethod, RPCArgBuffer`1<T> args, System.Boolean sendToSelf)
    template<class T>
    void CallRPC(::UnityEngine::MonoBehaviour* component, ::GlobalNamespace::NetworkSystem::RPC* rpcMethod, ::GlobalNamespace::RPCArgBuffer_1<T> args, bool sendToSelf) {
      static_assert(std::is_convertible_v<T, ::System::ValueType*>);
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkSystemPUN::CallRPC");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::NetworkSystem*), -1));
      auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___generic__method, component, rpcMethod, args, sendToSelf);
    }
    // public override System.Void CallRPC(UnityEngine.MonoBehaviour component, NetworkSystem/StringRPC rpcMethod, System.String message, System.Boolean sendToSelf)
    // Offset: 0x2914320
    // Implemented from: NetworkSystem
    // Base method: System.Void NetworkSystem::CallRPC(UnityEngine.MonoBehaviour component, NetworkSystem/StringRPC rpcMethod, System.String message, System.Boolean sendToSelf)
    void CallRPC(::UnityEngine::MonoBehaviour* component, ::GlobalNamespace::NetworkSystem::StringRPC* rpcMethod, ::StringW message, bool sendToSelf);
    // public override System.Void CallRPC(System.Int32 targetPlayerID, UnityEngine.MonoBehaviour component, NetworkSystem/RPC rpcMethod)
    // Offset: 0x2914420
    // Implemented from: NetworkSystem
    // Base method: System.Void NetworkSystem::CallRPC(System.Int32 targetPlayerID, UnityEngine.MonoBehaviour component, NetworkSystem/RPC rpcMethod)
    void CallRPC(int targetPlayerID, ::UnityEngine::MonoBehaviour* component, ::GlobalNamespace::NetworkSystem::RPC* rpcMethod);
    // public override System.Void CallRPC(System.Int32 targetPlayerID, UnityEngine.MonoBehaviour component, NetworkSystem/RPC rpcMethod, RPCArgBuffer`1<T> args)
    // Offset: 0xFFFFFFFFFFFFFFFF
    // Implemented from: NetworkSystem
    // Base method: System.Void NetworkSystem::CallRPC(System.Int32 targetPlayerID, UnityEngine.MonoBehaviour component, NetworkSystem/RPC rpcMethod, RPCArgBuffer`1<T> args)
    template<class T>
    void CallRPC(int targetPlayerID, ::UnityEngine::MonoBehaviour* component, ::GlobalNamespace::NetworkSystem::RPC* rpcMethod, ::GlobalNamespace::RPCArgBuffer_1<T> args) {
      static_assert(std::is_convertible_v<T, ::System::ValueType*>);
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkSystemPUN::CallRPC");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::NetworkSystem*), -1));
      auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___generic__method, targetPlayerID, component, rpcMethod, args);
    }
    // public override System.Void CallRPC(System.Int32 targetPlayerID, UnityEngine.MonoBehaviour component, NetworkSystem/StringRPC rpcMethod, System.String message)
    // Offset: 0x2914594
    // Implemented from: NetworkSystem
    // Base method: System.Void NetworkSystem::CallRPC(System.Int32 targetPlayerID, UnityEngine.MonoBehaviour component, NetworkSystem/StringRPC rpcMethod, System.String message)
    void CallRPC(int targetPlayerID, ::UnityEngine::MonoBehaviour* component, ::GlobalNamespace::NetworkSystem::StringRPC* rpcMethod, ::StringW message);
    // public override System.Threading.Tasks.Task AwaitSceneReady()
    // Offset: 0x29146E0
    // Implemented from: NetworkSystem
    // Base method: System.Threading.Tasks.Task NetworkSystem::AwaitSceneReady()
    ::System::Threading::Tasks::Task* AwaitSceneReady();
    // public override NetPlayer GetLocalPlayer()
    // Offset: 0x29147A8
    // Implemented from: NetworkSystem
    // Base method: NetPlayer NetworkSystem::GetLocalPlayer()
    ::GlobalNamespace::NetPlayer* GetLocalPlayer();
    // public override NetPlayer GetPlayer(System.Int32 PlayerID)
    // Offset: 0x29149E0
    // Implemented from: NetworkSystem
    // Base method: NetPlayer NetworkSystem::GetPlayer(System.Int32 PlayerID)
    ::GlobalNamespace::NetPlayer* GetPlayer(int PlayerID);
    // public override System.Void SetMyNickName(System.String id)
    // Offset: 0x2914CC8
    // Implemented from: NetworkSystem
    // Base method: System.Void NetworkSystem::SetMyNickName(System.String id)
    void SetMyNickName(::StringW id);
    // public override System.String GetMyNickName()
    // Offset: 0x2914D5C
    // Implemented from: NetworkSystem
    // Base method: System.String NetworkSystem::GetMyNickName()
    ::StringW GetMyNickName();
    // public override System.String GetMyDefaultName()
    // Offset: 0x2914DBC
    // Implemented from: NetworkSystem
    // Base method: System.String NetworkSystem::GetMyDefaultName()
    ::StringW GetMyDefaultName();
    // public override System.String GetNickName(System.Int32 playerID)
    // Offset: 0x2914E1C
    // Implemented from: NetworkSystem
    // Base method: System.String NetworkSystem::GetNickName(System.Int32 playerID)
    ::StringW GetNickName(int playerID);
    // public override System.Void SetMyTutorialComplete()
    // Offset: 0x2914F54
    // Implemented from: NetworkSystem
    // Base method: System.Void NetworkSystem::SetMyTutorialComplete()
    void SetMyTutorialComplete();
    // public override System.Boolean GetMyTutorialCompletion()
    // Offset: 0x29150C4
    // Implemented from: NetworkSystem
    // Base method: System.Boolean NetworkSystem::GetMyTutorialCompletion()
    bool GetMyTutorialCompletion();
    // public override System.Boolean GetPlayerTutorialCompletion(System.Int32 playerID)
    // Offset: 0x2915148
    // Implemented from: NetworkSystem
    // Base method: System.Boolean NetworkSystem::GetPlayerTutorialCompletion(System.Int32 playerID)
    bool GetPlayerTutorialCompletion(int playerID);
    // public override System.String GetMyUserID()
    // Offset: 0x29152F4
    // Implemented from: NetworkSystem
    // Base method: System.String NetworkSystem::GetMyUserID()
    ::StringW GetMyUserID();
    // public override System.String GetUserID(System.Int32 playerID)
    // Offset: 0x2915354
    // Implemented from: NetworkSystem
    // Base method: System.String NetworkSystem::GetUserID(System.Int32 playerID)
    ::StringW GetUserID(int playerID);
    // public override System.Int32 GlobalPlayerCount()
    // Offset: 0x2915400
    // Implemented from: NetworkSystem
    // Base method: System.Int32 NetworkSystem::GlobalPlayerCount()
    int GlobalPlayerCount();
    // public override System.Boolean IsObjectLocallyOwned(UnityEngine.GameObject obj)
    // Offset: 0x2915460
    // Implemented from: NetworkSystem
    // Base method: System.Boolean NetworkSystem::IsObjectLocallyOwned(UnityEngine.GameObject obj)
    bool IsObjectLocallyOwned(::UnityEngine::GameObject* obj);
    // protected override System.Void UpdateNetPlayerList()
    // Offset: 0x2915500
    // Implemented from: NetworkSystem
    // Base method: System.Void NetworkSystem::UpdateNetPlayerList()
    void UpdateNetPlayerList();
    // protected override System.Void UpdatePlayerIDCache()
    // Offset: 0x2915A5C
    // Implemented from: NetworkSystem
    // Base method: System.Void NetworkSystem::UpdatePlayerIDCache()
    void UpdatePlayerIDCache();
    // public override System.Boolean IsObjectRoomObject(UnityEngine.GameObject obj)
    // Offset: 0x2915BCC
    // Implemented from: NetworkSystem
    // Base method: System.Boolean NetworkSystem::IsObjectRoomObject(UnityEngine.GameObject obj)
    bool IsObjectRoomObject(::UnityEngine::GameObject* obj);
    // public override System.Boolean ShouldUpdateObject(UnityEngine.GameObject obj)
    // Offset: 0x2915CC0
    // Implemented from: NetworkSystem
    // Base method: System.Boolean NetworkSystem::ShouldUpdateObject(UnityEngine.GameObject obj)
    bool ShouldUpdateObject(::UnityEngine::GameObject* obj);
    // public override System.Boolean ShouldWriteObjectData(UnityEngine.GameObject obj)
    // Offset: 0x2915CD0
    // Implemented from: NetworkSystem
    // Base method: System.Boolean NetworkSystem::ShouldWriteObjectData(UnityEngine.GameObject obj)
    bool ShouldWriteObjectData(::UnityEngine::GameObject* obj);
    // public override System.Int32 GetOwningPlayerID(UnityEngine.GameObject obj)
    // Offset: 0x2915CE0
    // Implemented from: NetworkSystem
    // Base method: System.Int32 NetworkSystem::GetOwningPlayerID(UnityEngine.GameObject obj)
    int GetOwningPlayerID(::UnityEngine::GameObject* obj);
    // public override System.Boolean ShouldSpawnLocally(System.Int32 playerID)
    // Offset: 0x2915D5C
    // Implemented from: NetworkSystem
    // Base method: System.Boolean NetworkSystem::ShouldSpawnLocally(System.Int32 playerID)
    bool ShouldSpawnLocally(int playerID);
    // public override System.Boolean IsTotalAuthority()
    // Offset: 0x2915E00
    // Implemented from: NetworkSystem
    // Base method: System.Boolean NetworkSystem::IsTotalAuthority()
    bool IsTotalAuthority();
    // public System.Void .ctor()
    // Offset: 0x2916360
    // Implemented from: NetworkSystem
    // Base method: System.Void NetworkSystem::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static NetworkSystemPUN* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkSystemPUN::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<NetworkSystemPUN*, creationType>()));
    }
  }; // NetworkSystemPUN
  #pragma pack(pop)
  static check_size<sizeof(NetworkSystemPUN), 212 + sizeof(bool)> __GlobalNamespace_NetworkSystemPUNSizeCheck;
  static_assert(sizeof(NetworkSystemPUN) == 0xD5);
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::NetworkSystemPUN::InternalState, "", "NetworkSystemPUN/InternalState");
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::NetworkSystemPUN::get_lowestPingRegionIndex
// Il2CppName: get_lowestPingRegionIndex
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (GlobalNamespace::NetworkSystemPUN::*)()>(&GlobalNamespace::NetworkSystemPUN::get_lowestPingRegionIndex)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NetworkSystemPUN*), "get_lowestPingRegionIndex", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NetworkSystemPUN::get_internalState
// Il2CppName: get_internalState
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::NetworkSystemPUN::InternalState (GlobalNamespace::NetworkSystemPUN::*)()>(&GlobalNamespace::NetworkSystemPUN::get_internalState)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NetworkSystemPUN*), "get_internalState", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NetworkSystemPUN::set_internalState
// Il2CppName: set_internalState
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::NetworkSystemPUN::*)(::GlobalNamespace::NetworkSystemPUN::InternalState)>(&GlobalNamespace::NetworkSystemPUN::set_internalState)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("", "NetworkSystemPUN/InternalState")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NetworkSystemPUN*), "set_internalState", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NetworkSystemPUN::CacheRegionInfo
// Il2CppName: CacheRegionInfo
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Threading::Tasks::Task* (GlobalNamespace::NetworkSystemPUN::*)()>(&GlobalNamespace::NetworkSystemPUN::CacheRegionInfo)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NetworkSystemPUN*), "CacheRegionInfo", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NetworkSystemPUN::WaitForState
// Il2CppName: WaitForState
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Threading::Tasks::Task* (GlobalNamespace::NetworkSystemPUN::*)(::System::Threading::CancellationToken, ::ArrayW<::GlobalNamespace::NetworkSystemPUN::InternalState>)>(&GlobalNamespace::NetworkSystemPUN::WaitForState)> {
  static const MethodInfo* get() {
    static auto* ct = &::il2cpp_utils::GetClassFromName("System.Threading", "CancellationToken")->byval_arg;
    static auto* desiredStates = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("", "NetworkSystemPUN/InternalState"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NetworkSystemPUN*), "WaitForState", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ct, desiredStates});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NetworkSystemPUN::WaitForStateCheck
// Il2CppName: WaitForStateCheck
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Threading::Tasks::Task_1<bool>* (GlobalNamespace::NetworkSystemPUN::*)(::ArrayW<::GlobalNamespace::NetworkSystemPUN::InternalState>)>(&GlobalNamespace::NetworkSystemPUN::WaitForStateCheck)> {
  static const MethodInfo* get() {
    static auto* desiredStates = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("", "NetworkSystemPUN/InternalState"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NetworkSystemPUN*), "WaitForStateCheck", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{desiredStates});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NetworkSystemPUN::MakeOrFindRoom
// Il2CppName: MakeOrFindRoom
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Threading::Tasks::Task_1<::GlobalNamespace::NetJoinResult>* (GlobalNamespace::NetworkSystemPUN::*)(::StringW, ::GlobalNamespace::RoomConfig*, int)>(&GlobalNamespace::NetworkSystemPUN::MakeOrFindRoom)> {
  static const MethodInfo* get() {
    static auto* roomName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* opts = &::il2cpp_utils::GetClassFromName("", "RoomConfig")->byval_arg;
    static auto* regionIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NetworkSystemPUN*), "MakeOrFindRoom", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{roomName, opts, regionIndex});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NetworkSystemPUN::TryJoinRoom
// Il2CppName: TryJoinRoom
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Threading::Tasks::Task_1<bool>* (GlobalNamespace::NetworkSystemPUN::*)(::StringW)>(&GlobalNamespace::NetworkSystemPUN::TryJoinRoom)> {
  static const MethodInfo* get() {
    static auto* roomName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NetworkSystemPUN*), "TryJoinRoom", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{roomName});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NetworkSystemPUN::TryJoinRoomInRegion
// Il2CppName: TryJoinRoomInRegion
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Threading::Tasks::Task_1<bool>* (GlobalNamespace::NetworkSystemPUN::*)(::StringW, int)>(&GlobalNamespace::NetworkSystemPUN::TryJoinRoomInRegion)> {
  static const MethodInfo* get() {
    static auto* roomName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* regionIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NetworkSystemPUN*), "TryJoinRoomInRegion", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{roomName, regionIndex});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NetworkSystemPUN::TryCreateRoom
// Il2CppName: TryCreateRoom
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Threading::Tasks::Task_1<::GlobalNamespace::NetJoinResult>* (GlobalNamespace::NetworkSystemPUN::*)(::StringW, ::GlobalNamespace::RoomConfig*)>(&GlobalNamespace::NetworkSystemPUN::TryCreateRoom)> {
  static const MethodInfo* get() {
    static auto* roomName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* opts = &::il2cpp_utils::GetClassFromName("", "RoomConfig")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NetworkSystemPUN*), "TryCreateRoom", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{roomName, opts});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NetworkSystemPUN::JoinRandomPublicRoom
// Il2CppName: JoinRandomPublicRoom
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Threading::Tasks::Task_1<::GlobalNamespace::NetJoinResult>* (GlobalNamespace::NetworkSystemPUN::*)(::GlobalNamespace::RoomConfig*)>(&GlobalNamespace::NetworkSystemPUN::JoinRandomPublicRoom)> {
  static const MethodInfo* get() {
    static auto* opts = &::il2cpp_utils::GetClassFromName("", "RoomConfig")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NetworkSystemPUN*), "JoinRandomPublicRoom", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{opts});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NetworkSystemPUN::InternalDisconnect
// Il2CppName: InternalDisconnect
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Threading::Tasks::Task* (GlobalNamespace::NetworkSystemPUN::*)()>(&GlobalNamespace::NetworkSystemPUN::InternalDisconnect)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NetworkSystemPUN*), "InternalDisconnect", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NetworkSystemPUN::AddVoice
// Il2CppName: AddVoice
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::NetworkSystemPUN::*)()>(&GlobalNamespace::NetworkSystemPUN::AddVoice)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NetworkSystemPUN*), "AddVoice", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NetworkSystemPUN::SetupVoice
// Il2CppName: SetupVoice
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::NetworkSystemPUN::*)()>(&GlobalNamespace::NetworkSystemPUN::SetupVoice)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NetworkSystemPUN*), "SetupVoice", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NetworkSystemPUN::OnConnectedtoMaster
// Il2CppName: OnConnectedtoMaster
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::NetworkSystemPUN::*)()>(&GlobalNamespace::NetworkSystemPUN::OnConnectedtoMaster)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NetworkSystemPUN*), "OnConnectedtoMaster", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NetworkSystemPUN::OnJoinedRoom
// Il2CppName: OnJoinedRoom
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::NetworkSystemPUN::*)()>(&GlobalNamespace::NetworkSystemPUN::OnJoinedRoom)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NetworkSystemPUN*), "OnJoinedRoom", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NetworkSystemPUN::OnJoinRoomFailed
// Il2CppName: OnJoinRoomFailed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::NetworkSystemPUN::*)(int16_t, ::StringW)>(&GlobalNamespace::NetworkSystemPUN::OnJoinRoomFailed)> {
  static const MethodInfo* get() {
    static auto* returnCode = &::il2cpp_utils::GetClassFromName("System", "Int16")->byval_arg;
    static auto* message = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NetworkSystemPUN*), "OnJoinRoomFailed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{returnCode, message});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NetworkSystemPUN::OnCreateRoomFailed
// Il2CppName: OnCreateRoomFailed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::NetworkSystemPUN::*)(int16_t, ::StringW)>(&GlobalNamespace::NetworkSystemPUN::OnCreateRoomFailed)> {
  static const MethodInfo* get() {
    static auto* returnCode = &::il2cpp_utils::GetClassFromName("System", "Int16")->byval_arg;
    static auto* message = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NetworkSystemPUN*), "OnCreateRoomFailed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{returnCode, message});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NetworkSystemPUN::OnPlayerEnteredRoom
// Il2CppName: OnPlayerEnteredRoom
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::NetworkSystemPUN::*)(::Photon::Realtime::Player*)>(&GlobalNamespace::NetworkSystemPUN::OnPlayerEnteredRoom)> {
  static const MethodInfo* get() {
    static auto* newPlayer = &::il2cpp_utils::GetClassFromName("Photon.Realtime", "Player")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NetworkSystemPUN*), "OnPlayerEnteredRoom", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{newPlayer});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NetworkSystemPUN::OnPlayerLeftRoom
// Il2CppName: OnPlayerLeftRoom
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::NetworkSystemPUN::*)(::Photon::Realtime::Player*)>(&GlobalNamespace::NetworkSystemPUN::OnPlayerLeftRoom)> {
  static const MethodInfo* get() {
    static auto* otherPlayer = &::il2cpp_utils::GetClassFromName("Photon.Realtime", "Player")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NetworkSystemPUN*), "OnPlayerLeftRoom", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{otherPlayer});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NetworkSystemPUN::OnDisconnected
// Il2CppName: OnDisconnected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::NetworkSystemPUN::*)(::Photon::Realtime::DisconnectCause)>(&GlobalNamespace::NetworkSystemPUN::OnDisconnected)> {
  static const MethodInfo* get() {
    static auto* cause = &::il2cpp_utils::GetClassFromName("Photon.Realtime", "DisconnectCause")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NetworkSystemPUN*), "OnDisconnected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{cause});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NetworkSystemPUN::GetCancellationToken
// Il2CppName: GetCancellationToken
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::ValueTuple_2<::System::Threading::CancellationTokenSource*, ::System::Threading::CancellationToken> (GlobalNamespace::NetworkSystemPUN::*)()>(&GlobalNamespace::NetworkSystemPUN::GetCancellationToken)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NetworkSystemPUN*), "GetCancellationToken", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NetworkSystemPUN::ResetSystem
// Il2CppName: ResetSystem
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::NetworkSystemPUN::*)()>(&GlobalNamespace::NetworkSystemPUN::ResetSystem)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NetworkSystemPUN*), "ResetSystem", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NetworkSystemPUN::$$n__0
// Il2CppName: <>n__0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::NetworkSystemPUN::*)()>(&GlobalNamespace::NetworkSystemPUN::$$n__0)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NetworkSystemPUN*), "<>n__0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NetworkSystemPUN::$SetupVoice$b__61_0
// Il2CppName: <SetupVoice>b__61_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::NetworkSystemPUN::*)(::System::Action_1<::Photon::Voice::Unity::RemoteVoiceLink*>*)>(&GlobalNamespace::NetworkSystemPUN::$SetupVoice$b__61_0)> {
  static const MethodInfo* get() {
    static auto* callback = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("Photon.Voice.Unity", "RemoteVoiceLink")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NetworkSystemPUN*), "<SetupVoice>b__61_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{callback});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NetworkSystemPUN::get_VoiceConnection
// Il2CppName: get_VoiceConnection
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Photon::Voice::Unity::VoiceConnection* (GlobalNamespace::NetworkSystemPUN::*)()>(&GlobalNamespace::NetworkSystemPUN::get_VoiceConnection)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NetworkSystemPUN*), "get_VoiceConnection", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NetworkSystemPUN::get_CurrentPhotonBackend
// Il2CppName: get_CurrentPhotonBackend
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (GlobalNamespace::NetworkSystemPUN::*)()>(&GlobalNamespace::NetworkSystemPUN::get_CurrentPhotonBackend)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NetworkSystemPUN*), "get_CurrentPhotonBackend", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NetworkSystemPUN::get_IsOnline
// Il2CppName: get_IsOnline
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (GlobalNamespace::NetworkSystemPUN::*)()>(&GlobalNamespace::NetworkSystemPUN::get_IsOnline)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NetworkSystemPUN*), "get_IsOnline", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NetworkSystemPUN::get_InRoom
// Il2CppName: get_InRoom
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (GlobalNamespace::NetworkSystemPUN::*)()>(&GlobalNamespace::NetworkSystemPUN::get_InRoom)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NetworkSystemPUN*), "get_InRoom", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NetworkSystemPUN::get_RoomName
// Il2CppName: get_RoomName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (GlobalNamespace::NetworkSystemPUN::*)()>(&GlobalNamespace::NetworkSystemPUN::get_RoomName)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NetworkSystemPUN*), "get_RoomName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NetworkSystemPUN::get_GameModeString
// Il2CppName: get_GameModeString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (GlobalNamespace::NetworkSystemPUN::*)()>(&GlobalNamespace::NetworkSystemPUN::get_GameModeString)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NetworkSystemPUN*), "get_GameModeString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NetworkSystemPUN::get_CurrentRegion
// Il2CppName: get_CurrentRegion
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (GlobalNamespace::NetworkSystemPUN::*)()>(&GlobalNamespace::NetworkSystemPUN::get_CurrentRegion)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NetworkSystemPUN*), "get_CurrentRegion", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NetworkSystemPUN::get_SessionIsPrivate
// Il2CppName: get_SessionIsPrivate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (GlobalNamespace::NetworkSystemPUN::*)()>(&GlobalNamespace::NetworkSystemPUN::get_SessionIsPrivate)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NetworkSystemPUN*), "get_SessionIsPrivate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NetworkSystemPUN::get_LocalPlayerID
// Il2CppName: get_LocalPlayerID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (GlobalNamespace::NetworkSystemPUN::*)()>(&GlobalNamespace::NetworkSystemPUN::get_LocalPlayerID)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NetworkSystemPUN*), "get_LocalPlayerID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NetworkSystemPUN::get_MasterAuthID
// Il2CppName: get_MasterAuthID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (GlobalNamespace::NetworkSystemPUN::*)()>(&GlobalNamespace::NetworkSystemPUN::get_MasterAuthID)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NetworkSystemPUN*), "get_MasterAuthID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NetworkSystemPUN::get_AllPlayerIDs
// Il2CppName: get_AllPlayerIDs
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<int> (GlobalNamespace::NetworkSystemPUN::*)()>(&GlobalNamespace::NetworkSystemPUN::get_AllPlayerIDs)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NetworkSystemPUN*), "get_AllPlayerIDs", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NetworkSystemPUN::get_SimTime
// Il2CppName: get_SimTime
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (GlobalNamespace::NetworkSystemPUN::*)()>(&GlobalNamespace::NetworkSystemPUN::get_SimTime)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NetworkSystemPUN*), "get_SimTime", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NetworkSystemPUN::get_SimDeltaTime
// Il2CppName: get_SimDeltaTime
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (GlobalNamespace::NetworkSystemPUN::*)()>(&GlobalNamespace::NetworkSystemPUN::get_SimDeltaTime)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NetworkSystemPUN*), "get_SimDeltaTime", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NetworkSystemPUN::get_SimTick
// Il2CppName: get_SimTick
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (GlobalNamespace::NetworkSystemPUN::*)()>(&GlobalNamespace::NetworkSystemPUN::get_SimTick)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NetworkSystemPUN*), "get_SimTick", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NetworkSystemPUN::get_RoomPlayerCount
// Il2CppName: get_RoomPlayerCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (GlobalNamespace::NetworkSystemPUN::*)()>(&GlobalNamespace::NetworkSystemPUN::get_RoomPlayerCount)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NetworkSystemPUN*), "get_RoomPlayerCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NetworkSystemPUN::Initialise
// Il2CppName: Initialise
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::NetworkSystemPUN::*)()>(&GlobalNamespace::NetworkSystemPUN::Initialise)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NetworkSystemPUN*), "Initialise", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NetworkSystemPUN::SetAuthenticationValues
// Il2CppName: SetAuthenticationValues
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::NetworkSystemPUN::*)(::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>*)>(&GlobalNamespace::NetworkSystemPUN::SetAuthenticationValues)> {
  static const MethodInfo* get() {
    static auto* authValues = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "Dictionary`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NetworkSystemPUN*), "SetAuthenticationValues", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{authValues});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NetworkSystemPUN::ConnectToRoom
// Il2CppName: ConnectToRoom
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Threading::Tasks::Task_1<::GlobalNamespace::NetJoinResult>* (GlobalNamespace::NetworkSystemPUN::*)(::StringW, ::GlobalNamespace::RoomConfig*, int)>(&GlobalNamespace::NetworkSystemPUN::ConnectToRoom)> {
  static const MethodInfo* get() {
    static auto* roomName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* opts = &::il2cpp_utils::GetClassFromName("", "RoomConfig")->byval_arg;
    static auto* regionIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NetworkSystemPUN*), "ConnectToRoom", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{roomName, opts, regionIndex});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NetworkSystemPUN::JoinFriendsRoom
// Il2CppName: JoinFriendsRoom
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Threading::Tasks::Task* (GlobalNamespace::NetworkSystemPUN::*)(::StringW, int, ::StringW, ::StringW)>(&GlobalNamespace::NetworkSystemPUN::JoinFriendsRoom)> {
  static const MethodInfo* get() {
    static auto* userID = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* actorIDToFollow = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* keyToFollow = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* shufflerToFollow = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NetworkSystemPUN*), "JoinFriendsRoom", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{userID, actorIDToFollow, keyToFollow, shufflerToFollow});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NetworkSystemPUN::JoinPubWithFriends
// Il2CppName: JoinPubWithFriends
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::NetworkSystemPUN::*)()>(&GlobalNamespace::NetworkSystemPUN::JoinPubWithFriends)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NetworkSystemPUN*), "JoinPubWithFriends", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NetworkSystemPUN::GetRandomWeightedRegion
// Il2CppName: GetRandomWeightedRegion
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (GlobalNamespace::NetworkSystemPUN::*)()>(&GlobalNamespace::NetworkSystemPUN::GetRandomWeightedRegion)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NetworkSystemPUN*), "GetRandomWeightedRegion", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NetworkSystemPUN::ReturnToSinglePlayer
// Il2CppName: ReturnToSinglePlayer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Threading::Tasks::Task* (GlobalNamespace::NetworkSystemPUN::*)()>(&GlobalNamespace::NetworkSystemPUN::ReturnToSinglePlayer)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NetworkSystemPUN*), "ReturnToSinglePlayer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NetworkSystemPUN::AddRemoteVoiceAddedCallback
// Il2CppName: AddRemoteVoiceAddedCallback
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::NetworkSystemPUN::*)(::System::Action_1<::Photon::Voice::Unity::RemoteVoiceLink*>*)>(&GlobalNamespace::NetworkSystemPUN::AddRemoteVoiceAddedCallback)> {
  static const MethodInfo* get() {
    static auto* callback = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("Photon.Voice.Unity", "RemoteVoiceLink")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NetworkSystemPUN*), "AddRemoteVoiceAddedCallback", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{callback});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NetworkSystemPUN::NetInstantiate
// Il2CppName: NetInstantiate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::GameObject* (GlobalNamespace::NetworkSystemPUN::*)(::UnityEngine::GameObject*, ::UnityEngine::Vector3, ::UnityEngine::Quaternion, bool)>(&GlobalNamespace::NetworkSystemPUN::NetInstantiate)> {
  static const MethodInfo* get() {
    static auto* prefab = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    static auto* position = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* rotation = &::il2cpp_utils::GetClassFromName("UnityEngine", "Quaternion")->byval_arg;
    static auto* isRoomObject = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NetworkSystemPUN*), "NetInstantiate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{prefab, position, rotation, isRoomObject});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NetworkSystemPUN::NetInstantiate
// Il2CppName: NetInstantiate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::GameObject* (GlobalNamespace::NetworkSystemPUN::*)(::UnityEngine::GameObject*, ::UnityEngine::Vector3, ::UnityEngine::Quaternion, int, bool)>(&GlobalNamespace::NetworkSystemPUN::NetInstantiate)> {
  static const MethodInfo* get() {
    static auto* prefab = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    static auto* position = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* rotation = &::il2cpp_utils::GetClassFromName("UnityEngine", "Quaternion")->byval_arg;
    static auto* playerAuthID = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* isRoomObject = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NetworkSystemPUN*), "NetInstantiate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{prefab, position, rotation, playerAuthID, isRoomObject});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NetworkSystemPUN::NetDestroy
// Il2CppName: NetDestroy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::NetworkSystemPUN::*)(::UnityEngine::GameObject*)>(&GlobalNamespace::NetworkSystemPUN::NetDestroy)> {
  static const MethodInfo* get() {
    static auto* instance = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NetworkSystemPUN*), "NetDestroy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{instance});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NetworkSystemPUN::SetPlayerObject
// Il2CppName: SetPlayerObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::NetworkSystemPUN::*)(::UnityEngine::GameObject*, ::System::Nullable_1<int>)>(&GlobalNamespace::NetworkSystemPUN::SetPlayerObject)> {
  static const MethodInfo* get() {
    static auto* playerInstance = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    static auto* owningPlayerID = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Nullable`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Int32")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NetworkSystemPUN*), "SetPlayerObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{playerInstance, owningPlayerID});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NetworkSystemPUN::CallRPC
// Il2CppName: CallRPC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::NetworkSystemPUN::*)(::UnityEngine::MonoBehaviour*, ::GlobalNamespace::NetworkSystem::RPC*, bool)>(&GlobalNamespace::NetworkSystemPUN::CallRPC)> {
  static const MethodInfo* get() {
    static auto* component = &::il2cpp_utils::GetClassFromName("UnityEngine", "MonoBehaviour")->byval_arg;
    static auto* rpcMethod = &::il2cpp_utils::GetClassFromName("", "NetworkSystem/RPC")->byval_arg;
    static auto* sendToSelf = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NetworkSystemPUN*), "CallRPC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{component, rpcMethod, sendToSelf});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NetworkSystemPUN::CallRPC
// Il2CppName: CallRPC
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: GlobalNamespace::NetworkSystemPUN::CallRPC
// Il2CppName: CallRPC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::NetworkSystemPUN::*)(::UnityEngine::MonoBehaviour*, ::GlobalNamespace::NetworkSystem::StringRPC*, ::StringW, bool)>(&GlobalNamespace::NetworkSystemPUN::CallRPC)> {
  static const MethodInfo* get() {
    static auto* component = &::il2cpp_utils::GetClassFromName("UnityEngine", "MonoBehaviour")->byval_arg;
    static auto* rpcMethod = &::il2cpp_utils::GetClassFromName("", "NetworkSystem/StringRPC")->byval_arg;
    static auto* message = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* sendToSelf = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NetworkSystemPUN*), "CallRPC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{component, rpcMethod, message, sendToSelf});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NetworkSystemPUN::CallRPC
// Il2CppName: CallRPC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::NetworkSystemPUN::*)(int, ::UnityEngine::MonoBehaviour*, ::GlobalNamespace::NetworkSystem::RPC*)>(&GlobalNamespace::NetworkSystemPUN::CallRPC)> {
  static const MethodInfo* get() {
    static auto* targetPlayerID = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* component = &::il2cpp_utils::GetClassFromName("UnityEngine", "MonoBehaviour")->byval_arg;
    static auto* rpcMethod = &::il2cpp_utils::GetClassFromName("", "NetworkSystem/RPC")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NetworkSystemPUN*), "CallRPC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{targetPlayerID, component, rpcMethod});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NetworkSystemPUN::CallRPC
// Il2CppName: CallRPC
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: GlobalNamespace::NetworkSystemPUN::CallRPC
// Il2CppName: CallRPC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::NetworkSystemPUN::*)(int, ::UnityEngine::MonoBehaviour*, ::GlobalNamespace::NetworkSystem::StringRPC*, ::StringW)>(&GlobalNamespace::NetworkSystemPUN::CallRPC)> {
  static const MethodInfo* get() {
    static auto* targetPlayerID = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* component = &::il2cpp_utils::GetClassFromName("UnityEngine", "MonoBehaviour")->byval_arg;
    static auto* rpcMethod = &::il2cpp_utils::GetClassFromName("", "NetworkSystem/StringRPC")->byval_arg;
    static auto* message = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NetworkSystemPUN*), "CallRPC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{targetPlayerID, component, rpcMethod, message});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NetworkSystemPUN::AwaitSceneReady
// Il2CppName: AwaitSceneReady
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Threading::Tasks::Task* (GlobalNamespace::NetworkSystemPUN::*)()>(&GlobalNamespace::NetworkSystemPUN::AwaitSceneReady)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NetworkSystemPUN*), "AwaitSceneReady", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NetworkSystemPUN::GetLocalPlayer
// Il2CppName: GetLocalPlayer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::NetPlayer* (GlobalNamespace::NetworkSystemPUN::*)()>(&GlobalNamespace::NetworkSystemPUN::GetLocalPlayer)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NetworkSystemPUN*), "GetLocalPlayer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NetworkSystemPUN::GetPlayer
// Il2CppName: GetPlayer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::NetPlayer* (GlobalNamespace::NetworkSystemPUN::*)(int)>(&GlobalNamespace::NetworkSystemPUN::GetPlayer)> {
  static const MethodInfo* get() {
    static auto* PlayerID = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NetworkSystemPUN*), "GetPlayer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{PlayerID});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NetworkSystemPUN::SetMyNickName
// Il2CppName: SetMyNickName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::NetworkSystemPUN::*)(::StringW)>(&GlobalNamespace::NetworkSystemPUN::SetMyNickName)> {
  static const MethodInfo* get() {
    static auto* id = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NetworkSystemPUN*), "SetMyNickName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{id});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NetworkSystemPUN::GetMyNickName
// Il2CppName: GetMyNickName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (GlobalNamespace::NetworkSystemPUN::*)()>(&GlobalNamespace::NetworkSystemPUN::GetMyNickName)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NetworkSystemPUN*), "GetMyNickName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NetworkSystemPUN::GetMyDefaultName
// Il2CppName: GetMyDefaultName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (GlobalNamespace::NetworkSystemPUN::*)()>(&GlobalNamespace::NetworkSystemPUN::GetMyDefaultName)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NetworkSystemPUN*), "GetMyDefaultName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NetworkSystemPUN::GetNickName
// Il2CppName: GetNickName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (GlobalNamespace::NetworkSystemPUN::*)(int)>(&GlobalNamespace::NetworkSystemPUN::GetNickName)> {
  static const MethodInfo* get() {
    static auto* playerID = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NetworkSystemPUN*), "GetNickName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{playerID});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NetworkSystemPUN::SetMyTutorialComplete
// Il2CppName: SetMyTutorialComplete
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::NetworkSystemPUN::*)()>(&GlobalNamespace::NetworkSystemPUN::SetMyTutorialComplete)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NetworkSystemPUN*), "SetMyTutorialComplete", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NetworkSystemPUN::GetMyTutorialCompletion
// Il2CppName: GetMyTutorialCompletion
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (GlobalNamespace::NetworkSystemPUN::*)()>(&GlobalNamespace::NetworkSystemPUN::GetMyTutorialCompletion)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NetworkSystemPUN*), "GetMyTutorialCompletion", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NetworkSystemPUN::GetPlayerTutorialCompletion
// Il2CppName: GetPlayerTutorialCompletion
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (GlobalNamespace::NetworkSystemPUN::*)(int)>(&GlobalNamespace::NetworkSystemPUN::GetPlayerTutorialCompletion)> {
  static const MethodInfo* get() {
    static auto* playerID = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NetworkSystemPUN*), "GetPlayerTutorialCompletion", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{playerID});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NetworkSystemPUN::GetMyUserID
// Il2CppName: GetMyUserID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (GlobalNamespace::NetworkSystemPUN::*)()>(&GlobalNamespace::NetworkSystemPUN::GetMyUserID)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NetworkSystemPUN*), "GetMyUserID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NetworkSystemPUN::GetUserID
// Il2CppName: GetUserID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (GlobalNamespace::NetworkSystemPUN::*)(int)>(&GlobalNamespace::NetworkSystemPUN::GetUserID)> {
  static const MethodInfo* get() {
    static auto* playerID = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NetworkSystemPUN*), "GetUserID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{playerID});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NetworkSystemPUN::GlobalPlayerCount
// Il2CppName: GlobalPlayerCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (GlobalNamespace::NetworkSystemPUN::*)()>(&GlobalNamespace::NetworkSystemPUN::GlobalPlayerCount)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NetworkSystemPUN*), "GlobalPlayerCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NetworkSystemPUN::IsObjectLocallyOwned
// Il2CppName: IsObjectLocallyOwned
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (GlobalNamespace::NetworkSystemPUN::*)(::UnityEngine::GameObject*)>(&GlobalNamespace::NetworkSystemPUN::IsObjectLocallyOwned)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NetworkSystemPUN*), "IsObjectLocallyOwned", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NetworkSystemPUN::UpdateNetPlayerList
// Il2CppName: UpdateNetPlayerList
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::NetworkSystemPUN::*)()>(&GlobalNamespace::NetworkSystemPUN::UpdateNetPlayerList)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NetworkSystemPUN*), "UpdateNetPlayerList", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NetworkSystemPUN::UpdatePlayerIDCache
// Il2CppName: UpdatePlayerIDCache
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::NetworkSystemPUN::*)()>(&GlobalNamespace::NetworkSystemPUN::UpdatePlayerIDCache)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NetworkSystemPUN*), "UpdatePlayerIDCache", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NetworkSystemPUN::IsObjectRoomObject
// Il2CppName: IsObjectRoomObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (GlobalNamespace::NetworkSystemPUN::*)(::UnityEngine::GameObject*)>(&GlobalNamespace::NetworkSystemPUN::IsObjectRoomObject)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NetworkSystemPUN*), "IsObjectRoomObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NetworkSystemPUN::ShouldUpdateObject
// Il2CppName: ShouldUpdateObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (GlobalNamespace::NetworkSystemPUN::*)(::UnityEngine::GameObject*)>(&GlobalNamespace::NetworkSystemPUN::ShouldUpdateObject)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NetworkSystemPUN*), "ShouldUpdateObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NetworkSystemPUN::ShouldWriteObjectData
// Il2CppName: ShouldWriteObjectData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (GlobalNamespace::NetworkSystemPUN::*)(::UnityEngine::GameObject*)>(&GlobalNamespace::NetworkSystemPUN::ShouldWriteObjectData)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NetworkSystemPUN*), "ShouldWriteObjectData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NetworkSystemPUN::GetOwningPlayerID
// Il2CppName: GetOwningPlayerID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (GlobalNamespace::NetworkSystemPUN::*)(::UnityEngine::GameObject*)>(&GlobalNamespace::NetworkSystemPUN::GetOwningPlayerID)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NetworkSystemPUN*), "GetOwningPlayerID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NetworkSystemPUN::ShouldSpawnLocally
// Il2CppName: ShouldSpawnLocally
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (GlobalNamespace::NetworkSystemPUN::*)(int)>(&GlobalNamespace::NetworkSystemPUN::ShouldSpawnLocally)> {
  static const MethodInfo* get() {
    static auto* playerID = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NetworkSystemPUN*), "ShouldSpawnLocally", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{playerID});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NetworkSystemPUN::IsTotalAuthority
// Il2CppName: IsTotalAuthority
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (GlobalNamespace::NetworkSystemPUN::*)()>(&GlobalNamespace::NetworkSystemPUN::IsTotalAuthority)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NetworkSystemPUN*), "IsTotalAuthority", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NetworkSystemPUN::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
