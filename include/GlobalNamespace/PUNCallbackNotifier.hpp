// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Photon.Pun.MonoBehaviourPunCallbacks
#include "Photon/Pun/MonoBehaviourPunCallbacks.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: NetworkSystemPUN
  class NetworkSystemPUN;
}
// Forward declaring namespace: Photon::Realtime
namespace Photon::Realtime {
  // Forward declaring type: Player
  class Player;
  // Forward declaring type: DisconnectCause
  struct DisconnectCause;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Forward declaring type: PUNCallbackNotifier
  class PUNCallbackNotifier;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::PUNCallbackNotifier);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::PUNCallbackNotifier*, "", "PUNCallbackNotifier");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x30
  #pragma pack(push, 1)
  // Autogenerated type: PUNCallbackNotifier
  // [TokenAttribute] Offset: FFFFFFFF
  class PUNCallbackNotifier : public ::Photon::Pun::MonoBehaviourPunCallbacks {
    public:
    public:
    // private NetworkSystemPUN parentSystem
    // Size: 0x8
    // Offset: 0x28
    ::GlobalNamespace::NetworkSystemPUN* parentSystem;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::NetworkSystemPUN*) == 0x8);
    public:
    // Get instance field reference: private NetworkSystemPUN parentSystem
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::NetworkSystemPUN*& dyn_parentSystem();
    // private System.Void Start()
    // Offset: 0x291B220
    void Start();
    // private System.Void Update()
    // Offset: 0x291B278
    void Update();
    // public System.Void .ctor()
    // Offset: 0x291B498
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static PUNCallbackNotifier* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PUNCallbackNotifier::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<PUNCallbackNotifier*, creationType>()));
    }
    // public override System.Void OnConnectedToMaster()
    // Offset: 0x291B27C
    // Implemented from: Photon.Pun.MonoBehaviourPunCallbacks
    // Base method: System.Void MonoBehaviourPunCallbacks::OnConnectedToMaster()
    void OnConnectedToMaster();
    // public override System.Void OnJoinedRoom()
    // Offset: 0x291B2A8
    // Implemented from: Photon.Pun.MonoBehaviourPunCallbacks
    // Base method: System.Void MonoBehaviourPunCallbacks::OnJoinedRoom()
    void OnJoinedRoom();
    // public override System.Void OnJoinRoomFailed(System.Int16 returnCode, System.String message)
    // Offset: 0x291B2E4
    // Implemented from: Photon.Pun.MonoBehaviourPunCallbacks
    // Base method: System.Void MonoBehaviourPunCallbacks::OnJoinRoomFailed(System.Int16 returnCode, System.String message)
    void OnJoinRoomFailed(int16_t returnCode, ::StringW message);
    // public override System.Void OnJoinRandomFailed(System.Int16 returnCode, System.String message)
    // Offset: 0x291B31C
    // Implemented from: Photon.Pun.MonoBehaviourPunCallbacks
    // Base method: System.Void MonoBehaviourPunCallbacks::OnJoinRandomFailed(System.Int16 returnCode, System.String message)
    void OnJoinRandomFailed(int16_t returnCode, ::StringW message);
    // public override System.Void OnCreateRoomFailed(System.Int16 returnCode, System.String message)
    // Offset: 0x291B354
    // Implemented from: Photon.Pun.MonoBehaviourPunCallbacks
    // Base method: System.Void MonoBehaviourPunCallbacks::OnCreateRoomFailed(System.Int16 returnCode, System.String message)
    void OnCreateRoomFailed(int16_t returnCode, ::StringW message);
    // public override System.Void OnPlayerEnteredRoom(Photon.Realtime.Player newPlayer)
    // Offset: 0x291B380
    // Implemented from: Photon.Pun.MonoBehaviourPunCallbacks
    // Base method: System.Void MonoBehaviourPunCallbacks::OnPlayerEnteredRoom(Photon.Realtime.Player newPlayer)
    void OnPlayerEnteredRoom(::Photon::Realtime::Player* newPlayer);
    // public override System.Void OnPlayerLeftRoom(Photon.Realtime.Player otherPlayer)
    // Offset: 0x291B398
    // Implemented from: Photon.Pun.MonoBehaviourPunCallbacks
    // Base method: System.Void MonoBehaviourPunCallbacks::OnPlayerLeftRoom(Photon.Realtime.Player otherPlayer)
    void OnPlayerLeftRoom(::Photon::Realtime::Player* otherPlayer);
    // public override System.Void OnDisconnected(Photon.Realtime.DisconnectCause cause)
    // Offset: 0x291B3B0
    // Implemented from: Photon.Pun.MonoBehaviourPunCallbacks
    // Base method: System.Void MonoBehaviourPunCallbacks::OnDisconnected(Photon.Realtime.DisconnectCause cause)
    void OnDisconnected(::Photon::Realtime::DisconnectCause cause);
  }; // PUNCallbackNotifier
  #pragma pack(pop)
  static check_size<sizeof(PUNCallbackNotifier), 40 + sizeof(::GlobalNamespace::NetworkSystemPUN*)> __GlobalNamespace_PUNCallbackNotifierSizeCheck;
  static_assert(sizeof(PUNCallbackNotifier) == 0x30);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::PUNCallbackNotifier::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::PUNCallbackNotifier::*)()>(&GlobalNamespace::PUNCallbackNotifier::Start)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::PUNCallbackNotifier*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::PUNCallbackNotifier::Update
// Il2CppName: Update
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::PUNCallbackNotifier::*)()>(&GlobalNamespace::PUNCallbackNotifier::Update)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::PUNCallbackNotifier*), "Update", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::PUNCallbackNotifier::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: GlobalNamespace::PUNCallbackNotifier::OnConnectedToMaster
// Il2CppName: OnConnectedToMaster
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::PUNCallbackNotifier::*)()>(&GlobalNamespace::PUNCallbackNotifier::OnConnectedToMaster)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::PUNCallbackNotifier*), "OnConnectedToMaster", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::PUNCallbackNotifier::OnJoinedRoom
// Il2CppName: OnJoinedRoom
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::PUNCallbackNotifier::*)()>(&GlobalNamespace::PUNCallbackNotifier::OnJoinedRoom)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::PUNCallbackNotifier*), "OnJoinedRoom", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::PUNCallbackNotifier::OnJoinRoomFailed
// Il2CppName: OnJoinRoomFailed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::PUNCallbackNotifier::*)(int16_t, ::StringW)>(&GlobalNamespace::PUNCallbackNotifier::OnJoinRoomFailed)> {
  static const MethodInfo* get() {
    static auto* returnCode = &::il2cpp_utils::GetClassFromName("System", "Int16")->byval_arg;
    static auto* message = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::PUNCallbackNotifier*), "OnJoinRoomFailed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{returnCode, message});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::PUNCallbackNotifier::OnJoinRandomFailed
// Il2CppName: OnJoinRandomFailed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::PUNCallbackNotifier::*)(int16_t, ::StringW)>(&GlobalNamespace::PUNCallbackNotifier::OnJoinRandomFailed)> {
  static const MethodInfo* get() {
    static auto* returnCode = &::il2cpp_utils::GetClassFromName("System", "Int16")->byval_arg;
    static auto* message = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::PUNCallbackNotifier*), "OnJoinRandomFailed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{returnCode, message});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::PUNCallbackNotifier::OnCreateRoomFailed
// Il2CppName: OnCreateRoomFailed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::PUNCallbackNotifier::*)(int16_t, ::StringW)>(&GlobalNamespace::PUNCallbackNotifier::OnCreateRoomFailed)> {
  static const MethodInfo* get() {
    static auto* returnCode = &::il2cpp_utils::GetClassFromName("System", "Int16")->byval_arg;
    static auto* message = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::PUNCallbackNotifier*), "OnCreateRoomFailed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{returnCode, message});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::PUNCallbackNotifier::OnPlayerEnteredRoom
// Il2CppName: OnPlayerEnteredRoom
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::PUNCallbackNotifier::*)(::Photon::Realtime::Player*)>(&GlobalNamespace::PUNCallbackNotifier::OnPlayerEnteredRoom)> {
  static const MethodInfo* get() {
    static auto* newPlayer = &::il2cpp_utils::GetClassFromName("Photon.Realtime", "Player")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::PUNCallbackNotifier*), "OnPlayerEnteredRoom", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{newPlayer});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::PUNCallbackNotifier::OnPlayerLeftRoom
// Il2CppName: OnPlayerLeftRoom
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::PUNCallbackNotifier::*)(::Photon::Realtime::Player*)>(&GlobalNamespace::PUNCallbackNotifier::OnPlayerLeftRoom)> {
  static const MethodInfo* get() {
    static auto* otherPlayer = &::il2cpp_utils::GetClassFromName("Photon.Realtime", "Player")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::PUNCallbackNotifier*), "OnPlayerLeftRoom", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{otherPlayer});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::PUNCallbackNotifier::OnDisconnected
// Il2CppName: OnDisconnected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::PUNCallbackNotifier::*)(::Photon::Realtime::DisconnectCause)>(&GlobalNamespace::PUNCallbackNotifier::OnDisconnected)> {
  static const MethodInfo* get() {
    static auto* cause = &::il2cpp_utils::GetClassFromName("Photon.Realtime", "DisconnectCause")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::PUNCallbackNotifier*), "OnDisconnected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{cause});
  }
};
