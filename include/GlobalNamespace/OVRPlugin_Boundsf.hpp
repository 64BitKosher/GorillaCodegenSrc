// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: OVRPlugin
#include "GlobalNamespace/OVRPlugin.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Including type: OVRPlugin/Vector3f
// Already included the same include: GlobalNamespace/OVRPlugin.hpp
// Including type: OVRPlugin/Size3f
#include "GlobalNamespace/OVRPlugin_Size3f.hpp"
// Completed includes
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::OVRPlugin::Boundsf, "", "OVRPlugin/Boundsf");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x18
  #pragma pack(push, 1)
  // WARNING Layout: Sequential may not be correctly taken into account!
  // Autogenerated type: OVRPlugin/Boundsf
  // [TokenAttribute] Offset: FFFFFFFF
  struct OVRPlugin::Boundsf/*, public ::System::ValueType*/ {
    public:
    public:
    // public OVRPlugin/Vector3f Pos
    // Size: 0xC
    // Offset: 0x0
    ::GlobalNamespace::OVRPlugin::Vector3f Pos;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::OVRPlugin::Vector3f) == 0xC);
    // public OVRPlugin/Size3f Size
    // Size: 0xC
    // Offset: 0xC
    ::GlobalNamespace::OVRPlugin::Size3f Size;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::OVRPlugin::Size3f) == 0xC);
    public:
    // Creating value type constructor for type: Boundsf
    constexpr Boundsf(::GlobalNamespace::OVRPlugin::Vector3f Pos_ = {}, ::GlobalNamespace::OVRPlugin::Size3f Size_ = {}) noexcept : Pos{Pos_}, Size{Size_} {}
    // Creating interface conversion operator: operator ::System::ValueType
    operator ::System::ValueType() noexcept {
      return *reinterpret_cast<::System::ValueType*>(this);
    }
    // Get instance field reference: public OVRPlugin/Vector3f Pos
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRPlugin::Vector3f& dyn_Pos();
    // Get instance field reference: public OVRPlugin/Size3f Size
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRPlugin::Size3f& dyn_Size();
  }; // OVRPlugin/Boundsf
  #pragma pack(pop)
  static check_size<sizeof(OVRPlugin::Boundsf), 12 + sizeof(::GlobalNamespace::OVRPlugin::Size3f)> __GlobalNamespace_OVRPlugin_BoundsfSizeCheck;
  static_assert(sizeof(OVRPlugin::Boundsf) == 0x18);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
