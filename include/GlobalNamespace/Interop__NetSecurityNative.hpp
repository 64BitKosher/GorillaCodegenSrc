// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Interop
#include "GlobalNamespace/Interop_.hpp"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: IntPtr
  struct IntPtr;
}
// Forward declaring namespace: Microsoft::Win32::SafeHandles
namespace Microsoft::Win32::SafeHandles {
  // Forward declaring type: SafeGssNameHandle
  class SafeGssNameHandle;
  // Forward declaring type: SafeGssCredHandle
  class SafeGssCredHandle;
  // Forward declaring type: SafeGssContextHandle
  class SafeGssContextHandle;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::Interop_::NetSecurityNative);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::Interop_::NetSecurityNative*, "", "Interop/NetSecurityNative");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: Interop/NetSecurityNative
  // [TokenAttribute] Offset: FFFFFFFF
  class Interop_::NetSecurityNative : public ::Il2CppObject {
    public:
    // Nested type: ::GlobalNamespace::Interop_::NetSecurityNative::GssApiException
    class GssApiException;
    // Nested type: ::GlobalNamespace::Interop_::NetSecurityNative::GssBuffer
    struct GssBuffer;
    // Nested type: ::GlobalNamespace::Interop_::NetSecurityNative::Status
    struct Status;
    // Nested type: ::GlobalNamespace::Interop_::NetSecurityNative::GssFlags
    struct GssFlags;
    // static System.Void ReleaseGssBuffer(System.IntPtr bufferPtr, System.UInt64 length)
    // Offset: 0x4BEEF14
    static void ReleaseGssBuffer(::System::IntPtr bufferPtr, uint64_t length);
    // static Interop/NetSecurityNative/Status DisplayMinorStatus(out Interop/NetSecurityNative/Status minorStatus, Interop/NetSecurityNative/Status statusValue, ref Interop/NetSecurityNative/GssBuffer buffer)
    // Offset: 0x4BEEF4C
    static ::GlobalNamespace::Interop_::NetSecurityNative::Status DisplayMinorStatus(ByRef<::GlobalNamespace::Interop_::NetSecurityNative::Status> minorStatus, ::GlobalNamespace::Interop_::NetSecurityNative::Status statusValue, ByRef<::GlobalNamespace::Interop_::NetSecurityNative::GssBuffer> buffer);
    // static Interop/NetSecurityNative/Status DisplayMajorStatus(out Interop/NetSecurityNative/Status minorStatus, Interop/NetSecurityNative/Status statusValue, ref Interop/NetSecurityNative/GssBuffer buffer)
    // Offset: 0x4BEEF84
    static ::GlobalNamespace::Interop_::NetSecurityNative::Status DisplayMajorStatus(ByRef<::GlobalNamespace::Interop_::NetSecurityNative::Status> minorStatus, ::GlobalNamespace::Interop_::NetSecurityNative::Status statusValue, ByRef<::GlobalNamespace::Interop_::NetSecurityNative::GssBuffer> buffer);
    // static Interop/NetSecurityNative/Status ImportUserName(out Interop/NetSecurityNative/Status minorStatus, System.String inputName, System.Int32 inputNameByteCount, out Microsoft.Win32.SafeHandles.SafeGssNameHandle outputName)
    // Offset: 0x4BEEFBC
    static ::GlobalNamespace::Interop_::NetSecurityNative::Status ImportUserName(ByRef<::GlobalNamespace::Interop_::NetSecurityNative::Status> minorStatus, ::StringW inputName, int inputNameByteCount, ByRef<::Microsoft::Win32::SafeHandles::SafeGssNameHandle*> outputName);
    // static Interop/NetSecurityNative/Status ImportPrincipalName(out Interop/NetSecurityNative/Status minorStatus, System.String inputName, System.Int32 inputNameByteCount, out Microsoft.Win32.SafeHandles.SafeGssNameHandle outputName)
    // Offset: 0x4BEEFF4
    static ::GlobalNamespace::Interop_::NetSecurityNative::Status ImportPrincipalName(ByRef<::GlobalNamespace::Interop_::NetSecurityNative::Status> minorStatus, ::StringW inputName, int inputNameByteCount, ByRef<::Microsoft::Win32::SafeHandles::SafeGssNameHandle*> outputName);
    // static Interop/NetSecurityNative/Status ReleaseName(out Interop/NetSecurityNative/Status minorStatus, ref System.IntPtr inputName)
    // Offset: 0x4BEF02C
    static ::GlobalNamespace::Interop_::NetSecurityNative::Status ReleaseName(ByRef<::GlobalNamespace::Interop_::NetSecurityNative::Status> minorStatus, ByRef<::System::IntPtr> inputName);
    // static Interop/NetSecurityNative/Status InitiateCredSpNego(out Interop/NetSecurityNative/Status minorStatus, Microsoft.Win32.SafeHandles.SafeGssNameHandle desiredName, out Microsoft.Win32.SafeHandles.SafeGssCredHandle outputCredHandle)
    // Offset: 0x4BEF064
    static ::GlobalNamespace::Interop_::NetSecurityNative::Status InitiateCredSpNego(ByRef<::GlobalNamespace::Interop_::NetSecurityNative::Status> minorStatus, ::Microsoft::Win32::SafeHandles::SafeGssNameHandle* desiredName, ByRef<::Microsoft::Win32::SafeHandles::SafeGssCredHandle*> outputCredHandle);
    // static Interop/NetSecurityNative/Status InitiateCredWithPassword(out Interop/NetSecurityNative/Status minorStatus, System.Boolean isNtlm, Microsoft.Win32.SafeHandles.SafeGssNameHandle desiredName, System.String password, System.Int32 passwordLen, out Microsoft.Win32.SafeHandles.SafeGssCredHandle outputCredHandle)
    // Offset: 0x4BEF09C
    static ::GlobalNamespace::Interop_::NetSecurityNative::Status InitiateCredWithPassword(ByRef<::GlobalNamespace::Interop_::NetSecurityNative::Status> minorStatus, bool isNtlm, ::Microsoft::Win32::SafeHandles::SafeGssNameHandle* desiredName, ::StringW password, int passwordLen, ByRef<::Microsoft::Win32::SafeHandles::SafeGssCredHandle*> outputCredHandle);
    // static Interop/NetSecurityNative/Status ReleaseCred(out Interop/NetSecurityNative/Status minorStatus, ref System.IntPtr credHandle)
    // Offset: 0x4BEF0D4
    static ::GlobalNamespace::Interop_::NetSecurityNative::Status ReleaseCred(ByRef<::GlobalNamespace::Interop_::NetSecurityNative::Status> minorStatus, ByRef<::System::IntPtr> credHandle);
    // static Interop/NetSecurityNative/Status InitSecContext(out Interop/NetSecurityNative/Status minorStatus, Microsoft.Win32.SafeHandles.SafeGssCredHandle initiatorCredHandle, ref Microsoft.Win32.SafeHandles.SafeGssContextHandle contextHandle, System.Boolean isNtlmOnly, Microsoft.Win32.SafeHandles.SafeGssNameHandle targetName, System.UInt32 reqFlags, System.Byte[] inputBytes, System.Int32 inputLength, ref Interop/NetSecurityNative/GssBuffer token, out System.UInt32 retFlags, out System.Int32 isNtlmUsed)
    // Offset: 0x4BEF10C
    static ::GlobalNamespace::Interop_::NetSecurityNative::Status InitSecContext(ByRef<::GlobalNamespace::Interop_::NetSecurityNative::Status> minorStatus, ::Microsoft::Win32::SafeHandles::SafeGssCredHandle* initiatorCredHandle, ByRef<::Microsoft::Win32::SafeHandles::SafeGssContextHandle*> contextHandle, bool isNtlmOnly, ::Microsoft::Win32::SafeHandles::SafeGssNameHandle* targetName, uint reqFlags, ::ArrayW<uint8_t> inputBytes, int inputLength, ByRef<::GlobalNamespace::Interop_::NetSecurityNative::GssBuffer> token, ByRef<uint> retFlags, ByRef<int> isNtlmUsed);
    // static Interop/NetSecurityNative/Status DeleteSecContext(out Interop/NetSecurityNative/Status minorStatus, ref System.IntPtr contextHandle)
    // Offset: 0x4BEF144
    static ::GlobalNamespace::Interop_::NetSecurityNative::Status DeleteSecContext(ByRef<::GlobalNamespace::Interop_::NetSecurityNative::Status> minorStatus, ByRef<::System::IntPtr> contextHandle);
    // static private Interop/NetSecurityNative/Status Wrap(out Interop/NetSecurityNative/Status minorStatus, Microsoft.Win32.SafeHandles.SafeGssContextHandle contextHandle, System.Boolean isEncrypt, System.Byte[] inputBytes, System.Int32 offset, System.Int32 count, ref Interop/NetSecurityNative/GssBuffer outBuffer)
    // Offset: 0x4BEF17C
    static ::GlobalNamespace::Interop_::NetSecurityNative::Status Wrap(ByRef<::GlobalNamespace::Interop_::NetSecurityNative::Status> minorStatus, ::Microsoft::Win32::SafeHandles::SafeGssContextHandle* contextHandle, bool isEncrypt, ::ArrayW<uint8_t> inputBytes, int offset, int count, ByRef<::GlobalNamespace::Interop_::NetSecurityNative::GssBuffer> outBuffer);
    // static private Interop/NetSecurityNative/Status Unwrap(out Interop/NetSecurityNative/Status minorStatus, Microsoft.Win32.SafeHandles.SafeGssContextHandle contextHandle, System.Byte[] inputBytes, System.Int32 offset, System.Int32 count, ref Interop/NetSecurityNative/GssBuffer outBuffer)
    // Offset: 0x4BEF1B4
    static ::GlobalNamespace::Interop_::NetSecurityNative::Status Unwrap(ByRef<::GlobalNamespace::Interop_::NetSecurityNative::Status> minorStatus, ::Microsoft::Win32::SafeHandles::SafeGssContextHandle* contextHandle, ::ArrayW<uint8_t> inputBytes, int offset, int count, ByRef<::GlobalNamespace::Interop_::NetSecurityNative::GssBuffer> outBuffer);
    // static Interop/NetSecurityNative/Status WrapBuffer(out Interop/NetSecurityNative/Status minorStatus, Microsoft.Win32.SafeHandles.SafeGssContextHandle contextHandle, System.Boolean isEncrypt, System.Byte[] inputBytes, System.Int32 offset, System.Int32 count, ref Interop/NetSecurityNative/GssBuffer outBuffer)
    // Offset: 0x4BEF1EC
    static ::GlobalNamespace::Interop_::NetSecurityNative::Status WrapBuffer(ByRef<::GlobalNamespace::Interop_::NetSecurityNative::Status> minorStatus, ::Microsoft::Win32::SafeHandles::SafeGssContextHandle* contextHandle, bool isEncrypt, ::ArrayW<uint8_t> inputBytes, int offset, int count, ByRef<::GlobalNamespace::Interop_::NetSecurityNative::GssBuffer> outBuffer);
    // static Interop/NetSecurityNative/Status UnwrapBuffer(out Interop/NetSecurityNative/Status minorStatus, Microsoft.Win32.SafeHandles.SafeGssContextHandle contextHandle, System.Byte[] inputBytes, System.Int32 offset, System.Int32 count, ref Interop/NetSecurityNative/GssBuffer outBuffer)
    // Offset: 0x4BEF1F8
    static ::GlobalNamespace::Interop_::NetSecurityNative::Status UnwrapBuffer(ByRef<::GlobalNamespace::Interop_::NetSecurityNative::Status> minorStatus, ::Microsoft::Win32::SafeHandles::SafeGssContextHandle* contextHandle, ::ArrayW<uint8_t> inputBytes, int offset, int count, ByRef<::GlobalNamespace::Interop_::NetSecurityNative::GssBuffer> outBuffer);
  }; // Interop/NetSecurityNative
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::Interop_::NetSecurityNative::ReleaseGssBuffer
// Il2CppName: ReleaseGssBuffer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, uint64_t)>(&GlobalNamespace::Interop_::NetSecurityNative::ReleaseGssBuffer)> {
  static const MethodInfo* get() {
    static auto* bufferPtr = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* length = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::Interop_::NetSecurityNative*), "ReleaseGssBuffer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{bufferPtr, length});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::Interop_::NetSecurityNative::DisplayMinorStatus
// Il2CppName: DisplayMinorStatus
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::Interop_::NetSecurityNative::Status (*)(ByRef<::GlobalNamespace::Interop_::NetSecurityNative::Status>, ::GlobalNamespace::Interop_::NetSecurityNative::Status, ByRef<::GlobalNamespace::Interop_::NetSecurityNative::GssBuffer>)>(&GlobalNamespace::Interop_::NetSecurityNative::DisplayMinorStatus)> {
  static const MethodInfo* get() {
    static auto* minorStatus = &::il2cpp_utils::GetClassFromName("", "Interop/NetSecurityNative/Status")->this_arg;
    static auto* statusValue = &::il2cpp_utils::GetClassFromName("", "Interop/NetSecurityNative/Status")->byval_arg;
    static auto* buffer = &::il2cpp_utils::GetClassFromName("", "Interop/NetSecurityNative/GssBuffer")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::Interop_::NetSecurityNative*), "DisplayMinorStatus", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{minorStatus, statusValue, buffer});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::Interop_::NetSecurityNative::DisplayMajorStatus
// Il2CppName: DisplayMajorStatus
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::Interop_::NetSecurityNative::Status (*)(ByRef<::GlobalNamespace::Interop_::NetSecurityNative::Status>, ::GlobalNamespace::Interop_::NetSecurityNative::Status, ByRef<::GlobalNamespace::Interop_::NetSecurityNative::GssBuffer>)>(&GlobalNamespace::Interop_::NetSecurityNative::DisplayMajorStatus)> {
  static const MethodInfo* get() {
    static auto* minorStatus = &::il2cpp_utils::GetClassFromName("", "Interop/NetSecurityNative/Status")->this_arg;
    static auto* statusValue = &::il2cpp_utils::GetClassFromName("", "Interop/NetSecurityNative/Status")->byval_arg;
    static auto* buffer = &::il2cpp_utils::GetClassFromName("", "Interop/NetSecurityNative/GssBuffer")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::Interop_::NetSecurityNative*), "DisplayMajorStatus", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{minorStatus, statusValue, buffer});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::Interop_::NetSecurityNative::ImportUserName
// Il2CppName: ImportUserName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::Interop_::NetSecurityNative::Status (*)(ByRef<::GlobalNamespace::Interop_::NetSecurityNative::Status>, ::StringW, int, ByRef<::Microsoft::Win32::SafeHandles::SafeGssNameHandle*>)>(&GlobalNamespace::Interop_::NetSecurityNative::ImportUserName)> {
  static const MethodInfo* get() {
    static auto* minorStatus = &::il2cpp_utils::GetClassFromName("", "Interop/NetSecurityNative/Status")->this_arg;
    static auto* inputName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* inputNameByteCount = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* outputName = &::il2cpp_utils::GetClassFromName("Microsoft.Win32.SafeHandles", "SafeGssNameHandle")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::Interop_::NetSecurityNative*), "ImportUserName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{minorStatus, inputName, inputNameByteCount, outputName});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::Interop_::NetSecurityNative::ImportPrincipalName
// Il2CppName: ImportPrincipalName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::Interop_::NetSecurityNative::Status (*)(ByRef<::GlobalNamespace::Interop_::NetSecurityNative::Status>, ::StringW, int, ByRef<::Microsoft::Win32::SafeHandles::SafeGssNameHandle*>)>(&GlobalNamespace::Interop_::NetSecurityNative::ImportPrincipalName)> {
  static const MethodInfo* get() {
    static auto* minorStatus = &::il2cpp_utils::GetClassFromName("", "Interop/NetSecurityNative/Status")->this_arg;
    static auto* inputName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* inputNameByteCount = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* outputName = &::il2cpp_utils::GetClassFromName("Microsoft.Win32.SafeHandles", "SafeGssNameHandle")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::Interop_::NetSecurityNative*), "ImportPrincipalName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{minorStatus, inputName, inputNameByteCount, outputName});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::Interop_::NetSecurityNative::ReleaseName
// Il2CppName: ReleaseName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::Interop_::NetSecurityNative::Status (*)(ByRef<::GlobalNamespace::Interop_::NetSecurityNative::Status>, ByRef<::System::IntPtr>)>(&GlobalNamespace::Interop_::NetSecurityNative::ReleaseName)> {
  static const MethodInfo* get() {
    static auto* minorStatus = &::il2cpp_utils::GetClassFromName("", "Interop/NetSecurityNative/Status")->this_arg;
    static auto* inputName = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::Interop_::NetSecurityNative*), "ReleaseName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{minorStatus, inputName});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::Interop_::NetSecurityNative::InitiateCredSpNego
// Il2CppName: InitiateCredSpNego
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::Interop_::NetSecurityNative::Status (*)(ByRef<::GlobalNamespace::Interop_::NetSecurityNative::Status>, ::Microsoft::Win32::SafeHandles::SafeGssNameHandle*, ByRef<::Microsoft::Win32::SafeHandles::SafeGssCredHandle*>)>(&GlobalNamespace::Interop_::NetSecurityNative::InitiateCredSpNego)> {
  static const MethodInfo* get() {
    static auto* minorStatus = &::il2cpp_utils::GetClassFromName("", "Interop/NetSecurityNative/Status")->this_arg;
    static auto* desiredName = &::il2cpp_utils::GetClassFromName("Microsoft.Win32.SafeHandles", "SafeGssNameHandle")->byval_arg;
    static auto* outputCredHandle = &::il2cpp_utils::GetClassFromName("Microsoft.Win32.SafeHandles", "SafeGssCredHandle")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::Interop_::NetSecurityNative*), "InitiateCredSpNego", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{minorStatus, desiredName, outputCredHandle});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::Interop_::NetSecurityNative::InitiateCredWithPassword
// Il2CppName: InitiateCredWithPassword
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::Interop_::NetSecurityNative::Status (*)(ByRef<::GlobalNamespace::Interop_::NetSecurityNative::Status>, bool, ::Microsoft::Win32::SafeHandles::SafeGssNameHandle*, ::StringW, int, ByRef<::Microsoft::Win32::SafeHandles::SafeGssCredHandle*>)>(&GlobalNamespace::Interop_::NetSecurityNative::InitiateCredWithPassword)> {
  static const MethodInfo* get() {
    static auto* minorStatus = &::il2cpp_utils::GetClassFromName("", "Interop/NetSecurityNative/Status")->this_arg;
    static auto* isNtlm = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* desiredName = &::il2cpp_utils::GetClassFromName("Microsoft.Win32.SafeHandles", "SafeGssNameHandle")->byval_arg;
    static auto* password = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* passwordLen = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* outputCredHandle = &::il2cpp_utils::GetClassFromName("Microsoft.Win32.SafeHandles", "SafeGssCredHandle")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::Interop_::NetSecurityNative*), "InitiateCredWithPassword", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{minorStatus, isNtlm, desiredName, password, passwordLen, outputCredHandle});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::Interop_::NetSecurityNative::ReleaseCred
// Il2CppName: ReleaseCred
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::Interop_::NetSecurityNative::Status (*)(ByRef<::GlobalNamespace::Interop_::NetSecurityNative::Status>, ByRef<::System::IntPtr>)>(&GlobalNamespace::Interop_::NetSecurityNative::ReleaseCred)> {
  static const MethodInfo* get() {
    static auto* minorStatus = &::il2cpp_utils::GetClassFromName("", "Interop/NetSecurityNative/Status")->this_arg;
    static auto* credHandle = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::Interop_::NetSecurityNative*), "ReleaseCred", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{minorStatus, credHandle});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::Interop_::NetSecurityNative::InitSecContext
// Il2CppName: InitSecContext
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::Interop_::NetSecurityNative::Status (*)(ByRef<::GlobalNamespace::Interop_::NetSecurityNative::Status>, ::Microsoft::Win32::SafeHandles::SafeGssCredHandle*, ByRef<::Microsoft::Win32::SafeHandles::SafeGssContextHandle*>, bool, ::Microsoft::Win32::SafeHandles::SafeGssNameHandle*, uint, ::ArrayW<uint8_t>, int, ByRef<::GlobalNamespace::Interop_::NetSecurityNative::GssBuffer>, ByRef<uint>, ByRef<int>)>(&GlobalNamespace::Interop_::NetSecurityNative::InitSecContext)> {
  static const MethodInfo* get() {
    static auto* minorStatus = &::il2cpp_utils::GetClassFromName("", "Interop/NetSecurityNative/Status")->this_arg;
    static auto* initiatorCredHandle = &::il2cpp_utils::GetClassFromName("Microsoft.Win32.SafeHandles", "SafeGssCredHandle")->byval_arg;
    static auto* contextHandle = &::il2cpp_utils::GetClassFromName("Microsoft.Win32.SafeHandles", "SafeGssContextHandle")->this_arg;
    static auto* isNtlmOnly = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* targetName = &::il2cpp_utils::GetClassFromName("Microsoft.Win32.SafeHandles", "SafeGssNameHandle")->byval_arg;
    static auto* reqFlags = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    static auto* inputBytes = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    static auto* inputLength = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* token = &::il2cpp_utils::GetClassFromName("", "Interop/NetSecurityNative/GssBuffer")->this_arg;
    static auto* retFlags = &::il2cpp_utils::GetClassFromName("System", "UInt32")->this_arg;
    static auto* isNtlmUsed = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::Interop_::NetSecurityNative*), "InitSecContext", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{minorStatus, initiatorCredHandle, contextHandle, isNtlmOnly, targetName, reqFlags, inputBytes, inputLength, token, retFlags, isNtlmUsed});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::Interop_::NetSecurityNative::DeleteSecContext
// Il2CppName: DeleteSecContext
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::Interop_::NetSecurityNative::Status (*)(ByRef<::GlobalNamespace::Interop_::NetSecurityNative::Status>, ByRef<::System::IntPtr>)>(&GlobalNamespace::Interop_::NetSecurityNative::DeleteSecContext)> {
  static const MethodInfo* get() {
    static auto* minorStatus = &::il2cpp_utils::GetClassFromName("", "Interop/NetSecurityNative/Status")->this_arg;
    static auto* contextHandle = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::Interop_::NetSecurityNative*), "DeleteSecContext", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{minorStatus, contextHandle});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::Interop_::NetSecurityNative::Wrap
// Il2CppName: Wrap
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::Interop_::NetSecurityNative::Status (*)(ByRef<::GlobalNamespace::Interop_::NetSecurityNative::Status>, ::Microsoft::Win32::SafeHandles::SafeGssContextHandle*, bool, ::ArrayW<uint8_t>, int, int, ByRef<::GlobalNamespace::Interop_::NetSecurityNative::GssBuffer>)>(&GlobalNamespace::Interop_::NetSecurityNative::Wrap)> {
  static const MethodInfo* get() {
    static auto* minorStatus = &::il2cpp_utils::GetClassFromName("", "Interop/NetSecurityNative/Status")->this_arg;
    static auto* contextHandle = &::il2cpp_utils::GetClassFromName("Microsoft.Win32.SafeHandles", "SafeGssContextHandle")->byval_arg;
    static auto* isEncrypt = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* inputBytes = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    static auto* offset = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* count = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* outBuffer = &::il2cpp_utils::GetClassFromName("", "Interop/NetSecurityNative/GssBuffer")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::Interop_::NetSecurityNative*), "Wrap", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{minorStatus, contextHandle, isEncrypt, inputBytes, offset, count, outBuffer});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::Interop_::NetSecurityNative::Unwrap
// Il2CppName: Unwrap
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::Interop_::NetSecurityNative::Status (*)(ByRef<::GlobalNamespace::Interop_::NetSecurityNative::Status>, ::Microsoft::Win32::SafeHandles::SafeGssContextHandle*, ::ArrayW<uint8_t>, int, int, ByRef<::GlobalNamespace::Interop_::NetSecurityNative::GssBuffer>)>(&GlobalNamespace::Interop_::NetSecurityNative::Unwrap)> {
  static const MethodInfo* get() {
    static auto* minorStatus = &::il2cpp_utils::GetClassFromName("", "Interop/NetSecurityNative/Status")->this_arg;
    static auto* contextHandle = &::il2cpp_utils::GetClassFromName("Microsoft.Win32.SafeHandles", "SafeGssContextHandle")->byval_arg;
    static auto* inputBytes = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    static auto* offset = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* count = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* outBuffer = &::il2cpp_utils::GetClassFromName("", "Interop/NetSecurityNative/GssBuffer")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::Interop_::NetSecurityNative*), "Unwrap", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{minorStatus, contextHandle, inputBytes, offset, count, outBuffer});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::Interop_::NetSecurityNative::WrapBuffer
// Il2CppName: WrapBuffer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::Interop_::NetSecurityNative::Status (*)(ByRef<::GlobalNamespace::Interop_::NetSecurityNative::Status>, ::Microsoft::Win32::SafeHandles::SafeGssContextHandle*, bool, ::ArrayW<uint8_t>, int, int, ByRef<::GlobalNamespace::Interop_::NetSecurityNative::GssBuffer>)>(&GlobalNamespace::Interop_::NetSecurityNative::WrapBuffer)> {
  static const MethodInfo* get() {
    static auto* minorStatus = &::il2cpp_utils::GetClassFromName("", "Interop/NetSecurityNative/Status")->this_arg;
    static auto* contextHandle = &::il2cpp_utils::GetClassFromName("Microsoft.Win32.SafeHandles", "SafeGssContextHandle")->byval_arg;
    static auto* isEncrypt = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* inputBytes = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    static auto* offset = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* count = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* outBuffer = &::il2cpp_utils::GetClassFromName("", "Interop/NetSecurityNative/GssBuffer")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::Interop_::NetSecurityNative*), "WrapBuffer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{minorStatus, contextHandle, isEncrypt, inputBytes, offset, count, outBuffer});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::Interop_::NetSecurityNative::UnwrapBuffer
// Il2CppName: UnwrapBuffer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::Interop_::NetSecurityNative::Status (*)(ByRef<::GlobalNamespace::Interop_::NetSecurityNative::Status>, ::Microsoft::Win32::SafeHandles::SafeGssContextHandle*, ::ArrayW<uint8_t>, int, int, ByRef<::GlobalNamespace::Interop_::NetSecurityNative::GssBuffer>)>(&GlobalNamespace::Interop_::NetSecurityNative::UnwrapBuffer)> {
  static const MethodInfo* get() {
    static auto* minorStatus = &::il2cpp_utils::GetClassFromName("", "Interop/NetSecurityNative/Status")->this_arg;
    static auto* contextHandle = &::il2cpp_utils::GetClassFromName("Microsoft.Win32.SafeHandles", "SafeGssContextHandle")->byval_arg;
    static auto* inputBytes = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    static auto* offset = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* count = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* outBuffer = &::il2cpp_utils::GetClassFromName("", "Interop/NetSecurityNative/GssBuffer")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::Interop_::NetSecurityNative*), "UnwrapBuffer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{minorStatus, contextHandle, inputBytes, offset, count, outBuffer});
  }
};
