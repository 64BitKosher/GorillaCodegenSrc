// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: BubbleGumEvents
#include "GlobalNamespace/BubbleGumEvents.hpp"
// Including type: System.Enum
#include "System/Enum.hpp"
// Completed includes
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::BubbleGumEvents::EdibleState, "", "BubbleGumEvents/EdibleState");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x4
  #pragma pack(push, 1)
  // Autogenerated type: BubbleGumEvents/EdibleState
  // [TokenAttribute] Offset: FFFFFFFF
  struct BubbleGumEvents::EdibleState/*, public ::System::Enum*/ {
    public:
    public:
    // public System.Int32 value__
    // Size: 0x4
    // Offset: 0x0
    int value;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Creating value type constructor for type: EdibleState
    constexpr EdibleState(int value_ = {}) noexcept : value{value_} {}
    // Creating interface conversion operator: operator ::System::Enum
    operator ::System::Enum() noexcept {
      return *reinterpret_cast<::System::Enum*>(this);
    }
    // Creating conversion operator: operator int
    constexpr operator int() const noexcept {
      return value;
    }
    // static field const value: static public BubbleGumEvents/EdibleState A
    static constexpr const int A = 1;
    // Get static field: static public BubbleGumEvents/EdibleState A
    static ::GlobalNamespace::BubbleGumEvents::EdibleState _get_A();
    // Set static field: static public BubbleGumEvents/EdibleState A
    static void _set_A(::GlobalNamespace::BubbleGumEvents::EdibleState value);
    // static field const value: static public BubbleGumEvents/EdibleState B
    static constexpr const int B = 2;
    // Get static field: static public BubbleGumEvents/EdibleState B
    static ::GlobalNamespace::BubbleGumEvents::EdibleState _get_B();
    // Set static field: static public BubbleGumEvents/EdibleState B
    static void _set_B(::GlobalNamespace::BubbleGumEvents::EdibleState value);
    // static field const value: static public BubbleGumEvents/EdibleState C
    static constexpr const int C = 4;
    // Get static field: static public BubbleGumEvents/EdibleState C
    static ::GlobalNamespace::BubbleGumEvents::EdibleState _get_C();
    // Set static field: static public BubbleGumEvents/EdibleState C
    static void _set_C(::GlobalNamespace::BubbleGumEvents::EdibleState value);
    // static field const value: static public BubbleGumEvents/EdibleState D
    static constexpr const int D = 8;
    // Get static field: static public BubbleGumEvents/EdibleState D
    static ::GlobalNamespace::BubbleGumEvents::EdibleState _get_D();
    // Set static field: static public BubbleGumEvents/EdibleState D
    static void _set_D(::GlobalNamespace::BubbleGumEvents::EdibleState value);
    // Get instance field reference: public System.Int32 value__
    [[deprecated("Use field access instead!")]] int& dyn_value__();
  }; // BubbleGumEvents/EdibleState
  #pragma pack(pop)
  static check_size<sizeof(BubbleGumEvents::EdibleState), 0 + sizeof(int)> __GlobalNamespace_BubbleGumEvents_EdibleStateSizeCheck;
  static_assert(sizeof(BubbleGumEvents::EdibleState) == 0x4);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
