// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
// Including type: GorillaLocomotion.Gameplay.IGorillaGrabable
#include "GorillaLocomotion/Gameplay/IGorillaGrabable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: SizeLayerMask
  class SizeLayerMask;
  // Forward declaring type: GorillaGrabber
  class GorillaGrabber;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Transform
  class Transform;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Forward declaring type: SizeLayerChangerGrabable
  class SizeLayerChangerGrabable;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::SizeLayerChangerGrabable);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::SizeLayerChangerGrabable*, "", "SizeLayerChangerGrabable");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x38
  #pragma pack(push, 1)
  // Autogenerated type: SizeLayerChangerGrabable
  // [TokenAttribute] Offset: FFFFFFFF
  class SizeLayerChangerGrabable : public ::UnityEngine::MonoBehaviour/*, public ::GorillaLocomotion::Gameplay::IGorillaGrabable*/ {
    public:
    public:
    // private System.Boolean grabChangesSizeLayer
    // Size: 0x1
    // Offset: 0x20
    bool grabChangesSizeLayer;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean releaseChangesSizeLayer
    // Size: 0x1
    // Offset: 0x21
    bool releaseChangesSizeLayer;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: releaseChangesSizeLayer and: grabbedSizeLayerMask
    char __padding1[0x6] = {};
    // private SizeLayerMask grabbedSizeLayerMask
    // Size: 0x8
    // Offset: 0x28
    ::GlobalNamespace::SizeLayerMask* grabbedSizeLayerMask;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::SizeLayerMask*) == 0x8);
    // private SizeLayerMask releasedSizeLayerMask
    // Size: 0x8
    // Offset: 0x30
    ::GlobalNamespace::SizeLayerMask* releasedSizeLayerMask;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::SizeLayerMask*) == 0x8);
    public:
    // Creating interface conversion operator: operator ::GorillaLocomotion::Gameplay::IGorillaGrabable
    operator ::GorillaLocomotion::Gameplay::IGorillaGrabable() noexcept {
      return *reinterpret_cast<::GorillaLocomotion::Gameplay::IGorillaGrabable*>(this);
    }
    // Get instance field reference: private System.Boolean grabChangesSizeLayer
    [[deprecated("Use field access instead!")]] bool& dyn_grabChangesSizeLayer();
    // Get instance field reference: private System.Boolean releaseChangesSizeLayer
    [[deprecated("Use field access instead!")]] bool& dyn_releaseChangesSizeLayer();
    // Get instance field reference: private SizeLayerMask grabbedSizeLayerMask
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::SizeLayerMask*& dyn_grabbedSizeLayerMask();
    // Get instance field reference: private SizeLayerMask releasedSizeLayerMask
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::SizeLayerMask*& dyn_releasedSizeLayerMask();
    // private UnityEngine.Transform GorillaLocomotion.Gameplay.IGorillaGrabable.OnGrabbed(GorillaGrabber g)
    // Offset: 0x272BA04
    ::UnityEngine::Transform* GorillaLocomotion_Gameplay_IGorillaGrabable_OnGrabbed(::GlobalNamespace::GorillaGrabber* g);
    // private UnityEngine.Transform GorillaLocomotion.Gameplay.IGorillaGrabable.OnGrabReleased(GorillaGrabber g)
    // Offset: 0x272BB8C
    ::UnityEngine::Transform* GorillaLocomotion_Gameplay_IGorillaGrabable_OnGrabReleased(::GlobalNamespace::GorillaGrabber* g);
    // public System.Void .ctor()
    // Offset: 0x272BCDC
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static SizeLayerChangerGrabable* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SizeLayerChangerGrabable::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<SizeLayerChangerGrabable*, creationType>()));
    }
  }; // SizeLayerChangerGrabable
  #pragma pack(pop)
  static check_size<sizeof(SizeLayerChangerGrabable), 48 + sizeof(::GlobalNamespace::SizeLayerMask*)> __GlobalNamespace_SizeLayerChangerGrabableSizeCheck;
  static_assert(sizeof(SizeLayerChangerGrabable) == 0x38);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::SizeLayerChangerGrabable::GorillaLocomotion_Gameplay_IGorillaGrabable_OnGrabbed
// Il2CppName: GorillaLocomotion.Gameplay.IGorillaGrabable.OnGrabbed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Transform* (GlobalNamespace::SizeLayerChangerGrabable::*)(::GlobalNamespace::GorillaGrabber*)>(&GlobalNamespace::SizeLayerChangerGrabable::GorillaLocomotion_Gameplay_IGorillaGrabable_OnGrabbed)> {
  static const MethodInfo* get() {
    static auto* g = &::il2cpp_utils::GetClassFromName("", "GorillaGrabber")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::SizeLayerChangerGrabable*), "GorillaLocomotion.Gameplay.IGorillaGrabable.OnGrabbed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{g});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::SizeLayerChangerGrabable::GorillaLocomotion_Gameplay_IGorillaGrabable_OnGrabReleased
// Il2CppName: GorillaLocomotion.Gameplay.IGorillaGrabable.OnGrabReleased
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Transform* (GlobalNamespace::SizeLayerChangerGrabable::*)(::GlobalNamespace::GorillaGrabber*)>(&GlobalNamespace::SizeLayerChangerGrabable::GorillaLocomotion_Gameplay_IGorillaGrabable_OnGrabReleased)> {
  static const MethodInfo* get() {
    static auto* g = &::il2cpp_utils::GetClassFromName("", "GorillaGrabber")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::SizeLayerChangerGrabable*), "GorillaLocomotion.Gameplay.IGorillaGrabable.OnGrabReleased", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{g});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::SizeLayerChangerGrabable::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
