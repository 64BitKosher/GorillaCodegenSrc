// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: GorillaNetworking.CosmeticsController/CosmeticItem
#include "GorillaNetworking/CosmeticsController.hpp"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: GTZone
  struct GTZone;
  // Forward declaring type: GTSubZone
  struct GTSubZone;
  // Forward declaring type: GTZoneEventType
  struct GTZoneEventType;
  // Forward declaring type: VRRig
  class VRRig;
  // Forward declaring type: GTShopEventType
  struct GTShopEventType;
}
// Forward declaring namespace: GorillaNetworking
namespace GorillaNetworking {
  // Forward declaring type: PlayFabAuthenticator
  class PlayFabAuthenticator;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: Dictionary`2<TKey, TValue>
  template<typename TKey, typename TValue>
  class Dictionary_2;
  // Forward declaring type: IList`1<T>
  template<typename T>
  class IList_1;
}
// Forward declaring namespace: PlayFab
namespace PlayFab {
  // Forward declaring type: PlayFabError
  class PlayFabError;
}
// Forward declaring namespace: PlayFab::ClientModels
namespace PlayFab::ClientModels {
  // Forward declaring type: WriteEventResponse
  class WriteEventResponse;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Forward declaring type: GorillaTelemetry
  class GorillaTelemetry;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::GorillaTelemetry);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::GorillaTelemetry*, "", "GorillaTelemetry");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: GorillaTelemetry
  // [TokenAttribute] Offset: FFFFFFFF
  class GorillaTelemetry : public ::Il2CppObject {
    public:
    // Nested type: ::GlobalNamespace::GorillaTelemetry::k
    class k;
    // Get static field: static private GorillaNetworking.PlayFabAuthenticator gPlayFabAuth
    static ::GorillaNetworking::PlayFabAuthenticator* _get_gPlayFabAuth();
    // Set static field: static private GorillaNetworking.PlayFabAuthenticator gPlayFabAuth
    static void _set_gPlayFabAuth(::GorillaNetworking::PlayFabAuthenticator* value);
    // Get static field: static private readonly System.Collections.Generic.Dictionary`2<System.String,System.Object> gZoneEventArgs
    static ::System::Collections::Generic::Dictionary_2<::StringW, ::Il2CppObject*>* _get_gZoneEventArgs();
    // Set static field: static private readonly System.Collections.Generic.Dictionary`2<System.String,System.Object> gZoneEventArgs
    static void _set_gZoneEventArgs(::System::Collections::Generic::Dictionary_2<::StringW, ::Il2CppObject*>* value);
    // Get static field: static private readonly System.Collections.Generic.Dictionary`2<System.String,System.Object> gShopEventArgs
    static ::System::Collections::Generic::Dictionary_2<::StringW, ::Il2CppObject*>* _get_gShopEventArgs();
    // Set static field: static private readonly System.Collections.Generic.Dictionary`2<System.String,System.Object> gShopEventArgs
    static void _set_gShopEventArgs(::System::Collections::Generic::Dictionary_2<::StringW, ::Il2CppObject*>* value);
    // Get static field: static private GorillaNetworking.CosmeticsController/CosmeticItem[] gSingleItemParam
    static ::ArrayW<::GorillaNetworking::CosmeticsController::CosmeticItem> _get_gSingleItemParam();
    // Set static field: static private GorillaNetworking.CosmeticsController/CosmeticItem[] gSingleItemParam
    static void _set_gSingleItemParam(::ArrayW<::GorillaNetworking::CosmeticsController::CosmeticItem> value);
    // static private System.Boolean IsConnected()
    // Offset: 0x27218E8
    static bool IsConnected();
    // static private System.String PlayFabUserId()
    // Offset: 0x2721A44
    static ::StringW PlayFabUserId();
    // static public System.Void PostZoneEvent(GTZone zone, GTSubZone subZone, GTZoneEventType zoneEvent)
    // Offset: 0x2721AA8
    static void PostZoneEvent(::GlobalNamespace::GTZone zone, ::GlobalNamespace::GTSubZone subZone, ::GlobalNamespace::GTZoneEventType zoneEvent);
    // static private System.Void PostZoneEvent_OnError(PlayFab.PlayFabError error)
    // Offset: 0x2721DB8
    static void PostZoneEvent_OnError(::PlayFab::PlayFabError* error);
    // static private System.Void PostZoneEvent_OnResult(PlayFab.ClientModels.WriteEventResponse result)
    // Offset: 0x2721DBC
    static void PostZoneEvent_OnResult(::PlayFab::ClientModels::WriteEventResponse* result);
    // static public System.Void PostShopEvent(VRRig playerRig, GTShopEventType shopEvent, GorillaNetworking.CosmeticsController/CosmeticItem item)
    // Offset: 0x2721DC0
    static void PostShopEvent(::GlobalNamespace::VRRig* playerRig, ::GlobalNamespace::GTShopEventType shopEvent, ::GorillaNetworking::CosmeticsController::CosmeticItem item);
    // static private System.String[] FetchItemArgs(System.Collections.Generic.IList`1<GorillaNetworking.CosmeticsController/CosmeticItem> items)
    // Offset: 0x272216C
    static ::ArrayW<::StringW> FetchItemArgs(::System::Collections::Generic::IList_1<::GorillaNetworking::CosmeticsController::CosmeticItem>* items);
    // static public System.Void PostShopEvent(VRRig playerRig, GTShopEventType shopEvent, System.Collections.Generic.IList`1<GorillaNetworking.CosmeticsController/CosmeticItem> items)
    // Offset: 0x2721ED4
    static void PostShopEvent(::GlobalNamespace::VRRig* playerRig, ::GlobalNamespace::GTShopEventType shopEvent, ::System::Collections::Generic::IList_1<::GorillaNetworking::CosmeticsController::CosmeticItem>* items);
    // static private System.Void PostShopEvent_OnResult(PlayFab.ClientModels.WriteEventResponse result)
    // Offset: 0x2722494
    static void PostShopEvent_OnResult(::PlayFab::ClientModels::WriteEventResponse* result);
    // static private System.Void PostShopEvent_OnError(PlayFab.PlayFabError error)
    // Offset: 0x2722498
    static void PostShopEvent_OnError(::PlayFab::PlayFabError* error);
    // static private System.Void .cctor()
    // Offset: 0x272249C
    static void _cctor();
  }; // GorillaTelemetry
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::GorillaTelemetry::IsConnected
// Il2CppName: IsConnected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&GlobalNamespace::GorillaTelemetry::IsConnected)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::GorillaTelemetry*), "IsConnected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::GorillaTelemetry::PlayFabUserId
// Il2CppName: PlayFabUserId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)()>(&GlobalNamespace::GorillaTelemetry::PlayFabUserId)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::GorillaTelemetry*), "PlayFabUserId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::GorillaTelemetry::PostZoneEvent
// Il2CppName: PostZoneEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::GlobalNamespace::GTZone, ::GlobalNamespace::GTSubZone, ::GlobalNamespace::GTZoneEventType)>(&GlobalNamespace::GorillaTelemetry::PostZoneEvent)> {
  static const MethodInfo* get() {
    static auto* zone = &::il2cpp_utils::GetClassFromName("", "GTZone")->byval_arg;
    static auto* subZone = &::il2cpp_utils::GetClassFromName("", "GTSubZone")->byval_arg;
    static auto* zoneEvent = &::il2cpp_utils::GetClassFromName("", "GTZoneEventType")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::GorillaTelemetry*), "PostZoneEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{zone, subZone, zoneEvent});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::GorillaTelemetry::PostZoneEvent_OnError
// Il2CppName: PostZoneEvent_OnError
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::PlayFab::PlayFabError*)>(&GlobalNamespace::GorillaTelemetry::PostZoneEvent_OnError)> {
  static const MethodInfo* get() {
    static auto* error = &::il2cpp_utils::GetClassFromName("PlayFab", "PlayFabError")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::GorillaTelemetry*), "PostZoneEvent_OnError", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{error});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::GorillaTelemetry::PostZoneEvent_OnResult
// Il2CppName: PostZoneEvent_OnResult
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::PlayFab::ClientModels::WriteEventResponse*)>(&GlobalNamespace::GorillaTelemetry::PostZoneEvent_OnResult)> {
  static const MethodInfo* get() {
    static auto* result = &::il2cpp_utils::GetClassFromName("PlayFab.ClientModels", "WriteEventResponse")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::GorillaTelemetry*), "PostZoneEvent_OnResult", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{result});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::GorillaTelemetry::PostShopEvent
// Il2CppName: PostShopEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::GlobalNamespace::VRRig*, ::GlobalNamespace::GTShopEventType, ::GorillaNetworking::CosmeticsController::CosmeticItem)>(&GlobalNamespace::GorillaTelemetry::PostShopEvent)> {
  static const MethodInfo* get() {
    static auto* playerRig = &::il2cpp_utils::GetClassFromName("", "VRRig")->byval_arg;
    static auto* shopEvent = &::il2cpp_utils::GetClassFromName("", "GTShopEventType")->byval_arg;
    static auto* item = &::il2cpp_utils::GetClassFromName("GorillaNetworking", "CosmeticsController/CosmeticItem")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::GorillaTelemetry*), "PostShopEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{playerRig, shopEvent, item});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::GorillaTelemetry::FetchItemArgs
// Il2CppName: FetchItemArgs
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::StringW> (*)(::System::Collections::Generic::IList_1<::GorillaNetworking::CosmeticsController::CosmeticItem>*)>(&GlobalNamespace::GorillaTelemetry::FetchItemArgs)> {
  static const MethodInfo* get() {
    static auto* items = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "IList`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("GorillaNetworking", "CosmeticsController/CosmeticItem")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::GorillaTelemetry*), "FetchItemArgs", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{items});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::GorillaTelemetry::PostShopEvent
// Il2CppName: PostShopEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::GlobalNamespace::VRRig*, ::GlobalNamespace::GTShopEventType, ::System::Collections::Generic::IList_1<::GorillaNetworking::CosmeticsController::CosmeticItem>*)>(&GlobalNamespace::GorillaTelemetry::PostShopEvent)> {
  static const MethodInfo* get() {
    static auto* playerRig = &::il2cpp_utils::GetClassFromName("", "VRRig")->byval_arg;
    static auto* shopEvent = &::il2cpp_utils::GetClassFromName("", "GTShopEventType")->byval_arg;
    static auto* items = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "IList`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("GorillaNetworking", "CosmeticsController/CosmeticItem")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::GorillaTelemetry*), "PostShopEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{playerRig, shopEvent, items});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::GorillaTelemetry::PostShopEvent_OnResult
// Il2CppName: PostShopEvent_OnResult
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::PlayFab::ClientModels::WriteEventResponse*)>(&GlobalNamespace::GorillaTelemetry::PostShopEvent_OnResult)> {
  static const MethodInfo* get() {
    static auto* result = &::il2cpp_utils::GetClassFromName("PlayFab.ClientModels", "WriteEventResponse")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::GorillaTelemetry*), "PostShopEvent_OnResult", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{result});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::GorillaTelemetry::PostShopEvent_OnError
// Il2CppName: PostShopEvent_OnError
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::PlayFab::PlayFabError*)>(&GlobalNamespace::GorillaTelemetry::PostShopEvent_OnError)> {
  static const MethodInfo* get() {
    static auto* error = &::il2cpp_utils::GetClassFromName("PlayFab", "PlayFabError")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::GorillaTelemetry*), "PostShopEvent_OnError", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{error});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::GorillaTelemetry::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&GlobalNamespace::GorillaTelemetry::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::GorillaTelemetry*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
