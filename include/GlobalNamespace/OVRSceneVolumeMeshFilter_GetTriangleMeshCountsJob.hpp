// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: OVRSceneVolumeMeshFilter
#include "GlobalNamespace/OVRSceneVolumeMeshFilter.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Including type: Unity.Jobs.IJob
#include "Unity/Jobs/IJob.hpp"
// Including type: OVRSpace
#include "GlobalNamespace/OVRSpace.hpp"
// Including type: Unity.Collections.NativeArray`1
#include "Unity/Collections/NativeArray_1.hpp"
// Completed includes
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::OVRSceneVolumeMeshFilter::GetTriangleMeshCountsJob, "", "OVRSceneVolumeMeshFilter/GetTriangleMeshCountsJob");
// Type namespace: 
namespace GlobalNamespace {
  // WARNING Size may be invalid!
  // WARNING Layout: Sequential may not be correctly taken into account!
  // Autogenerated type: OVRSceneVolumeMeshFilter/GetTriangleMeshCountsJob
  // [TokenAttribute] Offset: FFFFFFFF
  struct OVRSceneVolumeMeshFilter::GetTriangleMeshCountsJob/*, public ::System::ValueType, public ::Unity::Jobs::IJob*/ {
    public:
    public:
    // public OVRSpace Space
    // Size: 0x8
    // Offset: 0x0
    ::GlobalNamespace::OVRSpace Space;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::OVRSpace) == 0x8);
    // public Unity.Collections.NativeArray`1<System.Int32> Results
    // Size: 0xFFFFFFFF
    // Offset: 0x8
    ::Unity::Collections::NativeArray_1<int> Results;
    public:
    // Creating value type constructor for type: GetTriangleMeshCountsJob
    constexpr GetTriangleMeshCountsJob(::GlobalNamespace::OVRSpace Space_ = {}, ::Unity::Collections::NativeArray_1<int> Results_ = {}) noexcept : Space{Space_}, Results{Results_} {}
    // Creating interface conversion operator: operator ::System::ValueType
    operator ::System::ValueType() noexcept {
      return *reinterpret_cast<::System::ValueType*>(this);
    }
    // Creating interface conversion operator: operator ::Unity::Jobs::IJob
    operator ::Unity::Jobs::IJob() noexcept {
      return *reinterpret_cast<::Unity::Jobs::IJob*>(this);
    }
    // Get instance field reference: public OVRSpace Space
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRSpace& dyn_Space();
    // Get instance field reference: public Unity.Collections.NativeArray`1<System.Int32> Results
    [[deprecated("Use field access instead!")]] ::Unity::Collections::NativeArray_1<int>& dyn_Results();
    // public System.Void Execute()
    // Offset: 0x4927708
    void Execute();
  }; // OVRSceneVolumeMeshFilter/GetTriangleMeshCountsJob
  // WARNING Not writing size check since size may be invalid!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::OVRSceneVolumeMeshFilter::GetTriangleMeshCountsJob::Execute
// Il2CppName: Execute
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::OVRSceneVolumeMeshFilter::GetTriangleMeshCountsJob::*)()>(&GlobalNamespace::OVRSceneVolumeMeshFilter::GetTriangleMeshCountsJob::Execute)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::OVRSceneVolumeMeshFilter::GetTriangleMeshCountsJob), "Execute", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
