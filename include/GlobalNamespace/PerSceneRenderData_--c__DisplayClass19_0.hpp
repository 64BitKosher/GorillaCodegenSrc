// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: PerSceneRenderData
#include "GlobalNamespace/PerSceneRenderData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: ResourceRequest
  class ResourceRequest;
  // Forward declaring type: AsyncOperation
  class AsyncOperation;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::PerSceneRenderData::$$c__DisplayClass19_0);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::PerSceneRenderData::$$c__DisplayClass19_0*, "", "PerSceneRenderData/<>c__DisplayClass19_0");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x28
  #pragma pack(push, 1)
  // Autogenerated type: PerSceneRenderData/<>c__DisplayClass19_0
  // [TokenAttribute] Offset: FFFFFFFF
  // [CompilerGeneratedAttribute] Offset: FFFFFFFF
  class PerSceneRenderData::$$c__DisplayClass19_0 : public ::Il2CppObject {
    public:
    public:
    // public PerSceneRenderData <>4__this
    // Size: 0x8
    // Offset: 0x10
    ::GlobalNamespace::PerSceneRenderData* $$4__this;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::PerSceneRenderData*) == 0x8);
    // public System.String timeOfDay
    // Size: 0x8
    // Offset: 0x18
    ::StringW timeOfDay;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public UnityEngine.ResourceRequest request
    // Size: 0x8
    // Offset: 0x20
    ::UnityEngine::ResourceRequest* request;
    // Field size check
    static_assert(sizeof(::UnityEngine::ResourceRequest*) == 0x8);
    public:
    // Get instance field reference: public PerSceneRenderData <>4__this
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::PerSceneRenderData*& dyn_$$4__this();
    // Get instance field reference: public System.String timeOfDay
    [[deprecated("Use field access instead!")]] ::StringW& dyn_timeOfDay();
    // Get instance field reference: public UnityEngine.ResourceRequest request
    [[deprecated("Use field access instead!")]] ::UnityEngine::ResourceRequest*& dyn_request();
    // public System.Void .ctor()
    // Offset: 0x288FA34
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static PerSceneRenderData::$$c__DisplayClass19_0* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PerSceneRenderData::$$c__DisplayClass19_0::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<PerSceneRenderData::$$c__DisplayClass19_0*, creationType>()));
    }
    // System.Void <GetLightmap>b__0(UnityEngine.AsyncOperation ao)
    // Offset: 0x288FE30
    void $GetLightmap$b__0(::UnityEngine::AsyncOperation* ao);
  }; // PerSceneRenderData/<>c__DisplayClass19_0
  #pragma pack(pop)
  static check_size<sizeof(PerSceneRenderData::$$c__DisplayClass19_0), 32 + sizeof(::UnityEngine::ResourceRequest*)> __GlobalNamespace_PerSceneRenderData_$$c__DisplayClass19_0SizeCheck;
  static_assert(sizeof(PerSceneRenderData::$$c__DisplayClass19_0) == 0x28);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::PerSceneRenderData::$$c__DisplayClass19_0::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: GlobalNamespace::PerSceneRenderData::$$c__DisplayClass19_0::$GetLightmap$b__0
// Il2CppName: <GetLightmap>b__0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::PerSceneRenderData::$$c__DisplayClass19_0::*)(::UnityEngine::AsyncOperation*)>(&GlobalNamespace::PerSceneRenderData::$$c__DisplayClass19_0::$GetLightmap$b__0)> {
  static const MethodInfo* get() {
    static auto* ao = &::il2cpp_utils::GetClassFromName("UnityEngine", "AsyncOperation")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::PerSceneRenderData::$$c__DisplayClass19_0*), "<GetLightmap>b__0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ao});
  }
};
