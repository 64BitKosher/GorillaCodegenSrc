// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: SubLineGrabPoint
#include "GlobalNamespace/SubLineGrabPoint.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: CatmullRomSpline
  class CatmullRomSpline;
  // Forward declaring type: SlotTransformOverride
  class SlotTransformOverride;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Transform
  class Transform;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Forward declaring type: SubSplineGrabPoint
  class SubSplineGrabPoint;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::SubSplineGrabPoint);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::SubSplineGrabPoint*, "", "SubSplineGrabPoint");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x168
  #pragma pack(push, 1)
  // Autogenerated type: SubSplineGrabPoint
  // [TokenAttribute] Offset: FFFFFFFF
  class SubSplineGrabPoint : public ::GlobalNamespace::SubLineGrabPoint {
    public:
    public:
    // public CatmullRomSpline spline
    // Size: 0x8
    // Offset: 0x150
    ::GlobalNamespace::CatmullRomSpline* spline;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::CatmullRomSpline*) == 0x8);
    // public System.Collections.Generic.List`1<UnityEngine.Vector3> controlPointsRelativeToGrabOrigin
    // Size: 0x8
    // Offset: 0x158
    ::System::Collections::Generic::List_1<::UnityEngine::Vector3>* controlPointsRelativeToGrabOrigin;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::UnityEngine::Vector3>*) == 0x8);
    // public System.Collections.Generic.List`1<UnityEngine.Matrix4x4> controlPointsTransformsRelativeToGrabOrigin
    // Size: 0x8
    // Offset: 0x160
    ::System::Collections::Generic::List_1<::UnityEngine::Matrix4x4>* controlPointsTransformsRelativeToGrabOrigin;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::UnityEngine::Matrix4x4>*) == 0x8);
    public:
    // Get instance field reference: public CatmullRomSpline spline
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::CatmullRomSpline*& dyn_spline();
    // Get instance field reference: public System.Collections.Generic.List`1<UnityEngine.Vector3> controlPointsRelativeToGrabOrigin
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::Vector3>*& dyn_controlPointsRelativeToGrabOrigin();
    // Get instance field reference: public System.Collections.Generic.List`1<UnityEngine.Matrix4x4> controlPointsTransformsRelativeToGrabOrigin
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::Matrix4x4>*& dyn_controlPointsTransformsRelativeToGrabOrigin();
    // public override UnityEngine.Matrix4x4 GetTransformation_GripPointLocalToAdvOriginLocal(AdvancedItemState/PreData advancedItemState, SlotTransformOverride slotTransformOverride)
    // Offset: 0x26C33D0
    // Implemented from: SubLineGrabPoint
    // Base method: UnityEngine.Matrix4x4 SubLineGrabPoint::GetTransformation_GripPointLocalToAdvOriginLocal(AdvancedItemState/PreData advancedItemState, SlotTransformOverride slotTransformOverride)
    ::UnityEngine::Matrix4x4 GetTransformation_GripPointLocalToAdvOriginLocal(::GlobalNamespace::AdvancedItemState::PreData* advancedItemState, ::GlobalNamespace::SlotTransformOverride* slotTransformOverride);
    // public override System.Void InitializePoints(UnityEngine.Transform anchor, UnityEngine.Transform grabPointAnchor, UnityEngine.Transform advancedGrabPointOrigin)
    // Offset: 0x26C3414
    // Implemented from: SubLineGrabPoint
    // Base method: System.Void SubLineGrabPoint::InitializePoints(UnityEngine.Transform anchor, UnityEngine.Transform grabPointAnchor, UnityEngine.Transform advancedGrabPointOrigin)
    void InitializePoints(::UnityEngine::Transform* anchor, ::UnityEngine::Transform* grabPointAnchor, ::UnityEngine::Transform* advancedGrabPointOrigin);
    // public override AdvancedItemState/PreData GetPreData(UnityEngine.Transform objectTransform, UnityEngine.Transform handTransform, UnityEngine.Transform targetDock, SlotTransformOverride slotTransformOverride)
    // Offset: 0x26C36C4
    // Implemented from: SubLineGrabPoint
    // Base method: AdvancedItemState/PreData SubLineGrabPoint::GetPreData(UnityEngine.Transform objectTransform, UnityEngine.Transform handTransform, UnityEngine.Transform targetDock, SlotTransformOverride slotTransformOverride)
    ::GlobalNamespace::AdvancedItemState::PreData* GetPreData(::UnityEngine::Transform* objectTransform, ::UnityEngine::Transform* handTransform, ::UnityEngine::Transform* targetDock, ::GlobalNamespace::SlotTransformOverride* slotTransformOverride);
    // public override System.Single EvaluateScore(UnityEngine.Transform objectTransform, UnityEngine.Transform handTransform, UnityEngine.Transform targetDock)
    // Offset: 0x26C37A8
    // Implemented from: SubLineGrabPoint
    // Base method: System.Single SubLineGrabPoint::EvaluateScore(UnityEngine.Transform objectTransform, UnityEngine.Transform handTransform, UnityEngine.Transform targetDock)
    float EvaluateScore(::UnityEngine::Transform* objectTransform, ::UnityEngine::Transform* handTransform, ::UnityEngine::Transform* targetDock);
    // public System.Void .ctor()
    // Offset: 0x26C384C
    // Implemented from: SubLineGrabPoint
    // Base method: System.Void SubLineGrabPoint::.ctor()
    // Base method: System.Void SubGrabPoint::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static SubSplineGrabPoint* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SubSplineGrabPoint::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<SubSplineGrabPoint*, creationType>()));
    }
  }; // SubSplineGrabPoint
  #pragma pack(pop)
  static check_size<sizeof(SubSplineGrabPoint), 352 + sizeof(::System::Collections::Generic::List_1<::UnityEngine::Matrix4x4>*)> __GlobalNamespace_SubSplineGrabPointSizeCheck;
  static_assert(sizeof(SubSplineGrabPoint) == 0x168);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::SubSplineGrabPoint::GetTransformation_GripPointLocalToAdvOriginLocal
// Il2CppName: GetTransformation_GripPointLocalToAdvOriginLocal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Matrix4x4 (GlobalNamespace::SubSplineGrabPoint::*)(::GlobalNamespace::AdvancedItemState::PreData*, ::GlobalNamespace::SlotTransformOverride*)>(&GlobalNamespace::SubSplineGrabPoint::GetTransformation_GripPointLocalToAdvOriginLocal)> {
  static const MethodInfo* get() {
    static auto* advancedItemState = &::il2cpp_utils::GetClassFromName("", "AdvancedItemState/PreData")->byval_arg;
    static auto* slotTransformOverride = &::il2cpp_utils::GetClassFromName("", "SlotTransformOverride")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::SubSplineGrabPoint*), "GetTransformation_GripPointLocalToAdvOriginLocal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{advancedItemState, slotTransformOverride});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::SubSplineGrabPoint::InitializePoints
// Il2CppName: InitializePoints
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::SubSplineGrabPoint::*)(::UnityEngine::Transform*, ::UnityEngine::Transform*, ::UnityEngine::Transform*)>(&GlobalNamespace::SubSplineGrabPoint::InitializePoints)> {
  static const MethodInfo* get() {
    static auto* anchor = &::il2cpp_utils::GetClassFromName("UnityEngine", "Transform")->byval_arg;
    static auto* grabPointAnchor = &::il2cpp_utils::GetClassFromName("UnityEngine", "Transform")->byval_arg;
    static auto* advancedGrabPointOrigin = &::il2cpp_utils::GetClassFromName("UnityEngine", "Transform")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::SubSplineGrabPoint*), "InitializePoints", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{anchor, grabPointAnchor, advancedGrabPointOrigin});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::SubSplineGrabPoint::GetPreData
// Il2CppName: GetPreData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::AdvancedItemState::PreData* (GlobalNamespace::SubSplineGrabPoint::*)(::UnityEngine::Transform*, ::UnityEngine::Transform*, ::UnityEngine::Transform*, ::GlobalNamespace::SlotTransformOverride*)>(&GlobalNamespace::SubSplineGrabPoint::GetPreData)> {
  static const MethodInfo* get() {
    static auto* objectTransform = &::il2cpp_utils::GetClassFromName("UnityEngine", "Transform")->byval_arg;
    static auto* handTransform = &::il2cpp_utils::GetClassFromName("UnityEngine", "Transform")->byval_arg;
    static auto* targetDock = &::il2cpp_utils::GetClassFromName("UnityEngine", "Transform")->byval_arg;
    static auto* slotTransformOverride = &::il2cpp_utils::GetClassFromName("", "SlotTransformOverride")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::SubSplineGrabPoint*), "GetPreData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{objectTransform, handTransform, targetDock, slotTransformOverride});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::SubSplineGrabPoint::EvaluateScore
// Il2CppName: EvaluateScore
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (GlobalNamespace::SubSplineGrabPoint::*)(::UnityEngine::Transform*, ::UnityEngine::Transform*, ::UnityEngine::Transform*)>(&GlobalNamespace::SubSplineGrabPoint::EvaluateScore)> {
  static const MethodInfo* get() {
    static auto* objectTransform = &::il2cpp_utils::GetClassFromName("UnityEngine", "Transform")->byval_arg;
    static auto* handTransform = &::il2cpp_utils::GetClassFromName("UnityEngine", "Transform")->byval_arg;
    static auto* targetDock = &::il2cpp_utils::GetClassFromName("UnityEngine", "Transform")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::SubSplineGrabPoint*), "EvaluateScore", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{objectTransform, handTransform, targetDock});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::SubSplineGrabPoint::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
