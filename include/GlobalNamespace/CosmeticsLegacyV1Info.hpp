// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Int32
#include "System/Int32.hpp"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: Dictionary`2<TKey, TValue>
  template<typename TKey, typename TValue>
  class Dictionary_2;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Forward declaring type: CosmeticsLegacyV1Info
  class CosmeticsLegacyV1Info;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::CosmeticsLegacyV1Info);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::CosmeticsLegacyV1Info*, "", "CosmeticsLegacyV1Info");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: CosmeticsLegacyV1Info
  // [TokenAttribute] Offset: FFFFFFFF
  class CosmeticsLegacyV1Info : public ::Il2CppObject {
    public:
    // static field const value: static public System.Int32 k_bodyDockPositions_allObjects_length
    static constexpr const int k_bodyDockPositions_allObjects_length = 224;
    // Get static field: static public System.Int32 k_bodyDockPositions_allObjects_length
    static int _get_k_bodyDockPositions_allObjects_length();
    // Set static field: static public System.Int32 k_bodyDockPositions_allObjects_length
    static void _set_k_bodyDockPositions_allObjects_length(int value);
    // Get static field: static private readonly System.Collections.Generic.Dictionary`2<System.String,System.String> k_special
    static ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* _get_k_special();
    // Set static field: static private readonly System.Collections.Generic.Dictionary`2<System.String,System.String> k_special
    static void _set_k_special(::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* value);
    // Get static field: static private readonly System.Collections.Generic.Dictionary`2<System.String,System.String> k_packs
    static ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* _get_k_packs();
    // Set static field: static private readonly System.Collections.Generic.Dictionary`2<System.String,System.String> k_packs
    static void _set_k_packs(::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* value);
    // Get static field: static private readonly System.Collections.Generic.Dictionary`2<System.String,System.String> k_oldPacks
    static ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* _get_k_oldPacks();
    // Set static field: static private readonly System.Collections.Generic.Dictionary`2<System.String,System.String> k_oldPacks
    static void _set_k_oldPacks(::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* value);
    // Get static field: static private readonly System.Collections.Generic.Dictionary`2<System.String,System.String> k_unused
    static ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* _get_k_unused();
    // Set static field: static private readonly System.Collections.Generic.Dictionary`2<System.String,System.String> k_unused
    static void _set_k_unused(::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* value);
    // Get static field: static private readonly System.Collections.Generic.Dictionary`2<System.String,System.String> k_v1DisplayNames_to_playFabIds
    static ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* _get_k_v1DisplayNames_to_playFabIds();
    // Set static field: static private readonly System.Collections.Generic.Dictionary`2<System.String,System.String> k_v1DisplayNames_to_playFabIds
    static void _set_k_v1DisplayNames_to_playFabIds(::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* value);
    // Get static field: static private readonly System.Collections.Generic.Dictionary`2<System.String,System.Int32[]> _k_playFabId_to_bodyDockPositions_allObjects_indexes
    static ::System::Collections::Generic::Dictionary_2<::StringW, ::ArrayW<int>>* _get__k_playFabId_to_bodyDockPositions_allObjects_indexes();
    // Set static field: static private readonly System.Collections.Generic.Dictionary`2<System.String,System.Int32[]> _k_playFabId_to_bodyDockPositions_allObjects_indexes
    static void _set__k_playFabId_to_bodyDockPositions_allObjects_indexes(::System::Collections::Generic::Dictionary_2<::StringW, ::ArrayW<int>>* value);
    // static public System.Boolean TryGetPlayFabId(System.String unityItemId, System.String unityDisplayName, System.String unityOverrideDisplayName, out System.String playFabId)
    // Offset: 0x278CC7C
    static bool TryGetPlayFabId(::StringW unityItemId, ::StringW unityDisplayName, ::StringW unityOverrideDisplayName, ByRef<::StringW> playFabId);
    // static public System.Boolean TryGetPlayFabId(System.String unityItemId, out System.String playFabId, System.Boolean logErrors)
    // Offset: 0x278D100
    static bool TryGetPlayFabId(::StringW unityItemId, ByRef<::StringW> playFabId, bool logErrors);
    // static public System.Boolean TryGetBodyDockAllObjectsIndexes(System.String playFabId, out System.Int32[] bdAllIndexes)
    // Offset: 0x278D284
    static bool TryGetBodyDockAllObjectsIndexes(::StringW playFabId, ByRef<::ArrayW<int>> bdAllIndexes);
    // static public System.String AddMissingDot(System.String unityItemId)
    // Offset: 0x278D01C
    static ::StringW AddMissingDot(::StringW unityItemId);
    // static private System.Void .cctor()
    // Offset: 0x278D320
    static void _cctor();
  }; // CosmeticsLegacyV1Info
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::CosmeticsLegacyV1Info::TryGetPlayFabId
// Il2CppName: TryGetPlayFabId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::StringW, ::StringW, ::StringW, ByRef<::StringW>)>(&GlobalNamespace::CosmeticsLegacyV1Info::TryGetPlayFabId)> {
  static const MethodInfo* get() {
    static auto* unityItemId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* unityDisplayName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* unityOverrideDisplayName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* playFabId = &::il2cpp_utils::GetClassFromName("System", "String")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::CosmeticsLegacyV1Info*), "TryGetPlayFabId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{unityItemId, unityDisplayName, unityOverrideDisplayName, playFabId});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::CosmeticsLegacyV1Info::TryGetPlayFabId
// Il2CppName: TryGetPlayFabId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::StringW, ByRef<::StringW>, bool)>(&GlobalNamespace::CosmeticsLegacyV1Info::TryGetPlayFabId)> {
  static const MethodInfo* get() {
    static auto* unityItemId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* playFabId = &::il2cpp_utils::GetClassFromName("System", "String")->this_arg;
    static auto* logErrors = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::CosmeticsLegacyV1Info*), "TryGetPlayFabId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{unityItemId, playFabId, logErrors});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::CosmeticsLegacyV1Info::TryGetBodyDockAllObjectsIndexes
// Il2CppName: TryGetBodyDockAllObjectsIndexes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::StringW, ByRef<::ArrayW<int>>)>(&GlobalNamespace::CosmeticsLegacyV1Info::TryGetBodyDockAllObjectsIndexes)> {
  static const MethodInfo* get() {
    static auto* playFabId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* bdAllIndexes = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Int32"), 1)->this_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::CosmeticsLegacyV1Info*), "TryGetBodyDockAllObjectsIndexes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{playFabId, bdAllIndexes});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::CosmeticsLegacyV1Info::AddMissingDot
// Il2CppName: AddMissingDot
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::StringW)>(&GlobalNamespace::CosmeticsLegacyV1Info::AddMissingDot)> {
  static const MethodInfo* get() {
    static auto* unityItemId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::CosmeticsLegacyV1Info*), "AddMissingDot", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{unityItemId});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::CosmeticsLegacyV1Info::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&GlobalNamespace::CosmeticsLegacyV1Info::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::CosmeticsLegacyV1Info*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
