// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: CosmeticWardrobe
#include "GlobalNamespace/CosmeticWardrobe.hpp"
// Including type: GorillaNetworking.CosmeticsController/CosmeticCategory
#include "GorillaNetworking/CosmeticsController.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: CosmeticCategoryButton
  class CosmeticCategoryButton;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::CosmeticWardrobe::CosmeticWardrobeCategory);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::CosmeticWardrobe::CosmeticWardrobeCategory*, "", "CosmeticWardrobe/CosmeticWardrobeCategory");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x121
  #pragma pack(push, 1)
  // Autogenerated type: CosmeticWardrobe/CosmeticWardrobeCategory
  // [TokenAttribute] Offset: FFFFFFFF
  class CosmeticWardrobe::CosmeticWardrobeCategory : public ::Il2CppObject {
    public:
    public:
    // public CosmeticCategoryButton button
    // Size: 0x8
    // Offset: 0x10
    ::GlobalNamespace::CosmeticCategoryButton* button;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::CosmeticCategoryButton*) == 0x8);
    // public GorillaNetworking.CosmeticsController/CosmeticCategory category
    // Size: 0x4
    // Offset: 0x18
    ::GorillaNetworking::CosmeticsController::CosmeticCategory category;
    // Field size check
    static_assert(sizeof(::GorillaNetworking::CosmeticsController::CosmeticCategory) == 0x4);
    // public GorillaNetworking.CosmeticsController/CosmeticSlots slot1
    // Size: 0x4
    // Offset: 0x1C
    ::GorillaNetworking::CosmeticsController::CosmeticSlots slot1;
    // Field size check
    static_assert(sizeof(::GorillaNetworking::CosmeticsController::CosmeticSlots) == 0x4);
    // public GorillaNetworking.CosmeticsController/CosmeticSlots slot2
    // Size: 0x4
    // Offset: 0x20
    ::GorillaNetworking::CosmeticsController::CosmeticSlots slot2;
    // Field size check
    static_assert(sizeof(::GorillaNetworking::CosmeticsController::CosmeticSlots) == 0x4);
    // Padding between fields: slot2 and: slot1RemovedItem
    char __padding3[0x4] = {};
    // public GorillaNetworking.CosmeticsController/CosmeticItem slot1RemovedItem
    // Size: 0x79
    // Offset: 0x28
    ::GorillaNetworking::CosmeticsController::CosmeticItem slot1RemovedItem;
    // Field size check
    static_assert(sizeof(::GorillaNetworking::CosmeticsController::CosmeticItem) == 0x79);
    // Padding between fields: slot1RemovedItem and: slot2RemovedItem
    char __padding4[0x7] = {};
    // public GorillaNetworking.CosmeticsController/CosmeticItem slot2RemovedItem
    // Size: 0x79
    // Offset: 0xA8
    ::GorillaNetworking::CosmeticsController::CosmeticItem slot2RemovedItem;
    // Field size check
    static_assert(sizeof(::GorillaNetworking::CosmeticsController::CosmeticItem) == 0x79);
    public:
    // Get instance field reference: public CosmeticCategoryButton button
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::CosmeticCategoryButton*& dyn_button();
    // Get instance field reference: public GorillaNetworking.CosmeticsController/CosmeticCategory category
    [[deprecated("Use field access instead!")]] ::GorillaNetworking::CosmeticsController::CosmeticCategory& dyn_category();
    // Get instance field reference: public GorillaNetworking.CosmeticsController/CosmeticSlots slot1
    [[deprecated("Use field access instead!")]] ::GorillaNetworking::CosmeticsController::CosmeticSlots& dyn_slot1();
    // Get instance field reference: public GorillaNetworking.CosmeticsController/CosmeticSlots slot2
    [[deprecated("Use field access instead!")]] ::GorillaNetworking::CosmeticsController::CosmeticSlots& dyn_slot2();
    // Get instance field reference: public GorillaNetworking.CosmeticsController/CosmeticItem slot1RemovedItem
    [[deprecated("Use field access instead!")]] ::GorillaNetworking::CosmeticsController::CosmeticItem& dyn_slot1RemovedItem();
    // Get instance field reference: public GorillaNetworking.CosmeticsController/CosmeticItem slot2RemovedItem
    [[deprecated("Use field access instead!")]] ::GorillaNetworking::CosmeticsController::CosmeticItem& dyn_slot2RemovedItem();
    // public System.Void .ctor()
    // Offset: 0x26D2A14
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static CosmeticWardrobe::CosmeticWardrobeCategory* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CosmeticWardrobe::CosmeticWardrobeCategory::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<CosmeticWardrobe::CosmeticWardrobeCategory*, creationType>()));
    }
  }; // CosmeticWardrobe/CosmeticWardrobeCategory
  #pragma pack(pop)
  static check_size<sizeof(CosmeticWardrobe::CosmeticWardrobeCategory), 168 + sizeof(::GorillaNetworking::CosmeticsController::CosmeticItem)> __GlobalNamespace_CosmeticWardrobe_CosmeticWardrobeCategorySizeCheck;
  static_assert(sizeof(CosmeticWardrobe::CosmeticWardrobeCategory) == 0x121);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::CosmeticWardrobe::CosmeticWardrobeCategory::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
