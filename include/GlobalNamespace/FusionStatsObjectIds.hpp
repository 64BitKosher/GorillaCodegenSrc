// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Fusion.Behaviour
#include "Fusion/Behaviour.hpp"
// Including type: Fusion.StatsInternal.IFusionStatsView
#include "Fusion/StatsInternal/IFusionStatsView.hpp"
// Including type: System.Int32
#include "System/Int32.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::UI
namespace UnityEngine::UI {
  // Forward declaring type: Text
  class Text;
  // Forward declaring type: Image
  class Image;
}
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: FusionStats
  class FusionStats;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: RectTransform
  class RectTransform;
  // Forward declaring type: Transform
  class Transform;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Forward declaring type: FusionStatsObjectIds
  class FusionStatsObjectIds;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::FusionStatsObjectIds);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::FusionStatsObjectIds*, "", "FusionStatsObjectIds");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x60
  #pragma pack(push, 1)
  // Autogenerated type: FusionStatsObjectIds
  // [TokenAttribute] Offset: FFFFFFFF
  class FusionStatsObjectIds : public ::Fusion::Behaviour/*, public ::Fusion::StatsInternal::IFusionStatsView*/ {
    public:
    public:
    // private UnityEngine.UI.Text _inputValueText
    // Size: 0x8
    // Offset: 0x20
    ::UnityEngine::UI::Text* inputValueText;
    // Field size check
    static_assert(sizeof(::UnityEngine::UI::Text*) == 0x8);
    // private UnityEngine.UI.Text _stateValueText
    // Size: 0x8
    // Offset: 0x28
    ::UnityEngine::UI::Text* stateValueText;
    // Field size check
    static_assert(sizeof(::UnityEngine::UI::Text*) == 0x8);
    // private UnityEngine.UI.Text _objectIdLabel
    // Size: 0x8
    // Offset: 0x30
    ::UnityEngine::UI::Text* objectIdLabel;
    // Field size check
    static_assert(sizeof(::UnityEngine::UI::Text*) == 0x8);
    // private UnityEngine.UI.Image _stateAuthBackImage
    // Size: 0x8
    // Offset: 0x38
    ::UnityEngine::UI::Image* stateAuthBackImage;
    // Field size check
    static_assert(sizeof(::UnityEngine::UI::Image*) == 0x8);
    // private UnityEngine.UI.Image _inputAuthBackImage
    // Size: 0x8
    // Offset: 0x40
    ::UnityEngine::UI::Image* inputAuthBackImage;
    // Field size check
    static_assert(sizeof(::UnityEngine::UI::Image*) == 0x8);
    // private FusionStats _fusionStats
    // Size: 0x8
    // Offset: 0x48
    ::GlobalNamespace::FusionStats* fusionStats;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::FusionStats*) == 0x8);
    // private System.Boolean _previousHasInputAuth
    // Size: 0x1
    // Offset: 0x50
    bool previousHasInputAuth;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean _previousHasStateAuth
    // Size: 0x1
    // Offset: 0x51
    bool previousHasStateAuth;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: previousHasStateAuth and: previousInputAuthValue
    char __padding7[0x2] = {};
    // private System.Int32 _previousInputAuthValue
    // Size: 0x4
    // Offset: 0x54
    int previousInputAuthValue;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private System.Int32 _previousStateAuthValue
    // Size: 0x4
    // Offset: 0x58
    int previousStateAuthValue;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private System.UInt32 _previousObjectIdValue
    // Size: 0x4
    // Offset: 0x5C
    uint previousObjectIdValue;
    // Field size check
    static_assert(sizeof(uint) == 0x4);
    public:
    // Creating interface conversion operator: operator ::Fusion::StatsInternal::IFusionStatsView
    operator ::Fusion::StatsInternal::IFusionStatsView() noexcept {
      return *reinterpret_cast<::Fusion::StatsInternal::IFusionStatsView*>(this);
    }
    // static field const value: static protected System.Int32 PAD
    static constexpr const int PAD = 10;
    // Get static field: static protected System.Int32 PAD
    static int _get_PAD();
    // Set static field: static protected System.Int32 PAD
    static void _set_PAD(int value);
    // static field const value: static protected System.Int32 MARGIN
    static constexpr const int MARGIN = 6;
    // Get static field: static protected System.Int32 MARGIN
    static int _get_MARGIN();
    // Set static field: static protected System.Int32 MARGIN
    static void _set_MARGIN(int value);
    // Get static field: static private UnityEngine.Color _noneAuthColor
    static ::UnityEngine::Color _get__noneAuthColor();
    // Set static field: static private UnityEngine.Color _noneAuthColor
    static void _set__noneAuthColor(::UnityEngine::Color value);
    // Get static field: static private UnityEngine.Color _inputAuthColor
    static ::UnityEngine::Color _get__inputAuthColor();
    // Set static field: static private UnityEngine.Color _inputAuthColor
    static void _set__inputAuthColor(::UnityEngine::Color value);
    // Get static field: static private UnityEngine.Color _stateAuthColor
    static ::UnityEngine::Color _get__stateAuthColor();
    // Set static field: static private UnityEngine.Color _stateAuthColor
    static void _set__stateAuthColor(::UnityEngine::Color value);
    // static field const value: static private System.Single LABEL_DIVIDING_POINT
    static constexpr const float LABEL_DIVIDING_POINT = 0.7;
    // Get static field: static private System.Single LABEL_DIVIDING_POINT
    static float _get_LABEL_DIVIDING_POINT();
    // Set static field: static private System.Single LABEL_DIVIDING_POINT
    static void _set_LABEL_DIVIDING_POINT(float value);
    // static field const value: static private System.Single TEXT_PAD
    static constexpr const float TEXT_PAD = 4;
    // Get static field: static private System.Single TEXT_PAD
    static float _get_TEXT_PAD();
    // Set static field: static private System.Single TEXT_PAD
    static void _set_TEXT_PAD(float value);
    // static field const value: static private System.Single TEXT_PAD_HORIZ
    static constexpr const float TEXT_PAD_HORIZ = 6;
    // Get static field: static private System.Single TEXT_PAD_HORIZ
    static float _get_TEXT_PAD_HORIZ();
    // Set static field: static private System.Single TEXT_PAD_HORIZ
    static void _set_TEXT_PAD_HORIZ(float value);
    // static field const value: static private System.Int32 MAX_TAG_FONT_SIZE
    static constexpr const int MAX_TAG_FONT_SIZE = 18;
    // Get static field: static private System.Int32 MAX_TAG_FONT_SIZE
    static int _get_MAX_TAG_FONT_SIZE();
    // Set static field: static private System.Int32 MAX_TAG_FONT_SIZE
    static void _set_MAX_TAG_FONT_SIZE(int value);
    // Get instance field reference: private UnityEngine.UI.Text _inputValueText
    [[deprecated("Use field access instead!")]] ::UnityEngine::UI::Text*& dyn__inputValueText();
    // Get instance field reference: private UnityEngine.UI.Text _stateValueText
    [[deprecated("Use field access instead!")]] ::UnityEngine::UI::Text*& dyn__stateValueText();
    // Get instance field reference: private UnityEngine.UI.Text _objectIdLabel
    [[deprecated("Use field access instead!")]] ::UnityEngine::UI::Text*& dyn__objectIdLabel();
    // Get instance field reference: private UnityEngine.UI.Image _stateAuthBackImage
    [[deprecated("Use field access instead!")]] ::UnityEngine::UI::Image*& dyn__stateAuthBackImage();
    // Get instance field reference: private UnityEngine.UI.Image _inputAuthBackImage
    [[deprecated("Use field access instead!")]] ::UnityEngine::UI::Image*& dyn__inputAuthBackImage();
    // Get instance field reference: private FusionStats _fusionStats
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::FusionStats*& dyn__fusionStats();
    // Get instance field reference: private System.Boolean _previousHasInputAuth
    [[deprecated("Use field access instead!")]] bool& dyn__previousHasInputAuth();
    // Get instance field reference: private System.Boolean _previousHasStateAuth
    [[deprecated("Use field access instead!")]] bool& dyn__previousHasStateAuth();
    // Get instance field reference: private System.Int32 _previousInputAuthValue
    [[deprecated("Use field access instead!")]] int& dyn__previousInputAuthValue();
    // Get instance field reference: private System.Int32 _previousStateAuthValue
    [[deprecated("Use field access instead!")]] int& dyn__previousStateAuthValue();
    // Get instance field reference: private System.UInt32 _previousObjectIdValue
    [[deprecated("Use field access instead!")]] uint& dyn__previousObjectIdValue();
    // private System.Void Awake()
    // Offset: 0x295A09C
    void Awake();
    // private System.Void Fusion.StatsInternal.IFusionStatsView.Initialize()
    // Offset: 0x295A0F4
    void Fusion_StatsInternal_IFusionStatsView_Initialize();
    // static public UnityEngine.RectTransform Create(UnityEngine.RectTransform parent, FusionStats fusionStats)
    // Offset: 0x295A0F8
    static ::UnityEngine::RectTransform* Create(::UnityEngine::RectTransform* parent, ::GlobalNamespace::FusionStats* fusionStats);
    // public System.Void Generate()
    // Offset: 0x295A20C
    void Generate();
    // private UnityEngine.RectTransform AddAuthorityPanel(UnityEngine.RectTransform parent, System.String label, ref UnityEngine.UI.Text valueText, ref UnityEngine.UI.Image backImage)
    // Offset: 0x295A518
    ::UnityEngine::RectTransform* AddAuthorityPanel(::UnityEngine::RectTransform* parent, ::StringW label, ByRef<::UnityEngine::UI::Text*> valueText, ByRef<::UnityEngine::UI::Image*> backImage);
    // private System.Void Fusion.StatsInternal.IFusionStatsView.CalculateLayout()
    // Offset: 0x295A7B8
    void Fusion_StatsInternal_IFusionStatsView_CalculateLayout();
    // private System.Void Fusion.StatsInternal.IFusionStatsView.Refresh()
    // Offset: 0x295A7BC
    void Fusion_StatsInternal_IFusionStatsView_Refresh();
    // public System.Void .ctor()
    // Offset: 0x295ABA0
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static FusionStatsObjectIds* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStatsObjectIds::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<FusionStatsObjectIds*, creationType>()));
    }
    // static private System.Void .cctor()
    // Offset: 0x295ABB0
    static void _cctor();
    // private System.Boolean Fusion.StatsInternal.IFusionStatsView.get_isActiveAndEnabled()
    // Offset: 0x295AC24
    bool Fusion_StatsInternal_IFusionStatsView_get_isActiveAndEnabled();
    // private UnityEngine.Transform Fusion.StatsInternal.IFusionStatsView.get_transform()
    // Offset: 0x295AC2C
    ::UnityEngine::Transform* Fusion_StatsInternal_IFusionStatsView_get_transform();
  }; // FusionStatsObjectIds
  #pragma pack(pop)
  static check_size<sizeof(FusionStatsObjectIds), 92 + sizeof(uint)> __GlobalNamespace_FusionStatsObjectIdsSizeCheck;
  static_assert(sizeof(FusionStatsObjectIds) == 0x60);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::FusionStatsObjectIds::Awake
// Il2CppName: Awake
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::FusionStatsObjectIds::*)()>(&GlobalNamespace::FusionStatsObjectIds::Awake)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::FusionStatsObjectIds*), "Awake", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::FusionStatsObjectIds::Fusion_StatsInternal_IFusionStatsView_Initialize
// Il2CppName: Fusion.StatsInternal.IFusionStatsView.Initialize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::FusionStatsObjectIds::*)()>(&GlobalNamespace::FusionStatsObjectIds::Fusion_StatsInternal_IFusionStatsView_Initialize)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::FusionStatsObjectIds*), "Fusion.StatsInternal.IFusionStatsView.Initialize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::FusionStatsObjectIds::Create
// Il2CppName: Create
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::RectTransform* (*)(::UnityEngine::RectTransform*, ::GlobalNamespace::FusionStats*)>(&GlobalNamespace::FusionStatsObjectIds::Create)> {
  static const MethodInfo* get() {
    static auto* parent = &::il2cpp_utils::GetClassFromName("UnityEngine", "RectTransform")->byval_arg;
    static auto* fusionStats = &::il2cpp_utils::GetClassFromName("", "FusionStats")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::FusionStatsObjectIds*), "Create", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{parent, fusionStats});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::FusionStatsObjectIds::Generate
// Il2CppName: Generate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::FusionStatsObjectIds::*)()>(&GlobalNamespace::FusionStatsObjectIds::Generate)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::FusionStatsObjectIds*), "Generate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::FusionStatsObjectIds::AddAuthorityPanel
// Il2CppName: AddAuthorityPanel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::RectTransform* (GlobalNamespace::FusionStatsObjectIds::*)(::UnityEngine::RectTransform*, ::StringW, ByRef<::UnityEngine::UI::Text*>, ByRef<::UnityEngine::UI::Image*>)>(&GlobalNamespace::FusionStatsObjectIds::AddAuthorityPanel)> {
  static const MethodInfo* get() {
    static auto* parent = &::il2cpp_utils::GetClassFromName("UnityEngine", "RectTransform")->byval_arg;
    static auto* label = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* valueText = &::il2cpp_utils::GetClassFromName("UnityEngine.UI", "Text")->this_arg;
    static auto* backImage = &::il2cpp_utils::GetClassFromName("UnityEngine.UI", "Image")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::FusionStatsObjectIds*), "AddAuthorityPanel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{parent, label, valueText, backImage});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::FusionStatsObjectIds::Fusion_StatsInternal_IFusionStatsView_CalculateLayout
// Il2CppName: Fusion.StatsInternal.IFusionStatsView.CalculateLayout
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::FusionStatsObjectIds::*)()>(&GlobalNamespace::FusionStatsObjectIds::Fusion_StatsInternal_IFusionStatsView_CalculateLayout)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::FusionStatsObjectIds*), "Fusion.StatsInternal.IFusionStatsView.CalculateLayout", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::FusionStatsObjectIds::Fusion_StatsInternal_IFusionStatsView_Refresh
// Il2CppName: Fusion.StatsInternal.IFusionStatsView.Refresh
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::FusionStatsObjectIds::*)()>(&GlobalNamespace::FusionStatsObjectIds::Fusion_StatsInternal_IFusionStatsView_Refresh)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::FusionStatsObjectIds*), "Fusion.StatsInternal.IFusionStatsView.Refresh", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::FusionStatsObjectIds::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: GlobalNamespace::FusionStatsObjectIds::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&GlobalNamespace::FusionStatsObjectIds::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::FusionStatsObjectIds*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::FusionStatsObjectIds::Fusion_StatsInternal_IFusionStatsView_get_isActiveAndEnabled
// Il2CppName: Fusion.StatsInternal.IFusionStatsView.get_isActiveAndEnabled
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (GlobalNamespace::FusionStatsObjectIds::*)()>(&GlobalNamespace::FusionStatsObjectIds::Fusion_StatsInternal_IFusionStatsView_get_isActiveAndEnabled)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::FusionStatsObjectIds*), "Fusion.StatsInternal.IFusionStatsView.get_isActiveAndEnabled", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::FusionStatsObjectIds::Fusion_StatsInternal_IFusionStatsView_get_transform
// Il2CppName: Fusion.StatsInternal.IFusionStatsView.get_transform
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Transform* (GlobalNamespace::FusionStatsObjectIds::*)()>(&GlobalNamespace::FusionStatsObjectIds::Fusion_StatsInternal_IFusionStatsView_get_transform)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::FusionStatsObjectIds*), "Fusion.StatsInternal.IFusionStatsView.get_transform", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
