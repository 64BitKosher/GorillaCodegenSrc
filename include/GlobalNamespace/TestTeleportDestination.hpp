// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
// Including type: GTZone
#include "GlobalNamespace/GTZone.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: GameObject
  class GameObject;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Forward declaring type: TestTeleportDestination
  class TestTeleportDestination;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::TestTeleportDestination);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::TestTeleportDestination*, "", "TestTeleportDestination");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x30
  #pragma pack(push, 1)
  // Autogenerated type: TestTeleportDestination
  // [TokenAttribute] Offset: FFFFFFFF
  // [GTStripGameObjectFromBuildAttribute] Offset: FFFFFFFF
  class TestTeleportDestination : public ::UnityEngine::MonoBehaviour {
    public:
    public:
    // public GTZone[] zones
    // Size: 0x8
    // Offset: 0x20
    ::ArrayW<::GlobalNamespace::GTZone> zones;
    // Field size check
    static_assert(sizeof(::ArrayW<::GlobalNamespace::GTZone>) == 0x8);
    // public UnityEngine.GameObject teleportTransform
    // Size: 0x8
    // Offset: 0x28
    ::UnityEngine::GameObject* teleportTransform;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    public:
    // Get instance field reference: public GTZone[] zones
    [[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::GTZone>& dyn_zones();
    // Get instance field reference: public UnityEngine.GameObject teleportTransform
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_teleportTransform();
    // public System.Void .ctor()
    // Offset: 0x289D6E4
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static TestTeleportDestination* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TestTeleportDestination::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<TestTeleportDestination*, creationType>()));
    }
  }; // TestTeleportDestination
  #pragma pack(pop)
  static check_size<sizeof(TestTeleportDestination), 40 + sizeof(::UnityEngine::GameObject*)> __GlobalNamespace_TestTeleportDestinationSizeCheck;
  static_assert(sizeof(TestTeleportDestination) == 0x30);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::TestTeleportDestination::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
