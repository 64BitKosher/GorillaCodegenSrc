// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: OVRPlugin
#include "GlobalNamespace/OVRPlugin.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Including type: OVRPlugin/Bool
// Already included the same include: GlobalNamespace/OVRPlugin.hpp
// Including type: OVRPlugin/BodyJointLocation
#include "GlobalNamespace/OVRPlugin_BodyJointLocation.hpp"
// Completed includes
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::OVRPlugin::BodyStateInternal, "", "OVRPlugin/BodyStateInternal");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0xB04
  #pragma pack(push, 1)
  // WARNING Layout: Sequential may not be correctly taken into account!
  // Autogenerated type: OVRPlugin/BodyStateInternal
  // [TokenAttribute] Offset: FFFFFFFF
  struct OVRPlugin::BodyStateInternal/*, public ::System::ValueType*/ {
    public:
    public:
    // public OVRPlugin/Bool IsActive
    // Size: 0x4
    // Offset: 0x0
    ::GlobalNamespace::OVRPlugin::Bool IsActive;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::OVRPlugin::Bool) == 0x4);
    // public System.Single Confidence
    // Size: 0x4
    // Offset: 0x4
    float Confidence;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // public System.UInt32 SkeletonChangedCount
    // Size: 0x4
    // Offset: 0x8
    uint SkeletonChangedCount;
    // Field size check
    static_assert(sizeof(uint) == 0x4);
    // Padding between fields: SkeletonChangedCount and: Time
    char __padding2[0x4] = {};
    // public System.Double Time
    // Size: 0x8
    // Offset: 0x10
    double Time;
    // Field size check
    static_assert(sizeof(double) == 0x8);
    // public OVRPlugin/BodyJointLocation JointLocation_0
    // Size: 0x24
    // Offset: 0x18
    ::GlobalNamespace::OVRPlugin::BodyJointLocation JointLocation_0;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::OVRPlugin::BodyJointLocation) == 0x24);
    // Padding between fields: JointLocation_0 and: JointLocation_1
    char __padding4[0x4] = {};
    // public OVRPlugin/BodyJointLocation JointLocation_1
    // Size: 0x24
    // Offset: 0x40
    ::GlobalNamespace::OVRPlugin::BodyJointLocation JointLocation_1;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::OVRPlugin::BodyJointLocation) == 0x24);
    // Padding between fields: JointLocation_1 and: JointLocation_2
    char __padding5[0x4] = {};
    // public OVRPlugin/BodyJointLocation JointLocation_2
    // Size: 0x24
    // Offset: 0x68
    ::GlobalNamespace::OVRPlugin::BodyJointLocation JointLocation_2;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::OVRPlugin::BodyJointLocation) == 0x24);
    // Padding between fields: JointLocation_2 and: JointLocation_3
    char __padding6[0x4] = {};
    // public OVRPlugin/BodyJointLocation JointLocation_3
    // Size: 0x24
    // Offset: 0x90
    ::GlobalNamespace::OVRPlugin::BodyJointLocation JointLocation_3;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::OVRPlugin::BodyJointLocation) == 0x24);
    // Padding between fields: JointLocation_3 and: JointLocation_4
    char __padding7[0x4] = {};
    // public OVRPlugin/BodyJointLocation JointLocation_4
    // Size: 0x24
    // Offset: 0xB8
    ::GlobalNamespace::OVRPlugin::BodyJointLocation JointLocation_4;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::OVRPlugin::BodyJointLocation) == 0x24);
    // Padding between fields: JointLocation_4 and: JointLocation_5
    char __padding8[0x4] = {};
    // public OVRPlugin/BodyJointLocation JointLocation_5
    // Size: 0x24
    // Offset: 0xE0
    ::GlobalNamespace::OVRPlugin::BodyJointLocation JointLocation_5;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::OVRPlugin::BodyJointLocation) == 0x24);
    // Padding between fields: JointLocation_5 and: JointLocation_6
    char __padding9[0x4] = {};
    // public OVRPlugin/BodyJointLocation JointLocation_6
    // Size: 0x24
    // Offset: 0x108
    ::GlobalNamespace::OVRPlugin::BodyJointLocation JointLocation_6;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::OVRPlugin::BodyJointLocation) == 0x24);
    // Padding between fields: JointLocation_6 and: JointLocation_7
    char __padding10[0x4] = {};
    // public OVRPlugin/BodyJointLocation JointLocation_7
    // Size: 0x24
    // Offset: 0x130
    ::GlobalNamespace::OVRPlugin::BodyJointLocation JointLocation_7;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::OVRPlugin::BodyJointLocation) == 0x24);
    // Padding between fields: JointLocation_7 and: JointLocation_8
    char __padding11[0x4] = {};
    // public OVRPlugin/BodyJointLocation JointLocation_8
    // Size: 0x24
    // Offset: 0x158
    ::GlobalNamespace::OVRPlugin::BodyJointLocation JointLocation_8;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::OVRPlugin::BodyJointLocation) == 0x24);
    // Padding between fields: JointLocation_8 and: JointLocation_9
    char __padding12[0x4] = {};
    // public OVRPlugin/BodyJointLocation JointLocation_9
    // Size: 0x24
    // Offset: 0x180
    ::GlobalNamespace::OVRPlugin::BodyJointLocation JointLocation_9;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::OVRPlugin::BodyJointLocation) == 0x24);
    // Padding between fields: JointLocation_9 and: JointLocation_10
    char __padding13[0x4] = {};
    // public OVRPlugin/BodyJointLocation JointLocation_10
    // Size: 0x24
    // Offset: 0x1A8
    ::GlobalNamespace::OVRPlugin::BodyJointLocation JointLocation_10;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::OVRPlugin::BodyJointLocation) == 0x24);
    // Padding between fields: JointLocation_10 and: JointLocation_11
    char __padding14[0x4] = {};
    // public OVRPlugin/BodyJointLocation JointLocation_11
    // Size: 0x24
    // Offset: 0x1D0
    ::GlobalNamespace::OVRPlugin::BodyJointLocation JointLocation_11;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::OVRPlugin::BodyJointLocation) == 0x24);
    // Padding between fields: JointLocation_11 and: JointLocation_12
    char __padding15[0x4] = {};
    // public OVRPlugin/BodyJointLocation JointLocation_12
    // Size: 0x24
    // Offset: 0x1F8
    ::GlobalNamespace::OVRPlugin::BodyJointLocation JointLocation_12;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::OVRPlugin::BodyJointLocation) == 0x24);
    // Padding between fields: JointLocation_12 and: JointLocation_13
    char __padding16[0x4] = {};
    // public OVRPlugin/BodyJointLocation JointLocation_13
    // Size: 0x24
    // Offset: 0x220
    ::GlobalNamespace::OVRPlugin::BodyJointLocation JointLocation_13;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::OVRPlugin::BodyJointLocation) == 0x24);
    // Padding between fields: JointLocation_13 and: JointLocation_14
    char __padding17[0x4] = {};
    // public OVRPlugin/BodyJointLocation JointLocation_14
    // Size: 0x24
    // Offset: 0x248
    ::GlobalNamespace::OVRPlugin::BodyJointLocation JointLocation_14;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::OVRPlugin::BodyJointLocation) == 0x24);
    // Padding between fields: JointLocation_14 and: JointLocation_15
    char __padding18[0x4] = {};
    // public OVRPlugin/BodyJointLocation JointLocation_15
    // Size: 0x24
    // Offset: 0x270
    ::GlobalNamespace::OVRPlugin::BodyJointLocation JointLocation_15;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::OVRPlugin::BodyJointLocation) == 0x24);
    // Padding between fields: JointLocation_15 and: JointLocation_16
    char __padding19[0x4] = {};
    // public OVRPlugin/BodyJointLocation JointLocation_16
    // Size: 0x24
    // Offset: 0x298
    ::GlobalNamespace::OVRPlugin::BodyJointLocation JointLocation_16;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::OVRPlugin::BodyJointLocation) == 0x24);
    // Padding between fields: JointLocation_16 and: JointLocation_17
    char __padding20[0x4] = {};
    // public OVRPlugin/BodyJointLocation JointLocation_17
    // Size: 0x24
    // Offset: 0x2C0
    ::GlobalNamespace::OVRPlugin::BodyJointLocation JointLocation_17;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::OVRPlugin::BodyJointLocation) == 0x24);
    // Padding between fields: JointLocation_17 and: JointLocation_18
    char __padding21[0x4] = {};
    // public OVRPlugin/BodyJointLocation JointLocation_18
    // Size: 0x24
    // Offset: 0x2E8
    ::GlobalNamespace::OVRPlugin::BodyJointLocation JointLocation_18;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::OVRPlugin::BodyJointLocation) == 0x24);
    // Padding between fields: JointLocation_18 and: JointLocation_19
    char __padding22[0x4] = {};
    // public OVRPlugin/BodyJointLocation JointLocation_19
    // Size: 0x24
    // Offset: 0x310
    ::GlobalNamespace::OVRPlugin::BodyJointLocation JointLocation_19;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::OVRPlugin::BodyJointLocation) == 0x24);
    // Padding between fields: JointLocation_19 and: JointLocation_20
    char __padding23[0x4] = {};
    // public OVRPlugin/BodyJointLocation JointLocation_20
    // Size: 0x24
    // Offset: 0x338
    ::GlobalNamespace::OVRPlugin::BodyJointLocation JointLocation_20;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::OVRPlugin::BodyJointLocation) == 0x24);
    // Padding between fields: JointLocation_20 and: JointLocation_21
    char __padding24[0x4] = {};
    // public OVRPlugin/BodyJointLocation JointLocation_21
    // Size: 0x24
    // Offset: 0x360
    ::GlobalNamespace::OVRPlugin::BodyJointLocation JointLocation_21;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::OVRPlugin::BodyJointLocation) == 0x24);
    // Padding between fields: JointLocation_21 and: JointLocation_22
    char __padding25[0x4] = {};
    // public OVRPlugin/BodyJointLocation JointLocation_22
    // Size: 0x24
    // Offset: 0x388
    ::GlobalNamespace::OVRPlugin::BodyJointLocation JointLocation_22;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::OVRPlugin::BodyJointLocation) == 0x24);
    // Padding between fields: JointLocation_22 and: JointLocation_23
    char __padding26[0x4] = {};
    // public OVRPlugin/BodyJointLocation JointLocation_23
    // Size: 0x24
    // Offset: 0x3B0
    ::GlobalNamespace::OVRPlugin::BodyJointLocation JointLocation_23;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::OVRPlugin::BodyJointLocation) == 0x24);
    // Padding between fields: JointLocation_23 and: JointLocation_24
    char __padding27[0x4] = {};
    // public OVRPlugin/BodyJointLocation JointLocation_24
    // Size: 0x24
    // Offset: 0x3D8
    ::GlobalNamespace::OVRPlugin::BodyJointLocation JointLocation_24;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::OVRPlugin::BodyJointLocation) == 0x24);
    // Padding between fields: JointLocation_24 and: JointLocation_25
    char __padding28[0x4] = {};
    // public OVRPlugin/BodyJointLocation JointLocation_25
    // Size: 0x24
    // Offset: 0x400
    ::GlobalNamespace::OVRPlugin::BodyJointLocation JointLocation_25;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::OVRPlugin::BodyJointLocation) == 0x24);
    // Padding between fields: JointLocation_25 and: JointLocation_26
    char __padding29[0x4] = {};
    // public OVRPlugin/BodyJointLocation JointLocation_26
    // Size: 0x24
    // Offset: 0x428
    ::GlobalNamespace::OVRPlugin::BodyJointLocation JointLocation_26;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::OVRPlugin::BodyJointLocation) == 0x24);
    // Padding between fields: JointLocation_26 and: JointLocation_27
    char __padding30[0x4] = {};
    // public OVRPlugin/BodyJointLocation JointLocation_27
    // Size: 0x24
    // Offset: 0x450
    ::GlobalNamespace::OVRPlugin::BodyJointLocation JointLocation_27;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::OVRPlugin::BodyJointLocation) == 0x24);
    // Padding between fields: JointLocation_27 and: JointLocation_28
    char __padding31[0x4] = {};
    // public OVRPlugin/BodyJointLocation JointLocation_28
    // Size: 0x24
    // Offset: 0x478
    ::GlobalNamespace::OVRPlugin::BodyJointLocation JointLocation_28;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::OVRPlugin::BodyJointLocation) == 0x24);
    // Padding between fields: JointLocation_28 and: JointLocation_29
    char __padding32[0x4] = {};
    // public OVRPlugin/BodyJointLocation JointLocation_29
    // Size: 0x24
    // Offset: 0x4A0
    ::GlobalNamespace::OVRPlugin::BodyJointLocation JointLocation_29;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::OVRPlugin::BodyJointLocation) == 0x24);
    // Padding between fields: JointLocation_29 and: JointLocation_30
    char __padding33[0x4] = {};
    // public OVRPlugin/BodyJointLocation JointLocation_30
    // Size: 0x24
    // Offset: 0x4C8
    ::GlobalNamespace::OVRPlugin::BodyJointLocation JointLocation_30;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::OVRPlugin::BodyJointLocation) == 0x24);
    // Padding between fields: JointLocation_30 and: JointLocation_31
    char __padding34[0x4] = {};
    // public OVRPlugin/BodyJointLocation JointLocation_31
    // Size: 0x24
    // Offset: 0x4F0
    ::GlobalNamespace::OVRPlugin::BodyJointLocation JointLocation_31;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::OVRPlugin::BodyJointLocation) == 0x24);
    // Padding between fields: JointLocation_31 and: JointLocation_32
    char __padding35[0x4] = {};
    // public OVRPlugin/BodyJointLocation JointLocation_32
    // Size: 0x24
    // Offset: 0x518
    ::GlobalNamespace::OVRPlugin::BodyJointLocation JointLocation_32;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::OVRPlugin::BodyJointLocation) == 0x24);
    // Padding between fields: JointLocation_32 and: JointLocation_33
    char __padding36[0x4] = {};
    // public OVRPlugin/BodyJointLocation JointLocation_33
    // Size: 0x24
    // Offset: 0x540
    ::GlobalNamespace::OVRPlugin::BodyJointLocation JointLocation_33;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::OVRPlugin::BodyJointLocation) == 0x24);
    // Padding between fields: JointLocation_33 and: JointLocation_34
    char __padding37[0x4] = {};
    // public OVRPlugin/BodyJointLocation JointLocation_34
    // Size: 0x24
    // Offset: 0x568
    ::GlobalNamespace::OVRPlugin::BodyJointLocation JointLocation_34;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::OVRPlugin::BodyJointLocation) == 0x24);
    // Padding between fields: JointLocation_34 and: JointLocation_35
    char __padding38[0x4] = {};
    // public OVRPlugin/BodyJointLocation JointLocation_35
    // Size: 0x24
    // Offset: 0x590
    ::GlobalNamespace::OVRPlugin::BodyJointLocation JointLocation_35;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::OVRPlugin::BodyJointLocation) == 0x24);
    // Padding between fields: JointLocation_35 and: JointLocation_36
    char __padding39[0x4] = {};
    // public OVRPlugin/BodyJointLocation JointLocation_36
    // Size: 0x24
    // Offset: 0x5B8
    ::GlobalNamespace::OVRPlugin::BodyJointLocation JointLocation_36;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::OVRPlugin::BodyJointLocation) == 0x24);
    // Padding between fields: JointLocation_36 and: JointLocation_37
    char __padding40[0x4] = {};
    // public OVRPlugin/BodyJointLocation JointLocation_37
    // Size: 0x24
    // Offset: 0x5E0
    ::GlobalNamespace::OVRPlugin::BodyJointLocation JointLocation_37;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::OVRPlugin::BodyJointLocation) == 0x24);
    // Padding between fields: JointLocation_37 and: JointLocation_38
    char __padding41[0x4] = {};
    // public OVRPlugin/BodyJointLocation JointLocation_38
    // Size: 0x24
    // Offset: 0x608
    ::GlobalNamespace::OVRPlugin::BodyJointLocation JointLocation_38;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::OVRPlugin::BodyJointLocation) == 0x24);
    // Padding between fields: JointLocation_38 and: JointLocation_39
    char __padding42[0x4] = {};
    // public OVRPlugin/BodyJointLocation JointLocation_39
    // Size: 0x24
    // Offset: 0x630
    ::GlobalNamespace::OVRPlugin::BodyJointLocation JointLocation_39;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::OVRPlugin::BodyJointLocation) == 0x24);
    // Padding between fields: JointLocation_39 and: JointLocation_40
    char __padding43[0x4] = {};
    // public OVRPlugin/BodyJointLocation JointLocation_40
    // Size: 0x24
    // Offset: 0x658
    ::GlobalNamespace::OVRPlugin::BodyJointLocation JointLocation_40;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::OVRPlugin::BodyJointLocation) == 0x24);
    // Padding between fields: JointLocation_40 and: JointLocation_41
    char __padding44[0x4] = {};
    // public OVRPlugin/BodyJointLocation JointLocation_41
    // Size: 0x24
    // Offset: 0x680
    ::GlobalNamespace::OVRPlugin::BodyJointLocation JointLocation_41;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::OVRPlugin::BodyJointLocation) == 0x24);
    // Padding between fields: JointLocation_41 and: JointLocation_42
    char __padding45[0x4] = {};
    // public OVRPlugin/BodyJointLocation JointLocation_42
    // Size: 0x24
    // Offset: 0x6A8
    ::GlobalNamespace::OVRPlugin::BodyJointLocation JointLocation_42;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::OVRPlugin::BodyJointLocation) == 0x24);
    // Padding between fields: JointLocation_42 and: JointLocation_43
    char __padding46[0x4] = {};
    // public OVRPlugin/BodyJointLocation JointLocation_43
    // Size: 0x24
    // Offset: 0x6D0
    ::GlobalNamespace::OVRPlugin::BodyJointLocation JointLocation_43;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::OVRPlugin::BodyJointLocation) == 0x24);
    // Padding between fields: JointLocation_43 and: JointLocation_44
    char __padding47[0x4] = {};
    // public OVRPlugin/BodyJointLocation JointLocation_44
    // Size: 0x24
    // Offset: 0x6F8
    ::GlobalNamespace::OVRPlugin::BodyJointLocation JointLocation_44;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::OVRPlugin::BodyJointLocation) == 0x24);
    // Padding between fields: JointLocation_44 and: JointLocation_45
    char __padding48[0x4] = {};
    // public OVRPlugin/BodyJointLocation JointLocation_45
    // Size: 0x24
    // Offset: 0x720
    ::GlobalNamespace::OVRPlugin::BodyJointLocation JointLocation_45;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::OVRPlugin::BodyJointLocation) == 0x24);
    // Padding between fields: JointLocation_45 and: JointLocation_46
    char __padding49[0x4] = {};
    // public OVRPlugin/BodyJointLocation JointLocation_46
    // Size: 0x24
    // Offset: 0x748
    ::GlobalNamespace::OVRPlugin::BodyJointLocation JointLocation_46;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::OVRPlugin::BodyJointLocation) == 0x24);
    // Padding between fields: JointLocation_46 and: JointLocation_47
    char __padding50[0x4] = {};
    // public OVRPlugin/BodyJointLocation JointLocation_47
    // Size: 0x24
    // Offset: 0x770
    ::GlobalNamespace::OVRPlugin::BodyJointLocation JointLocation_47;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::OVRPlugin::BodyJointLocation) == 0x24);
    // Padding between fields: JointLocation_47 and: JointLocation_48
    char __padding51[0x4] = {};
    // public OVRPlugin/BodyJointLocation JointLocation_48
    // Size: 0x24
    // Offset: 0x798
    ::GlobalNamespace::OVRPlugin::BodyJointLocation JointLocation_48;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::OVRPlugin::BodyJointLocation) == 0x24);
    // Padding between fields: JointLocation_48 and: JointLocation_49
    char __padding52[0x4] = {};
    // public OVRPlugin/BodyJointLocation JointLocation_49
    // Size: 0x24
    // Offset: 0x7C0
    ::GlobalNamespace::OVRPlugin::BodyJointLocation JointLocation_49;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::OVRPlugin::BodyJointLocation) == 0x24);
    // Padding between fields: JointLocation_49 and: JointLocation_50
    char __padding53[0x4] = {};
    // public OVRPlugin/BodyJointLocation JointLocation_50
    // Size: 0x24
    // Offset: 0x7E8
    ::GlobalNamespace::OVRPlugin::BodyJointLocation JointLocation_50;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::OVRPlugin::BodyJointLocation) == 0x24);
    // Padding between fields: JointLocation_50 and: JointLocation_51
    char __padding54[0x4] = {};
    // public OVRPlugin/BodyJointLocation JointLocation_51
    // Size: 0x24
    // Offset: 0x810
    ::GlobalNamespace::OVRPlugin::BodyJointLocation JointLocation_51;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::OVRPlugin::BodyJointLocation) == 0x24);
    // Padding between fields: JointLocation_51 and: JointLocation_52
    char __padding55[0x4] = {};
    // public OVRPlugin/BodyJointLocation JointLocation_52
    // Size: 0x24
    // Offset: 0x838
    ::GlobalNamespace::OVRPlugin::BodyJointLocation JointLocation_52;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::OVRPlugin::BodyJointLocation) == 0x24);
    // Padding between fields: JointLocation_52 and: JointLocation_53
    char __padding56[0x4] = {};
    // public OVRPlugin/BodyJointLocation JointLocation_53
    // Size: 0x24
    // Offset: 0x860
    ::GlobalNamespace::OVRPlugin::BodyJointLocation JointLocation_53;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::OVRPlugin::BodyJointLocation) == 0x24);
    // Padding between fields: JointLocation_53 and: JointLocation_54
    char __padding57[0x4] = {};
    // public OVRPlugin/BodyJointLocation JointLocation_54
    // Size: 0x24
    // Offset: 0x888
    ::GlobalNamespace::OVRPlugin::BodyJointLocation JointLocation_54;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::OVRPlugin::BodyJointLocation) == 0x24);
    // Padding between fields: JointLocation_54 and: JointLocation_55
    char __padding58[0x4] = {};
    // public OVRPlugin/BodyJointLocation JointLocation_55
    // Size: 0x24
    // Offset: 0x8B0
    ::GlobalNamespace::OVRPlugin::BodyJointLocation JointLocation_55;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::OVRPlugin::BodyJointLocation) == 0x24);
    // Padding between fields: JointLocation_55 and: JointLocation_56
    char __padding59[0x4] = {};
    // public OVRPlugin/BodyJointLocation JointLocation_56
    // Size: 0x24
    // Offset: 0x8D8
    ::GlobalNamespace::OVRPlugin::BodyJointLocation JointLocation_56;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::OVRPlugin::BodyJointLocation) == 0x24);
    // Padding between fields: JointLocation_56 and: JointLocation_57
    char __padding60[0x4] = {};
    // public OVRPlugin/BodyJointLocation JointLocation_57
    // Size: 0x24
    // Offset: 0x900
    ::GlobalNamespace::OVRPlugin::BodyJointLocation JointLocation_57;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::OVRPlugin::BodyJointLocation) == 0x24);
    // Padding between fields: JointLocation_57 and: JointLocation_58
    char __padding61[0x4] = {};
    // public OVRPlugin/BodyJointLocation JointLocation_58
    // Size: 0x24
    // Offset: 0x928
    ::GlobalNamespace::OVRPlugin::BodyJointLocation JointLocation_58;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::OVRPlugin::BodyJointLocation) == 0x24);
    // Padding between fields: JointLocation_58 and: JointLocation_59
    char __padding62[0x4] = {};
    // public OVRPlugin/BodyJointLocation JointLocation_59
    // Size: 0x24
    // Offset: 0x950
    ::GlobalNamespace::OVRPlugin::BodyJointLocation JointLocation_59;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::OVRPlugin::BodyJointLocation) == 0x24);
    // Padding between fields: JointLocation_59 and: JointLocation_60
    char __padding63[0x4] = {};
    // public OVRPlugin/BodyJointLocation JointLocation_60
    // Size: 0x24
    // Offset: 0x978
    ::GlobalNamespace::OVRPlugin::BodyJointLocation JointLocation_60;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::OVRPlugin::BodyJointLocation) == 0x24);
    // Padding between fields: JointLocation_60 and: JointLocation_61
    char __padding64[0x4] = {};
    // public OVRPlugin/BodyJointLocation JointLocation_61
    // Size: 0x24
    // Offset: 0x9A0
    ::GlobalNamespace::OVRPlugin::BodyJointLocation JointLocation_61;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::OVRPlugin::BodyJointLocation) == 0x24);
    // Padding between fields: JointLocation_61 and: JointLocation_62
    char __padding65[0x4] = {};
    // public OVRPlugin/BodyJointLocation JointLocation_62
    // Size: 0x24
    // Offset: 0x9C8
    ::GlobalNamespace::OVRPlugin::BodyJointLocation JointLocation_62;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::OVRPlugin::BodyJointLocation) == 0x24);
    // Padding between fields: JointLocation_62 and: JointLocation_63
    char __padding66[0x4] = {};
    // public OVRPlugin/BodyJointLocation JointLocation_63
    // Size: 0x24
    // Offset: 0x9F0
    ::GlobalNamespace::OVRPlugin::BodyJointLocation JointLocation_63;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::OVRPlugin::BodyJointLocation) == 0x24);
    // Padding between fields: JointLocation_63 and: JointLocation_64
    char __padding67[0x4] = {};
    // public OVRPlugin/BodyJointLocation JointLocation_64
    // Size: 0x24
    // Offset: 0xA18
    ::GlobalNamespace::OVRPlugin::BodyJointLocation JointLocation_64;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::OVRPlugin::BodyJointLocation) == 0x24);
    // Padding between fields: JointLocation_64 and: JointLocation_65
    char __padding68[0x4] = {};
    // public OVRPlugin/BodyJointLocation JointLocation_65
    // Size: 0x24
    // Offset: 0xA40
    ::GlobalNamespace::OVRPlugin::BodyJointLocation JointLocation_65;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::OVRPlugin::BodyJointLocation) == 0x24);
    // Padding between fields: JointLocation_65 and: JointLocation_66
    char __padding69[0x4] = {};
    // public OVRPlugin/BodyJointLocation JointLocation_66
    // Size: 0x24
    // Offset: 0xA68
    ::GlobalNamespace::OVRPlugin::BodyJointLocation JointLocation_66;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::OVRPlugin::BodyJointLocation) == 0x24);
    // Padding between fields: JointLocation_66 and: JointLocation_67
    char __padding70[0x4] = {};
    // public OVRPlugin/BodyJointLocation JointLocation_67
    // Size: 0x24
    // Offset: 0xA90
    ::GlobalNamespace::OVRPlugin::BodyJointLocation JointLocation_67;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::OVRPlugin::BodyJointLocation) == 0x24);
    // Padding between fields: JointLocation_67 and: JointLocation_68
    char __padding71[0x4] = {};
    // public OVRPlugin/BodyJointLocation JointLocation_68
    // Size: 0x24
    // Offset: 0xAB8
    ::GlobalNamespace::OVRPlugin::BodyJointLocation JointLocation_68;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::OVRPlugin::BodyJointLocation) == 0x24);
    // Padding between fields: JointLocation_68 and: JointLocation_69
    char __padding72[0x4] = {};
    // public OVRPlugin/BodyJointLocation JointLocation_69
    // Size: 0x24
    // Offset: 0xAE0
    ::GlobalNamespace::OVRPlugin::BodyJointLocation JointLocation_69;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::OVRPlugin::BodyJointLocation) == 0x24);
    public:
    // Creating value type constructor for type: BodyStateInternal
    constexpr BodyStateInternal(::GlobalNamespace::OVRPlugin::Bool IsActive_ = {}, float Confidence_ = {}, uint SkeletonChangedCount_ = {}, double Time_ = {}, ::GlobalNamespace::OVRPlugin::BodyJointLocation JointLocation_0_ = {}, ::GlobalNamespace::OVRPlugin::BodyJointLocation JointLocation_1_ = {}, ::GlobalNamespace::OVRPlugin::BodyJointLocation JointLocation_2_ = {}, ::GlobalNamespace::OVRPlugin::BodyJointLocation JointLocation_3_ = {}, ::GlobalNamespace::OVRPlugin::BodyJointLocation JointLocation_4_ = {}, ::GlobalNamespace::OVRPlugin::BodyJointLocation JointLocation_5_ = {}, ::GlobalNamespace::OVRPlugin::BodyJointLocation JointLocation_6_ = {}, ::GlobalNamespace::OVRPlugin::BodyJointLocation JointLocation_7_ = {}, ::GlobalNamespace::OVRPlugin::BodyJointLocation JointLocation_8_ = {}, ::GlobalNamespace::OVRPlugin::BodyJointLocation JointLocation_9_ = {}, ::GlobalNamespace::OVRPlugin::BodyJointLocation JointLocation_10_ = {}, ::GlobalNamespace::OVRPlugin::BodyJointLocation JointLocation_11_ = {}, ::GlobalNamespace::OVRPlugin::BodyJointLocation JointLocation_12_ = {}, ::GlobalNamespace::OVRPlugin::BodyJointLocation JointLocation_13_ = {}, ::GlobalNamespace::OVRPlugin::BodyJointLocation JointLocation_14_ = {}, ::GlobalNamespace::OVRPlugin::BodyJointLocation JointLocation_15_ = {}, ::GlobalNamespace::OVRPlugin::BodyJointLocation JointLocation_16_ = {}, ::GlobalNamespace::OVRPlugin::BodyJointLocation JointLocation_17_ = {}, ::GlobalNamespace::OVRPlugin::BodyJointLocation JointLocation_18_ = {}, ::GlobalNamespace::OVRPlugin::BodyJointLocation JointLocation_19_ = {}, ::GlobalNamespace::OVRPlugin::BodyJointLocation JointLocation_20_ = {}, ::GlobalNamespace::OVRPlugin::BodyJointLocation JointLocation_21_ = {}, ::GlobalNamespace::OVRPlugin::BodyJointLocation JointLocation_22_ = {}, ::GlobalNamespace::OVRPlugin::BodyJointLocation JointLocation_23_ = {}, ::GlobalNamespace::OVRPlugin::BodyJointLocation JointLocation_24_ = {}, ::GlobalNamespace::OVRPlugin::BodyJointLocation JointLocation_25_ = {}, ::GlobalNamespace::OVRPlugin::BodyJointLocation JointLocation_26_ = {}, ::GlobalNamespace::OVRPlugin::BodyJointLocation JointLocation_27_ = {}, ::GlobalNamespace::OVRPlugin::BodyJointLocation JointLocation_28_ = {}, ::GlobalNamespace::OVRPlugin::BodyJointLocation JointLocation_29_ = {}, ::GlobalNamespace::OVRPlugin::BodyJointLocation JointLocation_30_ = {}, ::GlobalNamespace::OVRPlugin::BodyJointLocation JointLocation_31_ = {}, ::GlobalNamespace::OVRPlugin::BodyJointLocation JointLocation_32_ = {}, ::GlobalNamespace::OVRPlugin::BodyJointLocation JointLocation_33_ = {}, ::GlobalNamespace::OVRPlugin::BodyJointLocation JointLocation_34_ = {}, ::GlobalNamespace::OVRPlugin::BodyJointLocation JointLocation_35_ = {}, ::GlobalNamespace::OVRPlugin::BodyJointLocation JointLocation_36_ = {}, ::GlobalNamespace::OVRPlugin::BodyJointLocation JointLocation_37_ = {}, ::GlobalNamespace::OVRPlugin::BodyJointLocation JointLocation_38_ = {}, ::GlobalNamespace::OVRPlugin::BodyJointLocation JointLocation_39_ = {}, ::GlobalNamespace::OVRPlugin::BodyJointLocation JointLocation_40_ = {}, ::GlobalNamespace::OVRPlugin::BodyJointLocation JointLocation_41_ = {}, ::GlobalNamespace::OVRPlugin::BodyJointLocation JointLocation_42_ = {}, ::GlobalNamespace::OVRPlugin::BodyJointLocation JointLocation_43_ = {}, ::GlobalNamespace::OVRPlugin::BodyJointLocation JointLocation_44_ = {}, ::GlobalNamespace::OVRPlugin::BodyJointLocation JointLocation_45_ = {}, ::GlobalNamespace::OVRPlugin::BodyJointLocation JointLocation_46_ = {}, ::GlobalNamespace::OVRPlugin::BodyJointLocation JointLocation_47_ = {}, ::GlobalNamespace::OVRPlugin::BodyJointLocation JointLocation_48_ = {}, ::GlobalNamespace::OVRPlugin::BodyJointLocation JointLocation_49_ = {}, ::GlobalNamespace::OVRPlugin::BodyJointLocation JointLocation_50_ = {}, ::GlobalNamespace::OVRPlugin::BodyJointLocation JointLocation_51_ = {}, ::GlobalNamespace::OVRPlugin::BodyJointLocation JointLocation_52_ = {}, ::GlobalNamespace::OVRPlugin::BodyJointLocation JointLocation_53_ = {}, ::GlobalNamespace::OVRPlugin::BodyJointLocation JointLocation_54_ = {}, ::GlobalNamespace::OVRPlugin::BodyJointLocation JointLocation_55_ = {}, ::GlobalNamespace::OVRPlugin::BodyJointLocation JointLocation_56_ = {}, ::GlobalNamespace::OVRPlugin::BodyJointLocation JointLocation_57_ = {}, ::GlobalNamespace::OVRPlugin::BodyJointLocation JointLocation_58_ = {}, ::GlobalNamespace::OVRPlugin::BodyJointLocation JointLocation_59_ = {}, ::GlobalNamespace::OVRPlugin::BodyJointLocation JointLocation_60_ = {}, ::GlobalNamespace::OVRPlugin::BodyJointLocation JointLocation_61_ = {}, ::GlobalNamespace::OVRPlugin::BodyJointLocation JointLocation_62_ = {}, ::GlobalNamespace::OVRPlugin::BodyJointLocation JointLocation_63_ = {}, ::GlobalNamespace::OVRPlugin::BodyJointLocation JointLocation_64_ = {}, ::GlobalNamespace::OVRPlugin::BodyJointLocation JointLocation_65_ = {}, ::GlobalNamespace::OVRPlugin::BodyJointLocation JointLocation_66_ = {}, ::GlobalNamespace::OVRPlugin::BodyJointLocation JointLocation_67_ = {}, ::GlobalNamespace::OVRPlugin::BodyJointLocation JointLocation_68_ = {}, ::GlobalNamespace::OVRPlugin::BodyJointLocation JointLocation_69_ = {}) noexcept : IsActive{IsActive_}, Confidence{Confidence_}, SkeletonChangedCount{SkeletonChangedCount_}, Time{Time_}, JointLocation_0{JointLocation_0_}, JointLocation_1{JointLocation_1_}, JointLocation_2{JointLocation_2_}, JointLocation_3{JointLocation_3_}, JointLocation_4{JointLocation_4_}, JointLocation_5{JointLocation_5_}, JointLocation_6{JointLocation_6_}, JointLocation_7{JointLocation_7_}, JointLocation_8{JointLocation_8_}, JointLocation_9{JointLocation_9_}, JointLocation_10{JointLocation_10_}, JointLocation_11{JointLocation_11_}, JointLocation_12{JointLocation_12_}, JointLocation_13{JointLocation_13_}, JointLocation_14{JointLocation_14_}, JointLocation_15{JointLocation_15_}, JointLocation_16{JointLocation_16_}, JointLocation_17{JointLocation_17_}, JointLocation_18{JointLocation_18_}, JointLocation_19{JointLocation_19_}, JointLocation_20{JointLocation_20_}, JointLocation_21{JointLocation_21_}, JointLocation_22{JointLocation_22_}, JointLocation_23{JointLocation_23_}, JointLocation_24{JointLocation_24_}, JointLocation_25{JointLocation_25_}, JointLocation_26{JointLocation_26_}, JointLocation_27{JointLocation_27_}, JointLocation_28{JointLocation_28_}, JointLocation_29{JointLocation_29_}, JointLocation_30{JointLocation_30_}, JointLocation_31{JointLocation_31_}, JointLocation_32{JointLocation_32_}, JointLocation_33{JointLocation_33_}, JointLocation_34{JointLocation_34_}, JointLocation_35{JointLocation_35_}, JointLocation_36{JointLocation_36_}, JointLocation_37{JointLocation_37_}, JointLocation_38{JointLocation_38_}, JointLocation_39{JointLocation_39_}, JointLocation_40{JointLocation_40_}, JointLocation_41{JointLocation_41_}, JointLocation_42{JointLocation_42_}, JointLocation_43{JointLocation_43_}, JointLocation_44{JointLocation_44_}, JointLocation_45{JointLocation_45_}, JointLocation_46{JointLocation_46_}, JointLocation_47{JointLocation_47_}, JointLocation_48{JointLocation_48_}, JointLocation_49{JointLocation_49_}, JointLocation_50{JointLocation_50_}, JointLocation_51{JointLocation_51_}, JointLocation_52{JointLocation_52_}, JointLocation_53{JointLocation_53_}, JointLocation_54{JointLocation_54_}, JointLocation_55{JointLocation_55_}, JointLocation_56{JointLocation_56_}, JointLocation_57{JointLocation_57_}, JointLocation_58{JointLocation_58_}, JointLocation_59{JointLocation_59_}, JointLocation_60{JointLocation_60_}, JointLocation_61{JointLocation_61_}, JointLocation_62{JointLocation_62_}, JointLocation_63{JointLocation_63_}, JointLocation_64{JointLocation_64_}, JointLocation_65{JointLocation_65_}, JointLocation_66{JointLocation_66_}, JointLocation_67{JointLocation_67_}, JointLocation_68{JointLocation_68_}, JointLocation_69{JointLocation_69_} {}
    // Creating interface conversion operator: operator ::System::ValueType
    operator ::System::ValueType() noexcept {
      return *reinterpret_cast<::System::ValueType*>(this);
    }
    // Get instance field reference: public OVRPlugin/Bool IsActive
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRPlugin::Bool& dyn_IsActive();
    // Get instance field reference: public System.Single Confidence
    [[deprecated("Use field access instead!")]] float& dyn_Confidence();
    // Get instance field reference: public System.UInt32 SkeletonChangedCount
    [[deprecated("Use field access instead!")]] uint& dyn_SkeletonChangedCount();
    // Get instance field reference: public System.Double Time
    [[deprecated("Use field access instead!")]] double& dyn_Time();
    // Get instance field reference: public OVRPlugin/BodyJointLocation JointLocation_0
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRPlugin::BodyJointLocation& dyn_JointLocation_0();
    // Get instance field reference: public OVRPlugin/BodyJointLocation JointLocation_1
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRPlugin::BodyJointLocation& dyn_JointLocation_1();
    // Get instance field reference: public OVRPlugin/BodyJointLocation JointLocation_2
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRPlugin::BodyJointLocation& dyn_JointLocation_2();
    // Get instance field reference: public OVRPlugin/BodyJointLocation JointLocation_3
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRPlugin::BodyJointLocation& dyn_JointLocation_3();
    // Get instance field reference: public OVRPlugin/BodyJointLocation JointLocation_4
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRPlugin::BodyJointLocation& dyn_JointLocation_4();
    // Get instance field reference: public OVRPlugin/BodyJointLocation JointLocation_5
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRPlugin::BodyJointLocation& dyn_JointLocation_5();
    // Get instance field reference: public OVRPlugin/BodyJointLocation JointLocation_6
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRPlugin::BodyJointLocation& dyn_JointLocation_6();
    // Get instance field reference: public OVRPlugin/BodyJointLocation JointLocation_7
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRPlugin::BodyJointLocation& dyn_JointLocation_7();
    // Get instance field reference: public OVRPlugin/BodyJointLocation JointLocation_8
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRPlugin::BodyJointLocation& dyn_JointLocation_8();
    // Get instance field reference: public OVRPlugin/BodyJointLocation JointLocation_9
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRPlugin::BodyJointLocation& dyn_JointLocation_9();
    // Get instance field reference: public OVRPlugin/BodyJointLocation JointLocation_10
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRPlugin::BodyJointLocation& dyn_JointLocation_10();
    // Get instance field reference: public OVRPlugin/BodyJointLocation JointLocation_11
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRPlugin::BodyJointLocation& dyn_JointLocation_11();
    // Get instance field reference: public OVRPlugin/BodyJointLocation JointLocation_12
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRPlugin::BodyJointLocation& dyn_JointLocation_12();
    // Get instance field reference: public OVRPlugin/BodyJointLocation JointLocation_13
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRPlugin::BodyJointLocation& dyn_JointLocation_13();
    // Get instance field reference: public OVRPlugin/BodyJointLocation JointLocation_14
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRPlugin::BodyJointLocation& dyn_JointLocation_14();
    // Get instance field reference: public OVRPlugin/BodyJointLocation JointLocation_15
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRPlugin::BodyJointLocation& dyn_JointLocation_15();
    // Get instance field reference: public OVRPlugin/BodyJointLocation JointLocation_16
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRPlugin::BodyJointLocation& dyn_JointLocation_16();
    // Get instance field reference: public OVRPlugin/BodyJointLocation JointLocation_17
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRPlugin::BodyJointLocation& dyn_JointLocation_17();
    // Get instance field reference: public OVRPlugin/BodyJointLocation JointLocation_18
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRPlugin::BodyJointLocation& dyn_JointLocation_18();
    // Get instance field reference: public OVRPlugin/BodyJointLocation JointLocation_19
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRPlugin::BodyJointLocation& dyn_JointLocation_19();
    // Get instance field reference: public OVRPlugin/BodyJointLocation JointLocation_20
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRPlugin::BodyJointLocation& dyn_JointLocation_20();
    // Get instance field reference: public OVRPlugin/BodyJointLocation JointLocation_21
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRPlugin::BodyJointLocation& dyn_JointLocation_21();
    // Get instance field reference: public OVRPlugin/BodyJointLocation JointLocation_22
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRPlugin::BodyJointLocation& dyn_JointLocation_22();
    // Get instance field reference: public OVRPlugin/BodyJointLocation JointLocation_23
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRPlugin::BodyJointLocation& dyn_JointLocation_23();
    // Get instance field reference: public OVRPlugin/BodyJointLocation JointLocation_24
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRPlugin::BodyJointLocation& dyn_JointLocation_24();
    // Get instance field reference: public OVRPlugin/BodyJointLocation JointLocation_25
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRPlugin::BodyJointLocation& dyn_JointLocation_25();
    // Get instance field reference: public OVRPlugin/BodyJointLocation JointLocation_26
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRPlugin::BodyJointLocation& dyn_JointLocation_26();
    // Get instance field reference: public OVRPlugin/BodyJointLocation JointLocation_27
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRPlugin::BodyJointLocation& dyn_JointLocation_27();
    // Get instance field reference: public OVRPlugin/BodyJointLocation JointLocation_28
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRPlugin::BodyJointLocation& dyn_JointLocation_28();
    // Get instance field reference: public OVRPlugin/BodyJointLocation JointLocation_29
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRPlugin::BodyJointLocation& dyn_JointLocation_29();
    // Get instance field reference: public OVRPlugin/BodyJointLocation JointLocation_30
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRPlugin::BodyJointLocation& dyn_JointLocation_30();
    // Get instance field reference: public OVRPlugin/BodyJointLocation JointLocation_31
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRPlugin::BodyJointLocation& dyn_JointLocation_31();
    // Get instance field reference: public OVRPlugin/BodyJointLocation JointLocation_32
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRPlugin::BodyJointLocation& dyn_JointLocation_32();
    // Get instance field reference: public OVRPlugin/BodyJointLocation JointLocation_33
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRPlugin::BodyJointLocation& dyn_JointLocation_33();
    // Get instance field reference: public OVRPlugin/BodyJointLocation JointLocation_34
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRPlugin::BodyJointLocation& dyn_JointLocation_34();
    // Get instance field reference: public OVRPlugin/BodyJointLocation JointLocation_35
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRPlugin::BodyJointLocation& dyn_JointLocation_35();
    // Get instance field reference: public OVRPlugin/BodyJointLocation JointLocation_36
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRPlugin::BodyJointLocation& dyn_JointLocation_36();
    // Get instance field reference: public OVRPlugin/BodyJointLocation JointLocation_37
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRPlugin::BodyJointLocation& dyn_JointLocation_37();
    // Get instance field reference: public OVRPlugin/BodyJointLocation JointLocation_38
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRPlugin::BodyJointLocation& dyn_JointLocation_38();
    // Get instance field reference: public OVRPlugin/BodyJointLocation JointLocation_39
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRPlugin::BodyJointLocation& dyn_JointLocation_39();
    // Get instance field reference: public OVRPlugin/BodyJointLocation JointLocation_40
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRPlugin::BodyJointLocation& dyn_JointLocation_40();
    // Get instance field reference: public OVRPlugin/BodyJointLocation JointLocation_41
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRPlugin::BodyJointLocation& dyn_JointLocation_41();
    // Get instance field reference: public OVRPlugin/BodyJointLocation JointLocation_42
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRPlugin::BodyJointLocation& dyn_JointLocation_42();
    // Get instance field reference: public OVRPlugin/BodyJointLocation JointLocation_43
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRPlugin::BodyJointLocation& dyn_JointLocation_43();
    // Get instance field reference: public OVRPlugin/BodyJointLocation JointLocation_44
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRPlugin::BodyJointLocation& dyn_JointLocation_44();
    // Get instance field reference: public OVRPlugin/BodyJointLocation JointLocation_45
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRPlugin::BodyJointLocation& dyn_JointLocation_45();
    // Get instance field reference: public OVRPlugin/BodyJointLocation JointLocation_46
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRPlugin::BodyJointLocation& dyn_JointLocation_46();
    // Get instance field reference: public OVRPlugin/BodyJointLocation JointLocation_47
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRPlugin::BodyJointLocation& dyn_JointLocation_47();
    // Get instance field reference: public OVRPlugin/BodyJointLocation JointLocation_48
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRPlugin::BodyJointLocation& dyn_JointLocation_48();
    // Get instance field reference: public OVRPlugin/BodyJointLocation JointLocation_49
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRPlugin::BodyJointLocation& dyn_JointLocation_49();
    // Get instance field reference: public OVRPlugin/BodyJointLocation JointLocation_50
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRPlugin::BodyJointLocation& dyn_JointLocation_50();
    // Get instance field reference: public OVRPlugin/BodyJointLocation JointLocation_51
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRPlugin::BodyJointLocation& dyn_JointLocation_51();
    // Get instance field reference: public OVRPlugin/BodyJointLocation JointLocation_52
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRPlugin::BodyJointLocation& dyn_JointLocation_52();
    // Get instance field reference: public OVRPlugin/BodyJointLocation JointLocation_53
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRPlugin::BodyJointLocation& dyn_JointLocation_53();
    // Get instance field reference: public OVRPlugin/BodyJointLocation JointLocation_54
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRPlugin::BodyJointLocation& dyn_JointLocation_54();
    // Get instance field reference: public OVRPlugin/BodyJointLocation JointLocation_55
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRPlugin::BodyJointLocation& dyn_JointLocation_55();
    // Get instance field reference: public OVRPlugin/BodyJointLocation JointLocation_56
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRPlugin::BodyJointLocation& dyn_JointLocation_56();
    // Get instance field reference: public OVRPlugin/BodyJointLocation JointLocation_57
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRPlugin::BodyJointLocation& dyn_JointLocation_57();
    // Get instance field reference: public OVRPlugin/BodyJointLocation JointLocation_58
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRPlugin::BodyJointLocation& dyn_JointLocation_58();
    // Get instance field reference: public OVRPlugin/BodyJointLocation JointLocation_59
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRPlugin::BodyJointLocation& dyn_JointLocation_59();
    // Get instance field reference: public OVRPlugin/BodyJointLocation JointLocation_60
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRPlugin::BodyJointLocation& dyn_JointLocation_60();
    // Get instance field reference: public OVRPlugin/BodyJointLocation JointLocation_61
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRPlugin::BodyJointLocation& dyn_JointLocation_61();
    // Get instance field reference: public OVRPlugin/BodyJointLocation JointLocation_62
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRPlugin::BodyJointLocation& dyn_JointLocation_62();
    // Get instance field reference: public OVRPlugin/BodyJointLocation JointLocation_63
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRPlugin::BodyJointLocation& dyn_JointLocation_63();
    // Get instance field reference: public OVRPlugin/BodyJointLocation JointLocation_64
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRPlugin::BodyJointLocation& dyn_JointLocation_64();
    // Get instance field reference: public OVRPlugin/BodyJointLocation JointLocation_65
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRPlugin::BodyJointLocation& dyn_JointLocation_65();
    // Get instance field reference: public OVRPlugin/BodyJointLocation JointLocation_66
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRPlugin::BodyJointLocation& dyn_JointLocation_66();
    // Get instance field reference: public OVRPlugin/BodyJointLocation JointLocation_67
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRPlugin::BodyJointLocation& dyn_JointLocation_67();
    // Get instance field reference: public OVRPlugin/BodyJointLocation JointLocation_68
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRPlugin::BodyJointLocation& dyn_JointLocation_68();
    // Get instance field reference: public OVRPlugin/BodyJointLocation JointLocation_69
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRPlugin::BodyJointLocation& dyn_JointLocation_69();
  }; // OVRPlugin/BodyStateInternal
  #pragma pack(pop)
  static check_size<sizeof(OVRPlugin::BodyStateInternal), 2784 + sizeof(::GlobalNamespace::OVRPlugin::BodyJointLocation)> __GlobalNamespace_OVRPlugin_BodyStateInternalSizeCheck;
  static_assert(sizeof(OVRPlugin::BodyStateInternal) == 0xB04);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
