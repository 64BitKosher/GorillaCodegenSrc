// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Gorillanalytics
#include "GlobalNamespace/Gorillanalytics.hpp"
// Including type: GorillaNetworking.CosmeticsController/CosmeticItem
#include "GorillaNetworking/CosmeticsController.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Action`1<T>
  template<typename T>
  class Action_1;
  // Forward declaring type: Func`2<T, TResult>
  template<typename T, typename TResult>
  class Func_2;
}
// Forward declaring namespace: PlayFab
namespace PlayFab {
  // Forward declaring type: PlayFabError
  class PlayFabError;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::Gorillanalytics::$$c);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::Gorillanalytics::$$c*, "", "Gorillanalytics/<>c");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: Gorillanalytics/<>c
  // [TokenAttribute] Offset: FFFFFFFF
  // [CompilerGeneratedAttribute] Offset: FFFFFFFF
  class Gorillanalytics::$$c : public ::Il2CppObject {
    public:
    // Get static field: static public readonly Gorillanalytics/<>c <>9
    static ::GlobalNamespace::Gorillanalytics::$$c* _get_$$9();
    // Set static field: static public readonly Gorillanalytics/<>c <>9
    static void _set_$$9(::GlobalNamespace::Gorillanalytics::$$c* value);
    // Get static field: static public System.Action`1<PlayFab.PlayFabError> <>9__8_1
    static ::System::Action_1<::PlayFab::PlayFabError*>* _get_$$9__8_1();
    // Set static field: static public System.Action`1<PlayFab.PlayFabError> <>9__8_1
    static void _set_$$9__8_1(::System::Action_1<::PlayFab::PlayFabError*>* value);
    // Get static field: static public System.Func`2<GorillaNetworking.CosmeticsController/CosmeticItem,System.String> <>9__9_0
    static ::System::Func_2<::GorillaNetworking::CosmeticsController::CosmeticItem, ::StringW>* _get_$$9__9_0();
    // Set static field: static public System.Func`2<GorillaNetworking.CosmeticsController/CosmeticItem,System.String> <>9__9_0
    static void _set_$$9__9_0(::System::Func_2<::GorillaNetworking::CosmeticsController::CosmeticItem, ::StringW>* value);
    // Get static field: static public System.Func`2<GorillaNetworking.CosmeticsController/CosmeticItem,System.String> <>9__9_1
    static ::System::Func_2<::GorillaNetworking::CosmeticsController::CosmeticItem, ::StringW>* _get_$$9__9_1();
    // Set static field: static public System.Func`2<GorillaNetworking.CosmeticsController/CosmeticItem,System.String> <>9__9_1
    static void _set_$$9__9_1(::System::Func_2<::GorillaNetworking::CosmeticsController::CosmeticItem, ::StringW>* value);
    // static private System.Void .cctor()
    // Offset: 0x2711748
    static void _cctor();
    // public System.Void .ctor()
    // Offset: 0x27117B0
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static Gorillanalytics::$$c* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Gorillanalytics::$$c::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<Gorillanalytics::$$c*, creationType>()));
    }
    // System.Void <Start>b__8_1(PlayFab.PlayFabError e)
    // Offset: 0x27117B8
    void $Start$b__8_1(::PlayFab::PlayFabError* e);
    // System.String <UploadGorillanalytics>b__9_0(GorillaNetworking.CosmeticsController/CosmeticItem c)
    // Offset: 0x27117BC
    ::StringW $UploadGorillanalytics$b__9_0(::GorillaNetworking::CosmeticsController::CosmeticItem c);
    // System.String <UploadGorillanalytics>b__9_1(GorillaNetworking.CosmeticsController/CosmeticItem c)
    // Offset: 0x27117C4
    ::StringW $UploadGorillanalytics$b__9_1(::GorillaNetworking::CosmeticsController::CosmeticItem c);
  }; // Gorillanalytics/<>c
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::Gorillanalytics::$$c::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&GlobalNamespace::Gorillanalytics::$$c::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::Gorillanalytics::$$c*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::Gorillanalytics::$$c::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: GlobalNamespace::Gorillanalytics::$$c::$Start$b__8_1
// Il2CppName: <Start>b__8_1
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::Gorillanalytics::$$c::*)(::PlayFab::PlayFabError*)>(&GlobalNamespace::Gorillanalytics::$$c::$Start$b__8_1)> {
  static const MethodInfo* get() {
    static auto* e = &::il2cpp_utils::GetClassFromName("PlayFab", "PlayFabError")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::Gorillanalytics::$$c*), "<Start>b__8_1", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{e});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::Gorillanalytics::$$c::$UploadGorillanalytics$b__9_0
// Il2CppName: <UploadGorillanalytics>b__9_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (GlobalNamespace::Gorillanalytics::$$c::*)(::GorillaNetworking::CosmeticsController::CosmeticItem)>(&GlobalNamespace::Gorillanalytics::$$c::$UploadGorillanalytics$b__9_0)> {
  static const MethodInfo* get() {
    static auto* c = &::il2cpp_utils::GetClassFromName("GorillaNetworking", "CosmeticsController/CosmeticItem")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::Gorillanalytics::$$c*), "<UploadGorillanalytics>b__9_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{c});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::Gorillanalytics::$$c::$UploadGorillanalytics$b__9_1
// Il2CppName: <UploadGorillanalytics>b__9_1
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (GlobalNamespace::Gorillanalytics::$$c::*)(::GorillaNetworking::CosmeticsController::CosmeticItem)>(&GlobalNamespace::Gorillanalytics::$$c::$UploadGorillanalytics$b__9_1)> {
  static const MethodInfo* get() {
    static auto* c = &::il2cpp_utils::GetClassFromName("GorillaNetworking", "CosmeticsController/CosmeticItem")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::Gorillanalytics::$$c*), "<UploadGorillanalytics>b__9_1", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{c});
  }
};
