// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: OVRPlugin
#include "GlobalNamespace/OVRPlugin.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Including type: System.Guid
#include "System/Guid.hpp"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
// Completed includes
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::OVRPlugin::RoomLayout, "", "OVRPlugin/RoomLayout");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x28
  #pragma pack(push, 1)
  // WARNING Layout: Sequential may not be correctly taken into account!
  // Autogenerated type: OVRPlugin/RoomLayout
  // [TokenAttribute] Offset: FFFFFFFF
  struct OVRPlugin::RoomLayout/*, public ::System::ValueType*/ {
    public:
    public:
    // public System.Guid floorUuid
    // Size: 0x10
    // Offset: 0x0
    ::System::Guid floorUuid;
    // Field size check
    static_assert(sizeof(::System::Guid) == 0x10);
    // public System.Guid ceilingUuid
    // Size: 0x10
    // Offset: 0x10
    ::System::Guid ceilingUuid;
    // Field size check
    static_assert(sizeof(::System::Guid) == 0x10);
    // public System.Guid[] wallUuids
    // Size: 0x8
    // Offset: 0x20
    ::ArrayW<::System::Guid> wallUuids;
    // Field size check
    static_assert(sizeof(::ArrayW<::System::Guid>) == 0x8);
    public:
    // Creating value type constructor for type: RoomLayout
    constexpr RoomLayout(::System::Guid floorUuid_ = {}, ::System::Guid ceilingUuid_ = {}, ::ArrayW<::System::Guid> wallUuids_ = ::ArrayW<::System::Guid>(static_cast<void*>(nullptr))) noexcept : floorUuid{floorUuid_}, ceilingUuid{ceilingUuid_}, wallUuids{wallUuids_} {}
    // Creating interface conversion operator: operator ::System::ValueType
    operator ::System::ValueType() noexcept {
      return *reinterpret_cast<::System::ValueType*>(this);
    }
    // Get instance field reference: public System.Guid floorUuid
    [[deprecated("Use field access instead!")]] ::System::Guid& dyn_floorUuid();
    // Get instance field reference: public System.Guid ceilingUuid
    [[deprecated("Use field access instead!")]] ::System::Guid& dyn_ceilingUuid();
    // Get instance field reference: public System.Guid[] wallUuids
    [[deprecated("Use field access instead!")]] ::ArrayW<::System::Guid>& dyn_wallUuids();
  }; // OVRPlugin/RoomLayout
  #pragma pack(pop)
  static check_size<sizeof(OVRPlugin::RoomLayout), 32 + sizeof(::ArrayW<::System::Guid>)> __GlobalNamespace_OVRPlugin_RoomLayoutSizeCheck;
  static_assert(sizeof(OVRPlugin::RoomLayout) == 0x28);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
