// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Interop/NetSecurityNative
#include "GlobalNamespace/Interop__NetSecurityNative.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: Interop/NetSecurityNative/Status
#include "GlobalNamespace/Interop__NetSecurityNative_Status.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::Interop_::NetSecurityNative::GssApiException);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::Interop_::NetSecurityNative::GssApiException*, "", "Interop/NetSecurityNative/GssApiException");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x90
  #pragma pack(push, 1)
  // Autogenerated type: Interop/NetSecurityNative/GssApiException
  // [TokenAttribute] Offset: FFFFFFFF
  class Interop_::NetSecurityNative::GssApiException : public ::System::Exception {
    public:
    public:
    // private readonly Interop/NetSecurityNative/Status _minorStatus
    // Size: 0x4
    // Offset: 0x8C
    ::GlobalNamespace::Interop_::NetSecurityNative::Status minorStatus;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::Interop_::NetSecurityNative::Status) == 0x4);
    public:
    // Creating conversion operator: operator ::GlobalNamespace::Interop_::NetSecurityNative::Status
    constexpr operator ::GlobalNamespace::Interop_::NetSecurityNative::Status() const noexcept {
      return minorStatus;
    }
    // Get instance field reference: private readonly Interop/NetSecurityNative/Status _minorStatus
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::Interop_::NetSecurityNative::Status& dyn__minorStatus();
    // public System.Void .ctor(System.String message)
    // Offset: 0x4BEF200
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static Interop_::NetSecurityNative::GssApiException* New_ctor(::StringW message) {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop_::NetSecurityNative::GssApiException::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<Interop_::NetSecurityNative::GssApiException*, creationType>(message)));
    }
    // public System.Void .ctor(Interop/NetSecurityNative/Status majorStatus, Interop/NetSecurityNative/Status minorStatus)
    // Offset: 0x4BEF268
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static Interop_::NetSecurityNative::GssApiException* New_ctor(::GlobalNamespace::Interop_::NetSecurityNative::Status majorStatus, ::GlobalNamespace::Interop_::NetSecurityNative::Status minorStatus) {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop_::NetSecurityNative::GssApiException::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<Interop_::NetSecurityNative::GssApiException*, creationType>(majorStatus, minorStatus)));
    }
    // static private System.String GetGssApiDisplayStatus(Interop/NetSecurityNative/Status majorStatus, Interop/NetSecurityNative/Status minorStatus, System.String helpText)
    // Offset: 0x4BEF2F8
    static ::StringW GetGssApiDisplayStatus(::GlobalNamespace::Interop_::NetSecurityNative::Status majorStatus, ::GlobalNamespace::Interop_::NetSecurityNative::Status minorStatus, ::StringW helpText);
    // static private System.String GetGssApiDisplayStatus(Interop/NetSecurityNative/Status status, System.Boolean isMinor)
    // Offset: 0x4BEF4D0
    static ::StringW GetGssApiDisplayStatus(::GlobalNamespace::Interop_::NetSecurityNative::Status status, bool isMinor);
  }; // Interop/NetSecurityNative/GssApiException
  #pragma pack(pop)
  static check_size<sizeof(Interop_::NetSecurityNative::GssApiException), 140 + sizeof(::GlobalNamespace::Interop_::NetSecurityNative::Status)> __GlobalNamespace_Interop__NetSecurityNative_GssApiExceptionSizeCheck;
  static_assert(sizeof(Interop_::NetSecurityNative::GssApiException) == 0x90);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::Interop_::NetSecurityNative::GssApiException::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: GlobalNamespace::Interop_::NetSecurityNative::GssApiException::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: GlobalNamespace::Interop_::NetSecurityNative::GssApiException::GetGssApiDisplayStatus
// Il2CppName: GetGssApiDisplayStatus
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::GlobalNamespace::Interop_::NetSecurityNative::Status, ::GlobalNamespace::Interop_::NetSecurityNative::Status, ::StringW)>(&GlobalNamespace::Interop_::NetSecurityNative::GssApiException::GetGssApiDisplayStatus)> {
  static const MethodInfo* get() {
    static auto* majorStatus = &::il2cpp_utils::GetClassFromName("", "Interop/NetSecurityNative/Status")->byval_arg;
    static auto* minorStatus = &::il2cpp_utils::GetClassFromName("", "Interop/NetSecurityNative/Status")->byval_arg;
    static auto* helpText = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::Interop_::NetSecurityNative::GssApiException*), "GetGssApiDisplayStatus", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{majorStatus, minorStatus, helpText});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::Interop_::NetSecurityNative::GssApiException::GetGssApiDisplayStatus
// Il2CppName: GetGssApiDisplayStatus
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::GlobalNamespace::Interop_::NetSecurityNative::Status, bool)>(&GlobalNamespace::Interop_::NetSecurityNative::GssApiException::GetGssApiDisplayStatus)> {
  static const MethodInfo* get() {
    static auto* status = &::il2cpp_utils::GetClassFromName("", "Interop/NetSecurityNative/Status")->byval_arg;
    static auto* isMinor = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::Interop_::NetSecurityNative::GssApiException*), "GetGssApiDisplayStatus", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{status, isMinor});
  }
};
