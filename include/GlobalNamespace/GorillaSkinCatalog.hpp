// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.ScriptableObject
#include "UnityEngine/ScriptableObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: GorillaSkin
  class GorillaSkin;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Forward declaring type: GorillaSkinCatalog
  class GorillaSkinCatalog;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::GorillaSkinCatalog);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::GorillaSkinCatalog*, "", "GorillaSkinCatalog");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x20
  #pragma pack(push, 1)
  // Autogenerated type: GorillaSkinCatalog
  // [TokenAttribute] Offset: FFFFFFFF
  class GorillaSkinCatalog : public ::UnityEngine::ScriptableObject {
    public:
    public:
    // public GorillaSkin[] skins
    // Size: 0x8
    // Offset: 0x18
    ::ArrayW<::GlobalNamespace::GorillaSkin*> skins;
    // Field size check
    static_assert(sizeof(::ArrayW<::GlobalNamespace::GorillaSkin*>) == 0x8);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: public GorillaSkin[] skins
    [[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::GorillaSkin*>& dyn_skins();
    // public System.Void .ctor()
    // Offset: 0x278A77C
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static GorillaSkinCatalog* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaSkinCatalog::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<GorillaSkinCatalog*, creationType>()));
    }
  }; // GorillaSkinCatalog
  #pragma pack(pop)
  static check_size<sizeof(GorillaSkinCatalog), 24 + sizeof(::ArrayW<::GlobalNamespace::GorillaSkin*>)> __GlobalNamespace_GorillaSkinCatalogSizeCheck;
  static_assert(sizeof(GorillaSkinCatalog) == 0x20);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::GorillaSkinCatalog::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
