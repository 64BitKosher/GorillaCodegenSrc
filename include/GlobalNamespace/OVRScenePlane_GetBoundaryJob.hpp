// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: OVRScenePlane
#include "GlobalNamespace/OVRScenePlane.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Including type: Unity.Jobs.IJob
#include "Unity/Jobs/IJob.hpp"
// Including type: OVRSpace
#include "GlobalNamespace/OVRSpace.hpp"
// Including type: Unity.Collections.NativeArray`1
#include "Unity/Collections/NativeArray_1.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
// Completed includes
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::OVRScenePlane::GetBoundaryJob, "", "OVRScenePlane/GetBoundaryJob");
// Type namespace: 
namespace GlobalNamespace {
  // WARNING Size may be invalid!
  // WARNING Layout: Sequential may not be correctly taken into account!
  // Autogenerated type: OVRScenePlane/GetBoundaryJob
  // [TokenAttribute] Offset: FFFFFFFF
  struct OVRScenePlane::GetBoundaryJob/*, public ::System::ValueType, public ::Unity::Jobs::IJob*/ {
    public:
    public:
    // public OVRSpace Space
    // Size: 0x8
    // Offset: 0x0
    ::GlobalNamespace::OVRSpace Space;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::OVRSpace) == 0x8);
    // public Unity.Collections.NativeArray`1<UnityEngine.Vector2> Boundary
    // Size: 0xFFFFFFFF
    // Offset: 0x8
    ::Unity::Collections::NativeArray_1<::UnityEngine::Vector2> Boundary;
    // public Unity.Collections.NativeArray`1<UnityEngine.Vector2> PreviousBoundary
    // Size: 0xFFFFFFFF
    // Offset: 0x18
    ::Unity::Collections::NativeArray_1<::UnityEngine::Vector2> PreviousBoundary;
    public:
    // Creating value type constructor for type: GetBoundaryJob
    constexpr GetBoundaryJob(::GlobalNamespace::OVRSpace Space_ = {}, ::Unity::Collections::NativeArray_1<::UnityEngine::Vector2> Boundary_ = {}, ::Unity::Collections::NativeArray_1<::UnityEngine::Vector2> PreviousBoundary_ = {}) noexcept : Space{Space_}, Boundary{Boundary_}, PreviousBoundary{PreviousBoundary_} {}
    // Creating interface conversion operator: operator ::System::ValueType
    operator ::System::ValueType() noexcept {
      return *reinterpret_cast<::System::ValueType*>(this);
    }
    // Creating interface conversion operator: operator ::Unity::Jobs::IJob
    operator ::Unity::Jobs::IJob() noexcept {
      return *reinterpret_cast<::Unity::Jobs::IJob*>(this);
    }
    // Get instance field reference: public OVRSpace Space
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRSpace& dyn_Space();
    // Get instance field reference: public Unity.Collections.NativeArray`1<UnityEngine.Vector2> Boundary
    [[deprecated("Use field access instead!")]] ::Unity::Collections::NativeArray_1<::UnityEngine::Vector2>& dyn_Boundary();
    // Get instance field reference: public Unity.Collections.NativeArray`1<UnityEngine.Vector2> PreviousBoundary
    [[deprecated("Use field access instead!")]] ::Unity::Collections::NativeArray_1<::UnityEngine::Vector2>& dyn_PreviousBoundary();
    // private System.Boolean HasBoundaryChanged()
    // Offset: 0x4923C28
    bool HasBoundaryChanged();
    // static private System.Void SetNaN(Unity.Collections.NativeArray`1<UnityEngine.Vector2> array)
    // Offset: 0x4923CCC
    static void SetNaN(::Unity::Collections::NativeArray_1<::UnityEngine::Vector2> array);
    // public System.Void Execute()
    // Offset: 0x4923CE0
    void Execute();
  }; // OVRScenePlane/GetBoundaryJob
  // WARNING Not writing size check since size may be invalid!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::OVRScenePlane::GetBoundaryJob::HasBoundaryChanged
// Il2CppName: HasBoundaryChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (GlobalNamespace::OVRScenePlane::GetBoundaryJob::*)()>(&GlobalNamespace::OVRScenePlane::GetBoundaryJob::HasBoundaryChanged)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::OVRScenePlane::GetBoundaryJob), "HasBoundaryChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::OVRScenePlane::GetBoundaryJob::SetNaN
// Il2CppName: SetNaN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Unity::Collections::NativeArray_1<::UnityEngine::Vector2>)>(&GlobalNamespace::OVRScenePlane::GetBoundaryJob::SetNaN)> {
  static const MethodInfo* get() {
    static auto* array = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("Unity.Collections", "NativeArray`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine", "Vector2")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::OVRScenePlane::GetBoundaryJob), "SetNaN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{array});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::OVRScenePlane::GetBoundaryJob::Execute
// Il2CppName: Execute
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::OVRScenePlane::GetBoundaryJob::*)()>(&GlobalNamespace::OVRScenePlane::GetBoundaryJob::Execute)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::OVRScenePlane::GetBoundaryJob), "Execute", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
