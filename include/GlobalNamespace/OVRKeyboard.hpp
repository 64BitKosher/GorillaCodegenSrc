// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: OVRPlugin
#include "GlobalNamespace/OVRPlugin.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Forward declaring type: OVRKeyboard
  class OVRKeyboard;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::OVRKeyboard);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::OVRKeyboard*, "", "OVRKeyboard");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: OVRKeyboard
  // [TokenAttribute] Offset: FFFFFFFF
  class OVRKeyboard : public ::Il2CppObject {
    public:
    // Nested type: ::GlobalNamespace::OVRKeyboard::TrackedKeyboardState
    struct TrackedKeyboardState;
    // Nested type: ::GlobalNamespace::OVRKeyboard::TrackedKeyboardInfo
    struct TrackedKeyboardInfo;
    // static public OVRKeyboard/TrackedKeyboardState GetKeyboardState()
    // Offset: 0x492FB0C
    static ::GlobalNamespace::OVRKeyboard::TrackedKeyboardState GetKeyboardState();
    // static public System.Boolean GetSystemKeyboardInfo(OVRPlugin/TrackedKeyboardQueryFlags keyboardQueryFlags, out OVRKeyboard/TrackedKeyboardInfo keyboardInfo)
    // Offset: 0x492FC54
    static bool GetSystemKeyboardInfo(::GlobalNamespace::OVRPlugin::TrackedKeyboardQueryFlags keyboardQueryFlags, ByRef<::GlobalNamespace::OVRKeyboard::TrackedKeyboardInfo> keyboardInfo);
    // static public System.Boolean StopKeyboardTracking(OVRKeyboard/TrackedKeyboardInfo keyboardInfo)
    // Offset: 0x492FD4C
    static bool StopKeyboardTracking(::GlobalNamespace::OVRKeyboard::TrackedKeyboardInfo keyboardInfo);
  }; // OVRKeyboard
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::OVRKeyboard::GetKeyboardState
// Il2CppName: GetKeyboardState
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::OVRKeyboard::TrackedKeyboardState (*)()>(&GlobalNamespace::OVRKeyboard::GetKeyboardState)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::OVRKeyboard*), "GetKeyboardState", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::OVRKeyboard::GetSystemKeyboardInfo
// Il2CppName: GetSystemKeyboardInfo
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::GlobalNamespace::OVRPlugin::TrackedKeyboardQueryFlags, ByRef<::GlobalNamespace::OVRKeyboard::TrackedKeyboardInfo>)>(&GlobalNamespace::OVRKeyboard::GetSystemKeyboardInfo)> {
  static const MethodInfo* get() {
    static auto* keyboardQueryFlags = &::il2cpp_utils::GetClassFromName("", "OVRPlugin/TrackedKeyboardQueryFlags")->byval_arg;
    static auto* keyboardInfo = &::il2cpp_utils::GetClassFromName("", "OVRKeyboard/TrackedKeyboardInfo")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::OVRKeyboard*), "GetSystemKeyboardInfo", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{keyboardQueryFlags, keyboardInfo});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::OVRKeyboard::StopKeyboardTracking
// Il2CppName: StopKeyboardTracking
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::GlobalNamespace::OVRKeyboard::TrackedKeyboardInfo)>(&GlobalNamespace::OVRKeyboard::StopKeyboardTracking)> {
  static const MethodInfo* get() {
    static auto* keyboardInfo = &::il2cpp_utils::GetClassFromName("", "OVRKeyboard/TrackedKeyboardInfo")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::OVRKeyboard*), "StopKeyboardTracking", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{keyboardInfo});
  }
};
