// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Including type: UnityEngine.Jobs.TransformAccessArray
#include "UnityEngine/Jobs/TransformAccessArray.hpp"
// Including type: Unity.Collections.NativeList`1
#include "Unity/Collections/NativeList_1.hpp"
// Completed includes
// Type namespace: 
namespace GlobalNamespace {
  // Forward declaring type: BuilderTableMeshInstances
  struct BuilderTableMeshInstances;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::BuilderTableMeshInstances, "", "BuilderTableMeshInstances");
// Type namespace: 
namespace GlobalNamespace {
  // WARNING Size may be invalid!
  // WARNING Layout: Sequential may not be correctly taken into account!
  // Autogenerated type: BuilderTableMeshInstances
  // [TokenAttribute] Offset: FFFFFFFF
  struct BuilderTableMeshInstances/*, public ::System::ValueType*/ {
    public:
    public:
    // public UnityEngine.Jobs.TransformAccessArray transforms
    // Size: 0x8
    // Offset: 0x0
    ::UnityEngine::Jobs::TransformAccessArray transforms;
    // Field size check
    static_assert(sizeof(::UnityEngine::Jobs::TransformAccessArray) == 0x8);
    // public Unity.Collections.NativeList`1<System.Int32> texIndex
    // Size: 0xFFFFFFFF
    // Offset: 0x8
    ::Unity::Collections::NativeList_1<int> texIndex;
    // public Unity.Collections.NativeList`1<System.Single> tint
    // Size: 0xFFFFFFFF
    // Offset: 0x10
    ::Unity::Collections::NativeList_1<float> tint;
    public:
    // Creating value type constructor for type: BuilderTableMeshInstances
    constexpr BuilderTableMeshInstances(::UnityEngine::Jobs::TransformAccessArray transforms_ = {}, ::Unity::Collections::NativeList_1<int> texIndex_ = {}, ::Unity::Collections::NativeList_1<float> tint_ = {}) noexcept : transforms{transforms_}, texIndex{texIndex_}, tint{tint_} {}
    // Creating interface conversion operator: operator ::System::ValueType
    operator ::System::ValueType() noexcept {
      return *reinterpret_cast<::System::ValueType*>(this);
    }
    // Get instance field reference: public UnityEngine.Jobs.TransformAccessArray transforms
    [[deprecated("Use field access instead!")]] ::UnityEngine::Jobs::TransformAccessArray& dyn_transforms();
    // Get instance field reference: public Unity.Collections.NativeList`1<System.Int32> texIndex
    [[deprecated("Use field access instead!")]] ::Unity::Collections::NativeList_1<int>& dyn_texIndex();
    // Get instance field reference: public Unity.Collections.NativeList`1<System.Single> tint
    [[deprecated("Use field access instead!")]] ::Unity::Collections::NativeList_1<float>& dyn_tint();
  }; // BuilderTableMeshInstances
  // WARNING Not writing size check since size may be invalid!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
