// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Type namespace: 
namespace GlobalNamespace {
  // Forward declaring type: IUserCosmeticsCallback
  class IUserCosmeticsCallback;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::IUserCosmeticsCallback);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::IUserCosmeticsCallback*, "", "IUserCosmeticsCallback");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x0
  #pragma pack(push, 1)
  // Autogenerated type: IUserCosmeticsCallback
  // [TokenAttribute] Offset: FFFFFFFF
  class IUserCosmeticsCallback {
    public:
    // public System.Boolean OnGetUserCosmetics(System.String cosmetics)
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool OnGetUserCosmetics(::StringW cosmetics);
    // public System.Boolean get_PendingUpdate()
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool get_PendingUpdate();
    // public System.Void set_PendingUpdate(System.Boolean value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void set_PendingUpdate(bool value);
  }; // IUserCosmeticsCallback
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::IUserCosmeticsCallback::OnGetUserCosmetics
// Il2CppName: OnGetUserCosmetics
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (GlobalNamespace::IUserCosmeticsCallback::*)(::StringW)>(&GlobalNamespace::IUserCosmeticsCallback::OnGetUserCosmetics)> {
  static const MethodInfo* get() {
    static auto* cosmetics = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::IUserCosmeticsCallback*), "OnGetUserCosmetics", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{cosmetics});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::IUserCosmeticsCallback::get_PendingUpdate
// Il2CppName: get_PendingUpdate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (GlobalNamespace::IUserCosmeticsCallback::*)()>(&GlobalNamespace::IUserCosmeticsCallback::get_PendingUpdate)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::IUserCosmeticsCallback*), "get_PendingUpdate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::IUserCosmeticsCallback::set_PendingUpdate
// Il2CppName: set_PendingUpdate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::IUserCosmeticsCallback::*)(bool)>(&GlobalNamespace::IUserCosmeticsCallback::set_PendingUpdate)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::IUserCosmeticsCallback*), "set_PendingUpdate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
