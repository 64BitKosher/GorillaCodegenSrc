// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: DateTime
  struct DateTime;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Forward declaring type: StaticHashExt
  class StaticHashExt;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::StaticHashExt);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::StaticHashExt*, "", "StaticHashExt");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: StaticHashExt
  // [TokenAttribute] Offset: FFFFFFFF
  // [ExtensionAttribute] Offset: FFFFFFFF
  class StaticHashExt : public ::Il2CppObject {
    public:
    // static public System.Int32 GetStaticHash(System.Int32 i)
    // Offset: 0x27812B4
    static int GetStaticHash(int i);
    // static public System.Int32 GetStaticHash(System.UInt32 u)
    // Offset: 0x2781318
    static int GetStaticHash(uint u);
    // static public System.Int32 GetStaticHash(System.Single f)
    // Offset: 0x278137C
    static int GetStaticHash(float f);
    // static public System.Int32 GetStaticHash(System.Int64 l)
    // Offset: 0x27813E4
    static int GetStaticHash(int64_t l);
    // static public System.Int32 GetStaticHash(System.Double d)
    // Offset: 0x278140C
    static int GetStaticHash(double d);
    // static public System.Int32 GetStaticHash(System.Boolean b)
    // Offset: 0x2781438
    static int GetStaticHash(bool b);
    // static public System.Int32 GetStaticHash(System.DateTime dt)
    // Offset: 0x2781454
    static int GetStaticHash(::System::DateTime dt);
    // static public System.Int32 GetStaticHash(System.String s)
    // Offset: 0x2781494
    static int GetStaticHash(::StringW s);
    // static public System.Int32 GetStaticHash(System.Byte[] bytes)
    // Offset: 0x278156C
    static int GetStaticHash(::ArrayW<uint8_t> bytes);
  }; // StaticHashExt
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::StaticHashExt::GetStaticHash
// Il2CppName: GetStaticHash
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(int)>(&GlobalNamespace::StaticHashExt::GetStaticHash)> {
  static const MethodInfo* get() {
    static auto* i = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::StaticHashExt*), "GetStaticHash", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{i});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::StaticHashExt::GetStaticHash
// Il2CppName: GetStaticHash
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(uint)>(&GlobalNamespace::StaticHashExt::GetStaticHash)> {
  static const MethodInfo* get() {
    static auto* u = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::StaticHashExt*), "GetStaticHash", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{u});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::StaticHashExt::GetStaticHash
// Il2CppName: GetStaticHash
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(float)>(&GlobalNamespace::StaticHashExt::GetStaticHash)> {
  static const MethodInfo* get() {
    static auto* f = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::StaticHashExt*), "GetStaticHash", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{f});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::StaticHashExt::GetStaticHash
// Il2CppName: GetStaticHash
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(int64_t)>(&GlobalNamespace::StaticHashExt::GetStaticHash)> {
  static const MethodInfo* get() {
    static auto* l = &::il2cpp_utils::GetClassFromName("System", "Int64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::StaticHashExt*), "GetStaticHash", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{l});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::StaticHashExt::GetStaticHash
// Il2CppName: GetStaticHash
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(double)>(&GlobalNamespace::StaticHashExt::GetStaticHash)> {
  static const MethodInfo* get() {
    static auto* d = &::il2cpp_utils::GetClassFromName("System", "Double")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::StaticHashExt*), "GetStaticHash", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{d});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::StaticHashExt::GetStaticHash
// Il2CppName: GetStaticHash
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(bool)>(&GlobalNamespace::StaticHashExt::GetStaticHash)> {
  static const MethodInfo* get() {
    static auto* b = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::StaticHashExt*), "GetStaticHash", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{b});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::StaticHashExt::GetStaticHash
// Il2CppName: GetStaticHash
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::System::DateTime)>(&GlobalNamespace::StaticHashExt::GetStaticHash)> {
  static const MethodInfo* get() {
    static auto* dt = &::il2cpp_utils::GetClassFromName("System", "DateTime")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::StaticHashExt*), "GetStaticHash", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{dt});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::StaticHashExt::GetStaticHash
// Il2CppName: GetStaticHash
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::StringW)>(&GlobalNamespace::StaticHashExt::GetStaticHash)> {
  static const MethodInfo* get() {
    static auto* s = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::StaticHashExt*), "GetStaticHash", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{s});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::StaticHashExt::GetStaticHash
// Il2CppName: GetStaticHash
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::ArrayW<uint8_t>)>(&GlobalNamespace::StaticHashExt::GetStaticHash)> {
  static const MethodInfo* get() {
    static auto* bytes = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::StaticHashExt*), "GetStaticHash", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{bytes});
  }
};
