// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Photon.Voice.Unity.UnityAudioOut
#include "Photon/Voice/Unity/UnityAudioOut.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: SpeakerVoiceToLoudness
  class SpeakerVoiceToLoudness;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: AudioSource
  class AudioSource;
}
// Forward declaring namespace: Photon::Voice
namespace Photon::Voice {
  // Forward declaring type: ILogger
  class ILogger;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Forward declaring type: SpeakerVoiceLoudnessAudioOut
  class SpeakerVoiceLoudnessAudioOut;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::SpeakerVoiceLoudnessAudioOut);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::SpeakerVoiceLoudnessAudioOut*, "", "SpeakerVoiceLoudnessAudioOut");
// Type namespace: 
namespace GlobalNamespace {
  // WARNING Size may be invalid!
  // Autogenerated type: SpeakerVoiceLoudnessAudioOut
  // [TokenAttribute] Offset: FFFFFFFF
  class SpeakerVoiceLoudnessAudioOut : public ::Photon::Voice::Unity::UnityAudioOut {
    public:
    public:
    // private SpeakerVoiceToLoudness voiceToLoudness
    // Size: 0x8
    // Offset: 0xB8
    ::GlobalNamespace::SpeakerVoiceToLoudness* voiceToLoudness;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::SpeakerVoiceToLoudness*) == 0x8);
    public:
    // Creating conversion operator: operator ::GlobalNamespace::SpeakerVoiceToLoudness*
    constexpr operator ::GlobalNamespace::SpeakerVoiceToLoudness*() const noexcept {
      return voiceToLoudness;
    }
    // Get instance field reference: private SpeakerVoiceToLoudness voiceToLoudness
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::SpeakerVoiceToLoudness*& dyn_voiceToLoudness();
    // public System.Void .ctor(SpeakerVoiceToLoudness speaker, UnityEngine.AudioSource audioSource, Photon.Voice.AudioOutDelayControl/PlayDelayConfig playDelayConfig, Photon.Voice.ILogger logger, System.String logPrefix, System.Boolean debugInfo)
    // Offset: 0x28961D4
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static SpeakerVoiceLoudnessAudioOut* New_ctor(::GlobalNamespace::SpeakerVoiceToLoudness* speaker, ::UnityEngine::AudioSource* audioSource, ::Photon::Voice::AudioOutDelayControl::PlayDelayConfig* playDelayConfig, ::Photon::Voice::ILogger* logger, ::StringW logPrefix, bool debugInfo) {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SpeakerVoiceLoudnessAudioOut::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<SpeakerVoiceLoudnessAudioOut*, creationType>(speaker, audioSource, playDelayConfig, logger, logPrefix, debugInfo)));
    }
    // public override System.Void OutWrite(System.Single[] data, System.Int32 offsetSamples)
    // Offset: 0x289621C
    // Implemented from: Photon.Voice.Unity.UnityAudioOut
    // Base method: System.Void UnityAudioOut::OutWrite(System.Single[] data, System.Int32 offsetSamples)
    void OutWrite(::ArrayW<float> data, int offsetSamples);
  }; // SpeakerVoiceLoudnessAudioOut
  // WARNING Not writing size check since size may be invalid!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::SpeakerVoiceLoudnessAudioOut::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: GlobalNamespace::SpeakerVoiceLoudnessAudioOut::OutWrite
// Il2CppName: OutWrite
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::SpeakerVoiceLoudnessAudioOut::*)(::ArrayW<float>, int)>(&GlobalNamespace::SpeakerVoiceLoudnessAudioOut::OutWrite)> {
  static const MethodInfo* get() {
    static auto* data = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Single"), 1)->byval_arg;
    static auto* offsetSamples = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::SpeakerVoiceLoudnessAudioOut*), "OutWrite", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{data, offsetSamples});
  }
};
