// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Forward declaring type: JSonHelper
  class JSonHelper;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::JSonHelper);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::JSonHelper*, "", "JSonHelper");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: JSonHelper
  // [TokenAttribute] Offset: FFFFFFFF
  class JSonHelper : public ::Il2CppObject {
    public:
    // Nested type: ::GlobalNamespace::JSonHelper::Wrapper_1<T>
    template<typename T>
    class Wrapper_1;
    // static public T[] FromJson(System.String json)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class T>
    static ::ArrayW<T> FromJson(::StringW json) {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::JSonHelper::FromJson");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "JSonHelper", "FromJson", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(json)})));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}));
      return ::il2cpp_utils::RunMethodRethrow<::ArrayW<T>, false>(static_cast<Il2CppObject*>(nullptr), ___generic__method, json);
    }
    // static public System.String ToJson(T[] array)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class T>
    static ::StringW ToJson(::ArrayW<T> array) {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::JSonHelper::ToJson");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "JSonHelper", "ToJson", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array)})));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}));
      return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___generic__method, array);
    }
    // static public System.String ToJson(T[] array, System.Boolean prettyPrint)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class T>
    static ::StringW ToJson(::ArrayW<T> array, bool prettyPrint) {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::JSonHelper::ToJson");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "JSonHelper", "ToJson", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(prettyPrint)})));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}));
      return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___generic__method, array, prettyPrint);
    }
  }; // JSonHelper
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::JSonHelper::FromJson
// Il2CppName: FromJson
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: GlobalNamespace::JSonHelper::ToJson
// Il2CppName: ToJson
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: GlobalNamespace::JSonHelper::ToJson
// Il2CppName: ToJson
// Cannot write MetadataGetter for generic methods!
