// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: OVRUnityHumanoidSkeletonRetargeter
#include "GlobalNamespace/OVRUnityHumanoidSkeletonRetargeter.hpp"
// Including type: UnityEngine.HumanBodyBones
#include "UnityEngine/HumanBodyBones.hpp"
// Including type: OVRSkeleton/BoneId
#include "GlobalNamespace/OVRSkeleton_BoneId.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Skipping declaration: OVRSkeleton because it is already included!
  // Forward declaring type: OVRBone
  class OVRBone;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: Dictionary`2<TKey, TValue>
  template<typename TKey, typename TValue>
  class Dictionary_2;
  // Forward declaring type: IList`1<T>
  template<typename T>
  class IList_1;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Animator
  class Animator;
  // Forward declaring type: Transform
  class Transform;
  // Forward declaring type: Quaternion
  struct Quaternion;
  // Forward declaring type: Vector3
  struct Vector3;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRSkeletonMetadata);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRSkeletonMetadata*, "", "OVRUnityHumanoidSkeletonRetargeter/OVRSkeletonMetadata");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x20
  #pragma pack(push, 1)
  // Autogenerated type: OVRUnityHumanoidSkeletonRetargeter/OVRSkeletonMetadata
  // [TokenAttribute] Offset: FFFFFFFF
  class OVRUnityHumanoidSkeletonRetargeter::OVRSkeletonMetadata : public ::Il2CppObject {
    public:
    // Nested type: ::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRSkeletonMetadata::BoneData
    class BoneData;
    public:
    // private readonly System.Collections.Generic.Dictionary`2<UnityEngine.HumanBodyBones,OVRUnityHumanoidSkeletonRetargeter/OVRSkeletonMetadata/BoneData> <BodyToBoneData>k__BackingField
    // Size: 0x8
    // Offset: 0x10
    ::System::Collections::Generic::Dictionary_2<::UnityEngine::HumanBodyBones, ::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRSkeletonMetadata::BoneData*>* BodyToBoneData;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::Dictionary_2<::UnityEngine::HumanBodyBones, ::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRSkeletonMetadata::BoneData*>*) == 0x8);
    // private readonly UnityEngine.HumanBodyBones[] _boneEnumValues
    // Size: 0x8
    // Offset: 0x18
    ::ArrayW<::UnityEngine::HumanBodyBones> boneEnumValues;
    // Field size check
    static_assert(sizeof(::ArrayW<::UnityEngine::HumanBodyBones>) == 0x8);
    public:
    // Get instance field reference: private readonly System.Collections.Generic.Dictionary`2<UnityEngine.HumanBodyBones,OVRUnityHumanoidSkeletonRetargeter/OVRSkeletonMetadata/BoneData> <BodyToBoneData>k__BackingField
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::UnityEngine::HumanBodyBones, ::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRSkeletonMetadata::BoneData*>*& dyn_$BodyToBoneData$k__BackingField();
    // Get instance field reference: private readonly UnityEngine.HumanBodyBones[] _boneEnumValues
    [[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::HumanBodyBones>& dyn__boneEnumValues();
    // public System.Collections.Generic.Dictionary`2<UnityEngine.HumanBodyBones,OVRUnityHumanoidSkeletonRetargeter/OVRSkeletonMetadata/BoneData> get_BodyToBoneData()
    // Offset: 0x48CA854
    ::System::Collections::Generic::Dictionary_2<::UnityEngine::HumanBodyBones, ::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRSkeletonMetadata::BoneData*>* get_BodyToBoneData();
    // public System.Void .ctor(OVRUnityHumanoidSkeletonRetargeter/OVRSkeletonMetadata otherSkeletonMetaData)
    // Offset: 0x48CA85C
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static OVRUnityHumanoidSkeletonRetargeter::OVRSkeletonMetadata* New_ctor(::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRSkeletonMetadata* otherSkeletonMetaData) {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRSkeletonMetadata::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<OVRUnityHumanoidSkeletonRetargeter::OVRSkeletonMetadata*, creationType>(otherSkeletonMetaData)));
    }
    // public System.Void .ctor(UnityEngine.Animator animator)
    // Offset: 0x48C6BB4
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static OVRUnityHumanoidSkeletonRetargeter::OVRSkeletonMetadata* New_ctor(::UnityEngine::Animator* animator) {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRSkeletonMetadata::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<OVRUnityHumanoidSkeletonRetargeter::OVRSkeletonMetadata*, creationType>(animator)));
    }
    // public System.Void .ctor(OVRSkeleton skeleton, System.Boolean useBindPose, System.Collections.Generic.Dictionary`2<OVRSkeleton/BoneId,UnityEngine.HumanBodyBones> customBoneIdToHumanBodyBone)
    // Offset: 0x48C8468
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static OVRUnityHumanoidSkeletonRetargeter::OVRSkeletonMetadata* New_ctor(::GlobalNamespace::OVRSkeleton* skeleton, bool useBindPose, ::System::Collections::Generic::Dictionary_2<::GlobalNamespace::OVRSkeleton::BoneId, ::UnityEngine::HumanBodyBones>* customBoneIdToHumanBodyBone) {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRSkeletonMetadata::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<OVRUnityHumanoidSkeletonRetargeter::OVRSkeletonMetadata*, creationType>(skeleton, useBindPose, customBoneIdToHumanBodyBone)));
    }
    // public System.Void BuildBoneDataSkeleton(OVRSkeleton skeleton, System.Boolean useBindPose, System.Collections.Generic.Dictionary`2<OVRSkeleton/BoneId,UnityEngine.HumanBodyBones> customBoneIdToHumanBodyBone)
    // Offset: 0x48C861C
    void BuildBoneDataSkeleton(::GlobalNamespace::OVRSkeleton* skeleton, bool useBindPose, ::System::Collections::Generic::Dictionary_2<::GlobalNamespace::OVRSkeleton::BoneId, ::UnityEngine::HumanBodyBones>* customBoneIdToHumanBodyBone);
    // private System.Void AssembleSkeleton(OVRSkeleton skeleton, System.Boolean useBindPose, System.Collections.Generic.Dictionary`2<OVRSkeleton/BoneId,UnityEngine.HumanBodyBones> customBoneIdToHumanBodyBone)
    // Offset: 0x48CB244
    void AssembleSkeleton(::GlobalNamespace::OVRSkeleton* skeleton, bool useBindPose, ::System::Collections::Generic::Dictionary_2<::GlobalNamespace::OVRSkeleton::BoneId, ::UnityEngine::HumanBodyBones>* customBoneIdToHumanBodyBone);
    // static private OVRBone FindBoneWithBoneId(System.Collections.Generic.IList`1<OVRBone> bones, OVRSkeleton/BoneId boneId)
    // Offset: 0x48CB878
    static ::GlobalNamespace::OVRBone* FindBoneWithBoneId(::System::Collections::Generic::IList_1<::GlobalNamespace::OVRBone*>* bones, ::GlobalNamespace::OVRSkeleton::BoneId boneId);
    // private System.Void BuildBoneData(UnityEngine.Animator animator)
    // Offset: 0x48CAC8C
    void BuildBoneData(::UnityEngine::Animator* animator);
    // public System.Void BuildCoordinateAxesForAllBones()
    // Offset: 0x48C6D50
    void BuildCoordinateAxesForAllBones();
    // static private UnityEngine.Transform FindFirstChild(UnityEngine.Transform startTransform, UnityEngine.Transform currTransform)
    // Offset: 0x48CBA24
    static ::UnityEngine::Transform* FindFirstChild(::UnityEngine::Transform* startTransform, ::UnityEngine::Transform* currTransform);
    // static private UnityEngine.Quaternion CreateQuaternionForBoneDataWithRightVec(UnityEngine.Vector3 fromPosition, UnityEngine.Vector3 toPosition, UnityEngine.Vector3 rightVector)
    // Offset: 0x48CBB34
    static ::UnityEngine::Quaternion CreateQuaternionForBoneDataWithRightVec(::UnityEngine::Vector3 fromPosition, ::UnityEngine::Vector3 toPosition, ::UnityEngine::Vector3 rightVector);
    // static private UnityEngine.Quaternion CreateQuaternionForBoneData(UnityEngine.Vector3 fromPosition, UnityEngine.Vector3 toPosition)
    // Offset: 0x48CBCF4
    static ::UnityEngine::Quaternion CreateQuaternionForBoneData(::UnityEngine::Vector3 fromPosition, ::UnityEngine::Vector3 toPosition);
  }; // OVRUnityHumanoidSkeletonRetargeter/OVRSkeletonMetadata
  #pragma pack(pop)
  static check_size<sizeof(OVRUnityHumanoidSkeletonRetargeter::OVRSkeletonMetadata), 24 + sizeof(::ArrayW<::UnityEngine::HumanBodyBones>)> __GlobalNamespace_OVRUnityHumanoidSkeletonRetargeter_OVRSkeletonMetadataSizeCheck;
  static_assert(sizeof(OVRUnityHumanoidSkeletonRetargeter::OVRSkeletonMetadata) == 0x20);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRSkeletonMetadata::get_BodyToBoneData
// Il2CppName: get_BodyToBoneData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::Dictionary_2<::UnityEngine::HumanBodyBones, ::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRSkeletonMetadata::BoneData*>* (GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRSkeletonMetadata::*)()>(&GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRSkeletonMetadata::get_BodyToBoneData)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRSkeletonMetadata*), "get_BodyToBoneData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRSkeletonMetadata::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRSkeletonMetadata::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRSkeletonMetadata::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRSkeletonMetadata::BuildBoneDataSkeleton
// Il2CppName: BuildBoneDataSkeleton
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRSkeletonMetadata::*)(::GlobalNamespace::OVRSkeleton*, bool, ::System::Collections::Generic::Dictionary_2<::GlobalNamespace::OVRSkeleton::BoneId, ::UnityEngine::HumanBodyBones>*)>(&GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRSkeletonMetadata::BuildBoneDataSkeleton)> {
  static const MethodInfo* get() {
    static auto* skeleton = &::il2cpp_utils::GetClassFromName("", "OVRSkeleton")->byval_arg;
    static auto* useBindPose = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* customBoneIdToHumanBodyBone = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "Dictionary`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("", "OVRSkeleton/BoneId"), ::il2cpp_utils::GetClassFromName("UnityEngine", "HumanBodyBones")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRSkeletonMetadata*), "BuildBoneDataSkeleton", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{skeleton, useBindPose, customBoneIdToHumanBodyBone});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRSkeletonMetadata::AssembleSkeleton
// Il2CppName: AssembleSkeleton
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRSkeletonMetadata::*)(::GlobalNamespace::OVRSkeleton*, bool, ::System::Collections::Generic::Dictionary_2<::GlobalNamespace::OVRSkeleton::BoneId, ::UnityEngine::HumanBodyBones>*)>(&GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRSkeletonMetadata::AssembleSkeleton)> {
  static const MethodInfo* get() {
    static auto* skeleton = &::il2cpp_utils::GetClassFromName("", "OVRSkeleton")->byval_arg;
    static auto* useBindPose = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* customBoneIdToHumanBodyBone = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "Dictionary`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("", "OVRSkeleton/BoneId"), ::il2cpp_utils::GetClassFromName("UnityEngine", "HumanBodyBones")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRSkeletonMetadata*), "AssembleSkeleton", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{skeleton, useBindPose, customBoneIdToHumanBodyBone});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRSkeletonMetadata::FindBoneWithBoneId
// Il2CppName: FindBoneWithBoneId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::OVRBone* (*)(::System::Collections::Generic::IList_1<::GlobalNamespace::OVRBone*>*, ::GlobalNamespace::OVRSkeleton::BoneId)>(&GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRSkeletonMetadata::FindBoneWithBoneId)> {
  static const MethodInfo* get() {
    static auto* bones = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "IList`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("", "OVRBone")})->byval_arg;
    static auto* boneId = &::il2cpp_utils::GetClassFromName("", "OVRSkeleton/BoneId")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRSkeletonMetadata*), "FindBoneWithBoneId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{bones, boneId});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRSkeletonMetadata::BuildBoneData
// Il2CppName: BuildBoneData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRSkeletonMetadata::*)(::UnityEngine::Animator*)>(&GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRSkeletonMetadata::BuildBoneData)> {
  static const MethodInfo* get() {
    static auto* animator = &::il2cpp_utils::GetClassFromName("UnityEngine", "Animator")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRSkeletonMetadata*), "BuildBoneData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{animator});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRSkeletonMetadata::BuildCoordinateAxesForAllBones
// Il2CppName: BuildCoordinateAxesForAllBones
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRSkeletonMetadata::*)()>(&GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRSkeletonMetadata::BuildCoordinateAxesForAllBones)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRSkeletonMetadata*), "BuildCoordinateAxesForAllBones", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRSkeletonMetadata::FindFirstChild
// Il2CppName: FindFirstChild
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Transform* (*)(::UnityEngine::Transform*, ::UnityEngine::Transform*)>(&GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRSkeletonMetadata::FindFirstChild)> {
  static const MethodInfo* get() {
    static auto* startTransform = &::il2cpp_utils::GetClassFromName("UnityEngine", "Transform")->byval_arg;
    static auto* currTransform = &::il2cpp_utils::GetClassFromName("UnityEngine", "Transform")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRSkeletonMetadata*), "FindFirstChild", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{startTransform, currTransform});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRSkeletonMetadata::CreateQuaternionForBoneDataWithRightVec
// Il2CppName: CreateQuaternionForBoneDataWithRightVec
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Quaternion (*)(::UnityEngine::Vector3, ::UnityEngine::Vector3, ::UnityEngine::Vector3)>(&GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRSkeletonMetadata::CreateQuaternionForBoneDataWithRightVec)> {
  static const MethodInfo* get() {
    static auto* fromPosition = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* toPosition = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* rightVector = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRSkeletonMetadata*), "CreateQuaternionForBoneDataWithRightVec", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{fromPosition, toPosition, rightVector});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRSkeletonMetadata::CreateQuaternionForBoneData
// Il2CppName: CreateQuaternionForBoneData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Quaternion (*)(::UnityEngine::Vector3, ::UnityEngine::Vector3)>(&GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRSkeletonMetadata::CreateQuaternionForBoneData)> {
  static const MethodInfo* get() {
    static auto* fromPosition = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* toPosition = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRSkeletonMetadata*), "CreateQuaternionForBoneData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{fromPosition, toPosition});
  }
};
