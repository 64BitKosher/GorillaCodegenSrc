// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Mesh
  class Mesh;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Forward declaring type: MeshUtils
  class MeshUtils;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::MeshUtils);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::MeshUtils*, "", "MeshUtils");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: MeshUtils
  // [TokenAttribute] Offset: FFFFFFFF
  // [ExtensionAttribute] Offset: FFFFFFFF
  class MeshUtils : public ::Il2CppObject {
    public:
    // static public UnityEngine.Mesh CreateReadableMeshCopy(UnityEngine.Mesh sourceMesh)
    // Offset: 0x27780AC
    static ::UnityEngine::Mesh* CreateReadableMeshCopy(::UnityEngine::Mesh* sourceMesh);
  }; // MeshUtils
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::MeshUtils::CreateReadableMeshCopy
// Il2CppName: CreateReadableMeshCopy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Mesh* (*)(::UnityEngine::Mesh*)>(&GlobalNamespace::MeshUtils::CreateReadableMeshCopy)> {
  static const MethodInfo* get() {
    static auto* sourceMesh = &::il2cpp_utils::GetClassFromName("UnityEngine", "Mesh")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MeshUtils*), "CreateReadableMeshCopy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sourceMesh});
  }
};
