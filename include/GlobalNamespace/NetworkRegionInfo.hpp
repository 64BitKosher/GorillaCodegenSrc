// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Type namespace: 
namespace GlobalNamespace {
  // Forward declaring type: NetworkRegionInfo
  class NetworkRegionInfo;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::NetworkRegionInfo);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::NetworkRegionInfo*, "", "NetworkRegionInfo");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x18
  #pragma pack(push, 1)
  // Autogenerated type: NetworkRegionInfo
  // [TokenAttribute] Offset: FFFFFFFF
  class NetworkRegionInfo : public ::Il2CppObject {
    public:
    public:
    // public System.Int32 playersInRegion
    // Size: 0x4
    // Offset: 0x10
    int playersInRegion;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // public System.Int32 pingToRegion
    // Size: 0x4
    // Offset: 0x14
    int pingToRegion;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Get instance field reference: public System.Int32 playersInRegion
    [[deprecated("Use field access instead!")]] int& dyn_playersInRegion();
    // Get instance field reference: public System.Int32 pingToRegion
    [[deprecated("Use field access instead!")]] int& dyn_pingToRegion();
    // public System.Void .ctor()
    // Offset: 0x291253C
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static NetworkRegionInfo* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkRegionInfo::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<NetworkRegionInfo*, creationType>()));
    }
  }; // NetworkRegionInfo
  #pragma pack(pop)
  static check_size<sizeof(NetworkRegionInfo), 20 + sizeof(int)> __GlobalNamespace_NetworkRegionInfoSizeCheck;
  static_assert(sizeof(NetworkRegionInfo) == 0x18);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::NetworkRegionInfo::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
