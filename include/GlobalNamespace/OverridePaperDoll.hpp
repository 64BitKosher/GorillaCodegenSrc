// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: GameObject
  class GameObject;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Forward declaring type: OverridePaperDoll
  class OverridePaperDoll;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::OverridePaperDoll);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::OverridePaperDoll*, "", "OverridePaperDoll");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x29
  #pragma pack(push, 1)
  // Autogenerated type: OverridePaperDoll
  // [TokenAttribute] Offset: FFFFFFFF
  class OverridePaperDoll : public ::UnityEngine::MonoBehaviour {
    public:
    public:
    // public UnityEngine.GameObject rightSideOverride
    // Size: 0x8
    // Offset: 0x20
    ::UnityEngine::GameObject* rightSideOverride;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // public System.Boolean replacesHeadMesh
    // Size: 0x1
    // Offset: 0x28
    bool replacesHeadMesh;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    public:
    // Get instance field reference: public UnityEngine.GameObject rightSideOverride
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_rightSideOverride();
    // Get instance field reference: public System.Boolean replacesHeadMesh
    [[deprecated("Use field access instead!")]] bool& dyn_replacesHeadMesh();
    // public System.Void .ctor()
    // Offset: 0x26BAE38
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static OverridePaperDoll* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OverridePaperDoll::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<OverridePaperDoll*, creationType>()));
    }
  }; // OverridePaperDoll
  #pragma pack(pop)
  static check_size<sizeof(OverridePaperDoll), 40 + sizeof(bool)> __GlobalNamespace_OverridePaperDollSizeCheck;
  static_assert(sizeof(OverridePaperDoll) == 0x29);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::OverridePaperDoll::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
