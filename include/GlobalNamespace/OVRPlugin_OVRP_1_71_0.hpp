// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: OVRPlugin
#include "GlobalNamespace/OVRPlugin.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Version
  class Version;
  // Forward declaring type: IntPtr
  struct IntPtr;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::OVRPlugin::OVRP_1_71_0);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::OVRPlugin::OVRP_1_71_0*, "", "OVRPlugin/OVRP_1_71_0");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: OVRPlugin/OVRP_1_71_0
  // [TokenAttribute] Offset: FFFFFFFF
  class OVRPlugin::OVRP_1_71_0 : public ::Il2CppObject {
    public:
    // Get static field: static public readonly System.Version version
    static ::System::Version* _get_version();
    // Set static field: static public readonly System.Version version
    static void _set_version(::System::Version* value);
    // static public OVRPlugin/Result ovrp_IsInsightPassthroughSupported(ref OVRPlugin/Bool supported)
    // Offset: 0x49142F8
    static ::GlobalNamespace::OVRPlugin::Result ovrp_IsInsightPassthroughSupported(ByRef<::GlobalNamespace::OVRPlugin::Bool> supported);
    // static public System.Void ovrp_UnityOpenXR_SetClientVersion(System.Int32 majorVersion, System.Int32 minorVersion, System.Int32 patchVersion)
    // Offset: 0x4909B84
    static void ovrp_UnityOpenXR_SetClientVersion(int majorVersion, int minorVersion, int patchVersion);
    // static public System.IntPtr ovrp_UnityOpenXR_HookGetInstanceProcAddr(System.IntPtr func)
    // Offset: 0x4909CDC
    static ::System::IntPtr ovrp_UnityOpenXR_HookGetInstanceProcAddr(::System::IntPtr func);
    // static public OVRPlugin/Result ovrp_UnityOpenXR_OnInstanceCreate(System.UInt64 xrInstance)
    // Offset: 0x4909E20
    static ::GlobalNamespace::OVRPlugin::Result ovrp_UnityOpenXR_OnInstanceCreate(uint64_t xrInstance);
    // static public System.Void ovrp_UnityOpenXR_OnInstanceDestroy(System.UInt64 xrInstance)
    // Offset: 0x4909F5C
    static void ovrp_UnityOpenXR_OnInstanceDestroy(uint64_t xrInstance);
    // static public System.Void ovrp_UnityOpenXR_OnSessionCreate(System.UInt64 xrSession)
    // Offset: 0x490A098
    static void ovrp_UnityOpenXR_OnSessionCreate(uint64_t xrSession);
    // static public System.Void ovrp_UnityOpenXR_OnAppSpaceChange(System.UInt64 xrSpace)
    // Offset: 0x490A1D4
    static void ovrp_UnityOpenXR_OnAppSpaceChange(uint64_t xrSpace);
    // static public System.Void ovrp_UnityOpenXR_OnSessionStateChange(System.Int32 oldState, System.Int32 newState)
    // Offset: 0x490A324
    static void ovrp_UnityOpenXR_OnSessionStateChange(int oldState, int newState);
    // static public System.Void ovrp_UnityOpenXR_OnSessionBegin(System.UInt64 xrSession)
    // Offset: 0x490A468
    static void ovrp_UnityOpenXR_OnSessionBegin(uint64_t xrSession);
    // static public System.Void ovrp_UnityOpenXR_OnSessionEnd(System.UInt64 xrSession)
    // Offset: 0x490A5A4
    static void ovrp_UnityOpenXR_OnSessionEnd(uint64_t xrSession);
    // static public System.Void ovrp_UnityOpenXR_OnSessionExiting(System.UInt64 xrSession)
    // Offset: 0x490A6E0
    static void ovrp_UnityOpenXR_OnSessionExiting(uint64_t xrSession);
    // static public System.Void ovrp_UnityOpenXR_OnSessionDestroy(System.UInt64 xrSession)
    // Offset: 0x490A81C
    static void ovrp_UnityOpenXR_OnSessionDestroy(uint64_t xrSession);
    // static public OVRPlugin/Result ovrp_SetSuggestedCpuPerformanceLevel(OVRPlugin/ProcessorPerformanceLevel perfLevel)
    // Offset: 0x4914374
    static ::GlobalNamespace::OVRPlugin::Result ovrp_SetSuggestedCpuPerformanceLevel(::GlobalNamespace::OVRPlugin::ProcessorPerformanceLevel perfLevel);
    // static public OVRPlugin/Result ovrp_GetSuggestedCpuPerformanceLevel(out OVRPlugin/ProcessorPerformanceLevel perfLevel)
    // Offset: 0x49143F0
    static ::GlobalNamespace::OVRPlugin::Result ovrp_GetSuggestedCpuPerformanceLevel(ByRef<::GlobalNamespace::OVRPlugin::ProcessorPerformanceLevel> perfLevel);
    // static public OVRPlugin/Result ovrp_SetSuggestedGpuPerformanceLevel(OVRPlugin/ProcessorPerformanceLevel perfLevel)
    // Offset: 0x491446C
    static ::GlobalNamespace::OVRPlugin::Result ovrp_SetSuggestedGpuPerformanceLevel(::GlobalNamespace::OVRPlugin::ProcessorPerformanceLevel perfLevel);
    // static public OVRPlugin/Result ovrp_GetSuggestedGpuPerformanceLevel(out OVRPlugin/ProcessorPerformanceLevel perfLevel)
    // Offset: 0x49144E8
    static ::GlobalNamespace::OVRPlugin::Result ovrp_GetSuggestedGpuPerformanceLevel(ByRef<::GlobalNamespace::OVRPlugin::ProcessorPerformanceLevel> perfLevel);
    // static private System.Void .cctor()
    // Offset: 0x4914564
    static void _cctor();
  }; // OVRPlugin/OVRP_1_71_0
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::OVRPlugin::OVRP_1_71_0::ovrp_IsInsightPassthroughSupported
// Il2CppName: ovrp_IsInsightPassthroughSupported
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::OVRPlugin::Result (*)(ByRef<::GlobalNamespace::OVRPlugin::Bool>)>(&GlobalNamespace::OVRPlugin::OVRP_1_71_0::ovrp_IsInsightPassthroughSupported)> {
  static const MethodInfo* get() {
    static auto* supported = &::il2cpp_utils::GetClassFromName("", "OVRPlugin/Bool")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::OVRPlugin::OVRP_1_71_0*), "ovrp_IsInsightPassthroughSupported", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{supported});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::OVRPlugin::OVRP_1_71_0::ovrp_UnityOpenXR_SetClientVersion
// Il2CppName: ovrp_UnityOpenXR_SetClientVersion
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int, int, int)>(&GlobalNamespace::OVRPlugin::OVRP_1_71_0::ovrp_UnityOpenXR_SetClientVersion)> {
  static const MethodInfo* get() {
    static auto* majorVersion = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* minorVersion = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* patchVersion = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::OVRPlugin::OVRP_1_71_0*), "ovrp_UnityOpenXR_SetClientVersion", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{majorVersion, minorVersion, patchVersion});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::OVRPlugin::OVRP_1_71_0::ovrp_UnityOpenXR_HookGetInstanceProcAddr
// Il2CppName: ovrp_UnityOpenXR_HookGetInstanceProcAddr
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&GlobalNamespace::OVRPlugin::OVRP_1_71_0::ovrp_UnityOpenXR_HookGetInstanceProcAddr)> {
  static const MethodInfo* get() {
    static auto* func = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::OVRPlugin::OVRP_1_71_0*), "ovrp_UnityOpenXR_HookGetInstanceProcAddr", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{func});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::OVRPlugin::OVRP_1_71_0::ovrp_UnityOpenXR_OnInstanceCreate
// Il2CppName: ovrp_UnityOpenXR_OnInstanceCreate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::OVRPlugin::Result (*)(uint64_t)>(&GlobalNamespace::OVRPlugin::OVRP_1_71_0::ovrp_UnityOpenXR_OnInstanceCreate)> {
  static const MethodInfo* get() {
    static auto* xrInstance = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::OVRPlugin::OVRP_1_71_0*), "ovrp_UnityOpenXR_OnInstanceCreate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{xrInstance});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::OVRPlugin::OVRP_1_71_0::ovrp_UnityOpenXR_OnInstanceDestroy
// Il2CppName: ovrp_UnityOpenXR_OnInstanceDestroy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(uint64_t)>(&GlobalNamespace::OVRPlugin::OVRP_1_71_0::ovrp_UnityOpenXR_OnInstanceDestroy)> {
  static const MethodInfo* get() {
    static auto* xrInstance = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::OVRPlugin::OVRP_1_71_0*), "ovrp_UnityOpenXR_OnInstanceDestroy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{xrInstance});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::OVRPlugin::OVRP_1_71_0::ovrp_UnityOpenXR_OnSessionCreate
// Il2CppName: ovrp_UnityOpenXR_OnSessionCreate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(uint64_t)>(&GlobalNamespace::OVRPlugin::OVRP_1_71_0::ovrp_UnityOpenXR_OnSessionCreate)> {
  static const MethodInfo* get() {
    static auto* xrSession = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::OVRPlugin::OVRP_1_71_0*), "ovrp_UnityOpenXR_OnSessionCreate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{xrSession});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::OVRPlugin::OVRP_1_71_0::ovrp_UnityOpenXR_OnAppSpaceChange
// Il2CppName: ovrp_UnityOpenXR_OnAppSpaceChange
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(uint64_t)>(&GlobalNamespace::OVRPlugin::OVRP_1_71_0::ovrp_UnityOpenXR_OnAppSpaceChange)> {
  static const MethodInfo* get() {
    static auto* xrSpace = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::OVRPlugin::OVRP_1_71_0*), "ovrp_UnityOpenXR_OnAppSpaceChange", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{xrSpace});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::OVRPlugin::OVRP_1_71_0::ovrp_UnityOpenXR_OnSessionStateChange
// Il2CppName: ovrp_UnityOpenXR_OnSessionStateChange
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int, int)>(&GlobalNamespace::OVRPlugin::OVRP_1_71_0::ovrp_UnityOpenXR_OnSessionStateChange)> {
  static const MethodInfo* get() {
    static auto* oldState = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* newState = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::OVRPlugin::OVRP_1_71_0*), "ovrp_UnityOpenXR_OnSessionStateChange", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{oldState, newState});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::OVRPlugin::OVRP_1_71_0::ovrp_UnityOpenXR_OnSessionBegin
// Il2CppName: ovrp_UnityOpenXR_OnSessionBegin
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(uint64_t)>(&GlobalNamespace::OVRPlugin::OVRP_1_71_0::ovrp_UnityOpenXR_OnSessionBegin)> {
  static const MethodInfo* get() {
    static auto* xrSession = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::OVRPlugin::OVRP_1_71_0*), "ovrp_UnityOpenXR_OnSessionBegin", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{xrSession});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::OVRPlugin::OVRP_1_71_0::ovrp_UnityOpenXR_OnSessionEnd
// Il2CppName: ovrp_UnityOpenXR_OnSessionEnd
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(uint64_t)>(&GlobalNamespace::OVRPlugin::OVRP_1_71_0::ovrp_UnityOpenXR_OnSessionEnd)> {
  static const MethodInfo* get() {
    static auto* xrSession = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::OVRPlugin::OVRP_1_71_0*), "ovrp_UnityOpenXR_OnSessionEnd", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{xrSession});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::OVRPlugin::OVRP_1_71_0::ovrp_UnityOpenXR_OnSessionExiting
// Il2CppName: ovrp_UnityOpenXR_OnSessionExiting
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(uint64_t)>(&GlobalNamespace::OVRPlugin::OVRP_1_71_0::ovrp_UnityOpenXR_OnSessionExiting)> {
  static const MethodInfo* get() {
    static auto* xrSession = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::OVRPlugin::OVRP_1_71_0*), "ovrp_UnityOpenXR_OnSessionExiting", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{xrSession});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::OVRPlugin::OVRP_1_71_0::ovrp_UnityOpenXR_OnSessionDestroy
// Il2CppName: ovrp_UnityOpenXR_OnSessionDestroy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(uint64_t)>(&GlobalNamespace::OVRPlugin::OVRP_1_71_0::ovrp_UnityOpenXR_OnSessionDestroy)> {
  static const MethodInfo* get() {
    static auto* xrSession = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::OVRPlugin::OVRP_1_71_0*), "ovrp_UnityOpenXR_OnSessionDestroy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{xrSession});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::OVRPlugin::OVRP_1_71_0::ovrp_SetSuggestedCpuPerformanceLevel
// Il2CppName: ovrp_SetSuggestedCpuPerformanceLevel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::OVRPlugin::Result (*)(::GlobalNamespace::OVRPlugin::ProcessorPerformanceLevel)>(&GlobalNamespace::OVRPlugin::OVRP_1_71_0::ovrp_SetSuggestedCpuPerformanceLevel)> {
  static const MethodInfo* get() {
    static auto* perfLevel = &::il2cpp_utils::GetClassFromName("", "OVRPlugin/ProcessorPerformanceLevel")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::OVRPlugin::OVRP_1_71_0*), "ovrp_SetSuggestedCpuPerformanceLevel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{perfLevel});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::OVRPlugin::OVRP_1_71_0::ovrp_GetSuggestedCpuPerformanceLevel
// Il2CppName: ovrp_GetSuggestedCpuPerformanceLevel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::OVRPlugin::Result (*)(ByRef<::GlobalNamespace::OVRPlugin::ProcessorPerformanceLevel>)>(&GlobalNamespace::OVRPlugin::OVRP_1_71_0::ovrp_GetSuggestedCpuPerformanceLevel)> {
  static const MethodInfo* get() {
    static auto* perfLevel = &::il2cpp_utils::GetClassFromName("", "OVRPlugin/ProcessorPerformanceLevel")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::OVRPlugin::OVRP_1_71_0*), "ovrp_GetSuggestedCpuPerformanceLevel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{perfLevel});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::OVRPlugin::OVRP_1_71_0::ovrp_SetSuggestedGpuPerformanceLevel
// Il2CppName: ovrp_SetSuggestedGpuPerformanceLevel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::OVRPlugin::Result (*)(::GlobalNamespace::OVRPlugin::ProcessorPerformanceLevel)>(&GlobalNamespace::OVRPlugin::OVRP_1_71_0::ovrp_SetSuggestedGpuPerformanceLevel)> {
  static const MethodInfo* get() {
    static auto* perfLevel = &::il2cpp_utils::GetClassFromName("", "OVRPlugin/ProcessorPerformanceLevel")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::OVRPlugin::OVRP_1_71_0*), "ovrp_SetSuggestedGpuPerformanceLevel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{perfLevel});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::OVRPlugin::OVRP_1_71_0::ovrp_GetSuggestedGpuPerformanceLevel
// Il2CppName: ovrp_GetSuggestedGpuPerformanceLevel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::OVRPlugin::Result (*)(ByRef<::GlobalNamespace::OVRPlugin::ProcessorPerformanceLevel>)>(&GlobalNamespace::OVRPlugin::OVRP_1_71_0::ovrp_GetSuggestedGpuPerformanceLevel)> {
  static const MethodInfo* get() {
    static auto* perfLevel = &::il2cpp_utils::GetClassFromName("", "OVRPlugin/ProcessorPerformanceLevel")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::OVRPlugin::OVRP_1_71_0*), "ovrp_GetSuggestedGpuPerformanceLevel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{perfLevel});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::OVRPlugin::OVRP_1_71_0::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&GlobalNamespace::OVRPlugin::OVRP_1_71_0::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::OVRPlugin::OVRP_1_71_0*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
