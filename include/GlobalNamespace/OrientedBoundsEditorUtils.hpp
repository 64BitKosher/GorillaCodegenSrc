// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: OrientedBounds
  struct OrientedBounds;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Forward declaring type: OrientedBoundsEditorUtils
  class OrientedBoundsEditorUtils;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::OrientedBoundsEditorUtils);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::OrientedBoundsEditorUtils*, "", "OrientedBoundsEditorUtils");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: OrientedBoundsEditorUtils
  // [TokenAttribute] Offset: FFFFFFFF
  class OrientedBoundsEditorUtils : public ::Il2CppObject {
    public:
    // static public OrientedBounds ComputeBounds(UnityEngine.Vector3[] points)
    // Offset: 0x2750064
    static ::GlobalNamespace::OrientedBounds ComputeBounds(::ArrayW<::UnityEngine::Vector3> points);
  }; // OrientedBoundsEditorUtils
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::OrientedBoundsEditorUtils::ComputeBounds
// Il2CppName: ComputeBounds
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::OrientedBounds (*)(::ArrayW<::UnityEngine::Vector3>)>(&GlobalNamespace::OrientedBoundsEditorUtils::ComputeBounds)> {
  static const MethodInfo* get() {
    static auto* points = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::OrientedBoundsEditorUtils*), "ComputeBounds", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{points});
  }
};
