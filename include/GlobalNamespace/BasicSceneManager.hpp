// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
// Including type: OVRAnchor
#include "GlobalNamespace/OVRAnchor.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
}
// Forward declaring namespace: System::Threading::Tasks
namespace System::Threading::Tasks {
  // Forward declaring type: Task
  class Task;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: GameObject
  class GameObject;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Forward declaring type: BasicSceneManager
  class BasicSceneManager;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::BasicSceneManager);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::BasicSceneManager*, "", "BasicSceneManager");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x20
  #pragma pack(push, 1)
  // Autogenerated type: BasicSceneManager
  // [TokenAttribute] Offset: FFFFFFFF
  class BasicSceneManager : public ::UnityEngine::MonoBehaviour {
    public:
    // Nested type: ::GlobalNamespace::BasicSceneManager::$$LoadSceneAsync$b__1_0$d
    struct $$LoadSceneAsync$b__1_0$d;
    // Nested type: ::GlobalNamespace::BasicSceneManager::$$c__DisplayClass2_0
    class $$c__DisplayClass2_0;
    // Nested type: ::GlobalNamespace::BasicSceneManager::$CreateSceneAnchors$d__2
    struct $CreateSceneAnchors$d__2;
    // Nested type: ::GlobalNamespace::BasicSceneManager::$LoadSceneAsync$d__1
    struct $LoadSceneAsync$d__1;
    // private System.Void Start()
    // Offset: 0x293D7F8
    void Start();
    // private System.Void LoadSceneAsync()
    // Offset: 0x293D814
    void LoadSceneAsync();
    // private System.Threading.Tasks.Task CreateSceneAnchors(UnityEngine.GameObject roomGameObject, System.Collections.Generic.List`1<OVRAnchor> anchors)
    // Offset: 0x293D8CC
    ::System::Threading::Tasks::Task* CreateSceneAnchors(::UnityEngine::GameObject* roomGameObject, ::System::Collections::Generic::List_1<::GlobalNamespace::OVRAnchor>* anchors);
    // public System.Void .ctor()
    // Offset: 0x293D9C8
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static BasicSceneManager* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BasicSceneManager::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<BasicSceneManager*, creationType>()));
    }
    // private System.Threading.Tasks.Task <LoadSceneAsync>b__1_0(OVRAnchor room)
    // Offset: 0x293D9D0
    ::System::Threading::Tasks::Task* $LoadSceneAsync$b__1_0(::GlobalNamespace::OVRAnchor room);
  }; // BasicSceneManager
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::BasicSceneManager::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::BasicSceneManager::*)()>(&GlobalNamespace::BasicSceneManager::Start)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::BasicSceneManager*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::BasicSceneManager::LoadSceneAsync
// Il2CppName: LoadSceneAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::BasicSceneManager::*)()>(&GlobalNamespace::BasicSceneManager::LoadSceneAsync)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::BasicSceneManager*), "LoadSceneAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::BasicSceneManager::CreateSceneAnchors
// Il2CppName: CreateSceneAnchors
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Threading::Tasks::Task* (GlobalNamespace::BasicSceneManager::*)(::UnityEngine::GameObject*, ::System::Collections::Generic::List_1<::GlobalNamespace::OVRAnchor>*)>(&GlobalNamespace::BasicSceneManager::CreateSceneAnchors)> {
  static const MethodInfo* get() {
    static auto* roomGameObject = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    static auto* anchors = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("", "OVRAnchor")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::BasicSceneManager*), "CreateSceneAnchors", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{roomGameObject, anchors});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::BasicSceneManager::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: GlobalNamespace::BasicSceneManager::$LoadSceneAsync$b__1_0
// Il2CppName: <LoadSceneAsync>b__1_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Threading::Tasks::Task* (GlobalNamespace::BasicSceneManager::*)(::GlobalNamespace::OVRAnchor)>(&GlobalNamespace::BasicSceneManager::$LoadSceneAsync$b__1_0)> {
  static const MethodInfo* get() {
    static auto* room = &::il2cpp_utils::GetClassFromName("", "OVRAnchor")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::BasicSceneManager*), "<LoadSceneAsync>b__1_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{room});
  }
};
