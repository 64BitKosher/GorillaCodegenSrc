// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: RequestableOwnershipGuard
#include "GlobalNamespace/RequestableOwnershipGuard.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Action`1<T>
  template<typename T>
  class Action_1;
}
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: IRequestableOwnershipGuardCallbacks
  class IRequestableOwnershipGuardCallbacks;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::RequestableOwnershipGuard::$$c);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::RequestableOwnershipGuard::$$c*, "", "RequestableOwnershipGuard/<>c");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: RequestableOwnershipGuard/<>c
  // [TokenAttribute] Offset: FFFFFFFF
  // [CompilerGeneratedAttribute] Offset: FFFFFFFF
  class RequestableOwnershipGuard::$$c : public ::Il2CppObject {
    public:
    // Get static field: static public readonly RequestableOwnershipGuard/<>c <>9
    static ::GlobalNamespace::RequestableOwnershipGuard::$$c* _get_$$9();
    // Set static field: static public readonly RequestableOwnershipGuard/<>c <>9
    static void _set_$$9(::GlobalNamespace::RequestableOwnershipGuard::$$c* value);
    // Get static field: static public System.Action`1<IRequestableOwnershipGuardCallbacks> <>9__20_0
    static ::System::Action_1<::GlobalNamespace::IRequestableOwnershipGuardCallbacks*>* _get_$$9__20_0();
    // Set static field: static public System.Action`1<IRequestableOwnershipGuardCallbacks> <>9__20_0
    static void _set_$$9__20_0(::System::Action_1<::GlobalNamespace::IRequestableOwnershipGuardCallbacks*>* value);
    // Get static field: static public System.Action`1<IRequestableOwnershipGuardCallbacks> <>9__22_0
    static ::System::Action_1<::GlobalNamespace::IRequestableOwnershipGuardCallbacks*>* _get_$$9__22_0();
    // Set static field: static public System.Action`1<IRequestableOwnershipGuardCallbacks> <>9__22_0
    static void _set_$$9__22_0(::System::Action_1<::GlobalNamespace::IRequestableOwnershipGuardCallbacks*>* value);
    // Get static field: static public System.Action`1<IRequestableOwnershipGuardCallbacks> <>9__22_1
    static ::System::Action_1<::GlobalNamespace::IRequestableOwnershipGuardCallbacks*>* _get_$$9__22_1();
    // Set static field: static public System.Action`1<IRequestableOwnershipGuardCallbacks> <>9__22_1
    static void _set_$$9__22_1(::System::Action_1<::GlobalNamespace::IRequestableOwnershipGuardCallbacks*>* value);
    // Get static field: static public System.Action`1<IRequestableOwnershipGuardCallbacks> <>9__22_2
    static ::System::Action_1<::GlobalNamespace::IRequestableOwnershipGuardCallbacks*>* _get_$$9__22_2();
    // Set static field: static public System.Action`1<IRequestableOwnershipGuardCallbacks> <>9__22_2
    static void _set_$$9__22_2(::System::Action_1<::GlobalNamespace::IRequestableOwnershipGuardCallbacks*>* value);
    // Get static field: static public System.Action`1<IRequestableOwnershipGuardCallbacks> <>9__22_3
    static ::System::Action_1<::GlobalNamespace::IRequestableOwnershipGuardCallbacks*>* _get_$$9__22_3();
    // Set static field: static public System.Action`1<IRequestableOwnershipGuardCallbacks> <>9__22_3
    static void _set_$$9__22_3(::System::Action_1<::GlobalNamespace::IRequestableOwnershipGuardCallbacks*>* value);
    // static private System.Void .cctor()
    // Offset: 0x289558C
    static void _cctor();
    // public System.Void .ctor()
    // Offset: 0x28955F4
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static RequestableOwnershipGuard::$$c* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RequestableOwnershipGuard::$$c::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<RequestableOwnershipGuard::$$c*, creationType>()));
    }
    // System.Void <OnPreLeavingRoom>b__20_0(IRequestableOwnershipGuardCallbacks callback)
    // Offset: 0x28955FC
    void $OnPreLeavingRoom$b__20_0(::GlobalNamespace::IRequestableOwnershipGuardCallbacks* callback);
    // System.Void <OnPlayerLeftRoom>b__22_0(IRequestableOwnershipGuardCallbacks callback)
    // Offset: 0x289569C
    void $OnPlayerLeftRoom$b__22_0(::GlobalNamespace::IRequestableOwnershipGuardCallbacks* callback);
    // System.Void <OnPlayerLeftRoom>b__22_1(IRequestableOwnershipGuardCallbacks callback)
    // Offset: 0x289573C
    void $OnPlayerLeftRoom$b__22_1(::GlobalNamespace::IRequestableOwnershipGuardCallbacks* callback);
    // System.Void <OnPlayerLeftRoom>b__22_2(IRequestableOwnershipGuardCallbacks callback)
    // Offset: 0x28957DC
    void $OnPlayerLeftRoom$b__22_2(::GlobalNamespace::IRequestableOwnershipGuardCallbacks* callback);
    // System.Void <OnPlayerLeftRoom>b__22_3(IRequestableOwnershipGuardCallbacks callback)
    // Offset: 0x289587C
    void $OnPlayerLeftRoom$b__22_3(::GlobalNamespace::IRequestableOwnershipGuardCallbacks* callback);
  }; // RequestableOwnershipGuard/<>c
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::RequestableOwnershipGuard::$$c::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&GlobalNamespace::RequestableOwnershipGuard::$$c::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::RequestableOwnershipGuard::$$c*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::RequestableOwnershipGuard::$$c::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: GlobalNamespace::RequestableOwnershipGuard::$$c::$OnPreLeavingRoom$b__20_0
// Il2CppName: <OnPreLeavingRoom>b__20_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::RequestableOwnershipGuard::$$c::*)(::GlobalNamespace::IRequestableOwnershipGuardCallbacks*)>(&GlobalNamespace::RequestableOwnershipGuard::$$c::$OnPreLeavingRoom$b__20_0)> {
  static const MethodInfo* get() {
    static auto* callback = &::il2cpp_utils::GetClassFromName("", "IRequestableOwnershipGuardCallbacks")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::RequestableOwnershipGuard::$$c*), "<OnPreLeavingRoom>b__20_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{callback});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::RequestableOwnershipGuard::$$c::$OnPlayerLeftRoom$b__22_0
// Il2CppName: <OnPlayerLeftRoom>b__22_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::RequestableOwnershipGuard::$$c::*)(::GlobalNamespace::IRequestableOwnershipGuardCallbacks*)>(&GlobalNamespace::RequestableOwnershipGuard::$$c::$OnPlayerLeftRoom$b__22_0)> {
  static const MethodInfo* get() {
    static auto* callback = &::il2cpp_utils::GetClassFromName("", "IRequestableOwnershipGuardCallbacks")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::RequestableOwnershipGuard::$$c*), "<OnPlayerLeftRoom>b__22_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{callback});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::RequestableOwnershipGuard::$$c::$OnPlayerLeftRoom$b__22_1
// Il2CppName: <OnPlayerLeftRoom>b__22_1
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::RequestableOwnershipGuard::$$c::*)(::GlobalNamespace::IRequestableOwnershipGuardCallbacks*)>(&GlobalNamespace::RequestableOwnershipGuard::$$c::$OnPlayerLeftRoom$b__22_1)> {
  static const MethodInfo* get() {
    static auto* callback = &::il2cpp_utils::GetClassFromName("", "IRequestableOwnershipGuardCallbacks")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::RequestableOwnershipGuard::$$c*), "<OnPlayerLeftRoom>b__22_1", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{callback});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::RequestableOwnershipGuard::$$c::$OnPlayerLeftRoom$b__22_2
// Il2CppName: <OnPlayerLeftRoom>b__22_2
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::RequestableOwnershipGuard::$$c::*)(::GlobalNamespace::IRequestableOwnershipGuardCallbacks*)>(&GlobalNamespace::RequestableOwnershipGuard::$$c::$OnPlayerLeftRoom$b__22_2)> {
  static const MethodInfo* get() {
    static auto* callback = &::il2cpp_utils::GetClassFromName("", "IRequestableOwnershipGuardCallbacks")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::RequestableOwnershipGuard::$$c*), "<OnPlayerLeftRoom>b__22_2", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{callback});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::RequestableOwnershipGuard::$$c::$OnPlayerLeftRoom$b__22_3
// Il2CppName: <OnPlayerLeftRoom>b__22_3
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::RequestableOwnershipGuard::$$c::*)(::GlobalNamespace::IRequestableOwnershipGuardCallbacks*)>(&GlobalNamespace::RequestableOwnershipGuard::$$c::$OnPlayerLeftRoom$b__22_3)> {
  static const MethodInfo* get() {
    static auto* callback = &::il2cpp_utils::GetClassFromName("", "IRequestableOwnershipGuardCallbacks")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::RequestableOwnershipGuard::$$c*), "<OnPlayerLeftRoom>b__22_3", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{callback});
  }
};
