// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
  // Forward declaring type: Dictionary`2<TKey, TValue>
  template<typename TKey, typename TValue>
  class Dictionary_2;
  // Forward declaring type: HashSet`1<T>
  template<typename T>
  class HashSet_1;
  // Forward declaring type: Stack`1<T>
  template<typename T>
  class Stack_1;
  // Forward declaring type: Queue`1<T>
  template<typename T>
  class Queue_1;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Forward declaring type: OVRObjectPool
  class OVRObjectPool;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::OVRObjectPool);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::OVRObjectPool*, "", "OVRObjectPool");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: OVRObjectPool
  // [TokenAttribute] Offset: FFFFFFFF
  class OVRObjectPool : public ::Il2CppObject {
    public:
    // Nested type: ::GlobalNamespace::OVRObjectPool::Storage_1<T>
    template<typename T>
    class Storage_1;
    // Nested type: ::GlobalNamespace::OVRObjectPool::ListScope_1<T>
    template<typename T>
    struct ListScope_1;
    // Nested type: ::GlobalNamespace::OVRObjectPool::DictionaryScope_2<TKey, TValue>
    template<typename TKey, typename TValue>
    struct DictionaryScope_2;
    // Nested type: ::GlobalNamespace::OVRObjectPool::HashSetScope_1<T>
    template<typename T>
    struct HashSetScope_1;
    // Nested type: ::GlobalNamespace::OVRObjectPool::StackScope_1<T>
    template<typename T>
    struct StackScope_1;
    // Nested type: ::GlobalNamespace::OVRObjectPool::QueueScope_1<T>
    template<typename T>
    struct QueueScope_1;
    // Nested type: ::GlobalNamespace::OVRObjectPool::ItemScope_1<T>
    template<typename T>
    struct ItemScope_1;
    // static public T Get()
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class T>
    static T Get() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRObjectPool::Get");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRObjectPool", "Get", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}, ::std::vector<const Il2CppType*>{})));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}));
      return ::il2cpp_utils::RunMethodRethrow<T, false>(static_cast<Il2CppObject*>(nullptr), ___generic__method);
    }
    // static public System.Collections.Generic.List`1<T> List()
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class T>
    static ::System::Collections::Generic::List_1<T>* List() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRObjectPool::List");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRObjectPool", "List", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}, ::std::vector<const Il2CppType*>{})));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}));
      return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<T>*, false>(static_cast<Il2CppObject*>(nullptr), ___generic__method);
    }
    // static public System.Collections.Generic.Dictionary`2<TKey,TValue> Dictionary()
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class TKey, class TValue>
    static ::System::Collections::Generic::Dictionary_2<TKey, TValue>* Dictionary() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRObjectPool::Dictionary");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRObjectPool", "Dictionary", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TKey>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TValue>::get()}, ::std::vector<const Il2CppType*>{})));
      static auto* ___generic__method = THROW_UNLESS((::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TKey>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TValue>::get()})));
      return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::Dictionary_2<TKey, TValue>*, false>(static_cast<Il2CppObject*>(nullptr), ___generic__method);
    }
    // static public System.Collections.Generic.HashSet`1<T> HashSet()
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class T>
    static ::System::Collections::Generic::HashSet_1<T>* HashSet() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRObjectPool::HashSet");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRObjectPool", "HashSet", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}, ::std::vector<const Il2CppType*>{})));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}));
      return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::HashSet_1<T>*, false>(static_cast<Il2CppObject*>(nullptr), ___generic__method);
    }
    // static public System.Collections.Generic.Stack`1<T> Stack()
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class T>
    static ::System::Collections::Generic::Stack_1<T>* Stack() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRObjectPool::Stack");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRObjectPool", "Stack", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}, ::std::vector<const Il2CppType*>{})));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}));
      return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::Stack_1<T>*, false>(static_cast<Il2CppObject*>(nullptr), ___generic__method);
    }
    // static public System.Collections.Generic.Queue`1<T> Queue()
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class T>
    static ::System::Collections::Generic::Queue_1<T>* Queue() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRObjectPool::Queue");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRObjectPool", "Queue", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}, ::std::vector<const Il2CppType*>{})));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}));
      return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::Queue_1<T>*, false>(static_cast<Il2CppObject*>(nullptr), ___generic__method);
    }
    // static public System.Void Return(T obj)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class T>
    static void Return(T obj) {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRObjectPool::Return");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRObjectPool", "Return", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}));
      ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___generic__method, obj);
    }
    // static public System.Void Return(System.Collections.Generic.HashSet`1<T> set)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class T>
    static void Return(::System::Collections::Generic::HashSet_1<T>* set) {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRObjectPool::Return");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRObjectPool", "Return", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(set)})));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}));
      ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___generic__method, set);
    }
    // static public System.Void Return(System.Collections.Generic.Stack`1<T> stack)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class T>
    static void Return(::System::Collections::Generic::Stack_1<T>* stack) {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRObjectPool::Return");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRObjectPool", "Return", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stack)})));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}));
      ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___generic__method, stack);
    }
    // static public System.Void Return(System.Collections.Generic.Queue`1<T> queue)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class T>
    static void Return(::System::Collections::Generic::Queue_1<T>* queue) {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRObjectPool::Return");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRObjectPool", "Return", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(queue)})));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}));
      ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___generic__method, queue);
    }
  }; // OVRObjectPool
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::OVRObjectPool::Get
// Il2CppName: Get
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: GlobalNamespace::OVRObjectPool::List
// Il2CppName: List
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: GlobalNamespace::OVRObjectPool::Dictionary
// Il2CppName: Dictionary
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: GlobalNamespace::OVRObjectPool::HashSet
// Il2CppName: HashSet
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: GlobalNamespace::OVRObjectPool::Stack
// Il2CppName: Stack
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: GlobalNamespace::OVRObjectPool::Queue
// Il2CppName: Queue
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: GlobalNamespace::OVRObjectPool::Return
// Il2CppName: Return
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: GlobalNamespace::OVRObjectPool::Return
// Il2CppName: Return
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: GlobalNamespace::OVRObjectPool::Return
// Il2CppName: Return
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: GlobalNamespace::OVRObjectPool::Return
// Il2CppName: Return
// Cannot write MetadataGetter for generic methods!
