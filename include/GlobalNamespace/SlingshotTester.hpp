// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: SlingshotTestScenario
  class SlingshotTestScenario;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Forward declaring type: SlingshotTester
  class SlingshotTester;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::SlingshotTester);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::SlingshotTester*, "", "SlingshotTester");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x30
  #pragma pack(push, 1)
  // Autogenerated type: SlingshotTester
  // [TokenAttribute] Offset: FFFFFFFF
  class SlingshotTester : public ::UnityEngine::MonoBehaviour {
    public:
    public:
    // public SlingshotTestScenario currentScenario
    // Size: 0x8
    // Offset: 0x20
    ::GlobalNamespace::SlingshotTestScenario* currentScenario;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::SlingshotTestScenario*) == 0x8);
    // public SlingshotTestScenario[] scenarioList
    // Size: 0x8
    // Offset: 0x28
    ::ArrayW<::GlobalNamespace::SlingshotTestScenario*> scenarioList;
    // Field size check
    static_assert(sizeof(::ArrayW<::GlobalNamespace::SlingshotTestScenario*>) == 0x8);
    public:
    // Get instance field reference: public SlingshotTestScenario currentScenario
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::SlingshotTestScenario*& dyn_currentScenario();
    // Get instance field reference: public SlingshotTestScenario[] scenarioList
    [[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::SlingshotTestScenario*>& dyn_scenarioList();
    // public System.Void .ctor()
    // Offset: 0x2972B18
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static SlingshotTester* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SlingshotTester::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<SlingshotTester*, creationType>()));
    }
  }; // SlingshotTester
  #pragma pack(pop)
  static check_size<sizeof(SlingshotTester), 40 + sizeof(::ArrayW<::GlobalNamespace::SlingshotTestScenario*>)> __GlobalNamespace_SlingshotTesterSizeCheck;
  static_assert(sizeof(SlingshotTester) == 0x30);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::SlingshotTester::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
