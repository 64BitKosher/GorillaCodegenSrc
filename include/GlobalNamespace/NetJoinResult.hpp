// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Enum
#include "System/Enum.hpp"
// Completed includes
// Type namespace: 
namespace GlobalNamespace {
  // Forward declaring type: NetJoinResult
  struct NetJoinResult;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::NetJoinResult, "", "NetJoinResult");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x4
  #pragma pack(push, 1)
  // Autogenerated type: NetJoinResult
  // [TokenAttribute] Offset: FFFFFFFF
  struct NetJoinResult/*, public ::System::Enum*/ {
    public:
    public:
    // public System.Int32 value__
    // Size: 0x4
    // Offset: 0x0
    int value;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Creating value type constructor for type: NetJoinResult
    constexpr NetJoinResult(int value_ = {}) noexcept : value{value_} {}
    // Creating interface conversion operator: operator ::System::Enum
    operator ::System::Enum() noexcept {
      return *reinterpret_cast<::System::Enum*>(this);
    }
    // Creating conversion operator: operator int
    constexpr operator int() const noexcept {
      return value;
    }
    // static field const value: static public NetJoinResult Success
    static constexpr const int Success = 0;
    // Get static field: static public NetJoinResult Success
    static ::GlobalNamespace::NetJoinResult _get_Success();
    // Set static field: static public NetJoinResult Success
    static void _set_Success(::GlobalNamespace::NetJoinResult value);
    // static field const value: static public NetJoinResult FallbackCreated
    static constexpr const int FallbackCreated = 1;
    // Get static field: static public NetJoinResult FallbackCreated
    static ::GlobalNamespace::NetJoinResult _get_FallbackCreated();
    // Set static field: static public NetJoinResult FallbackCreated
    static void _set_FallbackCreated(::GlobalNamespace::NetJoinResult value);
    // static field const value: static public NetJoinResult Failed_Full
    static constexpr const int Failed_Full = 2;
    // Get static field: static public NetJoinResult Failed_Full
    static ::GlobalNamespace::NetJoinResult _get_Failed_Full();
    // Set static field: static public NetJoinResult Failed_Full
    static void _set_Failed_Full(::GlobalNamespace::NetJoinResult value);
    // static field const value: static public NetJoinResult AlreadyInRoom
    static constexpr const int AlreadyInRoom = 3;
    // Get static field: static public NetJoinResult AlreadyInRoom
    static ::GlobalNamespace::NetJoinResult _get_AlreadyInRoom();
    // Set static field: static public NetJoinResult AlreadyInRoom
    static void _set_AlreadyInRoom(::GlobalNamespace::NetJoinResult value);
    // static field const value: static public NetJoinResult Failed_Other
    static constexpr const int Failed_Other = 4;
    // Get static field: static public NetJoinResult Failed_Other
    static ::GlobalNamespace::NetJoinResult _get_Failed_Other();
    // Set static field: static public NetJoinResult Failed_Other
    static void _set_Failed_Other(::GlobalNamespace::NetJoinResult value);
    // Get instance field reference: public System.Int32 value__
    [[deprecated("Use field access instead!")]] int& dyn_value__();
  }; // NetJoinResult
  #pragma pack(pop)
  static check_size<sizeof(NetJoinResult), 0 + sizeof(int)> __GlobalNamespace_NetJoinResultSizeCheck;
  static_assert(sizeof(NetJoinResult) == 0x4);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
