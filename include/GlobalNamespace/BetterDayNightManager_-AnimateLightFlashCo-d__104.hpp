// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: BetterDayNightManager
#include "GlobalNamespace/BetterDayNightManager.hpp"
// Including type: System.Collections.Generic.IEnumerator`1
#include "System/Collections/Generic/IEnumerator_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::BetterDayNightManager::$AnimateLightFlashCo$d__104);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::BetterDayNightManager::$AnimateLightFlashCo$d__104*, "", "BetterDayNightManager/<AnimateLightFlashCo>d__104");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x3C
  #pragma pack(push, 1)
  // Autogenerated type: BetterDayNightManager/<AnimateLightFlashCo>d__104
  // [TokenAttribute] Offset: FFFFFFFF
  // [CompilerGeneratedAttribute] Offset: FFFFFFFF
  class BetterDayNightManager::$AnimateLightFlashCo$d__104 : public ::Il2CppObject/*, public ::System::Collections::Generic::IEnumerator_1<::Il2CppObject*>*/ {
    public:
    public:
    // private System.Int32 <>1__state
    // Size: 0x4
    // Offset: 0x10
    int $$1__state;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // Padding between fields: $$1__state and: $$2__current
    char __padding0[0x4] = {};
    // private System.Object <>2__current
    // Size: 0x8
    // Offset: 0x18
    ::Il2CppObject* $$2__current;
    // Field size check
    static_assert(sizeof(::Il2CppObject*) == 0x8);
    // public BetterDayNightManager <>4__this
    // Size: 0x8
    // Offset: 0x20
    ::GlobalNamespace::BetterDayNightManager* $$4__this;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::BetterDayNightManager*) == 0x8);
    // public System.Int32 index
    // Size: 0x4
    // Offset: 0x28
    int index;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // public System.Single fadeInDuration
    // Size: 0x4
    // Offset: 0x2C
    float fadeInDuration;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // public System.Single fadeOutDuration
    // Size: 0x4
    // Offset: 0x30
    float fadeOutDuration;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Int32 <startMap>5__2
    // Size: 0x4
    // Offset: 0x34
    int $startMap$5__2;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private System.Single <endTimestamp>5__3
    // Size: 0x4
    // Offset: 0x38
    float $endTimestamp$5__3;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    public:
    // Creating interface conversion operator: operator ::System::Collections::Generic::IEnumerator_1<::Il2CppObject*>
    operator ::System::Collections::Generic::IEnumerator_1<::Il2CppObject*>() noexcept {
      return *reinterpret_cast<::System::Collections::Generic::IEnumerator_1<::Il2CppObject*>*>(this);
    }
    // Get instance field reference: private System.Int32 <>1__state
    [[deprecated("Use field access instead!")]] int& dyn_$$1__state();
    // Get instance field reference: private System.Object <>2__current
    [[deprecated("Use field access instead!")]] ::Il2CppObject*& dyn_$$2__current();
    // Get instance field reference: public BetterDayNightManager <>4__this
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::BetterDayNightManager*& dyn_$$4__this();
    // Get instance field reference: public System.Int32 index
    [[deprecated("Use field access instead!")]] int& dyn_index();
    // Get instance field reference: public System.Single fadeInDuration
    [[deprecated("Use field access instead!")]] float& dyn_fadeInDuration();
    // Get instance field reference: public System.Single fadeOutDuration
    [[deprecated("Use field access instead!")]] float& dyn_fadeOutDuration();
    // Get instance field reference: private System.Int32 <startMap>5__2
    [[deprecated("Use field access instead!")]] int& dyn_$startMap$5__2();
    // Get instance field reference: private System.Single <endTimestamp>5__3
    [[deprecated("Use field access instead!")]] float& dyn_$endTimestamp$5__3();
    // public System.Void .ctor(System.Int32 <>1__state)
    // Offset: 0x2737C48
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static BetterDayNightManager::$AnimateLightFlashCo$d__104* New_ctor(int $$1__state) {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::$AnimateLightFlashCo$d__104::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<BetterDayNightManager::$AnimateLightFlashCo$d__104*, creationType>($$1__state)));
    }
    // private System.Void System.IDisposable.Dispose()
    // Offset: 0x273807C
    void System_IDisposable_Dispose();
    // private System.Boolean MoveNext()
    // Offset: 0x2738080
    bool MoveNext();
    // private System.Object System.Collections.Generic.IEnumerator<System.Object>.get_Current()
    // Offset: 0x27382D0
    ::Il2CppObject* System_Collections_Generic_IEnumerator$System_Object$_get_Current();
    // private System.Void System.Collections.IEnumerator.Reset()
    // Offset: 0x27382D8
    void System_Collections_IEnumerator_Reset();
    // private System.Object System.Collections.IEnumerator.get_Current()
    // Offset: 0x2738310
    ::Il2CppObject* System_Collections_IEnumerator_get_Current();
  }; // BetterDayNightManager/<AnimateLightFlashCo>d__104
  #pragma pack(pop)
  static check_size<sizeof(BetterDayNightManager::$AnimateLightFlashCo$d__104), 56 + sizeof(float)> __GlobalNamespace_BetterDayNightManager_$AnimateLightFlashCo$d__104SizeCheck;
  static_assert(sizeof(BetterDayNightManager::$AnimateLightFlashCo$d__104) == 0x3C);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::BetterDayNightManager::$AnimateLightFlashCo$d__104::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: GlobalNamespace::BetterDayNightManager::$AnimateLightFlashCo$d__104::System_IDisposable_Dispose
// Il2CppName: System.IDisposable.Dispose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::BetterDayNightManager::$AnimateLightFlashCo$d__104::*)()>(&GlobalNamespace::BetterDayNightManager::$AnimateLightFlashCo$d__104::System_IDisposable_Dispose)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::BetterDayNightManager::$AnimateLightFlashCo$d__104*), "System.IDisposable.Dispose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::BetterDayNightManager::$AnimateLightFlashCo$d__104::MoveNext
// Il2CppName: MoveNext
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (GlobalNamespace::BetterDayNightManager::$AnimateLightFlashCo$d__104::*)()>(&GlobalNamespace::BetterDayNightManager::$AnimateLightFlashCo$d__104::MoveNext)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::BetterDayNightManager::$AnimateLightFlashCo$d__104*), "MoveNext", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::BetterDayNightManager::$AnimateLightFlashCo$d__104::System_Collections_Generic_IEnumerator$System_Object$_get_Current
// Il2CppName: System.Collections.Generic.IEnumerator<System.Object>.get_Current
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (GlobalNamespace::BetterDayNightManager::$AnimateLightFlashCo$d__104::*)()>(&GlobalNamespace::BetterDayNightManager::$AnimateLightFlashCo$d__104::System_Collections_Generic_IEnumerator$System_Object$_get_Current)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::BetterDayNightManager::$AnimateLightFlashCo$d__104*), "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::BetterDayNightManager::$AnimateLightFlashCo$d__104::System_Collections_IEnumerator_Reset
// Il2CppName: System.Collections.IEnumerator.Reset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::BetterDayNightManager::$AnimateLightFlashCo$d__104::*)()>(&GlobalNamespace::BetterDayNightManager::$AnimateLightFlashCo$d__104::System_Collections_IEnumerator_Reset)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::BetterDayNightManager::$AnimateLightFlashCo$d__104*), "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::BetterDayNightManager::$AnimateLightFlashCo$d__104::System_Collections_IEnumerator_get_Current
// Il2CppName: System.Collections.IEnumerator.get_Current
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (GlobalNamespace::BetterDayNightManager::$AnimateLightFlashCo$d__104::*)()>(&GlobalNamespace::BetterDayNightManager::$AnimateLightFlashCo$d__104::System_Collections_IEnumerator_get_Current)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::BetterDayNightManager::$AnimateLightFlashCo$d__104*), "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
