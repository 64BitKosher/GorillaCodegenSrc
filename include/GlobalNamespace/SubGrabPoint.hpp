// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: LimitAxis
#include "GlobalNamespace/LimitAxis.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: UnityEngine.Quaternion
#include "UnityEngine/Quaternion.hpp"
// Including type: UnityEngine.Matrix4x4
#include "UnityEngine/Matrix4x4.hpp"
// Including type: AdvancedItemState
#include "GlobalNamespace/AdvancedItemState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Transform
  class Transform;
}
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: SlotTransformOverride
  class SlotTransformOverride;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Forward declaring type: SubGrabPoint
  class SubGrabPoint;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::SubGrabPoint);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::SubGrabPoint*, "", "SubGrabPoint");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0xA8
  #pragma pack(push, 1)
  // Autogenerated type: SubGrabPoint
  // [TokenAttribute] Offset: FFFFFFFF
  class SubGrabPoint : public ::Il2CppObject {
    public:
    public:
    // public UnityEngine.Transform gripPoint
    // Size: 0x8
    // Offset: 0x10
    ::UnityEngine::Transform* gripPoint;
    // Field size check
    static_assert(sizeof(::UnityEngine::Transform*) == 0x8);
    // public LimitAxis limitAxis
    // Size: 0x4
    // Offset: 0x18
    ::GlobalNamespace::LimitAxis limitAxis;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::LimitAxis) == 0x4);
    // public System.Boolean allowReverseGrip
    // Size: 0x1
    // Offset: 0x1C
    bool allowReverseGrip;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: allowReverseGrip and: gripPoint_AdvOriginLocal
    char __padding2[0x3] = {};
    // private UnityEngine.Vector3 gripPoint_AdvOriginLocal
    // Size: 0xC
    // Offset: 0x20
    ::UnityEngine::Vector3 gripPoint_AdvOriginLocal;
    // Field size check
    static_assert(sizeof(::UnityEngine::Vector3) == 0xC);
    // private UnityEngine.Vector3 gripPointOffset_AdvOriginLocal
    // Size: 0xC
    // Offset: 0x2C
    ::UnityEngine::Vector3 gripPointOffset_AdvOriginLocal;
    // Field size check
    static_assert(sizeof(::UnityEngine::Vector3) == 0xC);
    // public UnityEngine.Quaternion gripRotation_AdvOriginLocal
    // Size: 0x10
    // Offset: 0x38
    ::UnityEngine::Quaternion gripRotation_AdvOriginLocal;
    // Field size check
    static_assert(sizeof(::UnityEngine::Quaternion) == 0x10);
    // public UnityEngine.Quaternion advAnchor_ParentAnchorLocal
    // Size: 0x10
    // Offset: 0x48
    ::UnityEngine::Quaternion advAnchor_ParentAnchorLocal;
    // Field size check
    static_assert(sizeof(::UnityEngine::Quaternion) == 0x10);
    // public UnityEngine.Quaternion gripRotation_ParentAnchorLocal
    // Size: 0x10
    // Offset: 0x58
    ::UnityEngine::Quaternion gripRotation_ParentAnchorLocal;
    // Field size check
    static_assert(sizeof(::UnityEngine::Quaternion) == 0x10);
    // public UnityEngine.Matrix4x4 gripPointLocalToAdvOriginLocal
    // Size: 0x40
    // Offset: 0x68
    ::UnityEngine::Matrix4x4 gripPointLocalToAdvOriginLocal;
    // Field size check
    static_assert(sizeof(::UnityEngine::Matrix4x4) == 0x40);
    public:
    // Get instance field reference: public UnityEngine.Transform gripPoint
    [[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& dyn_gripPoint();
    // Get instance field reference: public LimitAxis limitAxis
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::LimitAxis& dyn_limitAxis();
    // Get instance field reference: public System.Boolean allowReverseGrip
    [[deprecated("Use field access instead!")]] bool& dyn_allowReverseGrip();
    // Get instance field reference: private UnityEngine.Vector3 gripPoint_AdvOriginLocal
    [[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& dyn_gripPoint_AdvOriginLocal();
    // Get instance field reference: private UnityEngine.Vector3 gripPointOffset_AdvOriginLocal
    [[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& dyn_gripPointOffset_AdvOriginLocal();
    // Get instance field reference: public UnityEngine.Quaternion gripRotation_AdvOriginLocal
    [[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& dyn_gripRotation_AdvOriginLocal();
    // Get instance field reference: public UnityEngine.Quaternion advAnchor_ParentAnchorLocal
    [[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& dyn_advAnchor_ParentAnchorLocal();
    // Get instance field reference: public UnityEngine.Quaternion gripRotation_ParentAnchorLocal
    [[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& dyn_gripRotation_ParentAnchorLocal();
    // Get instance field reference: public UnityEngine.Matrix4x4 gripPointLocalToAdvOriginLocal
    [[deprecated("Use field access instead!")]] ::UnityEngine::Matrix4x4& dyn_gripPointLocalToAdvOriginLocal();
    // public UnityEngine.Matrix4x4 GetTransformation_GripPointLocalToAdvOriginLocal(AdvancedItemState/PreData advancedItemState, SlotTransformOverride slotTransformOverride)
    // Offset: 0x26C1BD4
    ::UnityEngine::Matrix4x4 GetTransformation_GripPointLocalToAdvOriginLocal(::GlobalNamespace::AdvancedItemState::PreData* advancedItemState, ::GlobalNamespace::SlotTransformOverride* slotTransformOverride);
    // public UnityEngine.Quaternion GetRotationRelativeToObjectAnchor(AdvancedItemState advancedItemState, SlotTransformOverride slotTransformOverride)
    // Offset: 0x26C1BF0
    ::UnityEngine::Quaternion GetRotationRelativeToObjectAnchor(::GlobalNamespace::AdvancedItemState* advancedItemState, ::GlobalNamespace::SlotTransformOverride* slotTransformOverride);
    // public UnityEngine.Vector3 GetGrabPositionRelativeToGrabPointOrigin(AdvancedItemState advancedItemState, SlotTransformOverride slotTransformOverride)
    // Offset: 0x26C1BFC
    ::UnityEngine::Vector3 GetGrabPositionRelativeToGrabPointOrigin(::GlobalNamespace::AdvancedItemState* advancedItemState, ::GlobalNamespace::SlotTransformOverride* slotTransformOverride);
    // public System.Void InitializePoints(UnityEngine.Transform anchor, UnityEngine.Transform grabPointAnchor, UnityEngine.Transform advancedGrabPointOrigin)
    // Offset: 0x26C1C08
    void InitializePoints(::UnityEngine::Transform* anchor, ::UnityEngine::Transform* grabPointAnchor, ::UnityEngine::Transform* advancedGrabPointOrigin);
    // public UnityEngine.Vector3 GetPositionOnObject(UnityEngine.Transform transferableObject, SlotTransformOverride slotTransformOverride)
    // Offset: 0x26C1F60
    ::UnityEngine::Vector3 GetPositionOnObject(::UnityEngine::Transform* transferableObject, ::GlobalNamespace::SlotTransformOverride* slotTransformOverride);
    // public UnityEngine.Matrix4x4 GetTransformFromPositionState(AdvancedItemState advancedItemState, SlotTransformOverride slotTransformOverride, UnityEngine.Transform targetDockXf)
    // Offset: 0x26C1F84
    ::UnityEngine::Matrix4x4 GetTransformFromPositionState(::GlobalNamespace::AdvancedItemState* advancedItemState, ::GlobalNamespace::SlotTransformOverride* slotTransformOverride, ::UnityEngine::Transform* targetDockXf);
    // public AdvancedItemState GetAdvancedItemStateFromHand(UnityEngine.Transform objectTransform, UnityEngine.Transform handTransform, UnityEngine.Transform targetDock, SlotTransformOverride slotTransformOverride)
    // Offset: 0x26C2290
    ::GlobalNamespace::AdvancedItemState* GetAdvancedItemStateFromHand(::UnityEngine::Transform* objectTransform, ::UnityEngine::Transform* handTransform, ::UnityEngine::Transform* targetDock, ::GlobalNamespace::SlotTransformOverride* slotTransformOverride);
    // public AdvancedItemState/PreData GetPreData(UnityEngine.Transform objectTransform, UnityEngine.Transform handTransform, UnityEngine.Transform targetDock, SlotTransformOverride slotTransformOverride)
    // Offset: 0x26C2898
    ::GlobalNamespace::AdvancedItemState::PreData* GetPreData(::UnityEngine::Transform* objectTransform, ::UnityEngine::Transform* handTransform, ::UnityEngine::Transform* targetDock, ::GlobalNamespace::SlotTransformOverride* slotTransformOverride);
    // public System.Single EvaluateScore(UnityEngine.Transform objectTransform, UnityEngine.Transform handTransform, UnityEngine.Transform targetDock)
    // Offset: 0x26C28F8
    float EvaluateScore(::UnityEngine::Transform* objectTransform, ::UnityEngine::Transform* handTransform, ::UnityEngine::Transform* targetDock);
    // public System.Void .ctor()
    // Offset: 0x26C2B64
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static SubGrabPoint* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SubGrabPoint::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<SubGrabPoint*, creationType>()));
    }
  }; // SubGrabPoint
  #pragma pack(pop)
  static check_size<sizeof(SubGrabPoint), 104 + sizeof(::UnityEngine::Matrix4x4)> __GlobalNamespace_SubGrabPointSizeCheck;
  static_assert(sizeof(SubGrabPoint) == 0xA8);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::SubGrabPoint::GetTransformation_GripPointLocalToAdvOriginLocal
// Il2CppName: GetTransformation_GripPointLocalToAdvOriginLocal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Matrix4x4 (GlobalNamespace::SubGrabPoint::*)(::GlobalNamespace::AdvancedItemState::PreData*, ::GlobalNamespace::SlotTransformOverride*)>(&GlobalNamespace::SubGrabPoint::GetTransformation_GripPointLocalToAdvOriginLocal)> {
  static const MethodInfo* get() {
    static auto* advancedItemState = &::il2cpp_utils::GetClassFromName("", "AdvancedItemState/PreData")->byval_arg;
    static auto* slotTransformOverride = &::il2cpp_utils::GetClassFromName("", "SlotTransformOverride")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::SubGrabPoint*), "GetTransformation_GripPointLocalToAdvOriginLocal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{advancedItemState, slotTransformOverride});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::SubGrabPoint::GetRotationRelativeToObjectAnchor
// Il2CppName: GetRotationRelativeToObjectAnchor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Quaternion (GlobalNamespace::SubGrabPoint::*)(::GlobalNamespace::AdvancedItemState*, ::GlobalNamespace::SlotTransformOverride*)>(&GlobalNamespace::SubGrabPoint::GetRotationRelativeToObjectAnchor)> {
  static const MethodInfo* get() {
    static auto* advancedItemState = &::il2cpp_utils::GetClassFromName("", "AdvancedItemState")->byval_arg;
    static auto* slotTransformOverride = &::il2cpp_utils::GetClassFromName("", "SlotTransformOverride")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::SubGrabPoint*), "GetRotationRelativeToObjectAnchor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{advancedItemState, slotTransformOverride});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::SubGrabPoint::GetGrabPositionRelativeToGrabPointOrigin
// Il2CppName: GetGrabPositionRelativeToGrabPointOrigin
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector3 (GlobalNamespace::SubGrabPoint::*)(::GlobalNamespace::AdvancedItemState*, ::GlobalNamespace::SlotTransformOverride*)>(&GlobalNamespace::SubGrabPoint::GetGrabPositionRelativeToGrabPointOrigin)> {
  static const MethodInfo* get() {
    static auto* advancedItemState = &::il2cpp_utils::GetClassFromName("", "AdvancedItemState")->byval_arg;
    static auto* slotTransformOverride = &::il2cpp_utils::GetClassFromName("", "SlotTransformOverride")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::SubGrabPoint*), "GetGrabPositionRelativeToGrabPointOrigin", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{advancedItemState, slotTransformOverride});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::SubGrabPoint::InitializePoints
// Il2CppName: InitializePoints
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::SubGrabPoint::*)(::UnityEngine::Transform*, ::UnityEngine::Transform*, ::UnityEngine::Transform*)>(&GlobalNamespace::SubGrabPoint::InitializePoints)> {
  static const MethodInfo* get() {
    static auto* anchor = &::il2cpp_utils::GetClassFromName("UnityEngine", "Transform")->byval_arg;
    static auto* grabPointAnchor = &::il2cpp_utils::GetClassFromName("UnityEngine", "Transform")->byval_arg;
    static auto* advancedGrabPointOrigin = &::il2cpp_utils::GetClassFromName("UnityEngine", "Transform")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::SubGrabPoint*), "InitializePoints", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{anchor, grabPointAnchor, advancedGrabPointOrigin});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::SubGrabPoint::GetPositionOnObject
// Il2CppName: GetPositionOnObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector3 (GlobalNamespace::SubGrabPoint::*)(::UnityEngine::Transform*, ::GlobalNamespace::SlotTransformOverride*)>(&GlobalNamespace::SubGrabPoint::GetPositionOnObject)> {
  static const MethodInfo* get() {
    static auto* transferableObject = &::il2cpp_utils::GetClassFromName("UnityEngine", "Transform")->byval_arg;
    static auto* slotTransformOverride = &::il2cpp_utils::GetClassFromName("", "SlotTransformOverride")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::SubGrabPoint*), "GetPositionOnObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{transferableObject, slotTransformOverride});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::SubGrabPoint::GetTransformFromPositionState
// Il2CppName: GetTransformFromPositionState
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Matrix4x4 (GlobalNamespace::SubGrabPoint::*)(::GlobalNamespace::AdvancedItemState*, ::GlobalNamespace::SlotTransformOverride*, ::UnityEngine::Transform*)>(&GlobalNamespace::SubGrabPoint::GetTransformFromPositionState)> {
  static const MethodInfo* get() {
    static auto* advancedItemState = &::il2cpp_utils::GetClassFromName("", "AdvancedItemState")->byval_arg;
    static auto* slotTransformOverride = &::il2cpp_utils::GetClassFromName("", "SlotTransformOverride")->byval_arg;
    static auto* targetDockXf = &::il2cpp_utils::GetClassFromName("UnityEngine", "Transform")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::SubGrabPoint*), "GetTransformFromPositionState", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{advancedItemState, slotTransformOverride, targetDockXf});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::SubGrabPoint::GetAdvancedItemStateFromHand
// Il2CppName: GetAdvancedItemStateFromHand
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::AdvancedItemState* (GlobalNamespace::SubGrabPoint::*)(::UnityEngine::Transform*, ::UnityEngine::Transform*, ::UnityEngine::Transform*, ::GlobalNamespace::SlotTransformOverride*)>(&GlobalNamespace::SubGrabPoint::GetAdvancedItemStateFromHand)> {
  static const MethodInfo* get() {
    static auto* objectTransform = &::il2cpp_utils::GetClassFromName("UnityEngine", "Transform")->byval_arg;
    static auto* handTransform = &::il2cpp_utils::GetClassFromName("UnityEngine", "Transform")->byval_arg;
    static auto* targetDock = &::il2cpp_utils::GetClassFromName("UnityEngine", "Transform")->byval_arg;
    static auto* slotTransformOverride = &::il2cpp_utils::GetClassFromName("", "SlotTransformOverride")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::SubGrabPoint*), "GetAdvancedItemStateFromHand", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{objectTransform, handTransform, targetDock, slotTransformOverride});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::SubGrabPoint::GetPreData
// Il2CppName: GetPreData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::AdvancedItemState::PreData* (GlobalNamespace::SubGrabPoint::*)(::UnityEngine::Transform*, ::UnityEngine::Transform*, ::UnityEngine::Transform*, ::GlobalNamespace::SlotTransformOverride*)>(&GlobalNamespace::SubGrabPoint::GetPreData)> {
  static const MethodInfo* get() {
    static auto* objectTransform = &::il2cpp_utils::GetClassFromName("UnityEngine", "Transform")->byval_arg;
    static auto* handTransform = &::il2cpp_utils::GetClassFromName("UnityEngine", "Transform")->byval_arg;
    static auto* targetDock = &::il2cpp_utils::GetClassFromName("UnityEngine", "Transform")->byval_arg;
    static auto* slotTransformOverride = &::il2cpp_utils::GetClassFromName("", "SlotTransformOverride")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::SubGrabPoint*), "GetPreData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{objectTransform, handTransform, targetDock, slotTransformOverride});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::SubGrabPoint::EvaluateScore
// Il2CppName: EvaluateScore
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (GlobalNamespace::SubGrabPoint::*)(::UnityEngine::Transform*, ::UnityEngine::Transform*, ::UnityEngine::Transform*)>(&GlobalNamespace::SubGrabPoint::EvaluateScore)> {
  static const MethodInfo* get() {
    static auto* objectTransform = &::il2cpp_utils::GetClassFromName("UnityEngine", "Transform")->byval_arg;
    static auto* handTransform = &::il2cpp_utils::GetClassFromName("UnityEngine", "Transform")->byval_arg;
    static auto* targetDock = &::il2cpp_utils::GetClassFromName("UnityEngine", "Transform")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::SubGrabPoint*), "EvaluateScore", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{objectTransform, handTransform, targetDock});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::SubGrabPoint::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
