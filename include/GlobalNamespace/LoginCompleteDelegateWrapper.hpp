// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: MothershipRequestCompleteDelegateWrapper
#include "GlobalNamespace/MothershipRequestCompleteDelegateWrapper.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: MothershipClientApiClient
  class MothershipClientApiClient;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Type
  class Type;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Forward declaring type: LoginCompleteDelegateWrapper
  class LoginCompleteDelegateWrapper;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::LoginCompleteDelegateWrapper);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::LoginCompleteDelegateWrapper*, "", "LoginCompleteDelegateWrapper");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x40
  #pragma pack(push, 1)
  // Autogenerated type: LoginCompleteDelegateWrapper
  // [TokenAttribute] Offset: FFFFFFFF
  class LoginCompleteDelegateWrapper : public ::GlobalNamespace::MothershipRequestCompleteDelegateWrapper {
    public:
    // Writing base type padding for base size: 0x21 to desired offset: 0x28
    char ___base_padding[0x7] = {};
    // Nested type: ::GlobalNamespace::LoginCompleteDelegateWrapper::SwigDelegateLoginCompleteDelegateWrapper_0
    class SwigDelegateLoginCompleteDelegateWrapper_0;
    public:
    // private System.Runtime.InteropServices.HandleRef swigCPtr
    // Size: 0x10
    // Offset: 0x28
    ::System::Runtime::InteropServices::HandleRef swigCPtr;
    // Field size check
    static_assert(sizeof(::System::Runtime::InteropServices::HandleRef) == 0x10);
    // private LoginCompleteDelegateWrapper/SwigDelegateLoginCompleteDelegateWrapper_0 swigDelegate0
    // Size: 0x8
    // Offset: 0x38
    ::GlobalNamespace::LoginCompleteDelegateWrapper::SwigDelegateLoginCompleteDelegateWrapper_0* swigDelegate0;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::LoginCompleteDelegateWrapper::SwigDelegateLoginCompleteDelegateWrapper_0*) == 0x8);
    public:
    // Get static field: static protected LoginCompleteDelegateWrapper selfInstance
    static ::GlobalNamespace::LoginCompleteDelegateWrapper* _get_selfInstance();
    // Set static field: static protected LoginCompleteDelegateWrapper selfInstance
    static void _set_selfInstance(::GlobalNamespace::LoginCompleteDelegateWrapper* value);
    // Get static field: static private System.Type[] swigMethodTypes0
    static ::ArrayW<::System::Type*> _get_swigMethodTypes0();
    // Set static field: static private System.Type[] swigMethodTypes0
    static void _set_swigMethodTypes0(::ArrayW<::System::Type*> value);
    // Get instance field reference: private System.Runtime.InteropServices.HandleRef swigCPtr
    [[deprecated("Use field access instead!")]] ::System::Runtime::InteropServices::HandleRef& dyn_swigCPtr();
    // Get instance field reference: private LoginCompleteDelegateWrapper/SwigDelegateLoginCompleteDelegateWrapper_0 swigDelegate0
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::LoginCompleteDelegateWrapper::SwigDelegateLoginCompleteDelegateWrapper_0*& dyn_swigDelegate0();
    // static System.Runtime.InteropServices.HandleRef getCPtr(LoginCompleteDelegateWrapper obj)
    // Offset: 0x2676788
    static ::System::Runtime::InteropServices::HandleRef getCPtr(::GlobalNamespace::LoginCompleteDelegateWrapper* obj);
    // public System.Void .ctor(MothershipClientApiClient clientApiClient)
    // Offset: 0x2676AF4
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static LoginCompleteDelegateWrapper* New_ctor(::GlobalNamespace::MothershipClientApiClient* clientApiClient) {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LoginCompleteDelegateWrapper::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<LoginCompleteDelegateWrapper*, creationType>(clientApiClient)));
    }
    // private System.Void SwigDirectorConnect()
    // Offset: 0x2676C98
    void SwigDirectorConnect();
    // private System.Boolean SwigDerivedClassHasMethod(System.String methodName, System.Type[] methodTypes)
    // Offset: 0x2676DC4
    bool SwigDerivedClassHasMethod(::StringW methodName, ::ArrayW<::System::Type*> methodTypes);
    // static private System.Void SwigDirectorMethodOnCompleteCallback(System.IntPtr response, System.Boolean wasSuccess, System.IntPtr error, System.IntPtr userData)
    // Offset: 0x267650C
    static void SwigDirectorMethodOnCompleteCallback(::System::IntPtr response, bool wasSuccess, ::System::IntPtr error, ::System::IntPtr userData);
    // static private System.Void .cctor()
    // Offset: 0x2677294
    static void _cctor();
    // System.Void .ctor(System.IntPtr cPtr, System.Boolean cMemoryOwn)
    // Offset: 0x2676600
    // Implemented from: MothershipRequestCompleteDelegateWrapper
    // Base method: System.Void MothershipRequestCompleteDelegateWrapper::.ctor(System.IntPtr cPtr, System.Boolean cMemoryOwn)
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static LoginCompleteDelegateWrapper* New_ctor(::System::IntPtr cPtr, bool cMemoryOwn) {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LoginCompleteDelegateWrapper::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<LoginCompleteDelegateWrapper*, creationType>(cPtr, cMemoryOwn)));
    }
    // protected override System.Void Dispose(System.Boolean disposing)
    // Offset: 0x26767C8
    // Implemented from: MothershipRequestCompleteDelegateWrapper
    // Base method: System.Void MothershipRequestCompleteDelegateWrapper::Dispose(System.Boolean disposing)
    void Dispose(bool disposing);
  }; // LoginCompleteDelegateWrapper
  #pragma pack(pop)
  static check_size<sizeof(LoginCompleteDelegateWrapper), 56 + sizeof(::GlobalNamespace::LoginCompleteDelegateWrapper::SwigDelegateLoginCompleteDelegateWrapper_0*)> __GlobalNamespace_LoginCompleteDelegateWrapperSizeCheck;
  static_assert(sizeof(LoginCompleteDelegateWrapper) == 0x40);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::LoginCompleteDelegateWrapper::getCPtr
// Il2CppName: getCPtr
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Runtime::InteropServices::HandleRef (*)(::GlobalNamespace::LoginCompleteDelegateWrapper*)>(&GlobalNamespace::LoginCompleteDelegateWrapper::getCPtr)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("", "LoginCompleteDelegateWrapper")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::LoginCompleteDelegateWrapper*), "getCPtr", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::LoginCompleteDelegateWrapper::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: GlobalNamespace::LoginCompleteDelegateWrapper::SwigDirectorConnect
// Il2CppName: SwigDirectorConnect
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::LoginCompleteDelegateWrapper::*)()>(&GlobalNamespace::LoginCompleteDelegateWrapper::SwigDirectorConnect)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::LoginCompleteDelegateWrapper*), "SwigDirectorConnect", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::LoginCompleteDelegateWrapper::SwigDerivedClassHasMethod
// Il2CppName: SwigDerivedClassHasMethod
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (GlobalNamespace::LoginCompleteDelegateWrapper::*)(::StringW, ::ArrayW<::System::Type*>)>(&GlobalNamespace::LoginCompleteDelegateWrapper::SwigDerivedClassHasMethod)> {
  static const MethodInfo* get() {
    static auto* methodName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* methodTypes = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Type"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::LoginCompleteDelegateWrapper*), "SwigDerivedClassHasMethod", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{methodName, methodTypes});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::LoginCompleteDelegateWrapper::SwigDirectorMethodOnCompleteCallback
// Il2CppName: SwigDirectorMethodOnCompleteCallback
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, bool, ::System::IntPtr, ::System::IntPtr)>(&GlobalNamespace::LoginCompleteDelegateWrapper::SwigDirectorMethodOnCompleteCallback)> {
  static const MethodInfo* get() {
    static auto* response = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* wasSuccess = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* error = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* userData = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::LoginCompleteDelegateWrapper*), "SwigDirectorMethodOnCompleteCallback", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{response, wasSuccess, error, userData});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::LoginCompleteDelegateWrapper::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&GlobalNamespace::LoginCompleteDelegateWrapper::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::LoginCompleteDelegateWrapper*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::LoginCompleteDelegateWrapper::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: GlobalNamespace::LoginCompleteDelegateWrapper::Dispose
// Il2CppName: Dispose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::LoginCompleteDelegateWrapper::*)(bool)>(&GlobalNamespace::LoginCompleteDelegateWrapper::Dispose)> {
  static const MethodInfo* get() {
    static auto* disposing = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::LoginCompleteDelegateWrapper*), "Dispose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{disposing});
  }
};
