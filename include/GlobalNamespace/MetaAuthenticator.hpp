// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
// Including type: System.Int32
#include "System/Int32.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: MothershipError
  class MothershipError;
}
// Forward declaring namespace: Oculus::Platform
namespace Oculus::Platform {
  // Forward declaring type: Message
  class Message;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Forward declaring type: MetaAuthenticator
  class MetaAuthenticator;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::MetaAuthenticator);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::MetaAuthenticator*, "", "MetaAuthenticator");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x30
  #pragma pack(push, 1)
  // Autogenerated type: MetaAuthenticator
  // [TokenAttribute] Offset: FFFFFFFF
  class MetaAuthenticator : public ::UnityEngine::MonoBehaviour {
    public:
    // Nested type: ::GlobalNamespace::MetaAuthenticator::$$c
    class $$c;
    public:
    // private System.Int32 metaLoginAttempts
    // Size: 0x4
    // Offset: 0x20
    int metaLoginAttempts;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // Padding between fields: metaLoginAttempts and: oculusId
    char __padding0[0x4] = {};
    // private System.String oculusId
    // Size: 0x8
    // Offset: 0x28
    ::StringW oculusId;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    public:
    // static field const value: static private System.Int32 maxMetaLoginAttempts
    static constexpr const int maxMetaLoginAttempts = 5;
    // Get static field: static private System.Int32 maxMetaLoginAttempts
    static int _get_maxMetaLoginAttempts();
    // Set static field: static private System.Int32 maxMetaLoginAttempts
    static void _set_maxMetaLoginAttempts(int value);
    // Get instance field reference: private System.Int32 metaLoginAttempts
    [[deprecated("Use field access instead!")]] int& dyn_metaLoginAttempts();
    // Get instance field reference: private System.String oculusId
    [[deprecated("Use field access instead!")]] ::StringW& dyn_oculusId();
    // public System.Void StartMetaLogIn()
    // Offset: 0x275A238
    void StartMetaLogIn();
    // private System.Void OculusEntitlementCallback(Oculus.Platform.Message msg)
    // Offset: 0x275A400
    void OculusEntitlementCallback(::Oculus::Platform::Message* msg);
    // private System.Void GetOculusUserCallback(Oculus.Platform.Message msg)
    // Offset: 0x275A50C
    void GetOculusUserCallback(::Oculus::Platform::Message* msg);
    // private System.Void GetNonceForMothershipCallback(Oculus.Platform.Message msg)
    // Offset: 0x275A708
    void GetNonceForMothershipCallback(::Oculus::Platform::Message* msg);
    // private System.Void MetaLoginFail()
    // Offset: 0x275A674
    void MetaLoginFail();
    // private System.Void QuitApplication()
    // Offset: 0x275A8BC
    void QuitApplication();
    // public System.Void .ctor()
    // Offset: 0x275A8C0
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static MetaAuthenticator* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MetaAuthenticator::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<MetaAuthenticator*, creationType>()));
    }
    // private System.Void <GetNonceForMothershipCallback>b__6_1(MothershipError Error)
    // Offset: 0x275A920
    void $GetNonceForMothershipCallback$b__6_1(::GlobalNamespace::MothershipError* Error);
  }; // MetaAuthenticator
  #pragma pack(pop)
  static check_size<sizeof(MetaAuthenticator), 40 + sizeof(::StringW)> __GlobalNamespace_MetaAuthenticatorSizeCheck;
  static_assert(sizeof(MetaAuthenticator) == 0x30);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::MetaAuthenticator::StartMetaLogIn
// Il2CppName: StartMetaLogIn
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MetaAuthenticator::*)()>(&GlobalNamespace::MetaAuthenticator::StartMetaLogIn)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MetaAuthenticator*), "StartMetaLogIn", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MetaAuthenticator::OculusEntitlementCallback
// Il2CppName: OculusEntitlementCallback
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MetaAuthenticator::*)(::Oculus::Platform::Message*)>(&GlobalNamespace::MetaAuthenticator::OculusEntitlementCallback)> {
  static const MethodInfo* get() {
    static auto* msg = &::il2cpp_utils::GetClassFromName("Oculus.Platform", "Message")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MetaAuthenticator*), "OculusEntitlementCallback", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{msg});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MetaAuthenticator::GetOculusUserCallback
// Il2CppName: GetOculusUserCallback
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MetaAuthenticator::*)(::Oculus::Platform::Message*)>(&GlobalNamespace::MetaAuthenticator::GetOculusUserCallback)> {
  static const MethodInfo* get() {
    static auto* msg = &::il2cpp_utils::GetClassFromName("Oculus.Platform", "Message")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MetaAuthenticator*), "GetOculusUserCallback", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{msg});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MetaAuthenticator::GetNonceForMothershipCallback
// Il2CppName: GetNonceForMothershipCallback
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MetaAuthenticator::*)(::Oculus::Platform::Message*)>(&GlobalNamespace::MetaAuthenticator::GetNonceForMothershipCallback)> {
  static const MethodInfo* get() {
    static auto* msg = &::il2cpp_utils::GetClassFromName("Oculus.Platform", "Message")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MetaAuthenticator*), "GetNonceForMothershipCallback", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{msg});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MetaAuthenticator::MetaLoginFail
// Il2CppName: MetaLoginFail
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MetaAuthenticator::*)()>(&GlobalNamespace::MetaAuthenticator::MetaLoginFail)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MetaAuthenticator*), "MetaLoginFail", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MetaAuthenticator::QuitApplication
// Il2CppName: QuitApplication
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MetaAuthenticator::*)()>(&GlobalNamespace::MetaAuthenticator::QuitApplication)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MetaAuthenticator*), "QuitApplication", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MetaAuthenticator::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: GlobalNamespace::MetaAuthenticator::$GetNonceForMothershipCallback$b__6_1
// Il2CppName: <GetNonceForMothershipCallback>b__6_1
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MetaAuthenticator::*)(::GlobalNamespace::MothershipError*)>(&GlobalNamespace::MetaAuthenticator::$GetNonceForMothershipCallback$b__6_1)> {
  static const MethodInfo* get() {
    static auto* Error = &::il2cpp_utils::GetClassFromName("", "MothershipError")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MetaAuthenticator*), "<GetNonceForMothershipCallback>b__6_1", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{Error});
  }
};
