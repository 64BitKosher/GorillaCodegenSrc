// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
// Including type: UnityEngine.Vector4
#include "UnityEngine/Vector4.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Camera
  class Camera;
  // Forward declaring type: Transform
  class Transform;
  // Forward declaring type: Texture2D
  class Texture2D;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Forward declaring type: GTShaderGlobals
  class GTShaderGlobals;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::GTShaderGlobals);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::GTShaderGlobals*, "", "GTShaderGlobals");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x20
  #pragma pack(push, 1)
  // Autogenerated type: GTShaderGlobals
  // [TokenAttribute] Offset: FFFFFFFF
  // [ExecuteInEditMode] Offset: FFFFFFFF
  class GTShaderGlobals : public ::UnityEngine::MonoBehaviour {
    public:
    // Get static field: static private UnityEngine.Camera gMainCamera
    static ::UnityEngine::Camera* _get_gMainCamera();
    // Set static field: static private UnityEngine.Camera gMainCamera
    static void _set_gMainCamera(::UnityEngine::Camera* value);
    // Get static field: static private UnityEngine.Transform gMainCameraXform
    static ::UnityEngine::Transform* _get_gMainCameraXform();
    // Set static field: static private UnityEngine.Transform gMainCameraXform
    static void _set_gMainCameraXform(::UnityEngine::Transform* value);
    // Get static field: static private UnityEngine.Vector3 gGameViewCameraPos
    static ::UnityEngine::Vector3 _get_gGameViewCameraPos();
    // Set static field: static private UnityEngine.Vector3 gGameViewCameraPos
    static void _set_gGameViewCameraPos(::UnityEngine::Vector3 value);
    // Get static field: static private UnityEngine.Texture2D gBlueNoiseTex
    static ::UnityEngine::Texture2D* _get_gBlueNoiseTex();
    // Set static field: static private UnityEngine.Texture2D gBlueNoiseTex
    static void _set_gBlueNoiseTex(::UnityEngine::Texture2D* value);
    // Get static field: static private UnityEngine.Vector4 gBlueNoiseTexWH
    static ::UnityEngine::Vector4 _get_gBlueNoiseTexWH();
    // Set static field: static private UnityEngine.Vector4 gBlueNoiseTexWH
    static void _set_gBlueNoiseTexWH(::UnityEngine::Vector4 value);
    // Get static field: static private System.Int32 gIFrame
    static int _get_gIFrame();
    // Set static field: static private System.Int32 gIFrame
    static void _set_gIFrame(int value);
    // Get static field: static private readonly System.Int32 _GT_WorldSpaceCameraPos
    static int _get__GT_WorldSpaceCameraPos();
    // Set static field: static private readonly System.Int32 _GT_WorldSpaceCameraPos
    static void _set__GT_WorldSpaceCameraPos(int value);
    // Get static field: static private readonly System.Int32 _GT_BlueNoiseTex
    static int _get__GT_BlueNoiseTex();
    // Set static field: static private readonly System.Int32 _GT_BlueNoiseTex
    static void _set__GT_BlueNoiseTex(int value);
    // Get static field: static private readonly System.Int32 _GT_BlueNoiseTex_WH
    static int _get__GT_BlueNoiseTex_WH();
    // Set static field: static private readonly System.Int32 _GT_BlueNoiseTex_WH
    static void _set__GT_BlueNoiseTex_WH(int value);
    // Get static field: static private readonly System.Int32 _GT_iFrame
    static int _get__GT_iFrame();
    // Set static field: static private readonly System.Int32 _GT_iFrame
    static void _set__GT_iFrame(int value);
    // static private System.Void Initialize()
    // Offset: 0x279AEB8
    static void Initialize();
    // private System.Void OnEnable()
    // Offset: 0x279AFAC
    void OnEnable();
    // private System.Void Update()
    // Offset: 0x279B080
    void Update();
    // public System.Void .ctor()
    // Offset: 0x279B138
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static GTShaderGlobals* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GTShaderGlobals::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<GTShaderGlobals*, creationType>()));
    }
    // static private System.Void .cctor()
    // Offset: 0x279B140
    static void _cctor();
  }; // GTShaderGlobals
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::GTShaderGlobals::Initialize
// Il2CppName: Initialize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&GlobalNamespace::GTShaderGlobals::Initialize)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::GTShaderGlobals*), "Initialize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::GTShaderGlobals::OnEnable
// Il2CppName: OnEnable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::GTShaderGlobals::*)()>(&GlobalNamespace::GTShaderGlobals::OnEnable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::GTShaderGlobals*), "OnEnable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::GTShaderGlobals::Update
// Il2CppName: Update
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::GTShaderGlobals::*)()>(&GlobalNamespace::GTShaderGlobals::Update)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::GTShaderGlobals*), "Update", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::GTShaderGlobals::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: GlobalNamespace::GTShaderGlobals::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&GlobalNamespace::GTShaderGlobals::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::GTShaderGlobals*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
