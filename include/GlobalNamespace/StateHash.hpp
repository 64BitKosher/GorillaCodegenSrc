// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Type namespace: 
namespace GlobalNamespace {
  // Forward declaring type: StateHash
  struct StateHash;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::StateHash, "", "StateHash");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x8
  #pragma pack(push, 1)
  // WARNING Layout: Sequential may not be correctly taken into account!
  // Autogenerated type: StateHash
  // [TokenAttribute] Offset: FFFFFFFF
  struct StateHash/*, public ::System::ValueType*/ {
    public:
    public:
    // public System.Int32 last
    // Size: 0x4
    // Offset: 0x0
    int last;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // public System.Int32 next
    // Size: 0x4
    // Offset: 0x4
    int next;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Creating value type constructor for type: StateHash
    constexpr StateHash(int last_ = {}, int next_ = {}) noexcept : last{last_}, next{next_} {}
    // Creating interface conversion operator: operator ::System::ValueType
    operator ::System::ValueType() noexcept {
      return *reinterpret_cast<::System::ValueType*>(this);
    }
    // Get instance field reference: public System.Int32 last
    [[deprecated("Use field access instead!")]] int& dyn_last();
    // Get instance field reference: public System.Int32 next
    [[deprecated("Use field access instead!")]] int& dyn_next();
    // public System.Boolean Changed()
    // Offset: 0x27514C0
    bool Changed();
    // public System.Void Poll(T0 v0)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class T0>
    void Poll(T0 v0) {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StateHash::Poll");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Poll", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T0>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(v0)})));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T0>::get()}));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___generic__method, v0);
    }
    // public System.Void Poll(T1 v1, T2 v2)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class T1, class T2>
    void Poll(T1 v1, T2 v2) {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StateHash::Poll");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Poll", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T1>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T2>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(v1), ::il2cpp_utils::ExtractType(v2)})));
      static auto* ___generic__method = THROW_UNLESS((::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T1>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T2>::get()})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___generic__method, v1, v2);
    }
    // public System.Void Poll(T1 v1, T2 v2, T3 v3)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class T1, class T2, class T3>
    void Poll(T1 v1, T2 v2, T3 v3) {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StateHash::Poll");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Poll", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T1>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T2>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T3>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(v1), ::il2cpp_utils::ExtractType(v2), ::il2cpp_utils::ExtractType(v3)})));
      static auto* ___generic__method = THROW_UNLESS((::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T1>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T2>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T3>::get()})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___generic__method, v1, v2, v3);
    }
    // public System.Void Poll(T1 v1, T2 v2, T3 v3, T4 v4)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class T1, class T2, class T3, class T4>
    void Poll(T1 v1, T2 v2, T3 v3, T4 v4) {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StateHash::Poll");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Poll", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T1>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T2>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T3>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T4>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(v1), ::il2cpp_utils::ExtractType(v2), ::il2cpp_utils::ExtractType(v3), ::il2cpp_utils::ExtractType(v4)})));
      static auto* ___generic__method = THROW_UNLESS((::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T1>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T2>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T3>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T4>::get()})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___generic__method, v1, v2, v3, v4);
    }
    // public System.Void Poll(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class T1, class T2, class T3, class T4, class T5>
    void Poll(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5) {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StateHash::Poll");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Poll", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T1>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T2>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T3>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T4>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T5>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(v1), ::il2cpp_utils::ExtractType(v2), ::il2cpp_utils::ExtractType(v3), ::il2cpp_utils::ExtractType(v4), ::il2cpp_utils::ExtractType(v5)})));
      static auto* ___generic__method = THROW_UNLESS((::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T1>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T2>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T3>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T4>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T5>::get()})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___generic__method, v1, v2, v3, v4, v5);
    }
    // public System.Void Poll(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class T1, class T2, class T3, class T4, class T5, class T6>
    void Poll(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6) {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StateHash::Poll");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Poll", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T1>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T2>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T3>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T4>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T5>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T6>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(v1), ::il2cpp_utils::ExtractType(v2), ::il2cpp_utils::ExtractType(v3), ::il2cpp_utils::ExtractType(v4), ::il2cpp_utils::ExtractType(v5), ::il2cpp_utils::ExtractType(v6)})));
      static auto* ___generic__method = THROW_UNLESS((::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T1>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T2>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T3>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T4>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T5>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T6>::get()})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___generic__method, v1, v2, v3, v4, v5, v6);
    }
    // public System.Void Poll(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class T1, class T2, class T3, class T4, class T5, class T6, class T7>
    void Poll(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7) {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StateHash::Poll");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Poll", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T1>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T2>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T3>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T4>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T5>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T6>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T7>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(v1), ::il2cpp_utils::ExtractType(v2), ::il2cpp_utils::ExtractType(v3), ::il2cpp_utils::ExtractType(v4), ::il2cpp_utils::ExtractType(v5), ::il2cpp_utils::ExtractType(v6), ::il2cpp_utils::ExtractType(v7)})));
      static auto* ___generic__method = THROW_UNLESS((::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T1>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T2>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T3>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T4>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T5>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T6>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T7>::get()})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___generic__method, v1, v2, v3, v4, v5, v6, v7);
    }
    // public System.Void Poll(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class T1, class T2, class T3, class T4, class T5, class T6, class T7, class T8>
    void Poll(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8) {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StateHash::Poll");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Poll", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T1>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T2>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T3>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T4>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T5>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T6>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T7>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T8>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(v1), ::il2cpp_utils::ExtractType(v2), ::il2cpp_utils::ExtractType(v3), ::il2cpp_utils::ExtractType(v4), ::il2cpp_utils::ExtractType(v5), ::il2cpp_utils::ExtractType(v6), ::il2cpp_utils::ExtractType(v7), ::il2cpp_utils::ExtractType(v8)})));
      static auto* ___generic__method = THROW_UNLESS((::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T1>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T2>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T3>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T4>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T5>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T6>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T7>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T8>::get()})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___generic__method, v1, v2, v3, v4, v5, v6, v7, v8);
    }
    // public System.Void Poll(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class T1, class T2, class T3, class T4, class T5, class T6, class T7, class T8, class T9>
    void Poll(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9) {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StateHash::Poll");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Poll", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T1>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T2>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T3>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T4>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T5>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T6>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T7>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T8>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T9>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(v1), ::il2cpp_utils::ExtractType(v2), ::il2cpp_utils::ExtractType(v3), ::il2cpp_utils::ExtractType(v4), ::il2cpp_utils::ExtractType(v5), ::il2cpp_utils::ExtractType(v6), ::il2cpp_utils::ExtractType(v7), ::il2cpp_utils::ExtractType(v8), ::il2cpp_utils::ExtractType(v9)})));
      static auto* ___generic__method = THROW_UNLESS((::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T1>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T2>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T3>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T4>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T5>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T6>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T7>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T8>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T9>::get()})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___generic__method, v1, v2, v3, v4, v5, v6, v7, v8, v9);
    }
    // public System.Void Poll(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9, T10 v10)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class T1, class T2, class T3, class T4, class T5, class T6, class T7, class T8, class T9, class T10>
    void Poll(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9, T10 v10) {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StateHash::Poll");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Poll", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T1>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T2>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T3>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T4>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T5>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T6>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T7>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T8>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T9>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T10>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(v1), ::il2cpp_utils::ExtractType(v2), ::il2cpp_utils::ExtractType(v3), ::il2cpp_utils::ExtractType(v4), ::il2cpp_utils::ExtractType(v5), ::il2cpp_utils::ExtractType(v6), ::il2cpp_utils::ExtractType(v7), ::il2cpp_utils::ExtractType(v8), ::il2cpp_utils::ExtractType(v9), ::il2cpp_utils::ExtractType(v10)})));
      static auto* ___generic__method = THROW_UNLESS((::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T1>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T2>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T3>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T4>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T5>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T6>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T7>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T8>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T9>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T10>::get()})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___generic__method, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10);
    }
    // public System.Void Poll(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9, T10 v10, T11 v11)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class T1, class T2, class T3, class T4, class T5, class T6, class T7, class T8, class T9, class T10, class T11>
    void Poll(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9, T10 v10, T11 v11) {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StateHash::Poll");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Poll", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T1>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T2>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T3>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T4>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T5>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T6>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T7>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T8>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T9>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T10>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T11>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(v1), ::il2cpp_utils::ExtractType(v2), ::il2cpp_utils::ExtractType(v3), ::il2cpp_utils::ExtractType(v4), ::il2cpp_utils::ExtractType(v5), ::il2cpp_utils::ExtractType(v6), ::il2cpp_utils::ExtractType(v7), ::il2cpp_utils::ExtractType(v8), ::il2cpp_utils::ExtractType(v9), ::il2cpp_utils::ExtractType(v10), ::il2cpp_utils::ExtractType(v11)})));
      static auto* ___generic__method = THROW_UNLESS((::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T1>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T2>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T3>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T4>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T5>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T6>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T7>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T8>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T9>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T10>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T11>::get()})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___generic__method, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11);
    }
    // public System.Void Poll(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9, T10 v10, T11 v11, T12 v12)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class T1, class T2, class T3, class T4, class T5, class T6, class T7, class T8, class T9, class T10, class T11, class T12>
    void Poll(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9, T10 v10, T11 v11, T12 v12) {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StateHash::Poll");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Poll", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T1>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T2>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T3>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T4>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T5>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T6>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T7>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T8>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T9>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T10>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T11>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T12>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(v1), ::il2cpp_utils::ExtractType(v2), ::il2cpp_utils::ExtractType(v3), ::il2cpp_utils::ExtractType(v4), ::il2cpp_utils::ExtractType(v5), ::il2cpp_utils::ExtractType(v6), ::il2cpp_utils::ExtractType(v7), ::il2cpp_utils::ExtractType(v8), ::il2cpp_utils::ExtractType(v9), ::il2cpp_utils::ExtractType(v10), ::il2cpp_utils::ExtractType(v11), ::il2cpp_utils::ExtractType(v12)})));
      static auto* ___generic__method = THROW_UNLESS((::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T1>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T2>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T3>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T4>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T5>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T6>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T7>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T8>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T9>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T10>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T11>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T12>::get()})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___generic__method, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12);
    }
    // public System.Void Poll(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9, T10 v10, T11 v11, T12 v12, T13 v13)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class T1, class T2, class T3, class T4, class T5, class T6, class T7, class T8, class T9, class T10, class T11, class T12, class T13>
    void Poll(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9, T10 v10, T11 v11, T12 v12, T13 v13) {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StateHash::Poll");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Poll", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T1>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T2>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T3>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T4>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T5>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T6>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T7>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T8>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T9>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T10>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T11>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T12>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T13>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(v1), ::il2cpp_utils::ExtractType(v2), ::il2cpp_utils::ExtractType(v3), ::il2cpp_utils::ExtractType(v4), ::il2cpp_utils::ExtractType(v5), ::il2cpp_utils::ExtractType(v6), ::il2cpp_utils::ExtractType(v7), ::il2cpp_utils::ExtractType(v8), ::il2cpp_utils::ExtractType(v9), ::il2cpp_utils::ExtractType(v10), ::il2cpp_utils::ExtractType(v11), ::il2cpp_utils::ExtractType(v12), ::il2cpp_utils::ExtractType(v13)})));
      static auto* ___generic__method = THROW_UNLESS((::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T1>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T2>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T3>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T4>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T5>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T6>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T7>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T8>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T9>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T10>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T11>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T12>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T13>::get()})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___generic__method, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13);
    }
    // public System.Void Poll(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9, T10 v10, T11 v11, T12 v12, T13 v13, T14 v14)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class T1, class T2, class T3, class T4, class T5, class T6, class T7, class T8, class T9, class T10, class T11, class T12, class T13, class T14>
    void Poll(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9, T10 v10, T11 v11, T12 v12, T13 v13, T14 v14) {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StateHash::Poll");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Poll", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T1>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T2>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T3>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T4>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T5>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T6>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T7>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T8>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T9>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T10>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T11>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T12>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T13>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T14>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(v1), ::il2cpp_utils::ExtractType(v2), ::il2cpp_utils::ExtractType(v3), ::il2cpp_utils::ExtractType(v4), ::il2cpp_utils::ExtractType(v5), ::il2cpp_utils::ExtractType(v6), ::il2cpp_utils::ExtractType(v7), ::il2cpp_utils::ExtractType(v8), ::il2cpp_utils::ExtractType(v9), ::il2cpp_utils::ExtractType(v10), ::il2cpp_utils::ExtractType(v11), ::il2cpp_utils::ExtractType(v12), ::il2cpp_utils::ExtractType(v13), ::il2cpp_utils::ExtractType(v14)})));
      static auto* ___generic__method = THROW_UNLESS((::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T1>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T2>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T3>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T4>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T5>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T6>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T7>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T8>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T9>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T10>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T11>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T12>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T13>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T14>::get()})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___generic__method, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14);
    }
    // public System.Void Poll(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9, T10 v10, T11 v11, T12 v12, T13 v13, T14 v14, T15 v15)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class T1, class T2, class T3, class T4, class T5, class T6, class T7, class T8, class T9, class T10, class T11, class T12, class T13, class T14, class T15>
    void Poll(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9, T10 v10, T11 v11, T12 v12, T13 v13, T14 v14, T15 v15) {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StateHash::Poll");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Poll", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T1>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T2>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T3>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T4>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T5>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T6>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T7>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T8>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T9>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T10>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T11>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T12>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T13>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T14>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T15>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(v1), ::il2cpp_utils::ExtractType(v2), ::il2cpp_utils::ExtractType(v3), ::il2cpp_utils::ExtractType(v4), ::il2cpp_utils::ExtractType(v5), ::il2cpp_utils::ExtractType(v6), ::il2cpp_utils::ExtractType(v7), ::il2cpp_utils::ExtractType(v8), ::il2cpp_utils::ExtractType(v9), ::il2cpp_utils::ExtractType(v10), ::il2cpp_utils::ExtractType(v11), ::il2cpp_utils::ExtractType(v12), ::il2cpp_utils::ExtractType(v13), ::il2cpp_utils::ExtractType(v14), ::il2cpp_utils::ExtractType(v15)})));
      static auto* ___generic__method = THROW_UNLESS((::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T1>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T2>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T3>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T4>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T5>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T6>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T7>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T8>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T9>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T10>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T11>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T12>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T13>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T14>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T15>::get()})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___generic__method, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15);
    }
    // public System.Void Poll(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9, T10 v10, T11 v11, T12 v12, T13 v13, T14 v14, T15 v15, T16 v16)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class T1, class T2, class T3, class T4, class T5, class T6, class T7, class T8, class T9, class T10, class T11, class T12, class T13, class T14, class T15, class T16>
    void Poll(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9, T10 v10, T11 v11, T12 v12, T13 v13, T14 v14, T15 v15, T16 v16) {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StateHash::Poll");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Poll", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T1>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T2>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T3>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T4>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T5>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T6>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T7>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T8>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T9>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T10>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T11>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T12>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T13>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T14>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T15>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T16>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(v1), ::il2cpp_utils::ExtractType(v2), ::il2cpp_utils::ExtractType(v3), ::il2cpp_utils::ExtractType(v4), ::il2cpp_utils::ExtractType(v5), ::il2cpp_utils::ExtractType(v6), ::il2cpp_utils::ExtractType(v7), ::il2cpp_utils::ExtractType(v8), ::il2cpp_utils::ExtractType(v9), ::il2cpp_utils::ExtractType(v10), ::il2cpp_utils::ExtractType(v11), ::il2cpp_utils::ExtractType(v12), ::il2cpp_utils::ExtractType(v13), ::il2cpp_utils::ExtractType(v14), ::il2cpp_utils::ExtractType(v15), ::il2cpp_utils::ExtractType(v16)})));
      static auto* ___generic__method = THROW_UNLESS((::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T1>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T2>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T3>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T4>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T5>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T6>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T7>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T8>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T9>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T10>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T11>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T12>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T13>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T14>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T15>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T16>::get()})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___generic__method, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16);
    }
    // public override System.Int32 GetHashCode()
    // Offset: 0x275142C
    // Implemented from: System.ValueType
    // Base method: System.Int32 ValueType::GetHashCode()
    int GetHashCode();
    // public override System.String ToString()
    // Offset: 0x27514A0
    // Implemented from: System.ValueType
    // Base method: System.String ValueType::ToString()
    ::StringW ToString();
  }; // StateHash
  #pragma pack(pop)
  static check_size<sizeof(StateHash), 4 + sizeof(int)> __GlobalNamespace_StateHashSizeCheck;
  static_assert(sizeof(StateHash) == 0x8);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::StateHash::Changed
// Il2CppName: Changed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (GlobalNamespace::StateHash::*)()>(&GlobalNamespace::StateHash::Changed)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::StateHash), "Changed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::StateHash::Poll
// Il2CppName: Poll
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: GlobalNamespace::StateHash::Poll
// Il2CppName: Poll
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: GlobalNamespace::StateHash::Poll
// Il2CppName: Poll
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: GlobalNamespace::StateHash::Poll
// Il2CppName: Poll
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: GlobalNamespace::StateHash::Poll
// Il2CppName: Poll
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: GlobalNamespace::StateHash::Poll
// Il2CppName: Poll
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: GlobalNamespace::StateHash::Poll
// Il2CppName: Poll
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: GlobalNamespace::StateHash::Poll
// Il2CppName: Poll
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: GlobalNamespace::StateHash::Poll
// Il2CppName: Poll
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: GlobalNamespace::StateHash::Poll
// Il2CppName: Poll
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: GlobalNamespace::StateHash::Poll
// Il2CppName: Poll
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: GlobalNamespace::StateHash::Poll
// Il2CppName: Poll
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: GlobalNamespace::StateHash::Poll
// Il2CppName: Poll
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: GlobalNamespace::StateHash::Poll
// Il2CppName: Poll
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: GlobalNamespace::StateHash::Poll
// Il2CppName: Poll
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: GlobalNamespace::StateHash::Poll
// Il2CppName: Poll
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: GlobalNamespace::StateHash::GetHashCode
// Il2CppName: GetHashCode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (GlobalNamespace::StateHash::*)()>(&GlobalNamespace::StateHash::GetHashCode)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::StateHash), "GetHashCode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::StateHash::ToString
// Il2CppName: ToString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (GlobalNamespace::StateHash::*)()>(&GlobalNamespace::StateHash::ToString)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::StateHash), "ToString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
