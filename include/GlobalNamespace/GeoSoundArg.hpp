// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: FXSArgs
#include "GlobalNamespace/FXSArgs.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Type namespace: 
namespace GlobalNamespace {
  // Forward declaring type: GeoSoundArg
  class GeoSoundArg;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::GeoSoundArg);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::GeoSoundArg*, "", "GeoSoundArg");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x1C
  #pragma pack(push, 1)
  // Autogenerated type: GeoSoundArg
  // [TokenAttribute] Offset: FFFFFFFF
  class GeoSoundArg : public ::GlobalNamespace::FXSArgs {
    public:
    public:
    // public UnityEngine.Vector3 position
    // Size: 0xC
    // Offset: 0x10
    ::UnityEngine::Vector3 position;
    // Field size check
    static_assert(sizeof(::UnityEngine::Vector3) == 0xC);
    public:
    // Creating conversion operator: operator ::UnityEngine::Vector3
    constexpr operator ::UnityEngine::Vector3() const noexcept {
      return position;
    }
    // Get instance field reference: public UnityEngine.Vector3 position
    [[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& dyn_position();
    // public System.Void .ctor()
    // Offset: 0x26FE458
    // Implemented from: FXSArgs
    // Base method: System.Void FXSArgs::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static GeoSoundArg* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GeoSoundArg::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<GeoSoundArg*, creationType>()));
    }
  }; // GeoSoundArg
  #pragma pack(pop)
  static check_size<sizeof(GeoSoundArg), 16 + sizeof(::UnityEngine::Vector3)> __GlobalNamespace_GeoSoundArgSizeCheck;
  static_assert(sizeof(GeoSoundArg) == 0x1C);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::GeoSoundArg::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
