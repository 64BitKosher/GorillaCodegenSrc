// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: ITickSystemPre
#include "GlobalNamespace/ITickSystemPre.hpp"
// Including type: ITickSystemTick
#include "GlobalNamespace/ITickSystemTick.hpp"
// Including type: ITickSystemPost
#include "GlobalNamespace/ITickSystemPost.hpp"
// Completed includes
// Type namespace: 
namespace GlobalNamespace {
  // Forward declaring type: ITickSystem
  class ITickSystem;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::ITickSystem);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::ITickSystem*, "", "ITickSystem");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x0
  #pragma pack(push, 1)
  // Autogenerated type: ITickSystem
  // [TokenAttribute] Offset: FFFFFFFF
  class ITickSystem/*, public ::GlobalNamespace::ITickSystemPre, public ::GlobalNamespace::ITickSystemTick, public ::GlobalNamespace::ITickSystemPost*/ {
    public:
    // Creating interface conversion operator: operator ::GlobalNamespace::ITickSystemPre
    operator ::GlobalNamespace::ITickSystemPre() noexcept {
      return *reinterpret_cast<::GlobalNamespace::ITickSystemPre*>(this);
    }
    // Creating interface conversion operator: operator ::GlobalNamespace::ITickSystemTick
    operator ::GlobalNamespace::ITickSystemTick() noexcept {
      return *reinterpret_cast<::GlobalNamespace::ITickSystemTick*>(this);
    }
    // Creating interface conversion operator: operator ::GlobalNamespace::ITickSystemPost
    operator ::GlobalNamespace::ITickSystemPost() noexcept {
      return *reinterpret_cast<::GlobalNamespace::ITickSystemPost*>(this);
    }
  }; // ITickSystem
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
