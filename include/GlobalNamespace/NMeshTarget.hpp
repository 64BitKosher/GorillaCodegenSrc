// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: BuildSafe.SceneBakeTask
#include "BuildSafe/SceneBakeTask.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::SceneManagement
namespace UnityEngine::SceneManagement {
  // Forward declaring type: Scene
  struct Scene;
}
// Forward declaring namespace: BuildSafe
namespace BuildSafe {
  // Skipping declaration: SceneBakeMode because it is already included!
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Forward declaring type: NMeshTarget
  class NMeshTarget;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::NMeshTarget);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::NMeshTarget*, "", "NMeshTarget");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x29
  #pragma pack(push, 1)
  // Autogenerated type: NMeshTarget
  // [TokenAttribute] Offset: FFFFFFFF
  class NMeshTarget : public ::BuildSafe::SceneBakeTask {
    public:
    // public override System.Int32 get_callbackOrder()
    // Offset: 0x272F228
    // Implemented from: BuildSafe.SceneBakeTask
    // Base method: System.Int32 SceneBakeTask::get_callbackOrder()
    int get_callbackOrder();
    // public override System.Void set_callbackOrder(System.Int32 value)
    // Offset: 0x272F230
    // Implemented from: BuildSafe.SceneBakeTask
    // Base method: System.Void SceneBakeTask::set_callbackOrder(System.Int32 value)
    void set_callbackOrder(int value);
    // public override System.Void OnSceneBake(UnityEngine.SceneManagement.Scene scene, BuildSafe.SceneBakeMode mode)
    // Offset: 0x272F234
    // Implemented from: BuildSafe.SceneBakeTask
    // Base method: System.Void SceneBakeTask::OnSceneBake(UnityEngine.SceneManagement.Scene scene, BuildSafe.SceneBakeMode mode)
    void OnSceneBake(::UnityEngine::SceneManagement::Scene scene, ::BuildSafe::SceneBakeMode mode);
    // public System.Void .ctor()
    // Offset: 0x272F248
    // Implemented from: BuildSafe.SceneBakeTask
    // Base method: System.Void SceneBakeTask::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static NMeshTarget* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NMeshTarget::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<NMeshTarget*, creationType>()));
    }
  }; // NMeshTarget
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::NMeshTarget::get_callbackOrder
// Il2CppName: get_callbackOrder
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (GlobalNamespace::NMeshTarget::*)()>(&GlobalNamespace::NMeshTarget::get_callbackOrder)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NMeshTarget*), "get_callbackOrder", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NMeshTarget::set_callbackOrder
// Il2CppName: set_callbackOrder
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::NMeshTarget::*)(int)>(&GlobalNamespace::NMeshTarget::set_callbackOrder)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NMeshTarget*), "set_callbackOrder", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NMeshTarget::OnSceneBake
// Il2CppName: OnSceneBake
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::NMeshTarget::*)(::UnityEngine::SceneManagement::Scene, ::BuildSafe::SceneBakeMode)>(&GlobalNamespace::NMeshTarget::OnSceneBake)> {
  static const MethodInfo* get() {
    static auto* scene = &::il2cpp_utils::GetClassFromName("UnityEngine.SceneManagement", "Scene")->byval_arg;
    static auto* mode = &::il2cpp_utils::GetClassFromName("BuildSafe", "SceneBakeMode")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NMeshTarget*), "OnSceneBake", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{scene, mode});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NMeshTarget::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
