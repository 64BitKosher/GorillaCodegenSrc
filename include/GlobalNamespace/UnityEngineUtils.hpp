// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Hash128
  struct Hash128;
  // Forward declaring type: Matrix4x4
  struct Matrix4x4;
  // Forward declaring type: Vector3
  struct Vector3;
  // Forward declaring type: Quaternion
  struct Quaternion;
  // Forward declaring type: Vector4
  struct Vector4;
}
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: Id128
  struct Id128;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Forward declaring type: UnityEngineUtils
  class UnityEngineUtils;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::UnityEngineUtils);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::UnityEngineUtils*, "", "UnityEngineUtils");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngineUtils
  // [TokenAttribute] Offset: FFFFFFFF
  // [ExtensionAttribute] Offset: FFFFFFFF
  class UnityEngineUtils : public ::Il2CppObject {
    public:
    // static public UnityEngine.Hash128 QuantizedHash128(UnityEngine.Matrix4x4 m)
    // Offset: 0x27747F0
    static ::UnityEngine::Hash128 QuantizedHash128(::UnityEngine::Matrix4x4 m);
    // static public UnityEngine.Hash128 QuantizedHash128(UnityEngine.Vector3 v)
    // Offset: 0x2783108
    static ::UnityEngine::Hash128 QuantizedHash128(::UnityEngine::Vector3 v);
    // static public Id128 QuantizedId128(UnityEngine.Vector3 v)
    // Offset: 0x278313C
    static ::GlobalNamespace::Id128 QuantizedId128(::UnityEngine::Vector3 v);
    // static public Id128 QuantizedId128(UnityEngine.Matrix4x4 m)
    // Offset: 0x2783178
    static ::GlobalNamespace::Id128 QuantizedId128(::UnityEngine::Matrix4x4 m);
    // static public Id128 QuantizedId128(UnityEngine.Quaternion q)
    // Offset: 0x27831BC
    static ::GlobalNamespace::Id128 QuantizedId128(::UnityEngine::Quaternion q);
    // static public UnityEngine.Vector4 ToVector(UnityEngine.Quaternion q)
    // Offset: 0x278327C
    static ::UnityEngine::Vector4 ToVector(::UnityEngine::Quaternion q);
    // static public System.Void CopyTo(UnityEngine.Quaternion q, UnityEngine.Vector4 v)
    // Offset: 0x2783280
    static void CopyTo(::UnityEngine::Quaternion q, ::UnityEngine::Vector4 v);
  }; // UnityEngineUtils
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::UnityEngineUtils::QuantizedHash128
// Il2CppName: QuantizedHash128
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Hash128 (*)(::UnityEngine::Matrix4x4)>(&GlobalNamespace::UnityEngineUtils::QuantizedHash128)> {
  static const MethodInfo* get() {
    static auto* m = &::il2cpp_utils::GetClassFromName("UnityEngine", "Matrix4x4")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::UnityEngineUtils*), "QuantizedHash128", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{m});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::UnityEngineUtils::QuantizedHash128
// Il2CppName: QuantizedHash128
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Hash128 (*)(::UnityEngine::Vector3)>(&GlobalNamespace::UnityEngineUtils::QuantizedHash128)> {
  static const MethodInfo* get() {
    static auto* v = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::UnityEngineUtils*), "QuantizedHash128", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{v});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::UnityEngineUtils::QuantizedId128
// Il2CppName: QuantizedId128
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::Id128 (*)(::UnityEngine::Vector3)>(&GlobalNamespace::UnityEngineUtils::QuantizedId128)> {
  static const MethodInfo* get() {
    static auto* v = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::UnityEngineUtils*), "QuantizedId128", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{v});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::UnityEngineUtils::QuantizedId128
// Il2CppName: QuantizedId128
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::Id128 (*)(::UnityEngine::Matrix4x4)>(&GlobalNamespace::UnityEngineUtils::QuantizedId128)> {
  static const MethodInfo* get() {
    static auto* m = &::il2cpp_utils::GetClassFromName("UnityEngine", "Matrix4x4")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::UnityEngineUtils*), "QuantizedId128", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{m});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::UnityEngineUtils::QuantizedId128
// Il2CppName: QuantizedId128
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::Id128 (*)(::UnityEngine::Quaternion)>(&GlobalNamespace::UnityEngineUtils::QuantizedId128)> {
  static const MethodInfo* get() {
    static auto* q = &::il2cpp_utils::GetClassFromName("UnityEngine", "Quaternion")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::UnityEngineUtils*), "QuantizedId128", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{q});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::UnityEngineUtils::ToVector
// Il2CppName: ToVector
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector4 (*)(::UnityEngine::Quaternion)>(&GlobalNamespace::UnityEngineUtils::ToVector)> {
  static const MethodInfo* get() {
    static auto* q = &::il2cpp_utils::GetClassFromName("UnityEngine", "Quaternion")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::UnityEngineUtils*), "ToVector", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{q});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::UnityEngineUtils::CopyTo
// Il2CppName: CopyTo
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::Quaternion, ::UnityEngine::Vector4)>(&GlobalNamespace::UnityEngineUtils::CopyTo)> {
  static const MethodInfo* get() {
    static auto* q = &::il2cpp_utils::GetClassFromName("UnityEngine", "Quaternion")->byval_arg;
    static auto* v = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector4")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::UnityEngineUtils*), "CopyTo", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{q, v});
  }
};
