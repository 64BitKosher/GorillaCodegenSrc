// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Material
  class Material;
  // Forward declaring type: Shader
  class Shader;
}
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: UberShaderProperty
  class UberShaderProperty;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Forward declaring type: UberShader
  class UberShader;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::UberShader);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::UberShader*, "", "UberShader");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: UberShader
  // [TokenAttribute] Offset: FFFFFFFF
  class UberShader : public ::Il2CppObject {
    public:
    // Get static field: static public UnityEngine.Material kReferenceMaterial
    static ::UnityEngine::Material* _get_kReferenceMaterial();
    // Set static field: static public UnityEngine.Material kReferenceMaterial
    static void _set_kReferenceMaterial(::UnityEngine::Material* value);
    // Get static field: static public UnityEngine.Shader kReferenceShader
    static ::UnityEngine::Shader* _get_kReferenceShader();
    // Set static field: static public UnityEngine.Shader kReferenceShader
    static void _set_kReferenceShader(::UnityEngine::Shader* value);
    // Get static field: static private UberShaderProperty[] kProperties
    static ::ArrayW<::GlobalNamespace::UberShaderProperty*> _get_kProperties();
    // Set static field: static private UberShaderProperty[] kProperties
    static void _set_kProperties(::ArrayW<::GlobalNamespace::UberShaderProperty*> value);
    // static private System.Void InitializeOnLoad()
    // Offset: 0x27331E4
    static void InitializeOnLoad();
    // static public UberShaderProperty get_TransparencyMode()
    // Offset: 0x27333E0
    static ::GlobalNamespace::UberShaderProperty* get_TransparencyMode();
    // static public UberShaderProperty get_Cutoff()
    // Offset: 0x2733440
    static ::GlobalNamespace::UberShaderProperty* get_Cutoff();
    // static public UberShaderProperty get_ColorSource()
    // Offset: 0x27334A4
    static ::GlobalNamespace::UberShaderProperty* get_ColorSource();
    // static public UberShaderProperty get_BaseColor()
    // Offset: 0x2733508
    static ::GlobalNamespace::UberShaderProperty* get_BaseColor();
    // static public UberShaderProperty get_GChannelColor()
    // Offset: 0x273356C
    static ::GlobalNamespace::UberShaderProperty* get_GChannelColor();
    // static public UberShaderProperty get_BChannelColor()
    // Offset: 0x27335D0
    static ::GlobalNamespace::UberShaderProperty* get_BChannelColor();
    // static public UberShaderProperty get_AChannelColor()
    // Offset: 0x2733634
    static ::GlobalNamespace::UberShaderProperty* get_AChannelColor();
    // static public UberShaderProperty get_BaseMap()
    // Offset: 0x2733698
    static ::GlobalNamespace::UberShaderProperty* get_BaseMap();
    // static public UberShaderProperty get_BaseMap_WH()
    // Offset: 0x27336FC
    static ::GlobalNamespace::UberShaderProperty* get_BaseMap_WH();
    // static public UberShaderProperty get_UVSource()
    // Offset: 0x2733760
    static ::GlobalNamespace::UberShaderProperty* get_UVSource();
    // static public UberShaderProperty get_MaskMapToggle()
    // Offset: 0x27337C4
    static ::GlobalNamespace::UberShaderProperty* get_MaskMapToggle();
    // static public UberShaderProperty get_MaskMap()
    // Offset: 0x2733828
    static ::GlobalNamespace::UberShaderProperty* get_MaskMap();
    // static public UberShaderProperty get_MaskMap_WH()
    // Offset: 0x273388C
    static ::GlobalNamespace::UberShaderProperty* get_MaskMap_WH();
    // static public UberShaderProperty get_LavaLampToggle()
    // Offset: 0x27338F0
    static ::GlobalNamespace::UberShaderProperty* get_LavaLampToggle();
    // static public UberShaderProperty get_GradientMapToggle()
    // Offset: 0x2733954
    static ::GlobalNamespace::UberShaderProperty* get_GradientMapToggle();
    // static public UberShaderProperty get_GradientMap()
    // Offset: 0x27339B8
    static ::GlobalNamespace::UberShaderProperty* get_GradientMap();
    // static public UberShaderProperty get_DoTextureRotation()
    // Offset: 0x2733A1C
    static ::GlobalNamespace::UberShaderProperty* get_DoTextureRotation();
    // static public UberShaderProperty get_RotateAngle()
    // Offset: 0x2733A80
    static ::GlobalNamespace::UberShaderProperty* get_RotateAngle();
    // static public UberShaderProperty get_RotateAnim()
    // Offset: 0x2733AE4
    static ::GlobalNamespace::UberShaderProperty* get_RotateAnim();
    // static public UberShaderProperty get_UseWaveWarp()
    // Offset: 0x2733B48
    static ::GlobalNamespace::UberShaderProperty* get_UseWaveWarp();
    // static public UberShaderProperty get_WaveAmplitude()
    // Offset: 0x2733BAC
    static ::GlobalNamespace::UberShaderProperty* get_WaveAmplitude();
    // static public UberShaderProperty get_WaveFrequency()
    // Offset: 0x2733C10
    static ::GlobalNamespace::UberShaderProperty* get_WaveFrequency();
    // static public UberShaderProperty get_WaveScale()
    // Offset: 0x2733C74
    static ::GlobalNamespace::UberShaderProperty* get_WaveScale();
    // static public UberShaderProperty get_WaveTimeScale()
    // Offset: 0x2733CD8
    static ::GlobalNamespace::UberShaderProperty* get_WaveTimeScale();
    // static public UberShaderProperty get_UseWeatherMap()
    // Offset: 0x2733D3C
    static ::GlobalNamespace::UberShaderProperty* get_UseWeatherMap();
    // static public UberShaderProperty get_WeatherMap()
    // Offset: 0x2733DA0
    static ::GlobalNamespace::UberShaderProperty* get_WeatherMap();
    // static public UberShaderProperty get_WeatherMapDissolveEdgeSize()
    // Offset: 0x2733E04
    static ::GlobalNamespace::UberShaderProperty* get_WeatherMapDissolveEdgeSize();
    // static public UberShaderProperty get_ReflectToggle()
    // Offset: 0x2733E68
    static ::GlobalNamespace::UberShaderProperty* get_ReflectToggle();
    // static public UberShaderProperty get_ReflectBoxProjectToggle()
    // Offset: 0x2733ECC
    static ::GlobalNamespace::UberShaderProperty* get_ReflectBoxProjectToggle();
    // static public UberShaderProperty get_ReflectBoxCubePos()
    // Offset: 0x2733F30
    static ::GlobalNamespace::UberShaderProperty* get_ReflectBoxCubePos();
    // static public UberShaderProperty get_ReflectBoxSize()
    // Offset: 0x2733F94
    static ::GlobalNamespace::UberShaderProperty* get_ReflectBoxSize();
    // static public UberShaderProperty get_ReflectBoxRotation()
    // Offset: 0x2733FF8
    static ::GlobalNamespace::UberShaderProperty* get_ReflectBoxRotation();
    // static public UberShaderProperty get_ReflectMatcapToggle()
    // Offset: 0x273405C
    static ::GlobalNamespace::UberShaderProperty* get_ReflectMatcapToggle();
    // static public UberShaderProperty get_ReflectMatcapPerspToggle()
    // Offset: 0x27340C0
    static ::GlobalNamespace::UberShaderProperty* get_ReflectMatcapPerspToggle();
    // static public UberShaderProperty get_ReflectNormalToggle()
    // Offset: 0x2734124
    static ::GlobalNamespace::UberShaderProperty* get_ReflectNormalToggle();
    // static public UberShaderProperty get_ReflectTex()
    // Offset: 0x2734188
    static ::GlobalNamespace::UberShaderProperty* get_ReflectTex();
    // static public UberShaderProperty get_ReflectNormalTex()
    // Offset: 0x27341EC
    static ::GlobalNamespace::UberShaderProperty* get_ReflectNormalTex();
    // static public UberShaderProperty get_ReflectAlbedoTint()
    // Offset: 0x2734250
    static ::GlobalNamespace::UberShaderProperty* get_ReflectAlbedoTint();
    // static public UberShaderProperty get_ReflectTint()
    // Offset: 0x27342B4
    static ::GlobalNamespace::UberShaderProperty* get_ReflectTint();
    // static public UberShaderProperty get_ReflectOpacity()
    // Offset: 0x2734318
    static ::GlobalNamespace::UberShaderProperty* get_ReflectOpacity();
    // static public UberShaderProperty get_ReflectExposure()
    // Offset: 0x273437C
    static ::GlobalNamespace::UberShaderProperty* get_ReflectExposure();
    // static public UberShaderProperty get_ReflectOffset()
    // Offset: 0x27343E0
    static ::GlobalNamespace::UberShaderProperty* get_ReflectOffset();
    // static public UberShaderProperty get_ReflectScale()
    // Offset: 0x2734444
    static ::GlobalNamespace::UberShaderProperty* get_ReflectScale();
    // static public UberShaderProperty get_ReflectRotate()
    // Offset: 0x27344A8
    static ::GlobalNamespace::UberShaderProperty* get_ReflectRotate();
    // static public UberShaderProperty get_ParallaxToggle()
    // Offset: 0x273450C
    static ::GlobalNamespace::UberShaderProperty* get_ParallaxToggle();
    // static public UberShaderProperty get_ParallaxAAToggle()
    // Offset: 0x2734570
    static ::GlobalNamespace::UberShaderProperty* get_ParallaxAAToggle();
    // static public UberShaderProperty get_ParallaxAABias()
    // Offset: 0x27345D4
    static ::GlobalNamespace::UberShaderProperty* get_ParallaxAABias();
    // static public UberShaderProperty get_DepthMap()
    // Offset: 0x2734638
    static ::GlobalNamespace::UberShaderProperty* get_DepthMap();
    // static public UberShaderProperty get_ParallaxAmplitude()
    // Offset: 0x273469C
    static ::GlobalNamespace::UberShaderProperty* get_ParallaxAmplitude();
    // static public UberShaderProperty get_ParallaxSamplesMinMax()
    // Offset: 0x2734700
    static ::GlobalNamespace::UberShaderProperty* get_ParallaxSamplesMinMax();
    // static public UberShaderProperty get_UvShiftToggle()
    // Offset: 0x2734764
    static ::GlobalNamespace::UberShaderProperty* get_UvShiftToggle();
    // static public UberShaderProperty get_UvShiftSteps()
    // Offset: 0x27347C8
    static ::GlobalNamespace::UberShaderProperty* get_UvShiftSteps();
    // static public UberShaderProperty get_UvShiftRate()
    // Offset: 0x273482C
    static ::GlobalNamespace::UberShaderProperty* get_UvShiftRate();
    // static public UberShaderProperty get_UvShiftOffset()
    // Offset: 0x2734890
    static ::GlobalNamespace::UberShaderProperty* get_UvShiftOffset();
    // static public UberShaderProperty get_UseCrystalEffect()
    // Offset: 0x27348F4
    static ::GlobalNamespace::UberShaderProperty* get_UseCrystalEffect();
    // static public UberShaderProperty get_CrystalPower()
    // Offset: 0x2734958
    static ::GlobalNamespace::UberShaderProperty* get_CrystalPower();
    // static public UberShaderProperty get_CrystalRimColor()
    // Offset: 0x27349BC
    static ::GlobalNamespace::UberShaderProperty* get_CrystalRimColor();
    // static public UberShaderProperty get_LiquidVolume()
    // Offset: 0x2734A20
    static ::GlobalNamespace::UberShaderProperty* get_LiquidVolume();
    // static public UberShaderProperty get_LiquidFill()
    // Offset: 0x2734A84
    static ::GlobalNamespace::UberShaderProperty* get_LiquidFill();
    // static public UberShaderProperty get_LiquidFillNormal()
    // Offset: 0x2734AE8
    static ::GlobalNamespace::UberShaderProperty* get_LiquidFillNormal();
    // static public UberShaderProperty get_LiquidSurfaceColor()
    // Offset: 0x2734B4C
    static ::GlobalNamespace::UberShaderProperty* get_LiquidSurfaceColor();
    // static public UberShaderProperty get_LiquidSwayX()
    // Offset: 0x2734BB0
    static ::GlobalNamespace::UberShaderProperty* get_LiquidSwayX();
    // static public UberShaderProperty get_LiquidSwayY()
    // Offset: 0x2734C14
    static ::GlobalNamespace::UberShaderProperty* get_LiquidSwayY();
    // static public UberShaderProperty get_LiquidContainer()
    // Offset: 0x2734C78
    static ::GlobalNamespace::UberShaderProperty* get_LiquidContainer();
    // static public UberShaderProperty get_LiquidPlanePosition()
    // Offset: 0x2734CDC
    static ::GlobalNamespace::UberShaderProperty* get_LiquidPlanePosition();
    // static public UberShaderProperty get_LiquidPlaneNormal()
    // Offset: 0x2734D40
    static ::GlobalNamespace::UberShaderProperty* get_LiquidPlaneNormal();
    // static public UberShaderProperty get_VertexFlapToggle()
    // Offset: 0x2734DA4
    static ::GlobalNamespace::UberShaderProperty* get_VertexFlapToggle();
    // static public UberShaderProperty get_VertexFlapAxis()
    // Offset: 0x2734E08
    static ::GlobalNamespace::UberShaderProperty* get_VertexFlapAxis();
    // static public UberShaderProperty get_VertexFlapDegreesMinMax()
    // Offset: 0x2734E6C
    static ::GlobalNamespace::UberShaderProperty* get_VertexFlapDegreesMinMax();
    // static public UberShaderProperty get_VertexFlapSpeed()
    // Offset: 0x2734ED0
    static ::GlobalNamespace::UberShaderProperty* get_VertexFlapSpeed();
    // static public UberShaderProperty get_VertexFlapPhaseOffset()
    // Offset: 0x2734F34
    static ::GlobalNamespace::UberShaderProperty* get_VertexFlapPhaseOffset();
    // static public UberShaderProperty get_VertexWaveToggle()
    // Offset: 0x2734F98
    static ::GlobalNamespace::UberShaderProperty* get_VertexWaveToggle();
    // static public UberShaderProperty get_VertexWaveParams()
    // Offset: 0x2734FFC
    static ::GlobalNamespace::UberShaderProperty* get_VertexWaveParams();
    // static public UberShaderProperty get_VertexWaveStartOffset()
    // Offset: 0x2735060
    static ::GlobalNamespace::UberShaderProperty* get_VertexWaveStartOffset();
    // static public UberShaderProperty get_VertexWavePhaseOffset()
    // Offset: 0x27350C4
    static ::GlobalNamespace::UberShaderProperty* get_VertexWavePhaseOffset();
    // static public UberShaderProperty get_VertexRotateToggle()
    // Offset: 0x2735128
    static ::GlobalNamespace::UberShaderProperty* get_VertexRotateToggle();
    // static public UberShaderProperty get_VertexRotateAngles()
    // Offset: 0x273518C
    static ::GlobalNamespace::UberShaderProperty* get_VertexRotateAngles();
    // static public UberShaderProperty get_UseEyeTracking()
    // Offset: 0x27351F0
    static ::GlobalNamespace::UberShaderProperty* get_UseEyeTracking();
    // static public UberShaderProperty get_EyeTileOffsetUV()
    // Offset: 0x2735254
    static ::GlobalNamespace::UberShaderProperty* get_EyeTileOffsetUV();
    // static public UberShaderProperty get_EyeOverrideUV()
    // Offset: 0x27352B8
    static ::GlobalNamespace::UberShaderProperty* get_EyeOverrideUV();
    // static public UberShaderProperty get_EyeOverrideUVTransform()
    // Offset: 0x273531C
    static ::GlobalNamespace::UberShaderProperty* get_EyeOverrideUVTransform();
    // static public UberShaderProperty get_UseMouthFlap()
    // Offset: 0x2735380
    static ::GlobalNamespace::UberShaderProperty* get_UseMouthFlap();
    // static public UberShaderProperty get_MouthMap()
    // Offset: 0x27353E4
    static ::GlobalNamespace::UberShaderProperty* get_MouthMap();
    // static public UberShaderProperty get_MouthMap_Atlas()
    // Offset: 0x2735448
    static ::GlobalNamespace::UberShaderProperty* get_MouthMap_Atlas();
    // static public UberShaderProperty get_MouthMap_AtlasSlice()
    // Offset: 0x27354AC
    static ::GlobalNamespace::UberShaderProperty* get_MouthMap_AtlasSlice();
    // static public UberShaderProperty get_UseVertexColor()
    // Offset: 0x2735510
    static ::GlobalNamespace::UberShaderProperty* get_UseVertexColor();
    // static public UberShaderProperty get_WaterEffect()
    // Offset: 0x2735574
    static ::GlobalNamespace::UberShaderProperty* get_WaterEffect();
    // static public UberShaderProperty get_HeightBasedWaterEffect()
    // Offset: 0x27355D8
    static ::GlobalNamespace::UberShaderProperty* get_HeightBasedWaterEffect();
    // static public UberShaderProperty get_UseDayNightLightmap()
    // Offset: 0x273563C
    static ::GlobalNamespace::UberShaderProperty* get_UseDayNightLightmap();
    // static public UberShaderProperty get_UseSpecular()
    // Offset: 0x27356A0
    static ::GlobalNamespace::UberShaderProperty* get_UseSpecular();
    // static public UberShaderProperty get_UseSpecularAlphaChannel()
    // Offset: 0x2735704
    static ::GlobalNamespace::UberShaderProperty* get_UseSpecularAlphaChannel();
    // static public UberShaderProperty get_Smoothness()
    // Offset: 0x2735768
    static ::GlobalNamespace::UberShaderProperty* get_Smoothness();
    // static public UberShaderProperty get_EmissionToggle()
    // Offset: 0x27357CC
    static ::GlobalNamespace::UberShaderProperty* get_EmissionToggle();
    // static public UberShaderProperty get_EmissionColor()
    // Offset: 0x2735830
    static ::GlobalNamespace::UberShaderProperty* get_EmissionColor();
    // static public UberShaderProperty get_EmissionMap()
    // Offset: 0x2735894
    static ::GlobalNamespace::UberShaderProperty* get_EmissionMap();
    // static public UberShaderProperty get_EmissionMaskByBaseMapAlpha()
    // Offset: 0x27358F8
    static ::GlobalNamespace::UberShaderProperty* get_EmissionMaskByBaseMapAlpha();
    // static public UberShaderProperty get_EmissionUVScrollSpeed()
    // Offset: 0x273595C
    static ::GlobalNamespace::UberShaderProperty* get_EmissionUVScrollSpeed();
    // static public UberShaderProperty get_EmissionDissolveProgress()
    // Offset: 0x27359C0
    static ::GlobalNamespace::UberShaderProperty* get_EmissionDissolveProgress();
    // static public UberShaderProperty get_EmissionDissolveEdgeSize()
    // Offset: 0x2735A24
    static ::GlobalNamespace::UberShaderProperty* get_EmissionDissolveEdgeSize();
    // static public UberShaderProperty get_EmissionUseUVWaveWarp()
    // Offset: 0x2735A88
    static ::GlobalNamespace::UberShaderProperty* get_EmissionUseUVWaveWarp();
    // static public UberShaderProperty get_Cull()
    // Offset: 0x2735AEC
    static ::GlobalNamespace::UberShaderProperty* get_Cull();
    // static public UberShaderProperty get_StencilReference()
    // Offset: 0x2735B50
    static ::GlobalNamespace::UberShaderProperty* get_StencilReference();
    // static public UberShaderProperty get_StencilComparison()
    // Offset: 0x2735BB4
    static ::GlobalNamespace::UberShaderProperty* get_StencilComparison();
    // static public UberShaderProperty get_StencilPassFront()
    // Offset: 0x2735C18
    static ::GlobalNamespace::UberShaderProperty* get_StencilPassFront();
    // static public UberShaderProperty get_USE_DEFORM_MAP()
    // Offset: 0x2735C7C
    static ::GlobalNamespace::UberShaderProperty* get_USE_DEFORM_MAP();
    // static public UberShaderProperty get_DeformMap()
    // Offset: 0x2735CE0
    static ::GlobalNamespace::UberShaderProperty* get_DeformMap();
    // static public UberShaderProperty get_DeformMapIntensity()
    // Offset: 0x2735D44
    static ::GlobalNamespace::UberShaderProperty* get_DeformMapIntensity();
    // static public UberShaderProperty get_DeformMapMaskByVertColorRAmount()
    // Offset: 0x2735DA8
    static ::GlobalNamespace::UberShaderProperty* get_DeformMapMaskByVertColorRAmount();
    // static public UberShaderProperty get_DeformMapScrollSpeed()
    // Offset: 0x2735E0C
    static ::GlobalNamespace::UberShaderProperty* get_DeformMapScrollSpeed();
    // static public UberShaderProperty get_DeformMapUV0Influence()
    // Offset: 0x2735E70
    static ::GlobalNamespace::UberShaderProperty* get_DeformMapUV0Influence();
    // static public UberShaderProperty get_DeformMapObjectSpaceOffsetsU()
    // Offset: 0x2735ED4
    static ::GlobalNamespace::UberShaderProperty* get_DeformMapObjectSpaceOffsetsU();
    // static public UberShaderProperty get_DeformMapObjectSpaceOffsetsV()
    // Offset: 0x2735F38
    static ::GlobalNamespace::UberShaderProperty* get_DeformMapObjectSpaceOffsetsV();
    // static public UberShaderProperty get_DeformMapWorldSpaceOffsetsU()
    // Offset: 0x2735F9C
    static ::GlobalNamespace::UberShaderProperty* get_DeformMapWorldSpaceOffsetsU();
    // static public UberShaderProperty get_DeformMapWorldSpaceOffsetsV()
    // Offset: 0x2736000
    static ::GlobalNamespace::UberShaderProperty* get_DeformMapWorldSpaceOffsetsV();
    // static public UberShaderProperty get_RotateOnYAxisBySinTime()
    // Offset: 0x2736064
    static ::GlobalNamespace::UberShaderProperty* get_RotateOnYAxisBySinTime();
    // static public UberShaderProperty get_USE_TEX_ARRAY_ATLAS()
    // Offset: 0x27360C8
    static ::GlobalNamespace::UberShaderProperty* get_USE_TEX_ARRAY_ATLAS();
    // static public UberShaderProperty get_BaseMap_Atlas()
    // Offset: 0x273612C
    static ::GlobalNamespace::UberShaderProperty* get_BaseMap_Atlas();
    // static public UberShaderProperty get_BaseMap_AtlasSlice()
    // Offset: 0x2736190
    static ::GlobalNamespace::UberShaderProperty* get_BaseMap_AtlasSlice();
    // static public UberShaderProperty get_EmissionMap_Atlas()
    // Offset: 0x27361F4
    static ::GlobalNamespace::UberShaderProperty* get_EmissionMap_Atlas();
    // static public UberShaderProperty get_EmissionMap_AtlasSlice()
    // Offset: 0x2736258
    static ::GlobalNamespace::UberShaderProperty* get_EmissionMap_AtlasSlice();
    // static public UberShaderProperty get_DeformMap_Atlas()
    // Offset: 0x27362BC
    static ::GlobalNamespace::UberShaderProperty* get_DeformMap_Atlas();
    // static public UberShaderProperty get_DeformMap_AtlasSlice()
    // Offset: 0x2736320
    static ::GlobalNamespace::UberShaderProperty* get_DeformMap_AtlasSlice();
    // static public UberShaderProperty get_SrcBlend()
    // Offset: 0x2736384
    static ::GlobalNamespace::UberShaderProperty* get_SrcBlend();
    // static public UberShaderProperty get_DstBlend()
    // Offset: 0x27363E8
    static ::GlobalNamespace::UberShaderProperty* get_DstBlend();
    // static public UberShaderProperty get_SrcBlendAlpha()
    // Offset: 0x273644C
    static ::GlobalNamespace::UberShaderProperty* get_SrcBlendAlpha();
    // static public UberShaderProperty get_DstBlendAlpha()
    // Offset: 0x27364B0
    static ::GlobalNamespace::UberShaderProperty* get_DstBlendAlpha();
    // static public UberShaderProperty get_ZWrite()
    // Offset: 0x2736514
    static ::GlobalNamespace::UberShaderProperty* get_ZWrite();
    // static public UberShaderProperty get_AlphaToMask()
    // Offset: 0x2736578
    static ::GlobalNamespace::UberShaderProperty* get_AlphaToMask();
    // static public UberShaderProperty get_Surface()
    // Offset: 0x27365DC
    static ::GlobalNamespace::UberShaderProperty* get_Surface();
    // static public UberShaderProperty get_Metallic()
    // Offset: 0x2736640
    static ::GlobalNamespace::UberShaderProperty* get_Metallic();
    // static public UberShaderProperty get_SpecColor()
    // Offset: 0x27366A4
    static ::GlobalNamespace::UberShaderProperty* get_SpecColor();
    // static public UberShaderProperty get_DayNightLightmapArray()
    // Offset: 0x2736708
    static ::GlobalNamespace::UberShaderProperty* get_DayNightLightmapArray();
    // static public UberShaderProperty get_DayNightLightmapArray_AtlasSlice()
    // Offset: 0x273676C
    static ::GlobalNamespace::UberShaderProperty* get_DayNightLightmapArray_AtlasSlice();
    // static public UberShaderProperty get_SingleLightmap()
    // Offset: 0x27367D0
    static ::GlobalNamespace::UberShaderProperty* get_SingleLightmap();
  }; // UberShader
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::UberShader::InitializeOnLoad
// Il2CppName: InitializeOnLoad
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&GlobalNamespace::UberShader::InitializeOnLoad)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::UberShader*), "InitializeOnLoad", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::UberShader::get_TransparencyMode
// Il2CppName: get_TransparencyMode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::UberShaderProperty* (*)()>(&GlobalNamespace::UberShader::get_TransparencyMode)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::UberShader*), "get_TransparencyMode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::UberShader::get_Cutoff
// Il2CppName: get_Cutoff
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::UberShaderProperty* (*)()>(&GlobalNamespace::UberShader::get_Cutoff)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::UberShader*), "get_Cutoff", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::UberShader::get_ColorSource
// Il2CppName: get_ColorSource
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::UberShaderProperty* (*)()>(&GlobalNamespace::UberShader::get_ColorSource)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::UberShader*), "get_ColorSource", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::UberShader::get_BaseColor
// Il2CppName: get_BaseColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::UberShaderProperty* (*)()>(&GlobalNamespace::UberShader::get_BaseColor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::UberShader*), "get_BaseColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::UberShader::get_GChannelColor
// Il2CppName: get_GChannelColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::UberShaderProperty* (*)()>(&GlobalNamespace::UberShader::get_GChannelColor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::UberShader*), "get_GChannelColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::UberShader::get_BChannelColor
// Il2CppName: get_BChannelColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::UberShaderProperty* (*)()>(&GlobalNamespace::UberShader::get_BChannelColor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::UberShader*), "get_BChannelColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::UberShader::get_AChannelColor
// Il2CppName: get_AChannelColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::UberShaderProperty* (*)()>(&GlobalNamespace::UberShader::get_AChannelColor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::UberShader*), "get_AChannelColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::UberShader::get_BaseMap
// Il2CppName: get_BaseMap
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::UberShaderProperty* (*)()>(&GlobalNamespace::UberShader::get_BaseMap)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::UberShader*), "get_BaseMap", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::UberShader::get_BaseMap_WH
// Il2CppName: get_BaseMap_WH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::UberShaderProperty* (*)()>(&GlobalNamespace::UberShader::get_BaseMap_WH)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::UberShader*), "get_BaseMap_WH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::UberShader::get_UVSource
// Il2CppName: get_UVSource
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::UberShaderProperty* (*)()>(&GlobalNamespace::UberShader::get_UVSource)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::UberShader*), "get_UVSource", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::UberShader::get_MaskMapToggle
// Il2CppName: get_MaskMapToggle
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::UberShaderProperty* (*)()>(&GlobalNamespace::UberShader::get_MaskMapToggle)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::UberShader*), "get_MaskMapToggle", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::UberShader::get_MaskMap
// Il2CppName: get_MaskMap
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::UberShaderProperty* (*)()>(&GlobalNamespace::UberShader::get_MaskMap)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::UberShader*), "get_MaskMap", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::UberShader::get_MaskMap_WH
// Il2CppName: get_MaskMap_WH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::UberShaderProperty* (*)()>(&GlobalNamespace::UberShader::get_MaskMap_WH)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::UberShader*), "get_MaskMap_WH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::UberShader::get_LavaLampToggle
// Il2CppName: get_LavaLampToggle
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::UberShaderProperty* (*)()>(&GlobalNamespace::UberShader::get_LavaLampToggle)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::UberShader*), "get_LavaLampToggle", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::UberShader::get_GradientMapToggle
// Il2CppName: get_GradientMapToggle
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::UberShaderProperty* (*)()>(&GlobalNamespace::UberShader::get_GradientMapToggle)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::UberShader*), "get_GradientMapToggle", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::UberShader::get_GradientMap
// Il2CppName: get_GradientMap
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::UberShaderProperty* (*)()>(&GlobalNamespace::UberShader::get_GradientMap)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::UberShader*), "get_GradientMap", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::UberShader::get_DoTextureRotation
// Il2CppName: get_DoTextureRotation
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::UberShaderProperty* (*)()>(&GlobalNamespace::UberShader::get_DoTextureRotation)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::UberShader*), "get_DoTextureRotation", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::UberShader::get_RotateAngle
// Il2CppName: get_RotateAngle
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::UberShaderProperty* (*)()>(&GlobalNamespace::UberShader::get_RotateAngle)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::UberShader*), "get_RotateAngle", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::UberShader::get_RotateAnim
// Il2CppName: get_RotateAnim
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::UberShaderProperty* (*)()>(&GlobalNamespace::UberShader::get_RotateAnim)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::UberShader*), "get_RotateAnim", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::UberShader::get_UseWaveWarp
// Il2CppName: get_UseWaveWarp
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::UberShaderProperty* (*)()>(&GlobalNamespace::UberShader::get_UseWaveWarp)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::UberShader*), "get_UseWaveWarp", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::UberShader::get_WaveAmplitude
// Il2CppName: get_WaveAmplitude
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::UberShaderProperty* (*)()>(&GlobalNamespace::UberShader::get_WaveAmplitude)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::UberShader*), "get_WaveAmplitude", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::UberShader::get_WaveFrequency
// Il2CppName: get_WaveFrequency
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::UberShaderProperty* (*)()>(&GlobalNamespace::UberShader::get_WaveFrequency)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::UberShader*), "get_WaveFrequency", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::UberShader::get_WaveScale
// Il2CppName: get_WaveScale
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::UberShaderProperty* (*)()>(&GlobalNamespace::UberShader::get_WaveScale)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::UberShader*), "get_WaveScale", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::UberShader::get_WaveTimeScale
// Il2CppName: get_WaveTimeScale
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::UberShaderProperty* (*)()>(&GlobalNamespace::UberShader::get_WaveTimeScale)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::UberShader*), "get_WaveTimeScale", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::UberShader::get_UseWeatherMap
// Il2CppName: get_UseWeatherMap
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::UberShaderProperty* (*)()>(&GlobalNamespace::UberShader::get_UseWeatherMap)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::UberShader*), "get_UseWeatherMap", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::UberShader::get_WeatherMap
// Il2CppName: get_WeatherMap
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::UberShaderProperty* (*)()>(&GlobalNamespace::UberShader::get_WeatherMap)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::UberShader*), "get_WeatherMap", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::UberShader::get_WeatherMapDissolveEdgeSize
// Il2CppName: get_WeatherMapDissolveEdgeSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::UberShaderProperty* (*)()>(&GlobalNamespace::UberShader::get_WeatherMapDissolveEdgeSize)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::UberShader*), "get_WeatherMapDissolveEdgeSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::UberShader::get_ReflectToggle
// Il2CppName: get_ReflectToggle
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::UberShaderProperty* (*)()>(&GlobalNamespace::UberShader::get_ReflectToggle)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::UberShader*), "get_ReflectToggle", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::UberShader::get_ReflectBoxProjectToggle
// Il2CppName: get_ReflectBoxProjectToggle
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::UberShaderProperty* (*)()>(&GlobalNamespace::UberShader::get_ReflectBoxProjectToggle)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::UberShader*), "get_ReflectBoxProjectToggle", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::UberShader::get_ReflectBoxCubePos
// Il2CppName: get_ReflectBoxCubePos
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::UberShaderProperty* (*)()>(&GlobalNamespace::UberShader::get_ReflectBoxCubePos)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::UberShader*), "get_ReflectBoxCubePos", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::UberShader::get_ReflectBoxSize
// Il2CppName: get_ReflectBoxSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::UberShaderProperty* (*)()>(&GlobalNamespace::UberShader::get_ReflectBoxSize)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::UberShader*), "get_ReflectBoxSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::UberShader::get_ReflectBoxRotation
// Il2CppName: get_ReflectBoxRotation
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::UberShaderProperty* (*)()>(&GlobalNamespace::UberShader::get_ReflectBoxRotation)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::UberShader*), "get_ReflectBoxRotation", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::UberShader::get_ReflectMatcapToggle
// Il2CppName: get_ReflectMatcapToggle
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::UberShaderProperty* (*)()>(&GlobalNamespace::UberShader::get_ReflectMatcapToggle)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::UberShader*), "get_ReflectMatcapToggle", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::UberShader::get_ReflectMatcapPerspToggle
// Il2CppName: get_ReflectMatcapPerspToggle
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::UberShaderProperty* (*)()>(&GlobalNamespace::UberShader::get_ReflectMatcapPerspToggle)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::UberShader*), "get_ReflectMatcapPerspToggle", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::UberShader::get_ReflectNormalToggle
// Il2CppName: get_ReflectNormalToggle
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::UberShaderProperty* (*)()>(&GlobalNamespace::UberShader::get_ReflectNormalToggle)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::UberShader*), "get_ReflectNormalToggle", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::UberShader::get_ReflectTex
// Il2CppName: get_ReflectTex
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::UberShaderProperty* (*)()>(&GlobalNamespace::UberShader::get_ReflectTex)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::UberShader*), "get_ReflectTex", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::UberShader::get_ReflectNormalTex
// Il2CppName: get_ReflectNormalTex
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::UberShaderProperty* (*)()>(&GlobalNamespace::UberShader::get_ReflectNormalTex)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::UberShader*), "get_ReflectNormalTex", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::UberShader::get_ReflectAlbedoTint
// Il2CppName: get_ReflectAlbedoTint
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::UberShaderProperty* (*)()>(&GlobalNamespace::UberShader::get_ReflectAlbedoTint)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::UberShader*), "get_ReflectAlbedoTint", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::UberShader::get_ReflectTint
// Il2CppName: get_ReflectTint
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::UberShaderProperty* (*)()>(&GlobalNamespace::UberShader::get_ReflectTint)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::UberShader*), "get_ReflectTint", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::UberShader::get_ReflectOpacity
// Il2CppName: get_ReflectOpacity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::UberShaderProperty* (*)()>(&GlobalNamespace::UberShader::get_ReflectOpacity)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::UberShader*), "get_ReflectOpacity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::UberShader::get_ReflectExposure
// Il2CppName: get_ReflectExposure
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::UberShaderProperty* (*)()>(&GlobalNamespace::UberShader::get_ReflectExposure)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::UberShader*), "get_ReflectExposure", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::UberShader::get_ReflectOffset
// Il2CppName: get_ReflectOffset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::UberShaderProperty* (*)()>(&GlobalNamespace::UberShader::get_ReflectOffset)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::UberShader*), "get_ReflectOffset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::UberShader::get_ReflectScale
// Il2CppName: get_ReflectScale
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::UberShaderProperty* (*)()>(&GlobalNamespace::UberShader::get_ReflectScale)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::UberShader*), "get_ReflectScale", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::UberShader::get_ReflectRotate
// Il2CppName: get_ReflectRotate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::UberShaderProperty* (*)()>(&GlobalNamespace::UberShader::get_ReflectRotate)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::UberShader*), "get_ReflectRotate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::UberShader::get_ParallaxToggle
// Il2CppName: get_ParallaxToggle
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::UberShaderProperty* (*)()>(&GlobalNamespace::UberShader::get_ParallaxToggle)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::UberShader*), "get_ParallaxToggle", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::UberShader::get_ParallaxAAToggle
// Il2CppName: get_ParallaxAAToggle
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::UberShaderProperty* (*)()>(&GlobalNamespace::UberShader::get_ParallaxAAToggle)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::UberShader*), "get_ParallaxAAToggle", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::UberShader::get_ParallaxAABias
// Il2CppName: get_ParallaxAABias
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::UberShaderProperty* (*)()>(&GlobalNamespace::UberShader::get_ParallaxAABias)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::UberShader*), "get_ParallaxAABias", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::UberShader::get_DepthMap
// Il2CppName: get_DepthMap
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::UberShaderProperty* (*)()>(&GlobalNamespace::UberShader::get_DepthMap)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::UberShader*), "get_DepthMap", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::UberShader::get_ParallaxAmplitude
// Il2CppName: get_ParallaxAmplitude
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::UberShaderProperty* (*)()>(&GlobalNamespace::UberShader::get_ParallaxAmplitude)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::UberShader*), "get_ParallaxAmplitude", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::UberShader::get_ParallaxSamplesMinMax
// Il2CppName: get_ParallaxSamplesMinMax
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::UberShaderProperty* (*)()>(&GlobalNamespace::UberShader::get_ParallaxSamplesMinMax)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::UberShader*), "get_ParallaxSamplesMinMax", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::UberShader::get_UvShiftToggle
// Il2CppName: get_UvShiftToggle
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::UberShaderProperty* (*)()>(&GlobalNamespace::UberShader::get_UvShiftToggle)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::UberShader*), "get_UvShiftToggle", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::UberShader::get_UvShiftSteps
// Il2CppName: get_UvShiftSteps
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::UberShaderProperty* (*)()>(&GlobalNamespace::UberShader::get_UvShiftSteps)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::UberShader*), "get_UvShiftSteps", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::UberShader::get_UvShiftRate
// Il2CppName: get_UvShiftRate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::UberShaderProperty* (*)()>(&GlobalNamespace::UberShader::get_UvShiftRate)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::UberShader*), "get_UvShiftRate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::UberShader::get_UvShiftOffset
// Il2CppName: get_UvShiftOffset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::UberShaderProperty* (*)()>(&GlobalNamespace::UberShader::get_UvShiftOffset)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::UberShader*), "get_UvShiftOffset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::UberShader::get_UseCrystalEffect
// Il2CppName: get_UseCrystalEffect
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::UberShaderProperty* (*)()>(&GlobalNamespace::UberShader::get_UseCrystalEffect)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::UberShader*), "get_UseCrystalEffect", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::UberShader::get_CrystalPower
// Il2CppName: get_CrystalPower
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::UberShaderProperty* (*)()>(&GlobalNamespace::UberShader::get_CrystalPower)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::UberShader*), "get_CrystalPower", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::UberShader::get_CrystalRimColor
// Il2CppName: get_CrystalRimColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::UberShaderProperty* (*)()>(&GlobalNamespace::UberShader::get_CrystalRimColor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::UberShader*), "get_CrystalRimColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::UberShader::get_LiquidVolume
// Il2CppName: get_LiquidVolume
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::UberShaderProperty* (*)()>(&GlobalNamespace::UberShader::get_LiquidVolume)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::UberShader*), "get_LiquidVolume", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::UberShader::get_LiquidFill
// Il2CppName: get_LiquidFill
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::UberShaderProperty* (*)()>(&GlobalNamespace::UberShader::get_LiquidFill)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::UberShader*), "get_LiquidFill", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::UberShader::get_LiquidFillNormal
// Il2CppName: get_LiquidFillNormal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::UberShaderProperty* (*)()>(&GlobalNamespace::UberShader::get_LiquidFillNormal)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::UberShader*), "get_LiquidFillNormal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::UberShader::get_LiquidSurfaceColor
// Il2CppName: get_LiquidSurfaceColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::UberShaderProperty* (*)()>(&GlobalNamespace::UberShader::get_LiquidSurfaceColor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::UberShader*), "get_LiquidSurfaceColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::UberShader::get_LiquidSwayX
// Il2CppName: get_LiquidSwayX
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::UberShaderProperty* (*)()>(&GlobalNamespace::UberShader::get_LiquidSwayX)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::UberShader*), "get_LiquidSwayX", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::UberShader::get_LiquidSwayY
// Il2CppName: get_LiquidSwayY
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::UberShaderProperty* (*)()>(&GlobalNamespace::UberShader::get_LiquidSwayY)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::UberShader*), "get_LiquidSwayY", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::UberShader::get_LiquidContainer
// Il2CppName: get_LiquidContainer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::UberShaderProperty* (*)()>(&GlobalNamespace::UberShader::get_LiquidContainer)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::UberShader*), "get_LiquidContainer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::UberShader::get_LiquidPlanePosition
// Il2CppName: get_LiquidPlanePosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::UberShaderProperty* (*)()>(&GlobalNamespace::UberShader::get_LiquidPlanePosition)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::UberShader*), "get_LiquidPlanePosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::UberShader::get_LiquidPlaneNormal
// Il2CppName: get_LiquidPlaneNormal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::UberShaderProperty* (*)()>(&GlobalNamespace::UberShader::get_LiquidPlaneNormal)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::UberShader*), "get_LiquidPlaneNormal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::UberShader::get_VertexFlapToggle
// Il2CppName: get_VertexFlapToggle
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::UberShaderProperty* (*)()>(&GlobalNamespace::UberShader::get_VertexFlapToggle)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::UberShader*), "get_VertexFlapToggle", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::UberShader::get_VertexFlapAxis
// Il2CppName: get_VertexFlapAxis
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::UberShaderProperty* (*)()>(&GlobalNamespace::UberShader::get_VertexFlapAxis)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::UberShader*), "get_VertexFlapAxis", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::UberShader::get_VertexFlapDegreesMinMax
// Il2CppName: get_VertexFlapDegreesMinMax
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::UberShaderProperty* (*)()>(&GlobalNamespace::UberShader::get_VertexFlapDegreesMinMax)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::UberShader*), "get_VertexFlapDegreesMinMax", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::UberShader::get_VertexFlapSpeed
// Il2CppName: get_VertexFlapSpeed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::UberShaderProperty* (*)()>(&GlobalNamespace::UberShader::get_VertexFlapSpeed)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::UberShader*), "get_VertexFlapSpeed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::UberShader::get_VertexFlapPhaseOffset
// Il2CppName: get_VertexFlapPhaseOffset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::UberShaderProperty* (*)()>(&GlobalNamespace::UberShader::get_VertexFlapPhaseOffset)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::UberShader*), "get_VertexFlapPhaseOffset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::UberShader::get_VertexWaveToggle
// Il2CppName: get_VertexWaveToggle
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::UberShaderProperty* (*)()>(&GlobalNamespace::UberShader::get_VertexWaveToggle)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::UberShader*), "get_VertexWaveToggle", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::UberShader::get_VertexWaveParams
// Il2CppName: get_VertexWaveParams
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::UberShaderProperty* (*)()>(&GlobalNamespace::UberShader::get_VertexWaveParams)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::UberShader*), "get_VertexWaveParams", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::UberShader::get_VertexWaveStartOffset
// Il2CppName: get_VertexWaveStartOffset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::UberShaderProperty* (*)()>(&GlobalNamespace::UberShader::get_VertexWaveStartOffset)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::UberShader*), "get_VertexWaveStartOffset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::UberShader::get_VertexWavePhaseOffset
// Il2CppName: get_VertexWavePhaseOffset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::UberShaderProperty* (*)()>(&GlobalNamespace::UberShader::get_VertexWavePhaseOffset)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::UberShader*), "get_VertexWavePhaseOffset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::UberShader::get_VertexRotateToggle
// Il2CppName: get_VertexRotateToggle
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::UberShaderProperty* (*)()>(&GlobalNamespace::UberShader::get_VertexRotateToggle)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::UberShader*), "get_VertexRotateToggle", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::UberShader::get_VertexRotateAngles
// Il2CppName: get_VertexRotateAngles
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::UberShaderProperty* (*)()>(&GlobalNamespace::UberShader::get_VertexRotateAngles)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::UberShader*), "get_VertexRotateAngles", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::UberShader::get_UseEyeTracking
// Il2CppName: get_UseEyeTracking
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::UberShaderProperty* (*)()>(&GlobalNamespace::UberShader::get_UseEyeTracking)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::UberShader*), "get_UseEyeTracking", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::UberShader::get_EyeTileOffsetUV
// Il2CppName: get_EyeTileOffsetUV
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::UberShaderProperty* (*)()>(&GlobalNamespace::UberShader::get_EyeTileOffsetUV)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::UberShader*), "get_EyeTileOffsetUV", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::UberShader::get_EyeOverrideUV
// Il2CppName: get_EyeOverrideUV
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::UberShaderProperty* (*)()>(&GlobalNamespace::UberShader::get_EyeOverrideUV)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::UberShader*), "get_EyeOverrideUV", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::UberShader::get_EyeOverrideUVTransform
// Il2CppName: get_EyeOverrideUVTransform
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::UberShaderProperty* (*)()>(&GlobalNamespace::UberShader::get_EyeOverrideUVTransform)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::UberShader*), "get_EyeOverrideUVTransform", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::UberShader::get_UseMouthFlap
// Il2CppName: get_UseMouthFlap
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::UberShaderProperty* (*)()>(&GlobalNamespace::UberShader::get_UseMouthFlap)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::UberShader*), "get_UseMouthFlap", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::UberShader::get_MouthMap
// Il2CppName: get_MouthMap
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::UberShaderProperty* (*)()>(&GlobalNamespace::UberShader::get_MouthMap)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::UberShader*), "get_MouthMap", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::UberShader::get_MouthMap_Atlas
// Il2CppName: get_MouthMap_Atlas
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::UberShaderProperty* (*)()>(&GlobalNamespace::UberShader::get_MouthMap_Atlas)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::UberShader*), "get_MouthMap_Atlas", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::UberShader::get_MouthMap_AtlasSlice
// Il2CppName: get_MouthMap_AtlasSlice
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::UberShaderProperty* (*)()>(&GlobalNamespace::UberShader::get_MouthMap_AtlasSlice)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::UberShader*), "get_MouthMap_AtlasSlice", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::UberShader::get_UseVertexColor
// Il2CppName: get_UseVertexColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::UberShaderProperty* (*)()>(&GlobalNamespace::UberShader::get_UseVertexColor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::UberShader*), "get_UseVertexColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::UberShader::get_WaterEffect
// Il2CppName: get_WaterEffect
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::UberShaderProperty* (*)()>(&GlobalNamespace::UberShader::get_WaterEffect)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::UberShader*), "get_WaterEffect", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::UberShader::get_HeightBasedWaterEffect
// Il2CppName: get_HeightBasedWaterEffect
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::UberShaderProperty* (*)()>(&GlobalNamespace::UberShader::get_HeightBasedWaterEffect)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::UberShader*), "get_HeightBasedWaterEffect", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::UberShader::get_UseDayNightLightmap
// Il2CppName: get_UseDayNightLightmap
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::UberShaderProperty* (*)()>(&GlobalNamespace::UberShader::get_UseDayNightLightmap)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::UberShader*), "get_UseDayNightLightmap", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::UberShader::get_UseSpecular
// Il2CppName: get_UseSpecular
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::UberShaderProperty* (*)()>(&GlobalNamespace::UberShader::get_UseSpecular)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::UberShader*), "get_UseSpecular", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::UberShader::get_UseSpecularAlphaChannel
// Il2CppName: get_UseSpecularAlphaChannel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::UberShaderProperty* (*)()>(&GlobalNamespace::UberShader::get_UseSpecularAlphaChannel)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::UberShader*), "get_UseSpecularAlphaChannel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::UberShader::get_Smoothness
// Il2CppName: get_Smoothness
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::UberShaderProperty* (*)()>(&GlobalNamespace::UberShader::get_Smoothness)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::UberShader*), "get_Smoothness", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::UberShader::get_EmissionToggle
// Il2CppName: get_EmissionToggle
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::UberShaderProperty* (*)()>(&GlobalNamespace::UberShader::get_EmissionToggle)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::UberShader*), "get_EmissionToggle", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::UberShader::get_EmissionColor
// Il2CppName: get_EmissionColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::UberShaderProperty* (*)()>(&GlobalNamespace::UberShader::get_EmissionColor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::UberShader*), "get_EmissionColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::UberShader::get_EmissionMap
// Il2CppName: get_EmissionMap
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::UberShaderProperty* (*)()>(&GlobalNamespace::UberShader::get_EmissionMap)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::UberShader*), "get_EmissionMap", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::UberShader::get_EmissionMaskByBaseMapAlpha
// Il2CppName: get_EmissionMaskByBaseMapAlpha
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::UberShaderProperty* (*)()>(&GlobalNamespace::UberShader::get_EmissionMaskByBaseMapAlpha)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::UberShader*), "get_EmissionMaskByBaseMapAlpha", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::UberShader::get_EmissionUVScrollSpeed
// Il2CppName: get_EmissionUVScrollSpeed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::UberShaderProperty* (*)()>(&GlobalNamespace::UberShader::get_EmissionUVScrollSpeed)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::UberShader*), "get_EmissionUVScrollSpeed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::UberShader::get_EmissionDissolveProgress
// Il2CppName: get_EmissionDissolveProgress
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::UberShaderProperty* (*)()>(&GlobalNamespace::UberShader::get_EmissionDissolveProgress)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::UberShader*), "get_EmissionDissolveProgress", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::UberShader::get_EmissionDissolveEdgeSize
// Il2CppName: get_EmissionDissolveEdgeSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::UberShaderProperty* (*)()>(&GlobalNamespace::UberShader::get_EmissionDissolveEdgeSize)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::UberShader*), "get_EmissionDissolveEdgeSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::UberShader::get_EmissionUseUVWaveWarp
// Il2CppName: get_EmissionUseUVWaveWarp
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::UberShaderProperty* (*)()>(&GlobalNamespace::UberShader::get_EmissionUseUVWaveWarp)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::UberShader*), "get_EmissionUseUVWaveWarp", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::UberShader::get_Cull
// Il2CppName: get_Cull
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::UberShaderProperty* (*)()>(&GlobalNamespace::UberShader::get_Cull)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::UberShader*), "get_Cull", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::UberShader::get_StencilReference
// Il2CppName: get_StencilReference
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::UberShaderProperty* (*)()>(&GlobalNamespace::UberShader::get_StencilReference)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::UberShader*), "get_StencilReference", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::UberShader::get_StencilComparison
// Il2CppName: get_StencilComparison
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::UberShaderProperty* (*)()>(&GlobalNamespace::UberShader::get_StencilComparison)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::UberShader*), "get_StencilComparison", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::UberShader::get_StencilPassFront
// Il2CppName: get_StencilPassFront
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::UberShaderProperty* (*)()>(&GlobalNamespace::UberShader::get_StencilPassFront)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::UberShader*), "get_StencilPassFront", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::UberShader::get_USE_DEFORM_MAP
// Il2CppName: get_USE_DEFORM_MAP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::UberShaderProperty* (*)()>(&GlobalNamespace::UberShader::get_USE_DEFORM_MAP)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::UberShader*), "get_USE_DEFORM_MAP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::UberShader::get_DeformMap
// Il2CppName: get_DeformMap
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::UberShaderProperty* (*)()>(&GlobalNamespace::UberShader::get_DeformMap)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::UberShader*), "get_DeformMap", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::UberShader::get_DeformMapIntensity
// Il2CppName: get_DeformMapIntensity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::UberShaderProperty* (*)()>(&GlobalNamespace::UberShader::get_DeformMapIntensity)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::UberShader*), "get_DeformMapIntensity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::UberShader::get_DeformMapMaskByVertColorRAmount
// Il2CppName: get_DeformMapMaskByVertColorRAmount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::UberShaderProperty* (*)()>(&GlobalNamespace::UberShader::get_DeformMapMaskByVertColorRAmount)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::UberShader*), "get_DeformMapMaskByVertColorRAmount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::UberShader::get_DeformMapScrollSpeed
// Il2CppName: get_DeformMapScrollSpeed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::UberShaderProperty* (*)()>(&GlobalNamespace::UberShader::get_DeformMapScrollSpeed)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::UberShader*), "get_DeformMapScrollSpeed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::UberShader::get_DeformMapUV0Influence
// Il2CppName: get_DeformMapUV0Influence
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::UberShaderProperty* (*)()>(&GlobalNamespace::UberShader::get_DeformMapUV0Influence)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::UberShader*), "get_DeformMapUV0Influence", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::UberShader::get_DeformMapObjectSpaceOffsetsU
// Il2CppName: get_DeformMapObjectSpaceOffsetsU
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::UberShaderProperty* (*)()>(&GlobalNamespace::UberShader::get_DeformMapObjectSpaceOffsetsU)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::UberShader*), "get_DeformMapObjectSpaceOffsetsU", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::UberShader::get_DeformMapObjectSpaceOffsetsV
// Il2CppName: get_DeformMapObjectSpaceOffsetsV
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::UberShaderProperty* (*)()>(&GlobalNamespace::UberShader::get_DeformMapObjectSpaceOffsetsV)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::UberShader*), "get_DeformMapObjectSpaceOffsetsV", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::UberShader::get_DeformMapWorldSpaceOffsetsU
// Il2CppName: get_DeformMapWorldSpaceOffsetsU
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::UberShaderProperty* (*)()>(&GlobalNamespace::UberShader::get_DeformMapWorldSpaceOffsetsU)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::UberShader*), "get_DeformMapWorldSpaceOffsetsU", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::UberShader::get_DeformMapWorldSpaceOffsetsV
// Il2CppName: get_DeformMapWorldSpaceOffsetsV
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::UberShaderProperty* (*)()>(&GlobalNamespace::UberShader::get_DeformMapWorldSpaceOffsetsV)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::UberShader*), "get_DeformMapWorldSpaceOffsetsV", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::UberShader::get_RotateOnYAxisBySinTime
// Il2CppName: get_RotateOnYAxisBySinTime
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::UberShaderProperty* (*)()>(&GlobalNamespace::UberShader::get_RotateOnYAxisBySinTime)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::UberShader*), "get_RotateOnYAxisBySinTime", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::UberShader::get_USE_TEX_ARRAY_ATLAS
// Il2CppName: get_USE_TEX_ARRAY_ATLAS
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::UberShaderProperty* (*)()>(&GlobalNamespace::UberShader::get_USE_TEX_ARRAY_ATLAS)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::UberShader*), "get_USE_TEX_ARRAY_ATLAS", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::UberShader::get_BaseMap_Atlas
// Il2CppName: get_BaseMap_Atlas
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::UberShaderProperty* (*)()>(&GlobalNamespace::UberShader::get_BaseMap_Atlas)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::UberShader*), "get_BaseMap_Atlas", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::UberShader::get_BaseMap_AtlasSlice
// Il2CppName: get_BaseMap_AtlasSlice
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::UberShaderProperty* (*)()>(&GlobalNamespace::UberShader::get_BaseMap_AtlasSlice)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::UberShader*), "get_BaseMap_AtlasSlice", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::UberShader::get_EmissionMap_Atlas
// Il2CppName: get_EmissionMap_Atlas
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::UberShaderProperty* (*)()>(&GlobalNamespace::UberShader::get_EmissionMap_Atlas)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::UberShader*), "get_EmissionMap_Atlas", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::UberShader::get_EmissionMap_AtlasSlice
// Il2CppName: get_EmissionMap_AtlasSlice
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::UberShaderProperty* (*)()>(&GlobalNamespace::UberShader::get_EmissionMap_AtlasSlice)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::UberShader*), "get_EmissionMap_AtlasSlice", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::UberShader::get_DeformMap_Atlas
// Il2CppName: get_DeformMap_Atlas
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::UberShaderProperty* (*)()>(&GlobalNamespace::UberShader::get_DeformMap_Atlas)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::UberShader*), "get_DeformMap_Atlas", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::UberShader::get_DeformMap_AtlasSlice
// Il2CppName: get_DeformMap_AtlasSlice
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::UberShaderProperty* (*)()>(&GlobalNamespace::UberShader::get_DeformMap_AtlasSlice)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::UberShader*), "get_DeformMap_AtlasSlice", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::UberShader::get_SrcBlend
// Il2CppName: get_SrcBlend
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::UberShaderProperty* (*)()>(&GlobalNamespace::UberShader::get_SrcBlend)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::UberShader*), "get_SrcBlend", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::UberShader::get_DstBlend
// Il2CppName: get_DstBlend
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::UberShaderProperty* (*)()>(&GlobalNamespace::UberShader::get_DstBlend)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::UberShader*), "get_DstBlend", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::UberShader::get_SrcBlendAlpha
// Il2CppName: get_SrcBlendAlpha
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::UberShaderProperty* (*)()>(&GlobalNamespace::UberShader::get_SrcBlendAlpha)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::UberShader*), "get_SrcBlendAlpha", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::UberShader::get_DstBlendAlpha
// Il2CppName: get_DstBlendAlpha
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::UberShaderProperty* (*)()>(&GlobalNamespace::UberShader::get_DstBlendAlpha)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::UberShader*), "get_DstBlendAlpha", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::UberShader::get_ZWrite
// Il2CppName: get_ZWrite
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::UberShaderProperty* (*)()>(&GlobalNamespace::UberShader::get_ZWrite)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::UberShader*), "get_ZWrite", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::UberShader::get_AlphaToMask
// Il2CppName: get_AlphaToMask
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::UberShaderProperty* (*)()>(&GlobalNamespace::UberShader::get_AlphaToMask)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::UberShader*), "get_AlphaToMask", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::UberShader::get_Surface
// Il2CppName: get_Surface
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::UberShaderProperty* (*)()>(&GlobalNamespace::UberShader::get_Surface)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::UberShader*), "get_Surface", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::UberShader::get_Metallic
// Il2CppName: get_Metallic
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::UberShaderProperty* (*)()>(&GlobalNamespace::UberShader::get_Metallic)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::UberShader*), "get_Metallic", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::UberShader::get_SpecColor
// Il2CppName: get_SpecColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::UberShaderProperty* (*)()>(&GlobalNamespace::UberShader::get_SpecColor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::UberShader*), "get_SpecColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::UberShader::get_DayNightLightmapArray
// Il2CppName: get_DayNightLightmapArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::UberShaderProperty* (*)()>(&GlobalNamespace::UberShader::get_DayNightLightmapArray)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::UberShader*), "get_DayNightLightmapArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::UberShader::get_DayNightLightmapArray_AtlasSlice
// Il2CppName: get_DayNightLightmapArray_AtlasSlice
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::UberShaderProperty* (*)()>(&GlobalNamespace::UberShader::get_DayNightLightmapArray_AtlasSlice)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::UberShader*), "get_DayNightLightmapArray_AtlasSlice", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::UberShader::get_SingleLightmap
// Il2CppName: get_SingleLightmap
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::UberShaderProperty* (*)()>(&GlobalNamespace::UberShader::get_SingleLightmap)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::UberShader*), "get_SingleLightmap", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
