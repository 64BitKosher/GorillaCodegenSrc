// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
// Including type: IOVRSceneComponent
#include "GlobalNamespace/IOVRSceneComponent.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
// Including type: System.Nullable`1
#include "System/Nullable_1.hpp"
// Including type: Unity.Jobs.JobHandle
#include "Unity/Jobs/JobHandle.hpp"
// Including type: Unity.Collections.NativeArray`1
#include "Unity/Collections/NativeArray_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: OVRSceneAnchor
  class OVRSceneAnchor;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
  // Forward declaring type: IReadOnlyList`1<T>
  template<typename T>
  class IReadOnlyList_1;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Forward declaring type: OVRScenePlane
  class OVRScenePlane;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::OVRScenePlane);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::OVRScenePlane*, "", "OVRScenePlane");
// Type namespace: 
namespace GlobalNamespace {
  // WARNING Size may be invalid!
  // Autogenerated type: OVRScenePlane
  // [TokenAttribute] Offset: FFFFFFFF
  // [RequireComponent] Offset: FFFFFFFF
  // [HelpURLAttribute] Offset: FFFFFFFF
  // [DisallowMultipleComponent] Offset: FFFFFFFF
  class OVRScenePlane : public ::UnityEngine::MonoBehaviour/*, public ::GlobalNamespace::IOVRSceneComponent*/ {
    public:
    // Nested type: ::GlobalNamespace::OVRScenePlane::GetBoundaryLengthJob
    struct GetBoundaryLengthJob;
    // Nested type: ::GlobalNamespace::OVRScenePlane::GetBoundaryJob
    struct GetBoundaryJob;
    public:
    // private System.Single <Width>k__BackingField
    // Size: 0x4
    // Offset: 0x20
    float Width;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Single <Height>k__BackingField
    // Size: 0x4
    // Offset: 0x24
    float Height;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private UnityEngine.Vector2 <Offset>k__BackingField
    // Size: 0x8
    // Offset: 0x28
    ::UnityEngine::Vector2 Offset;
    // Field size check
    static_assert(sizeof(::UnityEngine::Vector2) == 0x8);
    // System.Boolean _scaleChildren
    // Size: 0x1
    // Offset: 0x30
    bool scaleChildren;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // System.Boolean _offsetChildren
    // Size: 0x1
    // Offset: 0x31
    bool offsetChildren;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // System.Nullable`1<Unity.Jobs.JobHandle> _jobHandle
    // Size: 0xFFFFFFFF
    // Offset: 0x38
    ::System::Nullable_1<::Unity::Jobs::JobHandle> jobHandle;
    // private Unity.Collections.NativeArray`1<UnityEngine.Vector2> _previousBoundary
    // Size: 0xFFFFFFFF
    // Offset: 0x50
    ::Unity::Collections::NativeArray_1<::UnityEngine::Vector2> previousBoundary;
    // private Unity.Collections.NativeArray`1<System.Int32> _boundaryLength
    // Size: 0xFFFFFFFF
    // Offset: 0x60
    ::Unity::Collections::NativeArray_1<int> boundaryLength;
    // private Unity.Collections.NativeArray`1<UnityEngine.Vector2> _boundaryBuffer
    // Size: 0xFFFFFFFF
    // Offset: 0x70
    ::Unity::Collections::NativeArray_1<::UnityEngine::Vector2> boundaryBuffer;
    // private System.Boolean _boundaryRequested
    // Size: 0x1
    // Offset: 0x80
    bool boundaryRequested;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private OVRSceneAnchor _sceneAnchor
    // Size: 0x8
    // Offset: 0x88
    ::GlobalNamespace::OVRSceneAnchor* sceneAnchor;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::OVRSceneAnchor*) == 0x8);
    // private readonly System.Collections.Generic.List`1<UnityEngine.Vector2> _boundary
    // Size: 0x8
    // Offset: 0x90
    ::System::Collections::Generic::List_1<::UnityEngine::Vector2>* boundary;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::UnityEngine::Vector2>*) == 0x8);
    public:
    // Creating interface conversion operator: operator ::GlobalNamespace::IOVRSceneComponent
    operator ::GlobalNamespace::IOVRSceneComponent() noexcept {
      return *reinterpret_cast<::GlobalNamespace::IOVRSceneComponent*>(this);
    }
    // Get instance field reference: private System.Single <Width>k__BackingField
    [[deprecated("Use field access instead!")]] float& dyn_$Width$k__BackingField();
    // Get instance field reference: private System.Single <Height>k__BackingField
    [[deprecated("Use field access instead!")]] float& dyn_$Height$k__BackingField();
    // Get instance field reference: private UnityEngine.Vector2 <Offset>k__BackingField
    [[deprecated("Use field access instead!")]] ::UnityEngine::Vector2& dyn_$Offset$k__BackingField();
    // Get instance field reference: System.Boolean _scaleChildren
    [[deprecated("Use field access instead!")]] bool& dyn__scaleChildren();
    // Get instance field reference: System.Boolean _offsetChildren
    [[deprecated("Use field access instead!")]] bool& dyn__offsetChildren();
    // Get instance field reference: System.Nullable`1<Unity.Jobs.JobHandle> _jobHandle
    [[deprecated("Use field access instead!")]] ::System::Nullable_1<::Unity::Jobs::JobHandle>& dyn__jobHandle();
    // Get instance field reference: private Unity.Collections.NativeArray`1<UnityEngine.Vector2> _previousBoundary
    [[deprecated("Use field access instead!")]] ::Unity::Collections::NativeArray_1<::UnityEngine::Vector2>& dyn__previousBoundary();
    // Get instance field reference: private Unity.Collections.NativeArray`1<System.Int32> _boundaryLength
    [[deprecated("Use field access instead!")]] ::Unity::Collections::NativeArray_1<int>& dyn__boundaryLength();
    // Get instance field reference: private Unity.Collections.NativeArray`1<UnityEngine.Vector2> _boundaryBuffer
    [[deprecated("Use field access instead!")]] ::Unity::Collections::NativeArray_1<::UnityEngine::Vector2>& dyn__boundaryBuffer();
    // Get instance field reference: private System.Boolean _boundaryRequested
    [[deprecated("Use field access instead!")]] bool& dyn__boundaryRequested();
    // Get instance field reference: private OVRSceneAnchor _sceneAnchor
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRSceneAnchor*& dyn__sceneAnchor();
    // Get instance field reference: private readonly System.Collections.Generic.List`1<UnityEngine.Vector2> _boundary
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::Vector2>*& dyn__boundary();
    // public System.Single get_Width()
    // Offset: 0x4922E30
    float get_Width();
    // private System.Void set_Width(System.Single value)
    // Offset: 0x4922E38
    void set_Width(float value);
    // public System.Single get_Height()
    // Offset: 0x4922E40
    float get_Height();
    // private System.Void set_Height(System.Single value)
    // Offset: 0x4922E48
    void set_Height(float value);
    // public UnityEngine.Vector2 get_Offset()
    // Offset: 0x4922E50
    ::UnityEngine::Vector2 get_Offset();
    // private System.Void set_Offset(UnityEngine.Vector2 value)
    // Offset: 0x4922E58
    void set_Offset(::UnityEngine::Vector2 value);
    // public UnityEngine.Vector2 get_Dimensions()
    // Offset: 0x4922E60
    ::UnityEngine::Vector2 get_Dimensions();
    // public System.Collections.Generic.IReadOnlyList`1<UnityEngine.Vector2> get_Boundary()
    // Offset: 0x4922E68
    ::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::Vector2>* get_Boundary();
    // public System.Boolean get_ScaleChildren()
    // Offset: 0x4922E70
    bool get_ScaleChildren();
    // public System.Void set_ScaleChildren(System.Boolean value)
    // Offset: 0x4922E78
    void set_ScaleChildren(bool value);
    // public System.Boolean get_OffsetChildren()
    // Offset: 0x4922FF0
    bool get_OffsetChildren();
    // public System.Void set_OffsetChildren(System.Boolean value)
    // Offset: 0x4922FF8
    void set_OffsetChildren(bool value);
    // private System.Void SetChildScale()
    // Offset: 0x4922EAC
    void SetChildScale();
    // private System.Void SetChildOffset()
    // Offset: 0x492302C
    void SetChildOffset();
    // System.Void UpdateTransform()
    // Offset: 0x49201D0
    void UpdateTransform();
    // private System.Void Awake()
    // Offset: 0x4923158
    void Awake();
    // private System.Void Start()
    // Offset: 0x4923240
    void Start();
    // private System.Void IOVRSceneComponent.Initialize()
    // Offset: 0x4923244
    void IOVRSceneComponent_Initialize();
    // System.Void ScheduleGetLengthJob()
    // Offset: 0x4923248
    void ScheduleGetLengthJob();
    // System.Void RequestBoundary()
    // Offset: 0x492034C
    void RequestBoundary();
    // private System.Void Update()
    // Offset: 0x49233CC
    void Update();
    // private System.Void OnDisable()
    // Offset: 0x4923A3C
    void OnDisable();
    // public System.Void .ctor()
    // Offset: 0x4923B14
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static OVRScenePlane* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRScenePlane::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<OVRScenePlane*, creationType>()));
    }
  }; // OVRScenePlane
  // WARNING Not writing size check since size may be invalid!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::OVRScenePlane::get_Width
// Il2CppName: get_Width
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (GlobalNamespace::OVRScenePlane::*)()>(&GlobalNamespace::OVRScenePlane::get_Width)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::OVRScenePlane*), "get_Width", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::OVRScenePlane::set_Width
// Il2CppName: set_Width
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::OVRScenePlane::*)(float)>(&GlobalNamespace::OVRScenePlane::set_Width)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::OVRScenePlane*), "set_Width", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::OVRScenePlane::get_Height
// Il2CppName: get_Height
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (GlobalNamespace::OVRScenePlane::*)()>(&GlobalNamespace::OVRScenePlane::get_Height)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::OVRScenePlane*), "get_Height", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::OVRScenePlane::set_Height
// Il2CppName: set_Height
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::OVRScenePlane::*)(float)>(&GlobalNamespace::OVRScenePlane::set_Height)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::OVRScenePlane*), "set_Height", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::OVRScenePlane::get_Offset
// Il2CppName: get_Offset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector2 (GlobalNamespace::OVRScenePlane::*)()>(&GlobalNamespace::OVRScenePlane::get_Offset)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::OVRScenePlane*), "get_Offset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::OVRScenePlane::set_Offset
// Il2CppName: set_Offset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::OVRScenePlane::*)(::UnityEngine::Vector2)>(&GlobalNamespace::OVRScenePlane::set_Offset)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector2")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::OVRScenePlane*), "set_Offset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::OVRScenePlane::get_Dimensions
// Il2CppName: get_Dimensions
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector2 (GlobalNamespace::OVRScenePlane::*)()>(&GlobalNamespace::OVRScenePlane::get_Dimensions)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::OVRScenePlane*), "get_Dimensions", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::OVRScenePlane::get_Boundary
// Il2CppName: get_Boundary
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::Vector2>* (GlobalNamespace::OVRScenePlane::*)()>(&GlobalNamespace::OVRScenePlane::get_Boundary)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::OVRScenePlane*), "get_Boundary", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::OVRScenePlane::get_ScaleChildren
// Il2CppName: get_ScaleChildren
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (GlobalNamespace::OVRScenePlane::*)()>(&GlobalNamespace::OVRScenePlane::get_ScaleChildren)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::OVRScenePlane*), "get_ScaleChildren", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::OVRScenePlane::set_ScaleChildren
// Il2CppName: set_ScaleChildren
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::OVRScenePlane::*)(bool)>(&GlobalNamespace::OVRScenePlane::set_ScaleChildren)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::OVRScenePlane*), "set_ScaleChildren", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::OVRScenePlane::get_OffsetChildren
// Il2CppName: get_OffsetChildren
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (GlobalNamespace::OVRScenePlane::*)()>(&GlobalNamespace::OVRScenePlane::get_OffsetChildren)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::OVRScenePlane*), "get_OffsetChildren", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::OVRScenePlane::set_OffsetChildren
// Il2CppName: set_OffsetChildren
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::OVRScenePlane::*)(bool)>(&GlobalNamespace::OVRScenePlane::set_OffsetChildren)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::OVRScenePlane*), "set_OffsetChildren", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::OVRScenePlane::SetChildScale
// Il2CppName: SetChildScale
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::OVRScenePlane::*)()>(&GlobalNamespace::OVRScenePlane::SetChildScale)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::OVRScenePlane*), "SetChildScale", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::OVRScenePlane::SetChildOffset
// Il2CppName: SetChildOffset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::OVRScenePlane::*)()>(&GlobalNamespace::OVRScenePlane::SetChildOffset)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::OVRScenePlane*), "SetChildOffset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::OVRScenePlane::UpdateTransform
// Il2CppName: UpdateTransform
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::OVRScenePlane::*)()>(&GlobalNamespace::OVRScenePlane::UpdateTransform)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::OVRScenePlane*), "UpdateTransform", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::OVRScenePlane::Awake
// Il2CppName: Awake
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::OVRScenePlane::*)()>(&GlobalNamespace::OVRScenePlane::Awake)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::OVRScenePlane*), "Awake", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::OVRScenePlane::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::OVRScenePlane::*)()>(&GlobalNamespace::OVRScenePlane::Start)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::OVRScenePlane*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::OVRScenePlane::IOVRSceneComponent_Initialize
// Il2CppName: IOVRSceneComponent.Initialize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::OVRScenePlane::*)()>(&GlobalNamespace::OVRScenePlane::IOVRSceneComponent_Initialize)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::OVRScenePlane*), "IOVRSceneComponent.Initialize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::OVRScenePlane::ScheduleGetLengthJob
// Il2CppName: ScheduleGetLengthJob
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::OVRScenePlane::*)()>(&GlobalNamespace::OVRScenePlane::ScheduleGetLengthJob)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::OVRScenePlane*), "ScheduleGetLengthJob", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::OVRScenePlane::RequestBoundary
// Il2CppName: RequestBoundary
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::OVRScenePlane::*)()>(&GlobalNamespace::OVRScenePlane::RequestBoundary)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::OVRScenePlane*), "RequestBoundary", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::OVRScenePlane::Update
// Il2CppName: Update
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::OVRScenePlane::*)()>(&GlobalNamespace::OVRScenePlane::Update)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::OVRScenePlane*), "Update", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::OVRScenePlane::OnDisable
// Il2CppName: OnDisable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::OVRScenePlane::*)()>(&GlobalNamespace::OVRScenePlane::OnDisable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::OVRScenePlane*), "OnDisable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::OVRScenePlane::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
