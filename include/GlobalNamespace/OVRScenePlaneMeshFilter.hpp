// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
// Including type: System.Nullable`1
#include "System/Nullable_1.hpp"
// Including type: Unity.Jobs.JobHandle
#include "Unity/Jobs/JobHandle.hpp"
// Including type: Unity.Collections.NativeArray`1
#include "Unity/Collections/NativeArray_1.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: MeshFilter
  class MeshFilter;
  // Forward declaring type: Mesh
  class Mesh;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Forward declaring type: OVRScenePlaneMeshFilter
  class OVRScenePlaneMeshFilter;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::OVRScenePlaneMeshFilter);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::OVRScenePlaneMeshFilter*, "", "OVRScenePlaneMeshFilter");
// Type namespace: 
namespace GlobalNamespace {
  // WARNING Size may be invalid!
  // Autogenerated type: OVRScenePlaneMeshFilter
  // [TokenAttribute] Offset: FFFFFFFF
  // [RequireComponent] Offset: FFFFFFFF
  // [HelpURLAttribute] Offset: FFFFFFFF
  class OVRScenePlaneMeshFilter : public ::UnityEngine::MonoBehaviour {
    public:
    // Nested type: ::GlobalNamespace::OVRScenePlaneMeshFilter::TriangulateBoundaryJob
    struct TriangulateBoundaryJob;
    public:
    // private UnityEngine.MeshFilter _meshFilter
    // Size: 0x8
    // Offset: 0x20
    ::UnityEngine::MeshFilter* meshFilter;
    // Field size check
    static_assert(sizeof(::UnityEngine::MeshFilter*) == 0x8);
    // private UnityEngine.Mesh _mesh
    // Size: 0x8
    // Offset: 0x28
    ::UnityEngine::Mesh* mesh;
    // Field size check
    static_assert(sizeof(::UnityEngine::Mesh*) == 0x8);
    // private System.Nullable`1<Unity.Jobs.JobHandle> _jobHandle
    // Size: 0xFFFFFFFF
    // Offset: 0x30
    ::System::Nullable_1<::Unity::Jobs::JobHandle> jobHandle;
    // private System.Boolean _meshRequested
    // Size: 0x1
    // Offset: 0x48
    bool meshRequested;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private Unity.Collections.NativeArray`1<UnityEngine.Vector2> _boundary
    // Size: 0xFFFFFFFF
    // Offset: 0x50
    ::Unity::Collections::NativeArray_1<::UnityEngine::Vector2> boundary;
    // private Unity.Collections.NativeArray`1<System.Int32> _triangles
    // Size: 0xFFFFFFFF
    // Offset: 0x60
    ::Unity::Collections::NativeArray_1<int> triangles;
    public:
    // Get instance field reference: private UnityEngine.MeshFilter _meshFilter
    [[deprecated("Use field access instead!")]] ::UnityEngine::MeshFilter*& dyn__meshFilter();
    // Get instance field reference: private UnityEngine.Mesh _mesh
    [[deprecated("Use field access instead!")]] ::UnityEngine::Mesh*& dyn__mesh();
    // Get instance field reference: private System.Nullable`1<Unity.Jobs.JobHandle> _jobHandle
    [[deprecated("Use field access instead!")]] ::System::Nullable_1<::Unity::Jobs::JobHandle>& dyn__jobHandle();
    // Get instance field reference: private System.Boolean _meshRequested
    [[deprecated("Use field access instead!")]] bool& dyn__meshRequested();
    // Get instance field reference: private Unity.Collections.NativeArray`1<UnityEngine.Vector2> _boundary
    [[deprecated("Use field access instead!")]] ::Unity::Collections::NativeArray_1<::UnityEngine::Vector2>& dyn__boundary();
    // Get instance field reference: private Unity.Collections.NativeArray`1<System.Int32> _triangles
    [[deprecated("Use field access instead!")]] ::Unity::Collections::NativeArray_1<int>& dyn__triangles();
    // private System.Void Start()
    // Offset: 0x4923D88
    void Start();
    // System.Void ScheduleMeshGeneration()
    // Offset: 0x4923F4C
    void ScheduleMeshGeneration();
    // private System.Void Update()
    // Offset: 0x4924514
    void Update();
    // System.Void RequestMeshGeneration()
    // Offset: 0x4923A0C
    void RequestMeshGeneration();
    // private System.Void OnDisable()
    // Offset: 0x4924C54
    void OnDisable();
    // public System.Void .ctor()
    // Offset: 0x4924CD4
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static OVRScenePlaneMeshFilter* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRScenePlaneMeshFilter::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<OVRScenePlaneMeshFilter*, creationType>()));
    }
  }; // OVRScenePlaneMeshFilter
  // WARNING Not writing size check since size may be invalid!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::OVRScenePlaneMeshFilter::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::OVRScenePlaneMeshFilter::*)()>(&GlobalNamespace::OVRScenePlaneMeshFilter::Start)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::OVRScenePlaneMeshFilter*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::OVRScenePlaneMeshFilter::ScheduleMeshGeneration
// Il2CppName: ScheduleMeshGeneration
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::OVRScenePlaneMeshFilter::*)()>(&GlobalNamespace::OVRScenePlaneMeshFilter::ScheduleMeshGeneration)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::OVRScenePlaneMeshFilter*), "ScheduleMeshGeneration", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::OVRScenePlaneMeshFilter::Update
// Il2CppName: Update
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::OVRScenePlaneMeshFilter::*)()>(&GlobalNamespace::OVRScenePlaneMeshFilter::Update)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::OVRScenePlaneMeshFilter*), "Update", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::OVRScenePlaneMeshFilter::RequestMeshGeneration
// Il2CppName: RequestMeshGeneration
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::OVRScenePlaneMeshFilter::*)()>(&GlobalNamespace::OVRScenePlaneMeshFilter::RequestMeshGeneration)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::OVRScenePlaneMeshFilter*), "RequestMeshGeneration", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::OVRScenePlaneMeshFilter::OnDisable
// Il2CppName: OnDisable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::OVRScenePlaneMeshFilter::*)()>(&GlobalNamespace::OVRScenePlaneMeshFilter::OnDisable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::OVRScenePlaneMeshFilter*), "OnDisable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::OVRScenePlaneMeshFilter::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
