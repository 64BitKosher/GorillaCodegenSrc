// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Including type: Fusion.INetworkStruct
#include "Fusion/INetworkStruct.hpp"
// Completed includes
// Type namespace: 
namespace GlobalNamespace {
  // Forward declaring type: HitTargetStruct
  struct HitTargetStruct;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::HitTargetStruct, "", "HitTargetStruct");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x4
  #pragma pack(push, 1)
  // WARNING Layout: Explicit may not be correctly taken into account!
  // Autogenerated type: HitTargetStruct
  // [TokenAttribute] Offset: FFFFFFFF
  // [NetworkStructWeavedAttribute] Offset: FFFFFFFF
  struct HitTargetStruct/*, public ::System::ValueType, public ::Fusion::INetworkStruct*/ {
    public:
    public:
    // public System.Int32 Score
    // Size: 0x4
    // Offset: 0x0
    int Score;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Creating value type constructor for type: HitTargetStruct
    constexpr HitTargetStruct(int Score_ = {}) noexcept : Score{Score_} {}
    // Creating interface conversion operator: operator ::System::ValueType
    operator ::System::ValueType() noexcept {
      return *reinterpret_cast<::System::ValueType*>(this);
    }
    // Creating interface conversion operator: operator ::Fusion::INetworkStruct
    operator ::Fusion::INetworkStruct() noexcept {
      return *reinterpret_cast<::Fusion::INetworkStruct*>(this);
    }
    // Creating conversion operator: operator int
    constexpr operator int() const noexcept {
      return Score;
    }
    // Get instance field reference: public System.Int32 Score
    [[deprecated("Use field access instead!")]] int& dyn_Score();
    // public System.Void .ctor(System.Int32 v)
    // Offset: 0x290EF8C
    // ABORTED: conflicts with another method.  HitTargetStruct(int v);
  }; // HitTargetStruct
  #pragma pack(pop)
  static check_size<sizeof(HitTargetStruct), 0 + sizeof(int)> __GlobalNamespace_HitTargetStructSizeCheck;
  static_assert(sizeof(HitTargetStruct) == 0x4);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::HitTargetStruct::HitTargetStruct
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
