// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: GameObject
  class GameObject;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Forward declaring type: VoiceLoudnessReactorGameObjectEnableTarget
  class VoiceLoudnessReactorGameObjectEnableTarget;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::VoiceLoudnessReactorGameObjectEnableTarget);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::VoiceLoudnessReactorGameObjectEnableTarget*, "", "VoiceLoudnessReactorGameObjectEnableTarget");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x24
  #pragma pack(push, 1)
  // Autogenerated type: VoiceLoudnessReactorGameObjectEnableTarget
  // [TokenAttribute] Offset: FFFFFFFF
  class VoiceLoudnessReactorGameObjectEnableTarget : public ::Il2CppObject {
    public:
    public:
    // public UnityEngine.GameObject GameObject
    // Size: 0x8
    // Offset: 0x10
    ::UnityEngine::GameObject* GameObject;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // public System.Single Threshold
    // Size: 0x4
    // Offset: 0x18
    float Threshold;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // public System.Boolean TurnOnAtThreshhold
    // Size: 0x1
    // Offset: 0x1C
    bool TurnOnAtThreshhold;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // public System.Boolean UseSmoothedLoudness
    // Size: 0x1
    // Offset: 0x1D
    bool UseSmoothedLoudness;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: UseSmoothedLoudness and: Scale
    char __padding3[0x2] = {};
    // public System.Single Scale
    // Size: 0x4
    // Offset: 0x20
    float Scale;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    public:
    // Get instance field reference: public UnityEngine.GameObject GameObject
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_GameObject();
    // Get instance field reference: public System.Single Threshold
    [[deprecated("Use field access instead!")]] float& dyn_Threshold();
    // Get instance field reference: public System.Boolean TurnOnAtThreshhold
    [[deprecated("Use field access instead!")]] bool& dyn_TurnOnAtThreshhold();
    // Get instance field reference: public System.Boolean UseSmoothedLoudness
    [[deprecated("Use field access instead!")]] bool& dyn_UseSmoothedLoudness();
    // Get instance field reference: public System.Single Scale
    [[deprecated("Use field access instead!")]] float& dyn_Scale();
    // public System.Void .ctor()
    // Offset: 0x27A6798
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static VoiceLoudnessReactorGameObjectEnableTarget* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VoiceLoudnessReactorGameObjectEnableTarget::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<VoiceLoudnessReactorGameObjectEnableTarget*, creationType>()));
    }
  }; // VoiceLoudnessReactorGameObjectEnableTarget
  #pragma pack(pop)
  static check_size<sizeof(VoiceLoudnessReactorGameObjectEnableTarget), 32 + sizeof(float)> __GlobalNamespace_VoiceLoudnessReactorGameObjectEnableTargetSizeCheck;
  static_assert(sizeof(VoiceLoudnessReactorGameObjectEnableTarget) == 0x24);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::VoiceLoudnessReactorGameObjectEnableTarget::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
