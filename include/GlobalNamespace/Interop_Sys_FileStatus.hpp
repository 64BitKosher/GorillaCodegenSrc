// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Interop/Sys
#include "GlobalNamespace/Interop_Sys.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Including type: Interop/Sys/FileStatusFlags
#include "GlobalNamespace/Interop_Sys_FileStatusFlags.hpp"
// Completed includes
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::Interop::Sys::FileStatus, "", "Interop/Sys/FileStatus");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x6C
  #pragma pack(push, 1)
  // WARNING Layout: Sequential may not be correctly taken into account!
  // Autogenerated type: Interop/Sys/FileStatus
  // [TokenAttribute] Offset: FFFFFFFF
  struct Interop::Sys::FileStatus/*, public ::System::ValueType*/ {
    public:
    public:
    // Interop/Sys/FileStatusFlags Flags
    // Size: 0x4
    // Offset: 0x0
    ::GlobalNamespace::Interop::Sys::FileStatusFlags Flags;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::Interop::Sys::FileStatusFlags) == 0x4);
    // System.Int32 Mode
    // Size: 0x4
    // Offset: 0x4
    int Mode;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // System.UInt32 Uid
    // Size: 0x4
    // Offset: 0x8
    uint Uid;
    // Field size check
    static_assert(sizeof(uint) == 0x4);
    // System.UInt32 Gid
    // Size: 0x4
    // Offset: 0xC
    uint Gid;
    // Field size check
    static_assert(sizeof(uint) == 0x4);
    // System.Int64 Size
    // Size: 0x8
    // Offset: 0x10
    int64_t Size;
    // Field size check
    static_assert(sizeof(int64_t) == 0x8);
    // System.Int64 ATime
    // Size: 0x8
    // Offset: 0x18
    int64_t ATime;
    // Field size check
    static_assert(sizeof(int64_t) == 0x8);
    // System.Int64 ATimeNsec
    // Size: 0x8
    // Offset: 0x20
    int64_t ATimeNsec;
    // Field size check
    static_assert(sizeof(int64_t) == 0x8);
    // System.Int64 MTime
    // Size: 0x8
    // Offset: 0x28
    int64_t MTime;
    // Field size check
    static_assert(sizeof(int64_t) == 0x8);
    // System.Int64 MTimeNsec
    // Size: 0x8
    // Offset: 0x30
    int64_t MTimeNsec;
    // Field size check
    static_assert(sizeof(int64_t) == 0x8);
    // System.Int64 CTime
    // Size: 0x8
    // Offset: 0x38
    int64_t CTime;
    // Field size check
    static_assert(sizeof(int64_t) == 0x8);
    // System.Int64 CTimeNsec
    // Size: 0x8
    // Offset: 0x40
    int64_t CTimeNsec;
    // Field size check
    static_assert(sizeof(int64_t) == 0x8);
    // System.Int64 BirthTime
    // Size: 0x8
    // Offset: 0x48
    int64_t BirthTime;
    // Field size check
    static_assert(sizeof(int64_t) == 0x8);
    // System.Int64 BirthTimeNsec
    // Size: 0x8
    // Offset: 0x50
    int64_t BirthTimeNsec;
    // Field size check
    static_assert(sizeof(int64_t) == 0x8);
    // System.Int64 Dev
    // Size: 0x8
    // Offset: 0x58
    int64_t Dev;
    // Field size check
    static_assert(sizeof(int64_t) == 0x8);
    // System.Int64 Ino
    // Size: 0x8
    // Offset: 0x60
    int64_t Ino;
    // Field size check
    static_assert(sizeof(int64_t) == 0x8);
    // System.UInt32 UserFlags
    // Size: 0x4
    // Offset: 0x68
    uint UserFlags;
    // Field size check
    static_assert(sizeof(uint) == 0x4);
    public:
    // Creating value type constructor for type: FileStatus
    constexpr FileStatus(::GlobalNamespace::Interop::Sys::FileStatusFlags Flags_ = {}, int Mode_ = {}, uint Uid_ = {}, uint Gid_ = {}, int64_t Size_ = {}, int64_t ATime_ = {}, int64_t ATimeNsec_ = {}, int64_t MTime_ = {}, int64_t MTimeNsec_ = {}, int64_t CTime_ = {}, int64_t CTimeNsec_ = {}, int64_t BirthTime_ = {}, int64_t BirthTimeNsec_ = {}, int64_t Dev_ = {}, int64_t Ino_ = {}, uint UserFlags_ = {}) noexcept : Flags{Flags_}, Mode{Mode_}, Uid{Uid_}, Gid{Gid_}, Size{Size_}, ATime{ATime_}, ATimeNsec{ATimeNsec_}, MTime{MTime_}, MTimeNsec{MTimeNsec_}, CTime{CTime_}, CTimeNsec{CTimeNsec_}, BirthTime{BirthTime_}, BirthTimeNsec{BirthTimeNsec_}, Dev{Dev_}, Ino{Ino_}, UserFlags{UserFlags_} {}
    // Creating interface conversion operator: operator ::System::ValueType
    operator ::System::ValueType() noexcept {
      return *reinterpret_cast<::System::ValueType*>(this);
    }
    // Get instance field reference: Interop/Sys/FileStatusFlags Flags
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::Interop::Sys::FileStatusFlags& dyn_Flags();
    // Get instance field reference: System.Int32 Mode
    [[deprecated("Use field access instead!")]] int& dyn_Mode();
    // Get instance field reference: System.UInt32 Uid
    [[deprecated("Use field access instead!")]] uint& dyn_Uid();
    // Get instance field reference: System.UInt32 Gid
    [[deprecated("Use field access instead!")]] uint& dyn_Gid();
    // Get instance field reference: System.Int64 Size
    [[deprecated("Use field access instead!")]] int64_t& dyn_Size();
    // Get instance field reference: System.Int64 ATime
    [[deprecated("Use field access instead!")]] int64_t& dyn_ATime();
    // Get instance field reference: System.Int64 ATimeNsec
    [[deprecated("Use field access instead!")]] int64_t& dyn_ATimeNsec();
    // Get instance field reference: System.Int64 MTime
    [[deprecated("Use field access instead!")]] int64_t& dyn_MTime();
    // Get instance field reference: System.Int64 MTimeNsec
    [[deprecated("Use field access instead!")]] int64_t& dyn_MTimeNsec();
    // Get instance field reference: System.Int64 CTime
    [[deprecated("Use field access instead!")]] int64_t& dyn_CTime();
    // Get instance field reference: System.Int64 CTimeNsec
    [[deprecated("Use field access instead!")]] int64_t& dyn_CTimeNsec();
    // Get instance field reference: System.Int64 BirthTime
    [[deprecated("Use field access instead!")]] int64_t& dyn_BirthTime();
    // Get instance field reference: System.Int64 BirthTimeNsec
    [[deprecated("Use field access instead!")]] int64_t& dyn_BirthTimeNsec();
    // Get instance field reference: System.Int64 Dev
    [[deprecated("Use field access instead!")]] int64_t& dyn_Dev();
    // Get instance field reference: System.Int64 Ino
    [[deprecated("Use field access instead!")]] int64_t& dyn_Ino();
    // Get instance field reference: System.UInt32 UserFlags
    [[deprecated("Use field access instead!")]] uint& dyn_UserFlags();
  }; // Interop/Sys/FileStatus
  #pragma pack(pop)
  static check_size<sizeof(Interop::Sys::FileStatus), 104 + sizeof(uint)> __GlobalNamespace_Interop_Sys_FileStatusSizeCheck;
  static_assert(sizeof(Interop::Sys::FileStatus) == 0x6C);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
