// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: OVRPlugin
#include "GlobalNamespace/OVRPlugin.hpp"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Version
  class Version;
  // Forward declaring type: IntPtr
  struct IntPtr;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::OVRPlugin::OVRP_1_72_0);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::OVRPlugin::OVRP_1_72_0*, "", "OVRPlugin/OVRP_1_72_0");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: OVRPlugin/OVRP_1_72_0
  // [TokenAttribute] Offset: FFFFFFFF
  class OVRPlugin::OVRP_1_72_0 : public ::Il2CppObject {
    public:
    // Get static field: static public readonly System.Version version
    static ::System::Version* _get_version();
    // Set static field: static public readonly System.Version version
    static void _set_version(::System::Version* value);
    // static public OVRPlugin/Result ovrp_CreateSpatialAnchor(ref OVRPlugin/SpatialAnchorCreateInfo createInfo, out System.UInt64 requestId)
    // Offset: 0x49145EC
    static ::GlobalNamespace::OVRPlugin::Result ovrp_CreateSpatialAnchor(ByRef<::GlobalNamespace::OVRPlugin::SpatialAnchorCreateInfo> createInfo, ByRef<uint64_t> requestId);
    // static public OVRPlugin/Result ovrp_SetSpaceComponentStatus(ref System.UInt64 space, OVRPlugin/SpaceComponentType componentType, OVRPlugin/Bool enable, System.Double timeout, out System.UInt64 requestId)
    // Offset: 0x4914670
    static ::GlobalNamespace::OVRPlugin::Result ovrp_SetSpaceComponentStatus(ByRef<uint64_t> space, ::GlobalNamespace::OVRPlugin::SpaceComponentType componentType, ::GlobalNamespace::OVRPlugin::Bool enable, double timeout, ByRef<uint64_t> requestId);
    // static public OVRPlugin/Result ovrp_GetSpaceComponentStatus(ref System.UInt64 space, OVRPlugin/SpaceComponentType componentType, out OVRPlugin/Bool enabled, out OVRPlugin/Bool changePending)
    // Offset: 0x491471C
    static ::GlobalNamespace::OVRPlugin::Result ovrp_GetSpaceComponentStatus(ByRef<uint64_t> space, ::GlobalNamespace::OVRPlugin::SpaceComponentType componentType, ByRef<::GlobalNamespace::OVRPlugin::Bool> enabled, ByRef<::GlobalNamespace::OVRPlugin::Bool> changePending);
    // static public OVRPlugin/Result ovrp_EnumerateSpaceSupportedComponents(ref System.UInt64 space, System.UInt32 componentTypesCapacityInput, out System.UInt32 componentTypesCountOutput, in OVRPlugin/SpaceComponentType[] componentTypes)
    // Offset: 0x49147B4
    static ::GlobalNamespace::OVRPlugin::Result ovrp_EnumerateSpaceSupportedComponents(ByRef<uint64_t> space, uint componentTypesCapacityInput, ByRef<uint> componentTypesCountOutput, ByRef<::ArrayW<::GlobalNamespace::OVRPlugin::SpaceComponentType>> componentTypes);
    // static public OVRPlugin/Result ovrp_SaveSpace(ref System.UInt64 space, OVRPlugin/SpaceStorageLocation location, OVRPlugin/SpaceStoragePersistenceMode mode, out System.UInt64 requestId)
    // Offset: 0x4914858
    static ::GlobalNamespace::OVRPlugin::Result ovrp_SaveSpace(ByRef<uint64_t> space, ::GlobalNamespace::OVRPlugin::SpaceStorageLocation location, ::GlobalNamespace::OVRPlugin::SpaceStoragePersistenceMode mode, ByRef<uint64_t> requestId);
    // static public OVRPlugin/Result ovrp_QuerySpaces(ref OVRPlugin/SpaceQueryInfo queryInfo, out System.UInt64 requestId)
    // Offset: 0x49148F4
    static ::GlobalNamespace::OVRPlugin::Result ovrp_QuerySpaces(ByRef<::GlobalNamespace::OVRPlugin::SpaceQueryInfo> queryInfo, ByRef<uint64_t> requestId);
    // static public OVRPlugin/Result ovrp_RetrieveSpaceQueryResults(ref System.UInt64 requestId, System.UInt32 resultCapacityInput, ref System.UInt32 resultCountOutput, System.IntPtr results)
    // Offset: 0x49149DC
    static ::GlobalNamespace::OVRPlugin::Result ovrp_RetrieveSpaceQueryResults(ByRef<uint64_t> requestId, uint resultCapacityInput, ByRef<uint> resultCountOutput, ::System::IntPtr results);
    // static public OVRPlugin/Result ovrp_EraseSpace(ref System.UInt64 space, OVRPlugin/SpaceStorageLocation location, out System.UInt64 requestId)
    // Offset: 0x4914A78
    static ::GlobalNamespace::OVRPlugin::Result ovrp_EraseSpace(ByRef<uint64_t> space, ::GlobalNamespace::OVRPlugin::SpaceStorageLocation location, ByRef<uint64_t> requestId);
    // static public OVRPlugin/Result ovrp_GetSpaceContainer(ref System.UInt64 space, ref OVRPlugin/SpaceContainerInternal containerInternal)
    // Offset: 0x4914B0C
    static ::GlobalNamespace::OVRPlugin::Result ovrp_GetSpaceContainer(ByRef<uint64_t> space, ByRef<::GlobalNamespace::OVRPlugin::SpaceContainerInternal> containerInternal);
    // static public OVRPlugin/Result ovrp_GetSpaceBoundingBox2D(ref System.UInt64 space, out OVRPlugin/Rectf rect)
    // Offset: 0x4914B90
    static ::GlobalNamespace::OVRPlugin::Result ovrp_GetSpaceBoundingBox2D(ByRef<uint64_t> space, ByRef<::GlobalNamespace::OVRPlugin::Rectf> rect);
    // static public OVRPlugin/Result ovrp_GetSpaceBoundingBox3D(ref System.UInt64 space, out OVRPlugin/Boundsf bounds)
    // Offset: 0x4914C14
    static ::GlobalNamespace::OVRPlugin::Result ovrp_GetSpaceBoundingBox3D(ByRef<uint64_t> space, ByRef<::GlobalNamespace::OVRPlugin::Boundsf> bounds);
    // static public OVRPlugin/Result ovrp_GetSpaceSemanticLabels(ref System.UInt64 space, ref OVRPlugin/SpaceSemanticLabelInternal labelsInternal)
    // Offset: 0x4914C98
    static ::GlobalNamespace::OVRPlugin::Result ovrp_GetSpaceSemanticLabels(ByRef<uint64_t> space, ByRef<::GlobalNamespace::OVRPlugin::SpaceSemanticLabelInternal> labelsInternal);
    // static public OVRPlugin/Result ovrp_GetSpaceRoomLayout(ref System.UInt64 space, ref OVRPlugin/RoomLayoutInternal roomLayoutInternal)
    // Offset: 0x4914D1C
    static ::GlobalNamespace::OVRPlugin::Result ovrp_GetSpaceRoomLayout(ByRef<uint64_t> space, ByRef<::GlobalNamespace::OVRPlugin::RoomLayoutInternal> roomLayoutInternal);
    // static public OVRPlugin/Result ovrp_GetSpaceBoundary2D(ref System.UInt64 space, ref OVRPlugin/PolygonalBoundary2DInternal boundaryInternal)
    // Offset: 0x4914DA0
    static ::GlobalNamespace::OVRPlugin::Result ovrp_GetSpaceBoundary2D(ByRef<uint64_t> space, ByRef<::GlobalNamespace::OVRPlugin::PolygonalBoundary2DInternal> boundaryInternal);
    // static public OVRPlugin/Result ovrp_RequestSceneCapture(ref OVRPlugin/SceneCaptureRequestInternal request, out System.UInt64 requestId)
    // Offset: 0x4914E24
    static ::GlobalNamespace::OVRPlugin::Result ovrp_RequestSceneCapture(ByRef<::GlobalNamespace::OVRPlugin::SceneCaptureRequestInternal> request, ByRef<uint64_t> requestId);
    // static private System.Void .cctor()
    // Offset: 0x4914F04
    static void _cctor();
  }; // OVRPlugin/OVRP_1_72_0
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::OVRPlugin::OVRP_1_72_0::ovrp_CreateSpatialAnchor
// Il2CppName: ovrp_CreateSpatialAnchor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::OVRPlugin::Result (*)(ByRef<::GlobalNamespace::OVRPlugin::SpatialAnchorCreateInfo>, ByRef<uint64_t>)>(&GlobalNamespace::OVRPlugin::OVRP_1_72_0::ovrp_CreateSpatialAnchor)> {
  static const MethodInfo* get() {
    static auto* createInfo = &::il2cpp_utils::GetClassFromName("", "OVRPlugin/SpatialAnchorCreateInfo")->this_arg;
    static auto* requestId = &::il2cpp_utils::GetClassFromName("System", "UInt64")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::OVRPlugin::OVRP_1_72_0*), "ovrp_CreateSpatialAnchor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{createInfo, requestId});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::OVRPlugin::OVRP_1_72_0::ovrp_SetSpaceComponentStatus
// Il2CppName: ovrp_SetSpaceComponentStatus
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::OVRPlugin::Result (*)(ByRef<uint64_t>, ::GlobalNamespace::OVRPlugin::SpaceComponentType, ::GlobalNamespace::OVRPlugin::Bool, double, ByRef<uint64_t>)>(&GlobalNamespace::OVRPlugin::OVRP_1_72_0::ovrp_SetSpaceComponentStatus)> {
  static const MethodInfo* get() {
    static auto* space = &::il2cpp_utils::GetClassFromName("System", "UInt64")->this_arg;
    static auto* componentType = &::il2cpp_utils::GetClassFromName("", "OVRPlugin/SpaceComponentType")->byval_arg;
    static auto* enable = &::il2cpp_utils::GetClassFromName("", "OVRPlugin/Bool")->byval_arg;
    static auto* timeout = &::il2cpp_utils::GetClassFromName("System", "Double")->byval_arg;
    static auto* requestId = &::il2cpp_utils::GetClassFromName("System", "UInt64")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::OVRPlugin::OVRP_1_72_0*), "ovrp_SetSpaceComponentStatus", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{space, componentType, enable, timeout, requestId});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::OVRPlugin::OVRP_1_72_0::ovrp_GetSpaceComponentStatus
// Il2CppName: ovrp_GetSpaceComponentStatus
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::OVRPlugin::Result (*)(ByRef<uint64_t>, ::GlobalNamespace::OVRPlugin::SpaceComponentType, ByRef<::GlobalNamespace::OVRPlugin::Bool>, ByRef<::GlobalNamespace::OVRPlugin::Bool>)>(&GlobalNamespace::OVRPlugin::OVRP_1_72_0::ovrp_GetSpaceComponentStatus)> {
  static const MethodInfo* get() {
    static auto* space = &::il2cpp_utils::GetClassFromName("System", "UInt64")->this_arg;
    static auto* componentType = &::il2cpp_utils::GetClassFromName("", "OVRPlugin/SpaceComponentType")->byval_arg;
    static auto* enabled = &::il2cpp_utils::GetClassFromName("", "OVRPlugin/Bool")->this_arg;
    static auto* changePending = &::il2cpp_utils::GetClassFromName("", "OVRPlugin/Bool")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::OVRPlugin::OVRP_1_72_0*), "ovrp_GetSpaceComponentStatus", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{space, componentType, enabled, changePending});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::OVRPlugin::OVRP_1_72_0::ovrp_EnumerateSpaceSupportedComponents
// Il2CppName: ovrp_EnumerateSpaceSupportedComponents
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::OVRPlugin::Result (*)(ByRef<uint64_t>, uint, ByRef<uint>, ByRef<::ArrayW<::GlobalNamespace::OVRPlugin::SpaceComponentType>>)>(&GlobalNamespace::OVRPlugin::OVRP_1_72_0::ovrp_EnumerateSpaceSupportedComponents)> {
  static const MethodInfo* get() {
    static auto* space = &::il2cpp_utils::GetClassFromName("System", "UInt64")->this_arg;
    static auto* componentTypesCapacityInput = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    static auto* componentTypesCountOutput = &::il2cpp_utils::GetClassFromName("System", "UInt32")->this_arg;
    static auto* componentTypes = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("", "OVRPlugin/SpaceComponentType"), 1)->this_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::OVRPlugin::OVRP_1_72_0*), "ovrp_EnumerateSpaceSupportedComponents", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{space, componentTypesCapacityInput, componentTypesCountOutput, componentTypes});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::OVRPlugin::OVRP_1_72_0::ovrp_SaveSpace
// Il2CppName: ovrp_SaveSpace
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::OVRPlugin::Result (*)(ByRef<uint64_t>, ::GlobalNamespace::OVRPlugin::SpaceStorageLocation, ::GlobalNamespace::OVRPlugin::SpaceStoragePersistenceMode, ByRef<uint64_t>)>(&GlobalNamespace::OVRPlugin::OVRP_1_72_0::ovrp_SaveSpace)> {
  static const MethodInfo* get() {
    static auto* space = &::il2cpp_utils::GetClassFromName("System", "UInt64")->this_arg;
    static auto* location = &::il2cpp_utils::GetClassFromName("", "OVRPlugin/SpaceStorageLocation")->byval_arg;
    static auto* mode = &::il2cpp_utils::GetClassFromName("", "OVRPlugin/SpaceStoragePersistenceMode")->byval_arg;
    static auto* requestId = &::il2cpp_utils::GetClassFromName("System", "UInt64")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::OVRPlugin::OVRP_1_72_0*), "ovrp_SaveSpace", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{space, location, mode, requestId});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::OVRPlugin::OVRP_1_72_0::ovrp_QuerySpaces
// Il2CppName: ovrp_QuerySpaces
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::OVRPlugin::Result (*)(ByRef<::GlobalNamespace::OVRPlugin::SpaceQueryInfo>, ByRef<uint64_t>)>(&GlobalNamespace::OVRPlugin::OVRP_1_72_0::ovrp_QuerySpaces)> {
  static const MethodInfo* get() {
    static auto* queryInfo = &::il2cpp_utils::GetClassFromName("", "OVRPlugin/SpaceQueryInfo")->this_arg;
    static auto* requestId = &::il2cpp_utils::GetClassFromName("System", "UInt64")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::OVRPlugin::OVRP_1_72_0*), "ovrp_QuerySpaces", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{queryInfo, requestId});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::OVRPlugin::OVRP_1_72_0::ovrp_RetrieveSpaceQueryResults
// Il2CppName: ovrp_RetrieveSpaceQueryResults
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::OVRPlugin::Result (*)(ByRef<uint64_t>, uint, ByRef<uint>, ::System::IntPtr)>(&GlobalNamespace::OVRPlugin::OVRP_1_72_0::ovrp_RetrieveSpaceQueryResults)> {
  static const MethodInfo* get() {
    static auto* requestId = &::il2cpp_utils::GetClassFromName("System", "UInt64")->this_arg;
    static auto* resultCapacityInput = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    static auto* resultCountOutput = &::il2cpp_utils::GetClassFromName("System", "UInt32")->this_arg;
    static auto* results = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::OVRPlugin::OVRP_1_72_0*), "ovrp_RetrieveSpaceQueryResults", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{requestId, resultCapacityInput, resultCountOutput, results});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::OVRPlugin::OVRP_1_72_0::ovrp_EraseSpace
// Il2CppName: ovrp_EraseSpace
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::OVRPlugin::Result (*)(ByRef<uint64_t>, ::GlobalNamespace::OVRPlugin::SpaceStorageLocation, ByRef<uint64_t>)>(&GlobalNamespace::OVRPlugin::OVRP_1_72_0::ovrp_EraseSpace)> {
  static const MethodInfo* get() {
    static auto* space = &::il2cpp_utils::GetClassFromName("System", "UInt64")->this_arg;
    static auto* location = &::il2cpp_utils::GetClassFromName("", "OVRPlugin/SpaceStorageLocation")->byval_arg;
    static auto* requestId = &::il2cpp_utils::GetClassFromName("System", "UInt64")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::OVRPlugin::OVRP_1_72_0*), "ovrp_EraseSpace", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{space, location, requestId});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::OVRPlugin::OVRP_1_72_0::ovrp_GetSpaceContainer
// Il2CppName: ovrp_GetSpaceContainer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::OVRPlugin::Result (*)(ByRef<uint64_t>, ByRef<::GlobalNamespace::OVRPlugin::SpaceContainerInternal>)>(&GlobalNamespace::OVRPlugin::OVRP_1_72_0::ovrp_GetSpaceContainer)> {
  static const MethodInfo* get() {
    static auto* space = &::il2cpp_utils::GetClassFromName("System", "UInt64")->this_arg;
    static auto* containerInternal = &::il2cpp_utils::GetClassFromName("", "OVRPlugin/SpaceContainerInternal")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::OVRPlugin::OVRP_1_72_0*), "ovrp_GetSpaceContainer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{space, containerInternal});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::OVRPlugin::OVRP_1_72_0::ovrp_GetSpaceBoundingBox2D
// Il2CppName: ovrp_GetSpaceBoundingBox2D
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::OVRPlugin::Result (*)(ByRef<uint64_t>, ByRef<::GlobalNamespace::OVRPlugin::Rectf>)>(&GlobalNamespace::OVRPlugin::OVRP_1_72_0::ovrp_GetSpaceBoundingBox2D)> {
  static const MethodInfo* get() {
    static auto* space = &::il2cpp_utils::GetClassFromName("System", "UInt64")->this_arg;
    static auto* rect = &::il2cpp_utils::GetClassFromName("", "OVRPlugin/Rectf")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::OVRPlugin::OVRP_1_72_0*), "ovrp_GetSpaceBoundingBox2D", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{space, rect});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::OVRPlugin::OVRP_1_72_0::ovrp_GetSpaceBoundingBox3D
// Il2CppName: ovrp_GetSpaceBoundingBox3D
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::OVRPlugin::Result (*)(ByRef<uint64_t>, ByRef<::GlobalNamespace::OVRPlugin::Boundsf>)>(&GlobalNamespace::OVRPlugin::OVRP_1_72_0::ovrp_GetSpaceBoundingBox3D)> {
  static const MethodInfo* get() {
    static auto* space = &::il2cpp_utils::GetClassFromName("System", "UInt64")->this_arg;
    static auto* bounds = &::il2cpp_utils::GetClassFromName("", "OVRPlugin/Boundsf")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::OVRPlugin::OVRP_1_72_0*), "ovrp_GetSpaceBoundingBox3D", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{space, bounds});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::OVRPlugin::OVRP_1_72_0::ovrp_GetSpaceSemanticLabels
// Il2CppName: ovrp_GetSpaceSemanticLabels
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::OVRPlugin::Result (*)(ByRef<uint64_t>, ByRef<::GlobalNamespace::OVRPlugin::SpaceSemanticLabelInternal>)>(&GlobalNamespace::OVRPlugin::OVRP_1_72_0::ovrp_GetSpaceSemanticLabels)> {
  static const MethodInfo* get() {
    static auto* space = &::il2cpp_utils::GetClassFromName("System", "UInt64")->this_arg;
    static auto* labelsInternal = &::il2cpp_utils::GetClassFromName("", "OVRPlugin/SpaceSemanticLabelInternal")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::OVRPlugin::OVRP_1_72_0*), "ovrp_GetSpaceSemanticLabels", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{space, labelsInternal});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::OVRPlugin::OVRP_1_72_0::ovrp_GetSpaceRoomLayout
// Il2CppName: ovrp_GetSpaceRoomLayout
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::OVRPlugin::Result (*)(ByRef<uint64_t>, ByRef<::GlobalNamespace::OVRPlugin::RoomLayoutInternal>)>(&GlobalNamespace::OVRPlugin::OVRP_1_72_0::ovrp_GetSpaceRoomLayout)> {
  static const MethodInfo* get() {
    static auto* space = &::il2cpp_utils::GetClassFromName("System", "UInt64")->this_arg;
    static auto* roomLayoutInternal = &::il2cpp_utils::GetClassFromName("", "OVRPlugin/RoomLayoutInternal")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::OVRPlugin::OVRP_1_72_0*), "ovrp_GetSpaceRoomLayout", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{space, roomLayoutInternal});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::OVRPlugin::OVRP_1_72_0::ovrp_GetSpaceBoundary2D
// Il2CppName: ovrp_GetSpaceBoundary2D
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::OVRPlugin::Result (*)(ByRef<uint64_t>, ByRef<::GlobalNamespace::OVRPlugin::PolygonalBoundary2DInternal>)>(&GlobalNamespace::OVRPlugin::OVRP_1_72_0::ovrp_GetSpaceBoundary2D)> {
  static const MethodInfo* get() {
    static auto* space = &::il2cpp_utils::GetClassFromName("System", "UInt64")->this_arg;
    static auto* boundaryInternal = &::il2cpp_utils::GetClassFromName("", "OVRPlugin/PolygonalBoundary2DInternal")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::OVRPlugin::OVRP_1_72_0*), "ovrp_GetSpaceBoundary2D", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{space, boundaryInternal});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::OVRPlugin::OVRP_1_72_0::ovrp_RequestSceneCapture
// Il2CppName: ovrp_RequestSceneCapture
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::OVRPlugin::Result (*)(ByRef<::GlobalNamespace::OVRPlugin::SceneCaptureRequestInternal>, ByRef<uint64_t>)>(&GlobalNamespace::OVRPlugin::OVRP_1_72_0::ovrp_RequestSceneCapture)> {
  static const MethodInfo* get() {
    static auto* request = &::il2cpp_utils::GetClassFromName("", "OVRPlugin/SceneCaptureRequestInternal")->this_arg;
    static auto* requestId = &::il2cpp_utils::GetClassFromName("System", "UInt64")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::OVRPlugin::OVRP_1_72_0*), "ovrp_RequestSceneCapture", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{request, requestId});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::OVRPlugin::OVRP_1_72_0::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&GlobalNamespace::OVRPlugin::OVRP_1_72_0::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::OVRPlugin::OVRP_1_72_0*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
