// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: BarrelCannon
#include "GlobalNamespace/BarrelCannon.hpp"
// Including type: BarrelCannon/BarrelCannonState
#include "GlobalNamespace/BarrelCannon_BarrelCannonState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::BarrelCannon::BarrelCannonSyncedState);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::BarrelCannon::BarrelCannonSyncedState*, "", "BarrelCannon/BarrelCannonSyncedState");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x1C
  #pragma pack(push, 1)
  // Autogenerated type: BarrelCannon/BarrelCannonSyncedState
  // [TokenAttribute] Offset: FFFFFFFF
  class BarrelCannon::BarrelCannonSyncedState : public ::Il2CppObject {
    public:
    public:
    // public BarrelCannon/BarrelCannonState currentState
    // Size: 0x4
    // Offset: 0x10
    ::GlobalNamespace::BarrelCannon::BarrelCannonState currentState;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::BarrelCannon::BarrelCannonState) == 0x4);
    // public System.Boolean hasAuthorityPassenger
    // Size: 0x1
    // Offset: 0x14
    bool hasAuthorityPassenger;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: hasAuthorityPassenger and: firingPositionLerpValue
    char __padding1[0x3] = {};
    // public System.Single firingPositionLerpValue
    // Size: 0x4
    // Offset: 0x18
    float firingPositionLerpValue;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    public:
    // Get instance field reference: public BarrelCannon/BarrelCannonState currentState
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::BarrelCannon::BarrelCannonState& dyn_currentState();
    // Get instance field reference: public System.Boolean hasAuthorityPassenger
    [[deprecated("Use field access instead!")]] bool& dyn_hasAuthorityPassenger();
    // Get instance field reference: public System.Single firingPositionLerpValue
    [[deprecated("Use field access instead!")]] float& dyn_firingPositionLerpValue();
    // public System.Void .ctor()
    // Offset: 0x268F0F8
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static BarrelCannon::BarrelCannonSyncedState* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BarrelCannon::BarrelCannonSyncedState::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<BarrelCannon::BarrelCannonSyncedState*, creationType>()));
    }
  }; // BarrelCannon/BarrelCannonSyncedState
  #pragma pack(pop)
  static check_size<sizeof(BarrelCannon::BarrelCannonSyncedState), 24 + sizeof(float)> __GlobalNamespace_BarrelCannon_BarrelCannonSyncedStateSizeCheck;
  static_assert(sizeof(BarrelCannon::BarrelCannonSyncedState) == 0x1C);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::BarrelCannon::BarrelCannonSyncedState::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
