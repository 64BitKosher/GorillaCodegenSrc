// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.ScriptableObject
#include "UnityEngine/ScriptableObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: StringFormatter
  class StringFormatter;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Material
  class Material;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Func`1<TResult>
  template<typename TResult>
  class Func_1;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Forward declaring type: JoinTriggerUITemplate
  class JoinTriggerUITemplate;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::JoinTriggerUITemplate);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::JoinTriggerUITemplate*, "", "JoinTriggerUITemplate");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0xF8
  #pragma pack(push, 1)
  // Autogenerated type: JoinTriggerUITemplate
  // [TokenAttribute] Offset: FFFFFFFF
  // [CreateAssetMenuAttribute] Offset: FFFFFFFF
  class JoinTriggerUITemplate : public ::UnityEngine::ScriptableObject {
    public:
    // Nested type: ::GlobalNamespace::JoinTriggerUITemplate::FormattedString
    struct FormattedString;
    // Size: 0x10
    #pragma pack(push, 1)
    // WARNING Layout: Sequential may not be correctly taken into account!
    // Autogenerated type: JoinTriggerUITemplate/FormattedString
    // [TokenAttribute] Offset: FFFFFFFF
    struct FormattedString/*, public ::System::ValueType*/ {
      public:
      public:
      // private System.String formatText
      // Size: 0x8
      // Offset: 0x0
      ::StringW formatText;
      // Field size check
      static_assert(sizeof(::StringW) == 0x8);
      // private StringFormatter formatter
      // Size: 0x8
      // Offset: 0x8
      ::GlobalNamespace::StringFormatter* formatter;
      // Field size check
      static_assert(sizeof(::GlobalNamespace::StringFormatter*) == 0x8);
      public:
      // Creating value type constructor for type: FormattedString
      constexpr FormattedString(::StringW formatText_ = {}, ::GlobalNamespace::StringFormatter* formatter_ = {}) noexcept : formatText{formatText_}, formatter{formatter_} {}
      // Creating interface conversion operator: operator ::System::ValueType
      operator ::System::ValueType() noexcept {
        return *reinterpret_cast<::System::ValueType*>(this);
      }
      // Get instance field reference: private System.String formatText
      [[deprecated("Use field access instead!")]] ::StringW& dyn_formatText();
      // Get instance field reference: private StringFormatter formatter
      [[deprecated("Use field access instead!")]] ::GlobalNamespace::StringFormatter*& dyn_formatter();
      // public System.String GetText(System.String oldRoom, System.String newRoom)
      // Offset: 0x288D2C0
      ::StringW GetText(::StringW oldRoom, ::StringW newRoom);
      // public System.String GetText(System.Func`1<System.String> oldRoom, System.Func`1<System.String> newRoom)
      // Offset: 0x288D214
      ::StringW GetText(::System::Func_1<::StringW>* oldRoom, ::System::Func_1<::StringW>* newRoom);
    }; // JoinTriggerUITemplate/FormattedString
    #pragma pack(pop)
    static check_size<sizeof(JoinTriggerUITemplate::FormattedString), 8 + sizeof(::GlobalNamespace::StringFormatter*)> __GlobalNamespace_JoinTriggerUITemplate_FormattedStringSizeCheck;
    static_assert(sizeof(JoinTriggerUITemplate::FormattedString) == 0x10);
    public:
    // public UnityEngine.Material Milestone_Error
    // Size: 0x8
    // Offset: 0x18
    ::UnityEngine::Material* Milestone_Error;
    // Field size check
    static_assert(sizeof(::UnityEngine::Material*) == 0x8);
    // public UnityEngine.Material Milestone_AlreadyInRoom
    // Size: 0x8
    // Offset: 0x20
    ::UnityEngine::Material* Milestone_AlreadyInRoom;
    // Field size check
    static_assert(sizeof(::UnityEngine::Material*) == 0x8);
    // public UnityEngine.Material Milestone_InPrivateRoom
    // Size: 0x8
    // Offset: 0x28
    ::UnityEngine::Material* Milestone_InPrivateRoom;
    // Field size check
    static_assert(sizeof(::UnityEngine::Material*) == 0x8);
    // public UnityEngine.Material Milestone_NotConnectedSoloJoin
    // Size: 0x8
    // Offset: 0x30
    ::UnityEngine::Material* Milestone_NotConnectedSoloJoin;
    // Field size check
    static_assert(sizeof(::UnityEngine::Material*) == 0x8);
    // public UnityEngine.Material Milestone_LeaveRoomAndSoloJoin
    // Size: 0x8
    // Offset: 0x38
    ::UnityEngine::Material* Milestone_LeaveRoomAndSoloJoin;
    // Field size check
    static_assert(sizeof(::UnityEngine::Material*) == 0x8);
    // public UnityEngine.Material Milestone_LeaveRoomAndGroupJoin
    // Size: 0x8
    // Offset: 0x40
    ::UnityEngine::Material* Milestone_LeaveRoomAndGroupJoin;
    // Field size check
    static_assert(sizeof(::UnityEngine::Material*) == 0x8);
    // public UnityEngine.Material Milestone_AbandonPartyAndSoloJoin
    // Size: 0x8
    // Offset: 0x48
    ::UnityEngine::Material* Milestone_AbandonPartyAndSoloJoin;
    // Field size check
    static_assert(sizeof(::UnityEngine::Material*) == 0x8);
    // public UnityEngine.Material ScreenBG_Error
    // Size: 0x8
    // Offset: 0x50
    ::UnityEngine::Material* ScreenBG_Error;
    // Field size check
    static_assert(sizeof(::UnityEngine::Material*) == 0x8);
    // public UnityEngine.Material ScreenBG_AlreadyInRoom
    // Size: 0x8
    // Offset: 0x58
    ::UnityEngine::Material* ScreenBG_AlreadyInRoom;
    // Field size check
    static_assert(sizeof(::UnityEngine::Material*) == 0x8);
    // public UnityEngine.Material ScreenBG_InPrivateRoom
    // Size: 0x8
    // Offset: 0x60
    ::UnityEngine::Material* ScreenBG_InPrivateRoom;
    // Field size check
    static_assert(sizeof(::UnityEngine::Material*) == 0x8);
    // public UnityEngine.Material ScreenBG_NotConnectedSoloJoin
    // Size: 0x8
    // Offset: 0x68
    ::UnityEngine::Material* ScreenBG_NotConnectedSoloJoin;
    // Field size check
    static_assert(sizeof(::UnityEngine::Material*) == 0x8);
    // public UnityEngine.Material ScreenBG_LeaveRoomAndSoloJoin
    // Size: 0x8
    // Offset: 0x70
    ::UnityEngine::Material* ScreenBG_LeaveRoomAndSoloJoin;
    // Field size check
    static_assert(sizeof(::UnityEngine::Material*) == 0x8);
    // public UnityEngine.Material ScreenBG_LeaveRoomAndGroupJoin
    // Size: 0x8
    // Offset: 0x78
    ::UnityEngine::Material* ScreenBG_LeaveRoomAndGroupJoin;
    // Field size check
    static_assert(sizeof(::UnityEngine::Material*) == 0x8);
    // public UnityEngine.Material ScreenBG_AbandonPartyAndSoloJoin
    // Size: 0x8
    // Offset: 0x80
    ::UnityEngine::Material* ScreenBG_AbandonPartyAndSoloJoin;
    // Field size check
    static_assert(sizeof(::UnityEngine::Material*) == 0x8);
    // public System.String ScreenText_Error
    // Size: 0x8
    // Offset: 0x88
    ::StringW ScreenText_Error;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public System.Boolean showFullErrorMessages
    // Size: 0x1
    // Offset: 0x90
    bool showFullErrorMessages;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: showFullErrorMessages and: ScreenText_AlreadyInRoom
    char __padding15[0x7] = {};
    // public JoinTriggerUITemplate/FormattedString ScreenText_AlreadyInRoom
    // Size: 0x10
    // Offset: 0x98
    ::GlobalNamespace::JoinTriggerUITemplate::FormattedString ScreenText_AlreadyInRoom;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::JoinTriggerUITemplate::FormattedString) == 0x10);
    // public JoinTriggerUITemplate/FormattedString ScreenText_InPrivateRoom
    // Size: 0x10
    // Offset: 0xA8
    ::GlobalNamespace::JoinTriggerUITemplate::FormattedString ScreenText_InPrivateRoom;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::JoinTriggerUITemplate::FormattedString) == 0x10);
    // public JoinTriggerUITemplate/FormattedString ScreenText_NotConnectedSoloJoin
    // Size: 0x10
    // Offset: 0xB8
    ::GlobalNamespace::JoinTriggerUITemplate::FormattedString ScreenText_NotConnectedSoloJoin;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::JoinTriggerUITemplate::FormattedString) == 0x10);
    // public JoinTriggerUITemplate/FormattedString ScreenText_LeaveRoomAndSoloJoin
    // Size: 0x10
    // Offset: 0xC8
    ::GlobalNamespace::JoinTriggerUITemplate::FormattedString ScreenText_LeaveRoomAndSoloJoin;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::JoinTriggerUITemplate::FormattedString) == 0x10);
    // public JoinTriggerUITemplate/FormattedString ScreenText_LeaveRoomAndGroupJoin
    // Size: 0x10
    // Offset: 0xD8
    ::GlobalNamespace::JoinTriggerUITemplate::FormattedString ScreenText_LeaveRoomAndGroupJoin;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::JoinTriggerUITemplate::FormattedString) == 0x10);
    // public JoinTriggerUITemplate/FormattedString ScreenText_AbandonPartyAndSoloJoin
    // Size: 0x10
    // Offset: 0xE8
    ::GlobalNamespace::JoinTriggerUITemplate::FormattedString ScreenText_AbandonPartyAndSoloJoin;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::JoinTriggerUITemplate::FormattedString) == 0x10);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: public UnityEngine.Material Milestone_Error
    [[deprecated("Use field access instead!")]] ::UnityEngine::Material*& dyn_Milestone_Error();
    // Get instance field reference: public UnityEngine.Material Milestone_AlreadyInRoom
    [[deprecated("Use field access instead!")]] ::UnityEngine::Material*& dyn_Milestone_AlreadyInRoom();
    // Get instance field reference: public UnityEngine.Material Milestone_InPrivateRoom
    [[deprecated("Use field access instead!")]] ::UnityEngine::Material*& dyn_Milestone_InPrivateRoom();
    // Get instance field reference: public UnityEngine.Material Milestone_NotConnectedSoloJoin
    [[deprecated("Use field access instead!")]] ::UnityEngine::Material*& dyn_Milestone_NotConnectedSoloJoin();
    // Get instance field reference: public UnityEngine.Material Milestone_LeaveRoomAndSoloJoin
    [[deprecated("Use field access instead!")]] ::UnityEngine::Material*& dyn_Milestone_LeaveRoomAndSoloJoin();
    // Get instance field reference: public UnityEngine.Material Milestone_LeaveRoomAndGroupJoin
    [[deprecated("Use field access instead!")]] ::UnityEngine::Material*& dyn_Milestone_LeaveRoomAndGroupJoin();
    // Get instance field reference: public UnityEngine.Material Milestone_AbandonPartyAndSoloJoin
    [[deprecated("Use field access instead!")]] ::UnityEngine::Material*& dyn_Milestone_AbandonPartyAndSoloJoin();
    // Get instance field reference: public UnityEngine.Material ScreenBG_Error
    [[deprecated("Use field access instead!")]] ::UnityEngine::Material*& dyn_ScreenBG_Error();
    // Get instance field reference: public UnityEngine.Material ScreenBG_AlreadyInRoom
    [[deprecated("Use field access instead!")]] ::UnityEngine::Material*& dyn_ScreenBG_AlreadyInRoom();
    // Get instance field reference: public UnityEngine.Material ScreenBG_InPrivateRoom
    [[deprecated("Use field access instead!")]] ::UnityEngine::Material*& dyn_ScreenBG_InPrivateRoom();
    // Get instance field reference: public UnityEngine.Material ScreenBG_NotConnectedSoloJoin
    [[deprecated("Use field access instead!")]] ::UnityEngine::Material*& dyn_ScreenBG_NotConnectedSoloJoin();
    // Get instance field reference: public UnityEngine.Material ScreenBG_LeaveRoomAndSoloJoin
    [[deprecated("Use field access instead!")]] ::UnityEngine::Material*& dyn_ScreenBG_LeaveRoomAndSoloJoin();
    // Get instance field reference: public UnityEngine.Material ScreenBG_LeaveRoomAndGroupJoin
    [[deprecated("Use field access instead!")]] ::UnityEngine::Material*& dyn_ScreenBG_LeaveRoomAndGroupJoin();
    // Get instance field reference: public UnityEngine.Material ScreenBG_AbandonPartyAndSoloJoin
    [[deprecated("Use field access instead!")]] ::UnityEngine::Material*& dyn_ScreenBG_AbandonPartyAndSoloJoin();
    // Get instance field reference: public System.String ScreenText_Error
    [[deprecated("Use field access instead!")]] ::StringW& dyn_ScreenText_Error();
    // Get instance field reference: public System.Boolean showFullErrorMessages
    [[deprecated("Use field access instead!")]] bool& dyn_showFullErrorMessages();
    // Get instance field reference: public JoinTriggerUITemplate/FormattedString ScreenText_AlreadyInRoom
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::JoinTriggerUITemplate::FormattedString& dyn_ScreenText_AlreadyInRoom();
    // Get instance field reference: public JoinTriggerUITemplate/FormattedString ScreenText_InPrivateRoom
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::JoinTriggerUITemplate::FormattedString& dyn_ScreenText_InPrivateRoom();
    // Get instance field reference: public JoinTriggerUITemplate/FormattedString ScreenText_NotConnectedSoloJoin
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::JoinTriggerUITemplate::FormattedString& dyn_ScreenText_NotConnectedSoloJoin();
    // Get instance field reference: public JoinTriggerUITemplate/FormattedString ScreenText_LeaveRoomAndSoloJoin
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::JoinTriggerUITemplate::FormattedString& dyn_ScreenText_LeaveRoomAndSoloJoin();
    // Get instance field reference: public JoinTriggerUITemplate/FormattedString ScreenText_LeaveRoomAndGroupJoin
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::JoinTriggerUITemplate::FormattedString& dyn_ScreenText_LeaveRoomAndGroupJoin();
    // Get instance field reference: public JoinTriggerUITemplate/FormattedString ScreenText_AbandonPartyAndSoloJoin
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::JoinTriggerUITemplate::FormattedString& dyn_ScreenText_AbandonPartyAndSoloJoin();
    // public System.Void .ctor()
    // Offset: 0x288D2B8
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static JoinTriggerUITemplate* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::JoinTriggerUITemplate::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<JoinTriggerUITemplate*, creationType>()));
    }
  }; // JoinTriggerUITemplate
  #pragma pack(pop)
  static check_size<sizeof(JoinTriggerUITemplate), 232 + sizeof(::GlobalNamespace::JoinTriggerUITemplate::FormattedString)> __GlobalNamespace_JoinTriggerUITemplateSizeCheck;
  static_assert(sizeof(JoinTriggerUITemplate) == 0xF8);
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::JoinTriggerUITemplate::FormattedString, "", "JoinTriggerUITemplate/FormattedString");
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::JoinTriggerUITemplate::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
