// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/byref.hpp"
// Completed includes
// Type namespace: 
namespace GlobalNamespace {
  // Forward declaring type: IBuildValidation
  class IBuildValidation;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::IBuildValidation);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::IBuildValidation*, "", "IBuildValidation");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x0
  #pragma pack(push, 1)
  // Autogenerated type: IBuildValidation
  // [TokenAttribute] Offset: FFFFFFFF
  class IBuildValidation {
    public:
    // public System.Boolean BuildValidationCheck()
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool BuildValidationCheck();
  }; // IBuildValidation
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::IBuildValidation::BuildValidationCheck
// Il2CppName: BuildValidationCheck
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (GlobalNamespace::IBuildValidation::*)()>(&GlobalNamespace::IBuildValidation::BuildValidationCheck)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::IBuildValidation*), "BuildValidationCheck", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
