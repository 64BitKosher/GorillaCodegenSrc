// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.IDisposable
#include "System/IDisposable.hpp"
// Including type: System.Runtime.InteropServices.HandleRef
#include "System/Runtime/InteropServices/HandleRef.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Type
  class Type;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Forward declaring type: AuthRefreshRequiredDelegateWrapper
  class AuthRefreshRequiredDelegateWrapper;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::AuthRefreshRequiredDelegateWrapper);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::AuthRefreshRequiredDelegateWrapper*, "", "AuthRefreshRequiredDelegateWrapper");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x30
  #pragma pack(push, 1)
  // Autogenerated type: AuthRefreshRequiredDelegateWrapper
  // [TokenAttribute] Offset: FFFFFFFF
  class AuthRefreshRequiredDelegateWrapper : public ::Il2CppObject/*, public ::System::IDisposable*/ {
    public:
    // Nested type: ::GlobalNamespace::AuthRefreshRequiredDelegateWrapper::SwigDelegateAuthRefreshRequiredDelegateWrapper_0
    class SwigDelegateAuthRefreshRequiredDelegateWrapper_0;
    public:
    // private System.Runtime.InteropServices.HandleRef swigCPtr
    // Size: 0x10
    // Offset: 0x10
    ::System::Runtime::InteropServices::HandleRef swigCPtr;
    // Field size check
    static_assert(sizeof(::System::Runtime::InteropServices::HandleRef) == 0x10);
    // protected System.Boolean swigCMemOwn
    // Size: 0x1
    // Offset: 0x20
    bool swigCMemOwn;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: swigCMemOwn and: swigDelegate0
    char __padding1[0x7] = {};
    // private AuthRefreshRequiredDelegateWrapper/SwigDelegateAuthRefreshRequiredDelegateWrapper_0 swigDelegate0
    // Size: 0x8
    // Offset: 0x28
    ::GlobalNamespace::AuthRefreshRequiredDelegateWrapper::SwigDelegateAuthRefreshRequiredDelegateWrapper_0* swigDelegate0;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::AuthRefreshRequiredDelegateWrapper::SwigDelegateAuthRefreshRequiredDelegateWrapper_0*) == 0x8);
    public:
    // Creating interface conversion operator: operator ::System::IDisposable
    operator ::System::IDisposable() noexcept {
      return *reinterpret_cast<::System::IDisposable*>(this);
    }
    // Get static field: static protected AuthRefreshRequiredDelegateWrapper selfInstance
    static ::GlobalNamespace::AuthRefreshRequiredDelegateWrapper* _get_selfInstance();
    // Set static field: static protected AuthRefreshRequiredDelegateWrapper selfInstance
    static void _set_selfInstance(::GlobalNamespace::AuthRefreshRequiredDelegateWrapper* value);
    // Get static field: static private System.Type[] swigMethodTypes0
    static ::ArrayW<::System::Type*> _get_swigMethodTypes0();
    // Set static field: static private System.Type[] swigMethodTypes0
    static void _set_swigMethodTypes0(::ArrayW<::System::Type*> value);
    // Get instance field reference: private System.Runtime.InteropServices.HandleRef swigCPtr
    [[deprecated("Use field access instead!")]] ::System::Runtime::InteropServices::HandleRef& dyn_swigCPtr();
    // Get instance field reference: protected System.Boolean swigCMemOwn
    [[deprecated("Use field access instead!")]] bool& dyn_swigCMemOwn();
    // Get instance field reference: private AuthRefreshRequiredDelegateWrapper/SwigDelegateAuthRefreshRequiredDelegateWrapper_0 swigDelegate0
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::AuthRefreshRequiredDelegateWrapper::SwigDelegateAuthRefreshRequiredDelegateWrapper_0*& dyn_swigDelegate0();
    // System.Void .ctor(System.IntPtr cPtr, System.Boolean cMemoryOwn)
    // Offset: 0x2674C6C
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static AuthRefreshRequiredDelegateWrapper* New_ctor(::System::IntPtr cPtr, bool cMemoryOwn) {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AuthRefreshRequiredDelegateWrapper::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<AuthRefreshRequiredDelegateWrapper*, creationType>(cPtr, cMemoryOwn)));
    }
    // static System.Runtime.InteropServices.HandleRef getCPtr(AuthRefreshRequiredDelegateWrapper obj)
    // Offset: 0x2674CCC
    static ::System::Runtime::InteropServices::HandleRef getCPtr(::GlobalNamespace::AuthRefreshRequiredDelegateWrapper* obj);
    // public System.Void Dispose()
    // Offset: 0x2674DAC
    void Dispose();
    // protected System.Void Dispose(System.Boolean disposing)
    // Offset: 0x2674E18
    void Dispose(bool disposing);
    // public System.Void AuthRefreshRequired(System.String arg0)
    // Offset: 0x2674FE4
    void AuthRefreshRequired(::StringW arg0);
    // public System.Void .ctor()
    // Offset: 0x2675354
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static AuthRefreshRequiredDelegateWrapper* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AuthRefreshRequiredDelegateWrapper::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<AuthRefreshRequiredDelegateWrapper*, creationType>()));
    }
    // private System.Void SwigDirectorConnect()
    // Offset: 0x2675480
    void SwigDirectorConnect();
    // private System.Boolean SwigDerivedClassHasMethod(System.String methodName, System.Type[] methodTypes)
    // Offset: 0x26755AC
    bool SwigDerivedClassHasMethod(::StringW methodName, ::ArrayW<::System::Type*> methodTypes);
    // static private System.Void SwigDirectorMethodAuthRefreshRequired(System.String arg0)
    // Offset: 0x2674BFC
    static void SwigDirectorMethodAuthRefreshRequired(::StringW arg0);
    // static private System.Void .cctor()
    // Offset: 0x26759CC
    static void _cctor();
    // protected override System.Void Finalize()
    // Offset: 0x2674D0C
    // Implemented from: System.Object
    // Base method: System.Void Object::Finalize()
    void Finalize();
  }; // AuthRefreshRequiredDelegateWrapper
  #pragma pack(pop)
  static check_size<sizeof(AuthRefreshRequiredDelegateWrapper), 40 + sizeof(::GlobalNamespace::AuthRefreshRequiredDelegateWrapper::SwigDelegateAuthRefreshRequiredDelegateWrapper_0*)> __GlobalNamespace_AuthRefreshRequiredDelegateWrapperSizeCheck;
  static_assert(sizeof(AuthRefreshRequiredDelegateWrapper) == 0x30);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::AuthRefreshRequiredDelegateWrapper::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: GlobalNamespace::AuthRefreshRequiredDelegateWrapper::getCPtr
// Il2CppName: getCPtr
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Runtime::InteropServices::HandleRef (*)(::GlobalNamespace::AuthRefreshRequiredDelegateWrapper*)>(&GlobalNamespace::AuthRefreshRequiredDelegateWrapper::getCPtr)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("", "AuthRefreshRequiredDelegateWrapper")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::AuthRefreshRequiredDelegateWrapper*), "getCPtr", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::AuthRefreshRequiredDelegateWrapper::Dispose
// Il2CppName: Dispose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::AuthRefreshRequiredDelegateWrapper::*)()>(&GlobalNamespace::AuthRefreshRequiredDelegateWrapper::Dispose)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::AuthRefreshRequiredDelegateWrapper*), "Dispose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::AuthRefreshRequiredDelegateWrapper::Dispose
// Il2CppName: Dispose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::AuthRefreshRequiredDelegateWrapper::*)(bool)>(&GlobalNamespace::AuthRefreshRequiredDelegateWrapper::Dispose)> {
  static const MethodInfo* get() {
    static auto* disposing = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::AuthRefreshRequiredDelegateWrapper*), "Dispose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{disposing});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::AuthRefreshRequiredDelegateWrapper::AuthRefreshRequired
// Il2CppName: AuthRefreshRequired
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::AuthRefreshRequiredDelegateWrapper::*)(::StringW)>(&GlobalNamespace::AuthRefreshRequiredDelegateWrapper::AuthRefreshRequired)> {
  static const MethodInfo* get() {
    static auto* arg0 = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::AuthRefreshRequiredDelegateWrapper*), "AuthRefreshRequired", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{arg0});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::AuthRefreshRequiredDelegateWrapper::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: GlobalNamespace::AuthRefreshRequiredDelegateWrapper::SwigDirectorConnect
// Il2CppName: SwigDirectorConnect
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::AuthRefreshRequiredDelegateWrapper::*)()>(&GlobalNamespace::AuthRefreshRequiredDelegateWrapper::SwigDirectorConnect)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::AuthRefreshRequiredDelegateWrapper*), "SwigDirectorConnect", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::AuthRefreshRequiredDelegateWrapper::SwigDerivedClassHasMethod
// Il2CppName: SwigDerivedClassHasMethod
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (GlobalNamespace::AuthRefreshRequiredDelegateWrapper::*)(::StringW, ::ArrayW<::System::Type*>)>(&GlobalNamespace::AuthRefreshRequiredDelegateWrapper::SwigDerivedClassHasMethod)> {
  static const MethodInfo* get() {
    static auto* methodName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* methodTypes = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Type"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::AuthRefreshRequiredDelegateWrapper*), "SwigDerivedClassHasMethod", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{methodName, methodTypes});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::AuthRefreshRequiredDelegateWrapper::SwigDirectorMethodAuthRefreshRequired
// Il2CppName: SwigDirectorMethodAuthRefreshRequired
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::StringW)>(&GlobalNamespace::AuthRefreshRequiredDelegateWrapper::SwigDirectorMethodAuthRefreshRequired)> {
  static const MethodInfo* get() {
    static auto* arg0 = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::AuthRefreshRequiredDelegateWrapper*), "SwigDirectorMethodAuthRefreshRequired", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{arg0});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::AuthRefreshRequiredDelegateWrapper::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&GlobalNamespace::AuthRefreshRequiredDelegateWrapper::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::AuthRefreshRequiredDelegateWrapper*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::AuthRefreshRequiredDelegateWrapper::Finalize
// Il2CppName: Finalize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::AuthRefreshRequiredDelegateWrapper::*)()>(&GlobalNamespace::AuthRefreshRequiredDelegateWrapper::Finalize)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::AuthRefreshRequiredDelegateWrapper*), "Finalize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
