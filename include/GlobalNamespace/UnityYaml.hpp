// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Reflection
namespace System::Reflection {
  // Forward declaring type: Assembly
  class Assembly;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: Dictionary`2<TKey, TValue>
  template<typename TKey, typename TValue>
  class Dictionary_2;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Type
  class Type;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Forward declaring type: UnityYaml
  class UnityYaml;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::UnityYaml);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::UnityYaml*, "", "UnityYaml");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: UnityYaml
  // [TokenAttribute] Offset: FFFFFFFF
  class UnityYaml : public ::Il2CppObject {
    public:
    // Get static field: static private readonly System.Reflection.Assembly EngineAssembly
    static ::System::Reflection::Assembly* _get_EngineAssembly();
    // Set static field: static private readonly System.Reflection.Assembly EngineAssembly
    static void _set_EngineAssembly(::System::Reflection::Assembly* value);
    // Get static field: static private readonly System.Reflection.Assembly TerrainAssembly
    static ::System::Reflection::Assembly* _get_TerrainAssembly();
    // Set static field: static private readonly System.Reflection.Assembly TerrainAssembly
    static void _set_TerrainAssembly(::System::Reflection::Assembly* value);
    // Get static field: static public System.Collections.Generic.Dictionary`2<System.Int32,System.Type> ClassIDToType
    static ::System::Collections::Generic::Dictionary_2<int, ::System::Type*>* _get_ClassIDToType();
    // Set static field: static public System.Collections.Generic.Dictionary`2<System.Int32,System.Type> ClassIDToType
    static void _set_ClassIDToType(::System::Collections::Generic::Dictionary_2<int, ::System::Type*>* value);
    // static private System.Void .cctor()
    // Offset: 0x279E638
    static void _cctor();
  }; // UnityYaml
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::UnityYaml::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&GlobalNamespace::UnityYaml::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::UnityYaml*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
