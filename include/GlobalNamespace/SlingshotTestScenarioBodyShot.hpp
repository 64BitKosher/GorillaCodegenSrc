// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: SlingshotTestScenario
#include "GlobalNamespace/SlingshotTestScenario.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: GameObject
  class GameObject;
  // Forward declaring type: Collider
  class Collider;
}
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: VRRig
  class VRRig;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Forward declaring type: SlingshotTestScenarioBodyShot
  class SlingshotTestScenarioBodyShot;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::SlingshotTestScenarioBodyShot);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::SlingshotTestScenarioBodyShot*, "", "SlingshotTestScenarioBodyShot");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x40
  #pragma pack(push, 1)
  // Autogenerated type: SlingshotTestScenarioBodyShot
  // [TokenAttribute] Offset: FFFFFFFF
  class SlingshotTestScenarioBodyShot : public ::GlobalNamespace::SlingshotTestScenario {
    public:
    public:
    // public UnityEngine.GameObject projectilePrefab
    // Size: 0x8
    // Offset: 0x20
    ::UnityEngine::GameObject* projectilePrefab;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // public VRRig targetRig
    // Size: 0x8
    // Offset: 0x28
    ::GlobalNamespace::VRRig* targetRig;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::VRRig*) == 0x8);
    // public UnityEngine.Collider[] targetColliders
    // Size: 0x8
    // Offset: 0x30
    ::ArrayW<::UnityEngine::Collider*> targetColliders;
    // Field size check
    static_assert(sizeof(::ArrayW<::UnityEngine::Collider*>) == 0x8);
    // public UnityEngine.GameObject anchor
    // Size: 0x8
    // Offset: 0x38
    ::UnityEngine::GameObject* anchor;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    public:
    // Get instance field reference: public UnityEngine.GameObject projectilePrefab
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_projectilePrefab();
    // Get instance field reference: public VRRig targetRig
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::VRRig*& dyn_targetRig();
    // Get instance field reference: public UnityEngine.Collider[] targetColliders
    [[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Collider*>& dyn_targetColliders();
    // Get instance field reference: public UnityEngine.GameObject anchor
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_anchor();
    // public System.Void .ctor()
    // Offset: 0x2972B38
    // Implemented from: SlingshotTestScenario
    // Base method: System.Void SlingshotTestScenario::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static SlingshotTestScenarioBodyShot* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SlingshotTestScenarioBodyShot::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<SlingshotTestScenarioBodyShot*, creationType>()));
    }
  }; // SlingshotTestScenarioBodyShot
  #pragma pack(pop)
  static check_size<sizeof(SlingshotTestScenarioBodyShot), 56 + sizeof(::UnityEngine::GameObject*)> __GlobalNamespace_SlingshotTestScenarioBodyShotSizeCheck;
  static_assert(sizeof(SlingshotTestScenarioBodyShot) == 0x40);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::SlingshotTestScenarioBodyShot::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
