// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: GorillaBattleManager
#include "GlobalNamespace/GorillaBattleManager.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Random
  class Random;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::GorillaBattleManager::$$c__DisplayClass81_0);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::GorillaBattleManager::$$c__DisplayClass81_0*, "", "GorillaBattleManager/<>c__DisplayClass81_0");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x18
  #pragma pack(push, 1)
  // Autogenerated type: GorillaBattleManager/<>c__DisplayClass81_0
  // [TokenAttribute] Offset: FFFFFFFF
  // [CompilerGeneratedAttribute] Offset: FFFFFFFF
  class GorillaBattleManager::$$c__DisplayClass81_0 : public ::Il2CppObject {
    public:
    public:
    // public System.Random rand
    // Size: 0x8
    // Offset: 0x10
    ::System::Random* rand;
    // Field size check
    static_assert(sizeof(::System::Random*) == 0x8);
    public:
    // Creating conversion operator: operator ::System::Random*
    constexpr operator ::System::Random*() const noexcept {
      return rand;
    }
    // Get instance field reference: public System.Random rand
    [[deprecated("Use field access instead!")]] ::System::Random*& dyn_rand();
    // public System.Void .ctor()
    // Offset: 0x2704424
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static GorillaBattleManager::$$c__DisplayClass81_0* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaBattleManager::$$c__DisplayClass81_0::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<GorillaBattleManager::$$c__DisplayClass81_0*, creationType>()));
    }
    // System.Int32 <RandomizeTeams>b__0(System.Int32 x)
    // Offset: 0x27047AC
    int $RandomizeTeams$b__0(int x);
  }; // GorillaBattleManager/<>c__DisplayClass81_0
  #pragma pack(pop)
  static check_size<sizeof(GorillaBattleManager::$$c__DisplayClass81_0), 16 + sizeof(::System::Random*)> __GlobalNamespace_GorillaBattleManager_$$c__DisplayClass81_0SizeCheck;
  static_assert(sizeof(GorillaBattleManager::$$c__DisplayClass81_0) == 0x18);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::GorillaBattleManager::$$c__DisplayClass81_0::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: GlobalNamespace::GorillaBattleManager::$$c__DisplayClass81_0::$RandomizeTeams$b__0
// Il2CppName: <RandomizeTeams>b__0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (GlobalNamespace::GorillaBattleManager::$$c__DisplayClass81_0::*)(int)>(&GlobalNamespace::GorillaBattleManager::$$c__DisplayClass81_0::$RandomizeTeams$b__0)> {
  static const MethodInfo* get() {
    static auto* x = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::GorillaBattleManager::$$c__DisplayClass81_0*), "<RandomizeTeams>b__0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{x});
  }
};
