// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: OVRPassthroughColorLut/ColorLutTextureConverter
#include "GlobalNamespace/OVRPassthroughColorLut_ColorLutTextureConverter.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Including type: Unity.Jobs.IJobParallelFor
#include "Unity/Jobs/IJobParallelFor.hpp"
// Including type: OVRPassthroughColorLut/ColorLutTextureConverter/TextureSettings
#include "GlobalNamespace/OVRPassthroughColorLut_ColorLutTextureConverter_TextureSettings.hpp"
// Including type: Unity.Collections.NativeArray`1
#include "Unity/Collections/NativeArray_1.hpp"
// Completed includes
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::OVRPassthroughColorLut::ColorLutTextureConverter::MapColorValuesJob, "", "OVRPassthroughColorLut/ColorLutTextureConverter/MapColorValuesJob");
// Type namespace: 
namespace GlobalNamespace {
  // WARNING Size may be invalid!
  // WARNING Layout: Sequential may not be correctly taken into account!
  // Autogenerated type: OVRPassthroughColorLut/ColorLutTextureConverter/MapColorValuesJob
  // [TokenAttribute] Offset: FFFFFFFF
  struct OVRPassthroughColorLut::ColorLutTextureConverter::MapColorValuesJob/*, public ::System::ValueType, public ::Unity::Jobs::IJobParallelFor*/ {
    public:
    public:
    // public OVRPassthroughColorLut/ColorLutTextureConverter/TextureSettings settings
    // Size: 0x15
    // Offset: 0x0
    ::GlobalNamespace::OVRPassthroughColorLut::ColorLutTextureConverter::TextureSettings settings;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::OVRPassthroughColorLut::ColorLutTextureConverter::TextureSettings) == 0x15);
    // public Unity.Collections.NativeArray`1<System.Byte> target
    // Size: 0xFFFFFFFF
    // Offset: 0x18
    ::Unity::Collections::NativeArray_1<uint8_t> target;
    // public Unity.Collections.NativeArray`1<System.Byte> source
    // Size: 0xFFFFFFFF
    // Offset: 0x28
    ::Unity::Collections::NativeArray_1<uint8_t> source;
    public:
    // Creating value type constructor for type: MapColorValuesJob
    constexpr MapColorValuesJob(::GlobalNamespace::OVRPassthroughColorLut::ColorLutTextureConverter::TextureSettings settings_ = {}, ::Unity::Collections::NativeArray_1<uint8_t> target_ = {}, ::Unity::Collections::NativeArray_1<uint8_t> source_ = {}) noexcept : settings{settings_}, target{target_}, source{source_} {}
    // Creating interface conversion operator: operator ::System::ValueType
    operator ::System::ValueType() noexcept {
      return *reinterpret_cast<::System::ValueType*>(this);
    }
    // Creating interface conversion operator: operator ::Unity::Jobs::IJobParallelFor
    operator ::Unity::Jobs::IJobParallelFor() noexcept {
      return *reinterpret_cast<::Unity::Jobs::IJobParallelFor*>(this);
    }
    // Get instance field reference: public OVRPassthroughColorLut/ColorLutTextureConverter/TextureSettings settings
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRPassthroughColorLut::ColorLutTextureConverter::TextureSettings& dyn_settings();
    // Get instance field reference: public Unity.Collections.NativeArray`1<System.Byte> target
    [[deprecated("Use field access instead!")]] ::Unity::Collections::NativeArray_1<uint8_t>& dyn_target();
    // Get instance field reference: public Unity.Collections.NativeArray`1<System.Byte> source
    [[deprecated("Use field access instead!")]] ::Unity::Collections::NativeArray_1<uint8_t>& dyn_source();
    // public System.Void Execute(System.Int32 index)
    // Offset: 0x4962C8C
    void Execute(int index);
  }; // OVRPassthroughColorLut/ColorLutTextureConverter/MapColorValuesJob
  // WARNING Not writing size check since size may be invalid!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::OVRPassthroughColorLut::ColorLutTextureConverter::MapColorValuesJob::Execute
// Il2CppName: Execute
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::OVRPassthroughColorLut::ColorLutTextureConverter::MapColorValuesJob::*)(int)>(&GlobalNamespace::OVRPassthroughColorLut::ColorLutTextureConverter::MapColorValuesJob::Execute)> {
  static const MethodInfo* get() {
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::OVRPassthroughColorLut::ColorLutTextureConverter::MapColorValuesJob), "Execute", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{index});
  }
};
