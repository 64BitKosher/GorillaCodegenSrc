// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
// Including type: UnityEngine.SceneManagement.Scene
#include "UnityEngine/SceneManagement/Scene.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
// Including type: OVRInput
#include "GlobalNamespace/OVRInput.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::UI
namespace UnityEngine::UI {
  // Forward declaring type: VerticalLayoutGroup
  class VerticalLayoutGroup;
}
// Forward declaring namespace: TMPro
namespace TMPro {
  // Forward declaring type: TextMeshProUGUI
  class TextMeshProUGUI;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Forward declaring type: UiSceneMenu
  class UiSceneMenu;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::UiSceneMenu);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::UiSceneMenu*, "", "UiSceneMenu");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x34
  #pragma pack(push, 1)
  // Autogenerated type: UiSceneMenu
  // [TokenAttribute] Offset: FFFFFFFF
  class UiSceneMenu : public ::UnityEngine::MonoBehaviour {
    public:
    public:
    // private UnityEngine.UI.VerticalLayoutGroup m_layoutGroup
    // Size: 0x8
    // Offset: 0x20
    ::UnityEngine::UI::VerticalLayoutGroup* m_layoutGroup;
    // Field size check
    static_assert(sizeof(::UnityEngine::UI::VerticalLayoutGroup*) == 0x8);
    // private TMPro.TextMeshProUGUI m_labelPf
    // Size: 0x8
    // Offset: 0x28
    ::TMPro::TextMeshProUGUI* m_labelPf;
    // Field size check
    static_assert(sizeof(::TMPro::TextMeshProUGUI*) == 0x8);
    // private UnityEngine.SceneManagement.Scene m_activeScene
    // Size: 0x4
    // Offset: 0x30
    ::UnityEngine::SceneManagement::Scene m_activeScene;
    // Field size check
    static_assert(sizeof(::UnityEngine::SceneManagement::Scene) == 0x4);
    public:
    // Get static field: static private UnityEngine.Vector2 s_lastThumbstickL
    static ::UnityEngine::Vector2 _get_s_lastThumbstickL();
    // Set static field: static private UnityEngine.Vector2 s_lastThumbstickL
    static void _set_s_lastThumbstickL(::UnityEngine::Vector2 value);
    // Get static field: static private UnityEngine.Vector2 s_lastThumbstickR
    static ::UnityEngine::Vector2 _get_s_lastThumbstickR();
    // Set static field: static private UnityEngine.Vector2 s_lastThumbstickR
    static void _set_s_lastThumbstickR(::UnityEngine::Vector2 value);
    // Get instance field reference: private UnityEngine.UI.VerticalLayoutGroup m_layoutGroup
    [[deprecated("Use field access instead!")]] ::UnityEngine::UI::VerticalLayoutGroup*& dyn_m_layoutGroup();
    // Get instance field reference: private TMPro.TextMeshProUGUI m_labelPf
    [[deprecated("Use field access instead!")]] ::TMPro::TextMeshProUGUI*& dyn_m_labelPf();
    // Get instance field reference: private UnityEngine.SceneManagement.Scene m_activeScene
    [[deprecated("Use field access instead!")]] ::UnityEngine::SceneManagement::Scene& dyn_m_activeScene();
    // private System.Void Awake()
    // Offset: 0x294E184
    void Awake();
    // private System.Void Update()
    // Offset: 0x294E450
    void Update();
    // private System.Boolean InputPrevScene()
    // Offset: 0x294E568
    bool InputPrevScene();
    // private System.Boolean InputNextScene()
    // Offset: 0x294E604
    bool InputNextScene();
    // private System.Boolean KeyboardPrevScene()
    // Offset: 0x294E648
    bool KeyboardPrevScene();
    // private System.Boolean KeyboardNextScene()
    // Offset: 0x294E6E4
    bool KeyboardNextScene();
    // private System.Boolean ThumbstickPrevScene(OVRInput/Controller controller)
    // Offset: 0x294E654
    bool ThumbstickPrevScene(::GlobalNamespace::OVRInput::Controller controller);
    // private System.Boolean ThumbstickNextScene(OVRInput/Controller controller)
    // Offset: 0x294E6F0
    bool ThumbstickNextScene(::GlobalNamespace::OVRInput::Controller controller);
    // private UnityEngine.Vector2 GetLastThumbstickValue(OVRInput/Controller controller)
    // Offset: 0x294E780
    ::UnityEngine::Vector2 GetLastThumbstickValue(::GlobalNamespace::OVRInput::Controller controller);
    // private System.Void ChangeScene(System.Int32 nextScene)
    // Offset: 0x294E5AC
    void ChangeScene(int nextScene);
    // private System.Void CreateLabel(System.Int32 sceneIndex, System.String scenePath)
    // Offset: 0x294E228
    void CreateLabel(int sceneIndex, ::StringW scenePath);
    // public System.Void .ctor()
    // Offset: 0x294E7E8
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static UiSceneMenu* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UiSceneMenu::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<UiSceneMenu*, creationType>()));
    }
  }; // UiSceneMenu
  #pragma pack(pop)
  static check_size<sizeof(UiSceneMenu), 48 + sizeof(::UnityEngine::SceneManagement::Scene)> __GlobalNamespace_UiSceneMenuSizeCheck;
  static_assert(sizeof(UiSceneMenu) == 0x34);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::UiSceneMenu::Awake
// Il2CppName: Awake
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::UiSceneMenu::*)()>(&GlobalNamespace::UiSceneMenu::Awake)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::UiSceneMenu*), "Awake", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::UiSceneMenu::Update
// Il2CppName: Update
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::UiSceneMenu::*)()>(&GlobalNamespace::UiSceneMenu::Update)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::UiSceneMenu*), "Update", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::UiSceneMenu::InputPrevScene
// Il2CppName: InputPrevScene
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (GlobalNamespace::UiSceneMenu::*)()>(&GlobalNamespace::UiSceneMenu::InputPrevScene)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::UiSceneMenu*), "InputPrevScene", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::UiSceneMenu::InputNextScene
// Il2CppName: InputNextScene
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (GlobalNamespace::UiSceneMenu::*)()>(&GlobalNamespace::UiSceneMenu::InputNextScene)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::UiSceneMenu*), "InputNextScene", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::UiSceneMenu::KeyboardPrevScene
// Il2CppName: KeyboardPrevScene
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (GlobalNamespace::UiSceneMenu::*)()>(&GlobalNamespace::UiSceneMenu::KeyboardPrevScene)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::UiSceneMenu*), "KeyboardPrevScene", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::UiSceneMenu::KeyboardNextScene
// Il2CppName: KeyboardNextScene
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (GlobalNamespace::UiSceneMenu::*)()>(&GlobalNamespace::UiSceneMenu::KeyboardNextScene)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::UiSceneMenu*), "KeyboardNextScene", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::UiSceneMenu::ThumbstickPrevScene
// Il2CppName: ThumbstickPrevScene
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (GlobalNamespace::UiSceneMenu::*)(::GlobalNamespace::OVRInput::Controller)>(&GlobalNamespace::UiSceneMenu::ThumbstickPrevScene)> {
  static const MethodInfo* get() {
    static auto* controller = &::il2cpp_utils::GetClassFromName("", "OVRInput/Controller")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::UiSceneMenu*), "ThumbstickPrevScene", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{controller});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::UiSceneMenu::ThumbstickNextScene
// Il2CppName: ThumbstickNextScene
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (GlobalNamespace::UiSceneMenu::*)(::GlobalNamespace::OVRInput::Controller)>(&GlobalNamespace::UiSceneMenu::ThumbstickNextScene)> {
  static const MethodInfo* get() {
    static auto* controller = &::il2cpp_utils::GetClassFromName("", "OVRInput/Controller")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::UiSceneMenu*), "ThumbstickNextScene", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{controller});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::UiSceneMenu::GetLastThumbstickValue
// Il2CppName: GetLastThumbstickValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector2 (GlobalNamespace::UiSceneMenu::*)(::GlobalNamespace::OVRInput::Controller)>(&GlobalNamespace::UiSceneMenu::GetLastThumbstickValue)> {
  static const MethodInfo* get() {
    static auto* controller = &::il2cpp_utils::GetClassFromName("", "OVRInput/Controller")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::UiSceneMenu*), "GetLastThumbstickValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{controller});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::UiSceneMenu::ChangeScene
// Il2CppName: ChangeScene
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::UiSceneMenu::*)(int)>(&GlobalNamespace::UiSceneMenu::ChangeScene)> {
  static const MethodInfo* get() {
    static auto* nextScene = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::UiSceneMenu*), "ChangeScene", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{nextScene});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::UiSceneMenu::CreateLabel
// Il2CppName: CreateLabel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::UiSceneMenu::*)(int, ::StringW)>(&GlobalNamespace::UiSceneMenu::CreateLabel)> {
  static const MethodInfo* get() {
    static auto* sceneIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* scenePath = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::UiSceneMenu*), "CreateLabel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sceneIndex, scenePath});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::UiSceneMenu::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
