// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Transform
  class Transform;
  // Forward declaring type: LineRenderer
  class LineRenderer;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Forward declaring type: OVRPointerVisualizer
  class OVRPointerVisualizer;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::OVRPointerVisualizer);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::OVRPointerVisualizer*, "", "OVRPointerVisualizer");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x34
  #pragma pack(push, 1)
  // Autogenerated type: OVRPointerVisualizer
  // [TokenAttribute] Offset: FFFFFFFF
  class OVRPointerVisualizer : public ::UnityEngine::MonoBehaviour {
    public:
    public:
    // public UnityEngine.Transform rayTransform
    // Size: 0x8
    // Offset: 0x20
    ::UnityEngine::Transform* rayTransform;
    // Field size check
    static_assert(sizeof(::UnityEngine::Transform*) == 0x8);
    // public UnityEngine.LineRenderer linePointer
    // Size: 0x8
    // Offset: 0x28
    ::UnityEngine::LineRenderer* linePointer;
    // Field size check
    static_assert(sizeof(::UnityEngine::LineRenderer*) == 0x8);
    // public System.Single rayDrawDistance
    // Size: 0x4
    // Offset: 0x30
    float rayDrawDistance;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    public:
    // Get instance field reference: public UnityEngine.Transform rayTransform
    [[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& dyn_rayTransform();
    // Get instance field reference: public UnityEngine.LineRenderer linePointer
    [[deprecated("Use field access instead!")]] ::UnityEngine::LineRenderer*& dyn_linePointer();
    // Get instance field reference: public System.Single rayDrawDistance
    [[deprecated("Use field access instead!")]] float& dyn_rayDrawDistance();
    // private System.Void Update()
    // Offset: 0x49199F0
    void Update();
    // public System.Void .ctor()
    // Offset: 0x4919BE8
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static OVRPointerVisualizer* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPointerVisualizer::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<OVRPointerVisualizer*, creationType>()));
    }
  }; // OVRPointerVisualizer
  #pragma pack(pop)
  static check_size<sizeof(OVRPointerVisualizer), 48 + sizeof(float)> __GlobalNamespace_OVRPointerVisualizerSizeCheck;
  static_assert(sizeof(OVRPointerVisualizer) == 0x34);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::OVRPointerVisualizer::Update
// Il2CppName: Update
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::OVRPointerVisualizer::*)()>(&GlobalNamespace::OVRPointerVisualizer::Update)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::OVRPointerVisualizer*), "Update", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::OVRPointerVisualizer::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
