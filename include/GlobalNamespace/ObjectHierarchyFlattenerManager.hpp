// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: ObjectHierarchyFlattener
  class ObjectHierarchyFlattener;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Forward declaring type: ObjectHierarchyFlattenerManager
  class ObjectHierarchyFlattenerManager;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::ObjectHierarchyFlattenerManager);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::ObjectHierarchyFlattenerManager*, "", "ObjectHierarchyFlattenerManager");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x20
  #pragma pack(push, 1)
  // Autogenerated type: ObjectHierarchyFlattenerManager
  // [TokenAttribute] Offset: FFFFFFFF
  class ObjectHierarchyFlattenerManager : public ::UnityEngine::MonoBehaviour {
    public:
    // Get static field: static public ObjectHierarchyFlattenerManager instance
    static ::GlobalNamespace::ObjectHierarchyFlattenerManager* _get_instance();
    // Set static field: static public ObjectHierarchyFlattenerManager instance
    static void _set_instance(::GlobalNamespace::ObjectHierarchyFlattenerManager* value);
    // Get static field: static public System.Boolean hasInstance
    static bool _get_hasInstance();
    // Set static field: static public System.Boolean hasInstance
    static void _set_hasInstance(bool value);
    // Get static field: static public System.Collections.Generic.List`1<ObjectHierarchyFlattener> alloHF
    static ::System::Collections::Generic::List_1<::GlobalNamespace::ObjectHierarchyFlattener*>* _get_alloHF();
    // Set static field: static public System.Collections.Generic.List`1<ObjectHierarchyFlattener> alloHF
    static void _set_alloHF(::System::Collections::Generic::List_1<::GlobalNamespace::ObjectHierarchyFlattener*>* value);
    // protected System.Void Awake()
    // Offset: 0x288EFF4
    void Awake();
    // static public System.Void CreateManager()
    // Offset: 0x288F1D0
    static void CreateManager();
    // static private System.Void SetInstance(ObjectHierarchyFlattenerManager manager)
    // Offset: 0x288F0EC
    static void SetInstance(::GlobalNamespace::ObjectHierarchyFlattenerManager* manager);
    // static public System.Void RegisterOHF(ObjectHierarchyFlattener rbWI)
    // Offset: 0x288EE1C
    static void RegisterOHF(::GlobalNamespace::ObjectHierarchyFlattener* rbWI);
    // static public System.Void UnregisterOHF(ObjectHierarchyFlattener rbWI)
    // Offset: 0x288EB60
    static void UnregisterOHF(::GlobalNamespace::ObjectHierarchyFlattener* rbWI);
    // public System.Void LateUpdate()
    // Offset: 0x288F290
    void LateUpdate();
    // public System.Void .ctor()
    // Offset: 0x288F35C
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static ObjectHierarchyFlattenerManager* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObjectHierarchyFlattenerManager::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<ObjectHierarchyFlattenerManager*, creationType>()));
    }
    // static private System.Void .cctor()
    // Offset: 0x288F364
    static void _cctor();
  }; // ObjectHierarchyFlattenerManager
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::ObjectHierarchyFlattenerManager::Awake
// Il2CppName: Awake
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::ObjectHierarchyFlattenerManager::*)()>(&GlobalNamespace::ObjectHierarchyFlattenerManager::Awake)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::ObjectHierarchyFlattenerManager*), "Awake", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::ObjectHierarchyFlattenerManager::CreateManager
// Il2CppName: CreateManager
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&GlobalNamespace::ObjectHierarchyFlattenerManager::CreateManager)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::ObjectHierarchyFlattenerManager*), "CreateManager", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::ObjectHierarchyFlattenerManager::SetInstance
// Il2CppName: SetInstance
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::GlobalNamespace::ObjectHierarchyFlattenerManager*)>(&GlobalNamespace::ObjectHierarchyFlattenerManager::SetInstance)> {
  static const MethodInfo* get() {
    static auto* manager = &::il2cpp_utils::GetClassFromName("", "ObjectHierarchyFlattenerManager")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::ObjectHierarchyFlattenerManager*), "SetInstance", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{manager});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::ObjectHierarchyFlattenerManager::RegisterOHF
// Il2CppName: RegisterOHF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::GlobalNamespace::ObjectHierarchyFlattener*)>(&GlobalNamespace::ObjectHierarchyFlattenerManager::RegisterOHF)> {
  static const MethodInfo* get() {
    static auto* rbWI = &::il2cpp_utils::GetClassFromName("", "ObjectHierarchyFlattener")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::ObjectHierarchyFlattenerManager*), "RegisterOHF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{rbWI});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::ObjectHierarchyFlattenerManager::UnregisterOHF
// Il2CppName: UnregisterOHF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::GlobalNamespace::ObjectHierarchyFlattener*)>(&GlobalNamespace::ObjectHierarchyFlattenerManager::UnregisterOHF)> {
  static const MethodInfo* get() {
    static auto* rbWI = &::il2cpp_utils::GetClassFromName("", "ObjectHierarchyFlattener")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::ObjectHierarchyFlattenerManager*), "UnregisterOHF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{rbWI});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::ObjectHierarchyFlattenerManager::LateUpdate
// Il2CppName: LateUpdate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::ObjectHierarchyFlattenerManager::*)()>(&GlobalNamespace::ObjectHierarchyFlattenerManager::LateUpdate)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::ObjectHierarchyFlattenerManager*), "LateUpdate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::ObjectHierarchyFlattenerManager::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: GlobalNamespace::ObjectHierarchyFlattenerManager::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&GlobalNamespace::ObjectHierarchyFlattenerManager::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::ObjectHierarchyFlattenerManager*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
