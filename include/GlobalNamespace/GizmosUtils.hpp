// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Vector3
  struct Vector3;
  // Forward declaring type: Quaternion
  struct Quaternion;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Forward declaring type: GizmosUtils
  class GizmosUtils;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::GizmosUtils);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::GizmosUtils*, "", "GizmosUtils");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: GizmosUtils
  // [TokenAttribute] Offset: FFFFFFFF
  class GizmosUtils : public ::Il2CppObject {
    public:
    // static public System.Void DrawCubeTRS(UnityEngine.Vector3 t, UnityEngine.Quaternion r, UnityEngine.Vector3 s)
    // Offset: 0x27767EC
    static void DrawCubeTRS(::UnityEngine::Vector3 t, ::UnityEngine::Quaternion r, ::UnityEngine::Vector3 s);
    // static public System.Void DrawWireCubeTRS(UnityEngine.Vector3 t, UnityEngine.Quaternion r, UnityEngine.Vector3 s)
    // Offset: 0x27767F0
    static void DrawWireCubeTRS(::UnityEngine::Vector3 t, ::UnityEngine::Quaternion r, ::UnityEngine::Vector3 s);
  }; // GizmosUtils
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::GizmosUtils::DrawCubeTRS
// Il2CppName: DrawCubeTRS
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::Vector3, ::UnityEngine::Quaternion, ::UnityEngine::Vector3)>(&GlobalNamespace::GizmosUtils::DrawCubeTRS)> {
  static const MethodInfo* get() {
    static auto* t = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* r = &::il2cpp_utils::GetClassFromName("UnityEngine", "Quaternion")->byval_arg;
    static auto* s = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::GizmosUtils*), "DrawCubeTRS", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{t, r, s});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::GizmosUtils::DrawWireCubeTRS
// Il2CppName: DrawWireCubeTRS
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::Vector3, ::UnityEngine::Quaternion, ::UnityEngine::Vector3)>(&GlobalNamespace::GizmosUtils::DrawWireCubeTRS)> {
  static const MethodInfo* get() {
    static auto* t = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* r = &::il2cpp_utils::GetClassFromName("UnityEngine", "Quaternion")->byval_arg;
    static auto* s = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::GizmosUtils*), "DrawWireCubeTRS", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{t, r, s});
  }
};
