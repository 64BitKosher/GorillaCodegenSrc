// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: OVRPlugin
#include "GlobalNamespace/OVRPlugin.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Version
  class Version;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::OVRPlugin::OVRP_1_83_0);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::OVRPlugin::OVRP_1_83_0*, "", "OVRPlugin/OVRP_1_83_0");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: OVRPlugin/OVRP_1_83_0
  // [TokenAttribute] Offset: FFFFFFFF
  class OVRPlugin::OVRP_1_83_0 : public ::Il2CppObject {
    public:
    // Get static field: static public readonly System.Version version
    static ::System::Version* _get_version();
    // Set static field: static public readonly System.Version version
    static void _set_version(::System::Version* value);
    // static public OVRPlugin/Result ovrp_GetControllerState6(System.UInt32 controllerMask, ref OVRPlugin/ControllerState6 controllerState)
    // Offset: 0x4916BA4
    static ::GlobalNamespace::OVRPlugin::Result ovrp_GetControllerState6(uint controllerMask, ByRef<::GlobalNamespace::OVRPlugin::ControllerState6> controllerState);
    // static public OVRPlugin/Result ovrp_GetVirtualKeyboardModelAnimationStates(ref OVRPlugin/VirtualKeyboardModelAnimationStatesInternal animationStates)
    // Offset: 0x4916C28
    static ::GlobalNamespace::OVRPlugin::Result ovrp_GetVirtualKeyboardModelAnimationStates(ByRef<::GlobalNamespace::OVRPlugin::VirtualKeyboardModelAnimationStatesInternal> animationStates);
    // static public OVRPlugin/Result ovrp_GetVirtualKeyboardDirtyTextures(ref OVRPlugin/VirtualKeyboardTextureIdsInternal textureIds)
    // Offset: 0x4916CA4
    static ::GlobalNamespace::OVRPlugin::Result ovrp_GetVirtualKeyboardDirtyTextures(ByRef<::GlobalNamespace::OVRPlugin::VirtualKeyboardTextureIdsInternal> textureIds);
    // static public OVRPlugin/Result ovrp_GetVirtualKeyboardTextureData(System.UInt64 textureId, ref OVRPlugin/VirtualKeyboardTextureData textureData)
    // Offset: 0x4916D20
    static ::GlobalNamespace::OVRPlugin::Result ovrp_GetVirtualKeyboardTextureData(uint64_t textureId, ByRef<::GlobalNamespace::OVRPlugin::VirtualKeyboardTextureData> textureData);
    // static public OVRPlugin/Result ovrp_SetVirtualKeyboardModelVisibility(ref OVRPlugin/VirtualKeyboardModelVisibility visibility)
    // Offset: 0x4916DA4
    static ::GlobalNamespace::OVRPlugin::Result ovrp_SetVirtualKeyboardModelVisibility(ByRef<::GlobalNamespace::OVRPlugin::VirtualKeyboardModelVisibility> visibility);
    // static private System.Void .cctor()
    // Offset: 0x4916E20
    static void _cctor();
  }; // OVRPlugin/OVRP_1_83_0
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::OVRPlugin::OVRP_1_83_0::ovrp_GetControllerState6
// Il2CppName: ovrp_GetControllerState6
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::OVRPlugin::Result (*)(uint, ByRef<::GlobalNamespace::OVRPlugin::ControllerState6>)>(&GlobalNamespace::OVRPlugin::OVRP_1_83_0::ovrp_GetControllerState6)> {
  static const MethodInfo* get() {
    static auto* controllerMask = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    static auto* controllerState = &::il2cpp_utils::GetClassFromName("", "OVRPlugin/ControllerState6")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::OVRPlugin::OVRP_1_83_0*), "ovrp_GetControllerState6", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{controllerMask, controllerState});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::OVRPlugin::OVRP_1_83_0::ovrp_GetVirtualKeyboardModelAnimationStates
// Il2CppName: ovrp_GetVirtualKeyboardModelAnimationStates
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::OVRPlugin::Result (*)(ByRef<::GlobalNamespace::OVRPlugin::VirtualKeyboardModelAnimationStatesInternal>)>(&GlobalNamespace::OVRPlugin::OVRP_1_83_0::ovrp_GetVirtualKeyboardModelAnimationStates)> {
  static const MethodInfo* get() {
    static auto* animationStates = &::il2cpp_utils::GetClassFromName("", "OVRPlugin/VirtualKeyboardModelAnimationStatesInternal")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::OVRPlugin::OVRP_1_83_0*), "ovrp_GetVirtualKeyboardModelAnimationStates", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{animationStates});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::OVRPlugin::OVRP_1_83_0::ovrp_GetVirtualKeyboardDirtyTextures
// Il2CppName: ovrp_GetVirtualKeyboardDirtyTextures
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::OVRPlugin::Result (*)(ByRef<::GlobalNamespace::OVRPlugin::VirtualKeyboardTextureIdsInternal>)>(&GlobalNamespace::OVRPlugin::OVRP_1_83_0::ovrp_GetVirtualKeyboardDirtyTextures)> {
  static const MethodInfo* get() {
    static auto* textureIds = &::il2cpp_utils::GetClassFromName("", "OVRPlugin/VirtualKeyboardTextureIdsInternal")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::OVRPlugin::OVRP_1_83_0*), "ovrp_GetVirtualKeyboardDirtyTextures", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{textureIds});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::OVRPlugin::OVRP_1_83_0::ovrp_GetVirtualKeyboardTextureData
// Il2CppName: ovrp_GetVirtualKeyboardTextureData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::OVRPlugin::Result (*)(uint64_t, ByRef<::GlobalNamespace::OVRPlugin::VirtualKeyboardTextureData>)>(&GlobalNamespace::OVRPlugin::OVRP_1_83_0::ovrp_GetVirtualKeyboardTextureData)> {
  static const MethodInfo* get() {
    static auto* textureId = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    static auto* textureData = &::il2cpp_utils::GetClassFromName("", "OVRPlugin/VirtualKeyboardTextureData")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::OVRPlugin::OVRP_1_83_0*), "ovrp_GetVirtualKeyboardTextureData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{textureId, textureData});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::OVRPlugin::OVRP_1_83_0::ovrp_SetVirtualKeyboardModelVisibility
// Il2CppName: ovrp_SetVirtualKeyboardModelVisibility
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::OVRPlugin::Result (*)(ByRef<::GlobalNamespace::OVRPlugin::VirtualKeyboardModelVisibility>)>(&GlobalNamespace::OVRPlugin::OVRP_1_83_0::ovrp_SetVirtualKeyboardModelVisibility)> {
  static const MethodInfo* get() {
    static auto* visibility = &::il2cpp_utils::GetClassFromName("", "OVRPlugin/VirtualKeyboardModelVisibility")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::OVRPlugin::OVRP_1_83_0*), "ovrp_SetVirtualKeyboardModelVisibility", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{visibility});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::OVRPlugin::OVRP_1_83_0::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&GlobalNamespace::OVRPlugin::OVRP_1_83_0::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::OVRPlugin::OVRP_1_83_0*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
