// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: BasicSceneManager
#include "GlobalNamespace/BasicSceneManager.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: OVRAnchor
  struct OVRAnchor;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: GameObject
  class GameObject;
}
// Forward declaring namespace: System::Threading::Tasks
namespace System::Threading::Tasks {
  // Forward declaring type: Task
  class Task;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::BasicSceneManager::$$c__DisplayClass2_0);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::BasicSceneManager::$$c__DisplayClass2_0*, "", "BasicSceneManager/<>c__DisplayClass2_0");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x18
  #pragma pack(push, 1)
  // Autogenerated type: BasicSceneManager/<>c__DisplayClass2_0
  // [TokenAttribute] Offset: FFFFFFFF
  // [CompilerGeneratedAttribute] Offset: FFFFFFFF
  class BasicSceneManager::$$c__DisplayClass2_0 : public ::Il2CppObject {
    public:
    // Nested type: ::GlobalNamespace::BasicSceneManager::$$c__DisplayClass2_0::$$CreateSceneAnchors$b__0$d
    struct $$CreateSceneAnchors$b__0$d;
    public:
    // public UnityEngine.GameObject roomGameObject
    // Size: 0x8
    // Offset: 0x10
    ::UnityEngine::GameObject* roomGameObject;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    public:
    // Creating conversion operator: operator ::UnityEngine::GameObject*
    constexpr operator ::UnityEngine::GameObject*() const noexcept {
      return roomGameObject;
    }
    // Get instance field reference: public UnityEngine.GameObject roomGameObject
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_roomGameObject();
    // public System.Void .ctor()
    // Offset: 0x293DED4
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static BasicSceneManager::$$c__DisplayClass2_0* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BasicSceneManager::$$c__DisplayClass2_0::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<BasicSceneManager::$$c__DisplayClass2_0*, creationType>()));
    }
    // System.Threading.Tasks.Task <CreateSceneAnchors>b__0(OVRAnchor anchor)
    // Offset: 0x293DEDC
    ::System::Threading::Tasks::Task* $CreateSceneAnchors$b__0(::GlobalNamespace::OVRAnchor anchor);
  }; // BasicSceneManager/<>c__DisplayClass2_0
  #pragma pack(pop)
  static check_size<sizeof(BasicSceneManager::$$c__DisplayClass2_0), 16 + sizeof(::UnityEngine::GameObject*)> __GlobalNamespace_BasicSceneManager_$$c__DisplayClass2_0SizeCheck;
  static_assert(sizeof(BasicSceneManager::$$c__DisplayClass2_0) == 0x18);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::BasicSceneManager::$$c__DisplayClass2_0::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: GlobalNamespace::BasicSceneManager::$$c__DisplayClass2_0::$CreateSceneAnchors$b__0
// Il2CppName: <CreateSceneAnchors>b__0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Threading::Tasks::Task* (GlobalNamespace::BasicSceneManager::$$c__DisplayClass2_0::*)(::GlobalNamespace::OVRAnchor)>(&GlobalNamespace::BasicSceneManager::$$c__DisplayClass2_0::$CreateSceneAnchors$b__0)> {
  static const MethodInfo* get() {
    static auto* anchor = &::il2cpp_utils::GetClassFromName("", "OVRAnchor")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::BasicSceneManager::$$c__DisplayClass2_0*), "<CreateSceneAnchors>b__0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{anchor});
  }
};
