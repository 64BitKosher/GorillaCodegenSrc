// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: OVRScenePlaneMeshFilter/TriangulateBoundaryJob
#include "GlobalNamespace/OVRScenePlaneMeshFilter_TriangulateBoundaryJob.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Including type: System.IDisposable
#include "System/IDisposable.hpp"
// Including type: Unity.Collections.NativeArray`1
#include "Unity/Collections/NativeArray_1.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Unity::Collections
namespace Unity::Collections {
  // Skipping declaration: Allocator because it is already included!
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::OVRScenePlaneMeshFilter::TriangulateBoundaryJob::NList, "", "OVRScenePlaneMeshFilter/TriangulateBoundaryJob/NList");
// Type namespace: 
namespace GlobalNamespace {
  // WARNING Size may be invalid!
  // WARNING Layout: Sequential may not be correctly taken into account!
  // Autogenerated type: OVRScenePlaneMeshFilter/TriangulateBoundaryJob/NList
  // [TokenAttribute] Offset: FFFFFFFF
  // [DefaultMemberAttribute] Offset: FFFFFFFF
  struct OVRScenePlaneMeshFilter::TriangulateBoundaryJob::NList/*, public ::System::ValueType, public ::System::IDisposable*/ {
    public:
    public:
    // private System.Int32 <Count>k__BackingField
    // Size: 0x4
    // Offset: 0x0
    int Count;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private Unity.Collections.NativeArray`1<System.Int32> _data
    // Size: 0xFFFFFFFF
    // Offset: 0x8
    ::Unity::Collections::NativeArray_1<int> data;
    public:
    // Creating value type constructor for type: NList
    constexpr NList(int Count_ = {}, ::Unity::Collections::NativeArray_1<int> data_ = {}) noexcept : Count{Count_}, data{data_} {}
    // Creating interface conversion operator: operator ::System::ValueType
    operator ::System::ValueType() noexcept {
      return *reinterpret_cast<::System::ValueType*>(this);
    }
    // Creating interface conversion operator: operator ::System::IDisposable
    operator ::System::IDisposable() noexcept {
      return *reinterpret_cast<::System::IDisposable*>(this);
    }
    // Get instance field reference: private System.Int32 <Count>k__BackingField
    [[deprecated("Use field access instead!")]] int& dyn_$Count$k__BackingField();
    // Get instance field reference: private Unity.Collections.NativeArray`1<System.Int32> _data
    [[deprecated("Use field access instead!")]] ::Unity::Collections::NativeArray_1<int>& dyn__data();
    // public System.Int32 get_Count()
    // Offset: 0x4925220
    int get_Count();
    // private System.Void set_Count(System.Int32 value)
    // Offset: 0x4925228
    void set_Count(int value);
    // public System.Void .ctor(System.Int32 capacity, Unity.Collections.Allocator allocator)
    // Offset: 0x4925034
    NList(int capacity, ::Unity::Collections::Allocator allocator);
    // public System.Void RemoveAt(System.Int32 index)
    // Offset: 0x49251E4
    void RemoveAt(int index);
    // public System.Int32 GetAt(System.Int32 index)
    // Offset: 0x49250E8
    int GetAt(int index);
    // public System.Int32 get_Item(System.Int32 index)
    // Offset: 0x49250DC
    int get_Item(int index);
    // public System.Void Dispose()
    // Offset: 0x4925230
    void Dispose();
  }; // OVRScenePlaneMeshFilter/TriangulateBoundaryJob/NList
  // WARNING Not writing size check since size may be invalid!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::OVRScenePlaneMeshFilter::TriangulateBoundaryJob::NList::get_Count
// Il2CppName: get_Count
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (GlobalNamespace::OVRScenePlaneMeshFilter::TriangulateBoundaryJob::NList::*)()>(&GlobalNamespace::OVRScenePlaneMeshFilter::TriangulateBoundaryJob::NList::get_Count)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::OVRScenePlaneMeshFilter::TriangulateBoundaryJob::NList), "get_Count", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::OVRScenePlaneMeshFilter::TriangulateBoundaryJob::NList::set_Count
// Il2CppName: set_Count
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::OVRScenePlaneMeshFilter::TriangulateBoundaryJob::NList::*)(int)>(&GlobalNamespace::OVRScenePlaneMeshFilter::TriangulateBoundaryJob::NList::set_Count)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::OVRScenePlaneMeshFilter::TriangulateBoundaryJob::NList), "set_Count", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::OVRScenePlaneMeshFilter::TriangulateBoundaryJob::NList::NList
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: GlobalNamespace::OVRScenePlaneMeshFilter::TriangulateBoundaryJob::NList::RemoveAt
// Il2CppName: RemoveAt
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::OVRScenePlaneMeshFilter::TriangulateBoundaryJob::NList::*)(int)>(&GlobalNamespace::OVRScenePlaneMeshFilter::TriangulateBoundaryJob::NList::RemoveAt)> {
  static const MethodInfo* get() {
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::OVRScenePlaneMeshFilter::TriangulateBoundaryJob::NList), "RemoveAt", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{index});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::OVRScenePlaneMeshFilter::TriangulateBoundaryJob::NList::GetAt
// Il2CppName: GetAt
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (GlobalNamespace::OVRScenePlaneMeshFilter::TriangulateBoundaryJob::NList::*)(int)>(&GlobalNamespace::OVRScenePlaneMeshFilter::TriangulateBoundaryJob::NList::GetAt)> {
  static const MethodInfo* get() {
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::OVRScenePlaneMeshFilter::TriangulateBoundaryJob::NList), "GetAt", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{index});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::OVRScenePlaneMeshFilter::TriangulateBoundaryJob::NList::get_Item
// Il2CppName: get_Item
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (GlobalNamespace::OVRScenePlaneMeshFilter::TriangulateBoundaryJob::NList::*)(int)>(&GlobalNamespace::OVRScenePlaneMeshFilter::TriangulateBoundaryJob::NList::get_Item)> {
  static const MethodInfo* get() {
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::OVRScenePlaneMeshFilter::TriangulateBoundaryJob::NList), "get_Item", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{index});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::OVRScenePlaneMeshFilter::TriangulateBoundaryJob::NList::Dispose
// Il2CppName: Dispose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::OVRScenePlaneMeshFilter::TriangulateBoundaryJob::NList::*)()>(&GlobalNamespace::OVRScenePlaneMeshFilter::TriangulateBoundaryJob::NList::Dispose)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::OVRScenePlaneMeshFilter::TriangulateBoundaryJob::NList), "Dispose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
