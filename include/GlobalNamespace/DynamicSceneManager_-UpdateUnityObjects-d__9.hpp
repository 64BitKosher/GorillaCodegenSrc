// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: DynamicSceneManager
#include "GlobalNamespace/DynamicSceneManager.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Including type: System.Runtime.CompilerServices.IAsyncStateMachine
#include "System/Runtime/CompilerServices/IAsyncStateMachine.hpp"
// Including type: System.Runtime.CompilerServices.AsyncTaskMethodBuilder
#include "System/Runtime/CompilerServices/AsyncTaskMethodBuilder.hpp"
// Including type: System.ValueTuple`2
#include "System/ValueTuple_2.hpp"
// Including type: OVRAnchor
#include "GlobalNamespace/OVRAnchor.hpp"
// Including type: DynamicSceneManagerHelper.SnapshotComparer/ChangeType
#include "DynamicSceneManagerHelper/SnapshotComparer.hpp"
// Including type: System.Collections.Generic.List`1/Enumerator
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Runtime.CompilerServices.TaskAwaiter`1
#include "System/Runtime/CompilerServices/TaskAwaiter_1.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Skipping declaration: List`1 because it is already included!
  // Forward declaring type: Dictionary`2<TKey, TValue>
  template<typename TKey, typename TValue>
  class Dictionary_2;
}
// Forward declaring namespace: DynamicSceneManagerHelper
namespace DynamicSceneManagerHelper {
  // Forward declaring type: SceneSnapshot
  class SceneSnapshot;
  // Forward declaring type: UnityObjectUpdater
  class UnityObjectUpdater;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: GameObject
  class GameObject;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::DynamicSceneManager::$UpdateUnityObjects$d__9, "", "DynamicSceneManager/<UpdateUnityObjects>d__9");
// Type namespace: 
namespace GlobalNamespace {
  // WARNING Size may be invalid!
  // Autogenerated type: DynamicSceneManager/<UpdateUnityObjects>d__9
  // [TokenAttribute] Offset: FFFFFFFF
  // [CompilerGeneratedAttribute] Offset: FFFFFFFF
  struct DynamicSceneManager::$UpdateUnityObjects$d__9/*, public ::System::ValueType, public ::System::Runtime::CompilerServices::IAsyncStateMachine*/ {
    public:
    public:
    // public System.Int32 <>1__state
    // Size: 0x4
    // Offset: 0x0
    int $$1__state;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // public System.Runtime.CompilerServices.AsyncTaskMethodBuilder <>t__builder
    // Size: 0xFFFFFFFF
    // Offset: 0x8
    ::System::Runtime::CompilerServices::AsyncTaskMethodBuilder $$t__builder;
    // public System.Collections.Generic.List`1<System.ValueTuple`2<OVRAnchor,DynamicSceneManagerHelper.SnapshotComparer/ChangeType>> changes
    // Size: 0x8
    // Offset: 0x20
    ::System::Collections::Generic::List_1<::System::ValueTuple_2<::GlobalNamespace::OVRAnchor, ::DynamicSceneManagerHelper::SnapshotComparer::ChangeType>>* changes;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::System::ValueTuple_2<::GlobalNamespace::OVRAnchor, ::DynamicSceneManagerHelper::SnapshotComparer::ChangeType>>*) == 0x8);
    // public DynamicSceneManager <>4__this
    // Size: 0x8
    // Offset: 0x28
    ::GlobalNamespace::DynamicSceneManager* $$4__this;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::DynamicSceneManager*) == 0x8);
    // public DynamicSceneManagerHelper.SceneSnapshot newSnapshot
    // Size: 0x8
    // Offset: 0x30
    ::DynamicSceneManagerHelper::SceneSnapshot* newSnapshot;
    // Field size check
    static_assert(sizeof(::DynamicSceneManagerHelper::SceneSnapshot*) == 0x8);
    // private DynamicSceneManagerHelper.UnityObjectUpdater <updater>5__2
    // Size: 0x8
    // Offset: 0x38
    ::DynamicSceneManagerHelper::UnityObjectUpdater* $updater$5__2;
    // Field size check
    static_assert(sizeof(::DynamicSceneManagerHelper::UnityObjectUpdater*) == 0x8);
    // private System.Collections.Generic.List`1<OVRAnchor> <changesMissing>5__3
    // Size: 0x8
    // Offset: 0x40
    ::System::Collections::Generic::List_1<::GlobalNamespace::OVRAnchor>* $changesMissing$5__3;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::GlobalNamespace::OVRAnchor>*) == 0x8);
    // private System.Collections.Generic.List`1<OVRAnchor> <changesId>5__4
    // Size: 0x8
    // Offset: 0x48
    ::System::Collections::Generic::List_1<::GlobalNamespace::OVRAnchor>* $changesId$5__4;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::GlobalNamespace::OVRAnchor>*) == 0x8);
    // private System.Collections.Generic.List`1<OVRAnchor> <changesBounds>5__5
    // Size: 0x8
    // Offset: 0x50
    ::System::Collections::Generic::List_1<::GlobalNamespace::OVRAnchor>* $changesBounds$5__5;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::GlobalNamespace::OVRAnchor>*) == 0x8);
    // private System.Collections.Generic.List`1/Enumerator<OVRAnchor> <>7__wrap5
    // Size: 0xFFFFFFFF
    // Offset: 0x58
    typename ::System::Collections::Generic::List_1<::GlobalNamespace::OVRAnchor>::Enumerator $$7__wrap5;
    // private System.Collections.Generic.Dictionary`2<OVRAnchor,UnityEngine.GameObject> <>7__wrap6
    // Size: 0x8
    // Offset: 0x80
    ::System::Collections::Generic::Dictionary_2<::GlobalNamespace::OVRAnchor, ::UnityEngine::GameObject*>* $$7__wrap6;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::Dictionary_2<::GlobalNamespace::OVRAnchor, ::UnityEngine::GameObject*>*) == 0x8);
    // private OVRAnchor <>7__wrap7
    // Size: 0x18
    // Offset: 0x88
    ::GlobalNamespace::OVRAnchor $$7__wrap7;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::OVRAnchor) == 0x18);
    // private System.Runtime.CompilerServices.TaskAwaiter`1<UnityEngine.GameObject> <>u__1
    // Size: 0xFFFFFFFF
    // Offset: 0xA0
    ::System::Runtime::CompilerServices::TaskAwaiter_1<::UnityEngine::GameObject*> $$u__1;
    public:
    // Creating value type constructor for type: $UpdateUnityObjects$d__9
    constexpr $UpdateUnityObjects$d__9(int $$1__state_ = {}, ::System::Runtime::CompilerServices::AsyncTaskMethodBuilder $$t__builder_ = {}, ::System::Collections::Generic::List_1<::System::ValueTuple_2<::GlobalNamespace::OVRAnchor, ::DynamicSceneManagerHelper::SnapshotComparer::ChangeType>>* changes_ = {}, ::GlobalNamespace::DynamicSceneManager* $$4__this_ = {}, ::DynamicSceneManagerHelper::SceneSnapshot* newSnapshot_ = {}, ::DynamicSceneManagerHelper::UnityObjectUpdater* $updater$5__2_ = {}, ::System::Collections::Generic::List_1<::GlobalNamespace::OVRAnchor>* $changesMissing$5__3_ = {}, ::System::Collections::Generic::List_1<::GlobalNamespace::OVRAnchor>* $changesId$5__4_ = {}, ::System::Collections::Generic::List_1<::GlobalNamespace::OVRAnchor>* $changesBounds$5__5_ = {}, typename ::System::Collections::Generic::List_1<::GlobalNamespace::OVRAnchor>::Enumerator $$7__wrap5_ = {}, ::System::Collections::Generic::Dictionary_2<::GlobalNamespace::OVRAnchor, ::UnityEngine::GameObject*>* $$7__wrap6_ = {}, ::GlobalNamespace::OVRAnchor $$7__wrap7_ = {}, ::System::Runtime::CompilerServices::TaskAwaiter_1<::UnityEngine::GameObject*> $$u__1_ = {}) noexcept : $$1__state{$$1__state_}, $$t__builder{$$t__builder_}, changes{changes_}, $$4__this{$$4__this_}, newSnapshot{newSnapshot_}, $updater$5__2{$updater$5__2_}, $changesMissing$5__3{$changesMissing$5__3_}, $changesId$5__4{$changesId$5__4_}, $changesBounds$5__5{$changesBounds$5__5_}, $$7__wrap5{$$7__wrap5_}, $$7__wrap6{$$7__wrap6_}, $$7__wrap7{$$7__wrap7_}, $$u__1{$$u__1_} {}
    // Creating interface conversion operator: operator ::System::ValueType
    operator ::System::ValueType() noexcept {
      return *reinterpret_cast<::System::ValueType*>(this);
    }
    // Creating interface conversion operator: operator ::System::Runtime::CompilerServices::IAsyncStateMachine
    operator ::System::Runtime::CompilerServices::IAsyncStateMachine() noexcept {
      return *reinterpret_cast<::System::Runtime::CompilerServices::IAsyncStateMachine*>(this);
    }
    // Get instance field reference: public System.Int32 <>1__state
    [[deprecated("Use field access instead!")]] int& dyn_$$1__state();
    // Get instance field reference: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder <>t__builder
    [[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncTaskMethodBuilder& dyn_$$t__builder();
    // Get instance field reference: public System.Collections.Generic.List`1<System.ValueTuple`2<OVRAnchor,DynamicSceneManagerHelper.SnapshotComparer/ChangeType>> changes
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::System::ValueTuple_2<::GlobalNamespace::OVRAnchor, ::DynamicSceneManagerHelper::SnapshotComparer::ChangeType>>*& dyn_changes();
    // Get instance field reference: public DynamicSceneManager <>4__this
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::DynamicSceneManager*& dyn_$$4__this();
    // Get instance field reference: public DynamicSceneManagerHelper.SceneSnapshot newSnapshot
    [[deprecated("Use field access instead!")]] ::DynamicSceneManagerHelper::SceneSnapshot*& dyn_newSnapshot();
    // Get instance field reference: private DynamicSceneManagerHelper.UnityObjectUpdater <updater>5__2
    [[deprecated("Use field access instead!")]] ::DynamicSceneManagerHelper::UnityObjectUpdater*& dyn_$updater$5__2();
    // Get instance field reference: private System.Collections.Generic.List`1<OVRAnchor> <changesMissing>5__3
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GlobalNamespace::OVRAnchor>*& dyn_$changesMissing$5__3();
    // Get instance field reference: private System.Collections.Generic.List`1<OVRAnchor> <changesId>5__4
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GlobalNamespace::OVRAnchor>*& dyn_$changesId$5__4();
    // Get instance field reference: private System.Collections.Generic.List`1<OVRAnchor> <changesBounds>5__5
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GlobalNamespace::OVRAnchor>*& dyn_$changesBounds$5__5();
    // Get instance field reference: private System.Collections.Generic.List`1/Enumerator<OVRAnchor> <>7__wrap5
    [[deprecated("Use field access instead!")]] typename ::System::Collections::Generic::List_1<::GlobalNamespace::OVRAnchor>::Enumerator& dyn_$$7__wrap5();
    // Get instance field reference: private System.Collections.Generic.Dictionary`2<OVRAnchor,UnityEngine.GameObject> <>7__wrap6
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::GlobalNamespace::OVRAnchor, ::UnityEngine::GameObject*>*& dyn_$$7__wrap6();
    // Get instance field reference: private OVRAnchor <>7__wrap7
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRAnchor& dyn_$$7__wrap7();
    // Get instance field reference: private System.Runtime.CompilerServices.TaskAwaiter`1<UnityEngine.GameObject> <>u__1
    [[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter_1<::UnityEngine::GameObject*>& dyn_$$u__1();
    // private System.Void MoveNext()
    // Offset: 0x2940EC0
    void MoveNext();
    // private System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)
    // Offset: 0x2941A90
    void SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine);
  }; // DynamicSceneManager/<UpdateUnityObjects>d__9
  // WARNING Not writing size check since size may be invalid!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::DynamicSceneManager::$UpdateUnityObjects$d__9::MoveNext
// Il2CppName: MoveNext
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::DynamicSceneManager::$UpdateUnityObjects$d__9::*)()>(&GlobalNamespace::DynamicSceneManager::$UpdateUnityObjects$d__9::MoveNext)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::DynamicSceneManager::$UpdateUnityObjects$d__9), "MoveNext", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::DynamicSceneManager::$UpdateUnityObjects$d__9::SetStateMachine
// Il2CppName: SetStateMachine
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::DynamicSceneManager::$UpdateUnityObjects$d__9::*)(::System::Runtime::CompilerServices::IAsyncStateMachine*)>(&GlobalNamespace::DynamicSceneManager::$UpdateUnityObjects$d__9::SetStateMachine)> {
  static const MethodInfo* get() {
    static auto* stateMachine = &::il2cpp_utils::GetClassFromName("System.Runtime.CompilerServices", "IAsyncStateMachine")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::DynamicSceneManager::$UpdateUnityObjects$d__9), "SetStateMachine", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stateMachine});
  }
};
