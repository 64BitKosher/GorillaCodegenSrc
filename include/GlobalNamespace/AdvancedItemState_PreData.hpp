// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: AdvancedItemState
#include "GlobalNamespace/AdvancedItemState.hpp"
// Including type: AdvancedItemState/PointType
#include "GlobalNamespace/AdvancedItemState_PointType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::AdvancedItemState::PreData);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::AdvancedItemState::PreData*, "", "AdvancedItemState/PreData");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x18
  #pragma pack(push, 1)
  // Autogenerated type: AdvancedItemState/PreData
  // [TokenAttribute] Offset: FFFFFFFF
  class AdvancedItemState::PreData : public ::Il2CppObject {
    public:
    public:
    // public System.Single distAlongLine
    // Size: 0x4
    // Offset: 0x10
    float distAlongLine;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // public AdvancedItemState/PointType pointType
    // Size: 0x4
    // Offset: 0x14
    ::GlobalNamespace::AdvancedItemState::PointType pointType;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::AdvancedItemState::PointType) == 0x4);
    public:
    // Get instance field reference: public System.Single distAlongLine
    [[deprecated("Use field access instead!")]] float& dyn_distAlongLine();
    // Get instance field reference: public AdvancedItemState/PointType pointType
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::AdvancedItemState::PointType& dyn_pointType();
    // public System.Void .ctor()
    // Offset: 0x26C1BCC
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static AdvancedItemState::PreData* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AdvancedItemState::PreData::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<AdvancedItemState::PreData*, creationType>()));
    }
  }; // AdvancedItemState/PreData
  #pragma pack(pop)
  static check_size<sizeof(AdvancedItemState::PreData), 20 + sizeof(::GlobalNamespace::AdvancedItemState::PointType)> __GlobalNamespace_AdvancedItemState_PreDataSizeCheck;
  static_assert(sizeof(AdvancedItemState::PreData) == 0x18);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::AdvancedItemState::PreData::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
