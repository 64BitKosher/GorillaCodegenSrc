// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: OVRSceneManager
  class OVRSceneManager;
}
// Forward declaring namespace: System::Collections
namespace System::Collections {
  // Forward declaring type: IEnumerator
  class IEnumerator;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Forward declaring type: OVRSceneModelLoader
  class OVRSceneModelLoader;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::OVRSceneModelLoader);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::OVRSceneModelLoader*, "", "OVRSceneModelLoader");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x29
  #pragma pack(push, 1)
  // Autogenerated type: OVRSceneModelLoader
  // [TokenAttribute] Offset: FFFFFFFF
  // [HelpURLAttribute] Offset: FFFFFFFF
  // [RequireComponent] Offset: FFFFFFFF
  class OVRSceneModelLoader : public ::UnityEngine::MonoBehaviour {
    public:
    // Nested type: ::GlobalNamespace::OVRSceneModelLoader::$AttemptToLoadSceneModel$d__7
    class $AttemptToLoadSceneModel$d__7;
    public:
    // private OVRSceneManager <SceneManager>k__BackingField
    // Size: 0x8
    // Offset: 0x20
    ::GlobalNamespace::OVRSceneManager* SceneManager;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::OVRSceneManager*) == 0x8);
    // private System.Boolean _sceneCaptureRequested
    // Size: 0x1
    // Offset: 0x28
    bool sceneCaptureRequested;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    public:
    // static field const value: static private System.Single RetryingReminderDelay
    static constexpr const float RetryingReminderDelay = 10;
    // Get static field: static private System.Single RetryingReminderDelay
    static float _get_RetryingReminderDelay();
    // Set static field: static private System.Single RetryingReminderDelay
    static void _set_RetryingReminderDelay(float value);
    // Get instance field reference: private OVRSceneManager <SceneManager>k__BackingField
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRSceneManager*& dyn_$SceneManager$k__BackingField();
    // Get instance field reference: private System.Boolean _sceneCaptureRequested
    [[deprecated("Use field access instead!")]] bool& dyn__sceneCaptureRequested();
    // protected OVRSceneManager get_SceneManager()
    // Offset: 0x492254C
    ::GlobalNamespace::OVRSceneManager* get_SceneManager();
    // private System.Void set_SceneManager(OVRSceneManager value)
    // Offset: 0x4922554
    void set_SceneManager(::GlobalNamespace::OVRSceneManager* value);
    // private System.Void Start()
    // Offset: 0x492255C
    void Start();
    // private System.Collections.IEnumerator AttemptToLoadSceneModel()
    // Offset: 0x492284C
    ::System::Collections::IEnumerator* AttemptToLoadSceneModel();
    // protected System.Void OnStart()
    // Offset: 0x49228E0
    void OnStart();
    // private System.Void LoadSceneModel()
    // Offset: 0x49228E4
    void LoadSceneModel();
    // protected System.Void OnSceneModelLoadedSuccessfully()
    // Offset: 0x49229D8
    void OnSceneModelLoadedSuccessfully();
    // protected System.Void OnNoSceneModelToLoad()
    // Offset: 0x4922A74
    void OnNoSceneModelToLoad();
    // protected System.Void OnNewSceneModelAvailable()
    // Offset: 0x4922B5C
    void OnNewSceneModelAvailable();
    // protected System.Void OnSceneCaptureReturnedWithoutError()
    // Offset: 0x4922BF8
    void OnSceneCaptureReturnedWithoutError();
    // protected System.Void OnUnexpectedErrorWithSceneCapture()
    // Offset: 0x4922C94
    void OnUnexpectedErrorWithSceneCapture();
    // public System.Void .ctor()
    // Offset: 0x4922D30
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static OVRSceneModelLoader* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneModelLoader::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<OVRSceneModelLoader*, creationType>()));
    }
  }; // OVRSceneModelLoader
  #pragma pack(pop)
  static check_size<sizeof(OVRSceneModelLoader), 40 + sizeof(bool)> __GlobalNamespace_OVRSceneModelLoaderSizeCheck;
  static_assert(sizeof(OVRSceneModelLoader) == 0x29);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::OVRSceneModelLoader::get_SceneManager
// Il2CppName: get_SceneManager
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::OVRSceneManager* (GlobalNamespace::OVRSceneModelLoader::*)()>(&GlobalNamespace::OVRSceneModelLoader::get_SceneManager)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::OVRSceneModelLoader*), "get_SceneManager", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::OVRSceneModelLoader::set_SceneManager
// Il2CppName: set_SceneManager
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::OVRSceneModelLoader::*)(::GlobalNamespace::OVRSceneManager*)>(&GlobalNamespace::OVRSceneModelLoader::set_SceneManager)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("", "OVRSceneManager")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::OVRSceneModelLoader*), "set_SceneManager", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::OVRSceneModelLoader::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::OVRSceneModelLoader::*)()>(&GlobalNamespace::OVRSceneModelLoader::Start)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::OVRSceneModelLoader*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::OVRSceneModelLoader::AttemptToLoadSceneModel
// Il2CppName: AttemptToLoadSceneModel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::IEnumerator* (GlobalNamespace::OVRSceneModelLoader::*)()>(&GlobalNamespace::OVRSceneModelLoader::AttemptToLoadSceneModel)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::OVRSceneModelLoader*), "AttemptToLoadSceneModel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::OVRSceneModelLoader::OnStart
// Il2CppName: OnStart
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::OVRSceneModelLoader::*)()>(&GlobalNamespace::OVRSceneModelLoader::OnStart)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::OVRSceneModelLoader*), "OnStart", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::OVRSceneModelLoader::LoadSceneModel
// Il2CppName: LoadSceneModel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::OVRSceneModelLoader::*)()>(&GlobalNamespace::OVRSceneModelLoader::LoadSceneModel)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::OVRSceneModelLoader*), "LoadSceneModel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::OVRSceneModelLoader::OnSceneModelLoadedSuccessfully
// Il2CppName: OnSceneModelLoadedSuccessfully
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::OVRSceneModelLoader::*)()>(&GlobalNamespace::OVRSceneModelLoader::OnSceneModelLoadedSuccessfully)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::OVRSceneModelLoader*), "OnSceneModelLoadedSuccessfully", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::OVRSceneModelLoader::OnNoSceneModelToLoad
// Il2CppName: OnNoSceneModelToLoad
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::OVRSceneModelLoader::*)()>(&GlobalNamespace::OVRSceneModelLoader::OnNoSceneModelToLoad)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::OVRSceneModelLoader*), "OnNoSceneModelToLoad", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::OVRSceneModelLoader::OnNewSceneModelAvailable
// Il2CppName: OnNewSceneModelAvailable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::OVRSceneModelLoader::*)()>(&GlobalNamespace::OVRSceneModelLoader::OnNewSceneModelAvailable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::OVRSceneModelLoader*), "OnNewSceneModelAvailable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::OVRSceneModelLoader::OnSceneCaptureReturnedWithoutError
// Il2CppName: OnSceneCaptureReturnedWithoutError
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::OVRSceneModelLoader::*)()>(&GlobalNamespace::OVRSceneModelLoader::OnSceneCaptureReturnedWithoutError)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::OVRSceneModelLoader*), "OnSceneCaptureReturnedWithoutError", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::OVRSceneModelLoader::OnUnexpectedErrorWithSceneCapture
// Il2CppName: OnUnexpectedErrorWithSceneCapture
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::OVRSceneModelLoader::*)()>(&GlobalNamespace::OVRSceneModelLoader::OnUnexpectedErrorWithSceneCapture)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::OVRSceneModelLoader*), "OnUnexpectedErrorWithSceneCapture", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::OVRSceneModelLoader::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
