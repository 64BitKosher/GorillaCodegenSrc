// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: NetworkSystem
#include "GlobalNamespace/NetworkSystem.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Type namespace: 
namespace GlobalNamespace {
  // Forward declaring type: StaticRPCEntry
  class StaticRPCEntry;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::StaticRPCEntry);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::StaticRPCEntry*, "", "StaticRPCEntry");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x28
  #pragma pack(push, 1)
  // Autogenerated type: StaticRPCEntry
  // [TokenAttribute] Offset: FFFFFFFF
  class StaticRPCEntry : public ::Il2CppObject {
    public:
    public:
    // public NetworkSystem/StaticRPCPlaceholder placeholder
    // Size: 0x8
    // Offset: 0x10
    ::GlobalNamespace::NetworkSystem::StaticRPCPlaceholder* placeholder;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::NetworkSystem::StaticRPCPlaceholder*) == 0x8);
    // public System.Byte code
    // Size: 0x1
    // Offset: 0x18
    uint8_t code;
    // Field size check
    static_assert(sizeof(uint8_t) == 0x1);
    // Padding between fields: code and: lookupMethod
    char __padding1[0x7] = {};
    // public NetworkSystem/StaticRPC lookupMethod
    // Size: 0x8
    // Offset: 0x20
    ::GlobalNamespace::NetworkSystem::StaticRPC* lookupMethod;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::NetworkSystem::StaticRPC*) == 0x8);
    public:
    // Get instance field reference: public NetworkSystem/StaticRPCPlaceholder placeholder
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::NetworkSystem::StaticRPCPlaceholder*& dyn_placeholder();
    // Get instance field reference: public System.Byte code
    [[deprecated("Use field access instead!")]] uint8_t& dyn_code();
    // Get instance field reference: public NetworkSystem/StaticRPC lookupMethod
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::NetworkSystem::StaticRPC*& dyn_lookupMethod();
    // public System.Void .ctor(NetworkSystem/StaticRPCPlaceholder placeholder, System.Byte code, NetworkSystem/StaticRPC lookupMethod)
    // Offset: 0x291B738
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static StaticRPCEntry* New_ctor(::GlobalNamespace::NetworkSystem::StaticRPCPlaceholder* placeholder, uint8_t code, ::GlobalNamespace::NetworkSystem::StaticRPC* lookupMethod) {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StaticRPCEntry::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<StaticRPCEntry*, creationType>(placeholder, code, lookupMethod)));
    }
  }; // StaticRPCEntry
  #pragma pack(pop)
  static check_size<sizeof(StaticRPCEntry), 32 + sizeof(::GlobalNamespace::NetworkSystem::StaticRPC*)> __GlobalNamespace_StaticRPCEntrySizeCheck;
  static_assert(sizeof(StaticRPCEntry) == 0x28);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::StaticRPCEntry::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
