// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.ScriptableObject
#include "UnityEngine/ScriptableObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Type namespace: 
namespace GlobalNamespace {
  // Forward declaring type: MothershipSharedSettings
  class MothershipSharedSettings;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::MothershipSharedSettings);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::MothershipSharedSettings*, "", "MothershipSharedSettings");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x41
  #pragma pack(push, 1)
  // Autogenerated type: MothershipSharedSettings
  // [TokenAttribute] Offset: FFFFFFFF
  class MothershipSharedSettings : public ::UnityEngine::ScriptableObject {
    public:
    public:
    // public System.String TitleId
    // Size: 0x8
    // Offset: 0x18
    ::StringW TitleId;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public System.String EnvironmentId
    // Size: 0x8
    // Offset: 0x20
    ::StringW EnvironmentId;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public System.String DeploymentId
    // Size: 0x8
    // Offset: 0x28
    ::StringW DeploymentId;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public System.String BaseUrl
    // Size: 0x8
    // Offset: 0x30
    ::StringW BaseUrl;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public System.String ServerApiKey
    // Size: 0x8
    // Offset: 0x38
    ::StringW ServerApiKey;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public System.Boolean Enabled
    // Size: 0x1
    // Offset: 0x40
    bool Enabled;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: public System.String TitleId
    [[deprecated("Use field access instead!")]] ::StringW& dyn_TitleId();
    // Get instance field reference: public System.String EnvironmentId
    [[deprecated("Use field access instead!")]] ::StringW& dyn_EnvironmentId();
    // Get instance field reference: public System.String DeploymentId
    [[deprecated("Use field access instead!")]] ::StringW& dyn_DeploymentId();
    // Get instance field reference: public System.String BaseUrl
    [[deprecated("Use field access instead!")]] ::StringW& dyn_BaseUrl();
    // Get instance field reference: public System.String ServerApiKey
    [[deprecated("Use field access instead!")]] ::StringW& dyn_ServerApiKey();
    // Get instance field reference: public System.Boolean Enabled
    [[deprecated("Use field access instead!")]] bool& dyn_Enabled();
    // public System.Void .ctor()
    // Offset: 0x267E918
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static MothershipSharedSettings* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipSharedSettings::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<MothershipSharedSettings*, creationType>()));
    }
  }; // MothershipSharedSettings
  #pragma pack(pop)
  static check_size<sizeof(MothershipSharedSettings), 64 + sizeof(bool)> __GlobalNamespace_MothershipSharedSettingsSizeCheck;
  static_assert(sizeof(MothershipSharedSettings) == 0x41);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::MothershipSharedSettings::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
