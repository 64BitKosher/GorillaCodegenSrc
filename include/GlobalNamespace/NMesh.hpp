// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: Dictionary`2<TKey, TValue>
  template<typename TKey, typename TValue>
  class Dictionary_2;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: GameObject
  class GameObject;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Forward declaring type: NMesh
  class NMesh;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::NMesh);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::NMesh*, "", "NMesh");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: NMesh
  // [TokenAttribute] Offset: FFFFFFFF
  class NMesh : public ::Il2CppObject {
    public:
    // Get static field: static private System.Collections.Generic.Dictionary`2<System.String,UnityEngine.GameObject> __Meshes
    static ::System::Collections::Generic::Dictionary_2<::StringW, ::UnityEngine::GameObject*>* _get___Meshes();
    // Set static field: static private System.Collections.Generic.Dictionary`2<System.String,UnityEngine.GameObject> __Meshes
    static void _set___Meshes(::System::Collections::Generic::Dictionary_2<::StringW, ::UnityEngine::GameObject*>* value);
    // Get static field: static private System.Boolean __initialized
    static bool _get___initialized();
    // Set static field: static private System.Boolean __initialized
    static void _set___initialized(bool value);
    // Get static field: static private UnityEngine.GameObject __root
    static ::UnityEngine::GameObject* _get___root();
    // Set static field: static private UnityEngine.GameObject __root
    static void _set___root(::UnityEngine::GameObject* value);
    // static public System.Void Add(UnityEngine.GameObject go)
    // Offset: 0x272E9B0
    static void Add(::UnityEngine::GameObject* go);
    // static private System.Void init()
    // Offset: 0x272F024
    static void init();
    // public System.Void .ctor()
    // Offset: 0x272F220
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static NMesh* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NMesh::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<NMesh*, creationType>()));
    }
  }; // NMesh
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::NMesh::Add
// Il2CppName: Add
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::GameObject*)>(&GlobalNamespace::NMesh::Add)> {
  static const MethodInfo* get() {
    static auto* go = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NMesh*), "Add", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{go});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NMesh::init
// Il2CppName: init
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&GlobalNamespace::NMesh::init)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NMesh*), "init", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NMesh::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
