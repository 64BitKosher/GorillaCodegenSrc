// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: NetPlayer
  class NetPlayer;
  // Forward declaring type: GorillaPlayerScoreboardLine
  class GorillaPlayerScoreboardLine;
  // Forward declaring type: GorillaScoreBoard
  class GorillaScoreBoard;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
  // Forward declaring type: Dictionary`2<TKey, TValue>
  template<typename TKey, typename TValue>
  class Dictionary_2;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Forward declaring type: GorillaScoreboardTotalUpdater
  class GorillaScoreboardTotalUpdater;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::GorillaScoreboardTotalUpdater);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::GorillaScoreboardTotalUpdater*, "", "GorillaScoreboardTotalUpdater");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x40
  #pragma pack(push, 1)
  // Autogenerated type: GorillaScoreboardTotalUpdater
  // [TokenAttribute] Offset: FFFFFFFF
  class GorillaScoreboardTotalUpdater : public ::UnityEngine::MonoBehaviour {
    public:
    // Nested type: ::GlobalNamespace::GorillaScoreboardTotalUpdater::PlayerReports
    struct PlayerReports;
    // Nested type: ::GlobalNamespace::GorillaScoreboardTotalUpdater::$$c
    class $$c;
    // Size: 0x4
    #pragma pack(push, 1)
    // WARNING Layout: Sequential may not be correctly taken into account!
    // Autogenerated type: GorillaScoreboardTotalUpdater/PlayerReports
    // [TokenAttribute] Offset: FFFFFFFF
    struct PlayerReports/*, public ::System::ValueType*/ {
      public:
      public:
      // public System.Boolean cheating
      // Size: 0x1
      // Offset: 0x0
      bool cheating;
      // Field size check
      static_assert(sizeof(bool) == 0x1);
      // public System.Boolean toxicity
      // Size: 0x1
      // Offset: 0x1
      bool toxicity;
      // Field size check
      static_assert(sizeof(bool) == 0x1);
      // public System.Boolean hateSpeech
      // Size: 0x1
      // Offset: 0x2
      bool hateSpeech;
      // Field size check
      static_assert(sizeof(bool) == 0x1);
      // public System.Boolean pressedReport
      // Size: 0x1
      // Offset: 0x3
      bool pressedReport;
      // Field size check
      static_assert(sizeof(bool) == 0x1);
      public:
      // Creating value type constructor for type: PlayerReports
      constexpr PlayerReports(bool cheating_ = {}, bool toxicity_ = {}, bool hateSpeech_ = {}, bool pressedReport_ = {}) noexcept : cheating{cheating_}, toxicity{toxicity_}, hateSpeech{hateSpeech_}, pressedReport{pressedReport_} {}
      // Creating interface conversion operator: operator ::System::ValueType
      operator ::System::ValueType() noexcept {
        return *reinterpret_cast<::System::ValueType*>(this);
      }
      // Get instance field reference: public System.Boolean cheating
      [[deprecated("Use field access instead!")]] bool& dyn_cheating();
      // Get instance field reference: public System.Boolean toxicity
      [[deprecated("Use field access instead!")]] bool& dyn_toxicity();
      // Get instance field reference: public System.Boolean hateSpeech
      [[deprecated("Use field access instead!")]] bool& dyn_hateSpeech();
      // Get instance field reference: public System.Boolean pressedReport
      [[deprecated("Use field access instead!")]] bool& dyn_pressedReport();
      // public System.Void .ctor(GorillaScoreboardTotalUpdater/PlayerReports reportToUpdate, GorillaPlayerScoreboardLine lineToUpdate)
      // Offset: 0x273E834
      // ABORTED: is copy constructor.  PlayerReports(::GlobalNamespace::GorillaScoreboardTotalUpdater::PlayerReports reportToUpdate, ::GlobalNamespace::GorillaPlayerScoreboardLine* lineToUpdate);
      // public System.Void .ctor(GorillaPlayerScoreboardLine lineToUpdate)
      // Offset: 0x273E8AC
      PlayerReports(::GlobalNamespace::GorillaPlayerScoreboardLine* lineToUpdate);
    }; // GorillaScoreboardTotalUpdater/PlayerReports
    #pragma pack(pop)
    static check_size<sizeof(GorillaScoreboardTotalUpdater::PlayerReports), 3 + sizeof(bool)> __GlobalNamespace_GorillaScoreboardTotalUpdater_PlayerReportsSizeCheck;
    static_assert(sizeof(GorillaScoreboardTotalUpdater::PlayerReports) == 0x4);
    public:
    // private System.Collections.Generic.List`1<NetPlayer> playersInRoom
    // Size: 0x8
    // Offset: 0x20
    ::System::Collections::Generic::List_1<::GlobalNamespace::NetPlayer*>* playersInRoom;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::GlobalNamespace::NetPlayer*>*) == 0x8);
    // private System.Boolean joinedRoom
    // Size: 0x1
    // Offset: 0x28
    bool joinedRoom;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean wasGameManagerNull
    // Size: 0x1
    // Offset: 0x29
    bool wasGameManagerNull;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // public System.Boolean forOverlay
    // Size: 0x1
    // Offset: 0x2A
    bool forOverlay;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: forOverlay and: offlineTextErrorString
    char __padding3[0x5] = {};
    // public System.String offlineTextErrorString
    // Size: 0x8
    // Offset: 0x30
    ::StringW offlineTextErrorString;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public System.Collections.Generic.Dictionary`2<System.Int32,GorillaScoreboardTotalUpdater/PlayerReports> reportDict
    // Size: 0x8
    // Offset: 0x38
    ::System::Collections::Generic::Dictionary_2<int, ::GlobalNamespace::GorillaScoreboardTotalUpdater::PlayerReports>* reportDict;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::Dictionary_2<int, ::GlobalNamespace::GorillaScoreboardTotalUpdater::PlayerReports>*) == 0x8);
    public:
    // Get static field: static public GorillaScoreboardTotalUpdater instance
    static ::GlobalNamespace::GorillaScoreboardTotalUpdater* _get_instance();
    // Set static field: static public GorillaScoreboardTotalUpdater instance
    static void _set_instance(::GlobalNamespace::GorillaScoreboardTotalUpdater* value);
    // Get static field: static public System.Boolean hasInstance
    static bool _get_hasInstance();
    // Set static field: static public System.Boolean hasInstance
    static void _set_hasInstance(bool value);
    // Get static field: static public System.Collections.Generic.List`1<GorillaPlayerScoreboardLine> allScoreboardLines
    static ::System::Collections::Generic::List_1<::GlobalNamespace::GorillaPlayerScoreboardLine*>* _get_allScoreboardLines();
    // Set static field: static public System.Collections.Generic.List`1<GorillaPlayerScoreboardLine> allScoreboardLines
    static void _set_allScoreboardLines(::System::Collections::Generic::List_1<::GlobalNamespace::GorillaPlayerScoreboardLine*>* value);
    // Get static field: static public System.Int32 lineIndex
    static int _get_lineIndex();
    // Set static field: static public System.Int32 lineIndex
    static void _set_lineIndex(int value);
    // Get static field: static private System.Int32 linesPerFrame
    static int _get_linesPerFrame();
    // Set static field: static private System.Int32 linesPerFrame
    static void _set_linesPerFrame(int value);
    // Get static field: static public System.Collections.Generic.List`1<GorillaScoreBoard> allScoreboards
    static ::System::Collections::Generic::List_1<::GlobalNamespace::GorillaScoreBoard*>* _get_allScoreboards();
    // Set static field: static public System.Collections.Generic.List`1<GorillaScoreBoard> allScoreboards
    static void _set_allScoreboards(::System::Collections::Generic::List_1<::GlobalNamespace::GorillaScoreBoard*>* value);
    // Get static field: static public System.Int32 boardIndex
    static int _get_boardIndex();
    // Set static field: static public System.Int32 boardIndex
    static void _set_boardIndex(int value);
    // Get static field: static private System.Int32 boardsPerFrame
    static int _get_boardsPerFrame();
    // Set static field: static private System.Int32 boardsPerFrame
    static void _set_boardsPerFrame(int value);
    // static field const value: static private System.Single maxHD
    static constexpr const float maxHD = 0.1;
    // Get static field: static private System.Single maxHD
    static float _get_maxHD();
    // Set static field: static private System.Single maxHD
    static void _set_maxHD(float value);
    // Get instance field reference: private System.Collections.Generic.List`1<NetPlayer> playersInRoom
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GlobalNamespace::NetPlayer*>*& dyn_playersInRoom();
    // Get instance field reference: private System.Boolean joinedRoom
    [[deprecated("Use field access instead!")]] bool& dyn_joinedRoom();
    // Get instance field reference: private System.Boolean wasGameManagerNull
    [[deprecated("Use field access instead!")]] bool& dyn_wasGameManagerNull();
    // Get instance field reference: public System.Boolean forOverlay
    [[deprecated("Use field access instead!")]] bool& dyn_forOverlay();
    // Get instance field reference: public System.String offlineTextErrorString
    [[deprecated("Use field access instead!")]] ::StringW& dyn_offlineTextErrorString();
    // Get instance field reference: public System.Collections.Generic.Dictionary`2<System.Int32,GorillaScoreboardTotalUpdater/PlayerReports> reportDict
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<int, ::GlobalNamespace::GorillaScoreboardTotalUpdater::PlayerReports>*& dyn_reportDict();
    // public System.Void UpdateLineState(GorillaPlayerScoreboardLine line)
    // Offset: 0x273D1EC
    void UpdateLineState(::GlobalNamespace::GorillaPlayerScoreboardLine* line);
    // protected System.Void Awake()
    // Offset: 0x273E8E0
    void Awake();
    // private System.Void Start()
    // Offset: 0x273EABC
    void Start();
    // static public System.Void CreateManager()
    // Offset: 0x273EC34
    static void CreateManager();
    // static private System.Void SetInstance(GorillaScoreboardTotalUpdater manager)
    // Offset: 0x273E9D8
    static void SetInstance(::GlobalNamespace::GorillaScoreboardTotalUpdater* manager);
    // static public System.Void RegisterSL(GorillaPlayerScoreboardLine sL)
    // Offset: 0x273D3DC
    static void RegisterSL(::GlobalNamespace::GorillaPlayerScoreboardLine* sL);
    // static public System.Void UnregisterSL(GorillaPlayerScoreboardLine sL)
    // Offset: 0x273D584
    static void UnregisterSL(::GlobalNamespace::GorillaPlayerScoreboardLine* sL);
    // static public System.Void RegisterScoreboard(GorillaScoreBoard sB)
    // Offset: 0x273ECF4
    static void RegisterScoreboard(::GlobalNamespace::GorillaScoreBoard* sB);
    // static public System.Void UnregisterScoreboard(GorillaScoreBoard sB)
    // Offset: 0x273F3CC
    static void UnregisterScoreboard(::GlobalNamespace::GorillaScoreBoard* sB);
    // public System.Void UpdateActiveScoreboards()
    // Offset: 0x273F4CC
    void UpdateActiveScoreboards();
    // public System.Void SetOfflineFailureText(System.String failureText)
    // Offset: 0x273F5A8
    void SetOfflineFailureText(::StringW failureText);
    // public System.Void ClearOfflineFailureText()
    // Offset: 0x273F5C4
    void ClearOfflineFailureText();
    // public System.Void UpdateScoreboard(GorillaScoreBoard sB)
    // Offset: 0x273EE5C
    void UpdateScoreboard(::GlobalNamespace::GorillaScoreBoard* sB);
    // public System.Void Update()
    // Offset: 0x273F5E4
    void Update();
    // private System.Void OnPlayerEnteredRoom(System.Int32 netPlayerID)
    // Offset: 0x273F7FC
    void OnPlayerEnteredRoom(int netPlayerID);
    // private System.Void OnPlayerLeftRoom(System.Int32 netPlayerID)
    // Offset: 0x273F974
    void OnPlayerLeftRoom(int netPlayerID);
    // System.Void JoinedRoom()
    // Offset: 0x273FA70
    void JoinedRoom();
    // private System.Void OnLeftRoom()
    // Offset: 0x273FD98
    void OnLeftRoom();
    // public System.Void .ctor()
    // Offset: 0x273FF54
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static GorillaScoreboardTotalUpdater* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaScoreboardTotalUpdater::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<GorillaScoreboardTotalUpdater*, creationType>()));
    }
    // static private System.Void .cctor()
    // Offset: 0x2740030
    static void _cctor();
  }; // GorillaScoreboardTotalUpdater
  #pragma pack(pop)
  static check_size<sizeof(GorillaScoreboardTotalUpdater), 56 + sizeof(::System::Collections::Generic::Dictionary_2<int, ::GlobalNamespace::GorillaScoreboardTotalUpdater::PlayerReports>*)> __GlobalNamespace_GorillaScoreboardTotalUpdaterSizeCheck;
  static_assert(sizeof(GorillaScoreboardTotalUpdater) == 0x40);
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::GorillaScoreboardTotalUpdater::PlayerReports, "", "GorillaScoreboardTotalUpdater/PlayerReports");
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::GorillaScoreboardTotalUpdater::UpdateLineState
// Il2CppName: UpdateLineState
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::GorillaScoreboardTotalUpdater::*)(::GlobalNamespace::GorillaPlayerScoreboardLine*)>(&GlobalNamespace::GorillaScoreboardTotalUpdater::UpdateLineState)> {
  static const MethodInfo* get() {
    static auto* line = &::il2cpp_utils::GetClassFromName("", "GorillaPlayerScoreboardLine")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::GorillaScoreboardTotalUpdater*), "UpdateLineState", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{line});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::GorillaScoreboardTotalUpdater::Awake
// Il2CppName: Awake
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::GorillaScoreboardTotalUpdater::*)()>(&GlobalNamespace::GorillaScoreboardTotalUpdater::Awake)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::GorillaScoreboardTotalUpdater*), "Awake", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::GorillaScoreboardTotalUpdater::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::GorillaScoreboardTotalUpdater::*)()>(&GlobalNamespace::GorillaScoreboardTotalUpdater::Start)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::GorillaScoreboardTotalUpdater*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::GorillaScoreboardTotalUpdater::CreateManager
// Il2CppName: CreateManager
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&GlobalNamespace::GorillaScoreboardTotalUpdater::CreateManager)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::GorillaScoreboardTotalUpdater*), "CreateManager", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::GorillaScoreboardTotalUpdater::SetInstance
// Il2CppName: SetInstance
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::GlobalNamespace::GorillaScoreboardTotalUpdater*)>(&GlobalNamespace::GorillaScoreboardTotalUpdater::SetInstance)> {
  static const MethodInfo* get() {
    static auto* manager = &::il2cpp_utils::GetClassFromName("", "GorillaScoreboardTotalUpdater")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::GorillaScoreboardTotalUpdater*), "SetInstance", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{manager});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::GorillaScoreboardTotalUpdater::RegisterSL
// Il2CppName: RegisterSL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::GlobalNamespace::GorillaPlayerScoreboardLine*)>(&GlobalNamespace::GorillaScoreboardTotalUpdater::RegisterSL)> {
  static const MethodInfo* get() {
    static auto* sL = &::il2cpp_utils::GetClassFromName("", "GorillaPlayerScoreboardLine")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::GorillaScoreboardTotalUpdater*), "RegisterSL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sL});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::GorillaScoreboardTotalUpdater::UnregisterSL
// Il2CppName: UnregisterSL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::GlobalNamespace::GorillaPlayerScoreboardLine*)>(&GlobalNamespace::GorillaScoreboardTotalUpdater::UnregisterSL)> {
  static const MethodInfo* get() {
    static auto* sL = &::il2cpp_utils::GetClassFromName("", "GorillaPlayerScoreboardLine")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::GorillaScoreboardTotalUpdater*), "UnregisterSL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sL});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::GorillaScoreboardTotalUpdater::RegisterScoreboard
// Il2CppName: RegisterScoreboard
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::GlobalNamespace::GorillaScoreBoard*)>(&GlobalNamespace::GorillaScoreboardTotalUpdater::RegisterScoreboard)> {
  static const MethodInfo* get() {
    static auto* sB = &::il2cpp_utils::GetClassFromName("", "GorillaScoreBoard")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::GorillaScoreboardTotalUpdater*), "RegisterScoreboard", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sB});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::GorillaScoreboardTotalUpdater::UnregisterScoreboard
// Il2CppName: UnregisterScoreboard
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::GlobalNamespace::GorillaScoreBoard*)>(&GlobalNamespace::GorillaScoreboardTotalUpdater::UnregisterScoreboard)> {
  static const MethodInfo* get() {
    static auto* sB = &::il2cpp_utils::GetClassFromName("", "GorillaScoreBoard")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::GorillaScoreboardTotalUpdater*), "UnregisterScoreboard", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sB});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::GorillaScoreboardTotalUpdater::UpdateActiveScoreboards
// Il2CppName: UpdateActiveScoreboards
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::GorillaScoreboardTotalUpdater::*)()>(&GlobalNamespace::GorillaScoreboardTotalUpdater::UpdateActiveScoreboards)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::GorillaScoreboardTotalUpdater*), "UpdateActiveScoreboards", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::GorillaScoreboardTotalUpdater::SetOfflineFailureText
// Il2CppName: SetOfflineFailureText
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::GorillaScoreboardTotalUpdater::*)(::StringW)>(&GlobalNamespace::GorillaScoreboardTotalUpdater::SetOfflineFailureText)> {
  static const MethodInfo* get() {
    static auto* failureText = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::GorillaScoreboardTotalUpdater*), "SetOfflineFailureText", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{failureText});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::GorillaScoreboardTotalUpdater::ClearOfflineFailureText
// Il2CppName: ClearOfflineFailureText
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::GorillaScoreboardTotalUpdater::*)()>(&GlobalNamespace::GorillaScoreboardTotalUpdater::ClearOfflineFailureText)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::GorillaScoreboardTotalUpdater*), "ClearOfflineFailureText", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::GorillaScoreboardTotalUpdater::UpdateScoreboard
// Il2CppName: UpdateScoreboard
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::GorillaScoreboardTotalUpdater::*)(::GlobalNamespace::GorillaScoreBoard*)>(&GlobalNamespace::GorillaScoreboardTotalUpdater::UpdateScoreboard)> {
  static const MethodInfo* get() {
    static auto* sB = &::il2cpp_utils::GetClassFromName("", "GorillaScoreBoard")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::GorillaScoreboardTotalUpdater*), "UpdateScoreboard", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sB});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::GorillaScoreboardTotalUpdater::Update
// Il2CppName: Update
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::GorillaScoreboardTotalUpdater::*)()>(&GlobalNamespace::GorillaScoreboardTotalUpdater::Update)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::GorillaScoreboardTotalUpdater*), "Update", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::GorillaScoreboardTotalUpdater::OnPlayerEnteredRoom
// Il2CppName: OnPlayerEnteredRoom
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::GorillaScoreboardTotalUpdater::*)(int)>(&GlobalNamespace::GorillaScoreboardTotalUpdater::OnPlayerEnteredRoom)> {
  static const MethodInfo* get() {
    static auto* netPlayerID = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::GorillaScoreboardTotalUpdater*), "OnPlayerEnteredRoom", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{netPlayerID});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::GorillaScoreboardTotalUpdater::OnPlayerLeftRoom
// Il2CppName: OnPlayerLeftRoom
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::GorillaScoreboardTotalUpdater::*)(int)>(&GlobalNamespace::GorillaScoreboardTotalUpdater::OnPlayerLeftRoom)> {
  static const MethodInfo* get() {
    static auto* netPlayerID = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::GorillaScoreboardTotalUpdater*), "OnPlayerLeftRoom", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{netPlayerID});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::GorillaScoreboardTotalUpdater::JoinedRoom
// Il2CppName: JoinedRoom
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::GorillaScoreboardTotalUpdater::*)()>(&GlobalNamespace::GorillaScoreboardTotalUpdater::JoinedRoom)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::GorillaScoreboardTotalUpdater*), "JoinedRoom", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::GorillaScoreboardTotalUpdater::OnLeftRoom
// Il2CppName: OnLeftRoom
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::GorillaScoreboardTotalUpdater::*)()>(&GlobalNamespace::GorillaScoreboardTotalUpdater::OnLeftRoom)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::GorillaScoreboardTotalUpdater*), "OnLeftRoom", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::GorillaScoreboardTotalUpdater::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: GlobalNamespace::GorillaScoreboardTotalUpdater::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&GlobalNamespace::GorillaScoreboardTotalUpdater::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::GorillaScoreboardTotalUpdater*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
