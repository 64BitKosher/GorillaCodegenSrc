// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: OVRPassthroughLayer
#include "GlobalNamespace/OVRPassthroughLayer.hpp"
// Including type: OVRPlugin
#include "GlobalNamespace/OVRPlugin.hpp"
// Completed includes
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::OVRPassthroughLayer::IStyleHandler);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::OVRPassthroughLayer::IStyleHandler*, "", "OVRPassthroughLayer/IStyleHandler");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x0
  #pragma pack(push, 1)
  // Autogenerated type: OVRPassthroughLayer/IStyleHandler
  // [TokenAttribute] Offset: FFFFFFFF
  class OVRPassthroughLayer::IStyleHandler {
    public:
    // public System.Void ApplyStyleSettings(ref OVRPlugin/InsightPassthroughStyle2 style)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void ApplyStyleSettings(ByRef<::GlobalNamespace::OVRPlugin::InsightPassthroughStyle2> style);
    // public System.Void Update(OVRPassthroughLayer/Settings settings)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void Update(::GlobalNamespace::OVRPassthroughLayer::Settings settings);
    // public System.Boolean get_IsValid()
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool get_IsValid();
    // public System.Void Clear()
    // Offset: 0xFFFFFFFFFFFFFFFF
    void Clear();
  }; // OVRPassthroughLayer/IStyleHandler
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::OVRPassthroughLayer::IStyleHandler::ApplyStyleSettings
// Il2CppName: ApplyStyleSettings
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::OVRPassthroughLayer::IStyleHandler::*)(ByRef<::GlobalNamespace::OVRPlugin::InsightPassthroughStyle2>)>(&GlobalNamespace::OVRPassthroughLayer::IStyleHandler::ApplyStyleSettings)> {
  static const MethodInfo* get() {
    static auto* style = &::il2cpp_utils::GetClassFromName("", "OVRPlugin/InsightPassthroughStyle2")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::OVRPassthroughLayer::IStyleHandler*), "ApplyStyleSettings", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{style});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::OVRPassthroughLayer::IStyleHandler::Update
// Il2CppName: Update
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::OVRPassthroughLayer::IStyleHandler::*)(::GlobalNamespace::OVRPassthroughLayer::Settings)>(&GlobalNamespace::OVRPassthroughLayer::IStyleHandler::Update)> {
  static const MethodInfo* get() {
    static auto* settings = &::il2cpp_utils::GetClassFromName("", "OVRPassthroughLayer/Settings")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::OVRPassthroughLayer::IStyleHandler*), "Update", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{settings});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::OVRPassthroughLayer::IStyleHandler::get_IsValid
// Il2CppName: get_IsValid
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (GlobalNamespace::OVRPassthroughLayer::IStyleHandler::*)()>(&GlobalNamespace::OVRPassthroughLayer::IStyleHandler::get_IsValid)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::OVRPassthroughLayer::IStyleHandler*), "get_IsValid", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::OVRPassthroughLayer::IStyleHandler::Clear
// Il2CppName: Clear
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::OVRPassthroughLayer::IStyleHandler::*)()>(&GlobalNamespace::OVRPassthroughLayer::IStyleHandler::Clear)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::OVRPassthroughLayer::IStyleHandler*), "Clear", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
