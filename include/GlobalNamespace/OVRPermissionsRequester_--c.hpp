// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: OVRPermissionsRequester
#include "GlobalNamespace/OVRPermissionsRequester.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Action`1<T>
  template<typename T>
  class Action_1;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::OVRPermissionsRequester::$$c);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::OVRPermissionsRequester::$$c*, "", "OVRPermissionsRequester/<>c");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: OVRPermissionsRequester/<>c
  // [TokenAttribute] Offset: FFFFFFFF
  // [CompilerGeneratedAttribute] Offset: FFFFFFFF
  class OVRPermissionsRequester::$$c : public ::Il2CppObject {
    public:
    // Get static field: static public readonly OVRPermissionsRequester/<>c <>9
    static ::GlobalNamespace::OVRPermissionsRequester::$$c* _get_$$9();
    // Set static field: static public readonly OVRPermissionsRequester/<>c <>9
    static void _set_$$9(::GlobalNamespace::OVRPermissionsRequester::$$c* value);
    // Get static field: static public System.Action`1<System.String> <>9__14_0
    static ::System::Action_1<::StringW>* _get_$$9__14_0();
    // Set static field: static public System.Action`1<System.String> <>9__14_0
    static void _set_$$9__14_0(::System::Action_1<::StringW>* value);
    // Get static field: static public System.Action`1<System.String> <>9__14_1
    static ::System::Action_1<::StringW>* _get_$$9__14_1();
    // Set static field: static public System.Action`1<System.String> <>9__14_1
    static void _set_$$9__14_1(::System::Action_1<::StringW>* value);
    // Get static field: static public System.Action`1<System.String> <>9__14_2
    static ::System::Action_1<::StringW>* _get_$$9__14_2();
    // Set static field: static public System.Action`1<System.String> <>9__14_2
    static void _set_$$9__14_2(::System::Action_1<::StringW>* value);
    // static private System.Void .cctor()
    // Offset: 0x48ED6DC
    static void _cctor();
    // public System.Void .ctor()
    // Offset: 0x48ED744
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static OVRPermissionsRequester::$$c* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPermissionsRequester::$$c::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<OVRPermissionsRequester::$$c*, creationType>()));
    }
    // System.Void <BuildPermissionCallbacks>b__14_0(System.String permissionId)
    // Offset: 0x48ED74C
    void $BuildPermissionCallbacks$b__14_0(::StringW permissionId);
    // System.Void <BuildPermissionCallbacks>b__14_1(System.String permissionId)
    // Offset: 0x48ED7F0
    void $BuildPermissionCallbacks$b__14_1(::StringW permissionId);
    // System.Void <BuildPermissionCallbacks>b__14_2(System.String permissionId)
    // Offset: 0x48ED894
    void $BuildPermissionCallbacks$b__14_2(::StringW permissionId);
  }; // OVRPermissionsRequester/<>c
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::OVRPermissionsRequester::$$c::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&GlobalNamespace::OVRPermissionsRequester::$$c::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::OVRPermissionsRequester::$$c*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::OVRPermissionsRequester::$$c::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: GlobalNamespace::OVRPermissionsRequester::$$c::$BuildPermissionCallbacks$b__14_0
// Il2CppName: <BuildPermissionCallbacks>b__14_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::OVRPermissionsRequester::$$c::*)(::StringW)>(&GlobalNamespace::OVRPermissionsRequester::$$c::$BuildPermissionCallbacks$b__14_0)> {
  static const MethodInfo* get() {
    static auto* permissionId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::OVRPermissionsRequester::$$c*), "<BuildPermissionCallbacks>b__14_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{permissionId});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::OVRPermissionsRequester::$$c::$BuildPermissionCallbacks$b__14_1
// Il2CppName: <BuildPermissionCallbacks>b__14_1
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::OVRPermissionsRequester::$$c::*)(::StringW)>(&GlobalNamespace::OVRPermissionsRequester::$$c::$BuildPermissionCallbacks$b__14_1)> {
  static const MethodInfo* get() {
    static auto* permissionId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::OVRPermissionsRequester::$$c*), "<BuildPermissionCallbacks>b__14_1", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{permissionId});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::OVRPermissionsRequester::$$c::$BuildPermissionCallbacks$b__14_2
// Il2CppName: <BuildPermissionCallbacks>b__14_2
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::OVRPermissionsRequester::$$c::*)(::StringW)>(&GlobalNamespace::OVRPermissionsRequester::$$c::$BuildPermissionCallbacks$b__14_2)> {
  static const MethodInfo* get() {
    static auto* permissionId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::OVRPermissionsRequester::$$c*), "<BuildPermissionCallbacks>b__14_2", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{permissionId});
  }
};
