// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: GorillaSerializer
#include "GlobalNamespace/GorillaSerializer.hpp"
// Including type: Photon.Pun.IOnPhotonViewPreNetDestroy
#include "Photon/Pun/IOnPhotonViewPreNetDestroy.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Skipping declaration: MonoBehaviour because it is already included!
}
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: IGorillaSerializeableScene
  class IGorillaSerializeableScene;
}
// Forward declaring namespace: Photon::Pun
namespace Photon::Pun {
  // Forward declaring type: PhotonView
  class PhotonView;
  // Forward declaring type: PhotonMessageInfo
  struct PhotonMessageInfo;
  // Forward declaring type: PhotonStream
  class PhotonStream;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Forward declaring type: GorillaSerializerScene
  class GorillaSerializerScene;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::GorillaSerializerScene);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::GorillaSerializerScene*, "", "GorillaSerializerScene");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x61
  #pragma pack(push, 1)
  // Autogenerated type: GorillaSerializerScene
  // [TokenAttribute] Offset: FFFFFFFF
  class GorillaSerializerScene : public ::GlobalNamespace::GorillaSerializer/*, public ::Photon::Pun::IOnPhotonViewPreNetDestroy*/ {
    public:
    public:
    // private System.Boolean transferrable
    // Size: 0x1
    // Offset: 0x48
    bool transferrable;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: transferrable and: targetComponent
    char __padding0[0x7] = {};
    // private UnityEngine.MonoBehaviour targetComponent
    // Size: 0x8
    // Offset: 0x50
    ::UnityEngine::MonoBehaviour* targetComponent;
    // Field size check
    static_assert(sizeof(::UnityEngine::MonoBehaviour*) == 0x8);
    // private IGorillaSerializeableScene sceneSerializeTarget
    // Size: 0x8
    // Offset: 0x58
    ::GlobalNamespace::IGorillaSerializeableScene* sceneSerializeTarget;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::IGorillaSerializeableScene*) == 0x8);
    // protected System.Boolean validDisable
    // Size: 0x1
    // Offset: 0x60
    bool validDisable;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    public:
    // Creating interface conversion operator: operator ::Photon::Pun::IOnPhotonViewPreNetDestroy
    operator ::Photon::Pun::IOnPhotonViewPreNetDestroy() noexcept {
      return *reinterpret_cast<::Photon::Pun::IOnPhotonViewPreNetDestroy*>(this);
    }
    // Get instance field reference: private System.Boolean transferrable
    [[deprecated("Use field access instead!")]] bool& dyn_transferrable();
    // Get instance field reference: private UnityEngine.MonoBehaviour targetComponent
    [[deprecated("Use field access instead!")]] ::UnityEngine::MonoBehaviour*& dyn_targetComponent();
    // Get instance field reference: private IGorillaSerializeableScene sceneSerializeTarget
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::IGorillaSerializeableScene*& dyn_sceneSerializeTarget();
    // Get instance field reference: protected System.Boolean validDisable
    [[deprecated("Use field access instead!")]] bool& dyn_validDisable();
    // System.Boolean get_HasAuthority()
    // Offset: 0x26F8864
    bool get_HasAuthority();
    // protected System.Void Start()
    // Offset: 0x26F8880
    void Start();
    // private System.Void OnEnable()
    // Offset: 0x26F8A00
    void OnEnable();
    // protected System.Void OnValidEnable()
    // Offset: 0x26F8A2C
    void OnValidEnable();
    // private System.Void OnDisable()
    // Offset: 0x26F8AD0
    void OnDisable();
    // protected System.Void OnValidDisable()
    // Offset: 0x26F8AF4
    void OnValidDisable();
    // private System.Void Photon.Pun.IOnPhotonViewPreNetDestroy.OnPreNetDestroy(Photon.Pun.PhotonView rootView)
    // Offset: 0x26F8CCC
    void Photon_Pun_IOnPhotonViewPreNetDestroy_OnPreNetDestroy(::Photon::Pun::PhotonView* rootView);
    // public override System.Void OnPhotonInstantiate(Photon.Pun.PhotonMessageInfo info)
    // Offset: 0x26F8B98
    // Implemented from: GorillaSerializer
    // Base method: System.Void GorillaSerializer::OnPhotonInstantiate(Photon.Pun.PhotonMessageInfo info)
    void OnPhotonInstantiate(::Photon::Pun::PhotonMessageInfo info);
    // protected override System.Boolean ValidOnSerialize(Photon.Pun.PhotonStream stream, in Photon.Pun.PhotonMessageInfo info)
    // Offset: 0x26F8CD4
    // Implemented from: GorillaSerializer
    // Base method: System.Boolean GorillaSerializer::ValidOnSerialize(Photon.Pun.PhotonStream stream, in Photon.Pun.PhotonMessageInfo info)
    bool ValidOnSerialize(::Photon::Pun::PhotonStream* stream, ByRef<::Photon::Pun::PhotonMessageInfo> info);
    // public System.Void .ctor()
    // Offset: 0x26F8D5C
    // Implemented from: GorillaSerializer
    // Base method: System.Void GorillaSerializer::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static GorillaSerializerScene* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaSerializerScene::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<GorillaSerializerScene*, creationType>()));
    }
  }; // GorillaSerializerScene
  #pragma pack(pop)
  static check_size<sizeof(GorillaSerializerScene), 96 + sizeof(bool)> __GlobalNamespace_GorillaSerializerSceneSizeCheck;
  static_assert(sizeof(GorillaSerializerScene) == 0x61);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::GorillaSerializerScene::get_HasAuthority
// Il2CppName: get_HasAuthority
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (GlobalNamespace::GorillaSerializerScene::*)()>(&GlobalNamespace::GorillaSerializerScene::get_HasAuthority)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::GorillaSerializerScene*), "get_HasAuthority", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::GorillaSerializerScene::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::GorillaSerializerScene::*)()>(&GlobalNamespace::GorillaSerializerScene::Start)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::GorillaSerializerScene*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::GorillaSerializerScene::OnEnable
// Il2CppName: OnEnable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::GorillaSerializerScene::*)()>(&GlobalNamespace::GorillaSerializerScene::OnEnable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::GorillaSerializerScene*), "OnEnable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::GorillaSerializerScene::OnValidEnable
// Il2CppName: OnValidEnable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::GorillaSerializerScene::*)()>(&GlobalNamespace::GorillaSerializerScene::OnValidEnable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::GorillaSerializerScene*), "OnValidEnable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::GorillaSerializerScene::OnDisable
// Il2CppName: OnDisable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::GorillaSerializerScene::*)()>(&GlobalNamespace::GorillaSerializerScene::OnDisable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::GorillaSerializerScene*), "OnDisable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::GorillaSerializerScene::OnValidDisable
// Il2CppName: OnValidDisable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::GorillaSerializerScene::*)()>(&GlobalNamespace::GorillaSerializerScene::OnValidDisable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::GorillaSerializerScene*), "OnValidDisable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::GorillaSerializerScene::Photon_Pun_IOnPhotonViewPreNetDestroy_OnPreNetDestroy
// Il2CppName: Photon.Pun.IOnPhotonViewPreNetDestroy.OnPreNetDestroy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::GorillaSerializerScene::*)(::Photon::Pun::PhotonView*)>(&GlobalNamespace::GorillaSerializerScene::Photon_Pun_IOnPhotonViewPreNetDestroy_OnPreNetDestroy)> {
  static const MethodInfo* get() {
    static auto* rootView = &::il2cpp_utils::GetClassFromName("Photon.Pun", "PhotonView")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::GorillaSerializerScene*), "Photon.Pun.IOnPhotonViewPreNetDestroy.OnPreNetDestroy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{rootView});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::GorillaSerializerScene::OnPhotonInstantiate
// Il2CppName: OnPhotonInstantiate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::GorillaSerializerScene::*)(::Photon::Pun::PhotonMessageInfo)>(&GlobalNamespace::GorillaSerializerScene::OnPhotonInstantiate)> {
  static const MethodInfo* get() {
    static auto* info = &::il2cpp_utils::GetClassFromName("Photon.Pun", "PhotonMessageInfo")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::GorillaSerializerScene*), "OnPhotonInstantiate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{info});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::GorillaSerializerScene::ValidOnSerialize
// Il2CppName: ValidOnSerialize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (GlobalNamespace::GorillaSerializerScene::*)(::Photon::Pun::PhotonStream*, ByRef<::Photon::Pun::PhotonMessageInfo>)>(&GlobalNamespace::GorillaSerializerScene::ValidOnSerialize)> {
  static const MethodInfo* get() {
    static auto* stream = &::il2cpp_utils::GetClassFromName("Photon.Pun", "PhotonStream")->byval_arg;
    static auto* info = &::il2cpp_utils::GetClassFromName("Photon.Pun", "PhotonMessageInfo")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::GorillaSerializerScene*), "ValidOnSerialize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stream, info});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::GorillaSerializerScene::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
