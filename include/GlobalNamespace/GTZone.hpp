// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Enum
#include "System/Enum.hpp"
// Completed includes
// Type namespace: 
namespace GlobalNamespace {
  // Forward declaring type: GTZone
  struct GTZone;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::GTZone, "", "GTZone");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x4
  #pragma pack(push, 1)
  // Autogenerated type: GTZone
  // [TokenAttribute] Offset: FFFFFFFF
  struct GTZone/*, public ::System::Enum*/ {
    public:
    public:
    // public System.Int32 value__
    // Size: 0x4
    // Offset: 0x0
    int value;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Creating value type constructor for type: GTZone
    constexpr GTZone(int value_ = {}) noexcept : value{value_} {}
    // Creating interface conversion operator: operator ::System::Enum
    operator ::System::Enum() noexcept {
      return *reinterpret_cast<::System::Enum*>(this);
    }
    // Creating conversion operator: operator int
    constexpr operator int() const noexcept {
      return value;
    }
    // static field const value: static public GTZone forest
    static constexpr const int forest = 0;
    // Get static field: static public GTZone forest
    static ::GlobalNamespace::GTZone _get_forest();
    // Set static field: static public GTZone forest
    static void _set_forest(::GlobalNamespace::GTZone value);
    // static field const value: static public GTZone city
    static constexpr const int city = 1;
    // Get static field: static public GTZone city
    static ::GlobalNamespace::GTZone _get_city();
    // Set static field: static public GTZone city
    static void _set_city(::GlobalNamespace::GTZone value);
    // static field const value: static public GTZone basement
    static constexpr const int basement = 2;
    // Get static field: static public GTZone basement
    static ::GlobalNamespace::GTZone _get_basement();
    // Set static field: static public GTZone basement
    static void _set_basement(::GlobalNamespace::GTZone value);
    // static field const value: static public GTZone canyon
    static constexpr const int canyon = 3;
    // Get static field: static public GTZone canyon
    static ::GlobalNamespace::GTZone _get_canyon();
    // Set static field: static public GTZone canyon
    static void _set_canyon(::GlobalNamespace::GTZone value);
    // static field const value: static public GTZone beach
    static constexpr const int beach = 4;
    // Get static field: static public GTZone beach
    static ::GlobalNamespace::GTZone _get_beach();
    // Set static field: static public GTZone beach
    static void _set_beach(::GlobalNamespace::GTZone value);
    // static field const value: static public GTZone mountain
    static constexpr const int mountain = 5;
    // Get static field: static public GTZone mountain
    static ::GlobalNamespace::GTZone _get_mountain();
    // Set static field: static public GTZone mountain
    static void _set_mountain(::GlobalNamespace::GTZone value);
    // static field const value: static public GTZone skyJungle
    static constexpr const int skyJungle = 6;
    // Get static field: static public GTZone skyJungle
    static ::GlobalNamespace::GTZone _get_skyJungle();
    // Set static field: static public GTZone skyJungle
    static void _set_skyJungle(::GlobalNamespace::GTZone value);
    // static field const value: static public GTZone cave
    static constexpr const int cave = 7;
    // Get static field: static public GTZone cave
    static ::GlobalNamespace::GTZone _get_cave();
    // Set static field: static public GTZone cave
    static void _set_cave(::GlobalNamespace::GTZone value);
    // static field const value: static public GTZone cityWithSkyJungle
    static constexpr const int cityWithSkyJungle = 8;
    // Get static field: static public GTZone cityWithSkyJungle
    static ::GlobalNamespace::GTZone _get_cityWithSkyJungle();
    // Set static field: static public GTZone cityWithSkyJungle
    static void _set_cityWithSkyJungle(::GlobalNamespace::GTZone value);
    // static field const value: static public GTZone tutorial
    static constexpr const int tutorial = 9;
    // Get static field: static public GTZone tutorial
    static ::GlobalNamespace::GTZone _get_tutorial();
    // Set static field: static public GTZone tutorial
    static void _set_tutorial(::GlobalNamespace::GTZone value);
    // static field const value: static public GTZone rotating
    static constexpr const int rotating = 10;
    // Get static field: static public GTZone rotating
    static ::GlobalNamespace::GTZone _get_rotating();
    // Set static field: static public GTZone rotating
    static void _set_rotating(::GlobalNamespace::GTZone value);
    // static field const value: static public GTZone none
    static constexpr const int none = 11;
    // Get static field: static public GTZone none
    static ::GlobalNamespace::GTZone _get_none();
    // Set static field: static public GTZone none
    static void _set_none(::GlobalNamespace::GTZone value);
    // static field const value: static public GTZone Metropolis
    static constexpr const int Metropolis = 12;
    // Get static field: static public GTZone Metropolis
    static ::GlobalNamespace::GTZone _get_Metropolis();
    // Set static field: static public GTZone Metropolis
    static void _set_Metropolis(::GlobalNamespace::GTZone value);
    // static field const value: static public GTZone cityNoBuildings
    static constexpr const int cityNoBuildings = 13;
    // Get static field: static public GTZone cityNoBuildings
    static ::GlobalNamespace::GTZone _get_cityNoBuildings();
    // Set static field: static public GTZone cityNoBuildings
    static void _set_cityNoBuildings(::GlobalNamespace::GTZone value);
    // static field const value: static public GTZone attic
    static constexpr const int attic = 14;
    // Get static field: static public GTZone attic
    static ::GlobalNamespace::GTZone _get_attic();
    // Set static field: static public GTZone attic
    static void _set_attic(::GlobalNamespace::GTZone value);
    // Get instance field reference: public System.Int32 value__
    [[deprecated("Use field access instead!")]] int& dyn_value__();
  }; // GTZone
  #pragma pack(pop)
  static check_size<sizeof(GTZone), 0 + sizeof(int)> __GlobalNamespace_GTZoneSizeCheck;
  static_assert(sizeof(GTZone) == 0x4);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
