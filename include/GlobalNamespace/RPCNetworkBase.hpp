// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: IGorillaSerializeable
  class IGorillaSerializeable;
  // Forward declaring type: GorillaSerializer
  class GorillaSerializer;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Forward declaring type: RPCNetworkBase
  class RPCNetworkBase;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::RPCNetworkBase);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::RPCNetworkBase*, "", "RPCNetworkBase");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x20
  #pragma pack(push, 1)
  // Autogenerated type: RPCNetworkBase
  // [TokenAttribute] Offset: FFFFFFFF
  class RPCNetworkBase : public ::UnityEngine::MonoBehaviour {
    public:
    // public System.Void SetClassTarget(IGorillaSerializeable target, GorillaSerializer netHandler)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void SetClassTarget(::GlobalNamespace::IGorillaSerializeable* target, ::GlobalNamespace::GorillaSerializer* netHandler);
    // protected System.Void .ctor()
    // Offset: 0x27660F0
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static RPCNetworkBase* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RPCNetworkBase::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<RPCNetworkBase*, creationType>()));
    }
  }; // RPCNetworkBase
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::RPCNetworkBase::SetClassTarget
// Il2CppName: SetClassTarget
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::RPCNetworkBase::*)(::GlobalNamespace::IGorillaSerializeable*, ::GlobalNamespace::GorillaSerializer*)>(&GlobalNamespace::RPCNetworkBase::SetClassTarget)> {
  static const MethodInfo* get() {
    static auto* target = &::il2cpp_utils::GetClassFromName("", "IGorillaSerializeable")->byval_arg;
    static auto* netHandler = &::il2cpp_utils::GetClassFromName("", "GorillaSerializer")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::RPCNetworkBase*), "SetClassTarget", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{target, netHandler});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::RPCNetworkBase::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
