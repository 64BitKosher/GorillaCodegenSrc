// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: NetworkSystem
#include "GlobalNamespace/NetworkSystem.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: FusionInternalRPCs
  class FusionInternalRPCs;
  // Forward declaring type: FusionCallbackHandler
  class FusionCallbackHandler;
  // Forward declaring type: FusionRegionCrawler
  class FusionRegionCrawler;
  // Forward declaring type: RoomConfig
  class RoomConfig;
  // Forward declaring type: NetPlayer
  class NetPlayer;
}
// Forward declaring namespace: Fusion
namespace Fusion {
  // Forward declaring type: NetworkRunner
  class NetworkRunner;
  // Forward declaring type: GameMode
  struct GameMode;
  // Forward declaring type: HostMigrationToken
  class HostMigrationToken;
  // Forward declaring type: PlayerRef
  struct PlayerRef;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: GameObject
  class GameObject;
  // Skipping declaration: Vector3 because it is already included!
  // Skipping declaration: Quaternion because it is already included!
  // Skipping declaration: MonoBehaviour because it is already included!
}
// Forward declaring namespace: Fusion::Photon::Realtime
namespace Fusion::Photon::Realtime {
  // Forward declaring type: AuthenticationValues
  class AuthenticationValues;
}
// Forward declaring namespace: Photon::Voice::Fusion
namespace Photon::Voice::Fusion {
  // Forward declaring type: FusionVoiceBridge
  class FusionVoiceBridge;
}
// Forward declaring namespace: Photon::Voice::Unity
namespace Photon::Voice::Unity {
  // Forward declaring type: VoiceConnection
  class VoiceConnection;
  // Forward declaring type: RemoteVoiceLink
  class RemoteVoiceLink;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: String
  class String;
  // Forward declaring type: Action`1<T>
  template<typename T>
  class Action_1;
  // Skipping declaration: ValueType because it is already included!
  // Forward declaring type: Nullable`1<T>
  template<typename T>
  struct Nullable_1;
}
// Forward declaring namespace: System::Threading::Tasks
namespace System::Threading::Tasks {
  // Forward declaring type: Task
  class Task;
  // Forward declaring type: Task`1<TResult>
  template<typename TResult>
  class Task_1;
}
// Forward declaring namespace: Fusion::Sockets
namespace Fusion::Sockets {
  // Forward declaring type: NetConnectFailedReason
  struct NetConnectFailedReason;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: Dictionary`2<TKey, TValue>
  template<typename TKey, typename TValue>
  class Dictionary_2;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Forward declaring type: NetworkSystemFusion
  class NetworkSystemFusion;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::NetworkSystemFusion);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::NetworkSystemFusion*, "", "NetworkSystemFusion");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0xF8
  #pragma pack(push, 1)
  // Autogenerated type: NetworkSystemFusion
  // [TokenAttribute] Offset: FFFFFFFF
  class NetworkSystemFusion : public ::GlobalNamespace::NetworkSystem {
    public:
    // Nested type: ::GlobalNamespace::NetworkSystemFusion::InternalState
    struct InternalState;
    // Nested type: ::GlobalNamespace::NetworkSystemFusion::$AwaitAuth$d__49
    struct $AwaitAuth$d__49;
    // Nested type: ::GlobalNamespace::NetworkSystemFusion::$AwaitJoiningPlayerClientReady$d__81
    struct $AwaitJoiningPlayerClientReady$d__81;
    // Nested type: ::GlobalNamespace::NetworkSystemFusion::$AwaitSceneReady$d__75
    struct $AwaitSceneReady$d__75;
    // Nested type: ::GlobalNamespace::NetworkSystemFusion::$CloseRunner$d__58
    struct $CloseRunner$d__58;
    // Nested type: ::GlobalNamespace::NetworkSystemFusion::$Connect$d__52
    struct $Connect$d__52;
    // Nested type: ::GlobalNamespace::NetworkSystemFusion::$ConnectToRoom$d__51
    struct $ConnectToRoom$d__51;
    // Nested type: ::GlobalNamespace::NetworkSystemFusion::$Initialise$d__47
    struct $Initialise$d__47;
    // Nested type: ::GlobalNamespace::NetworkSystemFusion::$JoinRandomPublicRoom$d__54
    struct $JoinRandomPublicRoom$d__54;
    // Nested type: ::GlobalNamespace::NetworkSystemFusion::$MakeOrJoinRoom$d__53
    struct $MakeOrJoinRoom$d__53;
    // Nested type: ::GlobalNamespace::NetworkSystemFusion::$ResetSystem$d__60
    struct $ResetSystem$d__60;
    // Nested type: ::GlobalNamespace::NetworkSystemFusion::$ReturnToSinglePlayer$d__57
    struct $ReturnToSinglePlayer$d__57;
    // Size: 0x4
    #pragma pack(push, 1)
    // Autogenerated type: NetworkSystemFusion/InternalState
    // [TokenAttribute] Offset: FFFFFFFF
    struct InternalState/*, public ::System::Enum*/ {
      public:
      public:
      // public System.Int32 value__
      // Size: 0x4
      // Offset: 0x0
      int value;
      // Field size check
      static_assert(sizeof(int) == 0x4);
      public:
      // Creating value type constructor for type: InternalState
      constexpr InternalState(int value_ = {}) noexcept : value{value_} {}
      // Creating interface conversion operator: operator ::System::Enum
      operator ::System::Enum() noexcept {
        return *reinterpret_cast<::System::Enum*>(this);
      }
      // Creating conversion operator: operator int
      constexpr operator int() const noexcept {
        return value;
      }
      // static field const value: static public NetworkSystemFusion/InternalState AwaitingAuth
      static constexpr const int AwaitingAuth = 0;
      // Get static field: static public NetworkSystemFusion/InternalState AwaitingAuth
      static ::GlobalNamespace::NetworkSystemFusion::InternalState _get_AwaitingAuth();
      // Set static field: static public NetworkSystemFusion/InternalState AwaitingAuth
      static void _set_AwaitingAuth(::GlobalNamespace::NetworkSystemFusion::InternalState value);
      // static field const value: static public NetworkSystemFusion/InternalState Idle
      static constexpr const int Idle = 1;
      // Get static field: static public NetworkSystemFusion/InternalState Idle
      static ::GlobalNamespace::NetworkSystemFusion::InternalState _get_Idle();
      // Set static field: static public NetworkSystemFusion/InternalState Idle
      static void _set_Idle(::GlobalNamespace::NetworkSystemFusion::InternalState value);
      // static field const value: static public NetworkSystemFusion/InternalState Searching_Joining
      static constexpr const int Searching_Joining = 2;
      // Get static field: static public NetworkSystemFusion/InternalState Searching_Joining
      static ::GlobalNamespace::NetworkSystemFusion::InternalState _get_Searching_Joining();
      // Set static field: static public NetworkSystemFusion/InternalState Searching_Joining
      static void _set_Searching_Joining(::GlobalNamespace::NetworkSystemFusion::InternalState value);
      // static field const value: static public NetworkSystemFusion/InternalState Searching_Joined
      static constexpr const int Searching_Joined = 3;
      // Get static field: static public NetworkSystemFusion/InternalState Searching_Joined
      static ::GlobalNamespace::NetworkSystemFusion::InternalState _get_Searching_Joined();
      // Set static field: static public NetworkSystemFusion/InternalState Searching_Joined
      static void _set_Searching_Joined(::GlobalNamespace::NetworkSystemFusion::InternalState value);
      // static field const value: static public NetworkSystemFusion/InternalState Searching_JoinFailed
      static constexpr const int Searching_JoinFailed = 4;
      // Get static field: static public NetworkSystemFusion/InternalState Searching_JoinFailed
      static ::GlobalNamespace::NetworkSystemFusion::InternalState _get_Searching_JoinFailed();
      // Set static field: static public NetworkSystemFusion/InternalState Searching_JoinFailed
      static void _set_Searching_JoinFailed(::GlobalNamespace::NetworkSystemFusion::InternalState value);
      // static field const value: static public NetworkSystemFusion/InternalState Searching_Disconnecting
      static constexpr const int Searching_Disconnecting = 5;
      // Get static field: static public NetworkSystemFusion/InternalState Searching_Disconnecting
      static ::GlobalNamespace::NetworkSystemFusion::InternalState _get_Searching_Disconnecting();
      // Set static field: static public NetworkSystemFusion/InternalState Searching_Disconnecting
      static void _set_Searching_Disconnecting(::GlobalNamespace::NetworkSystemFusion::InternalState value);
      // static field const value: static public NetworkSystemFusion/InternalState Searching_Disconnected
      static constexpr const int Searching_Disconnected = 6;
      // Get static field: static public NetworkSystemFusion/InternalState Searching_Disconnected
      static ::GlobalNamespace::NetworkSystemFusion::InternalState _get_Searching_Disconnected();
      // Set static field: static public NetworkSystemFusion/InternalState Searching_Disconnected
      static void _set_Searching_Disconnected(::GlobalNamespace::NetworkSystemFusion::InternalState value);
      // static field const value: static public NetworkSystemFusion/InternalState ConnectingToRoom
      static constexpr const int ConnectingToRoom = 7;
      // Get static field: static public NetworkSystemFusion/InternalState ConnectingToRoom
      static ::GlobalNamespace::NetworkSystemFusion::InternalState _get_ConnectingToRoom();
      // Set static field: static public NetworkSystemFusion/InternalState ConnectingToRoom
      static void _set_ConnectingToRoom(::GlobalNamespace::NetworkSystemFusion::InternalState value);
      // static field const value: static public NetworkSystemFusion/InternalState ConnectedToRoom
      static constexpr const int ConnectedToRoom = 8;
      // Get static field: static public NetworkSystemFusion/InternalState ConnectedToRoom
      static ::GlobalNamespace::NetworkSystemFusion::InternalState _get_ConnectedToRoom();
      // Set static field: static public NetworkSystemFusion/InternalState ConnectedToRoom
      static void _set_ConnectedToRoom(::GlobalNamespace::NetworkSystemFusion::InternalState value);
      // static field const value: static public NetworkSystemFusion/InternalState JoinRoomFailed
      static constexpr const int JoinRoomFailed = 9;
      // Get static field: static public NetworkSystemFusion/InternalState JoinRoomFailed
      static ::GlobalNamespace::NetworkSystemFusion::InternalState _get_JoinRoomFailed();
      // Set static field: static public NetworkSystemFusion/InternalState JoinRoomFailed
      static void _set_JoinRoomFailed(::GlobalNamespace::NetworkSystemFusion::InternalState value);
      // static field const value: static public NetworkSystemFusion/InternalState Disconnecting
      static constexpr const int Disconnecting = 10;
      // Get static field: static public NetworkSystemFusion/InternalState Disconnecting
      static ::GlobalNamespace::NetworkSystemFusion::InternalState _get_Disconnecting();
      // Set static field: static public NetworkSystemFusion/InternalState Disconnecting
      static void _set_Disconnecting(::GlobalNamespace::NetworkSystemFusion::InternalState value);
      // static field const value: static public NetworkSystemFusion/InternalState Disconnected
      static constexpr const int Disconnected = 11;
      // Get static field: static public NetworkSystemFusion/InternalState Disconnected
      static ::GlobalNamespace::NetworkSystemFusion::InternalState _get_Disconnected();
      // Set static field: static public NetworkSystemFusion/InternalState Disconnected
      static void _set_Disconnected(::GlobalNamespace::NetworkSystemFusion::InternalState value);
      // static field const value: static public NetworkSystemFusion/InternalState StateCheckFailed
      static constexpr const int StateCheckFailed = 12;
      // Get static field: static public NetworkSystemFusion/InternalState StateCheckFailed
      static ::GlobalNamespace::NetworkSystemFusion::InternalState _get_StateCheckFailed();
      // Set static field: static public NetworkSystemFusion/InternalState StateCheckFailed
      static void _set_StateCheckFailed(::GlobalNamespace::NetworkSystemFusion::InternalState value);
      // Get instance field reference: public System.Int32 value__
      [[deprecated("Use field access instead!")]] int& dyn_value__();
    }; // NetworkSystemFusion/InternalState
    #pragma pack(pop)
    static check_size<sizeof(NetworkSystemFusion::InternalState), 0 + sizeof(int)> __GlobalNamespace_NetworkSystemFusion_InternalStateSizeCheck;
    static_assert(sizeof(NetworkSystemFusion::InternalState) == 0x4);
    public:
    // private Fusion.NetworkRunner <runner>k__BackingField
    // Size: 0x8
    // Offset: 0xA0
    ::Fusion::NetworkRunner* runner;
    // Field size check
    static_assert(sizeof(::Fusion::NetworkRunner*) == 0x8);
    // private NetworkSystemFusion/InternalState internalState
    // Size: 0x4
    // Offset: 0xA8
    ::GlobalNamespace::NetworkSystemFusion::InternalState internalState;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::NetworkSystemFusion::InternalState) == 0x4);
    // Padding between fields: internalState and: internalRPCProvider
    char __padding1[0x4] = {};
    // private FusionInternalRPCs internalRPCProvider
    // Size: 0x8
    // Offset: 0xB0
    ::GlobalNamespace::FusionInternalRPCs* internalRPCProvider;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::FusionInternalRPCs*) == 0x8);
    // private FusionCallbackHandler callbackHandler
    // Size: 0x8
    // Offset: 0xB8
    ::GlobalNamespace::FusionCallbackHandler* callbackHandler;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::FusionCallbackHandler*) == 0x8);
    // private FusionRegionCrawler regionCrawler
    // Size: 0x8
    // Offset: 0xC0
    ::GlobalNamespace::FusionRegionCrawler* regionCrawler;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::FusionRegionCrawler*) == 0x8);
    // private UnityEngine.GameObject volatileNetObj
    // Size: 0x8
    // Offset: 0xC8
    ::UnityEngine::GameObject* volatileNetObj;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // private Fusion.Photon.Realtime.AuthenticationValues cachedPlayfabAuth
    // Size: 0x8
    // Offset: 0xD0
    ::Fusion::Photon::Realtime::AuthenticationValues* cachedPlayfabAuth;
    // Field size check
    static_assert(sizeof(::Fusion::Photon::Realtime::AuthenticationValues*) == 0x8);
    // private System.Boolean lastConnectAttempt_WasMissing
    // Size: 0x1
    // Offset: 0xD8
    bool lastConnectAttempt_WasMissing;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean lastConnectAttempt_WasFull
    // Size: 0x1
    // Offset: 0xD9
    bool lastConnectAttempt_WasFull;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: lastConnectAttempt_WasFull and: cachedPlayerIDs
    char __padding8[0x6] = {};
    // private System.Int32[] cachedPlayerIDs
    // Size: 0x8
    // Offset: 0xE0
    ::ArrayW<int> cachedPlayerIDs;
    // Field size check
    static_assert(sizeof(::ArrayW<int>) == 0x8);
    // private Photon.Voice.Fusion.FusionVoiceBridge FusionVoiceBridge
    // Size: 0x8
    // Offset: 0xE8
    ::Photon::Voice::Fusion::FusionVoiceBridge* FusionVoiceBridge;
    // Field size check
    static_assert(sizeof(::Photon::Voice::Fusion::FusionVoiceBridge*) == 0x8);
    // private Photon.Voice.Unity.VoiceConnection FusionVoice
    // Size: 0x8
    // Offset: 0xF0
    ::Photon::Voice::Unity::VoiceConnection* FusionVoice;
    // Field size check
    static_assert(sizeof(::Photon::Voice::Unity::VoiceConnection*) == 0x8);
    public:
    // static field const value: static private System.String playerPropertiesPath
    static constexpr const char* playerPropertiesPath = "P_FusionProperties";
    // Get static field: static private System.String playerPropertiesPath
    static ::StringW _get_playerPropertiesPath();
    // Set static field: static private System.String playerPropertiesPath
    static void _set_playerPropertiesPath(::StringW value);
    // Get instance field reference: private Fusion.NetworkRunner <runner>k__BackingField
    [[deprecated("Use field access instead!")]] ::Fusion::NetworkRunner*& dyn_$runner$k__BackingField();
    // Get instance field reference: private NetworkSystemFusion/InternalState internalState
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::NetworkSystemFusion::InternalState& dyn_internalState();
    // Get instance field reference: private FusionInternalRPCs internalRPCProvider
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::FusionInternalRPCs*& dyn_internalRPCProvider();
    // Get instance field reference: private FusionCallbackHandler callbackHandler
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::FusionCallbackHandler*& dyn_callbackHandler();
    // Get instance field reference: private FusionRegionCrawler regionCrawler
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::FusionRegionCrawler*& dyn_regionCrawler();
    // Get instance field reference: private UnityEngine.GameObject volatileNetObj
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_volatileNetObj();
    // Get instance field reference: private Fusion.Photon.Realtime.AuthenticationValues cachedPlayfabAuth
    [[deprecated("Use field access instead!")]] ::Fusion::Photon::Realtime::AuthenticationValues*& dyn_cachedPlayfabAuth();
    // Get instance field reference: private System.Boolean lastConnectAttempt_WasMissing
    [[deprecated("Use field access instead!")]] bool& dyn_lastConnectAttempt_WasMissing();
    // Get instance field reference: private System.Boolean lastConnectAttempt_WasFull
    [[deprecated("Use field access instead!")]] bool& dyn_lastConnectAttempt_WasFull();
    // Get instance field reference: private System.Int32[] cachedPlayerIDs
    [[deprecated("Use field access instead!")]] ::ArrayW<int>& dyn_cachedPlayerIDs();
    // Get instance field reference: private Photon.Voice.Fusion.FusionVoiceBridge FusionVoiceBridge
    [[deprecated("Use field access instead!")]] ::Photon::Voice::Fusion::FusionVoiceBridge*& dyn_FusionVoiceBridge();
    // Get instance field reference: private Photon.Voice.Unity.VoiceConnection FusionVoice
    [[deprecated("Use field access instead!")]] ::Photon::Voice::Unity::VoiceConnection*& dyn_FusionVoice();
    // public Fusion.NetworkRunner get_runner()
    // Offset: 0x2906010
    ::Fusion::NetworkRunner* get_runner();
    // private System.Void set_runner(Fusion.NetworkRunner value)
    // Offset: 0x2906018
    void set_runner(::Fusion::NetworkRunner* value);
    // private System.Void CreateRegionCrawler()
    // Offset: 0x29064F0
    void CreateRegionCrawler();
    // private System.Threading.Tasks.Task AwaitAuth()
    // Offset: 0x29065C8
    ::System::Threading::Tasks::Task* AwaitAuth();
    // private System.Threading.Tasks.Task`1<System.Boolean> Connect(Fusion.GameMode mode, System.String targetSessionName, RoomConfig opts)
    // Offset: 0x2906B4C
    ::System::Threading::Tasks::Task_1<bool>* Connect(::Fusion::GameMode mode, ::StringW targetSessionName, ::GlobalNamespace::RoomConfig* opts);
    // private System.Threading.Tasks.Task`1<NetJoinResult> MakeOrJoinRoom(System.String roomName, RoomConfig opts)
    // Offset: 0x2906CA0
    ::System::Threading::Tasks::Task_1<::GlobalNamespace::NetJoinResult>* MakeOrJoinRoom(::StringW roomName, ::GlobalNamespace::RoomConfig* opts);
    // private System.Threading.Tasks.Task`1<NetJoinResult> JoinRandomPublicRoom(RoomConfig opts)
    // Offset: 0x2906DD4
    ::System::Threading::Tasks::Task_1<::GlobalNamespace::NetJoinResult>* JoinRandomPublicRoom(::GlobalNamespace::RoomConfig* opts);
    // private System.Threading.Tasks.Task CloseRunner()
    // Offset: 0x2907048
    ::System::Threading::Tasks::Task* CloseRunner();
    // public System.Void MigrateHost(Fusion.HostMigrationToken hostMigrationToken)
    // Offset: 0x290712C
    void MigrateHost(::Fusion::HostMigrationToken* hostMigrationToken);
    // public System.Void ResetSystem()
    // Offset: 0x29071A8
    void ResetSystem();
    // private System.Void AddVoice()
    // Offset: 0x290725C
    void AddVoice();
    // private System.Void SetupVoice()
    // Offset: 0x29072C4
    void SetupVoice();
    // public System.Void OnJoinedSession()
    // Offset: 0x2908B94
    void OnJoinedSession();
    // public System.Void OnJoinFailed(Fusion.Sockets.NetConnectFailedReason reason)
    // Offset: 0x2908B98
    void OnJoinFailed(::Fusion::Sockets::NetConnectFailedReason reason);
    // public System.Void OnDisconnectedFromSession()
    // Offset: 0x2908BC0
    void OnDisconnectedFromSession();
    // public System.Void OnRunnerShutDown()
    // Offset: 0x2908C5C
    void OnRunnerShutDown();
    // public System.Void OnFusionPlayerJoined(Fusion.PlayerRef player)
    // Offset: 0x2908CE0
    void OnFusionPlayerJoined(::Fusion::PlayerRef player);
    // private System.Threading.Tasks.Task AwaitJoiningPlayerClientReady(Fusion.PlayerRef player)
    // Offset: 0x2908CE8
    ::System::Threading::Tasks::Task* AwaitJoiningPlayerClientReady(::Fusion::PlayerRef player);
    // public System.Void OnFusionPlayerLeft(Fusion.PlayerRef player)
    // Offset: 0x2908DD4
    void OnFusionPlayerLeft(::Fusion::PlayerRef player);
    // private Fusion.PlayerRef GetPlayerRef(System.Int32 playerID)
    // Offset: 0x29086BC
    ::Fusion::PlayerRef GetPlayerRef(int playerID);
    // private System.Void <>n__0()
    // Offset: 0x290B118
    void $$n__0();
    // private System.Void <SetupVoice>b__62_0(System.Action`1<Photon.Voice.Unity.RemoteVoiceLink> callback)
    // Offset: 0x290B264
    void $SetupVoice$b__62_0(::System::Action_1<::Photon::Voice::Unity::RemoteVoiceLink*>* callback);
    // public override System.Boolean get_IsOnline()
    // Offset: 0x2906020
    // Implemented from: NetworkSystem
    // Base method: System.Boolean NetworkSystem::get_IsOnline()
    bool get_IsOnline();
    // public override System.Boolean get_InRoom()
    // Offset: 0x29060AC
    // Implemented from: NetworkSystem
    // Base method: System.Boolean NetworkSystem::get_InRoom()
    bool get_InRoom();
    // public override System.String get_RoomName()
    // Offset: 0x2906160
    // Implemented from: NetworkSystem
    // Base method: System.String NetworkSystem::get_RoomName()
    ::StringW get_RoomName();
    // public override System.String get_GameModeString()
    // Offset: 0x290618C
    // Implemented from: NetworkSystem
    // Base method: System.String NetworkSystem::get_GameModeString()
    ::StringW get_GameModeString();
    // public override System.String get_CurrentRegion()
    // Offset: 0x2906224
    // Implemented from: NetworkSystem
    // Base method: System.String NetworkSystem::get_CurrentRegion()
    ::StringW get_CurrentRegion();
    // public override System.Boolean get_SessionIsPrivate()
    // Offset: 0x2906250
    // Implemented from: NetworkSystem
    // Base method: System.Boolean NetworkSystem::get_SessionIsPrivate()
    bool get_SessionIsPrivate();
    // public override System.Int32 get_LocalPlayerID()
    // Offset: 0x290627C
    // Implemented from: NetworkSystem
    // Base method: System.Int32 NetworkSystem::get_LocalPlayerID()
    int get_LocalPlayerID();
    // public override System.Int32 get_MasterAuthID()
    // Offset: 0x29062AC
    // Implemented from: NetworkSystem
    // Base method: System.Int32 NetworkSystem::get_MasterAuthID()
    int get_MasterAuthID();
    // public override System.String get_CurrentPhotonBackend()
    // Offset: 0x2906368
    // Implemented from: NetworkSystem
    // Base method: System.String NetworkSystem::get_CurrentPhotonBackend()
    ::StringW get_CurrentPhotonBackend();
    // public override System.Int32[] get_AllPlayerIDs()
    // Offset: 0x29063A8
    // Implemented from: NetworkSystem
    // Base method: System.Int32[] NetworkSystem::get_AllPlayerIDs()
    ::ArrayW<int> get_AllPlayerIDs();
    // public override System.Single get_SimTime()
    // Offset: 0x29063B0
    // Implemented from: NetworkSystem
    // Base method: System.Single NetworkSystem::get_SimTime()
    float get_SimTime();
    // public override System.Single get_SimDeltaTime()
    // Offset: 0x29063CC
    // Implemented from: NetworkSystem
    // Base method: System.Single NetworkSystem::get_SimDeltaTime()
    float get_SimDeltaTime();
    // public override System.Int32 get_SimTick()
    // Offset: 0x29063E8
    // Implemented from: NetworkSystem
    // Base method: System.Int32 NetworkSystem::get_SimTick()
    int get_SimTick();
    // public override System.Int32 get_RoomPlayerCount()
    // Offset: 0x2906410
    // Implemented from: NetworkSystem
    // Base method: System.Int32 NetworkSystem::get_RoomPlayerCount()
    int get_RoomPlayerCount();
    // public override Photon.Voice.Unity.VoiceConnection get_VoiceConnection()
    // Offset: 0x2906434
    // Implemented from: NetworkSystem
    // Base method: Photon.Voice.Unity.VoiceConnection NetworkSystem::get_VoiceConnection()
    ::Photon::Voice::Unity::VoiceConnection* get_VoiceConnection();
    // public override System.Void Initialise()
    // Offset: 0x290643C
    // Implemented from: NetworkSystem
    // Base method: System.Void NetworkSystem::Initialise()
    void Initialise();
    // public override System.Void SetAuthenticationValues(System.Collections.Generic.Dictionary`2<System.String,System.String> authValues)
    // Offset: 0x29066AC
    // Implemented from: NetworkSystem
    // Base method: System.Void NetworkSystem::SetAuthenticationValues(System.Collections.Generic.Dictionary`2<System.String,System.String> authValues)
    void SetAuthenticationValues(::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* authValues);
    // public override System.Threading.Tasks.Task`1<NetJoinResult> ConnectToRoom(System.String roomName, RoomConfig opts, System.Int32 regionIndex)
    // Offset: 0x2906A1C
    // Implemented from: NetworkSystem
    // Base method: System.Threading.Tasks.Task`1<NetJoinResult> NetworkSystem::ConnectToRoom(System.String roomName, RoomConfig opts, System.Int32 regionIndex)
    ::System::Threading::Tasks::Task_1<::GlobalNamespace::NetJoinResult>* ConnectToRoom(::StringW roomName, ::GlobalNamespace::RoomConfig* opts, int regionIndex);
    // public override System.Threading.Tasks.Task JoinFriendsRoom(System.String userID, System.Int32 actorID, System.String keyToFollow, System.String shufflerToFollow)
    // Offset: 0x2906EF0
    // Implemented from: NetworkSystem
    // Base method: System.Threading.Tasks.Task NetworkSystem::JoinFriendsRoom(System.String userID, System.Int32 actorID, System.String keyToFollow, System.String shufflerToFollow)
    ::System::Threading::Tasks::Task* JoinFriendsRoom(::StringW userID, int actorID, ::StringW keyToFollow, ::StringW shufflerToFollow);
    // public override System.Void JoinPubWithFriends()
    // Offset: 0x2906F28
    // Implemented from: NetworkSystem
    // Base method: System.Void NetworkSystem::JoinPubWithFriends()
    void JoinPubWithFriends();
    // public override System.Threading.Tasks.Task ReturnToSinglePlayer()
    // Offset: 0x2906F60
    // Implemented from: NetworkSystem
    // Base method: System.Threading.Tasks.Task NetworkSystem::ReturnToSinglePlayer()
    ::System::Threading::Tasks::Task* ReturnToSinglePlayer();
    // public override System.Void AddRemoteVoiceAddedCallback(System.Action`1<Photon.Voice.Unity.RemoteVoiceLink> callback)
    // Offset: 0x29076D4
    // Implemented from: NetworkSystem
    // Base method: System.Void NetworkSystem::AddRemoteVoiceAddedCallback(System.Action`1<Photon.Voice.Unity.RemoteVoiceLink> callback)
    void AddRemoteVoiceAddedCallback(::System::Action_1<::Photon::Voice::Unity::RemoteVoiceLink*>* callback);
    // public override UnityEngine.GameObject NetInstantiate(UnityEngine.GameObject prefab, UnityEngine.Vector3 position, UnityEngine.Quaternion rotation, System.Boolean isRoomObject)
    // Offset: 0x2907780
    // Implemented from: NetworkSystem
    // Base method: UnityEngine.GameObject NetworkSystem::NetInstantiate(UnityEngine.GameObject prefab, UnityEngine.Vector3 position, UnityEngine.Quaternion rotation, System.Boolean isRoomObject)
    ::UnityEngine::GameObject* NetInstantiate(::UnityEngine::GameObject* prefab, ::UnityEngine::Vector3 position, ::UnityEngine::Quaternion rotation, bool isRoomObject);
    // public override UnityEngine.GameObject NetInstantiate(UnityEngine.GameObject prefab, UnityEngine.Vector3 position, UnityEngine.Quaternion rotation, System.Int32 playerAuthID, System.Boolean isRoomObject)
    // Offset: 0x2907968
    // Implemented from: NetworkSystem
    // Base method: UnityEngine.GameObject NetworkSystem::NetInstantiate(UnityEngine.GameObject prefab, UnityEngine.Vector3 position, UnityEngine.Quaternion rotation, System.Int32 playerAuthID, System.Boolean isRoomObject)
    ::UnityEngine::GameObject* NetInstantiate(::UnityEngine::GameObject* prefab, ::UnityEngine::Vector3 position, ::UnityEngine::Quaternion rotation, int playerAuthID, bool isRoomObject);
    // public override System.Void NetDestroy(UnityEngine.GameObject instance)
    // Offset: 0x2907E68
    // Implemented from: NetworkSystem
    // Base method: System.Void NetworkSystem::NetDestroy(UnityEngine.GameObject instance)
    void NetDestroy(::UnityEngine::GameObject* instance);
    // public override System.Boolean ShouldSpawnLocally(System.Int32 playerID)
    // Offset: 0x2907F20
    // Implemented from: NetworkSystem
    // Base method: System.Boolean NetworkSystem::ShouldSpawnLocally(System.Int32 playerID)
    bool ShouldSpawnLocally(int playerID);
    // public override System.Void CallRPC(UnityEngine.MonoBehaviour component, NetworkSystem/RPC rpcMethod, System.Boolean sendToSelf)
    // Offset: 0x2907FAC
    // Implemented from: NetworkSystem
    // Base method: System.Void NetworkSystem::CallRPC(UnityEngine.MonoBehaviour component, NetworkSystem/RPC rpcMethod, System.Boolean sendToSelf)
    void CallRPC(::UnityEngine::MonoBehaviour* component, ::GlobalNamespace::NetworkSystem::RPC* rpcMethod, bool sendToSelf);
    // public override System.Void CallRPC(UnityEngine.MonoBehaviour component, NetworkSystem/RPC rpcMethod, RPCArgBuffer`1<T> args, System.Boolean sendToSelf)
    // Offset: 0xFFFFFFFFFFFFFFFF
    // Implemented from: NetworkSystem
    // Base method: System.Void NetworkSystem::CallRPC(UnityEngine.MonoBehaviour component, NetworkSystem/RPC rpcMethod, RPCArgBuffer`1<T> args, System.Boolean sendToSelf)
    template<class T>
    void CallRPC(::UnityEngine::MonoBehaviour* component, ::GlobalNamespace::NetworkSystem::RPC* rpcMethod, ::GlobalNamespace::RPCArgBuffer_1<T> args, bool sendToSelf) {
      static_assert(std::is_convertible_v<T, ::System::ValueType*>);
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkSystemFusion::CallRPC");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::NetworkSystem*), -1));
      auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___generic__method, component, rpcMethod, args, sendToSelf);
    }
    // public override System.Void CallRPC(UnityEngine.MonoBehaviour component, NetworkSystem/StringRPC rpcMethod, System.String message, System.Boolean sendToSelf)
    // Offset: 0x2908310
    // Implemented from: NetworkSystem
    // Base method: System.Void NetworkSystem::CallRPC(UnityEngine.MonoBehaviour component, NetworkSystem/StringRPC rpcMethod, System.String message, System.Boolean sendToSelf)
    void CallRPC(::UnityEngine::MonoBehaviour* component, ::GlobalNamespace::NetworkSystem::StringRPC* rpcMethod, ::StringW message, bool sendToSelf);
    // public override System.Void CallRPC(System.Int32 targetPlayerID, UnityEngine.MonoBehaviour component, NetworkSystem/RPC rpcMethod)
    // Offset: 0x290860C
    // Implemented from: NetworkSystem
    // Base method: System.Void NetworkSystem::CallRPC(System.Int32 targetPlayerID, UnityEngine.MonoBehaviour component, NetworkSystem/RPC rpcMethod)
    void CallRPC(int targetPlayerID, ::UnityEngine::MonoBehaviour* component, ::GlobalNamespace::NetworkSystem::RPC* rpcMethod);
    // public override System.Void CallRPC(System.Int32 targetPlayerID, UnityEngine.MonoBehaviour component, NetworkSystem/RPC rpcMethod, RPCArgBuffer`1<T> args)
    // Offset: 0xFFFFFFFFFFFFFFFF
    // Implemented from: NetworkSystem
    // Base method: System.Void NetworkSystem::CallRPC(System.Int32 targetPlayerID, UnityEngine.MonoBehaviour component, NetworkSystem/RPC rpcMethod, RPCArgBuffer`1<T> args)
    template<class T>
    void CallRPC(int targetPlayerID, ::UnityEngine::MonoBehaviour* component, ::GlobalNamespace::NetworkSystem::RPC* rpcMethod, ::GlobalNamespace::RPCArgBuffer_1<T> args) {
      static_assert(std::is_convertible_v<T, ::System::ValueType*>);
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkSystemFusion::CallRPC");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::NetworkSystem*), -1));
      auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___generic__method, targetPlayerID, component, rpcMethod, args);
    }
    // public override System.Void CallRPC(System.Int32 targetPlayerID, UnityEngine.MonoBehaviour component, NetworkSystem/StringRPC rpcMethod, System.String message)
    // Offset: 0x2908A74
    // Implemented from: NetworkSystem
    // Base method: System.Void NetworkSystem::CallRPC(System.Int32 targetPlayerID, UnityEngine.MonoBehaviour component, NetworkSystem/StringRPC rpcMethod, System.String message)
    void CallRPC(int targetPlayerID, ::UnityEngine::MonoBehaviour* component, ::GlobalNamespace::NetworkSystem::StringRPC* rpcMethod, ::StringW message);
    // public override System.String GetRandomWeightedRegion()
    // Offset: 0x2908A78
    // Implemented from: NetworkSystem
    // Base method: System.String NetworkSystem::GetRandomWeightedRegion()
    ::StringW GetRandomWeightedRegion();
    // public override System.Threading.Tasks.Task AwaitSceneReady()
    // Offset: 0x2908AB0
    // Implemented from: NetworkSystem
    // Base method: System.Threading.Tasks.Task NetworkSystem::AwaitSceneReady()
    ::System::Threading::Tasks::Task* AwaitSceneReady();
    // protected override System.Void UpdateNetPlayerList()
    // Offset: 0x2908F88
    // Implemented from: NetworkSystem
    // Base method: System.Void NetworkSystem::UpdateNetPlayerList()
    void UpdateNetPlayerList();
    // protected override System.Void UpdatePlayerIDCache()
    // Offset: 0x29099CC
    // Implemented from: NetworkSystem
    // Base method: System.Void NetworkSystem::UpdatePlayerIDCache()
    void UpdatePlayerIDCache();
    // public override System.Void SetPlayerObject(UnityEngine.GameObject playerInstance, System.Nullable`1<System.Int32> owningPlayerID)
    // Offset: 0x2909DBC
    // Implemented from: NetworkSystem
    // Base method: System.Void NetworkSystem::SetPlayerObject(UnityEngine.GameObject playerInstance, System.Nullable`1<System.Int32> owningPlayerID)
    void SetPlayerObject(::UnityEngine::GameObject* playerInstance, ::System::Nullable_1<int> owningPlayerID);
    // public override NetPlayer GetLocalPlayer()
    // Offset: 0x2909E94
    // Implemented from: NetworkSystem
    // Base method: NetPlayer NetworkSystem::GetLocalPlayer()
    ::GlobalNamespace::NetPlayer* GetLocalPlayer();
    // public override NetPlayer GetPlayer(System.Int32 PlayerID)
    // Offset: 0x290A0AC
    // Implemented from: NetworkSystem
    // Base method: NetPlayer NetworkSystem::GetPlayer(System.Int32 PlayerID)
    ::GlobalNamespace::NetPlayer* GetPlayer(int PlayerID);
    // public override System.Void SetMyNickName(System.String name)
    // Offset: 0x290A404
    // Implemented from: NetworkSystem
    // Base method: System.Void NetworkSystem::SetMyNickName(System.String name)
    void SetMyNickName(::StringW name);
    // public override System.String GetMyNickName()
    // Offset: 0x290A5BC
    // Implemented from: NetworkSystem
    // Base method: System.String NetworkSystem::GetMyNickName()
    ::StringW GetMyNickName();
    // public override System.String GetMyDefaultName()
    // Offset: 0x290A600
    // Implemented from: NetworkSystem
    // Base method: System.String NetworkSystem::GetMyDefaultName()
    ::StringW GetMyDefaultName();
    // public override System.String GetNickName(System.Int32 playerID)
    // Offset: 0x290A644
    // Implemented from: NetworkSystem
    // Base method: System.String NetworkSystem::GetNickName(System.Int32 playerID)
    ::StringW GetNickName(int playerID);
    // public override System.String GetMyUserID()
    // Offset: 0x290A850
    // Implemented from: NetworkSystem
    // Base method: System.String NetworkSystem::GetMyUserID()
    ::StringW GetMyUserID();
    // public override System.String GetUserID(System.Int32 playerID)
    // Offset: 0x290A880
    // Implemented from: NetworkSystem
    // Base method: System.String NetworkSystem::GetUserID(System.Int32 playerID)
    ::StringW GetUserID(int playerID);
    // public override System.Void SetMyTutorialComplete()
    // Offset: 0x290A8A8
    // Implemented from: NetworkSystem
    // Base method: System.Void NetworkSystem::SetMyTutorialComplete()
    void SetMyTutorialComplete();
    // public override System.Boolean GetMyTutorialCompletion()
    // Offset: 0x290A958
    // Implemented from: NetworkSystem
    // Base method: System.Boolean NetworkSystem::GetMyTutorialCompletion()
    bool GetMyTutorialCompletion();
    // public override System.Boolean GetPlayerTutorialCompletion(System.Int32 playerID)
    // Offset: 0x290A9DC
    // Implemented from: NetworkSystem
    // Base method: System.Boolean NetworkSystem::GetPlayerTutorialCompletion(System.Int32 playerID)
    bool GetPlayerTutorialCompletion(int playerID);
    // public override System.Int32 GlobalPlayerCount()
    // Offset: 0x290AB8C
    // Implemented from: NetworkSystem
    // Base method: System.Int32 NetworkSystem::GlobalPlayerCount()
    int GlobalPlayerCount();
    // public override System.Int32 GetOwningPlayerID(UnityEngine.GameObject obj)
    // Offset: 0x290AC0C
    // Implemented from: NetworkSystem
    // Base method: System.Int32 NetworkSystem::GetOwningPlayerID(UnityEngine.GameObject obj)
    int GetOwningPlayerID(::UnityEngine::GameObject* obj);
    // public override System.Boolean IsObjectLocallyOwned(UnityEngine.GameObject obj)
    // Offset: 0x290ACC4
    // Implemented from: NetworkSystem
    // Base method: System.Boolean NetworkSystem::IsObjectLocallyOwned(UnityEngine.GameObject obj)
    bool IsObjectLocallyOwned(::UnityEngine::GameObject* obj);
    // public override System.Boolean IsTotalAuthority()
    // Offset: 0x290AD88
    // Implemented from: NetworkSystem
    // Base method: System.Boolean NetworkSystem::IsTotalAuthority()
    bool IsTotalAuthority();
    // public override System.Boolean ShouldWriteObjectData(UnityEngine.GameObject obj)
    // Offset: 0x290ADF0
    // Implemented from: NetworkSystem
    // Base method: System.Boolean NetworkSystem::ShouldWriteObjectData(UnityEngine.GameObject obj)
    bool ShouldWriteObjectData(::UnityEngine::GameObject* obj);
    // public override System.Boolean ShouldUpdateObject(UnityEngine.GameObject obj)
    // Offset: 0x290AE6C
    // Implemented from: NetworkSystem
    // Base method: System.Boolean NetworkSystem::ShouldUpdateObject(UnityEngine.GameObject obj)
    bool ShouldUpdateObject(::UnityEngine::GameObject* obj);
    // public override System.Boolean IsObjectRoomObject(UnityEngine.GameObject obj)
    // Offset: 0x290AF6C
    // Implemented from: NetworkSystem
    // Base method: System.Boolean NetworkSystem::IsObjectRoomObject(UnityEngine.GameObject obj)
    bool IsObjectRoomObject(::UnityEngine::GameObject* obj);
    // public System.Void .ctor()
    // Offset: 0x290AFE8
    // Implemented from: NetworkSystem
    // Base method: System.Void NetworkSystem::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static NetworkSystemFusion* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkSystemFusion::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<NetworkSystemFusion*, creationType>()));
    }
  }; // NetworkSystemFusion
  #pragma pack(pop)
  static check_size<sizeof(NetworkSystemFusion), 240 + sizeof(::Photon::Voice::Unity::VoiceConnection*)> __GlobalNamespace_NetworkSystemFusionSizeCheck;
  static_assert(sizeof(NetworkSystemFusion) == 0xF8);
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::NetworkSystemFusion::InternalState, "", "NetworkSystemFusion/InternalState");
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::NetworkSystemFusion::get_runner
// Il2CppName: get_runner
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Fusion::NetworkRunner* (GlobalNamespace::NetworkSystemFusion::*)()>(&GlobalNamespace::NetworkSystemFusion::get_runner)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NetworkSystemFusion*), "get_runner", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NetworkSystemFusion::set_runner
// Il2CppName: set_runner
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::NetworkSystemFusion::*)(::Fusion::NetworkRunner*)>(&GlobalNamespace::NetworkSystemFusion::set_runner)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("Fusion", "NetworkRunner")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NetworkSystemFusion*), "set_runner", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NetworkSystemFusion::CreateRegionCrawler
// Il2CppName: CreateRegionCrawler
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::NetworkSystemFusion::*)()>(&GlobalNamespace::NetworkSystemFusion::CreateRegionCrawler)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NetworkSystemFusion*), "CreateRegionCrawler", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NetworkSystemFusion::AwaitAuth
// Il2CppName: AwaitAuth
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Threading::Tasks::Task* (GlobalNamespace::NetworkSystemFusion::*)()>(&GlobalNamespace::NetworkSystemFusion::AwaitAuth)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NetworkSystemFusion*), "AwaitAuth", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NetworkSystemFusion::Connect
// Il2CppName: Connect
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Threading::Tasks::Task_1<bool>* (GlobalNamespace::NetworkSystemFusion::*)(::Fusion::GameMode, ::StringW, ::GlobalNamespace::RoomConfig*)>(&GlobalNamespace::NetworkSystemFusion::Connect)> {
  static const MethodInfo* get() {
    static auto* mode = &::il2cpp_utils::GetClassFromName("Fusion", "GameMode")->byval_arg;
    static auto* targetSessionName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* opts = &::il2cpp_utils::GetClassFromName("", "RoomConfig")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NetworkSystemFusion*), "Connect", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{mode, targetSessionName, opts});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NetworkSystemFusion::MakeOrJoinRoom
// Il2CppName: MakeOrJoinRoom
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Threading::Tasks::Task_1<::GlobalNamespace::NetJoinResult>* (GlobalNamespace::NetworkSystemFusion::*)(::StringW, ::GlobalNamespace::RoomConfig*)>(&GlobalNamespace::NetworkSystemFusion::MakeOrJoinRoom)> {
  static const MethodInfo* get() {
    static auto* roomName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* opts = &::il2cpp_utils::GetClassFromName("", "RoomConfig")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NetworkSystemFusion*), "MakeOrJoinRoom", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{roomName, opts});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NetworkSystemFusion::JoinRandomPublicRoom
// Il2CppName: JoinRandomPublicRoom
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Threading::Tasks::Task_1<::GlobalNamespace::NetJoinResult>* (GlobalNamespace::NetworkSystemFusion::*)(::GlobalNamespace::RoomConfig*)>(&GlobalNamespace::NetworkSystemFusion::JoinRandomPublicRoom)> {
  static const MethodInfo* get() {
    static auto* opts = &::il2cpp_utils::GetClassFromName("", "RoomConfig")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NetworkSystemFusion*), "JoinRandomPublicRoom", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{opts});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NetworkSystemFusion::CloseRunner
// Il2CppName: CloseRunner
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Threading::Tasks::Task* (GlobalNamespace::NetworkSystemFusion::*)()>(&GlobalNamespace::NetworkSystemFusion::CloseRunner)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NetworkSystemFusion*), "CloseRunner", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NetworkSystemFusion::MigrateHost
// Il2CppName: MigrateHost
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::NetworkSystemFusion::*)(::Fusion::HostMigrationToken*)>(&GlobalNamespace::NetworkSystemFusion::MigrateHost)> {
  static const MethodInfo* get() {
    static auto* hostMigrationToken = &::il2cpp_utils::GetClassFromName("Fusion", "HostMigrationToken")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NetworkSystemFusion*), "MigrateHost", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{hostMigrationToken});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NetworkSystemFusion::ResetSystem
// Il2CppName: ResetSystem
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::NetworkSystemFusion::*)()>(&GlobalNamespace::NetworkSystemFusion::ResetSystem)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NetworkSystemFusion*), "ResetSystem", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NetworkSystemFusion::AddVoice
// Il2CppName: AddVoice
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::NetworkSystemFusion::*)()>(&GlobalNamespace::NetworkSystemFusion::AddVoice)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NetworkSystemFusion*), "AddVoice", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NetworkSystemFusion::SetupVoice
// Il2CppName: SetupVoice
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::NetworkSystemFusion::*)()>(&GlobalNamespace::NetworkSystemFusion::SetupVoice)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NetworkSystemFusion*), "SetupVoice", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NetworkSystemFusion::OnJoinedSession
// Il2CppName: OnJoinedSession
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::NetworkSystemFusion::*)()>(&GlobalNamespace::NetworkSystemFusion::OnJoinedSession)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NetworkSystemFusion*), "OnJoinedSession", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NetworkSystemFusion::OnJoinFailed
// Il2CppName: OnJoinFailed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::NetworkSystemFusion::*)(::Fusion::Sockets::NetConnectFailedReason)>(&GlobalNamespace::NetworkSystemFusion::OnJoinFailed)> {
  static const MethodInfo* get() {
    static auto* reason = &::il2cpp_utils::GetClassFromName("Fusion.Sockets", "NetConnectFailedReason")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NetworkSystemFusion*), "OnJoinFailed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{reason});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NetworkSystemFusion::OnDisconnectedFromSession
// Il2CppName: OnDisconnectedFromSession
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::NetworkSystemFusion::*)()>(&GlobalNamespace::NetworkSystemFusion::OnDisconnectedFromSession)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NetworkSystemFusion*), "OnDisconnectedFromSession", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NetworkSystemFusion::OnRunnerShutDown
// Il2CppName: OnRunnerShutDown
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::NetworkSystemFusion::*)()>(&GlobalNamespace::NetworkSystemFusion::OnRunnerShutDown)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NetworkSystemFusion*), "OnRunnerShutDown", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NetworkSystemFusion::OnFusionPlayerJoined
// Il2CppName: OnFusionPlayerJoined
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::NetworkSystemFusion::*)(::Fusion::PlayerRef)>(&GlobalNamespace::NetworkSystemFusion::OnFusionPlayerJoined)> {
  static const MethodInfo* get() {
    static auto* player = &::il2cpp_utils::GetClassFromName("Fusion", "PlayerRef")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NetworkSystemFusion*), "OnFusionPlayerJoined", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{player});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NetworkSystemFusion::AwaitJoiningPlayerClientReady
// Il2CppName: AwaitJoiningPlayerClientReady
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Threading::Tasks::Task* (GlobalNamespace::NetworkSystemFusion::*)(::Fusion::PlayerRef)>(&GlobalNamespace::NetworkSystemFusion::AwaitJoiningPlayerClientReady)> {
  static const MethodInfo* get() {
    static auto* player = &::il2cpp_utils::GetClassFromName("Fusion", "PlayerRef")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NetworkSystemFusion*), "AwaitJoiningPlayerClientReady", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{player});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NetworkSystemFusion::OnFusionPlayerLeft
// Il2CppName: OnFusionPlayerLeft
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::NetworkSystemFusion::*)(::Fusion::PlayerRef)>(&GlobalNamespace::NetworkSystemFusion::OnFusionPlayerLeft)> {
  static const MethodInfo* get() {
    static auto* player = &::il2cpp_utils::GetClassFromName("Fusion", "PlayerRef")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NetworkSystemFusion*), "OnFusionPlayerLeft", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{player});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NetworkSystemFusion::GetPlayerRef
// Il2CppName: GetPlayerRef
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Fusion::PlayerRef (GlobalNamespace::NetworkSystemFusion::*)(int)>(&GlobalNamespace::NetworkSystemFusion::GetPlayerRef)> {
  static const MethodInfo* get() {
    static auto* playerID = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NetworkSystemFusion*), "GetPlayerRef", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{playerID});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NetworkSystemFusion::$$n__0
// Il2CppName: <>n__0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::NetworkSystemFusion::*)()>(&GlobalNamespace::NetworkSystemFusion::$$n__0)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NetworkSystemFusion*), "<>n__0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NetworkSystemFusion::$SetupVoice$b__62_0
// Il2CppName: <SetupVoice>b__62_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::NetworkSystemFusion::*)(::System::Action_1<::Photon::Voice::Unity::RemoteVoiceLink*>*)>(&GlobalNamespace::NetworkSystemFusion::$SetupVoice$b__62_0)> {
  static const MethodInfo* get() {
    static auto* callback = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("Photon.Voice.Unity", "RemoteVoiceLink")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NetworkSystemFusion*), "<SetupVoice>b__62_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{callback});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NetworkSystemFusion::get_IsOnline
// Il2CppName: get_IsOnline
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (GlobalNamespace::NetworkSystemFusion::*)()>(&GlobalNamespace::NetworkSystemFusion::get_IsOnline)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NetworkSystemFusion*), "get_IsOnline", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NetworkSystemFusion::get_InRoom
// Il2CppName: get_InRoom
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (GlobalNamespace::NetworkSystemFusion::*)()>(&GlobalNamespace::NetworkSystemFusion::get_InRoom)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NetworkSystemFusion*), "get_InRoom", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NetworkSystemFusion::get_RoomName
// Il2CppName: get_RoomName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (GlobalNamespace::NetworkSystemFusion::*)()>(&GlobalNamespace::NetworkSystemFusion::get_RoomName)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NetworkSystemFusion*), "get_RoomName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NetworkSystemFusion::get_GameModeString
// Il2CppName: get_GameModeString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (GlobalNamespace::NetworkSystemFusion::*)()>(&GlobalNamespace::NetworkSystemFusion::get_GameModeString)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NetworkSystemFusion*), "get_GameModeString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NetworkSystemFusion::get_CurrentRegion
// Il2CppName: get_CurrentRegion
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (GlobalNamespace::NetworkSystemFusion::*)()>(&GlobalNamespace::NetworkSystemFusion::get_CurrentRegion)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NetworkSystemFusion*), "get_CurrentRegion", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NetworkSystemFusion::get_SessionIsPrivate
// Il2CppName: get_SessionIsPrivate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (GlobalNamespace::NetworkSystemFusion::*)()>(&GlobalNamespace::NetworkSystemFusion::get_SessionIsPrivate)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NetworkSystemFusion*), "get_SessionIsPrivate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NetworkSystemFusion::get_LocalPlayerID
// Il2CppName: get_LocalPlayerID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (GlobalNamespace::NetworkSystemFusion::*)()>(&GlobalNamespace::NetworkSystemFusion::get_LocalPlayerID)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NetworkSystemFusion*), "get_LocalPlayerID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NetworkSystemFusion::get_MasterAuthID
// Il2CppName: get_MasterAuthID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (GlobalNamespace::NetworkSystemFusion::*)()>(&GlobalNamespace::NetworkSystemFusion::get_MasterAuthID)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NetworkSystemFusion*), "get_MasterAuthID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NetworkSystemFusion::get_CurrentPhotonBackend
// Il2CppName: get_CurrentPhotonBackend
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (GlobalNamespace::NetworkSystemFusion::*)()>(&GlobalNamespace::NetworkSystemFusion::get_CurrentPhotonBackend)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NetworkSystemFusion*), "get_CurrentPhotonBackend", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NetworkSystemFusion::get_AllPlayerIDs
// Il2CppName: get_AllPlayerIDs
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<int> (GlobalNamespace::NetworkSystemFusion::*)()>(&GlobalNamespace::NetworkSystemFusion::get_AllPlayerIDs)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NetworkSystemFusion*), "get_AllPlayerIDs", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NetworkSystemFusion::get_SimTime
// Il2CppName: get_SimTime
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (GlobalNamespace::NetworkSystemFusion::*)()>(&GlobalNamespace::NetworkSystemFusion::get_SimTime)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NetworkSystemFusion*), "get_SimTime", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NetworkSystemFusion::get_SimDeltaTime
// Il2CppName: get_SimDeltaTime
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (GlobalNamespace::NetworkSystemFusion::*)()>(&GlobalNamespace::NetworkSystemFusion::get_SimDeltaTime)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NetworkSystemFusion*), "get_SimDeltaTime", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NetworkSystemFusion::get_SimTick
// Il2CppName: get_SimTick
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (GlobalNamespace::NetworkSystemFusion::*)()>(&GlobalNamespace::NetworkSystemFusion::get_SimTick)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NetworkSystemFusion*), "get_SimTick", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NetworkSystemFusion::get_RoomPlayerCount
// Il2CppName: get_RoomPlayerCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (GlobalNamespace::NetworkSystemFusion::*)()>(&GlobalNamespace::NetworkSystemFusion::get_RoomPlayerCount)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NetworkSystemFusion*), "get_RoomPlayerCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NetworkSystemFusion::get_VoiceConnection
// Il2CppName: get_VoiceConnection
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Photon::Voice::Unity::VoiceConnection* (GlobalNamespace::NetworkSystemFusion::*)()>(&GlobalNamespace::NetworkSystemFusion::get_VoiceConnection)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NetworkSystemFusion*), "get_VoiceConnection", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NetworkSystemFusion::Initialise
// Il2CppName: Initialise
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::NetworkSystemFusion::*)()>(&GlobalNamespace::NetworkSystemFusion::Initialise)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NetworkSystemFusion*), "Initialise", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NetworkSystemFusion::SetAuthenticationValues
// Il2CppName: SetAuthenticationValues
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::NetworkSystemFusion::*)(::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>*)>(&GlobalNamespace::NetworkSystemFusion::SetAuthenticationValues)> {
  static const MethodInfo* get() {
    static auto* authValues = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "Dictionary`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NetworkSystemFusion*), "SetAuthenticationValues", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{authValues});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NetworkSystemFusion::ConnectToRoom
// Il2CppName: ConnectToRoom
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Threading::Tasks::Task_1<::GlobalNamespace::NetJoinResult>* (GlobalNamespace::NetworkSystemFusion::*)(::StringW, ::GlobalNamespace::RoomConfig*, int)>(&GlobalNamespace::NetworkSystemFusion::ConnectToRoom)> {
  static const MethodInfo* get() {
    static auto* roomName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* opts = &::il2cpp_utils::GetClassFromName("", "RoomConfig")->byval_arg;
    static auto* regionIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NetworkSystemFusion*), "ConnectToRoom", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{roomName, opts, regionIndex});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NetworkSystemFusion::JoinFriendsRoom
// Il2CppName: JoinFriendsRoom
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Threading::Tasks::Task* (GlobalNamespace::NetworkSystemFusion::*)(::StringW, int, ::StringW, ::StringW)>(&GlobalNamespace::NetworkSystemFusion::JoinFriendsRoom)> {
  static const MethodInfo* get() {
    static auto* userID = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* actorID = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* keyToFollow = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* shufflerToFollow = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NetworkSystemFusion*), "JoinFriendsRoom", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{userID, actorID, keyToFollow, shufflerToFollow});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NetworkSystemFusion::JoinPubWithFriends
// Il2CppName: JoinPubWithFriends
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::NetworkSystemFusion::*)()>(&GlobalNamespace::NetworkSystemFusion::JoinPubWithFriends)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NetworkSystemFusion*), "JoinPubWithFriends", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NetworkSystemFusion::ReturnToSinglePlayer
// Il2CppName: ReturnToSinglePlayer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Threading::Tasks::Task* (GlobalNamespace::NetworkSystemFusion::*)()>(&GlobalNamespace::NetworkSystemFusion::ReturnToSinglePlayer)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NetworkSystemFusion*), "ReturnToSinglePlayer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NetworkSystemFusion::AddRemoteVoiceAddedCallback
// Il2CppName: AddRemoteVoiceAddedCallback
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::NetworkSystemFusion::*)(::System::Action_1<::Photon::Voice::Unity::RemoteVoiceLink*>*)>(&GlobalNamespace::NetworkSystemFusion::AddRemoteVoiceAddedCallback)> {
  static const MethodInfo* get() {
    static auto* callback = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("Photon.Voice.Unity", "RemoteVoiceLink")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NetworkSystemFusion*), "AddRemoteVoiceAddedCallback", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{callback});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NetworkSystemFusion::NetInstantiate
// Il2CppName: NetInstantiate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::GameObject* (GlobalNamespace::NetworkSystemFusion::*)(::UnityEngine::GameObject*, ::UnityEngine::Vector3, ::UnityEngine::Quaternion, bool)>(&GlobalNamespace::NetworkSystemFusion::NetInstantiate)> {
  static const MethodInfo* get() {
    static auto* prefab = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    static auto* position = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* rotation = &::il2cpp_utils::GetClassFromName("UnityEngine", "Quaternion")->byval_arg;
    static auto* isRoomObject = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NetworkSystemFusion*), "NetInstantiate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{prefab, position, rotation, isRoomObject});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NetworkSystemFusion::NetInstantiate
// Il2CppName: NetInstantiate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::GameObject* (GlobalNamespace::NetworkSystemFusion::*)(::UnityEngine::GameObject*, ::UnityEngine::Vector3, ::UnityEngine::Quaternion, int, bool)>(&GlobalNamespace::NetworkSystemFusion::NetInstantiate)> {
  static const MethodInfo* get() {
    static auto* prefab = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    static auto* position = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* rotation = &::il2cpp_utils::GetClassFromName("UnityEngine", "Quaternion")->byval_arg;
    static auto* playerAuthID = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* isRoomObject = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NetworkSystemFusion*), "NetInstantiate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{prefab, position, rotation, playerAuthID, isRoomObject});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NetworkSystemFusion::NetDestroy
// Il2CppName: NetDestroy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::NetworkSystemFusion::*)(::UnityEngine::GameObject*)>(&GlobalNamespace::NetworkSystemFusion::NetDestroy)> {
  static const MethodInfo* get() {
    static auto* instance = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NetworkSystemFusion*), "NetDestroy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{instance});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NetworkSystemFusion::ShouldSpawnLocally
// Il2CppName: ShouldSpawnLocally
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (GlobalNamespace::NetworkSystemFusion::*)(int)>(&GlobalNamespace::NetworkSystemFusion::ShouldSpawnLocally)> {
  static const MethodInfo* get() {
    static auto* playerID = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NetworkSystemFusion*), "ShouldSpawnLocally", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{playerID});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NetworkSystemFusion::CallRPC
// Il2CppName: CallRPC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::NetworkSystemFusion::*)(::UnityEngine::MonoBehaviour*, ::GlobalNamespace::NetworkSystem::RPC*, bool)>(&GlobalNamespace::NetworkSystemFusion::CallRPC)> {
  static const MethodInfo* get() {
    static auto* component = &::il2cpp_utils::GetClassFromName("UnityEngine", "MonoBehaviour")->byval_arg;
    static auto* rpcMethod = &::il2cpp_utils::GetClassFromName("", "NetworkSystem/RPC")->byval_arg;
    static auto* sendToSelf = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NetworkSystemFusion*), "CallRPC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{component, rpcMethod, sendToSelf});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NetworkSystemFusion::CallRPC
// Il2CppName: CallRPC
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: GlobalNamespace::NetworkSystemFusion::CallRPC
// Il2CppName: CallRPC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::NetworkSystemFusion::*)(::UnityEngine::MonoBehaviour*, ::GlobalNamespace::NetworkSystem::StringRPC*, ::StringW, bool)>(&GlobalNamespace::NetworkSystemFusion::CallRPC)> {
  static const MethodInfo* get() {
    static auto* component = &::il2cpp_utils::GetClassFromName("UnityEngine", "MonoBehaviour")->byval_arg;
    static auto* rpcMethod = &::il2cpp_utils::GetClassFromName("", "NetworkSystem/StringRPC")->byval_arg;
    static auto* message = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* sendToSelf = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NetworkSystemFusion*), "CallRPC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{component, rpcMethod, message, sendToSelf});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NetworkSystemFusion::CallRPC
// Il2CppName: CallRPC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::NetworkSystemFusion::*)(int, ::UnityEngine::MonoBehaviour*, ::GlobalNamespace::NetworkSystem::RPC*)>(&GlobalNamespace::NetworkSystemFusion::CallRPC)> {
  static const MethodInfo* get() {
    static auto* targetPlayerID = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* component = &::il2cpp_utils::GetClassFromName("UnityEngine", "MonoBehaviour")->byval_arg;
    static auto* rpcMethod = &::il2cpp_utils::GetClassFromName("", "NetworkSystem/RPC")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NetworkSystemFusion*), "CallRPC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{targetPlayerID, component, rpcMethod});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NetworkSystemFusion::CallRPC
// Il2CppName: CallRPC
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: GlobalNamespace::NetworkSystemFusion::CallRPC
// Il2CppName: CallRPC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::NetworkSystemFusion::*)(int, ::UnityEngine::MonoBehaviour*, ::GlobalNamespace::NetworkSystem::StringRPC*, ::StringW)>(&GlobalNamespace::NetworkSystemFusion::CallRPC)> {
  static const MethodInfo* get() {
    static auto* targetPlayerID = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* component = &::il2cpp_utils::GetClassFromName("UnityEngine", "MonoBehaviour")->byval_arg;
    static auto* rpcMethod = &::il2cpp_utils::GetClassFromName("", "NetworkSystem/StringRPC")->byval_arg;
    static auto* message = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NetworkSystemFusion*), "CallRPC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{targetPlayerID, component, rpcMethod, message});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NetworkSystemFusion::GetRandomWeightedRegion
// Il2CppName: GetRandomWeightedRegion
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (GlobalNamespace::NetworkSystemFusion::*)()>(&GlobalNamespace::NetworkSystemFusion::GetRandomWeightedRegion)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NetworkSystemFusion*), "GetRandomWeightedRegion", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NetworkSystemFusion::AwaitSceneReady
// Il2CppName: AwaitSceneReady
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Threading::Tasks::Task* (GlobalNamespace::NetworkSystemFusion::*)()>(&GlobalNamespace::NetworkSystemFusion::AwaitSceneReady)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NetworkSystemFusion*), "AwaitSceneReady", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NetworkSystemFusion::UpdateNetPlayerList
// Il2CppName: UpdateNetPlayerList
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::NetworkSystemFusion::*)()>(&GlobalNamespace::NetworkSystemFusion::UpdateNetPlayerList)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NetworkSystemFusion*), "UpdateNetPlayerList", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NetworkSystemFusion::UpdatePlayerIDCache
// Il2CppName: UpdatePlayerIDCache
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::NetworkSystemFusion::*)()>(&GlobalNamespace::NetworkSystemFusion::UpdatePlayerIDCache)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NetworkSystemFusion*), "UpdatePlayerIDCache", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NetworkSystemFusion::SetPlayerObject
// Il2CppName: SetPlayerObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::NetworkSystemFusion::*)(::UnityEngine::GameObject*, ::System::Nullable_1<int>)>(&GlobalNamespace::NetworkSystemFusion::SetPlayerObject)> {
  static const MethodInfo* get() {
    static auto* playerInstance = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    static auto* owningPlayerID = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Nullable`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Int32")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NetworkSystemFusion*), "SetPlayerObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{playerInstance, owningPlayerID});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NetworkSystemFusion::GetLocalPlayer
// Il2CppName: GetLocalPlayer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::NetPlayer* (GlobalNamespace::NetworkSystemFusion::*)()>(&GlobalNamespace::NetworkSystemFusion::GetLocalPlayer)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NetworkSystemFusion*), "GetLocalPlayer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NetworkSystemFusion::GetPlayer
// Il2CppName: GetPlayer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::NetPlayer* (GlobalNamespace::NetworkSystemFusion::*)(int)>(&GlobalNamespace::NetworkSystemFusion::GetPlayer)> {
  static const MethodInfo* get() {
    static auto* PlayerID = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NetworkSystemFusion*), "GetPlayer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{PlayerID});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NetworkSystemFusion::SetMyNickName
// Il2CppName: SetMyNickName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::NetworkSystemFusion::*)(::StringW)>(&GlobalNamespace::NetworkSystemFusion::SetMyNickName)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NetworkSystemFusion*), "SetMyNickName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NetworkSystemFusion::GetMyNickName
// Il2CppName: GetMyNickName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (GlobalNamespace::NetworkSystemFusion::*)()>(&GlobalNamespace::NetworkSystemFusion::GetMyNickName)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NetworkSystemFusion*), "GetMyNickName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NetworkSystemFusion::GetMyDefaultName
// Il2CppName: GetMyDefaultName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (GlobalNamespace::NetworkSystemFusion::*)()>(&GlobalNamespace::NetworkSystemFusion::GetMyDefaultName)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NetworkSystemFusion*), "GetMyDefaultName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NetworkSystemFusion::GetNickName
// Il2CppName: GetNickName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (GlobalNamespace::NetworkSystemFusion::*)(int)>(&GlobalNamespace::NetworkSystemFusion::GetNickName)> {
  static const MethodInfo* get() {
    static auto* playerID = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NetworkSystemFusion*), "GetNickName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{playerID});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NetworkSystemFusion::GetMyUserID
// Il2CppName: GetMyUserID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (GlobalNamespace::NetworkSystemFusion::*)()>(&GlobalNamespace::NetworkSystemFusion::GetMyUserID)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NetworkSystemFusion*), "GetMyUserID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NetworkSystemFusion::GetUserID
// Il2CppName: GetUserID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (GlobalNamespace::NetworkSystemFusion::*)(int)>(&GlobalNamespace::NetworkSystemFusion::GetUserID)> {
  static const MethodInfo* get() {
    static auto* playerID = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NetworkSystemFusion*), "GetUserID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{playerID});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NetworkSystemFusion::SetMyTutorialComplete
// Il2CppName: SetMyTutorialComplete
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::NetworkSystemFusion::*)()>(&GlobalNamespace::NetworkSystemFusion::SetMyTutorialComplete)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NetworkSystemFusion*), "SetMyTutorialComplete", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NetworkSystemFusion::GetMyTutorialCompletion
// Il2CppName: GetMyTutorialCompletion
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (GlobalNamespace::NetworkSystemFusion::*)()>(&GlobalNamespace::NetworkSystemFusion::GetMyTutorialCompletion)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NetworkSystemFusion*), "GetMyTutorialCompletion", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NetworkSystemFusion::GetPlayerTutorialCompletion
// Il2CppName: GetPlayerTutorialCompletion
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (GlobalNamespace::NetworkSystemFusion::*)(int)>(&GlobalNamespace::NetworkSystemFusion::GetPlayerTutorialCompletion)> {
  static const MethodInfo* get() {
    static auto* playerID = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NetworkSystemFusion*), "GetPlayerTutorialCompletion", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{playerID});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NetworkSystemFusion::GlobalPlayerCount
// Il2CppName: GlobalPlayerCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (GlobalNamespace::NetworkSystemFusion::*)()>(&GlobalNamespace::NetworkSystemFusion::GlobalPlayerCount)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NetworkSystemFusion*), "GlobalPlayerCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NetworkSystemFusion::GetOwningPlayerID
// Il2CppName: GetOwningPlayerID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (GlobalNamespace::NetworkSystemFusion::*)(::UnityEngine::GameObject*)>(&GlobalNamespace::NetworkSystemFusion::GetOwningPlayerID)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NetworkSystemFusion*), "GetOwningPlayerID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NetworkSystemFusion::IsObjectLocallyOwned
// Il2CppName: IsObjectLocallyOwned
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (GlobalNamespace::NetworkSystemFusion::*)(::UnityEngine::GameObject*)>(&GlobalNamespace::NetworkSystemFusion::IsObjectLocallyOwned)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NetworkSystemFusion*), "IsObjectLocallyOwned", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NetworkSystemFusion::IsTotalAuthority
// Il2CppName: IsTotalAuthority
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (GlobalNamespace::NetworkSystemFusion::*)()>(&GlobalNamespace::NetworkSystemFusion::IsTotalAuthority)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NetworkSystemFusion*), "IsTotalAuthority", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NetworkSystemFusion::ShouldWriteObjectData
// Il2CppName: ShouldWriteObjectData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (GlobalNamespace::NetworkSystemFusion::*)(::UnityEngine::GameObject*)>(&GlobalNamespace::NetworkSystemFusion::ShouldWriteObjectData)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NetworkSystemFusion*), "ShouldWriteObjectData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NetworkSystemFusion::ShouldUpdateObject
// Il2CppName: ShouldUpdateObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (GlobalNamespace::NetworkSystemFusion::*)(::UnityEngine::GameObject*)>(&GlobalNamespace::NetworkSystemFusion::ShouldUpdateObject)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NetworkSystemFusion*), "ShouldUpdateObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NetworkSystemFusion::IsObjectRoomObject
// Il2CppName: IsObjectRoomObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (GlobalNamespace::NetworkSystemFusion::*)(::UnityEngine::GameObject*)>(&GlobalNamespace::NetworkSystemFusion::IsObjectRoomObject)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NetworkSystemFusion*), "IsObjectRoomObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NetworkSystemFusion::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
