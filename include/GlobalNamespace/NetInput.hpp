// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: VRRig
  class VRRig;
  // Forward declaring type: NetworkedInput
  struct NetworkedInput;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Forward declaring type: NetInput
  class NetInput;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::NetInput);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::NetInput*, "", "NetInput");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: NetInput
  // [TokenAttribute] Offset: FFFFFFFF
  class NetInput : public ::Il2CppObject {
    public:
    // Get static field: static private VRRig _localPlayerVRRig
    static ::GlobalNamespace::VRRig* _get__localPlayerVRRig();
    // Set static field: static private VRRig _localPlayerVRRig
    static void _set__localPlayerVRRig(::GlobalNamespace::VRRig* value);
    // static public VRRig get_LocalPlayerVRRig()
    // Offset: 0x2905AC4
    static ::GlobalNamespace::VRRig* get_LocalPlayerVRRig();
    // static public NetworkedInput GetInput()
    // Offset: 0x2905BB0
    static ::GlobalNamespace::NetworkedInput GetInput();
  }; // NetInput
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::NetInput::get_LocalPlayerVRRig
// Il2CppName: get_LocalPlayerVRRig
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::VRRig* (*)()>(&GlobalNamespace::NetInput::get_LocalPlayerVRRig)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NetInput*), "get_LocalPlayerVRRig", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NetInput::GetInput
// Il2CppName: GetInput
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::NetworkedInput (*)()>(&GlobalNamespace::NetInput::GetInput)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NetInput*), "GetInput", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
