// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: GorillaTriggerBox
#include "GlobalNamespace/GorillaTriggerBox.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: SizeChangerTrigger
  class SizeChangerTrigger;
  // Forward declaring type: VRRig
  class VRRig;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Collider
  class Collider;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Forward declaring type: BuilderRoomBoundary
  class BuilderRoomBoundary;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::BuilderRoomBoundary);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::BuilderRoomBoundary*, "", "BuilderRoomBoundary");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x40
  #pragma pack(push, 1)
  // Autogenerated type: BuilderRoomBoundary
  // [TokenAttribute] Offset: FFFFFFFF
  class BuilderRoomBoundary : public ::GlobalNamespace::GorillaTriggerBox {
    public:
    public:
    // private SizeChangerTrigger enableOnEnterTrigger
    // Size: 0x8
    // Offset: 0x28
    ::GlobalNamespace::SizeChangerTrigger* enableOnEnterTrigger;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::SizeChangerTrigger*) == 0x8);
    // private SizeChangerTrigger disableOnExitTrigger
    // Size: 0x8
    // Offset: 0x30
    ::GlobalNamespace::SizeChangerTrigger* disableOnExitTrigger;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::SizeChangerTrigger*) == 0x8);
    // private VRRig rigRef
    // Size: 0x8
    // Offset: 0x38
    ::GlobalNamespace::VRRig* rigRef;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::VRRig*) == 0x8);
    public:
    // Get instance field reference: private SizeChangerTrigger enableOnEnterTrigger
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::SizeChangerTrigger*& dyn_enableOnEnterTrigger();
    // Get instance field reference: private SizeChangerTrigger disableOnExitTrigger
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::SizeChangerTrigger*& dyn_disableOnExitTrigger();
    // Get instance field reference: private VRRig rigRef
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::VRRig*& dyn_rigRef();
    // private System.Void Awake()
    // Offset: 0x26EE3B8
    void Awake();
    // private System.Void OnDestroy()
    // Offset: 0x26EE490
    void OnDestroy();
    // public System.Void OnEnteredBoundary(UnityEngine.Collider other)
    // Offset: 0x26EE568
    void OnEnteredBoundary(::UnityEngine::Collider* other);
    // public System.Void OnExitedBoundary(UnityEngine.Collider other)
    // Offset: 0x26EE6C0
    void OnExitedBoundary(::UnityEngine::Collider* other);
    // public System.Void .ctor()
    // Offset: 0x26EE7E4
    // Implemented from: GorillaTriggerBox
    // Base method: System.Void GorillaTriggerBox::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static BuilderRoomBoundary* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderRoomBoundary::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<BuilderRoomBoundary*, creationType>()));
    }
  }; // BuilderRoomBoundary
  #pragma pack(pop)
  static check_size<sizeof(BuilderRoomBoundary), 56 + sizeof(::GlobalNamespace::VRRig*)> __GlobalNamespace_BuilderRoomBoundarySizeCheck;
  static_assert(sizeof(BuilderRoomBoundary) == 0x40);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::BuilderRoomBoundary::Awake
// Il2CppName: Awake
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::BuilderRoomBoundary::*)()>(&GlobalNamespace::BuilderRoomBoundary::Awake)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::BuilderRoomBoundary*), "Awake", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::BuilderRoomBoundary::OnDestroy
// Il2CppName: OnDestroy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::BuilderRoomBoundary::*)()>(&GlobalNamespace::BuilderRoomBoundary::OnDestroy)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::BuilderRoomBoundary*), "OnDestroy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::BuilderRoomBoundary::OnEnteredBoundary
// Il2CppName: OnEnteredBoundary
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::BuilderRoomBoundary::*)(::UnityEngine::Collider*)>(&GlobalNamespace::BuilderRoomBoundary::OnEnteredBoundary)> {
  static const MethodInfo* get() {
    static auto* other = &::il2cpp_utils::GetClassFromName("UnityEngine", "Collider")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::BuilderRoomBoundary*), "OnEnteredBoundary", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{other});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::BuilderRoomBoundary::OnExitedBoundary
// Il2CppName: OnExitedBoundary
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::BuilderRoomBoundary::*)(::UnityEngine::Collider*)>(&GlobalNamespace::BuilderRoomBoundary::OnExitedBoundary)> {
  static const MethodInfo* get() {
    static auto* other = &::il2cpp_utils::GetClassFromName("UnityEngine", "Collider")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::BuilderRoomBoundary*), "OnExitedBoundary", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{other});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::BuilderRoomBoundary::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
