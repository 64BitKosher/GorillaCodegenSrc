// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: IPreDisable
  class IPreDisable;
  // Forward declaring type: NetPlayer
  class NetPlayer;
}
// Forward declaring namespace: System::Text
namespace System::Text {
  // Forward declaring type: StringBuilder
  class StringBuilder;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: GameObject
  class GameObject;
}
// Forward declaring namespace: Photon::Realtime
namespace Photon::Realtime {
  // Forward declaring type: Player
  class Player;
  // Forward declaring type: Room
  class Room;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Forward declaring type: Utils
  class Utils;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::Utils);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::Utils*, "", "Utils");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: Utils
  // [TokenAttribute] Offset: FFFFFFFF
  // [ExtensionAttribute] Offset: FFFFFFFF
  class Utils : public ::Il2CppObject {
    public:
    // Get static field: static private System.Collections.Generic.List`1<IPreDisable> tempDisableCallbacks
    static ::System::Collections::Generic::List_1<::GlobalNamespace::IPreDisable*>* _get_tempDisableCallbacks();
    // Set static field: static private System.Collections.Generic.List`1<IPreDisable> tempDisableCallbacks
    static void _set_tempDisableCallbacks(::System::Collections::Generic::List_1<::GlobalNamespace::IPreDisable*>* value);
    // Get static field: static private System.Int32 tempListcount
    static int _get_tempListcount();
    // Set static field: static private System.Int32 tempListcount
    static void _set_tempListcount(int value);
    // Get static field: static private System.Text.StringBuilder reusableSB
    static ::System::Text::StringBuilder* _get_reusableSB();
    // Set static field: static private System.Text.StringBuilder reusableSB
    static void _set_reusableSB(::System::Text::StringBuilder* value);
    // static public System.Void Disable(UnityEngine.GameObject target)
    // Offset: 0x2783350
    static void Disable(::UnityEngine::GameObject* target);
    // static public System.Boolean InRoom(Photon.Realtime.Player player)
    // Offset: 0x2783518
    static bool InRoom(::Photon::Realtime::Player* player);
    // static public System.Boolean InRoom(NetPlayer player)
    // Offset: 0x27835CC
    static bool InRoom(::GlobalNamespace::NetPlayer* player);
    // static public System.Boolean PlayerInRoom(System.Int32 actorNumber)
    // Offset: 0x2783698
    static bool PlayerInRoom(int actorNumber);
    // static public System.Boolean PlayerInRoom(System.Int32 actorNumer, out Photon.Realtime.Player photonPlayer)
    // Offset: 0x2783748
    static bool PlayerInRoom(int actorNumer, ByRef<::Photon::Realtime::Player*> photonPlayer);
    // static System.String ToStringStripped(Photon.Realtime.Room room)
    // Offset: 0x278381C
    static ::StringW ToStringStripped(::Photon::Realtime::Room* room);
    // static private System.Void StaticLoad()
    // Offset: 0x2783EF0
    static void StaticLoad();
    // static private System.Void LoadCosmeticBundles()
    // Offset: 0x2783EF4
    static void LoadCosmeticBundles();
    // static private System.Void .cctor()
    // Offset: 0x27847DC
    static void _cctor();
  }; // Utils
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::Utils::Disable
// Il2CppName: Disable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::GameObject*)>(&GlobalNamespace::Utils::Disable)> {
  static const MethodInfo* get() {
    static auto* target = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::Utils*), "Disable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{target});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::Utils::InRoom
// Il2CppName: InRoom
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::Photon::Realtime::Player*)>(&GlobalNamespace::Utils::InRoom)> {
  static const MethodInfo* get() {
    static auto* player = &::il2cpp_utils::GetClassFromName("Photon.Realtime", "Player")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::Utils*), "InRoom", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{player});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::Utils::InRoom
// Il2CppName: InRoom
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::GlobalNamespace::NetPlayer*)>(&GlobalNamespace::Utils::InRoom)> {
  static const MethodInfo* get() {
    static auto* player = &::il2cpp_utils::GetClassFromName("", "NetPlayer")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::Utils*), "InRoom", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{player});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::Utils::PlayerInRoom
// Il2CppName: PlayerInRoom
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(int)>(&GlobalNamespace::Utils::PlayerInRoom)> {
  static const MethodInfo* get() {
    static auto* actorNumber = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::Utils*), "PlayerInRoom", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{actorNumber});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::Utils::PlayerInRoom
// Il2CppName: PlayerInRoom
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(int, ByRef<::Photon::Realtime::Player*>)>(&GlobalNamespace::Utils::PlayerInRoom)> {
  static const MethodInfo* get() {
    static auto* actorNumer = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* photonPlayer = &::il2cpp_utils::GetClassFromName("Photon.Realtime", "Player")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::Utils*), "PlayerInRoom", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{actorNumer, photonPlayer});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::Utils::ToStringStripped
// Il2CppName: ToStringStripped
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::Photon::Realtime::Room*)>(&GlobalNamespace::Utils::ToStringStripped)> {
  static const MethodInfo* get() {
    static auto* room = &::il2cpp_utils::GetClassFromName("Photon.Realtime", "Room")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::Utils*), "ToStringStripped", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{room});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::Utils::StaticLoad
// Il2CppName: StaticLoad
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&GlobalNamespace::Utils::StaticLoad)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::Utils*), "StaticLoad", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::Utils::LoadCosmeticBundles
// Il2CppName: LoadCosmeticBundles
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&GlobalNamespace::Utils::LoadCosmeticBundles)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::Utils*), "LoadCosmeticBundles", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::Utils::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&GlobalNamespace::Utils::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::Utils*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
