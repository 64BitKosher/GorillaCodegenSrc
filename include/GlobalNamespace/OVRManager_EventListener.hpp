// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: OVRPlugin
#include "GlobalNamespace/OVRPlugin.hpp"
// Completed includes
// Type namespace: 
namespace GlobalNamespace {
  // Forward declaring type: EventListener
  class OVRManager_EventListener;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::OVRManager_EventListener);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::OVRManager_EventListener*, "", "OVRManager/EventListener");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x0
  #pragma pack(push, 1)
  // Autogenerated type: OVRManager/EventListener
  // [TokenAttribute] Offset: FFFFFFFF
  class OVRManager_EventListener {
    public:
    // public System.Void OnEvent(OVRPlugin/EventDataBuffer eventData)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void OnEvent(::GlobalNamespace::OVRPlugin::EventDataBuffer eventData);
  }; // OVRManager/EventListener
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::OVRManager_EventListener::OnEvent
// Il2CppName: OnEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::OVRManager_EventListener::*)(::GlobalNamespace::OVRPlugin::EventDataBuffer)>(&GlobalNamespace::OVRManager_EventListener::OnEvent)> {
  static const MethodInfo* get() {
    static auto* eventData = &::il2cpp_utils::GetClassFromName("", "OVRPlugin/EventDataBuffer")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::OVRManager_EventListener*), "OnEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{eventData});
  }
};
