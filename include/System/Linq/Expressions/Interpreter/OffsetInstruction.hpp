// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Linq.Expressions.Interpreter.Instruction
#include "System/Linq/Expressions/Interpreter/Instruction.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Func`2<T, TResult>
  template<typename T, typename TResult>
  class Func_2;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: IReadOnlyList`1<T>
  template<typename T>
  class IReadOnlyList_1;
}
// Completed forward declares
// Type namespace: System.Linq.Expressions.Interpreter
namespace System::Linq::Expressions::Interpreter {
  // Forward declaring type: OffsetInstruction
  class OffsetInstruction;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::Linq::Expressions::Interpreter::OffsetInstruction);
DEFINE_IL2CPP_ARG_TYPE(::System::Linq::Expressions::Interpreter::OffsetInstruction*, "System.Linq.Expressions.Interpreter", "OffsetInstruction");
// Type namespace: System.Linq.Expressions.Interpreter
namespace System::Linq::Expressions::Interpreter {
  // Size: 0x14
  #pragma pack(push, 1)
  // Autogenerated type: System.Linq.Expressions.Interpreter.OffsetInstruction
  // [TokenAttribute] Offset: FFFFFFFF
  class OffsetInstruction : public ::System::Linq::Expressions::Interpreter::Instruction {
    public:
    public:
    // protected System.Int32 _offset
    // Size: 0x4
    // Offset: 0x10
    int offset;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Creating conversion operator: operator int
    constexpr operator int() const noexcept {
      return offset;
    }
    // Get instance field reference: protected System.Int32 _offset
    [[deprecated("Use field access instead!")]] int& dyn__offset();
    // public System.Linq.Expressions.Interpreter.Instruction[] get_Cache()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::ArrayW<::System::Linq::Expressions::Interpreter::Instruction*> get_Cache();
    // public System.Linq.Expressions.Interpreter.Instruction Fixup(System.Int32 offset)
    // Offset: 0x4BA7978
    ::System::Linq::Expressions::Interpreter::Instruction* Fixup(int offset);
    // public override System.String ToDebugString(System.Int32 instructionIndex, System.Object cookie, System.Func`2<System.Int32,System.Int32> labelIndexer, System.Collections.Generic.IReadOnlyList`1<System.Object> objects)
    // Offset: 0x4BA7A18
    // Implemented from: System.Linq.Expressions.Interpreter.Instruction
    // Base method: System.String Instruction::ToDebugString(System.Int32 instructionIndex, System.Object cookie, System.Func`2<System.Int32,System.Int32> labelIndexer, System.Collections.Generic.IReadOnlyList`1<System.Object> objects)
    ::StringW ToDebugString(int instructionIndex, ::Il2CppObject* cookie, ::System::Func_2<int, int>* labelIndexer, ::System::Collections::Generic::IReadOnlyList_1<::Il2CppObject*>* objects);
    // public override System.String ToString()
    // Offset: 0x4BA7AE0
    // Implemented from: System.Linq.Expressions.Interpreter.Instruction
    // Base method: System.String Instruction::ToString()
    ::StringW ToString();
    // protected System.Void .ctor()
    // Offset: 0x4BA7BAC
    // Implemented from: System.Linq.Expressions.Interpreter.Instruction
    // Base method: System.Void Instruction::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static OffsetInstruction* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Interpreter::OffsetInstruction::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<OffsetInstruction*, creationType>()));
    }
  }; // System.Linq.Expressions.Interpreter.OffsetInstruction
  #pragma pack(pop)
  static check_size<sizeof(OffsetInstruction), 16 + sizeof(int)> __System_Linq_Expressions_Interpreter_OffsetInstructionSizeCheck;
  static_assert(sizeof(OffsetInstruction) == 0x14);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::Linq::Expressions::Interpreter::OffsetInstruction::get_Cache
// Il2CppName: get_Cache
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::System::Linq::Expressions::Interpreter::Instruction*> (System::Linq::Expressions::Interpreter::OffsetInstruction::*)()>(&System::Linq::Expressions::Interpreter::OffsetInstruction::get_Cache)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Linq::Expressions::Interpreter::OffsetInstruction*), "get_Cache", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Linq::Expressions::Interpreter::OffsetInstruction::Fixup
// Il2CppName: Fixup
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Linq::Expressions::Interpreter::Instruction* (System::Linq::Expressions::Interpreter::OffsetInstruction::*)(int)>(&System::Linq::Expressions::Interpreter::OffsetInstruction::Fixup)> {
  static const MethodInfo* get() {
    static auto* offset = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Linq::Expressions::Interpreter::OffsetInstruction*), "Fixup", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{offset});
  }
};
// Writing MetadataGetter for method: System::Linq::Expressions::Interpreter::OffsetInstruction::ToDebugString
// Il2CppName: ToDebugString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::Linq::Expressions::Interpreter::OffsetInstruction::*)(int, ::Il2CppObject*, ::System::Func_2<int, int>*, ::System::Collections::Generic::IReadOnlyList_1<::Il2CppObject*>*)>(&System::Linq::Expressions::Interpreter::OffsetInstruction::ToDebugString)> {
  static const MethodInfo* get() {
    static auto* instructionIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* cookie = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* labelIndexer = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Func`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Int32"), ::il2cpp_utils::GetClassFromName("System", "Int32")})->byval_arg;
    static auto* objects = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "IReadOnlyList`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Object")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Linq::Expressions::Interpreter::OffsetInstruction*), "ToDebugString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{instructionIndex, cookie, labelIndexer, objects});
  }
};
// Writing MetadataGetter for method: System::Linq::Expressions::Interpreter::OffsetInstruction::ToString
// Il2CppName: ToString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::Linq::Expressions::Interpreter::OffsetInstruction::*)()>(&System::Linq::Expressions::Interpreter::OffsetInstruction::ToString)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Linq::Expressions::Interpreter::OffsetInstruction*), "ToString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Linq::Expressions::Interpreter::OffsetInstruction::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
