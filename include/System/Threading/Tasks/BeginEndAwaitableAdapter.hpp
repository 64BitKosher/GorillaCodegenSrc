// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Threading.Tasks.RendezvousAwaitable`1
#include "System/Threading/Tasks/RendezvousAwaitable_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Threading::Tasks
namespace System::Threading::Tasks {
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: IAsyncResult
  class IAsyncResult;
  // Forward declaring type: AsyncCallback
  class AsyncCallback;
}
// Completed forward declares
// Type namespace: System.Threading.Tasks
namespace System::Threading::Tasks {
  // Forward declaring type: BeginEndAwaitableAdapter
  class BeginEndAwaitableAdapter;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::Threading::Tasks::BeginEndAwaitableAdapter);
DEFINE_IL2CPP_ARG_TYPE(::System::Threading::Tasks::BeginEndAwaitableAdapter*, "System.Threading.Tasks", "BeginEndAwaitableAdapter");
// Type namespace: System.Threading.Tasks
namespace System::Threading::Tasks {
  // WARNING Size may be invalid!
  // Autogenerated type: System.Threading.Tasks.BeginEndAwaitableAdapter
  // [TokenAttribute] Offset: FFFFFFFF
  class BeginEndAwaitableAdapter : public ::System::Threading::Tasks::RendezvousAwaitable_1<::System::IAsyncResult*> {
    public:
    // Nested type: ::System::Threading::Tasks::BeginEndAwaitableAdapter::$$c
    class $$c;
    // Get static field: static public readonly System.AsyncCallback Callback
    static ::System::AsyncCallback* _get_Callback();
    // Set static field: static public readonly System.AsyncCallback Callback
    static void _set_Callback(::System::AsyncCallback* value);
    // public System.Void .ctor()
    // Offset: 0x46D2890
    // Implemented from: System.Threading.Tasks.RendezvousAwaitable`1
    // Base method: System.Void RendezvousAwaitable_1::.ctor()
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static BeginEndAwaitableAdapter* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::BeginEndAwaitableAdapter::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<BeginEndAwaitableAdapter*, creationType>()));
    }
    // static private System.Void .cctor()
    // Offset: 0x46D2910
    // Implemented from: System.Threading.Tasks.RendezvousAwaitable`1
    // Base method: System.Void RendezvousAwaitable_1::.cctor()
    static void _cctor();
  }; // System.Threading.Tasks.BeginEndAwaitableAdapter
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::Threading::Tasks::BeginEndAwaitableAdapter::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::Threading::Tasks::BeginEndAwaitableAdapter::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&System::Threading::Tasks::BeginEndAwaitableAdapter::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Threading::Tasks::BeginEndAwaitableAdapter*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
