// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Runtime.CompilerServices.ICriticalNotifyCompletion
#include "System/Runtime/CompilerServices/ICriticalNotifyCompletion.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Threading::Tasks
namespace System::Threading::Tasks {
  // Skipping declaration: <>c because it is already included!
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Action
  class Action;
}
// Forward declaring namespace: System::Runtime::ExceptionServices
namespace System::Runtime::ExceptionServices {
  // Forward declaring type: ExceptionDispatchInfo
  class ExceptionDispatchInfo;
}
// Completed forward declares
// Type namespace: System.Threading.Tasks
namespace System::Threading::Tasks {
  // Forward declaring type: RendezvousAwaitable`1<TResult>
  template<typename TResult>
  class RendezvousAwaitable_1;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE_GENERIC_CLASS(::System::Threading::Tasks::RendezvousAwaitable_1, "System.Threading.Tasks", "RendezvousAwaitable`1");
// Type namespace: System.Threading.Tasks
namespace System::Threading::Tasks {
  // WARNING Size may be invalid!
  // Autogenerated type: System.Threading.Tasks.RendezvousAwaitable`1
  // [TokenAttribute] Offset: FFFFFFFF
  template<typename TResult>
  class RendezvousAwaitable_1 : public ::Il2CppObject/*, public ::System::Runtime::CompilerServices::ICriticalNotifyCompletion*/ {
    public:
    // Nested type: ::System::Threading::Tasks::RendezvousAwaitable_1::$$c<TResult>
    class $$c;
    // WARNING Size may be invalid!
    // Autogenerated type: System.Threading.Tasks.RendezvousAwaitable`1/<>c
    // [TokenAttribute] Offset: FFFFFFFF
    // [CompilerGeneratedAttribute] Offset: FFFFFFFF
    class $$c : public ::il2cpp_utils::il2cpp_type_check::NestedType, public ::Il2CppObject {
      public:
      using declaring_type = RendezvousAwaitable_1<TResult>*;
      static constexpr std::string_view NESTED_NAME = "<>c";
      static constexpr bool IS_VALUE_TYPE = false;
      // Autogenerated static field getter
      // Get static field: static public readonly System.Threading.Tasks.RendezvousAwaitable`1/<>c<TResult> <>9
      static typename ::System::Threading::Tasks::RendezvousAwaitable_1<TResult>::$$c* _get_$$9() {
        static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::RendezvousAwaitable_1::$$c::_get_$$9");
        return THROW_UNLESS((il2cpp_utils::GetFieldValue<typename ::System::Threading::Tasks::RendezvousAwaitable_1<TResult>::$$c*>(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<typename RendezvousAwaitable_1<TResult>::$$c*>::get(), "<>9")));
      }
      // Autogenerated static field setter
      // Set static field: static public readonly System.Threading.Tasks.RendezvousAwaitable`1/<>c<TResult> <>9
      static void _set_$$9(typename ::System::Threading::Tasks::RendezvousAwaitable_1<TResult>::$$c* value) {
        static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::RendezvousAwaitable_1::$$c::_set_$$9");
        THROW_UNLESS((il2cpp_utils::SetFieldValue(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<typename RendezvousAwaitable_1<TResult>::$$c*>::get(), "<>9", value)));
      }
      // static private System.Void .cctor()
      // Offset: 0xFFFFFFFFFFFFFFFF
      static void _cctor() {
        static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::RendezvousAwaitable_1::$$c::.cctor");
        static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<typename RendezvousAwaitable_1<TResult>::$$c*>::get(), ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
        ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
      }
      // System.Void <.cctor>b__20_0()
      // Offset: 0xFFFFFFFFFFFFFFFF
      void $_cctor$b__20_0() {
        static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::RendezvousAwaitable_1::$$c::<.cctor>b__20_0");
        static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.cctor>b__20_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
        ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
      }
      // public System.Void .ctor()
      // Offset: 0xFFFFFFFFFFFFFFFF
      // Implemented from: System.Object
      // Base method: System.Void Object::.ctor()
      template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
      static typename RendezvousAwaitable_1<TResult>::$$c* New_ctor() {
        static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::RendezvousAwaitable_1::$$c::.ctor");
        return THROW_UNLESS((::il2cpp_utils::New<typename RendezvousAwaitable_1<TResult>::$$c*, creationType>()));
      }
    }; // System.Threading.Tasks.RendezvousAwaitable`1/<>c
    // Could not write size check! Type: System.Threading.Tasks.RendezvousAwaitable`1/<>c is generic, or has no fields that are valid for size checks!
    public:
    // private System.Action _continuation
    // Size: 0x8
    // Offset: 0x0
    ::System::Action* continuation;
    // Field size check
    static_assert(sizeof(::System::Action*) == 0x8);
    // private System.Runtime.ExceptionServices.ExceptionDispatchInfo _error
    // Size: 0x8
    // Offset: 0x0
    ::System::Runtime::ExceptionServices::ExceptionDispatchInfo* error;
    // Field size check
    static_assert(sizeof(::System::Runtime::ExceptionServices::ExceptionDispatchInfo*) == 0x8);
    // private TResult _result
    // Size: 0xFFFFFFFF
    // Offset: 0x0
    TResult result;
    // private System.Boolean <RunContinuationsAsynchronously>k__BackingField
    // Size: 0x1
    // Offset: 0x0
    bool RunContinuationsAsynchronously;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    public:
    // Creating interface conversion operator: operator ::System::Runtime::CompilerServices::ICriticalNotifyCompletion
    operator ::System::Runtime::CompilerServices::ICriticalNotifyCompletion() noexcept {
      return *reinterpret_cast<::System::Runtime::CompilerServices::ICriticalNotifyCompletion*>(this);
    }
    // Autogenerated static field getter
    // Get static field: static private readonly System.Action s_completionSentinel
    static ::System::Action* _get_s_completionSentinel() {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::RendezvousAwaitable_1::_get_s_completionSentinel");
      return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Action*>(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<RendezvousAwaitable_1<TResult>*>::get(), "s_completionSentinel"));
    }
    // Autogenerated static field setter
    // Set static field: static private readonly System.Action s_completionSentinel
    static void _set_s_completionSentinel(::System::Action* value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::RendezvousAwaitable_1::_set_s_completionSentinel");
      THROW_UNLESS(il2cpp_utils::SetFieldValue(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<RendezvousAwaitable_1<TResult>*>::get(), "s_completionSentinel", value));
    }
    // Autogenerated instance field getter
    // Get instance field: private System.Action _continuation
    [[deprecated("Use field access instead!")]] ::System::Action*& dyn__continuation() {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::RendezvousAwaitable_1::dyn__continuation");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_continuation"))->offset;
      return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: private System.Runtime.ExceptionServices.ExceptionDispatchInfo _error
    [[deprecated("Use field access instead!")]] ::System::Runtime::ExceptionServices::ExceptionDispatchInfo*& dyn__error() {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::RendezvousAwaitable_1::dyn__error");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_error"))->offset;
      return *reinterpret_cast<::System::Runtime::ExceptionServices::ExceptionDispatchInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: private TResult _result
    [[deprecated("Use field access instead!")]] TResult& dyn__result() {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::RendezvousAwaitable_1::dyn__result");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_result"))->offset;
      return *reinterpret_cast<TResult*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: private System.Boolean <RunContinuationsAsynchronously>k__BackingField
    [[deprecated("Use field access instead!")]] bool& dyn_$RunContinuationsAsynchronously$k__BackingField() {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::RendezvousAwaitable_1::dyn_$RunContinuationsAsynchronously$k__BackingField");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<RunContinuationsAsynchronously>k__BackingField"))->offset;
      return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // public System.Boolean get_RunContinuationsAsynchronously()
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool get_RunContinuationsAsynchronously() {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::RendezvousAwaitable_1::get_RunContinuationsAsynchronously");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RunContinuationsAsynchronously", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
    }
    // public System.Void set_RunContinuationsAsynchronously(System.Boolean value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void set_RunContinuationsAsynchronously(bool value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::RendezvousAwaitable_1::set_RunContinuationsAsynchronously");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_RunContinuationsAsynchronously", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
    }
    // public System.Threading.Tasks.RendezvousAwaitable`1<TResult> GetAwaiter()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::System::Threading::Tasks::RendezvousAwaitable_1<TResult>* GetAwaiter() {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::RendezvousAwaitable_1::GetAwaiter");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAwaiter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::RendezvousAwaitable_1<TResult>*, false>(this, ___internal__method);
    }
    // public System.Boolean get_IsCompleted()
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool get_IsCompleted() {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::RendezvousAwaitable_1::get_IsCompleted");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsCompleted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
    }
    // public TResult GetResult()
    // Offset: 0xFFFFFFFFFFFFFFFF
    TResult GetResult() {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::RendezvousAwaitable_1::GetResult");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      return ::il2cpp_utils::RunMethodRethrow<TResult, false>(this, ___internal__method);
    }
    // public System.Void SetResult(TResult result)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void SetResult(TResult result) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::RendezvousAwaitable_1::SetResult");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
    }
    // private System.Void NotifyAwaiter()
    // Offset: 0xFFFFFFFFFFFFFFFF
    void NotifyAwaiter() {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::RendezvousAwaitable_1::NotifyAwaiter");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NotifyAwaiter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
    }
    // public System.Void OnCompleted(System.Action continuation)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void OnCompleted(::System::Action* continuation) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::RendezvousAwaitable_1::OnCompleted");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Threading::Tasks::RendezvousAwaitable_1<TResult>*), -1));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, continuation);
    }
    // public System.Void UnsafeOnCompleted(System.Action continuation)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void UnsafeOnCompleted(::System::Action* continuation) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::RendezvousAwaitable_1::UnsafeOnCompleted");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Threading::Tasks::RendezvousAwaitable_1<TResult>*), -1));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, continuation);
    }
    // static private System.Void .cctor()
    // Offset: 0xFFFFFFFFFFFFFFFF
    static void _cctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::RendezvousAwaitable_1::.cctor");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<RendezvousAwaitable_1<TResult>*>::get(), ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
    }
    // public System.Void .ctor()
    // Offset: 0xFFFFFFFFFFFFFFFF
    // Implemented from: System.Object
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static RendezvousAwaitable_1<TResult>* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::RendezvousAwaitable_1::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<RendezvousAwaitable_1<TResult>*, creationType>()));
    }
  }; // System.Threading.Tasks.RendezvousAwaitable`1
  // Could not write size check! Type: System.Threading.Tasks.RendezvousAwaitable`1 is generic, or has no fields that are valid for size checks!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
