// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Threading.CancellationTokenSource
#include "System/Threading/CancellationTokenSource.hpp"
// Including type: System.Threading.CancellationTokenRegistration
#include "System/Threading/CancellationTokenRegistration.hpp"
// Including type: System.Threading.CancellationToken
#include "System/Threading/CancellationToken.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::Threading::CancellationTokenSource::Linked2CancellationTokenSource);
DEFINE_IL2CPP_ARG_TYPE(::System::Threading::CancellationTokenSource::Linked2CancellationTokenSource*, "System.Threading", "CancellationTokenSource/Linked2CancellationTokenSource");
// Type namespace: System.Threading
namespace System::Threading {
  // WARNING Size may be invalid!
  // Autogenerated type: System.Threading.CancellationTokenSource/Linked2CancellationTokenSource
  // [TokenAttribute] Offset: FFFFFFFF
  class CancellationTokenSource::Linked2CancellationTokenSource : public ::System::Threading::CancellationTokenSource {
    public:
    public:
    // private readonly System.Threading.CancellationTokenRegistration _reg1
    // Size: 0xFFFFFFFF
    // Offset: 0x40
    ::System::Threading::CancellationTokenRegistration reg1;
    // private readonly System.Threading.CancellationTokenRegistration _reg2
    // Size: 0xFFFFFFFF
    // Offset: 0x58
    ::System::Threading::CancellationTokenRegistration reg2;
    public:
    // Get instance field reference: private readonly System.Threading.CancellationTokenRegistration _reg1
    [[deprecated("Use field access instead!")]] ::System::Threading::CancellationTokenRegistration& dyn__reg1();
    // Get instance field reference: private readonly System.Threading.CancellationTokenRegistration _reg2
    [[deprecated("Use field access instead!")]] ::System::Threading::CancellationTokenRegistration& dyn__reg2();
    // System.Void .ctor(System.Threading.CancellationToken token1, System.Threading.CancellationToken token2)
    // Offset: 0x46C3E2C
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static CancellationTokenSource::Linked2CancellationTokenSource* New_ctor(::System::Threading::CancellationToken token1, ::System::Threading::CancellationToken token2) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::CancellationTokenSource::Linked2CancellationTokenSource::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<CancellationTokenSource::Linked2CancellationTokenSource*, creationType>(token1, token2)));
    }
    // protected override System.Void Dispose(System.Boolean disposing)
    // Offset: 0x46C41B0
    // Implemented from: System.Threading.CancellationTokenSource
    // Base method: System.Void CancellationTokenSource::Dispose(System.Boolean disposing)
    void Dispose(bool disposing);
  }; // System.Threading.CancellationTokenSource/Linked2CancellationTokenSource
  // WARNING Not writing size check since size may be invalid!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::Threading::CancellationTokenSource::Linked2CancellationTokenSource::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::Threading::CancellationTokenSource::Linked2CancellationTokenSource::Dispose
// Il2CppName: Dispose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Threading::CancellationTokenSource::Linked2CancellationTokenSource::*)(bool)>(&System::Threading::CancellationTokenSource::Linked2CancellationTokenSource::Dispose)> {
  static const MethodInfo* get() {
    static auto* disposing = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Threading::CancellationTokenSource::Linked2CancellationTokenSource*), "Dispose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{disposing});
  }
};
