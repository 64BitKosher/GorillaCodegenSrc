// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Span`1<T>
  template<typename T>
  struct Span_1;
}
// Completed forward declares
// Type namespace: System.Buffers.Binary
namespace System::Buffers::Binary {
  // Forward declaring type: BinaryPrimitives
  class BinaryPrimitives;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::Buffers::Binary::BinaryPrimitives);
DEFINE_IL2CPP_ARG_TYPE(::System::Buffers::Binary::BinaryPrimitives*, "System.Buffers.Binary", "BinaryPrimitives");
// Type namespace: System.Buffers.Binary
namespace System::Buffers::Binary {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: System.Buffers.Binary.BinaryPrimitives
  // [TokenAttribute] Offset: FFFFFFFF
  class BinaryPrimitives : public ::Il2CppObject {
    public:
    // static public System.Int16 ReverseEndianness(System.Int16 value)
    // Offset: 0x462D9F8
    static int16_t ReverseEndianness(int16_t value);
    // static public System.Int32 ReverseEndianness(System.Int32 value)
    // Offset: 0x462DA04
    static int ReverseEndianness(int value);
    // static public System.Int64 ReverseEndianness(System.Int64 value)
    // Offset: 0x462DA0C
    static int64_t ReverseEndianness(int64_t value);
    // static public System.UInt16 ReverseEndianness(System.UInt16 value)
    // Offset: 0x462DA14
    static uint16_t ReverseEndianness(uint16_t value);
    // static public System.UInt32 ReverseEndianness(System.UInt32 value)
    // Offset: 0x462DA20
    static uint ReverseEndianness(uint value);
    // static public System.UInt64 ReverseEndianness(System.UInt64 value)
    // Offset: 0x462DA28
    static uint64_t ReverseEndianness(uint64_t value);
    // static public System.Void WriteUInt32BigEndian(System.Span`1<System.Byte> destination, System.UInt32 value)
    // Offset: 0x462DA30
    static void WriteUInt32BigEndian(::System::Span_1<uint8_t> destination, uint value);
    // static public System.Boolean TryWriteUInt32BigEndian(System.Span`1<System.Byte> destination, System.UInt32 value)
    // Offset: 0x462DAD8
    static bool TryWriteUInt32BigEndian(::System::Span_1<uint8_t> destination, uint value);
  }; // System.Buffers.Binary.BinaryPrimitives
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::Buffers::Binary::BinaryPrimitives::ReverseEndianness
// Il2CppName: ReverseEndianness
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int16_t (*)(int16_t)>(&System::Buffers::Binary::BinaryPrimitives::ReverseEndianness)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int16")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Buffers::Binary::BinaryPrimitives*), "ReverseEndianness", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Buffers::Binary::BinaryPrimitives::ReverseEndianness
// Il2CppName: ReverseEndianness
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(int)>(&System::Buffers::Binary::BinaryPrimitives::ReverseEndianness)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Buffers::Binary::BinaryPrimitives*), "ReverseEndianness", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Buffers::Binary::BinaryPrimitives::ReverseEndianness
// Il2CppName: ReverseEndianness
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int64_t (*)(int64_t)>(&System::Buffers::Binary::BinaryPrimitives::ReverseEndianness)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Buffers::Binary::BinaryPrimitives*), "ReverseEndianness", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Buffers::Binary::BinaryPrimitives::ReverseEndianness
// Il2CppName: ReverseEndianness
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint16_t (*)(uint16_t)>(&System::Buffers::Binary::BinaryPrimitives::ReverseEndianness)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "UInt16")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Buffers::Binary::BinaryPrimitives*), "ReverseEndianness", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Buffers::Binary::BinaryPrimitives::ReverseEndianness
// Il2CppName: ReverseEndianness
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (*)(uint)>(&System::Buffers::Binary::BinaryPrimitives::ReverseEndianness)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Buffers::Binary::BinaryPrimitives*), "ReverseEndianness", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Buffers::Binary::BinaryPrimitives::ReverseEndianness
// Il2CppName: ReverseEndianness
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t)>(&System::Buffers::Binary::BinaryPrimitives::ReverseEndianness)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Buffers::Binary::BinaryPrimitives*), "ReverseEndianness", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Buffers::Binary::BinaryPrimitives::WriteUInt32BigEndian
// Il2CppName: WriteUInt32BigEndian
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::Span_1<uint8_t>, uint)>(&System::Buffers::Binary::BinaryPrimitives::WriteUInt32BigEndian)> {
  static const MethodInfo* get() {
    static auto* destination = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Span`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Byte")})->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Buffers::Binary::BinaryPrimitives*), "WriteUInt32BigEndian", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{destination, value});
  }
};
// Writing MetadataGetter for method: System::Buffers::Binary::BinaryPrimitives::TryWriteUInt32BigEndian
// Il2CppName: TryWriteUInt32BigEndian
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::System::Span_1<uint8_t>, uint)>(&System::Buffers::Binary::BinaryPrimitives::TryWriteUInt32BigEndian)> {
  static const MethodInfo* get() {
    static auto* destination = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Span`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Byte")})->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Buffers::Binary::BinaryPrimitives*), "TryWriteUInt32BigEndian", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{destination, value});
  }
};
