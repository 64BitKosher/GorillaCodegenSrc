// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Buffers.Text.Utf8Parser
#include "System/Buffers/Text/Utf8Parser.hpp"
// Including type: System.Enum
#include "System/Enum.hpp"
// Completed includes
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::System::Buffers::Text::Utf8Parser::ComponentParseResult, "System.Buffers.Text", "Utf8Parser/ComponentParseResult");
// Type namespace: System.Buffers.Text
namespace System::Buffers::Text {
  // Size: 0x1
  #pragma pack(push, 1)
  // Autogenerated type: System.Buffers.Text.Utf8Parser/ComponentParseResult
  // [TokenAttribute] Offset: FFFFFFFF
  struct Utf8Parser::ComponentParseResult/*, public ::System::Enum*/ {
    public:
    public:
    // public System.Byte value__
    // Size: 0x1
    // Offset: 0x0
    uint8_t value;
    // Field size check
    static_assert(sizeof(uint8_t) == 0x1);
    public:
    // Creating value type constructor for type: ComponentParseResult
    constexpr ComponentParseResult(uint8_t value_ = {}) noexcept : value{value_} {}
    // Creating interface conversion operator: operator ::System::Enum
    operator ::System::Enum() noexcept {
      return *reinterpret_cast<::System::Enum*>(this);
    }
    // Creating conversion operator: operator uint8_t
    constexpr operator uint8_t() const noexcept {
      return value;
    }
    // static field const value: static public System.Buffers.Text.Utf8Parser/ComponentParseResult NoMoreData
    static constexpr const uint8_t NoMoreData = 0u;
    // Get static field: static public System.Buffers.Text.Utf8Parser/ComponentParseResult NoMoreData
    static ::System::Buffers::Text::Utf8Parser::ComponentParseResult _get_NoMoreData();
    // Set static field: static public System.Buffers.Text.Utf8Parser/ComponentParseResult NoMoreData
    static void _set_NoMoreData(::System::Buffers::Text::Utf8Parser::ComponentParseResult value);
    // static field const value: static public System.Buffers.Text.Utf8Parser/ComponentParseResult Colon
    static constexpr const uint8_t Colon = 1u;
    // Get static field: static public System.Buffers.Text.Utf8Parser/ComponentParseResult Colon
    static ::System::Buffers::Text::Utf8Parser::ComponentParseResult _get_Colon();
    // Set static field: static public System.Buffers.Text.Utf8Parser/ComponentParseResult Colon
    static void _set_Colon(::System::Buffers::Text::Utf8Parser::ComponentParseResult value);
    // static field const value: static public System.Buffers.Text.Utf8Parser/ComponentParseResult Period
    static constexpr const uint8_t Period = 2u;
    // Get static field: static public System.Buffers.Text.Utf8Parser/ComponentParseResult Period
    static ::System::Buffers::Text::Utf8Parser::ComponentParseResult _get_Period();
    // Set static field: static public System.Buffers.Text.Utf8Parser/ComponentParseResult Period
    static void _set_Period(::System::Buffers::Text::Utf8Parser::ComponentParseResult value);
    // static field const value: static public System.Buffers.Text.Utf8Parser/ComponentParseResult ParseFailure
    static constexpr const uint8_t ParseFailure = 3u;
    // Get static field: static public System.Buffers.Text.Utf8Parser/ComponentParseResult ParseFailure
    static ::System::Buffers::Text::Utf8Parser::ComponentParseResult _get_ParseFailure();
    // Set static field: static public System.Buffers.Text.Utf8Parser/ComponentParseResult ParseFailure
    static void _set_ParseFailure(::System::Buffers::Text::Utf8Parser::ComponentParseResult value);
    // Get instance field reference: public System.Byte value__
    [[deprecated("Use field access instead!")]] uint8_t& dyn_value__();
  }; // System.Buffers.Text.Utf8Parser/ComponentParseResult
  #pragma pack(pop)
  static check_size<sizeof(Utf8Parser::ComponentParseResult), 0 + sizeof(uint8_t)> __System_Buffers_Text_Utf8Parser_ComponentParseResultSizeCheck;
  static_assert(sizeof(Utf8Parser::ComponentParseResult) == 0x1);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
