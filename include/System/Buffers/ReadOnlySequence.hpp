// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Completed includes
// Type namespace: System.Buffers
namespace System::Buffers {
  // Forward declaring type: ReadOnlySequence
  class ReadOnlySequence;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::Buffers::ReadOnlySequence);
DEFINE_IL2CPP_ARG_TYPE(::System::Buffers::ReadOnlySequence*, "System.Buffers", "ReadOnlySequence");
// Type namespace: System.Buffers
namespace System::Buffers {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: System.Buffers.ReadOnlySequence
  // [TokenAttribute] Offset: FFFFFFFF
  class ReadOnlySequence : public ::Il2CppObject {
    public:
    // static public System.Int32 SegmentToSequenceStart(System.Int32 startIndex)
    // Offset: 0x462D488
    static int SegmentToSequenceStart(int startIndex);
    // static public System.Int32 SegmentToSequenceEnd(System.Int32 endIndex)
    // Offset: 0x462D48C
    static int SegmentToSequenceEnd(int endIndex);
    // static public System.Int32 ArrayToSequenceStart(System.Int32 startIndex)
    // Offset: 0x462D490
    static int ArrayToSequenceStart(int startIndex);
    // static public System.Int32 ArrayToSequenceEnd(System.Int32 endIndex)
    // Offset: 0x462D494
    static int ArrayToSequenceEnd(int endIndex);
    // static public System.Int32 MemoryManagerToSequenceStart(System.Int32 startIndex)
    // Offset: 0x462D49C
    static int MemoryManagerToSequenceStart(int startIndex);
    // static public System.Int32 MemoryManagerToSequenceEnd(System.Int32 endIndex)
    // Offset: 0x462D4A4
    static int MemoryManagerToSequenceEnd(int endIndex);
    // static public System.Int32 StringToSequenceStart(System.Int32 startIndex)
    // Offset: 0x462D4A8
    static int StringToSequenceStart(int startIndex);
    // static public System.Int32 StringToSequenceEnd(System.Int32 endIndex)
    // Offset: 0x462D4B0
    static int StringToSequenceEnd(int endIndex);
  }; // System.Buffers.ReadOnlySequence
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::Buffers::ReadOnlySequence::SegmentToSequenceStart
// Il2CppName: SegmentToSequenceStart
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(int)>(&System::Buffers::ReadOnlySequence::SegmentToSequenceStart)> {
  static const MethodInfo* get() {
    static auto* startIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Buffers::ReadOnlySequence*), "SegmentToSequenceStart", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{startIndex});
  }
};
// Writing MetadataGetter for method: System::Buffers::ReadOnlySequence::SegmentToSequenceEnd
// Il2CppName: SegmentToSequenceEnd
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(int)>(&System::Buffers::ReadOnlySequence::SegmentToSequenceEnd)> {
  static const MethodInfo* get() {
    static auto* endIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Buffers::ReadOnlySequence*), "SegmentToSequenceEnd", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{endIndex});
  }
};
// Writing MetadataGetter for method: System::Buffers::ReadOnlySequence::ArrayToSequenceStart
// Il2CppName: ArrayToSequenceStart
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(int)>(&System::Buffers::ReadOnlySequence::ArrayToSequenceStart)> {
  static const MethodInfo* get() {
    static auto* startIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Buffers::ReadOnlySequence*), "ArrayToSequenceStart", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{startIndex});
  }
};
// Writing MetadataGetter for method: System::Buffers::ReadOnlySequence::ArrayToSequenceEnd
// Il2CppName: ArrayToSequenceEnd
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(int)>(&System::Buffers::ReadOnlySequence::ArrayToSequenceEnd)> {
  static const MethodInfo* get() {
    static auto* endIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Buffers::ReadOnlySequence*), "ArrayToSequenceEnd", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{endIndex});
  }
};
// Writing MetadataGetter for method: System::Buffers::ReadOnlySequence::MemoryManagerToSequenceStart
// Il2CppName: MemoryManagerToSequenceStart
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(int)>(&System::Buffers::ReadOnlySequence::MemoryManagerToSequenceStart)> {
  static const MethodInfo* get() {
    static auto* startIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Buffers::ReadOnlySequence*), "MemoryManagerToSequenceStart", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{startIndex});
  }
};
// Writing MetadataGetter for method: System::Buffers::ReadOnlySequence::MemoryManagerToSequenceEnd
// Il2CppName: MemoryManagerToSequenceEnd
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(int)>(&System::Buffers::ReadOnlySequence::MemoryManagerToSequenceEnd)> {
  static const MethodInfo* get() {
    static auto* endIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Buffers::ReadOnlySequence*), "MemoryManagerToSequenceEnd", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{endIndex});
  }
};
// Writing MetadataGetter for method: System::Buffers::ReadOnlySequence::StringToSequenceStart
// Il2CppName: StringToSequenceStart
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(int)>(&System::Buffers::ReadOnlySequence::StringToSequenceStart)> {
  static const MethodInfo* get() {
    static auto* startIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Buffers::ReadOnlySequence*), "StringToSequenceStart", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{startIndex});
  }
};
// Writing MetadataGetter for method: System::Buffers::ReadOnlySequence::StringToSequenceEnd
// Il2CppName: StringToSequenceEnd
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(int)>(&System::Buffers::ReadOnlySequence::StringToSequenceEnd)> {
  static const MethodInfo* get() {
    static auto* endIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Buffers::ReadOnlySequence*), "StringToSequenceEnd", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{endIndex});
  }
};
