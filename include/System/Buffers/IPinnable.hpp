// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/byref.hpp"
// Completed includes
// Type namespace: System.Buffers
namespace System::Buffers {
  // Forward declaring type: IPinnable
  class IPinnable;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::Buffers::IPinnable);
DEFINE_IL2CPP_ARG_TYPE(::System::Buffers::IPinnable*, "System.Buffers", "IPinnable");
// Type namespace: System.Buffers
namespace System::Buffers {
  // Size: 0x0
  #pragma pack(push, 1)
  // Autogenerated type: System.Buffers.IPinnable
  // [TokenAttribute] Offset: FFFFFFFF
  class IPinnable {
    public:
    // public System.Void Unpin()
    // Offset: 0xFFFFFFFFFFFFFFFF
    void Unpin();
  }; // System.Buffers.IPinnable
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::Buffers::IPinnable::Unpin
// Il2CppName: Unpin
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Buffers::IPinnable::*)()>(&System::Buffers::IPinnable::Unpin)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Buffers::IPinnable*), "Unpin", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
