// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: ICollection`1<T>
  template<typename T>
  class ICollection_1;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Array
  class Array;
}
// Completed forward declares
// Type namespace: System.Collections.ObjectModel
namespace System::Collections::ObjectModel {
  // Forward declaring type: ReadOnlyDictionaryHelpers
  class ReadOnlyDictionaryHelpers;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::Collections::ObjectModel::ReadOnlyDictionaryHelpers);
DEFINE_IL2CPP_ARG_TYPE(::System::Collections::ObjectModel::ReadOnlyDictionaryHelpers*, "System.Collections.ObjectModel", "ReadOnlyDictionaryHelpers");
// Type namespace: System.Collections.ObjectModel
namespace System::Collections::ObjectModel {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: System.Collections.ObjectModel.ReadOnlyDictionaryHelpers
  // [TokenAttribute] Offset: FFFFFFFF
  class ReadOnlyDictionaryHelpers : public ::Il2CppObject {
    public:
    // static System.Void CopyToNonGenericICollectionHelper(System.Collections.Generic.ICollection`1<T> collection, System.Array array, System.Int32 index)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class T>
    static void CopyToNonGenericICollectionHelper(::System::Collections::Generic::ICollection_1<T>* collection, ::System::Array* array, int index) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ObjectModel::ReadOnlyDictionaryHelpers::CopyToNonGenericICollectionHelper");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Collections.ObjectModel", "ReadOnlyDictionaryHelpers", "CopyToNonGenericICollectionHelper", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(collection), ::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(index)})));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}));
      ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___generic__method, collection, array, index);
    }
  }; // System.Collections.ObjectModel.ReadOnlyDictionaryHelpers
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::Collections::ObjectModel::ReadOnlyDictionaryHelpers::CopyToNonGenericICollectionHelper
// Il2CppName: CopyToNonGenericICollectionHelper
// Cannot write MetadataGetter for generic methods!
