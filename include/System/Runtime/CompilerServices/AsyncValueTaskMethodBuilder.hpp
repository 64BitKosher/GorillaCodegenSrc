// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Including type: System.Runtime.CompilerServices.AsyncTaskMethodBuilder
#include "System/Runtime/CompilerServices/AsyncTaskMethodBuilder.hpp"
// Completed includes
// Type namespace: System.Runtime.CompilerServices
namespace System::Runtime::CompilerServices {
  // Forward declaring type: AsyncValueTaskMethodBuilder
  struct AsyncValueTaskMethodBuilder;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::System::Runtime::CompilerServices::AsyncValueTaskMethodBuilder, "System.Runtime.CompilerServices", "AsyncValueTaskMethodBuilder");
// Type namespace: System.Runtime.CompilerServices
namespace System::Runtime::CompilerServices {
  // WARNING Size may be invalid!
  // Autogenerated type: System.Runtime.CompilerServices.AsyncValueTaskMethodBuilder
  // [TokenAttribute] Offset: FFFFFFFF
  struct AsyncValueTaskMethodBuilder/*, public ::System::ValueType*/ {
    public:
    public:
    // private System.Runtime.CompilerServices.AsyncTaskMethodBuilder _methodBuilder
    // Size: 0xFFFFFFFF
    // Offset: 0x0
    ::System::Runtime::CompilerServices::AsyncTaskMethodBuilder methodBuilder;
    // private System.Boolean _haveResult
    // Size: 0x1
    // Offset: 0x18
    bool haveResult;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean _useBuilder
    // Size: 0x1
    // Offset: 0x19
    bool useBuilder;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    public:
    // Creating value type constructor for type: AsyncValueTaskMethodBuilder
    constexpr AsyncValueTaskMethodBuilder(::System::Runtime::CompilerServices::AsyncTaskMethodBuilder methodBuilder_ = {}, bool haveResult_ = {}, bool useBuilder_ = {}) noexcept : methodBuilder{methodBuilder_}, haveResult{haveResult_}, useBuilder{useBuilder_} {}
    // Creating interface conversion operator: operator ::System::ValueType
    operator ::System::ValueType() noexcept {
      return *reinterpret_cast<::System::ValueType*>(this);
    }
    // Get instance field reference: private System.Runtime.CompilerServices.AsyncTaskMethodBuilder _methodBuilder
    [[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncTaskMethodBuilder& dyn__methodBuilder();
    // Get instance field reference: private System.Boolean _haveResult
    [[deprecated("Use field access instead!")]] bool& dyn__haveResult();
    // Get instance field reference: private System.Boolean _useBuilder
    [[deprecated("Use field access instead!")]] bool& dyn__useBuilder();
  }; // System.Runtime.CompilerServices.AsyncValueTaskMethodBuilder
  // WARNING Not writing size check since size may be invalid!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
