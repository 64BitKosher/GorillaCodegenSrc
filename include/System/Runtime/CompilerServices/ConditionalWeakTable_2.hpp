// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: System.Collections.Generic.KeyValuePair`2
#include "System/Collections/Generic/KeyValuePair_2.hpp"
// Including type: System.Runtime.CompilerServices.Ephemeron
#include "System/Runtime/CompilerServices/Ephemeron.hpp"
// Including type: System.Int32
#include "System/Int32.hpp"
// Including type: System.Single
#include "System/Single.hpp"
// Including type: System.MulticastDelegate
#include "System/MulticastDelegate.hpp"
// Including type: System.Collections.Generic.IEnumerator`1
#include "System/Collections/Generic/IEnumerator_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Runtime::CompilerServices
namespace System::Runtime::CompilerServices {
  // Skipping declaration: CreateValueCallback because it is already included!
  // Skipping declaration: Enumerator because it is already included!
}
// Forward declaring namespace: System::Collections
namespace System::Collections {
  // Skipping declaration: IEnumerator because it is already included!
}
// Completed forward declares
// Type namespace: System.Runtime.CompilerServices
namespace System::Runtime::CompilerServices {
  // Forward declaring type: ConditionalWeakTable`2<TKey, TValue>
  template<typename TKey, typename TValue>
  class ConditionalWeakTable_2;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE_GENERIC_CLASS(::System::Runtime::CompilerServices::ConditionalWeakTable_2, "System.Runtime.CompilerServices", "ConditionalWeakTable`2");
// Type namespace: System.Runtime.CompilerServices
namespace System::Runtime::CompilerServices {
  // WARNING Size may be invalid!
  // Autogenerated type: System.Runtime.CompilerServices.ConditionalWeakTable`2
  // [TokenAttribute] Offset: FFFFFFFF
  template<typename TKey, typename TValue>
  class ConditionalWeakTable_2 : public ::Il2CppObject/*, public ::System::Collections::Generic::IEnumerable_1<::System::Collections::Generic::KeyValuePair_2<TKey, TValue>>*/ {
    public:
    // Nested type: ::System::Runtime::CompilerServices::ConditionalWeakTable_2::CreateValueCallback<TKey, TValue>
    class CreateValueCallback;
    // Nested type: ::System::Runtime::CompilerServices::ConditionalWeakTable_2::Enumerator<TKey, TValue>
    class Enumerator;
    // WARNING Size may be invalid!
    // Autogenerated type: System.Runtime.CompilerServices.ConditionalWeakTable`2/CreateValueCallback
    // [TokenAttribute] Offset: FFFFFFFF
    class CreateValueCallback : public ::il2cpp_utils::il2cpp_type_check::NestedType, public ::System::MulticastDelegate {
      public:
      using declaring_type = ConditionalWeakTable_2<TKey, TValue>*;
      static constexpr std::string_view NESTED_NAME = "CreateValueCallback";
      static constexpr bool IS_VALUE_TYPE = false;
      // public System.Void .ctor(System.Object object, System.IntPtr method)
      // Offset: 0xFFFFFFFFFFFFFFFF
      template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
      static typename ConditionalWeakTable_2<TKey, TValue>::CreateValueCallback* New_ctor(::Il2CppObject* object, ::System::IntPtr method) {
        static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::CompilerServices::ConditionalWeakTable_2::CreateValueCallback::.ctor");
        return THROW_UNLESS((::il2cpp_utils::New<typename ConditionalWeakTable_2<TKey, TValue>::CreateValueCallback*, creationType>(object, method)));
      }
      // public TValue Invoke(TKey key)
      // Offset: 0xFFFFFFFFFFFFFFFF
      TValue Invoke(TKey key) {
        static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::CompilerServices::ConditionalWeakTable_2::CreateValueCallback::Invoke");
        auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(typename ::System::Runtime::CompilerServices::ConditionalWeakTable_2<TKey, TValue>::CreateValueCallback*), -1)));
        return ::il2cpp_utils::RunMethodRethrow<TValue, false>(this, ___internal__method, key);
      }
    }; // System.Runtime.CompilerServices.ConditionalWeakTable`2/CreateValueCallback
    // Could not write size check! Type: System.Runtime.CompilerServices.ConditionalWeakTable`2/CreateValueCallback is generic, or has no fields that are valid for size checks!
    // WARNING Size may be invalid!
    // Autogenerated type: System.Runtime.CompilerServices.ConditionalWeakTable`2/Enumerator
    // [TokenAttribute] Offset: FFFFFFFF
    class Enumerator : public ::il2cpp_utils::il2cpp_type_check::NestedType, public ::Il2CppObject/*, public ::System::Collections::Generic::IEnumerator_1<::System::Collections::Generic::KeyValuePair_2<TKey, TValue>>*/ {
      public:
      using declaring_type = ConditionalWeakTable_2<TKey, TValue>*;
      static constexpr std::string_view NESTED_NAME = "Enumerator";
      static constexpr bool IS_VALUE_TYPE = false;
      public:
      // private System.Runtime.CompilerServices.ConditionalWeakTable`2<TKey,TValue> _table
      // Size: 0x8
      // Offset: 0x0
      ::System::Runtime::CompilerServices::ConditionalWeakTable_2<TKey, TValue>* table;
      // Field size check
      static_assert(sizeof(::System::Runtime::CompilerServices::ConditionalWeakTable_2<TKey, TValue>*) == 0x8);
      // private System.Int32 _currentIndex
      // Size: 0x4
      // Offset: 0x0
      int currentIndex;
      // Field size check
      static_assert(sizeof(int) == 0x4);
      // private System.Collections.Generic.KeyValuePair`2<TKey,TValue> _current
      // Size: 0xFFFFFFFF
      // Offset: 0x0
      ::System::Collections::Generic::KeyValuePair_2<TKey, TValue> current;
      public:
      // Creating interface conversion operator: operator ::System::Collections::Generic::IEnumerator_1<::System::Collections::Generic::KeyValuePair_2<TKey, TValue>>
      operator ::System::Collections::Generic::IEnumerator_1<::System::Collections::Generic::KeyValuePair_2<TKey, TValue>>() noexcept {
        return *reinterpret_cast<::System::Collections::Generic::IEnumerator_1<::System::Collections::Generic::KeyValuePair_2<TKey, TValue>>*>(this);
      }
      // Autogenerated instance field getter
      // Get instance field: private System.Runtime.CompilerServices.ConditionalWeakTable`2<TKey,TValue> _table
      [[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::ConditionalWeakTable_2<TKey, TValue>*& dyn__table() {
        static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::CompilerServices::ConditionalWeakTable_2::Enumerator::dyn__table");
        auto ___internal__instance = this;
        static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_table"))->offset;
        return *reinterpret_cast<::System::Runtime::CompilerServices::ConditionalWeakTable_2<TKey, TValue>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
      }
      // Autogenerated instance field getter
      // Get instance field: private System.Int32 _currentIndex
      [[deprecated("Use field access instead!")]] int& dyn__currentIndex() {
        static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::CompilerServices::ConditionalWeakTable_2::Enumerator::dyn__currentIndex");
        auto ___internal__instance = this;
        static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_currentIndex"))->offset;
        return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
      }
      // Autogenerated instance field getter
      // Get instance field: private System.Collections.Generic.KeyValuePair`2<TKey,TValue> _current
      [[deprecated("Use field access instead!")]] ::System::Collections::Generic::KeyValuePair_2<TKey, TValue>& dyn__current() {
        static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::CompilerServices::ConditionalWeakTable_2::Enumerator::dyn__current");
        auto ___internal__instance = this;
        static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_current"))->offset;
        return *reinterpret_cast<::System::Collections::Generic::KeyValuePair_2<TKey, TValue>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
      }
      // public System.Void .ctor(System.Runtime.CompilerServices.ConditionalWeakTable`2<TKey,TValue> table)
      // Offset: 0xFFFFFFFFFFFFFFFF
      template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
      static typename ConditionalWeakTable_2<TKey, TValue>::Enumerator* New_ctor(::System::Runtime::CompilerServices::ConditionalWeakTable_2<TKey, TValue>* table) {
        static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::CompilerServices::ConditionalWeakTable_2::Enumerator::.ctor");
        return THROW_UNLESS((::il2cpp_utils::New<typename ConditionalWeakTable_2<TKey, TValue>::Enumerator*, creationType>(table)));
      }
      // public System.Void Dispose()
      // Offset: 0xFFFFFFFFFFFFFFFF
      void Dispose() {
        static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::CompilerServices::ConditionalWeakTable_2::Enumerator::Dispose");
        auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(typename ::System::Runtime::CompilerServices::ConditionalWeakTable_2<TKey, TValue>::Enumerator*), -1)));
        ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
      }
      // public System.Boolean MoveNext()
      // Offset: 0xFFFFFFFFFFFFFFFF
      bool MoveNext() {
        static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::CompilerServices::ConditionalWeakTable_2::Enumerator::MoveNext");
        auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(typename ::System::Runtime::CompilerServices::ConditionalWeakTable_2<TKey, TValue>::Enumerator*), -1)));
        return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
      }
      // public System.Collections.Generic.KeyValuePair`2<TKey,TValue> get_Current()
      // Offset: 0xFFFFFFFFFFFFFFFF
      ::System::Collections::Generic::KeyValuePair_2<TKey, TValue> get_Current() {
        static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::CompilerServices::ConditionalWeakTable_2::Enumerator::get_Current");
        auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(typename ::System::Runtime::CompilerServices::ConditionalWeakTable_2<TKey, TValue>::Enumerator*), -1)));
        return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::KeyValuePair_2<TKey, TValue>, false>(this, ___internal__method);
      }
      // private System.Object System.Collections.IEnumerator.get_Current()
      // Offset: 0xFFFFFFFFFFFFFFFF
      ::Il2CppObject* System_Collections_IEnumerator_get_Current() {
        static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::CompilerServices::ConditionalWeakTable_2::Enumerator::System.Collections.IEnumerator.get_Current");
        auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(typename ::System::Runtime::CompilerServices::ConditionalWeakTable_2<TKey, TValue>::Enumerator*), -1)));
        return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
      }
      // public System.Void Reset()
      // Offset: 0xFFFFFFFFFFFFFFFF
      void Reset() {
        static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::CompilerServices::ConditionalWeakTable_2::Enumerator::Reset");
        auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(typename ::System::Runtime::CompilerServices::ConditionalWeakTable_2<TKey, TValue>::Enumerator*), -1)));
        ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
      }
      // protected override System.Void Finalize()
      // Offset: 0xFFFFFFFFFFFFFFFF
      // Implemented from: System.Object
      // Base method: System.Void Object::Finalize()
      void Finalize() {
        static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::CompilerServices::ConditionalWeakTable_2::Enumerator::Finalize");
        auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), -1));
        ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
      }
    }; // System.Runtime.CompilerServices.ConditionalWeakTable`2/Enumerator
    // Could not write size check! Type: System.Runtime.CompilerServices.ConditionalWeakTable`2/Enumerator is generic, or has no fields that are valid for size checks!
    public:
    // private System.Runtime.CompilerServices.Ephemeron[] data
    // Size: 0x8
    // Offset: 0x0
    ::ArrayW<::System::Runtime::CompilerServices::Ephemeron> data;
    // Field size check
    static_assert(sizeof(::ArrayW<::System::Runtime::CompilerServices::Ephemeron>) == 0x8);
    // private System.Object _lock
    // Size: 0x8
    // Offset: 0x0
    ::Il2CppObject* lock;
    // Field size check
    static_assert(sizeof(::Il2CppObject*) == 0x8);
    // private System.Int32 size
    // Size: 0x4
    // Offset: 0x0
    int size;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Creating interface conversion operator: operator ::System::Collections::Generic::IEnumerable_1<::System::Collections::Generic::KeyValuePair_2<TKey, TValue>>
    operator ::System::Collections::Generic::IEnumerable_1<::System::Collections::Generic::KeyValuePair_2<TKey, TValue>>() noexcept {
      return *reinterpret_cast<::System::Collections::Generic::IEnumerable_1<::System::Collections::Generic::KeyValuePair_2<TKey, TValue>>*>(this);
    }
    // Autogenerated static field getter
    // Get static field: static private System.Int32 INITIAL_SIZE
    static int _get_INITIAL_SIZE() {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::CompilerServices::ConditionalWeakTable_2::_get_INITIAL_SIZE");
      return THROW_UNLESS((il2cpp_utils::GetFieldValue<int>(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<ConditionalWeakTable_2<TKey, TValue>*>::get(), "INITIAL_SIZE")));
    }
    // Autogenerated static field setter
    // Set static field: static private System.Int32 INITIAL_SIZE
    static void _set_INITIAL_SIZE(int value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::CompilerServices::ConditionalWeakTable_2::_set_INITIAL_SIZE");
      THROW_UNLESS((il2cpp_utils::SetFieldValue(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<ConditionalWeakTable_2<TKey, TValue>*>::get(), "INITIAL_SIZE", value)));
    }
    // Autogenerated static field getter
    // Get static field: static private System.Single LOAD_FACTOR
    static float _get_LOAD_FACTOR() {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::CompilerServices::ConditionalWeakTable_2::_get_LOAD_FACTOR");
      return THROW_UNLESS((il2cpp_utils::GetFieldValue<float>(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<ConditionalWeakTable_2<TKey, TValue>*>::get(), "LOAD_FACTOR")));
    }
    // Autogenerated static field setter
    // Set static field: static private System.Single LOAD_FACTOR
    static void _set_LOAD_FACTOR(float value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::CompilerServices::ConditionalWeakTable_2::_set_LOAD_FACTOR");
      THROW_UNLESS((il2cpp_utils::SetFieldValue(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<ConditionalWeakTable_2<TKey, TValue>*>::get(), "LOAD_FACTOR", value)));
    }
    // Autogenerated static field getter
    // Get static field: static private System.Single COMPACT_FACTOR
    static float _get_COMPACT_FACTOR() {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::CompilerServices::ConditionalWeakTable_2::_get_COMPACT_FACTOR");
      return THROW_UNLESS((il2cpp_utils::GetFieldValue<float>(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<ConditionalWeakTable_2<TKey, TValue>*>::get(), "COMPACT_FACTOR")));
    }
    // Autogenerated static field setter
    // Set static field: static private System.Single COMPACT_FACTOR
    static void _set_COMPACT_FACTOR(float value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::CompilerServices::ConditionalWeakTable_2::_set_COMPACT_FACTOR");
      THROW_UNLESS((il2cpp_utils::SetFieldValue(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<ConditionalWeakTable_2<TKey, TValue>*>::get(), "COMPACT_FACTOR", value)));
    }
    // Autogenerated static field getter
    // Get static field: static private System.Single EXPAND_FACTOR
    static float _get_EXPAND_FACTOR() {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::CompilerServices::ConditionalWeakTable_2::_get_EXPAND_FACTOR");
      return THROW_UNLESS((il2cpp_utils::GetFieldValue<float>(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<ConditionalWeakTable_2<TKey, TValue>*>::get(), "EXPAND_FACTOR")));
    }
    // Autogenerated static field setter
    // Set static field: static private System.Single EXPAND_FACTOR
    static void _set_EXPAND_FACTOR(float value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::CompilerServices::ConditionalWeakTable_2::_set_EXPAND_FACTOR");
      THROW_UNLESS((il2cpp_utils::SetFieldValue(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<ConditionalWeakTable_2<TKey, TValue>*>::get(), "EXPAND_FACTOR", value)));
    }
    // Autogenerated instance field getter
    // Get instance field: private System.Runtime.CompilerServices.Ephemeron[] data
    [[deprecated("Use field access instead!")]] ::ArrayW<::System::Runtime::CompilerServices::Ephemeron>& dyn_data() {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::CompilerServices::ConditionalWeakTable_2::dyn_data");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "data"))->offset;
      return *reinterpret_cast<::ArrayW<::System::Runtime::CompilerServices::Ephemeron>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: private System.Object _lock
    [[deprecated("Use field access instead!")]] ::Il2CppObject*& dyn__lock() {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::CompilerServices::ConditionalWeakTable_2::dyn__lock");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lock"))->offset;
      return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: private System.Int32 size
    [[deprecated("Use field access instead!")]] int& dyn_size() {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::CompilerServices::ConditionalWeakTable_2::dyn_size");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "size"))->offset;
      return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // private System.Void RehashWithoutResize()
    // Offset: 0xFFFFFFFFFFFFFFFF
    void RehashWithoutResize() {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::CompilerServices::ConditionalWeakTable_2::RehashWithoutResize");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RehashWithoutResize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
    }
    // private System.Void RecomputeSize()
    // Offset: 0xFFFFFFFFFFFFFFFF
    void RecomputeSize() {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::CompilerServices::ConditionalWeakTable_2::RecomputeSize");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RecomputeSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
    }
    // private System.Void Rehash()
    // Offset: 0xFFFFFFFFFFFFFFFF
    void Rehash() {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::CompilerServices::ConditionalWeakTable_2::Rehash");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Rehash", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
    }
    // public System.Void Add(TKey key, TValue value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void Add(TKey key, TValue value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::CompilerServices::ConditionalWeakTable_2::Add");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, key, value);
    }
    // public System.Boolean Remove(TKey key)
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool Remove(TKey key) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::CompilerServices::ConditionalWeakTable_2::Remove");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Remove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
      return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, key);
    }
    // public System.Boolean TryGetValue(TKey key, out TValue value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool TryGetValue(TKey key, ByRef<TValue> value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::CompilerServices::ConditionalWeakTable_2::TryGetValue");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryGetValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractIndependentType<TValue&>()})));
      return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, key, byref(value));
    }
    // public TValue GetValue(TKey key, System.Runtime.CompilerServices.ConditionalWeakTable`2/CreateValueCallback<TKey,TValue> createValueCallback)
    // Offset: 0xFFFFFFFFFFFFFFFF
    TValue GetValue(TKey key, typename ::System::Runtime::CompilerServices::ConditionalWeakTable_2<TKey, TValue>::CreateValueCallback* createValueCallback) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::CompilerServices::ConditionalWeakTable_2::GetValue");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(createValueCallback)})));
      return ::il2cpp_utils::RunMethodRethrow<TValue, false>(this, ___internal__method, key, createValueCallback);
    }
    // private System.Collections.Generic.IEnumerator`1<System.Collections.Generic.KeyValuePair`2<TKey,TValue>> System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey,TValue>>.GetEnumerator()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::System::Collections::Generic::IEnumerator_1<::System::Collections::Generic::KeyValuePair_2<TKey, TValue>>* System_Collections_Generic_IEnumerable$System_Collections_Generic_KeyValuePair$TKey_TValue$$_GetEnumerator() {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::CompilerServices::ConditionalWeakTable_2::System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey,TValue>>.GetEnumerator");
      auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Runtime::CompilerServices::ConditionalWeakTable_2<TKey, TValue>*), -1)));
      return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerator_1<::System::Collections::Generic::KeyValuePair_2<TKey, TValue>>*, false>(this, ___internal__method);
    }
    // private System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::CompilerServices::ConditionalWeakTable_2::System.Collections.IEnumerable.GetEnumerator");
      auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Runtime::CompilerServices::ConditionalWeakTable_2<TKey, TValue>*), -1)));
      return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
    }
    // public System.Void .ctor()
    // Offset: 0xFFFFFFFFFFFFFFFF
    // Implemented from: System.Object
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static ConditionalWeakTable_2<TKey, TValue>* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::CompilerServices::ConditionalWeakTable_2::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<ConditionalWeakTable_2<TKey, TValue>*, creationType>()));
    }
    // protected override System.Void Finalize()
    // Offset: 0xFFFFFFFFFFFFFFFF
    // Implemented from: System.Object
    // Base method: System.Void Object::Finalize()
    void Finalize() {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::CompilerServices::ConditionalWeakTable_2::Finalize");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), -1));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
    }
  }; // System.Runtime.CompilerServices.ConditionalWeakTable`2
  // Could not write size check! Type: System.Runtime.CompilerServices.ConditionalWeakTable`2 is generic, or has no fields that are valid for size checks!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
