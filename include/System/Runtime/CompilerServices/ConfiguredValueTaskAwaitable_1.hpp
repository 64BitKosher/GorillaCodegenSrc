// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Including type: System.Threading.Tasks.ValueTask`1
#include "System/Threading/Tasks/ValueTask_1.hpp"
// Including type: System.Runtime.CompilerServices.ICriticalNotifyCompletion
#include "System/Runtime/CompilerServices/ICriticalNotifyCompletion.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Runtime::CompilerServices
namespace System::Runtime::CompilerServices {
  // Skipping declaration: ConfiguredValueTaskAwaiter because it is already included!
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Action
  class Action;
}
// Completed forward declares
// Type namespace: System.Runtime.CompilerServices
namespace System::Runtime::CompilerServices {
  // Forward declaring type: ConfiguredValueTaskAwaitable`1<TResult>
  template<typename TResult>
  struct ConfiguredValueTaskAwaitable_1;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE_GENERIC_STRUCT(::System::Runtime::CompilerServices::ConfiguredValueTaskAwaitable_1, "System.Runtime.CompilerServices", "ConfiguredValueTaskAwaitable`1");
// Type namespace: System.Runtime.CompilerServices
namespace System::Runtime::CompilerServices {
  // WARNING Size may be invalid!
  // Autogenerated type: System.Runtime.CompilerServices.ConfiguredValueTaskAwaitable`1
  // [TokenAttribute] Offset: FFFFFFFF
  // [IsReadOnlyAttribute] Offset: FFFFFFFF
  template<typename TResult>
  struct ConfiguredValueTaskAwaitable_1/*, public ::System::ValueType*/ {
    public:
    // Nested type: ::System::Runtime::CompilerServices::ConfiguredValueTaskAwaitable_1::ConfiguredValueTaskAwaiter<TResult>
    struct ConfiguredValueTaskAwaiter;
    // WARNING Size may be invalid!
    // Autogenerated type: System.Runtime.CompilerServices.ConfiguredValueTaskAwaitable`1/ConfiguredValueTaskAwaiter
    // [TokenAttribute] Offset: FFFFFFFF
    // [IsReadOnlyAttribute] Offset: FFFFFFFF
    struct ConfiguredValueTaskAwaiter : public ::il2cpp_utils::il2cpp_type_check::NestedType/*, public ::System::ValueType, public ::System::Runtime::CompilerServices::ICriticalNotifyCompletion*/ {
      public:
      using declaring_type = ConfiguredValueTaskAwaitable_1<TResult>;
      static constexpr std::string_view NESTED_NAME = "ConfiguredValueTaskAwaiter";
      static constexpr bool IS_VALUE_TYPE = true;
      public:
      // private readonly System.Threading.Tasks.ValueTask`1<TResult> _value
      // Size: 0xFFFFFFFF
      // Offset: 0x0
      ::System::Threading::Tasks::ValueTask_1<TResult> value;
      public:
      // Creating value type constructor for type: ConfiguredValueTaskAwaiter
      constexpr ConfiguredValueTaskAwaiter(::System::Threading::Tasks::ValueTask_1<TResult> value_ = {}) noexcept : value{value_} {}
      // Creating interface conversion operator: operator ::System::ValueType
      operator ::System::ValueType() noexcept {
        return *reinterpret_cast<::System::ValueType*>(this);
      }
      // Creating interface conversion operator: operator ::System::Runtime::CompilerServices::ICriticalNotifyCompletion
      operator ::System::Runtime::CompilerServices::ICriticalNotifyCompletion() noexcept {
        return *reinterpret_cast<::System::Runtime::CompilerServices::ICriticalNotifyCompletion*>(this);
      }
      // Creating conversion operator: operator ::System::Threading::Tasks::ValueTask_1<TResult>
      constexpr operator ::System::Threading::Tasks::ValueTask_1<TResult>() const noexcept {
        return value;
      }
      // Autogenerated instance field getter
      // Get instance field: private readonly System.Threading.Tasks.ValueTask`1<TResult> _value
      [[deprecated("Use field access instead!")]] ::System::Threading::Tasks::ValueTask_1<TResult>& dyn__value() {
        static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::CompilerServices::ConfiguredValueTaskAwaitable_1::ConfiguredValueTaskAwaiter::dyn__value");
        auto ___internal__instance = *this;
        static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_value"))->offset;
        return *reinterpret_cast<::System::Threading::Tasks::ValueTask_1<TResult>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
      }
      // System.Void .ctor(System.Threading.Tasks.ValueTask`1<TResult> value)
      // Offset: 0xFFFFFFFFFFFFFFFF
      // ABORTED: conflicts with another method.  ConfiguredValueTaskAwaiter(::System::Threading::Tasks::ValueTask_1<TResult> value)
      // public System.Boolean get_IsCompleted()
      // Offset: 0xFFFFFFFFFFFFFFFF
      bool get_IsCompleted() {
        static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::CompilerServices::ConfiguredValueTaskAwaitable_1::ConfiguredValueTaskAwaiter::get_IsCompleted");
        static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_IsCompleted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
        return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
      }
      // public TResult GetResult()
      // Offset: 0xFFFFFFFFFFFFFFFF
      TResult GetResult() {
        static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::CompilerServices::ConfiguredValueTaskAwaitable_1::ConfiguredValueTaskAwaiter::GetResult");
        static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
        return ::il2cpp_utils::RunMethodRethrow<TResult, false>(this, ___internal__method);
      }
      // public System.Void OnCompleted(System.Action continuation)
      // Offset: 0xFFFFFFFFFFFFFFFF
      void OnCompleted(::System::Action* continuation) {
        static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::CompilerServices::ConfiguredValueTaskAwaitable_1::ConfiguredValueTaskAwaiter::OnCompleted");
        auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(typename ::System::Runtime::CompilerServices::ConfiguredValueTaskAwaitable_1<TResult>::ConfiguredValueTaskAwaiter), -1));
        ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, continuation);
      }
      // public System.Void UnsafeOnCompleted(System.Action continuation)
      // Offset: 0xFFFFFFFFFFFFFFFF
      void UnsafeOnCompleted(::System::Action* continuation) {
        static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::CompilerServices::ConfiguredValueTaskAwaitable_1::ConfiguredValueTaskAwaiter::UnsafeOnCompleted");
        auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(typename ::System::Runtime::CompilerServices::ConfiguredValueTaskAwaitable_1<TResult>::ConfiguredValueTaskAwaiter), -1));
        ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, continuation);
      }
    }; // System.Runtime.CompilerServices.ConfiguredValueTaskAwaitable`1/ConfiguredValueTaskAwaiter
    // Could not write size check! Type: System.Runtime.CompilerServices.ConfiguredValueTaskAwaitable`1/ConfiguredValueTaskAwaiter is generic, or has no fields that are valid for size checks!
    public:
    // private readonly System.Threading.Tasks.ValueTask`1<TResult> _value
    // Size: 0xFFFFFFFF
    // Offset: 0x0
    ::System::Threading::Tasks::ValueTask_1<TResult> value;
    public:
    // Creating value type constructor for type: ConfiguredValueTaskAwaitable_1
    constexpr ConfiguredValueTaskAwaitable_1(::System::Threading::Tasks::ValueTask_1<TResult> value_ = {}) noexcept : value{value_} {}
    // Creating interface conversion operator: operator ::System::ValueType
    operator ::System::ValueType() noexcept {
      return *reinterpret_cast<::System::ValueType*>(this);
    }
    // Creating conversion operator: operator ::System::Threading::Tasks::ValueTask_1<TResult>
    constexpr operator ::System::Threading::Tasks::ValueTask_1<TResult>() const noexcept {
      return value;
    }
    // Autogenerated instance field getter
    // Get instance field: private readonly System.Threading.Tasks.ValueTask`1<TResult> _value
    [[deprecated("Use field access instead!")]] ::System::Threading::Tasks::ValueTask_1<TResult>& dyn__value() {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::CompilerServices::ConfiguredValueTaskAwaitable_1::dyn__value");
      auto ___internal__instance = *this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_value"))->offset;
      return *reinterpret_cast<::System::Threading::Tasks::ValueTask_1<TResult>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // System.Void .ctor(System.Threading.Tasks.ValueTask`1<TResult> value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    // ABORTED: conflicts with another method.  ConfiguredValueTaskAwaitable_1(::System::Threading::Tasks::ValueTask_1<TResult> value)
    // public System.Runtime.CompilerServices.ConfiguredValueTaskAwaitable`1/ConfiguredValueTaskAwaiter<TResult> GetAwaiter()
    // Offset: 0xFFFFFFFFFFFFFFFF
    typename ::System::Runtime::CompilerServices::ConfiguredValueTaskAwaitable_1<TResult>::ConfiguredValueTaskAwaiter GetAwaiter() {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::CompilerServices::ConfiguredValueTaskAwaitable_1::GetAwaiter");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetAwaiter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      return ::il2cpp_utils::RunMethodRethrow<typename ::System::Runtime::CompilerServices::ConfiguredValueTaskAwaitable_1<TResult>::ConfiguredValueTaskAwaiter, false>(this, ___internal__method);
    }
  }; // System.Runtime.CompilerServices.ConfiguredValueTaskAwaitable`1
  // Could not write size check! Type: System.Runtime.CompilerServices.ConfiguredValueTaskAwaitable`1 is generic, or has no fields that are valid for size checks!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
