// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Attribute
#include "System/Attribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
// Completed includes
// Type namespace: System.Runtime.CompilerServices
namespace System::Runtime::CompilerServices {
  // Forward declaring type: NullableAttribute
  class NullableAttribute_;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::Runtime::CompilerServices::NullableAttribute_);
DEFINE_IL2CPP_ARG_TYPE(::System::Runtime::CompilerServices::NullableAttribute_*, "System.Runtime.CompilerServices", "NullableAttribute");
// Type namespace: System.Runtime.CompilerServices
namespace System::Runtime::CompilerServices {
  // Size: 0x18
  #pragma pack(push, 1)
  // Autogenerated type: System.Runtime.CompilerServices.NullableAttribute
  // [TokenAttribute] Offset: FFFFFFFF
  // [AttributeUsageAttribute] Offset: FFFFFFFF
  // [EmbeddedAttribute] Offset: FFFFFFFF
  // [CompilerGeneratedAttribute] Offset: FFFFFFFF
  class NullableAttribute_ : public ::System::Attribute {
    public:
    public:
    // public readonly System.Byte[] NullableFlags
    // Size: 0x8
    // Offset: 0x10
    ::ArrayW<uint8_t> NullableFlags;
    // Field size check
    static_assert(sizeof(::ArrayW<uint8_t>) == 0x8);
    public:
    // Creating conversion operator: operator ::ArrayW<uint8_t>
    constexpr operator ::ArrayW<uint8_t>() const noexcept {
      return NullableFlags;
    }
    // Get instance field reference: public readonly System.Byte[] NullableFlags
    [[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& dyn_NullableFlags();
    // public System.Void .ctor(System.Byte )
    // Offset: 0x46E851C
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static NullableAttribute_* New_ctor(uint8_t param_0) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::CompilerServices::NullableAttribute_::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<NullableAttribute_*, creationType>(param_0)));
    }
    // public System.Void .ctor(System.Byte[] )
    // Offset: 0x46E85A4
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static NullableAttribute_* New_ctor(::ArrayW<uint8_t> param_0) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::CompilerServices::NullableAttribute_::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<NullableAttribute_*, creationType>(param_0)));
    }
  }; // System.Runtime.CompilerServices.NullableAttribute
  #pragma pack(pop)
  static check_size<sizeof(NullableAttribute_), 16 + sizeof(::ArrayW<uint8_t>)> __System_Runtime_CompilerServices_NullableAttribute_SizeCheck;
  static_assert(sizeof(NullableAttribute_) == 0x18);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::Runtime::CompilerServices::NullableAttribute_::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::Runtime::CompilerServices::NullableAttribute_::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
