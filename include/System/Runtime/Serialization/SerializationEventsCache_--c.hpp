// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Runtime.Serialization.SerializationEventsCache
#include "System/Runtime/Serialization/SerializationEventsCache.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Func`2<T, TResult>
  template<typename T, typename TResult>
  class Func_2;
  // Forward declaring type: Type
  class Type;
}
// Forward declaring namespace: System::Runtime::Serialization
namespace System::Runtime::Serialization {
  // Forward declaring type: SerializationEvents
  class SerializationEvents;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::Runtime::Serialization::SerializationEventsCache::$$c);
DEFINE_IL2CPP_ARG_TYPE(::System::Runtime::Serialization::SerializationEventsCache::$$c*, "System.Runtime.Serialization", "SerializationEventsCache/<>c");
// Type namespace: System.Runtime.Serialization
namespace System::Runtime::Serialization {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: System.Runtime.Serialization.SerializationEventsCache/<>c
  // [TokenAttribute] Offset: FFFFFFFF
  // [CompilerGeneratedAttribute] Offset: FFFFFFFF
  class SerializationEventsCache::$$c : public ::Il2CppObject {
    public:
    // Get static field: static public readonly System.Runtime.Serialization.SerializationEventsCache/<>c <>9
    static ::System::Runtime::Serialization::SerializationEventsCache::$$c* _get_$$9();
    // Set static field: static public readonly System.Runtime.Serialization.SerializationEventsCache/<>c <>9
    static void _set_$$9(::System::Runtime::Serialization::SerializationEventsCache::$$c* value);
    // Get static field: static public System.Func`2<System.Type,System.Runtime.Serialization.SerializationEvents> <>9__1_0
    static ::System::Func_2<::System::Type*, ::System::Runtime::Serialization::SerializationEvents*>* _get_$$9__1_0();
    // Set static field: static public System.Func`2<System.Type,System.Runtime.Serialization.SerializationEvents> <>9__1_0
    static void _set_$$9__1_0(::System::Func_2<::System::Type*, ::System::Runtime::Serialization::SerializationEvents*>* value);
    // static private System.Void .cctor()
    // Offset: 0x455176C
    static void _cctor();
    // System.Runtime.Serialization.SerializationEvents <GetSerializationEventsForType>b__1_0(System.Type type)
    // Offset: 0x45517DC
    ::System::Runtime::Serialization::SerializationEvents* $GetSerializationEventsForType$b__1_0(::System::Type* type);
    // public System.Void .ctor()
    // Offset: 0x45517D4
    // Implemented from: System.Object
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static SerializationEventsCache::$$c* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Serialization::SerializationEventsCache::$$c::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<SerializationEventsCache::$$c*, creationType>()));
    }
  }; // System.Runtime.Serialization.SerializationEventsCache/<>c
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::Runtime::Serialization::SerializationEventsCache::$$c::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&System::Runtime::Serialization::SerializationEventsCache::$$c::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Runtime::Serialization::SerializationEventsCache::$$c*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Runtime::Serialization::SerializationEventsCache::$$c::$GetSerializationEventsForType$b__1_0
// Il2CppName: <GetSerializationEventsForType>b__1_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Runtime::Serialization::SerializationEvents* (System::Runtime::Serialization::SerializationEventsCache::$$c::*)(::System::Type*)>(&System::Runtime::Serialization::SerializationEventsCache::$$c::$GetSerializationEventsForType$b__1_0)> {
  static const MethodInfo* get() {
    static auto* type = &::il2cpp_utils::GetClassFromName("System", "Type")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Runtime::Serialization::SerializationEventsCache::$$c*), "<GetSerializationEventsForType>b__1_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{type});
  }
};
// Writing MetadataGetter for method: System::Runtime::Serialization::SerializationEventsCache::$$c::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
