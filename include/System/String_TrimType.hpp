// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: System.Enum
#include "System/Enum.hpp"
// Completed includes
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::System::String::TrimType, "System", "String/TrimType");
// Type namespace: System
namespace System {
  // Size: 0x4
  #pragma pack(push, 1)
  // Autogenerated type: System.String/TrimType
  // [TokenAttribute] Offset: FFFFFFFF
  struct String::TrimType/*, public ::System::Enum*/ {
    public:
    public:
    // public System.Int32 value__
    // Size: 0x4
    // Offset: 0x0
    int value;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Creating value type constructor for type: TrimType
    constexpr TrimType(int value_ = {}) noexcept : value{value_} {}
    // Creating interface conversion operator: operator ::System::Enum
    operator ::System::Enum() noexcept {
      return *reinterpret_cast<::System::Enum*>(this);
    }
    // Creating conversion operator: operator int
    constexpr operator int() const noexcept {
      return value;
    }
    // static field const value: static public System.String/TrimType Head
    static constexpr const int Head = 0;
    // Get static field: static public System.String/TrimType Head
    static ::System::String::TrimType _get_Head();
    // Set static field: static public System.String/TrimType Head
    static void _set_Head(::System::String::TrimType value);
    // static field const value: static public System.String/TrimType Tail
    static constexpr const int Tail = 1;
    // Get static field: static public System.String/TrimType Tail
    static ::System::String::TrimType _get_Tail();
    // Set static field: static public System.String/TrimType Tail
    static void _set_Tail(::System::String::TrimType value);
    // static field const value: static public System.String/TrimType Both
    static constexpr const int Both = 2;
    // Get static field: static public System.String/TrimType Both
    static ::System::String::TrimType _get_Both();
    // Set static field: static public System.String/TrimType Both
    static void _set_Both(::System::String::TrimType value);
    // Get instance field reference: public System.Int32 value__
    [[deprecated("Use field access instead!")]] int& dyn_value__();
  }; // System.String/TrimType
  #pragma pack(pop)
  static check_size<sizeof(String::TrimType), 0 + sizeof(int)> __System_String_TrimTypeSizeCheck;
  static_assert(sizeof(String::TrimType) == 0x4);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
