// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: MutableDecimal
  struct MutableDecimal;
}
// Completed forward declares
// Type namespace: System
namespace System {
  // Forward declaring type: DecimalDecCalc
  class DecimalDecCalc;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::DecimalDecCalc);
DEFINE_IL2CPP_ARG_TYPE(::System::DecimalDecCalc*, "System", "DecimalDecCalc");
// Type namespace: System
namespace System {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: System.DecimalDecCalc
  // [TokenAttribute] Offset: FFFFFFFF
  class DecimalDecCalc : public ::Il2CppObject {
    public:
    // static private System.UInt32 D32DivMod1E9(System.UInt32 hi32, ref System.UInt32 lo32)
    // Offset: 0x467CB4C
    static uint D32DivMod1E9(uint hi32, ByRef<uint> lo32);
    // static System.UInt32 DecDivMod1E9(ref System.MutableDecimal value)
    // Offset: 0x467CB84
    static uint DecDivMod1E9(ByRef<::System::MutableDecimal> value);
    // static System.Void DecAddInt32(ref System.MutableDecimal value, System.UInt32 i)
    // Offset: 0x467CBF4
    static void DecAddInt32(ByRef<::System::MutableDecimal> value, uint i);
    // static private System.Boolean D32AddCarry(ref System.UInt32 value, System.UInt32 i)
    // Offset: 0x467CC34
    static bool D32AddCarry(ByRef<uint> value, uint i);
    // static System.Void DecMul10(ref System.MutableDecimal value)
    // Offset: 0x467CC58
    static void DecMul10(ByRef<::System::MutableDecimal> value);
    // static private System.Void DecShiftLeft(ref System.MutableDecimal value)
    // Offset: 0x467CCB4
    static void DecShiftLeft(ByRef<::System::MutableDecimal> value);
    // static private System.Void DecAdd(ref System.MutableDecimal value, System.MutableDecimal d)
    // Offset: 0x467CCD4
    static void DecAdd(ByRef<::System::MutableDecimal> value, ::System::MutableDecimal d);
  }; // System.DecimalDecCalc
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::DecimalDecCalc::D32DivMod1E9
// Il2CppName: D32DivMod1E9
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (*)(uint, ByRef<uint>)>(&System::DecimalDecCalc::D32DivMod1E9)> {
  static const MethodInfo* get() {
    static auto* hi32 = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    static auto* lo32 = &::il2cpp_utils::GetClassFromName("System", "UInt32")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(System::DecimalDecCalc*), "D32DivMod1E9", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{hi32, lo32});
  }
};
// Writing MetadataGetter for method: System::DecimalDecCalc::DecDivMod1E9
// Il2CppName: DecDivMod1E9
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (*)(ByRef<::System::MutableDecimal>)>(&System::DecimalDecCalc::DecDivMod1E9)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "MutableDecimal")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(System::DecimalDecCalc*), "DecDivMod1E9", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::DecimalDecCalc::DecAddInt32
// Il2CppName: DecAddInt32
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(ByRef<::System::MutableDecimal>, uint)>(&System::DecimalDecCalc::DecAddInt32)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "MutableDecimal")->this_arg;
    static auto* i = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::DecimalDecCalc*), "DecAddInt32", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value, i});
  }
};
// Writing MetadataGetter for method: System::DecimalDecCalc::D32AddCarry
// Il2CppName: D32AddCarry
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(ByRef<uint>, uint)>(&System::DecimalDecCalc::D32AddCarry)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "UInt32")->this_arg;
    static auto* i = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::DecimalDecCalc*), "D32AddCarry", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value, i});
  }
};
// Writing MetadataGetter for method: System::DecimalDecCalc::DecMul10
// Il2CppName: DecMul10
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(ByRef<::System::MutableDecimal>)>(&System::DecimalDecCalc::DecMul10)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "MutableDecimal")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(System::DecimalDecCalc*), "DecMul10", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::DecimalDecCalc::DecShiftLeft
// Il2CppName: DecShiftLeft
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(ByRef<::System::MutableDecimal>)>(&System::DecimalDecCalc::DecShiftLeft)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "MutableDecimal")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(System::DecimalDecCalc*), "DecShiftLeft", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::DecimalDecCalc::DecAdd
// Il2CppName: DecAdd
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(ByRef<::System::MutableDecimal>, ::System::MutableDecimal)>(&System::DecimalDecCalc::DecAdd)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "MutableDecimal")->this_arg;
    static auto* d = &::il2cpp_utils::GetClassFromName("System", "MutableDecimal")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::DecimalDecCalc*), "DecAdd", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value, d});
  }
};
