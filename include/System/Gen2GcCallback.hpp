// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Runtime.ConstrainedExecution.CriticalFinalizerObject
#include "System/Runtime/ConstrainedExecution/CriticalFinalizerObject.hpp"
// Including type: System.Runtime.InteropServices.GCHandle
#include "System/Runtime/InteropServices/GCHandle.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Func`2<T, TResult>
  template<typename T, typename TResult>
  class Func_2;
}
// Completed forward declares
// Type namespace: System
namespace System {
  // Forward declaring type: Gen2GcCallback
  class Gen2GcCallback;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::Gen2GcCallback);
DEFINE_IL2CPP_ARG_TYPE(::System::Gen2GcCallback*, "System", "Gen2GcCallback");
// Type namespace: System
namespace System {
  // Size: 0x20
  #pragma pack(push, 1)
  // Autogenerated type: System.Gen2GcCallback
  // [TokenAttribute] Offset: FFFFFFFF
  class Gen2GcCallback : public ::System::Runtime::ConstrainedExecution::CriticalFinalizerObject {
    public:
    public:
    // private System.Func`2<System.Object,System.Boolean> _callback
    // Size: 0x8
    // Offset: 0x10
    ::System::Func_2<::Il2CppObject*, bool>* callback;
    // Field size check
    static_assert(sizeof(::System::Func_2<::Il2CppObject*, bool>*) == 0x8);
    // private System.Runtime.InteropServices.GCHandle _weakTargetObj
    // Size: 0x8
    // Offset: 0x18
    ::System::Runtime::InteropServices::GCHandle weakTargetObj;
    // Field size check
    static_assert(sizeof(::System::Runtime::InteropServices::GCHandle) == 0x8);
    public:
    // Get instance field reference: private System.Func`2<System.Object,System.Boolean> _callback
    [[deprecated("Use field access instead!")]] ::System::Func_2<::Il2CppObject*, bool>*& dyn__callback();
    // Get instance field reference: private System.Runtime.InteropServices.GCHandle _weakTargetObj
    [[deprecated("Use field access instead!")]] ::System::Runtime::InteropServices::GCHandle& dyn__weakTargetObj();
    // static public System.Void Register(System.Func`2<System.Object,System.Boolean> callback, System.Object targetObj)
    // Offset: 0x4645284
    static void Register(::System::Func_2<::Il2CppObject*, bool>* callback, ::Il2CppObject* targetObj);
    // private System.Void Setup(System.Func`2<System.Object,System.Boolean> callback, System.Object targetObj)
    // Offset: 0x4645310
    void Setup(::System::Func_2<::Il2CppObject*, bool>* callback, ::Il2CppObject* targetObj);
    // private System.Void .ctor()
    // Offset: 0x464527C
    // Implemented from: System.Runtime.ConstrainedExecution.CriticalFinalizerObject
    // Base method: System.Void CriticalFinalizerObject::.ctor()
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static Gen2GcCallback* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Gen2GcCallback::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<Gen2GcCallback*, creationType>()));
    }
    // protected override System.Void Finalize()
    // Offset: 0x464534C
    // Implemented from: System.Runtime.ConstrainedExecution.CriticalFinalizerObject
    // Base method: System.Void CriticalFinalizerObject::Finalize()
    void Finalize();
  }; // System.Gen2GcCallback
  #pragma pack(pop)
  static check_size<sizeof(Gen2GcCallback), 24 + sizeof(::System::Runtime::InteropServices::GCHandle)> __System_Gen2GcCallbackSizeCheck;
  static_assert(sizeof(Gen2GcCallback) == 0x20);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::Gen2GcCallback::Register
// Il2CppName: Register
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::Func_2<::Il2CppObject*, bool>*, ::Il2CppObject*)>(&System::Gen2GcCallback::Register)> {
  static const MethodInfo* get() {
    static auto* callback = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Func`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Object"), ::il2cpp_utils::GetClassFromName("System", "Boolean")})->byval_arg;
    static auto* targetObj = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Gen2GcCallback*), "Register", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{callback, targetObj});
  }
};
// Writing MetadataGetter for method: System::Gen2GcCallback::Setup
// Il2CppName: Setup
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Gen2GcCallback::*)(::System::Func_2<::Il2CppObject*, bool>*, ::Il2CppObject*)>(&System::Gen2GcCallback::Setup)> {
  static const MethodInfo* get() {
    static auto* callback = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Func`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Object"), ::il2cpp_utils::GetClassFromName("System", "Boolean")})->byval_arg;
    static auto* targetObj = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Gen2GcCallback*), "Setup", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{callback, targetObj});
  }
};
// Writing MetadataGetter for method: System::Gen2GcCallback::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::Gen2GcCallback::Finalize
// Il2CppName: Finalize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Gen2GcCallback::*)()>(&System::Gen2GcCallback::Finalize)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Gen2GcCallback*), "Finalize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
