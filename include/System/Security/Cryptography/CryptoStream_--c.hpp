// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Security.Cryptography.CryptoStream
#include "System/Security/Cryptography/CryptoStream.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Func`1<TResult>
  template<typename TResult>
  class Func_1;
}
// Forward declaring namespace: System::Threading
namespace System::Threading {
  // Forward declaring type: SemaphoreSlim
  class SemaphoreSlim;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::Security::Cryptography::CryptoStream::$$c);
DEFINE_IL2CPP_ARG_TYPE(::System::Security::Cryptography::CryptoStream::$$c*, "System.Security.Cryptography", "CryptoStream/<>c");
// Type namespace: System.Security.Cryptography
namespace System::Security::Cryptography {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: System.Security.Cryptography.CryptoStream/<>c
  // [TokenAttribute] Offset: FFFFFFFF
  // [CompilerGeneratedAttribute] Offset: FFFFFFFF
  class CryptoStream::$$c : public ::Il2CppObject {
    public:
    // Get static field: static public readonly System.Security.Cryptography.CryptoStream/<>c <>9
    static ::System::Security::Cryptography::CryptoStream::$$c* _get_$$9();
    // Set static field: static public readonly System.Security.Cryptography.CryptoStream/<>c <>9
    static void _set_$$9(::System::Security::Cryptography::CryptoStream::$$c* value);
    // Get static field: static public System.Func`1<System.Threading.SemaphoreSlim> <>9__54_0
    static ::System::Func_1<::System::Threading::SemaphoreSlim*>* _get_$$9__54_0();
    // Set static field: static public System.Func`1<System.Threading.SemaphoreSlim> <>9__54_0
    static void _set_$$9__54_0(::System::Func_1<::System::Threading::SemaphoreSlim*>* value);
    // static private System.Void .cctor()
    // Offset: 0x44F0E80
    static void _cctor();
    // System.Threading.SemaphoreSlim <get_AsyncActiveSemaphore>b__54_0()
    // Offset: 0x44F0EF0
    ::System::Threading::SemaphoreSlim* $get_AsyncActiveSemaphore$b__54_0();
    // public System.Void .ctor()
    // Offset: 0x44F0EE8
    // Implemented from: System.Object
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static CryptoStream::$$c* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CryptoStream::$$c::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<CryptoStream::$$c*, creationType>()));
    }
  }; // System.Security.Cryptography.CryptoStream/<>c
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::Security::Cryptography::CryptoStream::$$c::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&System::Security::Cryptography::CryptoStream::$$c::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Security::Cryptography::CryptoStream::$$c*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Security::Cryptography::CryptoStream::$$c::$get_AsyncActiveSemaphore$b__54_0
// Il2CppName: <get_AsyncActiveSemaphore>b__54_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Threading::SemaphoreSlim* (System::Security::Cryptography::CryptoStream::$$c::*)()>(&System::Security::Cryptography::CryptoStream::$$c::$get_AsyncActiveSemaphore$b__54_0)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Security::Cryptography::CryptoStream::$$c*), "<get_AsyncActiveSemaphore>b__54_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Security::Cryptography::CryptoStream::$$c::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
