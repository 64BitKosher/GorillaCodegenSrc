// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.IDisposable
#include "System/IDisposable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Span`1<T>
  template<typename T>
  struct Span_1;
}
// Completed forward declares
// Type namespace: System.Security.Cryptography
namespace System::Security::Cryptography {
  // Forward declaring type: RandomNumberGenerator
  class RandomNumberGenerator;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::Security::Cryptography::RandomNumberGenerator);
DEFINE_IL2CPP_ARG_TYPE(::System::Security::Cryptography::RandomNumberGenerator*, "System.Security.Cryptography", "RandomNumberGenerator");
// Type namespace: System.Security.Cryptography
namespace System::Security::Cryptography {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: System.Security.Cryptography.RandomNumberGenerator
  // [TokenAttribute] Offset: FFFFFFFF
  // [ComVisibleAttribute] Offset: FFFFFFFF
  class RandomNumberGenerator : public ::Il2CppObject/*, public ::System::IDisposable*/ {
    public:
    // Creating interface conversion operator: operator ::System::IDisposable
    operator ::System::IDisposable() noexcept {
      return *reinterpret_cast<::System::IDisposable*>(this);
    }
    // static public System.Security.Cryptography.RandomNumberGenerator Create()
    // Offset: 0x44FC0D4
    static ::System::Security::Cryptography::RandomNumberGenerator* Create();
    // static public System.Security.Cryptography.RandomNumberGenerator Create(System.String rngName)
    // Offset: 0x44FC128
    static ::System::Security::Cryptography::RandomNumberGenerator* Create(::StringW rngName);
    // public System.Void Dispose()
    // Offset: 0x44FC1CC
    void Dispose();
    // protected System.Void Dispose(System.Boolean disposing)
    // Offset: 0x44FC238
    void Dispose(bool disposing);
    // public System.Void GetBytes(System.Byte[] data)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void GetBytes(::ArrayW<uint8_t> data);
    // public System.Void GetBytes(System.Byte[] data, System.Int32 offset, System.Int32 count)
    // Offset: 0x44FC23C
    void GetBytes(::ArrayW<uint8_t> data, int offset, int count);
    // public System.Void GetNonZeroBytes(System.Byte[] data)
    // Offset: 0x44FC420
    void GetNonZeroBytes(::ArrayW<uint8_t> data);
    // static public System.Void Fill(System.Span`1<System.Byte> data)
    // Offset: 0x44FC458
    static void Fill(::System::Span_1<uint8_t> data);
    // static System.Void FillSpan(System.Span`1<System.Byte> data)
    // Offset: 0x44FC45C
    static void FillSpan(::System::Span_1<uint8_t> data);
    // public System.Void GetBytes(System.Span`1<System.Byte> data)
    // Offset: 0x44FC4D4
    void GetBytes(::System::Span_1<uint8_t> data);
    // public System.Void GetNonZeroBytes(System.Span`1<System.Byte> data)
    // Offset: 0x44FC6D4
    void GetNonZeroBytes(::System::Span_1<uint8_t> data);
    // static public System.Int32 GetInt32(System.Int32 fromInclusive, System.Int32 toExclusive)
    // Offset: 0x44FC8CC
    static int GetInt32(int fromInclusive, int toExclusive);
    // static public System.Int32 GetInt32(System.Int32 toExclusive)
    // Offset: 0x44FCA1C
    static int GetInt32(int toExclusive);
    // protected System.Void .ctor()
    // Offset: 0x44FC0CC
    // Implemented from: System.Object
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static RandomNumberGenerator* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RandomNumberGenerator::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<RandomNumberGenerator*, creationType>()));
    }
  }; // System.Security.Cryptography.RandomNumberGenerator
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::Security::Cryptography::RandomNumberGenerator::Create
// Il2CppName: Create
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Security::Cryptography::RandomNumberGenerator* (*)()>(&System::Security::Cryptography::RandomNumberGenerator::Create)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Security::Cryptography::RandomNumberGenerator*), "Create", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Security::Cryptography::RandomNumberGenerator::Create
// Il2CppName: Create
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Security::Cryptography::RandomNumberGenerator* (*)(::StringW)>(&System::Security::Cryptography::RandomNumberGenerator::Create)> {
  static const MethodInfo* get() {
    static auto* rngName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Security::Cryptography::RandomNumberGenerator*), "Create", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{rngName});
  }
};
// Writing MetadataGetter for method: System::Security::Cryptography::RandomNumberGenerator::Dispose
// Il2CppName: Dispose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Security::Cryptography::RandomNumberGenerator::*)()>(&System::Security::Cryptography::RandomNumberGenerator::Dispose)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Security::Cryptography::RandomNumberGenerator*), "Dispose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Security::Cryptography::RandomNumberGenerator::Dispose
// Il2CppName: Dispose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Security::Cryptography::RandomNumberGenerator::*)(bool)>(&System::Security::Cryptography::RandomNumberGenerator::Dispose)> {
  static const MethodInfo* get() {
    static auto* disposing = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Security::Cryptography::RandomNumberGenerator*), "Dispose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{disposing});
  }
};
// Writing MetadataGetter for method: System::Security::Cryptography::RandomNumberGenerator::GetBytes
// Il2CppName: GetBytes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Security::Cryptography::RandomNumberGenerator::*)(::ArrayW<uint8_t>)>(&System::Security::Cryptography::RandomNumberGenerator::GetBytes)> {
  static const MethodInfo* get() {
    static auto* data = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Security::Cryptography::RandomNumberGenerator*), "GetBytes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{data});
  }
};
// Writing MetadataGetter for method: System::Security::Cryptography::RandomNumberGenerator::GetBytes
// Il2CppName: GetBytes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Security::Cryptography::RandomNumberGenerator::*)(::ArrayW<uint8_t>, int, int)>(&System::Security::Cryptography::RandomNumberGenerator::GetBytes)> {
  static const MethodInfo* get() {
    static auto* data = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    static auto* offset = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* count = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Security::Cryptography::RandomNumberGenerator*), "GetBytes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{data, offset, count});
  }
};
// Writing MetadataGetter for method: System::Security::Cryptography::RandomNumberGenerator::GetNonZeroBytes
// Il2CppName: GetNonZeroBytes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Security::Cryptography::RandomNumberGenerator::*)(::ArrayW<uint8_t>)>(&System::Security::Cryptography::RandomNumberGenerator::GetNonZeroBytes)> {
  static const MethodInfo* get() {
    static auto* data = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Security::Cryptography::RandomNumberGenerator*), "GetNonZeroBytes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{data});
  }
};
// Writing MetadataGetter for method: System::Security::Cryptography::RandomNumberGenerator::Fill
// Il2CppName: Fill
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::Span_1<uint8_t>)>(&System::Security::Cryptography::RandomNumberGenerator::Fill)> {
  static const MethodInfo* get() {
    static auto* data = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Span`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Byte")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Security::Cryptography::RandomNumberGenerator*), "Fill", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{data});
  }
};
// Writing MetadataGetter for method: System::Security::Cryptography::RandomNumberGenerator::FillSpan
// Il2CppName: FillSpan
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::Span_1<uint8_t>)>(&System::Security::Cryptography::RandomNumberGenerator::FillSpan)> {
  static const MethodInfo* get() {
    static auto* data = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Span`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Byte")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Security::Cryptography::RandomNumberGenerator*), "FillSpan", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{data});
  }
};
// Writing MetadataGetter for method: System::Security::Cryptography::RandomNumberGenerator::GetBytes
// Il2CppName: GetBytes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Security::Cryptography::RandomNumberGenerator::*)(::System::Span_1<uint8_t>)>(&System::Security::Cryptography::RandomNumberGenerator::GetBytes)> {
  static const MethodInfo* get() {
    static auto* data = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Span`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Byte")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Security::Cryptography::RandomNumberGenerator*), "GetBytes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{data});
  }
};
// Writing MetadataGetter for method: System::Security::Cryptography::RandomNumberGenerator::GetNonZeroBytes
// Il2CppName: GetNonZeroBytes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Security::Cryptography::RandomNumberGenerator::*)(::System::Span_1<uint8_t>)>(&System::Security::Cryptography::RandomNumberGenerator::GetNonZeroBytes)> {
  static const MethodInfo* get() {
    static auto* data = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Span`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Byte")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Security::Cryptography::RandomNumberGenerator*), "GetNonZeroBytes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{data});
  }
};
// Writing MetadataGetter for method: System::Security::Cryptography::RandomNumberGenerator::GetInt32
// Il2CppName: GetInt32
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(int, int)>(&System::Security::Cryptography::RandomNumberGenerator::GetInt32)> {
  static const MethodInfo* get() {
    static auto* fromInclusive = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* toExclusive = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Security::Cryptography::RandomNumberGenerator*), "GetInt32", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{fromInclusive, toExclusive});
  }
};
// Writing MetadataGetter for method: System::Security::Cryptography::RandomNumberGenerator::GetInt32
// Il2CppName: GetInt32
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(int)>(&System::Security::Cryptography::RandomNumberGenerator::GetInt32)> {
  static const MethodInfo* get() {
    static auto* toExclusive = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Security::Cryptography::RandomNumberGenerator*), "GetInt32", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{toExclusive});
  }
};
// Writing MetadataGetter for method: System::Security::Cryptography::RandomNumberGenerator::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
