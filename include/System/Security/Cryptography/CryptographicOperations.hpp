// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: ReadOnlySpan`1<T>
  template<typename T>
  struct ReadOnlySpan_1;
  // Forward declaring type: Span`1<T>
  template<typename T>
  struct Span_1;
}
// Completed forward declares
// Type namespace: System.Security.Cryptography
namespace System::Security::Cryptography {
  // Forward declaring type: CryptographicOperations
  class CryptographicOperations;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::Security::Cryptography::CryptographicOperations);
DEFINE_IL2CPP_ARG_TYPE(::System::Security::Cryptography::CryptographicOperations*, "System.Security.Cryptography", "CryptographicOperations");
// Type namespace: System.Security.Cryptography
namespace System::Security::Cryptography {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: System.Security.Cryptography.CryptographicOperations
  // [TokenAttribute] Offset: FFFFFFFF
  class CryptographicOperations : public ::Il2CppObject {
    public:
    // static public System.Boolean FixedTimeEquals(System.ReadOnlySpan`1<System.Byte> left, System.ReadOnlySpan`1<System.Byte> right)
    // Offset: 0x44F0F4C
    static bool FixedTimeEquals(::System::ReadOnlySpan_1<uint8_t> left, ::System::ReadOnlySpan_1<uint8_t> right);
    // static public System.Void ZeroMemory(System.Span`1<System.Byte> buffer)
    // Offset: 0x44EF7FC
    static void ZeroMemory(::System::Span_1<uint8_t> buffer);
  }; // System.Security.Cryptography.CryptographicOperations
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::Security::Cryptography::CryptographicOperations::FixedTimeEquals
// Il2CppName: FixedTimeEquals
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::System::ReadOnlySpan_1<uint8_t>, ::System::ReadOnlySpan_1<uint8_t>)>(&System::Security::Cryptography::CryptographicOperations::FixedTimeEquals)> {
  static const MethodInfo* get() {
    static auto* left = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "ReadOnlySpan`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Byte")})->byval_arg;
    static auto* right = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "ReadOnlySpan`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Byte")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Security::Cryptography::CryptographicOperations*), "FixedTimeEquals", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{left, right});
  }
};
// Writing MetadataGetter for method: System::Security::Cryptography::CryptographicOperations::ZeroMemory
// Il2CppName: ZeroMemory
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::Span_1<uint8_t>)>(&System::Security::Cryptography::CryptographicOperations::ZeroMemory)> {
  static const MethodInfo* get() {
    static auto* buffer = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Span`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Byte")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Security::Cryptography::CryptographicOperations*), "ZeroMemory", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{buffer});
  }
};
