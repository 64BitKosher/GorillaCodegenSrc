// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Enum
#include "System/Enum.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Security::Cryptography
namespace System::Security::Cryptography {
  // Skipping declaration: DerTag because it is already included!
}
// Forward declaring namespace: System::Globalization
namespace System::Globalization {
  // Forward declaring type: DateTimeFormatInfo
  class DateTimeFormatInfo;
}
// Forward declaring namespace: System::Text
namespace System::Text {
  // Forward declaring type: Encoding
  class Encoding;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: DateTime
  struct DateTime;
}
// Completed forward declares
// Type namespace: System.Security.Cryptography
namespace System::Security::Cryptography {
  // Forward declaring type: DerSequenceReader
  class DerSequenceReader;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::Security::Cryptography::DerSequenceReader);
DEFINE_IL2CPP_ARG_TYPE(::System::Security::Cryptography::DerSequenceReader*, "System.Security.Cryptography", "DerSequenceReader");
// Type namespace: System.Security.Cryptography
namespace System::Security::Cryptography {
  // Size: 0x24
  #pragma pack(push, 1)
  // Autogenerated type: System.Security.Cryptography.DerSequenceReader
  // [TokenAttribute] Offset: FFFFFFFF
  class DerSequenceReader : public ::Il2CppObject {
    public:
    // Nested type: ::System::Security::Cryptography::DerSequenceReader::DerTag
    struct DerTag;
    // Nested type: ::System::Security::Cryptography::DerSequenceReader::$$c
    class $$c;
    // Size: 0x1
    #pragma pack(push, 1)
    // Autogenerated type: System.Security.Cryptography.DerSequenceReader/DerTag
    // [TokenAttribute] Offset: FFFFFFFF
    struct DerTag/*, public ::System::Enum*/ {
      public:
      public:
      // public System.Byte value__
      // Size: 0x1
      // Offset: 0x0
      uint8_t value;
      // Field size check
      static_assert(sizeof(uint8_t) == 0x1);
      public:
      // Creating value type constructor for type: DerTag
      constexpr DerTag(uint8_t value_ = {}) noexcept : value{value_} {}
      // Creating interface conversion operator: operator ::System::Enum
      operator ::System::Enum() noexcept {
        return *reinterpret_cast<::System::Enum*>(this);
      }
      // Creating conversion operator: operator uint8_t
      constexpr operator uint8_t() const noexcept {
        return value;
      }
      // static field const value: static public System.Security.Cryptography.DerSequenceReader/DerTag Boolean
      static constexpr const uint8_t Boolean = 1u;
      // Get static field: static public System.Security.Cryptography.DerSequenceReader/DerTag Boolean
      static ::System::Security::Cryptography::DerSequenceReader::DerTag _get_Boolean();
      // Set static field: static public System.Security.Cryptography.DerSequenceReader/DerTag Boolean
      static void _set_Boolean(::System::Security::Cryptography::DerSequenceReader::DerTag value);
      // static field const value: static public System.Security.Cryptography.DerSequenceReader/DerTag Integer
      static constexpr const uint8_t Integer = 2u;
      // Get static field: static public System.Security.Cryptography.DerSequenceReader/DerTag Integer
      static ::System::Security::Cryptography::DerSequenceReader::DerTag _get_Integer();
      // Set static field: static public System.Security.Cryptography.DerSequenceReader/DerTag Integer
      static void _set_Integer(::System::Security::Cryptography::DerSequenceReader::DerTag value);
      // static field const value: static public System.Security.Cryptography.DerSequenceReader/DerTag BitString
      static constexpr const uint8_t BitString = 3u;
      // Get static field: static public System.Security.Cryptography.DerSequenceReader/DerTag BitString
      static ::System::Security::Cryptography::DerSequenceReader::DerTag _get_BitString();
      // Set static field: static public System.Security.Cryptography.DerSequenceReader/DerTag BitString
      static void _set_BitString(::System::Security::Cryptography::DerSequenceReader::DerTag value);
      // static field const value: static public System.Security.Cryptography.DerSequenceReader/DerTag OctetString
      static constexpr const uint8_t OctetString = 4u;
      // Get static field: static public System.Security.Cryptography.DerSequenceReader/DerTag OctetString
      static ::System::Security::Cryptography::DerSequenceReader::DerTag _get_OctetString();
      // Set static field: static public System.Security.Cryptography.DerSequenceReader/DerTag OctetString
      static void _set_OctetString(::System::Security::Cryptography::DerSequenceReader::DerTag value);
      // static field const value: static public System.Security.Cryptography.DerSequenceReader/DerTag Null
      static constexpr const uint8_t Null = 5u;
      // Get static field: static public System.Security.Cryptography.DerSequenceReader/DerTag Null
      static ::System::Security::Cryptography::DerSequenceReader::DerTag _get_Null();
      // Set static field: static public System.Security.Cryptography.DerSequenceReader/DerTag Null
      static void _set_Null(::System::Security::Cryptography::DerSequenceReader::DerTag value);
      // static field const value: static public System.Security.Cryptography.DerSequenceReader/DerTag ObjectIdentifier
      static constexpr const uint8_t ObjectIdentifier = 6u;
      // Get static field: static public System.Security.Cryptography.DerSequenceReader/DerTag ObjectIdentifier
      static ::System::Security::Cryptography::DerSequenceReader::DerTag _get_ObjectIdentifier();
      // Set static field: static public System.Security.Cryptography.DerSequenceReader/DerTag ObjectIdentifier
      static void _set_ObjectIdentifier(::System::Security::Cryptography::DerSequenceReader::DerTag value);
      // static field const value: static public System.Security.Cryptography.DerSequenceReader/DerTag UTF8String
      static constexpr const uint8_t UTF8String = 12u;
      // Get static field: static public System.Security.Cryptography.DerSequenceReader/DerTag UTF8String
      static ::System::Security::Cryptography::DerSequenceReader::DerTag _get_UTF8String();
      // Set static field: static public System.Security.Cryptography.DerSequenceReader/DerTag UTF8String
      static void _set_UTF8String(::System::Security::Cryptography::DerSequenceReader::DerTag value);
      // static field const value: static public System.Security.Cryptography.DerSequenceReader/DerTag Sequence
      static constexpr const uint8_t Sequence = 16u;
      // Get static field: static public System.Security.Cryptography.DerSequenceReader/DerTag Sequence
      static ::System::Security::Cryptography::DerSequenceReader::DerTag _get_Sequence();
      // Set static field: static public System.Security.Cryptography.DerSequenceReader/DerTag Sequence
      static void _set_Sequence(::System::Security::Cryptography::DerSequenceReader::DerTag value);
      // static field const value: static public System.Security.Cryptography.DerSequenceReader/DerTag Set
      static constexpr const uint8_t Set = 17u;
      // Get static field: static public System.Security.Cryptography.DerSequenceReader/DerTag Set
      static ::System::Security::Cryptography::DerSequenceReader::DerTag _get_Set();
      // Set static field: static public System.Security.Cryptography.DerSequenceReader/DerTag Set
      static void _set_Set(::System::Security::Cryptography::DerSequenceReader::DerTag value);
      // static field const value: static public System.Security.Cryptography.DerSequenceReader/DerTag PrintableString
      static constexpr const uint8_t PrintableString = 19u;
      // Get static field: static public System.Security.Cryptography.DerSequenceReader/DerTag PrintableString
      static ::System::Security::Cryptography::DerSequenceReader::DerTag _get_PrintableString();
      // Set static field: static public System.Security.Cryptography.DerSequenceReader/DerTag PrintableString
      static void _set_PrintableString(::System::Security::Cryptography::DerSequenceReader::DerTag value);
      // static field const value: static public System.Security.Cryptography.DerSequenceReader/DerTag T61String
      static constexpr const uint8_t T61String = 20u;
      // Get static field: static public System.Security.Cryptography.DerSequenceReader/DerTag T61String
      static ::System::Security::Cryptography::DerSequenceReader::DerTag _get_T61String();
      // Set static field: static public System.Security.Cryptography.DerSequenceReader/DerTag T61String
      static void _set_T61String(::System::Security::Cryptography::DerSequenceReader::DerTag value);
      // static field const value: static public System.Security.Cryptography.DerSequenceReader/DerTag IA5String
      static constexpr const uint8_t IA5String = 22u;
      // Get static field: static public System.Security.Cryptography.DerSequenceReader/DerTag IA5String
      static ::System::Security::Cryptography::DerSequenceReader::DerTag _get_IA5String();
      // Set static field: static public System.Security.Cryptography.DerSequenceReader/DerTag IA5String
      static void _set_IA5String(::System::Security::Cryptography::DerSequenceReader::DerTag value);
      // static field const value: static public System.Security.Cryptography.DerSequenceReader/DerTag UTCTime
      static constexpr const uint8_t UTCTime = 23u;
      // Get static field: static public System.Security.Cryptography.DerSequenceReader/DerTag UTCTime
      static ::System::Security::Cryptography::DerSequenceReader::DerTag _get_UTCTime();
      // Set static field: static public System.Security.Cryptography.DerSequenceReader/DerTag UTCTime
      static void _set_UTCTime(::System::Security::Cryptography::DerSequenceReader::DerTag value);
      // static field const value: static public System.Security.Cryptography.DerSequenceReader/DerTag GeneralizedTime
      static constexpr const uint8_t GeneralizedTime = 24u;
      // Get static field: static public System.Security.Cryptography.DerSequenceReader/DerTag GeneralizedTime
      static ::System::Security::Cryptography::DerSequenceReader::DerTag _get_GeneralizedTime();
      // Set static field: static public System.Security.Cryptography.DerSequenceReader/DerTag GeneralizedTime
      static void _set_GeneralizedTime(::System::Security::Cryptography::DerSequenceReader::DerTag value);
      // static field const value: static public System.Security.Cryptography.DerSequenceReader/DerTag BMPString
      static constexpr const uint8_t BMPString = 30u;
      // Get static field: static public System.Security.Cryptography.DerSequenceReader/DerTag BMPString
      static ::System::Security::Cryptography::DerSequenceReader::DerTag _get_BMPString();
      // Set static field: static public System.Security.Cryptography.DerSequenceReader/DerTag BMPString
      static void _set_BMPString(::System::Security::Cryptography::DerSequenceReader::DerTag value);
      // Get instance field reference: public System.Byte value__
      [[deprecated("Use field access instead!")]] uint8_t& dyn_value__();
    }; // System.Security.Cryptography.DerSequenceReader/DerTag
    #pragma pack(pop)
    static check_size<sizeof(DerSequenceReader::DerTag), 0 + sizeof(uint8_t)> __System_Security_Cryptography_DerSequenceReader_DerTagSizeCheck;
    static_assert(sizeof(DerSequenceReader::DerTag) == 0x1);
    public:
    // private readonly System.Byte[] _data
    // Size: 0x8
    // Offset: 0x10
    ::ArrayW<uint8_t> data;
    // Field size check
    static_assert(sizeof(::ArrayW<uint8_t>) == 0x8);
    // private readonly System.Int32 _end
    // Size: 0x4
    // Offset: 0x18
    int end;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private System.Int32 _position
    // Size: 0x4
    // Offset: 0x1C
    int position;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private System.Int32 <ContentLength>k__BackingField
    // Size: 0x4
    // Offset: 0x20
    int ContentLength;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Get static field: static System.Globalization.DateTimeFormatInfo s_validityDateTimeFormatInfo
    static ::System::Globalization::DateTimeFormatInfo* _get_s_validityDateTimeFormatInfo();
    // Set static field: static System.Globalization.DateTimeFormatInfo s_validityDateTimeFormatInfo
    static void _set_s_validityDateTimeFormatInfo(::System::Globalization::DateTimeFormatInfo* value);
    // Get static field: static private System.Text.Encoding s_utf8EncodingWithExceptionFallback
    static ::System::Text::Encoding* _get_s_utf8EncodingWithExceptionFallback();
    // Set static field: static private System.Text.Encoding s_utf8EncodingWithExceptionFallback
    static void _set_s_utf8EncodingWithExceptionFallback(::System::Text::Encoding* value);
    // Get static field: static private System.Text.Encoding s_latin1Encoding
    static ::System::Text::Encoding* _get_s_latin1Encoding();
    // Set static field: static private System.Text.Encoding s_latin1Encoding
    static void _set_s_latin1Encoding(::System::Text::Encoding* value);
    // Get instance field reference: private readonly System.Byte[] _data
    [[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& dyn__data();
    // Get instance field reference: private readonly System.Int32 _end
    [[deprecated("Use field access instead!")]] int& dyn__end();
    // Get instance field reference: private System.Int32 _position
    [[deprecated("Use field access instead!")]] int& dyn__position();
    // Get instance field reference: private System.Int32 <ContentLength>k__BackingField
    [[deprecated("Use field access instead!")]] int& dyn_$ContentLength$k__BackingField();
    // private System.Void set_ContentLength(System.Int32 value)
    // Offset: 0x4F8FCF8
    void set_ContentLength(int value);
    // System.Void .ctor(System.Byte[] data)
    // Offset: 0x4F8FD00
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static DerSequenceReader* New_ctor(::ArrayW<uint8_t> data) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::DerSequenceReader::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<DerSequenceReader*, creationType>(data)));
    }
    // System.Void .ctor(System.Byte[] data, System.Int32 offset, System.Int32 length)
    // Offset: 0x4F8FD24
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static DerSequenceReader* New_ctor(::ArrayW<uint8_t> data, int offset, int length) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::DerSequenceReader::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<DerSequenceReader*, creationType>(data, offset, length)));
    }
    // private System.Void .ctor(System.Security.Cryptography.DerSequenceReader/DerTag tagToEat, System.Byte[] data, System.Int32 offset, System.Int32 length)
    // Offset: 0x4F8FD38
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static DerSequenceReader* New_ctor(::System::Security::Cryptography::DerSequenceReader::DerTag tagToEat, ::ArrayW<uint8_t> data, int offset, int length) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::DerSequenceReader::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<DerSequenceReader*, creationType>(tagToEat, data, offset, length)));
    }
    // System.Boolean get_HasData()
    // Offset: 0x4F8FEF4
    bool get_HasData();
    // System.Byte PeekTag()
    // Offset: 0x4F8FF04
    uint8_t PeekTag();
    // System.Void SkipValue()
    // Offset: 0x4F8FF98
    void SkipValue();
    // System.Byte[] ReadNextEncodedValue()
    // Offset: 0x4F8FFE8
    ::ArrayW<uint8_t> ReadNextEncodedValue();
    // System.Boolean ReadBoolean()
    // Offset: 0x4F901C4
    bool ReadBoolean();
    // System.Int32 ReadInteger()
    // Offset: 0x4F9028C
    int ReadInteger();
    // System.Byte[] ReadIntegerBytes()
    // Offset: 0x4F90340
    ::ArrayW<uint8_t> ReadIntegerBytes();
    // System.Byte[] ReadBitString()
    // Offset: 0x4F90410
    ::ArrayW<uint8_t> ReadBitString();
    // System.Byte[] ReadOctetString()
    // Offset: 0x4F90554
    ::ArrayW<uint8_t> ReadOctetString();
    // System.String ReadOidAsString()
    // Offset: 0x4F90570
    ::StringW ReadOidAsString();
    // System.String ReadUtf8String()
    // Offset: 0x4F90828
    ::StringW ReadUtf8String();
    // private System.Security.Cryptography.DerSequenceReader ReadCollectionWithTag(System.Security.Cryptography.DerSequenceReader/DerTag expected)
    // Offset: 0x4F90924
    ::System::Security::Cryptography::DerSequenceReader* ReadCollectionWithTag(::System::Security::Cryptography::DerSequenceReader::DerTag expected);
    // System.Security.Cryptography.DerSequenceReader ReadSequence()
    // Offset: 0x4F90A7C
    ::System::Security::Cryptography::DerSequenceReader* ReadSequence();
    // System.Security.Cryptography.DerSequenceReader ReadSet()
    // Offset: 0x4F90A84
    ::System::Security::Cryptography::DerSequenceReader* ReadSet();
    // System.String ReadPrintableString()
    // Offset: 0x4F90A8C
    ::StringW ReadPrintableString();
    // System.String ReadIA5String()
    // Offset: 0x4F90B0C
    ::StringW ReadIA5String();
    // System.String ReadT61String()
    // Offset: 0x4F90B8C
    ::StringW ReadT61String();
    // System.DateTime ReadX509Date()
    // Offset: 0x4F90E74
    ::System::DateTime ReadX509Date();
    // System.DateTime ReadUtcTime()
    // Offset: 0x4F90EF4
    ::System::DateTime ReadUtcTime();
    // System.DateTime ReadGeneralizedTime()
    // Offset: 0x4F90F40
    ::System::DateTime ReadGeneralizedTime();
    // System.String ReadBMPString()
    // Offset: 0x4F911D4
    ::StringW ReadBMPString();
    // static private System.String TrimTrailingNulls(System.String value)
    // Offset: 0x4F908A8
    static ::StringW TrimTrailingNulls(::StringW value);
    // private System.DateTime ReadTime(System.Security.Cryptography.DerSequenceReader/DerTag timeTag, System.String formatString)
    // Offset: 0x4F90F8C
    ::System::DateTime ReadTime(::System::Security::Cryptography::DerSequenceReader::DerTag timeTag, ::StringW formatString);
    // private System.Byte[] ReadContentAsBytes()
    // Offset: 0x4F9035C
    ::ArrayW<uint8_t> ReadContentAsBytes();
    // private System.Void EatTag(System.Security.Cryptography.DerSequenceReader/DerTag expected)
    // Offset: 0x4F8FE38
    void EatTag(::System::Security::Cryptography::DerSequenceReader::DerTag expected);
    // static private System.Void CheckTag(System.Security.Cryptography.DerSequenceReader/DerTag expected, System.Byte[] data, System.Int32 position)
    // Offset: 0x4F909E8
    static void CheckTag(::System::Security::Cryptography::DerSequenceReader::DerTag expected, ::ArrayW<uint8_t> data, int position);
    // private System.Int32 EatLength()
    // Offset: 0x4F8FEB8
    int EatLength();
    // static private System.Int32 ScanContentLength(System.Byte[] data, System.Int32 offset, System.Int32 end, out System.Int32 bytesConsumed)
    // Offset: 0x4F900A0
    static int ScanContentLength(::ArrayW<uint8_t> data, int offset, int end, ByRef<int> bytesConsumed);
  }; // System.Security.Cryptography.DerSequenceReader
  #pragma pack(pop)
  static check_size<sizeof(DerSequenceReader), 32 + sizeof(int)> __System_Security_Cryptography_DerSequenceReaderSizeCheck;
  static_assert(sizeof(DerSequenceReader) == 0x24);
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::System::Security::Cryptography::DerSequenceReader::DerTag, "System.Security.Cryptography", "DerSequenceReader/DerTag");
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::Security::Cryptography::DerSequenceReader::set_ContentLength
// Il2CppName: set_ContentLength
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Security::Cryptography::DerSequenceReader::*)(int)>(&System::Security::Cryptography::DerSequenceReader::set_ContentLength)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Security::Cryptography::DerSequenceReader*), "set_ContentLength", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Security::Cryptography::DerSequenceReader::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::Security::Cryptography::DerSequenceReader::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::Security::Cryptography::DerSequenceReader::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::Security::Cryptography::DerSequenceReader::get_HasData
// Il2CppName: get_HasData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Security::Cryptography::DerSequenceReader::*)()>(&System::Security::Cryptography::DerSequenceReader::get_HasData)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Security::Cryptography::DerSequenceReader*), "get_HasData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Security::Cryptography::DerSequenceReader::PeekTag
// Il2CppName: PeekTag
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint8_t (System::Security::Cryptography::DerSequenceReader::*)()>(&System::Security::Cryptography::DerSequenceReader::PeekTag)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Security::Cryptography::DerSequenceReader*), "PeekTag", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Security::Cryptography::DerSequenceReader::SkipValue
// Il2CppName: SkipValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Security::Cryptography::DerSequenceReader::*)()>(&System::Security::Cryptography::DerSequenceReader::SkipValue)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Security::Cryptography::DerSequenceReader*), "SkipValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Security::Cryptography::DerSequenceReader::ReadNextEncodedValue
// Il2CppName: ReadNextEncodedValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<uint8_t> (System::Security::Cryptography::DerSequenceReader::*)()>(&System::Security::Cryptography::DerSequenceReader::ReadNextEncodedValue)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Security::Cryptography::DerSequenceReader*), "ReadNextEncodedValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Security::Cryptography::DerSequenceReader::ReadBoolean
// Il2CppName: ReadBoolean
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Security::Cryptography::DerSequenceReader::*)()>(&System::Security::Cryptography::DerSequenceReader::ReadBoolean)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Security::Cryptography::DerSequenceReader*), "ReadBoolean", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Security::Cryptography::DerSequenceReader::ReadInteger
// Il2CppName: ReadInteger
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (System::Security::Cryptography::DerSequenceReader::*)()>(&System::Security::Cryptography::DerSequenceReader::ReadInteger)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Security::Cryptography::DerSequenceReader*), "ReadInteger", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Security::Cryptography::DerSequenceReader::ReadIntegerBytes
// Il2CppName: ReadIntegerBytes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<uint8_t> (System::Security::Cryptography::DerSequenceReader::*)()>(&System::Security::Cryptography::DerSequenceReader::ReadIntegerBytes)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Security::Cryptography::DerSequenceReader*), "ReadIntegerBytes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Security::Cryptography::DerSequenceReader::ReadBitString
// Il2CppName: ReadBitString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<uint8_t> (System::Security::Cryptography::DerSequenceReader::*)()>(&System::Security::Cryptography::DerSequenceReader::ReadBitString)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Security::Cryptography::DerSequenceReader*), "ReadBitString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Security::Cryptography::DerSequenceReader::ReadOctetString
// Il2CppName: ReadOctetString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<uint8_t> (System::Security::Cryptography::DerSequenceReader::*)()>(&System::Security::Cryptography::DerSequenceReader::ReadOctetString)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Security::Cryptography::DerSequenceReader*), "ReadOctetString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Security::Cryptography::DerSequenceReader::ReadOidAsString
// Il2CppName: ReadOidAsString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::Security::Cryptography::DerSequenceReader::*)()>(&System::Security::Cryptography::DerSequenceReader::ReadOidAsString)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Security::Cryptography::DerSequenceReader*), "ReadOidAsString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Security::Cryptography::DerSequenceReader::ReadUtf8String
// Il2CppName: ReadUtf8String
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::Security::Cryptography::DerSequenceReader::*)()>(&System::Security::Cryptography::DerSequenceReader::ReadUtf8String)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Security::Cryptography::DerSequenceReader*), "ReadUtf8String", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Security::Cryptography::DerSequenceReader::ReadCollectionWithTag
// Il2CppName: ReadCollectionWithTag
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Security::Cryptography::DerSequenceReader* (System::Security::Cryptography::DerSequenceReader::*)(::System::Security::Cryptography::DerSequenceReader::DerTag)>(&System::Security::Cryptography::DerSequenceReader::ReadCollectionWithTag)> {
  static const MethodInfo* get() {
    static auto* expected = &::il2cpp_utils::GetClassFromName("System.Security.Cryptography", "DerSequenceReader/DerTag")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Security::Cryptography::DerSequenceReader*), "ReadCollectionWithTag", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{expected});
  }
};
// Writing MetadataGetter for method: System::Security::Cryptography::DerSequenceReader::ReadSequence
// Il2CppName: ReadSequence
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Security::Cryptography::DerSequenceReader* (System::Security::Cryptography::DerSequenceReader::*)()>(&System::Security::Cryptography::DerSequenceReader::ReadSequence)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Security::Cryptography::DerSequenceReader*), "ReadSequence", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Security::Cryptography::DerSequenceReader::ReadSet
// Il2CppName: ReadSet
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Security::Cryptography::DerSequenceReader* (System::Security::Cryptography::DerSequenceReader::*)()>(&System::Security::Cryptography::DerSequenceReader::ReadSet)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Security::Cryptography::DerSequenceReader*), "ReadSet", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Security::Cryptography::DerSequenceReader::ReadPrintableString
// Il2CppName: ReadPrintableString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::Security::Cryptography::DerSequenceReader::*)()>(&System::Security::Cryptography::DerSequenceReader::ReadPrintableString)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Security::Cryptography::DerSequenceReader*), "ReadPrintableString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Security::Cryptography::DerSequenceReader::ReadIA5String
// Il2CppName: ReadIA5String
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::Security::Cryptography::DerSequenceReader::*)()>(&System::Security::Cryptography::DerSequenceReader::ReadIA5String)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Security::Cryptography::DerSequenceReader*), "ReadIA5String", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Security::Cryptography::DerSequenceReader::ReadT61String
// Il2CppName: ReadT61String
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::Security::Cryptography::DerSequenceReader::*)()>(&System::Security::Cryptography::DerSequenceReader::ReadT61String)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Security::Cryptography::DerSequenceReader*), "ReadT61String", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Security::Cryptography::DerSequenceReader::ReadX509Date
// Il2CppName: ReadX509Date
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::DateTime (System::Security::Cryptography::DerSequenceReader::*)()>(&System::Security::Cryptography::DerSequenceReader::ReadX509Date)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Security::Cryptography::DerSequenceReader*), "ReadX509Date", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Security::Cryptography::DerSequenceReader::ReadUtcTime
// Il2CppName: ReadUtcTime
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::DateTime (System::Security::Cryptography::DerSequenceReader::*)()>(&System::Security::Cryptography::DerSequenceReader::ReadUtcTime)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Security::Cryptography::DerSequenceReader*), "ReadUtcTime", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Security::Cryptography::DerSequenceReader::ReadGeneralizedTime
// Il2CppName: ReadGeneralizedTime
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::DateTime (System::Security::Cryptography::DerSequenceReader::*)()>(&System::Security::Cryptography::DerSequenceReader::ReadGeneralizedTime)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Security::Cryptography::DerSequenceReader*), "ReadGeneralizedTime", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Security::Cryptography::DerSequenceReader::ReadBMPString
// Il2CppName: ReadBMPString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::Security::Cryptography::DerSequenceReader::*)()>(&System::Security::Cryptography::DerSequenceReader::ReadBMPString)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Security::Cryptography::DerSequenceReader*), "ReadBMPString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Security::Cryptography::DerSequenceReader::TrimTrailingNulls
// Il2CppName: TrimTrailingNulls
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::StringW)>(&System::Security::Cryptography::DerSequenceReader::TrimTrailingNulls)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Security::Cryptography::DerSequenceReader*), "TrimTrailingNulls", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Security::Cryptography::DerSequenceReader::ReadTime
// Il2CppName: ReadTime
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::DateTime (System::Security::Cryptography::DerSequenceReader::*)(::System::Security::Cryptography::DerSequenceReader::DerTag, ::StringW)>(&System::Security::Cryptography::DerSequenceReader::ReadTime)> {
  static const MethodInfo* get() {
    static auto* timeTag = &::il2cpp_utils::GetClassFromName("System.Security.Cryptography", "DerSequenceReader/DerTag")->byval_arg;
    static auto* formatString = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Security::Cryptography::DerSequenceReader*), "ReadTime", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{timeTag, formatString});
  }
};
// Writing MetadataGetter for method: System::Security::Cryptography::DerSequenceReader::ReadContentAsBytes
// Il2CppName: ReadContentAsBytes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<uint8_t> (System::Security::Cryptography::DerSequenceReader::*)()>(&System::Security::Cryptography::DerSequenceReader::ReadContentAsBytes)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Security::Cryptography::DerSequenceReader*), "ReadContentAsBytes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Security::Cryptography::DerSequenceReader::EatTag
// Il2CppName: EatTag
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Security::Cryptography::DerSequenceReader::*)(::System::Security::Cryptography::DerSequenceReader::DerTag)>(&System::Security::Cryptography::DerSequenceReader::EatTag)> {
  static const MethodInfo* get() {
    static auto* expected = &::il2cpp_utils::GetClassFromName("System.Security.Cryptography", "DerSequenceReader/DerTag")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Security::Cryptography::DerSequenceReader*), "EatTag", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{expected});
  }
};
// Writing MetadataGetter for method: System::Security::Cryptography::DerSequenceReader::CheckTag
// Il2CppName: CheckTag
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::Security::Cryptography::DerSequenceReader::DerTag, ::ArrayW<uint8_t>, int)>(&System::Security::Cryptography::DerSequenceReader::CheckTag)> {
  static const MethodInfo* get() {
    static auto* expected = &::il2cpp_utils::GetClassFromName("System.Security.Cryptography", "DerSequenceReader/DerTag")->byval_arg;
    static auto* data = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    static auto* position = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Security::Cryptography::DerSequenceReader*), "CheckTag", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{expected, data, position});
  }
};
// Writing MetadataGetter for method: System::Security::Cryptography::DerSequenceReader::EatLength
// Il2CppName: EatLength
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (System::Security::Cryptography::DerSequenceReader::*)()>(&System::Security::Cryptography::DerSequenceReader::EatLength)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Security::Cryptography::DerSequenceReader*), "EatLength", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Security::Cryptography::DerSequenceReader::ScanContentLength
// Il2CppName: ScanContentLength
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::ArrayW<uint8_t>, int, int, ByRef<int>)>(&System::Security::Cryptography::DerSequenceReader::ScanContentLength)> {
  static const MethodInfo* get() {
    static auto* data = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    static auto* offset = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* end = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* bytesConsumed = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Security::Cryptography::DerSequenceReader*), "ScanContentLength", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{data, offset, end, bytesConsumed});
  }
};
