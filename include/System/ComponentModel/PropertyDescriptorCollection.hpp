// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Collections.IList
#include "System/Collections/IList.hpp"
// Including type: System.Collections.IDictionary
#include "System/Collections/IDictionary.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::ComponentModel
namespace System::ComponentModel {
  // Forward declaring type: PropertyDescriptor
  class PropertyDescriptor;
}
// Forward declaring namespace: System::Collections
namespace System::Collections {
  // Forward declaring type: IComparer
  class IComparer;
  // Forward declaring type: IEnumerator
  class IEnumerator;
  // Forward declaring type: IDictionaryEnumerator
  class IDictionaryEnumerator;
  // Skipping declaration: ICollection because it is already included!
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Array
  class Array;
}
// Completed forward declares
// Type namespace: System.ComponentModel
namespace System::ComponentModel {
  // Forward declaring type: PropertyDescriptorCollection
  class PropertyDescriptorCollection;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::ComponentModel::PropertyDescriptorCollection);
DEFINE_IL2CPP_ARG_TYPE(::System::ComponentModel::PropertyDescriptorCollection*, "System.ComponentModel", "PropertyDescriptorCollection");
// Type namespace: System.ComponentModel
namespace System::ComponentModel {
  // Size: 0x4C
  #pragma pack(push, 1)
  // Autogenerated type: System.ComponentModel.PropertyDescriptorCollection
  // [TokenAttribute] Offset: FFFFFFFF
  // [DefaultMemberAttribute] Offset: FFFFFFFF
  class PropertyDescriptorCollection : public ::Il2CppObject/*, public ::System::Collections::IList, public ::System::Collections::IDictionary*/ {
    public:
    // Nested type: ::System::ComponentModel::PropertyDescriptorCollection::PropertyDescriptorEnumerator
    class PropertyDescriptorEnumerator;
    public:
    // private System.Collections.IDictionary _cachedFoundProperties
    // Size: 0x8
    // Offset: 0x10
    ::System::Collections::IDictionary* cachedFoundProperties;
    // Field size check
    static_assert(sizeof(::System::Collections::IDictionary*) == 0x8);
    // private System.Boolean _cachedIgnoreCase
    // Size: 0x1
    // Offset: 0x18
    bool cachedIgnoreCase;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: cachedIgnoreCase and: properties
    char __padding1[0x7] = {};
    // private System.ComponentModel.PropertyDescriptor[] _properties
    // Size: 0x8
    // Offset: 0x20
    ::ArrayW<::System::ComponentModel::PropertyDescriptor*> properties;
    // Field size check
    static_assert(sizeof(::ArrayW<::System::ComponentModel::PropertyDescriptor*>) == 0x8);
    // private readonly System.String[] _namedSort
    // Size: 0x8
    // Offset: 0x28
    ::ArrayW<::StringW> namedSort;
    // Field size check
    static_assert(sizeof(::ArrayW<::StringW>) == 0x8);
    // private readonly System.Collections.IComparer _comparer
    // Size: 0x8
    // Offset: 0x30
    ::System::Collections::IComparer* comparer;
    // Field size check
    static_assert(sizeof(::System::Collections::IComparer*) == 0x8);
    // private System.Boolean _propsOwned
    // Size: 0x1
    // Offset: 0x38
    bool propsOwned;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean _needSort
    // Size: 0x1
    // Offset: 0x39
    bool needSort;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean _readOnly
    // Size: 0x1
    // Offset: 0x3A
    bool readOnly;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: readOnly and: internalSyncObject
    char __padding7[0x5] = {};
    // private readonly System.Object _internalSyncObject
    // Size: 0x8
    // Offset: 0x40
    ::Il2CppObject* internalSyncObject;
    // Field size check
    static_assert(sizeof(::Il2CppObject*) == 0x8);
    // private System.Int32 <Count>k__BackingField
    // Size: 0x4
    // Offset: 0x48
    int Count;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Creating interface conversion operator: operator ::System::Collections::IList
    operator ::System::Collections::IList() noexcept {
      return *reinterpret_cast<::System::Collections::IList*>(this);
    }
    // Creating interface conversion operator: operator ::System::Collections::IDictionary
    operator ::System::Collections::IDictionary() noexcept {
      return *reinterpret_cast<::System::Collections::IDictionary*>(this);
    }
    // Get static field: static public readonly System.ComponentModel.PropertyDescriptorCollection Empty
    static ::System::ComponentModel::PropertyDescriptorCollection* _get_Empty();
    // Set static field: static public readonly System.ComponentModel.PropertyDescriptorCollection Empty
    static void _set_Empty(::System::ComponentModel::PropertyDescriptorCollection* value);
    // Get instance field reference: private System.Collections.IDictionary _cachedFoundProperties
    [[deprecated("Use field access instead!")]] ::System::Collections::IDictionary*& dyn__cachedFoundProperties();
    // Get instance field reference: private System.Boolean _cachedIgnoreCase
    [[deprecated("Use field access instead!")]] bool& dyn__cachedIgnoreCase();
    // Get instance field reference: private System.ComponentModel.PropertyDescriptor[] _properties
    [[deprecated("Use field access instead!")]] ::ArrayW<::System::ComponentModel::PropertyDescriptor*>& dyn__properties();
    // Get instance field reference: private readonly System.String[] _namedSort
    [[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& dyn__namedSort();
    // Get instance field reference: private readonly System.Collections.IComparer _comparer
    [[deprecated("Use field access instead!")]] ::System::Collections::IComparer*& dyn__comparer();
    // Get instance field reference: private System.Boolean _propsOwned
    [[deprecated("Use field access instead!")]] bool& dyn__propsOwned();
    // Get instance field reference: private System.Boolean _needSort
    [[deprecated("Use field access instead!")]] bool& dyn__needSort();
    // Get instance field reference: private System.Boolean _readOnly
    [[deprecated("Use field access instead!")]] bool& dyn__readOnly();
    // Get instance field reference: private readonly System.Object _internalSyncObject
    [[deprecated("Use field access instead!")]] ::Il2CppObject*& dyn__internalSyncObject();
    // Get instance field reference: private System.Int32 <Count>k__BackingField
    [[deprecated("Use field access instead!")]] int& dyn_$Count$k__BackingField();
    // public System.Void .ctor(System.ComponentModel.PropertyDescriptor[] properties)
    // Offset: 0x4F112CC
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static PropertyDescriptorCollection* New_ctor(::ArrayW<::System::ComponentModel::PropertyDescriptor*> properties) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptorCollection::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<PropertyDescriptorCollection*, creationType>(properties)));
    }
    // public System.Void .ctor(System.ComponentModel.PropertyDescriptor[] properties, System.Boolean readOnly)
    // Offset: 0x4F113E4
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static PropertyDescriptorCollection* New_ctor(::ArrayW<::System::ComponentModel::PropertyDescriptor*> properties, bool readOnly) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptorCollection::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<PropertyDescriptorCollection*, creationType>(properties, readOnly)));
    }
    // private System.Void .ctor(System.ComponentModel.PropertyDescriptor[] properties, System.Int32 propCount, System.String[] namedSort, System.Collections.IComparer comparer)
    // Offset: 0x4F11408
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static PropertyDescriptorCollection* New_ctor(::ArrayW<::System::ComponentModel::PropertyDescriptor*> properties, int propCount, ::ArrayW<::StringW> namedSort, ::System::Collections::IComparer* comparer) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptorCollection::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<PropertyDescriptorCollection*, creationType>(properties, propCount, namedSort, comparer)));
    }
    // public System.Int32 get_Count()
    // Offset: 0x4F11554
    int get_Count();
    // private System.Void set_Count(System.Int32 value)
    // Offset: 0x4F1155C
    void set_Count(int value);
    // public System.ComponentModel.PropertyDescriptor get_Item(System.Int32 index)
    // Offset: 0x4F11564
    ::System::ComponentModel::PropertyDescriptor* get_Item(int index);
    // public System.ComponentModel.PropertyDescriptor get_Item(System.String name)
    // Offset: 0x4F116A4
    ::System::ComponentModel::PropertyDescriptor* get_Item(::StringW name);
    // public System.Int32 Add(System.ComponentModel.PropertyDescriptor value)
    // Offset: 0x4F116B8
    int Add(::System::ComponentModel::PropertyDescriptor* value);
    // public System.Void Clear()
    // Offset: 0x4F118B0
    void Clear();
    // public System.Boolean Contains(System.ComponentModel.PropertyDescriptor value)
    // Offset: 0x4F11904
    bool Contains(::System::ComponentModel::PropertyDescriptor* value);
    // public System.Void CopyTo(System.Array array, System.Int32 index)
    // Offset: 0x4F1197C
    void CopyTo(::System::Array* array, int index);
    // private System.Void EnsurePropsOwned()
    // Offset: 0x4F115E8
    void EnsurePropsOwned();
    // private System.Void EnsureSize(System.Int32 sizeNeeded)
    // Offset: 0x4F11788
    void EnsureSize(int sizeNeeded);
    // public System.ComponentModel.PropertyDescriptor Find(System.String name, System.Boolean ignoreCase)
    // Offset: 0x4F11C38
    ::System::ComponentModel::PropertyDescriptor* Find(::StringW name, bool ignoreCase);
    // public System.Int32 IndexOf(System.ComponentModel.PropertyDescriptor value)
    // Offset: 0x4F1191C
    int IndexOf(::System::ComponentModel::PropertyDescriptor* value);
    // public System.Void Insert(System.Int32 index, System.ComponentModel.PropertyDescriptor value)
    // Offset: 0x4F12164
    void Insert(int index, ::System::ComponentModel::PropertyDescriptor* value);
    // public System.Void Remove(System.ComponentModel.PropertyDescriptor value)
    // Offset: 0x4F12254
    void Remove(::System::ComponentModel::PropertyDescriptor* value);
    // public System.Void RemoveAt(System.Int32 index)
    // Offset: 0x4F122BC
    void RemoveAt(int index);
    // public System.ComponentModel.PropertyDescriptorCollection Sort()
    // Offset: 0x4F12378
    ::System::ComponentModel::PropertyDescriptorCollection* Sort();
    // public System.ComponentModel.PropertyDescriptorCollection Sort(System.String[] names)
    // Offset: 0x4F123F0
    ::System::ComponentModel::PropertyDescriptorCollection* Sort(::ArrayW<::StringW> names);
    // public System.ComponentModel.PropertyDescriptorCollection Sort(System.String[] names, System.Collections.IComparer comparer)
    // Offset: 0x4F1246C
    ::System::ComponentModel::PropertyDescriptorCollection* Sort(::ArrayW<::StringW> names, ::System::Collections::IComparer* comparer);
    // public System.ComponentModel.PropertyDescriptorCollection Sort(System.Collections.IComparer comparer)
    // Offset: 0x4F124E8
    ::System::ComponentModel::PropertyDescriptorCollection* Sort(::System::Collections::IComparer* comparer);
    // protected System.Void InternalSort(System.String[] names)
    // Offset: 0x4F119B8
    void InternalSort(::ArrayW<::StringW> names);
    // protected System.Void InternalSort(System.Collections.IComparer sorter)
    // Offset: 0x4F12560
    void InternalSort(::System::Collections::IComparer* sorter);
    // public System.Collections.IEnumerator GetEnumerator()
    // Offset: 0x4F125D8
    ::System::Collections::IEnumerator* GetEnumerator();
    // private System.Boolean System.Collections.ICollection.get_IsSynchronized()
    // Offset: 0x4F12674
    bool System_Collections_ICollection_get_IsSynchronized();
    // private System.Object System.Collections.ICollection.get_SyncRoot()
    // Offset: 0x4F1267C
    ::Il2CppObject* System_Collections_ICollection_get_SyncRoot();
    // private System.Int32 System.Collections.ICollection.get_Count()
    // Offset: 0x4F12684
    int System_Collections_ICollection_get_Count();
    // private System.Void System.Collections.IList.Clear()
    // Offset: 0x4F1268C
    void System_Collections_IList_Clear();
    // private System.Void System.Collections.IDictionary.Clear()
    // Offset: 0x4F12690
    void System_Collections_IDictionary_Clear();
    // private System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()
    // Offset: 0x4F12694
    ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator();
    // private System.Void System.Collections.IList.RemoveAt(System.Int32 index)
    // Offset: 0x4F126A4
    void System_Collections_IList_RemoveAt(int index);
    // private System.Void System.Collections.IDictionary.Add(System.Object key, System.Object value)
    // Offset: 0x4F126A8
    void System_Collections_IDictionary_Add(::Il2CppObject* key, ::Il2CppObject* value);
    // private System.Boolean System.Collections.IDictionary.Contains(System.Object key)
    // Offset: 0x4F1276C
    bool System_Collections_IDictionary_Contains(::Il2CppObject* key);
    // private System.Collections.IDictionaryEnumerator System.Collections.IDictionary.GetEnumerator()
    // Offset: 0x4F127EC
    ::System::Collections::IDictionaryEnumerator* System_Collections_IDictionary_GetEnumerator();
    // private System.Boolean System.Collections.IDictionary.get_IsFixedSize()
    // Offset: 0x4F12894
    bool System_Collections_IDictionary_get_IsFixedSize();
    // private System.Boolean System.Collections.IDictionary.get_IsReadOnly()
    // Offset: 0x4F1289C
    bool System_Collections_IDictionary_get_IsReadOnly();
    // private System.Object System.Collections.IDictionary.get_Item(System.Object key)
    // Offset: 0x4F128A4
    ::Il2CppObject* System_Collections_IDictionary_get_Item(::Il2CppObject* key);
    // private System.Void System.Collections.IDictionary.set_Item(System.Object key, System.Object value)
    // Offset: 0x4F12920
    void System_Collections_IDictionary_set_Item(::Il2CppObject* key, ::Il2CppObject* value);
    // private System.Collections.ICollection System.Collections.IDictionary.get_Keys()
    // Offset: 0x4F12CD8
    ::System::Collections::ICollection* System_Collections_IDictionary_get_Keys();
    // private System.Collections.ICollection System.Collections.IDictionary.get_Values()
    // Offset: 0x4F12DB8
    ::System::Collections::ICollection* System_Collections_IDictionary_get_Values();
    // private System.Void System.Collections.IDictionary.Remove(System.Object key)
    // Offset: 0x4F12E90
    void System_Collections_IDictionary_Remove(::Il2CppObject* key);
    // private System.Int32 System.Collections.IList.Add(System.Object value)
    // Offset: 0x4F12F84
    int System_Collections_IList_Add(::Il2CppObject* value);
    // private System.Boolean System.Collections.IList.Contains(System.Object value)
    // Offset: 0x4F13008
    bool System_Collections_IList_Contains(::Il2CppObject* value);
    // private System.Int32 System.Collections.IList.IndexOf(System.Object value)
    // Offset: 0x4F13098
    int System_Collections_IList_IndexOf(::Il2CppObject* value);
    // private System.Void System.Collections.IList.Insert(System.Int32 index, System.Object value)
    // Offset: 0x4F1311C
    void System_Collections_IList_Insert(int index, ::Il2CppObject* value);
    // private System.Boolean System.Collections.IList.get_IsReadOnly()
    // Offset: 0x4F131B0
    bool System_Collections_IList_get_IsReadOnly();
    // private System.Boolean System.Collections.IList.get_IsFixedSize()
    // Offset: 0x4F131B8
    bool System_Collections_IList_get_IsFixedSize();
    // private System.Void System.Collections.IList.Remove(System.Object value)
    // Offset: 0x4F131C0
    void System_Collections_IList_Remove(::Il2CppObject* value);
    // private System.Object System.Collections.IList.get_Item(System.Int32 index)
    // Offset: 0x4F13244
    ::Il2CppObject* System_Collections_IList_get_Item(int index);
    // private System.Void System.Collections.IList.set_Item(System.Int32 index, System.Object value)
    // Offset: 0x4F13254
    void System_Collections_IList_set_Item(int index, ::Il2CppObject* value);
    // static private System.Void .cctor()
    // Offset: 0x4F13424
    static void _cctor();
  }; // System.ComponentModel.PropertyDescriptorCollection
  #pragma pack(pop)
  static check_size<sizeof(PropertyDescriptorCollection), 72 + sizeof(int)> __System_ComponentModel_PropertyDescriptorCollectionSizeCheck;
  static_assert(sizeof(PropertyDescriptorCollection) == 0x4C);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::ComponentModel::PropertyDescriptorCollection::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::ComponentModel::PropertyDescriptorCollection::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::ComponentModel::PropertyDescriptorCollection::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::ComponentModel::PropertyDescriptorCollection::get_Count
// Il2CppName: get_Count
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (System::ComponentModel::PropertyDescriptorCollection::*)()>(&System::ComponentModel::PropertyDescriptorCollection::get_Count)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::ComponentModel::PropertyDescriptorCollection*), "get_Count", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::ComponentModel::PropertyDescriptorCollection::set_Count
// Il2CppName: set_Count
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::ComponentModel::PropertyDescriptorCollection::*)(int)>(&System::ComponentModel::PropertyDescriptorCollection::set_Count)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::ComponentModel::PropertyDescriptorCollection*), "set_Count", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::ComponentModel::PropertyDescriptorCollection::get_Item
// Il2CppName: get_Item
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::ComponentModel::PropertyDescriptor* (System::ComponentModel::PropertyDescriptorCollection::*)(int)>(&System::ComponentModel::PropertyDescriptorCollection::get_Item)> {
  static const MethodInfo* get() {
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::ComponentModel::PropertyDescriptorCollection*), "get_Item", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{index});
  }
};
// Writing MetadataGetter for method: System::ComponentModel::PropertyDescriptorCollection::get_Item
// Il2CppName: get_Item
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::ComponentModel::PropertyDescriptor* (System::ComponentModel::PropertyDescriptorCollection::*)(::StringW)>(&System::ComponentModel::PropertyDescriptorCollection::get_Item)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::ComponentModel::PropertyDescriptorCollection*), "get_Item", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name});
  }
};
// Writing MetadataGetter for method: System::ComponentModel::PropertyDescriptorCollection::Add
// Il2CppName: Add
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (System::ComponentModel::PropertyDescriptorCollection::*)(::System::ComponentModel::PropertyDescriptor*)>(&System::ComponentModel::PropertyDescriptorCollection::Add)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System.ComponentModel", "PropertyDescriptor")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::ComponentModel::PropertyDescriptorCollection*), "Add", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::ComponentModel::PropertyDescriptorCollection::Clear
// Il2CppName: Clear
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::ComponentModel::PropertyDescriptorCollection::*)()>(&System::ComponentModel::PropertyDescriptorCollection::Clear)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::ComponentModel::PropertyDescriptorCollection*), "Clear", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::ComponentModel::PropertyDescriptorCollection::Contains
// Il2CppName: Contains
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::ComponentModel::PropertyDescriptorCollection::*)(::System::ComponentModel::PropertyDescriptor*)>(&System::ComponentModel::PropertyDescriptorCollection::Contains)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System.ComponentModel", "PropertyDescriptor")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::ComponentModel::PropertyDescriptorCollection*), "Contains", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::ComponentModel::PropertyDescriptorCollection::CopyTo
// Il2CppName: CopyTo
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::ComponentModel::PropertyDescriptorCollection::*)(::System::Array*, int)>(&System::ComponentModel::PropertyDescriptorCollection::CopyTo)> {
  static const MethodInfo* get() {
    static auto* array = &::il2cpp_utils::GetClassFromName("System", "Array")->byval_arg;
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::ComponentModel::PropertyDescriptorCollection*), "CopyTo", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{array, index});
  }
};
// Writing MetadataGetter for method: System::ComponentModel::PropertyDescriptorCollection::EnsurePropsOwned
// Il2CppName: EnsurePropsOwned
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::ComponentModel::PropertyDescriptorCollection::*)()>(&System::ComponentModel::PropertyDescriptorCollection::EnsurePropsOwned)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::ComponentModel::PropertyDescriptorCollection*), "EnsurePropsOwned", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::ComponentModel::PropertyDescriptorCollection::EnsureSize
// Il2CppName: EnsureSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::ComponentModel::PropertyDescriptorCollection::*)(int)>(&System::ComponentModel::PropertyDescriptorCollection::EnsureSize)> {
  static const MethodInfo* get() {
    static auto* sizeNeeded = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::ComponentModel::PropertyDescriptorCollection*), "EnsureSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sizeNeeded});
  }
};
// Writing MetadataGetter for method: System::ComponentModel::PropertyDescriptorCollection::Find
// Il2CppName: Find
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::ComponentModel::PropertyDescriptor* (System::ComponentModel::PropertyDescriptorCollection::*)(::StringW, bool)>(&System::ComponentModel::PropertyDescriptorCollection::Find)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* ignoreCase = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::ComponentModel::PropertyDescriptorCollection*), "Find", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name, ignoreCase});
  }
};
// Writing MetadataGetter for method: System::ComponentModel::PropertyDescriptorCollection::IndexOf
// Il2CppName: IndexOf
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (System::ComponentModel::PropertyDescriptorCollection::*)(::System::ComponentModel::PropertyDescriptor*)>(&System::ComponentModel::PropertyDescriptorCollection::IndexOf)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System.ComponentModel", "PropertyDescriptor")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::ComponentModel::PropertyDescriptorCollection*), "IndexOf", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::ComponentModel::PropertyDescriptorCollection::Insert
// Il2CppName: Insert
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::ComponentModel::PropertyDescriptorCollection::*)(int, ::System::ComponentModel::PropertyDescriptor*)>(&System::ComponentModel::PropertyDescriptorCollection::Insert)> {
  static const MethodInfo* get() {
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System.ComponentModel", "PropertyDescriptor")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::ComponentModel::PropertyDescriptorCollection*), "Insert", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{index, value});
  }
};
// Writing MetadataGetter for method: System::ComponentModel::PropertyDescriptorCollection::Remove
// Il2CppName: Remove
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::ComponentModel::PropertyDescriptorCollection::*)(::System::ComponentModel::PropertyDescriptor*)>(&System::ComponentModel::PropertyDescriptorCollection::Remove)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System.ComponentModel", "PropertyDescriptor")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::ComponentModel::PropertyDescriptorCollection*), "Remove", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::ComponentModel::PropertyDescriptorCollection::RemoveAt
// Il2CppName: RemoveAt
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::ComponentModel::PropertyDescriptorCollection::*)(int)>(&System::ComponentModel::PropertyDescriptorCollection::RemoveAt)> {
  static const MethodInfo* get() {
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::ComponentModel::PropertyDescriptorCollection*), "RemoveAt", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{index});
  }
};
// Writing MetadataGetter for method: System::ComponentModel::PropertyDescriptorCollection::Sort
// Il2CppName: Sort
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::ComponentModel::PropertyDescriptorCollection* (System::ComponentModel::PropertyDescriptorCollection::*)()>(&System::ComponentModel::PropertyDescriptorCollection::Sort)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::ComponentModel::PropertyDescriptorCollection*), "Sort", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::ComponentModel::PropertyDescriptorCollection::Sort
// Il2CppName: Sort
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::ComponentModel::PropertyDescriptorCollection* (System::ComponentModel::PropertyDescriptorCollection::*)(::ArrayW<::StringW>)>(&System::ComponentModel::PropertyDescriptorCollection::Sort)> {
  static const MethodInfo* get() {
    static auto* names = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "String"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::ComponentModel::PropertyDescriptorCollection*), "Sort", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{names});
  }
};
// Writing MetadataGetter for method: System::ComponentModel::PropertyDescriptorCollection::Sort
// Il2CppName: Sort
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::ComponentModel::PropertyDescriptorCollection* (System::ComponentModel::PropertyDescriptorCollection::*)(::ArrayW<::StringW>, ::System::Collections::IComparer*)>(&System::ComponentModel::PropertyDescriptorCollection::Sort)> {
  static const MethodInfo* get() {
    static auto* names = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "String"), 1)->byval_arg;
    static auto* comparer = &::il2cpp_utils::GetClassFromName("System.Collections", "IComparer")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::ComponentModel::PropertyDescriptorCollection*), "Sort", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{names, comparer});
  }
};
// Writing MetadataGetter for method: System::ComponentModel::PropertyDescriptorCollection::Sort
// Il2CppName: Sort
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::ComponentModel::PropertyDescriptorCollection* (System::ComponentModel::PropertyDescriptorCollection::*)(::System::Collections::IComparer*)>(&System::ComponentModel::PropertyDescriptorCollection::Sort)> {
  static const MethodInfo* get() {
    static auto* comparer = &::il2cpp_utils::GetClassFromName("System.Collections", "IComparer")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::ComponentModel::PropertyDescriptorCollection*), "Sort", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{comparer});
  }
};
// Writing MetadataGetter for method: System::ComponentModel::PropertyDescriptorCollection::InternalSort
// Il2CppName: InternalSort
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::ComponentModel::PropertyDescriptorCollection::*)(::ArrayW<::StringW>)>(&System::ComponentModel::PropertyDescriptorCollection::InternalSort)> {
  static const MethodInfo* get() {
    static auto* names = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "String"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::ComponentModel::PropertyDescriptorCollection*), "InternalSort", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{names});
  }
};
// Writing MetadataGetter for method: System::ComponentModel::PropertyDescriptorCollection::InternalSort
// Il2CppName: InternalSort
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::ComponentModel::PropertyDescriptorCollection::*)(::System::Collections::IComparer*)>(&System::ComponentModel::PropertyDescriptorCollection::InternalSort)> {
  static const MethodInfo* get() {
    static auto* sorter = &::il2cpp_utils::GetClassFromName("System.Collections", "IComparer")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::ComponentModel::PropertyDescriptorCollection*), "InternalSort", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sorter});
  }
};
// Writing MetadataGetter for method: System::ComponentModel::PropertyDescriptorCollection::GetEnumerator
// Il2CppName: GetEnumerator
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::IEnumerator* (System::ComponentModel::PropertyDescriptorCollection::*)()>(&System::ComponentModel::PropertyDescriptorCollection::GetEnumerator)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::ComponentModel::PropertyDescriptorCollection*), "GetEnumerator", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::ComponentModel::PropertyDescriptorCollection::System_Collections_ICollection_get_IsSynchronized
// Il2CppName: System.Collections.ICollection.get_IsSynchronized
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::ComponentModel::PropertyDescriptorCollection::*)()>(&System::ComponentModel::PropertyDescriptorCollection::System_Collections_ICollection_get_IsSynchronized)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::ComponentModel::PropertyDescriptorCollection*), "System.Collections.ICollection.get_IsSynchronized", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::ComponentModel::PropertyDescriptorCollection::System_Collections_ICollection_get_SyncRoot
// Il2CppName: System.Collections.ICollection.get_SyncRoot
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (System::ComponentModel::PropertyDescriptorCollection::*)()>(&System::ComponentModel::PropertyDescriptorCollection::System_Collections_ICollection_get_SyncRoot)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::ComponentModel::PropertyDescriptorCollection*), "System.Collections.ICollection.get_SyncRoot", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::ComponentModel::PropertyDescriptorCollection::System_Collections_ICollection_get_Count
// Il2CppName: System.Collections.ICollection.get_Count
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (System::ComponentModel::PropertyDescriptorCollection::*)()>(&System::ComponentModel::PropertyDescriptorCollection::System_Collections_ICollection_get_Count)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::ComponentModel::PropertyDescriptorCollection*), "System.Collections.ICollection.get_Count", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::ComponentModel::PropertyDescriptorCollection::System_Collections_IList_Clear
// Il2CppName: System.Collections.IList.Clear
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::ComponentModel::PropertyDescriptorCollection::*)()>(&System::ComponentModel::PropertyDescriptorCollection::System_Collections_IList_Clear)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::ComponentModel::PropertyDescriptorCollection*), "System.Collections.IList.Clear", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::ComponentModel::PropertyDescriptorCollection::System_Collections_IDictionary_Clear
// Il2CppName: System.Collections.IDictionary.Clear
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::ComponentModel::PropertyDescriptorCollection::*)()>(&System::ComponentModel::PropertyDescriptorCollection::System_Collections_IDictionary_Clear)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::ComponentModel::PropertyDescriptorCollection*), "System.Collections.IDictionary.Clear", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::ComponentModel::PropertyDescriptorCollection::System_Collections_IEnumerable_GetEnumerator
// Il2CppName: System.Collections.IEnumerable.GetEnumerator
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::IEnumerator* (System::ComponentModel::PropertyDescriptorCollection::*)()>(&System::ComponentModel::PropertyDescriptorCollection::System_Collections_IEnumerable_GetEnumerator)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::ComponentModel::PropertyDescriptorCollection*), "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::ComponentModel::PropertyDescriptorCollection::System_Collections_IList_RemoveAt
// Il2CppName: System.Collections.IList.RemoveAt
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::ComponentModel::PropertyDescriptorCollection::*)(int)>(&System::ComponentModel::PropertyDescriptorCollection::System_Collections_IList_RemoveAt)> {
  static const MethodInfo* get() {
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::ComponentModel::PropertyDescriptorCollection*), "System.Collections.IList.RemoveAt", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{index});
  }
};
// Writing MetadataGetter for method: System::ComponentModel::PropertyDescriptorCollection::System_Collections_IDictionary_Add
// Il2CppName: System.Collections.IDictionary.Add
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::ComponentModel::PropertyDescriptorCollection::*)(::Il2CppObject*, ::Il2CppObject*)>(&System::ComponentModel::PropertyDescriptorCollection::System_Collections_IDictionary_Add)> {
  static const MethodInfo* get() {
    static auto* key = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::ComponentModel::PropertyDescriptorCollection*), "System.Collections.IDictionary.Add", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{key, value});
  }
};
// Writing MetadataGetter for method: System::ComponentModel::PropertyDescriptorCollection::System_Collections_IDictionary_Contains
// Il2CppName: System.Collections.IDictionary.Contains
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::ComponentModel::PropertyDescriptorCollection::*)(::Il2CppObject*)>(&System::ComponentModel::PropertyDescriptorCollection::System_Collections_IDictionary_Contains)> {
  static const MethodInfo* get() {
    static auto* key = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::ComponentModel::PropertyDescriptorCollection*), "System.Collections.IDictionary.Contains", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{key});
  }
};
// Writing MetadataGetter for method: System::ComponentModel::PropertyDescriptorCollection::System_Collections_IDictionary_GetEnumerator
// Il2CppName: System.Collections.IDictionary.GetEnumerator
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::IDictionaryEnumerator* (System::ComponentModel::PropertyDescriptorCollection::*)()>(&System::ComponentModel::PropertyDescriptorCollection::System_Collections_IDictionary_GetEnumerator)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::ComponentModel::PropertyDescriptorCollection*), "System.Collections.IDictionary.GetEnumerator", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::ComponentModel::PropertyDescriptorCollection::System_Collections_IDictionary_get_IsFixedSize
// Il2CppName: System.Collections.IDictionary.get_IsFixedSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::ComponentModel::PropertyDescriptorCollection::*)()>(&System::ComponentModel::PropertyDescriptorCollection::System_Collections_IDictionary_get_IsFixedSize)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::ComponentModel::PropertyDescriptorCollection*), "System.Collections.IDictionary.get_IsFixedSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::ComponentModel::PropertyDescriptorCollection::System_Collections_IDictionary_get_IsReadOnly
// Il2CppName: System.Collections.IDictionary.get_IsReadOnly
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::ComponentModel::PropertyDescriptorCollection::*)()>(&System::ComponentModel::PropertyDescriptorCollection::System_Collections_IDictionary_get_IsReadOnly)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::ComponentModel::PropertyDescriptorCollection*), "System.Collections.IDictionary.get_IsReadOnly", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::ComponentModel::PropertyDescriptorCollection::System_Collections_IDictionary_get_Item
// Il2CppName: System.Collections.IDictionary.get_Item
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (System::ComponentModel::PropertyDescriptorCollection::*)(::Il2CppObject*)>(&System::ComponentModel::PropertyDescriptorCollection::System_Collections_IDictionary_get_Item)> {
  static const MethodInfo* get() {
    static auto* key = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::ComponentModel::PropertyDescriptorCollection*), "System.Collections.IDictionary.get_Item", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{key});
  }
};
// Writing MetadataGetter for method: System::ComponentModel::PropertyDescriptorCollection::System_Collections_IDictionary_set_Item
// Il2CppName: System.Collections.IDictionary.set_Item
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::ComponentModel::PropertyDescriptorCollection::*)(::Il2CppObject*, ::Il2CppObject*)>(&System::ComponentModel::PropertyDescriptorCollection::System_Collections_IDictionary_set_Item)> {
  static const MethodInfo* get() {
    static auto* key = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::ComponentModel::PropertyDescriptorCollection*), "System.Collections.IDictionary.set_Item", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{key, value});
  }
};
// Writing MetadataGetter for method: System::ComponentModel::PropertyDescriptorCollection::System_Collections_IDictionary_get_Keys
// Il2CppName: System.Collections.IDictionary.get_Keys
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::ICollection* (System::ComponentModel::PropertyDescriptorCollection::*)()>(&System::ComponentModel::PropertyDescriptorCollection::System_Collections_IDictionary_get_Keys)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::ComponentModel::PropertyDescriptorCollection*), "System.Collections.IDictionary.get_Keys", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::ComponentModel::PropertyDescriptorCollection::System_Collections_IDictionary_get_Values
// Il2CppName: System.Collections.IDictionary.get_Values
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::ICollection* (System::ComponentModel::PropertyDescriptorCollection::*)()>(&System::ComponentModel::PropertyDescriptorCollection::System_Collections_IDictionary_get_Values)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::ComponentModel::PropertyDescriptorCollection*), "System.Collections.IDictionary.get_Values", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::ComponentModel::PropertyDescriptorCollection::System_Collections_IDictionary_Remove
// Il2CppName: System.Collections.IDictionary.Remove
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::ComponentModel::PropertyDescriptorCollection::*)(::Il2CppObject*)>(&System::ComponentModel::PropertyDescriptorCollection::System_Collections_IDictionary_Remove)> {
  static const MethodInfo* get() {
    static auto* key = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::ComponentModel::PropertyDescriptorCollection*), "System.Collections.IDictionary.Remove", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{key});
  }
};
// Writing MetadataGetter for method: System::ComponentModel::PropertyDescriptorCollection::System_Collections_IList_Add
// Il2CppName: System.Collections.IList.Add
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (System::ComponentModel::PropertyDescriptorCollection::*)(::Il2CppObject*)>(&System::ComponentModel::PropertyDescriptorCollection::System_Collections_IList_Add)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::ComponentModel::PropertyDescriptorCollection*), "System.Collections.IList.Add", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::ComponentModel::PropertyDescriptorCollection::System_Collections_IList_Contains
// Il2CppName: System.Collections.IList.Contains
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::ComponentModel::PropertyDescriptorCollection::*)(::Il2CppObject*)>(&System::ComponentModel::PropertyDescriptorCollection::System_Collections_IList_Contains)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::ComponentModel::PropertyDescriptorCollection*), "System.Collections.IList.Contains", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::ComponentModel::PropertyDescriptorCollection::System_Collections_IList_IndexOf
// Il2CppName: System.Collections.IList.IndexOf
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (System::ComponentModel::PropertyDescriptorCollection::*)(::Il2CppObject*)>(&System::ComponentModel::PropertyDescriptorCollection::System_Collections_IList_IndexOf)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::ComponentModel::PropertyDescriptorCollection*), "System.Collections.IList.IndexOf", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::ComponentModel::PropertyDescriptorCollection::System_Collections_IList_Insert
// Il2CppName: System.Collections.IList.Insert
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::ComponentModel::PropertyDescriptorCollection::*)(int, ::Il2CppObject*)>(&System::ComponentModel::PropertyDescriptorCollection::System_Collections_IList_Insert)> {
  static const MethodInfo* get() {
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::ComponentModel::PropertyDescriptorCollection*), "System.Collections.IList.Insert", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{index, value});
  }
};
// Writing MetadataGetter for method: System::ComponentModel::PropertyDescriptorCollection::System_Collections_IList_get_IsReadOnly
// Il2CppName: System.Collections.IList.get_IsReadOnly
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::ComponentModel::PropertyDescriptorCollection::*)()>(&System::ComponentModel::PropertyDescriptorCollection::System_Collections_IList_get_IsReadOnly)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::ComponentModel::PropertyDescriptorCollection*), "System.Collections.IList.get_IsReadOnly", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::ComponentModel::PropertyDescriptorCollection::System_Collections_IList_get_IsFixedSize
// Il2CppName: System.Collections.IList.get_IsFixedSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::ComponentModel::PropertyDescriptorCollection::*)()>(&System::ComponentModel::PropertyDescriptorCollection::System_Collections_IList_get_IsFixedSize)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::ComponentModel::PropertyDescriptorCollection*), "System.Collections.IList.get_IsFixedSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::ComponentModel::PropertyDescriptorCollection::System_Collections_IList_Remove
// Il2CppName: System.Collections.IList.Remove
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::ComponentModel::PropertyDescriptorCollection::*)(::Il2CppObject*)>(&System::ComponentModel::PropertyDescriptorCollection::System_Collections_IList_Remove)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::ComponentModel::PropertyDescriptorCollection*), "System.Collections.IList.Remove", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::ComponentModel::PropertyDescriptorCollection::System_Collections_IList_get_Item
// Il2CppName: System.Collections.IList.get_Item
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (System::ComponentModel::PropertyDescriptorCollection::*)(int)>(&System::ComponentModel::PropertyDescriptorCollection::System_Collections_IList_get_Item)> {
  static const MethodInfo* get() {
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::ComponentModel::PropertyDescriptorCollection*), "System.Collections.IList.get_Item", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{index});
  }
};
// Writing MetadataGetter for method: System::ComponentModel::PropertyDescriptorCollection::System_Collections_IList_set_Item
// Il2CppName: System.Collections.IList.set_Item
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::ComponentModel::PropertyDescriptorCollection::*)(int, ::Il2CppObject*)>(&System::ComponentModel::PropertyDescriptorCollection::System_Collections_IList_set_Item)> {
  static const MethodInfo* get() {
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::ComponentModel::PropertyDescriptorCollection*), "System.Collections.IList.set_Item", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{index, value});
  }
};
// Writing MetadataGetter for method: System::ComponentModel::PropertyDescriptorCollection::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&System::ComponentModel::PropertyDescriptorCollection::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::ComponentModel::PropertyDescriptorCollection*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
