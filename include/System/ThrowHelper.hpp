// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.ExceptionArgument
#include "System/ExceptionArgument.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Exception
  class Exception;
  // Forward declaring type: Type
  class Type;
  // Forward declaring type: ExceptionResource
  struct ExceptionResource;
  // Forward declaring type: ArgumentOutOfRangeException
  class ArgumentOutOfRangeException;
  // Forward declaring type: ArgumentException
  class ArgumentException;
  // Forward declaring type: InvalidOperationException
  class InvalidOperationException;
  // Forward declaring type: Array
  class Array;
  // Forward declaring type: ArgumentNullException
  class ArgumentNullException;
}
// Forward declaring namespace: System::Buffers
namespace System::Buffers {
  // Forward declaring type: ReadOnlySequenceSegment`1<T>
  template<typename T>
  class ReadOnlySequenceSegment_1;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: KeyNotFoundException
  class KeyNotFoundException;
}
// Completed forward declares
// Type namespace: System
namespace System {
  // Forward declaring type: ThrowHelper
  class ThrowHelper;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::ThrowHelper);
DEFINE_IL2CPP_ARG_TYPE(::System::ThrowHelper*, "System", "ThrowHelper");
// Type namespace: System
namespace System {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: System.ThrowHelper
  // [TokenAttribute] Offset: FFFFFFFF
  // [StackTraceHiddenAttribute] Offset: FFFFFFFF
  class ThrowHelper : public ::Il2CppObject {
    public:
    // static System.Void ThrowArgumentNullException(System.ExceptionArgument argument)
    // Offset: 0x466DA20
    static void ThrowArgumentNullException(::System::ExceptionArgument argument);
    // static private System.Exception CreateArgumentNullException(System.ExceptionArgument argument)
    // Offset: 0x467CEA0
    static ::System::Exception* CreateArgumentNullException(::System::ExceptionArgument argument);
    // static System.Void ThrowArrayTypeMismatchException()
    // Offset: 0x467CF44
    static void ThrowArrayTypeMismatchException();
    // static private System.Exception CreateArrayTypeMismatchException()
    // Offset: 0x467CF68
    static ::System::Exception* CreateArrayTypeMismatchException();
    // static System.Void ThrowArgumentException_DestinationTooShort()
    // Offset: 0x467CFBC
    static void ThrowArgumentException_DestinationTooShort();
    // static private System.Exception CreateArgumentException_DestinationTooShort()
    // Offset: 0x467CFE0
    static ::System::Exception* CreateArgumentException_DestinationTooShort();
    // static System.Void ThrowIndexOutOfRangeException()
    // Offset: 0x467D04C
    static void ThrowIndexOutOfRangeException();
    // static private System.Exception CreateIndexOutOfRangeException()
    // Offset: 0x467D070
    static ::System::Exception* CreateIndexOutOfRangeException();
    // static System.Void ThrowArgumentOutOfRangeException()
    // Offset: 0x467D0C4
    static void ThrowArgumentOutOfRangeException();
    // static private System.Exception CreateArgumentOutOfRangeException()
    // Offset: 0x467D0E8
    static ::System::Exception* CreateArgumentOutOfRangeException();
    // static System.Void ThrowArgumentOutOfRangeException(System.ExceptionArgument argument)
    // Offset: 0x466D1BC
    static void ThrowArgumentOutOfRangeException(::System::ExceptionArgument argument);
    // static private System.Exception CreateArgumentOutOfRangeException(System.ExceptionArgument argument)
    // Offset: 0x467D13C
    static ::System::Exception* CreateArgumentOutOfRangeException(::System::ExceptionArgument argument);
    // static System.Void ThrowArgumentOutOfRangeException_PrecisionTooLarge()
    // Offset: 0x467D1E0
    static void ThrowArgumentOutOfRangeException_PrecisionTooLarge();
    // static private System.Exception CreateArgumentOutOfRangeException_PrecisionTooLarge()
    // Offset: 0x467D204
    static ::System::Exception* CreateArgumentOutOfRangeException_PrecisionTooLarge();
    // static System.Void ThrowArgumentOutOfRangeException_SymbolDoesNotFit()
    // Offset: 0x467D2DC
    static void ThrowArgumentOutOfRangeException_SymbolDoesNotFit();
    // static private System.Exception CreateArgumentOutOfRangeException_SymbolDoesNotFit()
    // Offset: 0x467D300
    static ::System::Exception* CreateArgumentOutOfRangeException_SymbolDoesNotFit();
    // static System.Void ThrowInvalidOperationException()
    // Offset: 0x467D38C
    static void ThrowInvalidOperationException();
    // static private System.Exception CreateInvalidOperationException()
    // Offset: 0x467D3B0
    static ::System::Exception* CreateInvalidOperationException();
    // static System.Void ThrowInvalidOperationException_EndPositionNotReached()
    // Offset: 0x467D404
    static void ThrowInvalidOperationException_EndPositionNotReached();
    // static private System.Exception CreateInvalidOperationException_EndPositionNotReached()
    // Offset: 0x467D428
    static ::System::Exception* CreateInvalidOperationException_EndPositionNotReached();
    // static System.Void ThrowArgumentOutOfRangeException_PositionOutOfRange()
    // Offset: 0x467D494
    static void ThrowArgumentOutOfRangeException_PositionOutOfRange();
    // static private System.Exception CreateArgumentOutOfRangeException_PositionOutOfRange()
    // Offset: 0x467D4B8
    static ::System::Exception* CreateArgumentOutOfRangeException_PositionOutOfRange();
    // static System.Void ThrowArgumentOutOfRangeException_OffsetOutOfRange()
    // Offset: 0x467D524
    static void ThrowArgumentOutOfRangeException_OffsetOutOfRange();
    // static private System.Exception CreateArgumentOutOfRangeException_OffsetOutOfRange()
    // Offset: 0x467D548
    static ::System::Exception* CreateArgumentOutOfRangeException_OffsetOutOfRange();
    // static System.Void ThrowFormatException_BadFormatSpecifier()
    // Offset: 0x467D5B4
    static void ThrowFormatException_BadFormatSpecifier();
    // static private System.Exception CreateFormatException_BadFormatSpecifier()
    // Offset: 0x467D5D8
    static ::System::Exception* CreateFormatException_BadFormatSpecifier();
    // static System.Void ThrowNotSupportedException()
    // Offset: 0x467D644
    static void ThrowNotSupportedException();
    // static private System.Exception CreateThrowNotSupportedException()
    // Offset: 0x467D668
    static ::System::Exception* CreateThrowNotSupportedException();
    // static public System.Boolean TryFormatThrowFormatException(out System.Int32 bytesWritten)
    // Offset: 0x467D6BC
    static bool TryFormatThrowFormatException(ByRef<int> bytesWritten);
    // static public System.Boolean TryParseThrowFormatException(out T value, out System.Int32 bytesConsumed)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class T>
    static bool TryParseThrowFormatException(ByRef<T> value, ByRef<int> bytesConsumed) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::ThrowHelper::TryParseThrowFormatException");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "ThrowHelper", "TryParseThrowFormatException", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<T&>(), ::il2cpp_utils::ExtractIndependentType<int&>()})));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}));
      return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___generic__method, byref(value), byref(bytesConsumed));
    }
    // static public System.Void ThrowArgumentValidationException(System.Buffers.ReadOnlySequenceSegment`1<T> startSegment, System.Int32 startIndex, System.Buffers.ReadOnlySequenceSegment`1<T> endSegment)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class T>
    static void ThrowArgumentValidationException(::System::Buffers::ReadOnlySequenceSegment_1<T>* startSegment, int startIndex, ::System::Buffers::ReadOnlySequenceSegment_1<T>* endSegment) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::ThrowHelper::ThrowArgumentValidationException");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "ThrowHelper", "ThrowArgumentValidationException", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(startSegment), ::il2cpp_utils::ExtractType(startIndex), ::il2cpp_utils::ExtractType(endSegment)})));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}));
      ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___generic__method, startSegment, startIndex, endSegment);
    }
    // static private System.Exception CreateArgumentValidationException(System.Buffers.ReadOnlySequenceSegment`1<T> startSegment, System.Int32 startIndex, System.Buffers.ReadOnlySequenceSegment`1<T> endSegment)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class T>
    static ::System::Exception* CreateArgumentValidationException(::System::Buffers::ReadOnlySequenceSegment_1<T>* startSegment, int startIndex, ::System::Buffers::ReadOnlySequenceSegment_1<T>* endSegment) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::ThrowHelper::CreateArgumentValidationException");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "ThrowHelper", "CreateArgumentValidationException", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(startSegment), ::il2cpp_utils::ExtractType(startIndex), ::il2cpp_utils::ExtractType(endSegment)})));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}));
      return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___generic__method, startSegment, startIndex, endSegment);
    }
    // static System.Void ThrowWrongKeyTypeArgumentException(System.Object key, System.Type targetType)
    // Offset: 0x467D6C8
    static void ThrowWrongKeyTypeArgumentException(::Il2CppObject* key, ::System::Type* targetType);
    // static System.Void ThrowWrongValueTypeArgumentException(System.Object value, System.Type targetType)
    // Offset: 0x467D79C
    static void ThrowWrongValueTypeArgumentException(::Il2CppObject* value, ::System::Type* targetType);
    // static System.Void ThrowArgumentException(System.ExceptionResource resource)
    // Offset: 0x467D870
    static void ThrowArgumentException(::System::ExceptionResource resource);
    // static System.Void ThrowArgumentException(System.ExceptionResource resource, System.ExceptionArgument argument)
    // Offset: 0x467DB4C
    static void ThrowArgumentException(::System::ExceptionResource resource, ::System::ExceptionArgument argument);
    // static System.Void ThrowArgumentOutOfRangeException(System.ExceptionArgument argument, System.ExceptionResource resource)
    // Offset: 0x467DD34
    static void ThrowArgumentOutOfRangeException(::System::ExceptionArgument argument, ::System::ExceptionResource resource);
    // static System.Void ThrowInvalidOperationException(System.ExceptionResource resource)
    // Offset: 0x467DDD0
    static void ThrowInvalidOperationException(::System::ExceptionResource resource);
    // static System.Void ThrowSerializationException(System.ExceptionResource resource)
    // Offset: 0x467DE20
    static void ThrowSerializationException(::System::ExceptionResource resource);
    // static System.Void ThrowNotSupportedException(System.ExceptionResource resource)
    // Offset: 0x467DE70
    static void ThrowNotSupportedException(::System::ExceptionResource resource);
    // static System.Void ThrowInvalidOperationException_InvalidOperation_EnumFailedVersion()
    // Offset: 0x467DEC0
    static void ThrowInvalidOperationException_InvalidOperation_EnumFailedVersion();
    // static System.Void ThrowInvalidOperationException_InvalidOperation_EnumOpCantHappen()
    // Offset: 0x467DF0C
    static void ThrowInvalidOperationException_InvalidOperation_EnumOpCantHappen();
    // static System.Void ThrowInvalidOperationException_InvalidOperation_EnumNotStarted()
    // Offset: 0x467DF58
    static void ThrowInvalidOperationException_InvalidOperation_EnumNotStarted();
    // static System.Void ThrowInvalidOperationException_InvalidOperation_EnumEnded()
    // Offset: 0x467DFA4
    static void ThrowInvalidOperationException_InvalidOperation_EnumEnded();
    // static System.Void ThrowInvalidOperationException_InvalidOperation_NoValue()
    // Offset: 0x467DFF0
    static void ThrowInvalidOperationException_InvalidOperation_NoValue();
    // static private System.ArgumentOutOfRangeException GetArgumentOutOfRangeException(System.ExceptionArgument argument, System.String resource)
    // Offset: 0x467E03C
    static ::System::ArgumentOutOfRangeException* GetArgumentOutOfRangeException(::System::ExceptionArgument argument, ::StringW resource);
    // static System.Void ThrowArgumentOutOfRange_IndexException()
    // Offset: 0x467E0B8
    static void ThrowArgumentOutOfRange_IndexException();
    // static System.Void ThrowIndexArgumentOutOfRange_NeedNonNegNumException()
    // Offset: 0x467E0F0
    static void ThrowIndexArgumentOutOfRange_NeedNonNegNumException();
    // static System.Void ThrowArgumentException_Argument_InvalidArrayType()
    // Offset: 0x467E128
    static void ThrowArgumentException_Argument_InvalidArrayType();
    // static private System.ArgumentException GetAddingDuplicateWithKeyArgumentException(System.Object key)
    // Offset: 0x467E174
    static ::System::ArgumentException* GetAddingDuplicateWithKeyArgumentException(::Il2CppObject* key);
    // static System.Void ThrowAddingDuplicateWithKeyArgumentException(System.Object key)
    // Offset: 0x467E204
    static void ThrowAddingDuplicateWithKeyArgumentException(::Il2CppObject* key);
    // static private System.Collections.Generic.KeyNotFoundException GetKeyNotFoundException(System.Object key)
    // Offset: 0x467E228
    static ::System::Collections::Generic::KeyNotFoundException* GetKeyNotFoundException(::Il2CppObject* key);
    // static System.Void ThrowKeyNotFoundException(System.Object key)
    // Offset: 0x467E2A0
    static void ThrowKeyNotFoundException(::Il2CppObject* key);
    // static System.Void ThrowInvalidTypeWithPointersNotSupported(System.Type targetType)
    // Offset: 0x467E2A8
    static void ThrowInvalidTypeWithPointersNotSupported(::System::Type* targetType);
    // static System.Void ThrowInvalidOperationException_ConcurrentOperationsNotSupported()
    // Offset: 0x467E308
    static void ThrowInvalidOperationException_ConcurrentOperationsNotSupported();
    // static System.InvalidOperationException GetInvalidOperationException(System.String str)
    // Offset: 0x467E338
    static ::System::InvalidOperationException* GetInvalidOperationException(::StringW str);
    // static System.Void ThrowArraySegmentCtorValidationFailedExceptions(System.Array array, System.Int32 offset, System.Int32 count)
    // Offset: 0x467E394
    static void ThrowArraySegmentCtorValidationFailedExceptions(::System::Array* array, int offset, int count);
    // static private System.Exception GetArraySegmentCtorValidationFailedException(System.Array array, System.Int32 offset, System.Int32 count)
    // Offset: 0x467E3B8
    static ::System::Exception* GetArraySegmentCtorValidationFailedException(::System::Array* array, int offset, int count);
    // static private System.ArgumentException GetArgumentException(System.ExceptionResource resource)
    // Offset: 0x467E50C
    static ::System::ArgumentException* GetArgumentException(::System::ExceptionResource resource);
    // static private System.ArgumentNullException GetArgumentNullException(System.ExceptionArgument argument)
    // Offset: 0x467E3E8
    static ::System::ArgumentNullException* GetArgumentNullException(::System::ExceptionArgument argument);
    // static System.Void IfNullAndNullsAreIllegalThenThrow(System.Object value, System.ExceptionArgument argName)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class T>
    static void IfNullAndNullsAreIllegalThenThrow(::Il2CppObject* value, ::System::ExceptionArgument argName) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::ThrowHelper::IfNullAndNullsAreIllegalThenThrow");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "ThrowHelper", "IfNullAndNullsAreIllegalThenThrow", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(argName)})));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}));
      ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___generic__method, value, argName);
    }
    // static System.String GetArgumentName(System.ExceptionArgument argument)
    // Offset: 0x467DBB0
    static ::StringW GetArgumentName(::System::ExceptionArgument argument);
    // static private System.ArgumentOutOfRangeException GetArgumentOutOfRangeException(System.ExceptionArgument argument, System.ExceptionResource resource)
    // Offset: 0x467E454
    static ::System::ArgumentOutOfRangeException* GetArgumentOutOfRangeException(::System::ExceptionArgument argument, ::System::ExceptionResource resource);
    // static System.Void ThrowStartIndexArgumentOutOfRange_ArgumentOutOfRange_Index()
    // Offset: 0x467E5B0
    static void ThrowStartIndexArgumentOutOfRange_ArgumentOutOfRange_Index();
    // static System.Void ThrowCountArgumentOutOfRange_ArgumentOutOfRange_Count()
    // Offset: 0x467E5DC
    static void ThrowCountArgumentOutOfRange_ArgumentOutOfRange_Count();
    // static System.String GetResourceName(System.ExceptionResource resource)
    // Offset: 0x467D8C0
    static ::StringW GetResourceName(::System::ExceptionResource resource);
    // static System.Void ThrowValueArgumentOutOfRange_NeedNonNegNumException()
    // Offset: 0x467E608
    static void ThrowValueArgumentOutOfRange_NeedNonNegNumException();
  }; // System.ThrowHelper
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::ThrowHelper::ThrowArgumentNullException
// Il2CppName: ThrowArgumentNullException
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::ExceptionArgument)>(&System::ThrowHelper::ThrowArgumentNullException)> {
  static const MethodInfo* get() {
    static auto* argument = &::il2cpp_utils::GetClassFromName("System", "ExceptionArgument")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::ThrowHelper*), "ThrowArgumentNullException", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{argument});
  }
};
// Writing MetadataGetter for method: System::ThrowHelper::CreateArgumentNullException
// Il2CppName: CreateArgumentNullException
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Exception* (*)(::System::ExceptionArgument)>(&System::ThrowHelper::CreateArgumentNullException)> {
  static const MethodInfo* get() {
    static auto* argument = &::il2cpp_utils::GetClassFromName("System", "ExceptionArgument")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::ThrowHelper*), "CreateArgumentNullException", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{argument});
  }
};
// Writing MetadataGetter for method: System::ThrowHelper::ThrowArrayTypeMismatchException
// Il2CppName: ThrowArrayTypeMismatchException
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&System::ThrowHelper::ThrowArrayTypeMismatchException)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::ThrowHelper*), "ThrowArrayTypeMismatchException", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::ThrowHelper::CreateArrayTypeMismatchException
// Il2CppName: CreateArrayTypeMismatchException
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Exception* (*)()>(&System::ThrowHelper::CreateArrayTypeMismatchException)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::ThrowHelper*), "CreateArrayTypeMismatchException", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::ThrowHelper::ThrowArgumentException_DestinationTooShort
// Il2CppName: ThrowArgumentException_DestinationTooShort
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&System::ThrowHelper::ThrowArgumentException_DestinationTooShort)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::ThrowHelper*), "ThrowArgumentException_DestinationTooShort", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::ThrowHelper::CreateArgumentException_DestinationTooShort
// Il2CppName: CreateArgumentException_DestinationTooShort
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Exception* (*)()>(&System::ThrowHelper::CreateArgumentException_DestinationTooShort)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::ThrowHelper*), "CreateArgumentException_DestinationTooShort", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::ThrowHelper::ThrowIndexOutOfRangeException
// Il2CppName: ThrowIndexOutOfRangeException
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&System::ThrowHelper::ThrowIndexOutOfRangeException)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::ThrowHelper*), "ThrowIndexOutOfRangeException", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::ThrowHelper::CreateIndexOutOfRangeException
// Il2CppName: CreateIndexOutOfRangeException
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Exception* (*)()>(&System::ThrowHelper::CreateIndexOutOfRangeException)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::ThrowHelper*), "CreateIndexOutOfRangeException", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::ThrowHelper::ThrowArgumentOutOfRangeException
// Il2CppName: ThrowArgumentOutOfRangeException
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&System::ThrowHelper::ThrowArgumentOutOfRangeException)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::ThrowHelper*), "ThrowArgumentOutOfRangeException", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::ThrowHelper::CreateArgumentOutOfRangeException
// Il2CppName: CreateArgumentOutOfRangeException
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Exception* (*)()>(&System::ThrowHelper::CreateArgumentOutOfRangeException)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::ThrowHelper*), "CreateArgumentOutOfRangeException", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::ThrowHelper::ThrowArgumentOutOfRangeException
// Il2CppName: ThrowArgumentOutOfRangeException
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::ExceptionArgument)>(&System::ThrowHelper::ThrowArgumentOutOfRangeException)> {
  static const MethodInfo* get() {
    static auto* argument = &::il2cpp_utils::GetClassFromName("System", "ExceptionArgument")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::ThrowHelper*), "ThrowArgumentOutOfRangeException", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{argument});
  }
};
// Writing MetadataGetter for method: System::ThrowHelper::CreateArgumentOutOfRangeException
// Il2CppName: CreateArgumentOutOfRangeException
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Exception* (*)(::System::ExceptionArgument)>(&System::ThrowHelper::CreateArgumentOutOfRangeException)> {
  static const MethodInfo* get() {
    static auto* argument = &::il2cpp_utils::GetClassFromName("System", "ExceptionArgument")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::ThrowHelper*), "CreateArgumentOutOfRangeException", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{argument});
  }
};
// Writing MetadataGetter for method: System::ThrowHelper::ThrowArgumentOutOfRangeException_PrecisionTooLarge
// Il2CppName: ThrowArgumentOutOfRangeException_PrecisionTooLarge
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&System::ThrowHelper::ThrowArgumentOutOfRangeException_PrecisionTooLarge)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::ThrowHelper*), "ThrowArgumentOutOfRangeException_PrecisionTooLarge", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::ThrowHelper::CreateArgumentOutOfRangeException_PrecisionTooLarge
// Il2CppName: CreateArgumentOutOfRangeException_PrecisionTooLarge
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Exception* (*)()>(&System::ThrowHelper::CreateArgumentOutOfRangeException_PrecisionTooLarge)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::ThrowHelper*), "CreateArgumentOutOfRangeException_PrecisionTooLarge", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::ThrowHelper::ThrowArgumentOutOfRangeException_SymbolDoesNotFit
// Il2CppName: ThrowArgumentOutOfRangeException_SymbolDoesNotFit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&System::ThrowHelper::ThrowArgumentOutOfRangeException_SymbolDoesNotFit)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::ThrowHelper*), "ThrowArgumentOutOfRangeException_SymbolDoesNotFit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::ThrowHelper::CreateArgumentOutOfRangeException_SymbolDoesNotFit
// Il2CppName: CreateArgumentOutOfRangeException_SymbolDoesNotFit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Exception* (*)()>(&System::ThrowHelper::CreateArgumentOutOfRangeException_SymbolDoesNotFit)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::ThrowHelper*), "CreateArgumentOutOfRangeException_SymbolDoesNotFit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::ThrowHelper::ThrowInvalidOperationException
// Il2CppName: ThrowInvalidOperationException
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&System::ThrowHelper::ThrowInvalidOperationException)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::ThrowHelper*), "ThrowInvalidOperationException", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::ThrowHelper::CreateInvalidOperationException
// Il2CppName: CreateInvalidOperationException
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Exception* (*)()>(&System::ThrowHelper::CreateInvalidOperationException)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::ThrowHelper*), "CreateInvalidOperationException", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::ThrowHelper::ThrowInvalidOperationException_EndPositionNotReached
// Il2CppName: ThrowInvalidOperationException_EndPositionNotReached
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&System::ThrowHelper::ThrowInvalidOperationException_EndPositionNotReached)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::ThrowHelper*), "ThrowInvalidOperationException_EndPositionNotReached", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::ThrowHelper::CreateInvalidOperationException_EndPositionNotReached
// Il2CppName: CreateInvalidOperationException_EndPositionNotReached
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Exception* (*)()>(&System::ThrowHelper::CreateInvalidOperationException_EndPositionNotReached)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::ThrowHelper*), "CreateInvalidOperationException_EndPositionNotReached", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::ThrowHelper::ThrowArgumentOutOfRangeException_PositionOutOfRange
// Il2CppName: ThrowArgumentOutOfRangeException_PositionOutOfRange
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&System::ThrowHelper::ThrowArgumentOutOfRangeException_PositionOutOfRange)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::ThrowHelper*), "ThrowArgumentOutOfRangeException_PositionOutOfRange", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::ThrowHelper::CreateArgumentOutOfRangeException_PositionOutOfRange
// Il2CppName: CreateArgumentOutOfRangeException_PositionOutOfRange
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Exception* (*)()>(&System::ThrowHelper::CreateArgumentOutOfRangeException_PositionOutOfRange)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::ThrowHelper*), "CreateArgumentOutOfRangeException_PositionOutOfRange", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::ThrowHelper::ThrowArgumentOutOfRangeException_OffsetOutOfRange
// Il2CppName: ThrowArgumentOutOfRangeException_OffsetOutOfRange
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&System::ThrowHelper::ThrowArgumentOutOfRangeException_OffsetOutOfRange)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::ThrowHelper*), "ThrowArgumentOutOfRangeException_OffsetOutOfRange", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::ThrowHelper::CreateArgumentOutOfRangeException_OffsetOutOfRange
// Il2CppName: CreateArgumentOutOfRangeException_OffsetOutOfRange
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Exception* (*)()>(&System::ThrowHelper::CreateArgumentOutOfRangeException_OffsetOutOfRange)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::ThrowHelper*), "CreateArgumentOutOfRangeException_OffsetOutOfRange", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::ThrowHelper::ThrowFormatException_BadFormatSpecifier
// Il2CppName: ThrowFormatException_BadFormatSpecifier
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&System::ThrowHelper::ThrowFormatException_BadFormatSpecifier)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::ThrowHelper*), "ThrowFormatException_BadFormatSpecifier", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::ThrowHelper::CreateFormatException_BadFormatSpecifier
// Il2CppName: CreateFormatException_BadFormatSpecifier
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Exception* (*)()>(&System::ThrowHelper::CreateFormatException_BadFormatSpecifier)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::ThrowHelper*), "CreateFormatException_BadFormatSpecifier", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::ThrowHelper::ThrowNotSupportedException
// Il2CppName: ThrowNotSupportedException
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&System::ThrowHelper::ThrowNotSupportedException)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::ThrowHelper*), "ThrowNotSupportedException", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::ThrowHelper::CreateThrowNotSupportedException
// Il2CppName: CreateThrowNotSupportedException
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Exception* (*)()>(&System::ThrowHelper::CreateThrowNotSupportedException)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::ThrowHelper*), "CreateThrowNotSupportedException", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::ThrowHelper::TryFormatThrowFormatException
// Il2CppName: TryFormatThrowFormatException
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(ByRef<int>)>(&System::ThrowHelper::TryFormatThrowFormatException)> {
  static const MethodInfo* get() {
    static auto* bytesWritten = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(System::ThrowHelper*), "TryFormatThrowFormatException", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{bytesWritten});
  }
};
// Writing MetadataGetter for method: System::ThrowHelper::TryParseThrowFormatException
// Il2CppName: TryParseThrowFormatException
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: System::ThrowHelper::ThrowArgumentValidationException
// Il2CppName: ThrowArgumentValidationException
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: System::ThrowHelper::CreateArgumentValidationException
// Il2CppName: CreateArgumentValidationException
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: System::ThrowHelper::ThrowWrongKeyTypeArgumentException
// Il2CppName: ThrowWrongKeyTypeArgumentException
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Il2CppObject*, ::System::Type*)>(&System::ThrowHelper::ThrowWrongKeyTypeArgumentException)> {
  static const MethodInfo* get() {
    static auto* key = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* targetType = &::il2cpp_utils::GetClassFromName("System", "Type")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::ThrowHelper*), "ThrowWrongKeyTypeArgumentException", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{key, targetType});
  }
};
// Writing MetadataGetter for method: System::ThrowHelper::ThrowWrongValueTypeArgumentException
// Il2CppName: ThrowWrongValueTypeArgumentException
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Il2CppObject*, ::System::Type*)>(&System::ThrowHelper::ThrowWrongValueTypeArgumentException)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* targetType = &::il2cpp_utils::GetClassFromName("System", "Type")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::ThrowHelper*), "ThrowWrongValueTypeArgumentException", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value, targetType});
  }
};
// Writing MetadataGetter for method: System::ThrowHelper::ThrowArgumentException
// Il2CppName: ThrowArgumentException
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::ExceptionResource)>(&System::ThrowHelper::ThrowArgumentException)> {
  static const MethodInfo* get() {
    static auto* resource = &::il2cpp_utils::GetClassFromName("System", "ExceptionResource")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::ThrowHelper*), "ThrowArgumentException", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{resource});
  }
};
// Writing MetadataGetter for method: System::ThrowHelper::ThrowArgumentException
// Il2CppName: ThrowArgumentException
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::ExceptionResource, ::System::ExceptionArgument)>(&System::ThrowHelper::ThrowArgumentException)> {
  static const MethodInfo* get() {
    static auto* resource = &::il2cpp_utils::GetClassFromName("System", "ExceptionResource")->byval_arg;
    static auto* argument = &::il2cpp_utils::GetClassFromName("System", "ExceptionArgument")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::ThrowHelper*), "ThrowArgumentException", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{resource, argument});
  }
};
// Writing MetadataGetter for method: System::ThrowHelper::ThrowArgumentOutOfRangeException
// Il2CppName: ThrowArgumentOutOfRangeException
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::ExceptionArgument, ::System::ExceptionResource)>(&System::ThrowHelper::ThrowArgumentOutOfRangeException)> {
  static const MethodInfo* get() {
    static auto* argument = &::il2cpp_utils::GetClassFromName("System", "ExceptionArgument")->byval_arg;
    static auto* resource = &::il2cpp_utils::GetClassFromName("System", "ExceptionResource")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::ThrowHelper*), "ThrowArgumentOutOfRangeException", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{argument, resource});
  }
};
// Writing MetadataGetter for method: System::ThrowHelper::ThrowInvalidOperationException
// Il2CppName: ThrowInvalidOperationException
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::ExceptionResource)>(&System::ThrowHelper::ThrowInvalidOperationException)> {
  static const MethodInfo* get() {
    static auto* resource = &::il2cpp_utils::GetClassFromName("System", "ExceptionResource")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::ThrowHelper*), "ThrowInvalidOperationException", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{resource});
  }
};
// Writing MetadataGetter for method: System::ThrowHelper::ThrowSerializationException
// Il2CppName: ThrowSerializationException
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::ExceptionResource)>(&System::ThrowHelper::ThrowSerializationException)> {
  static const MethodInfo* get() {
    static auto* resource = &::il2cpp_utils::GetClassFromName("System", "ExceptionResource")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::ThrowHelper*), "ThrowSerializationException", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{resource});
  }
};
// Writing MetadataGetter for method: System::ThrowHelper::ThrowNotSupportedException
// Il2CppName: ThrowNotSupportedException
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::ExceptionResource)>(&System::ThrowHelper::ThrowNotSupportedException)> {
  static const MethodInfo* get() {
    static auto* resource = &::il2cpp_utils::GetClassFromName("System", "ExceptionResource")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::ThrowHelper*), "ThrowNotSupportedException", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{resource});
  }
};
// Writing MetadataGetter for method: System::ThrowHelper::ThrowInvalidOperationException_InvalidOperation_EnumFailedVersion
// Il2CppName: ThrowInvalidOperationException_InvalidOperation_EnumFailedVersion
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&System::ThrowHelper::ThrowInvalidOperationException_InvalidOperation_EnumFailedVersion)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::ThrowHelper*), "ThrowInvalidOperationException_InvalidOperation_EnumFailedVersion", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::ThrowHelper::ThrowInvalidOperationException_InvalidOperation_EnumOpCantHappen
// Il2CppName: ThrowInvalidOperationException_InvalidOperation_EnumOpCantHappen
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&System::ThrowHelper::ThrowInvalidOperationException_InvalidOperation_EnumOpCantHappen)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::ThrowHelper*), "ThrowInvalidOperationException_InvalidOperation_EnumOpCantHappen", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::ThrowHelper::ThrowInvalidOperationException_InvalidOperation_EnumNotStarted
// Il2CppName: ThrowInvalidOperationException_InvalidOperation_EnumNotStarted
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&System::ThrowHelper::ThrowInvalidOperationException_InvalidOperation_EnumNotStarted)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::ThrowHelper*), "ThrowInvalidOperationException_InvalidOperation_EnumNotStarted", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::ThrowHelper::ThrowInvalidOperationException_InvalidOperation_EnumEnded
// Il2CppName: ThrowInvalidOperationException_InvalidOperation_EnumEnded
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&System::ThrowHelper::ThrowInvalidOperationException_InvalidOperation_EnumEnded)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::ThrowHelper*), "ThrowInvalidOperationException_InvalidOperation_EnumEnded", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::ThrowHelper::ThrowInvalidOperationException_InvalidOperation_NoValue
// Il2CppName: ThrowInvalidOperationException_InvalidOperation_NoValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&System::ThrowHelper::ThrowInvalidOperationException_InvalidOperation_NoValue)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::ThrowHelper*), "ThrowInvalidOperationException_InvalidOperation_NoValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::ThrowHelper::GetArgumentOutOfRangeException
// Il2CppName: GetArgumentOutOfRangeException
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::ArgumentOutOfRangeException* (*)(::System::ExceptionArgument, ::StringW)>(&System::ThrowHelper::GetArgumentOutOfRangeException)> {
  static const MethodInfo* get() {
    static auto* argument = &::il2cpp_utils::GetClassFromName("System", "ExceptionArgument")->byval_arg;
    static auto* resource = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::ThrowHelper*), "GetArgumentOutOfRangeException", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{argument, resource});
  }
};
// Writing MetadataGetter for method: System::ThrowHelper::ThrowArgumentOutOfRange_IndexException
// Il2CppName: ThrowArgumentOutOfRange_IndexException
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&System::ThrowHelper::ThrowArgumentOutOfRange_IndexException)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::ThrowHelper*), "ThrowArgumentOutOfRange_IndexException", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::ThrowHelper::ThrowIndexArgumentOutOfRange_NeedNonNegNumException
// Il2CppName: ThrowIndexArgumentOutOfRange_NeedNonNegNumException
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&System::ThrowHelper::ThrowIndexArgumentOutOfRange_NeedNonNegNumException)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::ThrowHelper*), "ThrowIndexArgumentOutOfRange_NeedNonNegNumException", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::ThrowHelper::ThrowArgumentException_Argument_InvalidArrayType
// Il2CppName: ThrowArgumentException_Argument_InvalidArrayType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&System::ThrowHelper::ThrowArgumentException_Argument_InvalidArrayType)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::ThrowHelper*), "ThrowArgumentException_Argument_InvalidArrayType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::ThrowHelper::GetAddingDuplicateWithKeyArgumentException
// Il2CppName: GetAddingDuplicateWithKeyArgumentException
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::ArgumentException* (*)(::Il2CppObject*)>(&System::ThrowHelper::GetAddingDuplicateWithKeyArgumentException)> {
  static const MethodInfo* get() {
    static auto* key = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::ThrowHelper*), "GetAddingDuplicateWithKeyArgumentException", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{key});
  }
};
// Writing MetadataGetter for method: System::ThrowHelper::ThrowAddingDuplicateWithKeyArgumentException
// Il2CppName: ThrowAddingDuplicateWithKeyArgumentException
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Il2CppObject*)>(&System::ThrowHelper::ThrowAddingDuplicateWithKeyArgumentException)> {
  static const MethodInfo* get() {
    static auto* key = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::ThrowHelper*), "ThrowAddingDuplicateWithKeyArgumentException", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{key});
  }
};
// Writing MetadataGetter for method: System::ThrowHelper::GetKeyNotFoundException
// Il2CppName: GetKeyNotFoundException
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::KeyNotFoundException* (*)(::Il2CppObject*)>(&System::ThrowHelper::GetKeyNotFoundException)> {
  static const MethodInfo* get() {
    static auto* key = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::ThrowHelper*), "GetKeyNotFoundException", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{key});
  }
};
// Writing MetadataGetter for method: System::ThrowHelper::ThrowKeyNotFoundException
// Il2CppName: ThrowKeyNotFoundException
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Il2CppObject*)>(&System::ThrowHelper::ThrowKeyNotFoundException)> {
  static const MethodInfo* get() {
    static auto* key = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::ThrowHelper*), "ThrowKeyNotFoundException", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{key});
  }
};
// Writing MetadataGetter for method: System::ThrowHelper::ThrowInvalidTypeWithPointersNotSupported
// Il2CppName: ThrowInvalidTypeWithPointersNotSupported
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::Type*)>(&System::ThrowHelper::ThrowInvalidTypeWithPointersNotSupported)> {
  static const MethodInfo* get() {
    static auto* targetType = &::il2cpp_utils::GetClassFromName("System", "Type")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::ThrowHelper*), "ThrowInvalidTypeWithPointersNotSupported", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{targetType});
  }
};
// Writing MetadataGetter for method: System::ThrowHelper::ThrowInvalidOperationException_ConcurrentOperationsNotSupported
// Il2CppName: ThrowInvalidOperationException_ConcurrentOperationsNotSupported
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&System::ThrowHelper::ThrowInvalidOperationException_ConcurrentOperationsNotSupported)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::ThrowHelper*), "ThrowInvalidOperationException_ConcurrentOperationsNotSupported", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::ThrowHelper::GetInvalidOperationException
// Il2CppName: GetInvalidOperationException
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::InvalidOperationException* (*)(::StringW)>(&System::ThrowHelper::GetInvalidOperationException)> {
  static const MethodInfo* get() {
    static auto* str = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::ThrowHelper*), "GetInvalidOperationException", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{str});
  }
};
// Writing MetadataGetter for method: System::ThrowHelper::ThrowArraySegmentCtorValidationFailedExceptions
// Il2CppName: ThrowArraySegmentCtorValidationFailedExceptions
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::Array*, int, int)>(&System::ThrowHelper::ThrowArraySegmentCtorValidationFailedExceptions)> {
  static const MethodInfo* get() {
    static auto* array = &::il2cpp_utils::GetClassFromName("System", "Array")->byval_arg;
    static auto* offset = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* count = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::ThrowHelper*), "ThrowArraySegmentCtorValidationFailedExceptions", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{array, offset, count});
  }
};
// Writing MetadataGetter for method: System::ThrowHelper::GetArraySegmentCtorValidationFailedException
// Il2CppName: GetArraySegmentCtorValidationFailedException
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Exception* (*)(::System::Array*, int, int)>(&System::ThrowHelper::GetArraySegmentCtorValidationFailedException)> {
  static const MethodInfo* get() {
    static auto* array = &::il2cpp_utils::GetClassFromName("System", "Array")->byval_arg;
    static auto* offset = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* count = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::ThrowHelper*), "GetArraySegmentCtorValidationFailedException", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{array, offset, count});
  }
};
// Writing MetadataGetter for method: System::ThrowHelper::GetArgumentException
// Il2CppName: GetArgumentException
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::ArgumentException* (*)(::System::ExceptionResource)>(&System::ThrowHelper::GetArgumentException)> {
  static const MethodInfo* get() {
    static auto* resource = &::il2cpp_utils::GetClassFromName("System", "ExceptionResource")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::ThrowHelper*), "GetArgumentException", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{resource});
  }
};
// Writing MetadataGetter for method: System::ThrowHelper::GetArgumentNullException
// Il2CppName: GetArgumentNullException
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::ArgumentNullException* (*)(::System::ExceptionArgument)>(&System::ThrowHelper::GetArgumentNullException)> {
  static const MethodInfo* get() {
    static auto* argument = &::il2cpp_utils::GetClassFromName("System", "ExceptionArgument")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::ThrowHelper*), "GetArgumentNullException", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{argument});
  }
};
// Writing MetadataGetter for method: System::ThrowHelper::IfNullAndNullsAreIllegalThenThrow
// Il2CppName: IfNullAndNullsAreIllegalThenThrow
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: System::ThrowHelper::GetArgumentName
// Il2CppName: GetArgumentName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::ExceptionArgument)>(&System::ThrowHelper::GetArgumentName)> {
  static const MethodInfo* get() {
    static auto* argument = &::il2cpp_utils::GetClassFromName("System", "ExceptionArgument")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::ThrowHelper*), "GetArgumentName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{argument});
  }
};
// Writing MetadataGetter for method: System::ThrowHelper::GetArgumentOutOfRangeException
// Il2CppName: GetArgumentOutOfRangeException
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::ArgumentOutOfRangeException* (*)(::System::ExceptionArgument, ::System::ExceptionResource)>(&System::ThrowHelper::GetArgumentOutOfRangeException)> {
  static const MethodInfo* get() {
    static auto* argument = &::il2cpp_utils::GetClassFromName("System", "ExceptionArgument")->byval_arg;
    static auto* resource = &::il2cpp_utils::GetClassFromName("System", "ExceptionResource")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::ThrowHelper*), "GetArgumentOutOfRangeException", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{argument, resource});
  }
};
// Writing MetadataGetter for method: System::ThrowHelper::ThrowStartIndexArgumentOutOfRange_ArgumentOutOfRange_Index
// Il2CppName: ThrowStartIndexArgumentOutOfRange_ArgumentOutOfRange_Index
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&System::ThrowHelper::ThrowStartIndexArgumentOutOfRange_ArgumentOutOfRange_Index)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::ThrowHelper*), "ThrowStartIndexArgumentOutOfRange_ArgumentOutOfRange_Index", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::ThrowHelper::ThrowCountArgumentOutOfRange_ArgumentOutOfRange_Count
// Il2CppName: ThrowCountArgumentOutOfRange_ArgumentOutOfRange_Count
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&System::ThrowHelper::ThrowCountArgumentOutOfRange_ArgumentOutOfRange_Count)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::ThrowHelper*), "ThrowCountArgumentOutOfRange_ArgumentOutOfRange_Count", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::ThrowHelper::GetResourceName
// Il2CppName: GetResourceName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::ExceptionResource)>(&System::ThrowHelper::GetResourceName)> {
  static const MethodInfo* get() {
    static auto* resource = &::il2cpp_utils::GetClassFromName("System", "ExceptionResource")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::ThrowHelper*), "GetResourceName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{resource});
  }
};
// Writing MetadataGetter for method: System::ThrowHelper::ThrowValueArgumentOutOfRange_NeedNonNegNumException
// Il2CppName: ThrowValueArgumentOutOfRange_NeedNonNegNumException
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&System::ThrowHelper::ThrowValueArgumentOutOfRange_NeedNonNegNumException)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::ThrowHelper*), "ThrowValueArgumentOutOfRange_NeedNonNegNumException", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
