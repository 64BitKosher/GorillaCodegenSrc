// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Guid
#include "System/Guid.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Including type: System.Guid/GuidParseThrowStyle
#include "System/Guid_GuidParseThrowStyle.hpp"
// Including type: System.Guid/ParseFailureKind
#include "System/Guid_ParseFailureKind.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Exception
  class Exception;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::System::Guid::GuidResult, "System", "Guid/GuidResult");
// Type namespace: System
namespace System {
  // Size: 0x38
  #pragma pack(push, 1)
  // WARNING Layout: Sequential may not be correctly taken into account!
  // Autogenerated type: System.Guid/GuidResult
  // [TokenAttribute] Offset: FFFFFFFF
  struct Guid::GuidResult/*, public ::System::ValueType*/ {
    public:
    public:
    // System.Guid _parsedGuid
    // Size: 0x10
    // Offset: 0x0
    ::System::Guid parsedGuid;
    // Field size check
    static_assert(sizeof(::System::Guid) == 0x10);
    // System.Guid/GuidParseThrowStyle _throwStyle
    // Size: 0x4
    // Offset: 0x10
    ::System::Guid::GuidParseThrowStyle throwStyle;
    // Field size check
    static_assert(sizeof(::System::Guid::GuidParseThrowStyle) == 0x4);
    // private System.Guid/ParseFailureKind _failure
    // Size: 0x4
    // Offset: 0x14
    ::System::Guid::ParseFailureKind failure;
    // Field size check
    static_assert(sizeof(::System::Guid::ParseFailureKind) == 0x4);
    // private System.String _failureMessageID
    // Size: 0x8
    // Offset: 0x18
    ::StringW failureMessageID;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private System.Object _failureMessageFormatArgument
    // Size: 0x8
    // Offset: 0x20
    ::Il2CppObject* failureMessageFormatArgument;
    // Field size check
    static_assert(sizeof(::Il2CppObject*) == 0x8);
    // private System.String _failureArgumentName
    // Size: 0x8
    // Offset: 0x28
    ::StringW failureArgumentName;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private System.Exception _innerException
    // Size: 0x8
    // Offset: 0x30
    ::System::Exception* innerException;
    // Field size check
    static_assert(sizeof(::System::Exception*) == 0x8);
    public:
    // Creating value type constructor for type: GuidResult
    constexpr GuidResult(::System::Guid parsedGuid_ = {}, ::System::Guid::GuidParseThrowStyle throwStyle_ = {}, ::System::Guid::ParseFailureKind failure_ = {}, ::StringW failureMessageID_ = {}, ::Il2CppObject* failureMessageFormatArgument_ = {}, ::StringW failureArgumentName_ = {}, ::System::Exception* innerException_ = {}) noexcept : parsedGuid{parsedGuid_}, throwStyle{throwStyle_}, failure{failure_}, failureMessageID{failureMessageID_}, failureMessageFormatArgument{failureMessageFormatArgument_}, failureArgumentName{failureArgumentName_}, innerException{innerException_} {}
    // Creating interface conversion operator: operator ::System::ValueType
    operator ::System::ValueType() noexcept {
      return *reinterpret_cast<::System::ValueType*>(this);
    }
    // Get instance field reference: System.Guid _parsedGuid
    [[deprecated("Use field access instead!")]] ::System::Guid& dyn__parsedGuid();
    // Get instance field reference: System.Guid/GuidParseThrowStyle _throwStyle
    [[deprecated("Use field access instead!")]] ::System::Guid::GuidParseThrowStyle& dyn__throwStyle();
    // Get instance field reference: private System.Guid/ParseFailureKind _failure
    [[deprecated("Use field access instead!")]] ::System::Guid::ParseFailureKind& dyn__failure();
    // Get instance field reference: private System.String _failureMessageID
    [[deprecated("Use field access instead!")]] ::StringW& dyn__failureMessageID();
    // Get instance field reference: private System.Object _failureMessageFormatArgument
    [[deprecated("Use field access instead!")]] ::Il2CppObject*& dyn__failureMessageFormatArgument();
    // Get instance field reference: private System.String _failureArgumentName
    [[deprecated("Use field access instead!")]] ::StringW& dyn__failureArgumentName();
    // Get instance field reference: private System.Exception _innerException
    [[deprecated("Use field access instead!")]] ::System::Exception*& dyn__innerException();
    // System.Void Init(System.Guid/GuidParseThrowStyle canThrow)
    // Offset: 0x46563BC
    void Init(::System::Guid::GuidParseThrowStyle canThrow);
    // System.Void SetFailure(System.Exception nativeException)
    // Offset: 0x4655658
    void SetFailure(::System::Exception* nativeException);
    // System.Void SetFailure(System.Guid/ParseFailureKind failure, System.String failureMessageID)
    // Offset: 0x465427C
    void SetFailure(::System::Guid::ParseFailureKind failure, ::StringW failureMessageID);
    // System.Void SetFailure(System.Guid/ParseFailureKind failure, System.String failureMessageID, System.Object failureMessageFormatArgument)
    // Offset: 0x4655254
    void SetFailure(::System::Guid::ParseFailureKind failure, ::StringW failureMessageID, ::Il2CppObject* failureMessageFormatArgument);
    // System.Void SetFailure(System.Guid/ParseFailureKind failure, System.String failureMessageID, System.Object failureMessageFormatArgument, System.String failureArgumentName, System.Exception innerException)
    // Offset: 0x4654EB4
    void SetFailure(::System::Guid::ParseFailureKind failure, ::StringW failureMessageID, ::Il2CppObject* failureMessageFormatArgument, ::StringW failureArgumentName, ::System::Exception* innerException);
    // System.Exception GetGuidParseException()
    // Offset: 0x4653D14
    ::System::Exception* GetGuidParseException();
  }; // System.Guid/GuidResult
  #pragma pack(pop)
  static check_size<sizeof(Guid::GuidResult), 48 + sizeof(::System::Exception*)> __System_Guid_GuidResultSizeCheck;
  static_assert(sizeof(Guid::GuidResult) == 0x38);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::Guid::GuidResult::Init
// Il2CppName: Init
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Guid::GuidResult::*)(::System::Guid::GuidParseThrowStyle)>(&System::Guid::GuidResult::Init)> {
  static const MethodInfo* get() {
    static auto* canThrow = &::il2cpp_utils::GetClassFromName("System", "Guid/GuidParseThrowStyle")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Guid::GuidResult), "Init", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{canThrow});
  }
};
// Writing MetadataGetter for method: System::Guid::GuidResult::SetFailure
// Il2CppName: SetFailure
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Guid::GuidResult::*)(::System::Exception*)>(&System::Guid::GuidResult::SetFailure)> {
  static const MethodInfo* get() {
    static auto* nativeException = &::il2cpp_utils::GetClassFromName("System", "Exception")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Guid::GuidResult), "SetFailure", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{nativeException});
  }
};
// Writing MetadataGetter for method: System::Guid::GuidResult::SetFailure
// Il2CppName: SetFailure
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Guid::GuidResult::*)(::System::Guid::ParseFailureKind, ::StringW)>(&System::Guid::GuidResult::SetFailure)> {
  static const MethodInfo* get() {
    static auto* failure = &::il2cpp_utils::GetClassFromName("System", "Guid/ParseFailureKind")->byval_arg;
    static auto* failureMessageID = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Guid::GuidResult), "SetFailure", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{failure, failureMessageID});
  }
};
// Writing MetadataGetter for method: System::Guid::GuidResult::SetFailure
// Il2CppName: SetFailure
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Guid::GuidResult::*)(::System::Guid::ParseFailureKind, ::StringW, ::Il2CppObject*)>(&System::Guid::GuidResult::SetFailure)> {
  static const MethodInfo* get() {
    static auto* failure = &::il2cpp_utils::GetClassFromName("System", "Guid/ParseFailureKind")->byval_arg;
    static auto* failureMessageID = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* failureMessageFormatArgument = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Guid::GuidResult), "SetFailure", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{failure, failureMessageID, failureMessageFormatArgument});
  }
};
// Writing MetadataGetter for method: System::Guid::GuidResult::SetFailure
// Il2CppName: SetFailure
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Guid::GuidResult::*)(::System::Guid::ParseFailureKind, ::StringW, ::Il2CppObject*, ::StringW, ::System::Exception*)>(&System::Guid::GuidResult::SetFailure)> {
  static const MethodInfo* get() {
    static auto* failure = &::il2cpp_utils::GetClassFromName("System", "Guid/ParseFailureKind")->byval_arg;
    static auto* failureMessageID = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* failureMessageFormatArgument = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* failureArgumentName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* innerException = &::il2cpp_utils::GetClassFromName("System", "Exception")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Guid::GuidResult), "SetFailure", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{failure, failureMessageID, failureMessageFormatArgument, failureArgumentName, innerException});
  }
};
// Writing MetadataGetter for method: System::Guid::GuidResult::GetGuidParseException
// Il2CppName: GetGuidParseException
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Exception* (System::Guid::GuidResult::*)()>(&System::Guid::GuidResult::GetGuidParseException)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Guid::GuidResult), "GetGuidParseException", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
