// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.MulticastDelegate
#include "System/MulticastDelegate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Xml::Serialization
namespace System::Xml::Serialization {
  // Forward declaring type: XmlAttributeEventArgs
  class XmlAttributeEventArgs;
}
// Completed forward declares
// Type namespace: System.Xml.Serialization
namespace System::Xml::Serialization {
  // Forward declaring type: XmlAttributeEventHandler
  class XmlAttributeEventHandler;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::Xml::Serialization::XmlAttributeEventHandler);
DEFINE_IL2CPP_ARG_TYPE(::System::Xml::Serialization::XmlAttributeEventHandler*, "System.Xml.Serialization", "XmlAttributeEventHandler");
// Type namespace: System.Xml.Serialization
namespace System::Xml::Serialization {
  // Size: 0x80
  #pragma pack(push, 1)
  // Autogenerated type: System.Xml.Serialization.XmlAttributeEventHandler
  // [TokenAttribute] Offset: FFFFFFFF
  class XmlAttributeEventHandler : public ::System::MulticastDelegate {
    public:
    // public System.Void .ctor(System.Object object, System.IntPtr method)
    // Offset: 0x4E41B60
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static XmlAttributeEventHandler* New_ctor(::Il2CppObject* object, ::System::IntPtr method) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlAttributeEventHandler::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<XmlAttributeEventHandler*, creationType>(object, method)));
    }
    // public System.Void Invoke(System.Object sender, System.Xml.Serialization.XmlAttributeEventArgs e)
    // Offset: 0x4E41C6C
    void Invoke(::Il2CppObject* sender, ::System::Xml::Serialization::XmlAttributeEventArgs* e);
  }; // System.Xml.Serialization.XmlAttributeEventHandler
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::Xml::Serialization::XmlAttributeEventHandler::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::Xml::Serialization::XmlAttributeEventHandler::Invoke
// Il2CppName: Invoke
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Xml::Serialization::XmlAttributeEventHandler::*)(::Il2CppObject*, ::System::Xml::Serialization::XmlAttributeEventArgs*)>(&System::Xml::Serialization::XmlAttributeEventHandler::Invoke)> {
  static const MethodInfo* get() {
    static auto* sender = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* e = &::il2cpp_utils::GetClassFromName("System.Xml.Serialization", "XmlAttributeEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Serialization::XmlAttributeEventHandler*), "Invoke", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sender, e});
  }
};
